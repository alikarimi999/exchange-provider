// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package contracts

import (
	"errors"
	"math/big"
	"strings"

	ethereum "github.com/ethereum/go-ethereum"
	"github.com/ethereum/go-ethereum/accounts/abi"
	"exchange-provider/pkg/bind"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
	"github.com/ethereum/go-ethereum/event"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = errors.New
	_ = big.NewInt
	_ = strings.NewReader
	_ = ethereum.NotFound
	_ = bind.Bind
	_ = common.Big1
	_ = types.BloomLookup
	_ = event.NewSubscription
)

// IExchangeAggregatorswapData is an auto generated low-level Go binding around an user-defined struct.
type IExchangeAggregatorswapData struct {
	Input       common.Address
	TotalAmount *big.Int
	FeeAmount   *big.Int
	Swapper     common.Address
	Data        []byte
	Sender      common.Address
}

// IPriceAggregatorexistsIn is an auto generated low-level Go binding around an user-defined struct.
type IPriceAggregatorexistsIn struct {
	Index           *big.Int
	T0              common.Address
	T1              common.Address
	Provider        common.Address
	ProviderVersion uint8
	Min0            *big.Int
	Min1            *big.Int
}

// IPriceAggregatorexistsOut is an auto generated low-level Go binding around an user-defined struct.
type IPriceAggregatorexistsOut struct {
	Index  *big.Int
	Exists bool
}

// IPriceAggregatorpriceIn is an auto generated low-level Go binding around an user-defined struct.
type IPriceAggregatorpriceIn struct {
	Index           *big.Int
	T0              common.Address
	T1              common.Address
	Provider        common.Address
	ProviderVersion uint8
}

// IPriceAggregatorpriceOut is an auto generated low-level Go binding around an user-defined struct.
type IPriceAggregatorpriceOut struct {
	Index *big.Int
	Price *big.Int
	Fee   *big.Int
}

// ContractsMetaData contains all meta data concerning the Contracts contract.
var ContractsMetaData = &bind.MetaData{
	ABI: "[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_WETH\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_priceAggregator\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"WETH\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"balanceETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"balanceToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_priceAggregator\",\"type\":\"address\"}],\"name\":\"changePriceAggregator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"t0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"t1\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"providerVersion\",\"type\":\"uint8\"}],\"internalType\":\"structIPriceAggregator.priceIn[]\",\"name\":\"inputs\",\"type\":\"tuple[]\"}],\"name\":\"getPrices\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"}],\"internalType\":\"structIPriceAggregator.priceOut[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"t0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"t1\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"providerVersion\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"min0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"min1\",\"type\":\"uint256\"}],\"internalType\":\"structIPriceAggregator.existsIn[]\",\"name\":\"inputs\",\"type\":\"tuple[]\"}],\"name\":\"poolsExists\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"exists\",\"type\":\"bool\"}],\"internalType\":\"structIPriceAggregator.existsOut[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceAggregator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"input\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"totalAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"swapper\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"internalType\":\"structIExchangeAggregator.swapData\",\"name\":\"data\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"sig\",\"type\":\"bytes\"}],\"name\":\"swap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"input\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"totalAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"swapper\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"internalType\":\"structIExchangeAggregator.swapData\",\"name\":\"data\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"sig\",\"type\":\"bytes\"}],\"name\":\"swapNativeIn\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawETH\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]",
	Bin: "0x60806040523480156200001157600080fd5b50604051620033e9380380620033e9833981810160405281019062000037919062000217565b620000576200004b620000e160201b60201c565b620000e960201b60201c565b81600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050506200025e565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620001df82620001b2565b9050919050565b620001f181620001d2565b8114620001fd57600080fd5b50565b6000815190506200021181620001e6565b92915050565b60008060408385031215620002315762000230620001ad565b5b6000620002418582860162000200565b9250506020620002548582860162000200565b9150509250929050565b61317b806200026e6000396000f3fe6080604052600436106100dd5760003560e01c80636c45125e1161007f578063ad5c464811610059578063ad5c464814610289578063ea8650c5146102b4578063ecbdbb32146102f1578063f2fde38b1461031c576100dd565b80636c45125e1461021e578063715018a6146102475780638da5cb5b1461025e576100dd565b80633078fff5116100bb5780633078fff5146101715780633d157a461461019c5780634782f779146101d95780635d86acf114610202576100dd565b806301e33667146100e2578063045990121461010b5780632906799b14610148575b600080fd5b3480156100ee57600080fd5b5061010960048036038101906101049190611628565b610345565b005b34801561011757600080fd5b50610132600480360381019061012d919061167b565b61035d565b60405161013f91906116b7565b60405180910390f35b34801561015457600080fd5b5061016f600480360381019061016a919061175b565b6103e0565b005b34801561017d57600080fd5b506101866105ae565b60405161019391906117e6565b60405180910390f35b3480156101a857600080fd5b506101c360048036038101906101be9190611a42565b6105d4565b6040516101d09190611b93565b60405180910390f35b3480156101e557600080fd5b5061020060048036038101906101fb9190611bb5565b61067e565b005b61021c6004803603810190610217919061175b565b610694565b005b34801561022a57600080fd5b506102456004803603810190610240919061167b565b610859565b005b34801561025357600080fd5b5061025c6108a5565b005b34801561026a57600080fd5b506102736108b9565b60405161028091906117e6565b60405180910390f35b34801561029557600080fd5b5061029e6108e2565b6040516102ab91906117e6565b60405180910390f35b3480156102c057600080fd5b506102db60048036038101906102d69190611d44565b610908565b6040516102e89190611e9c565b60405180910390f35b3480156102fd57600080fd5b506103066109b2565b60405161031391906116b7565b60405180910390f35b34801561032857600080fd5b50610343600480360381019061033e919061167b565b6109ba565b005b61034d610a3d565b610358838383610abb565b505050565b60008173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161039891906117e6565b602060405180830381865afa1580156103b5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103d99190611ed3565b9050919050565b3373ffffffffffffffffffffffffffffffffffffffff168360a001602081019061040a919061167b565b73ffffffffffffffffffffffffffffffffffffffff1614610460576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161045790611f5d565b60405180910390fd5b6104d561046b6108b9565b8460405160200161047c9190612134565b60405160208183030381529060405284848080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050610bf1565b6104f78360000160208101906104eb919061167b565b33308660200135610d5d565b61053983600001602081019061050d919061167b565b846060016020810190610520919061167b565b856040013586602001356105349190612185565b610e96565b6105a983606001602081019061054f919061167b565b600085806080019061056191906121c8565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050610fcc565b505050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6060600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16633d157a46836040518263ffffffff1660e01b81526004016106319190612377565b600060405180830381865afa15801561064e573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525081019061067791906124d8565b9050919050565b610686610a3d565b61069082826110e3565b5050565b3373ffffffffffffffffffffffffffffffffffffffff168360a00160208101906106be919061167b565b73ffffffffffffffffffffffffffffffffffffffff1614610714576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161070b90611f5d565b60405180910390fd5b61078961071f6108b9565b846040516020016107309190612134565b60405160208183030381529060405284848080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050610bf1565b82602001353410156107d0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107c79061256d565b60405180910390fd5b60008360400135346107e29190612185565b90506108538460600160208101906107fa919061167b565b8286806080019061080b91906121c8565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050610fcc565b50505050565b610861610a3d565b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6108ad610a3d565b6108b760006111e3565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6060600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ea8650c5836040518263ffffffff1660e01b815260040161096591906126a4565b600060405180830381865afa158015610982573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906109ab9190612819565b9050919050565b600047905090565b6109c2610a3d565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610a31576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a28906128d4565b60405180910390fd5b610a3a816111e3565b50565b610a456112a7565b73ffffffffffffffffffffffffffffffffffffffff16610a636108b9565b73ffffffffffffffffffffffffffffffffffffffff1614610ab9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ab090612940565b60405180910390fd5b565b6000808473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb8585604051602401610aed929190612960565b6040516020818303038152906040529060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050604051610b3b91906129fa565b6000604051808303816000865af19150503d8060008114610b78576040519150601f19603f3d011682016040523d82523d6000602084013e610b7d565b606091505b5091509150818015610bab5750600081511480610baa575080806020019051810190610ba99190612a11565b5b5b610bea576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610be190612ab0565b60405180910390fd5b5050505050565b601b60f81b81604081518110610c0a57610c09612ad0565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508273ffffffffffffffffffffffffffffffffffffffff16610c6b82610c5d856112af565b6112c090919063ffffffff16565b73ffffffffffffffffffffffffffffffffffffffff160315610d5857601c60f81b81604081518110610ca057610c9f612ad0565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508273ffffffffffffffffffffffffffffffffffffffff16610d0182610cf3856112af565b6112c090919063ffffffff16565b73ffffffffffffffffffffffffffffffffffffffff1614610d57576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d4e90612b4b565b60405180910390fd5b5b505050565b6000808573ffffffffffffffffffffffffffffffffffffffff166323b872dd868686604051602401610d9193929190612b6b565b6040516020818303038152906040529060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050604051610ddf91906129fa565b6000604051808303816000865af19150503d8060008114610e1c576040519150601f19603f3d011682016040523d82523d6000602084013e610e21565b606091505b5091509150818015610e4f5750600081511480610e4e575080806020019051810190610e4d9190612a11565b5b5b610e8e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e8590612c14565b60405180910390fd5b505050505050565b6000808473ffffffffffffffffffffffffffffffffffffffff1663095ea7b38585604051602401610ec8929190612960565b6040516020818303038152906040529060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050604051610f1691906129fa565b6000604051808303816000865af19150503d8060008114610f53576040519150601f19603f3d011682016040523d82523d6000602084013e610f58565b606091505b5091509150818015610f865750600081511480610f85575080806020019051810190610f849190612a11565b5b5b610fc5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fbc90612ca6565b60405180910390fd5b5050505050565b6000808473ffffffffffffffffffffffffffffffffffffffff168484604051610ff591906129fa565b60006040518083038185875af1925050503d8060008114611032576040519150601f19603f3d011682016040523d82523d6000602084013e611037565b606091505b5091509150816110dc57604481511015611086576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161107d90612d38565b60405180910390fd5b600481019050808060200190518101906110a09190612dfe565b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110d39190612e8b565b60405180910390fd5b5050505050565b60008273ffffffffffffffffffffffffffffffffffffffff1682600067ffffffffffffffff81111561111857611117611812565b5b6040519080825280601f01601f19166020018201604052801561114a5781602001600182028036833780820191505090505b5060405161115891906129fa565b60006040518083038185875af1925050503d8060008114611195576040519150601f19603f3d011682016040523d82523d6000602084013e61119a565b606091505b50509050806111de576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111d590612f1f565b60405180910390fd5b505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b600081805190602001209050919050565b60008060006112cf85856112e7565b915091506112dc81611338565b819250505092915050565b60008060418351036113285760008060006020860151925060408601519150606086015160001a905061131c8782858561149e565b94509450505050611331565b60006002915091505b9250929050565b6000600481111561134c5761134b612f3f565b5b81600481111561135f5761135e612f3f565b5b031561149b576001600481111561137957611378612f3f565b5b81600481111561138c5761138b612f3f565b5b036113cc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113c390612fba565b60405180910390fd5b600260048111156113e0576113df612f3f565b5b8160048111156113f3576113f2612f3f565b5b03611433576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161142a90613026565b60405180910390fd5b6003600481111561144757611446612f3f565b5b81600481111561145a57611459612f3f565b5b0361149a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611491906130b8565b60405180910390fd5b5b50565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08360001c11156114d9576000600391509150611577565b6000600187878787604051600081526020016040526040516114fe9493929190613100565b6020604051602081039080840390855afa158015611520573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361156e57600060019250925050611577565b80600092509250505b94509492505050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006115bf82611594565b9050919050565b6115cf816115b4565b81146115da57600080fd5b50565b6000813590506115ec816115c6565b92915050565b6000819050919050565b611605816115f2565b811461161057600080fd5b50565b600081359050611622816115fc565b92915050565b6000806000606084860312156116415761164061158a565b5b600061164f868287016115dd565b9350506020611660868287016115dd565b925050604061167186828701611613565b9150509250925092565b6000602082840312156116915761169061158a565b5b600061169f848285016115dd565b91505092915050565b6116b1816115f2565b82525050565b60006020820190506116cc60008301846116a8565b92915050565b600080fd5b600060c082840312156116ed576116ec6116d2565b5b81905092915050565b600080fd5b600080fd5b600080fd5b60008083601f84011261171b5761171a6116f6565b5b8235905067ffffffffffffffff811115611738576117376116fb565b5b60208301915083600182028301111561175457611753611700565b5b9250929050565b6000806000604084860312156117745761177361158a565b5b600084013567ffffffffffffffff8111156117925761179161158f565b5b61179e868287016116d7565b935050602084013567ffffffffffffffff8111156117bf576117be61158f565b5b6117cb86828701611705565b92509250509250925092565b6117e0816115b4565b82525050565b60006020820190506117fb60008301846117d7565b92915050565b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61184a82611801565b810181811067ffffffffffffffff8211171561186957611868611812565b5b80604052505050565b600061187c611580565b90506118888282611841565b919050565b600067ffffffffffffffff8211156118a8576118a7611812565b5b602082029050602081019050919050565b600080fd5b600060ff82169050919050565b6118d4816118be565b81146118df57600080fd5b50565b6000813590506118f1816118cb565b92915050565b600060e0828403121561190d5761190c6118b9565b5b61191760e0611872565b9050600061192784828501611613565b600083015250602061193b848285016115dd565b602083015250604061194f848285016115dd565b6040830152506060611963848285016115dd565b6060830152506080611977848285016118e2565b60808301525060a061198b84828501611613565b60a08301525060c061199f84828501611613565b60c08301525092915050565b60006119be6119b98461188d565b611872565b90508083825260208201905060e084028301858111156119e1576119e0611700565b5b835b81811015611a0a57806119f688826118f7565b84526020840193505060e0810190506119e3565b5050509392505050565b600082601f830112611a2957611a286116f6565b5b8135611a398482602086016119ab565b91505092915050565b600060208284031215611a5857611a5761158a565b5b600082013567ffffffffffffffff811115611a7657611a7561158f565b5b611a8284828501611a14565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b611ac0816115f2565b82525050565b60008115159050919050565b611adb81611ac6565b82525050565b604082016000820151611af76000850182611ab7565b506020820151611b0a6020850182611ad2565b50505050565b6000611b1c8383611ae1565b60408301905092915050565b6000602082019050919050565b6000611b4082611a8b565b611b4a8185611a96565b9350611b5583611aa7565b8060005b83811015611b86578151611b6d8882611b10565b9750611b7883611b28565b925050600181019050611b59565b5085935050505092915050565b60006020820190508181036000830152611bad8184611b35565b905092915050565b60008060408385031215611bcc57611bcb61158a565b5b6000611bda858286016115dd565b9250506020611beb85828601611613565b9150509250929050565b600067ffffffffffffffff821115611c1057611c0f611812565b5b602082029050602081019050919050565b600060a08284031215611c3757611c366118b9565b5b611c4160a0611872565b90506000611c5184828501611613565b6000830152506020611c65848285016115dd565b6020830152506040611c79848285016115dd565b6040830152506060611c8d848285016115dd565b6060830152506080611ca1848285016118e2565b60808301525092915050565b6000611cc0611cbb84611bf5565b611872565b90508083825260208201905060a08402830185811115611ce357611ce2611700565b5b835b81811015611d0c5780611cf88882611c21565b84526020840193505060a081019050611ce5565b5050509392505050565b600082601f830112611d2b57611d2a6116f6565b5b8135611d3b848260208601611cad565b91505092915050565b600060208284031215611d5a57611d5961158a565b5b600082013567ffffffffffffffff811115611d7857611d7761158f565b5b611d8484828501611d16565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600062ffffff82169050919050565b611dd181611db9565b82525050565b606082016000820151611ded6000850182611ab7565b506020820151611e006020850182611ab7565b506040820151611e136040850182611dc8565b50505050565b6000611e258383611dd7565b60608301905092915050565b6000602082019050919050565b6000611e4982611d8d565b611e538185611d98565b9350611e5e83611da9565b8060005b83811015611e8f578151611e768882611e19565b9750611e8183611e31565b925050600181019050611e62565b5085935050505092915050565b60006020820190508181036000830152611eb68184611e3e565b905092915050565b600081519050611ecd816115fc565b92915050565b600060208284031215611ee957611ee861158a565b5b6000611ef784828501611ebe565b91505092915050565b600082825260208201905092915050565b7f696e76616c65642073656e646572000000000000000000000000000000000000600082015250565b6000611f47600e83611f00565b9150611f5282611f11565b602082019050919050565b60006020820190508181036000830152611f7681611f3a565b9050919050565b6000611f8c60208401846115dd565b905092915050565b611f9d816115b4565b82525050565b6000611fb26020840184611613565b905092915050565b600080fd5b600080fd5b600080fd5b60008083356001602003843603038112611fe657611fe5611fc4565b5b83810192508235915060208301925067ffffffffffffffff82111561200e5761200d611fba565b5b60018202360383131561202457612023611fbf565b5b509250929050565b600082825260208201905092915050565b82818337600083830152505050565b6000612058838561202c565b935061206583858461203d565b61206e83611801565b840190509392505050565b600060c0830161208c6000840184611f7d565b6120996000860182611f94565b506120a76020840184611fa3565b6120b46020860182611ab7565b506120c26040840184611fa3565b6120cf6040860182611ab7565b506120dd6060840184611f7d565b6120ea6060860182611f94565b506120f86080840184611fc9565b858303608087015261210b83828461204c565b9250505061211c60a0840184611f7d565b61212960a0860182611f94565b508091505092915050565b6000602082019050818103600083015261214e8184612079565b905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000612190826115f2565b915061219b836115f2565b92508282039050818111156121b3576121b2612156565b5b92915050565b600080fd5b600080fd5b600080fd5b600080833560016020038436030381126121e5576121e46121b9565b5b80840192508235915067ffffffffffffffff821115612207576122066121be565b5b602083019250600182023603831315612223576122226121c3565b5b509250929050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b612260816118be565b82525050565b60e08201600082015161227c6000850182611ab7565b50602082015161228f6020850182611f94565b5060408201516122a26040850182611f94565b5060608201516122b56060850182611f94565b5060808201516122c86080850182612257565b5060a08201516122db60a0850182611ab7565b5060c08201516122ee60c0850182611ab7565b50505050565b60006123008383612266565b60e08301905092915050565b6000602082019050919050565b60006123248261222b565b61232e8185612236565b935061233983612247565b8060005b8381101561236a57815161235188826122f4565b975061235c8361230c565b92505060018101905061233d565b5085935050505092915050565b600060208201905081810360008301526123918184612319565b905092915050565b600067ffffffffffffffff8211156123b4576123b3611812565b5b602082029050602081019050919050565b6123ce81611ac6565b81146123d957600080fd5b50565b6000815190506123eb816123c5565b92915050565b600060408284031215612407576124066118b9565b5b6124116040611872565b9050600061242184828501611ebe565b6000830152506020612435848285016123dc565b60208301525092915050565b600061245461244f84612399565b611872565b9050808382526020820190506040840283018581111561247757612476611700565b5b835b818110156124a0578061248c88826123f1565b845260208401935050604081019050612479565b5050509392505050565b600082601f8301126124bf576124be6116f6565b5b81516124cf848260208601612441565b91505092915050565b6000602082840312156124ee576124ed61158a565b5b600082015167ffffffffffffffff81111561250c5761250b61158f565b5b612518848285016124aa565b91505092915050565b7f696e73756666696369656e7420696e70757420616d6f756e7400000000000000600082015250565b6000612557601983611f00565b915061256282612521565b602082019050919050565b600060208201905081810360008301526125868161254a565b9050919050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b60a0820160008201516125cf6000850182611ab7565b5060208201516125e26020850182611f94565b5060408201516125f56040850182611f94565b5060608201516126086060850182611f94565b50608082015161261b6080850182612257565b50505050565b600061262d83836125b9565b60a08301905092915050565b6000602082019050919050565b60006126518261258d565b61265b8185612598565b9350612666836125a9565b8060005b8381101561269757815161267e8882612621565b975061268983612639565b92505060018101905061266a565b5085935050505092915050565b600060208201905081810360008301526126be8184612646565b905092915050565b600067ffffffffffffffff8211156126e1576126e0611812565b5b602082029050602081019050919050565b6126fb81611db9565b811461270657600080fd5b50565b600081519050612718816126f2565b92915050565b600060608284031215612734576127336118b9565b5b61273e6060611872565b9050600061274e84828501611ebe565b600083015250602061276284828501611ebe565b602083015250604061277684828501612709565b60408301525092915050565b6000612795612790846126c6565b611872565b905080838252602082019050606084028301858111156127b8576127b7611700565b5b835b818110156127e157806127cd888261271e565b8452602084019350506060810190506127ba565b5050509392505050565b600082601f830112612800576127ff6116f6565b5b8151612810848260208601612782565b91505092915050565b60006020828403121561282f5761282e61158a565b5b600082015167ffffffffffffffff81111561284d5761284c61158f565b5b612859848285016127eb565b91505092915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b60006128be602683611f00565b91506128c982612862565b604082019050919050565b600060208201905081810360008301526128ed816128b1565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b600061292a602083611f00565b9150612935826128f4565b602082019050919050565b600060208201905081810360008301526129598161291d565b9050919050565b600060408201905061297560008301856117d7565b61298260208301846116a8565b9392505050565b600081519050919050565b600081905092915050565b60005b838110156129bd5780820151818401526020810190506129a2565b60008484015250505050565b60006129d482612989565b6129de8185612994565b93506129ee81856020860161299f565b80840191505092915050565b6000612a0682846129c9565b915081905092915050565b600060208284031215612a2757612a2661158a565b5b6000612a35848285016123dc565b91505092915050565b7f45786368616e676541676772656761746f723a3a5472616e7366657248656c7060008201527f65723a736166655472616e736665720000000000000000000000000000000000602082015250565b6000612a9a602f83611f00565b9150612aa582612a3e565b604082019050919050565b60006020820190508181036000830152612ac981612a8d565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f646174612074616d706572656400000000000000000000000000000000000000600082015250565b6000612b35600d83611f00565b9150612b4082612aff565b602082019050919050565b60006020820190508181036000830152612b6481612b28565b9050919050565b6000606082019050612b8060008301866117d7565b612b8d60208301856117d7565b612b9a60408301846116a8565b949350505050565b7f45786368616e676541676772656761746f723a3a5472616e7366657248656c7060008201527f65723a736166655472616e7366657246726f6d00000000000000000000000000602082015250565b6000612bfe603383611f00565b9150612c0982612ba2565b604082019050919050565b60006020820190508181036000830152612c2d81612bf1565b9050919050565b7f45786368616e676541676772656761746f723a3a5472616e7366657248656c7060008201527f65723a73616665417070726f7665000000000000000000000000000000000000602082015250565b6000612c90602e83611f00565b9150612c9b82612c34565b604082019050919050565b60006020820190508181036000830152612cbf81612c83565b9050919050565b7f45786368616e676541676772656761746f723a3a5361666543616c6c65723a7360008201527f61666543616c6c00000000000000000000000000000000000000000000000000602082015250565b6000612d22602783611f00565b9150612d2d82612cc6565b604082019050919050565b60006020820190508181036000830152612d5181612d15565b9050919050565b600080fd5b600067ffffffffffffffff821115612d7857612d77611812565b5b612d8182611801565b9050602081019050919050565b6000612da1612d9c84612d5d565b611872565b905082815260208101848484011115612dbd57612dbc612d58565b5b612dc884828561299f565b509392505050565b600082601f830112612de557612de46116f6565b5b8151612df5848260208601612d8e565b91505092915050565b600060208284031215612e1457612e1361158a565b5b600082015167ffffffffffffffff811115612e3257612e3161158f565b5b612e3e84828501612dd0565b91505092915050565b600081519050919050565b6000612e5d82612e47565b612e678185611f00565b9350612e7781856020860161299f565b612e8081611801565b840191505092915050565b60006020820190508181036000830152612ea58184612e52565b905092915050565b7f45786368616e676541676772656761746f723a3a5472616e7366657248656c7060008201527f65723a736166655472616e736665724554480000000000000000000000000000602082015250565b6000612f09603283611f00565b9150612f1482612ead565b604082019050919050565b60006020820190508181036000830152612f3881612efc565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f45434453413a20696e76616c6964207369676e61747572650000000000000000600082015250565b6000612fa4601883611f00565b9150612faf82612f6e565b602082019050919050565b60006020820190508181036000830152612fd381612f97565b9050919050565b7f45434453413a20696e76616c6964207369676e6174757265206c656e67746800600082015250565b6000613010601f83611f00565b915061301b82612fda565b602082019050919050565b6000602082019050818103600083015261303f81613003565b9050919050565b7f45434453413a20696e76616c6964207369676e6174757265202773272076616c60008201527f7565000000000000000000000000000000000000000000000000000000000000602082015250565b60006130a2602283611f00565b91506130ad82613046565b604082019050919050565b600060208201905081810360008301526130d181613095565b9050919050565b6000819050919050565b6130eb816130d8565b82525050565b6130fa816118be565b82525050565b600060808201905061311560008301876130e2565b61312260208301866130f1565b61312f60408301856130e2565b61313c60608301846130e2565b9594505050505056fea264697066735822122075a7a792868fd5ccc62b5f86cca101b97fbd05e01b5d15ae82fc7d9d3720282e64736f6c63430008110033",
}

// ContractsABI is the input ABI used to generate the binding from.
// Deprecated: Use ContractsMetaData.ABI instead.
var ContractsABI = ContractsMetaData.ABI

// ContractsBin is the compiled bytecode used for deploying new contracts.
// Deprecated: Use ContractsMetaData.Bin instead.
var ContractsBin = ContractsMetaData.Bin

// DeployContracts deploys a new Ethereum contract, binding an instance of Contracts to it.
func DeployContracts(auth *bind.TransactOpts, backend bind.ContractBackend, _WETH common.Address, _priceAggregator common.Address) (common.Address, *types.Transaction, *Contracts, error) {
	parsed, err := ContractsMetaData.GetAbi()
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	if parsed == nil {
		return common.Address{}, nil, nil, errors.New("GetABI returned nil")
	}

	address, tx, contract, err := bind.DeployContract(auth, *parsed, common.FromHex(ContractsBin), backend, _WETH, _priceAggregator)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &Contracts{ContractsCaller: ContractsCaller{contract: contract}, ContractsTransactor: ContractsTransactor{contract: contract}, ContractsFilterer: ContractsFilterer{contract: contract}}, nil
}

// Contracts is an auto generated Go binding around an Ethereum contract.
type Contracts struct {
	ContractsCaller     // Read-only binding to the contract
	ContractsTransactor // Write-only binding to the contract
	ContractsFilterer   // Log filterer for contract events
}

// ContractsCaller is an auto generated read-only Go binding around an Ethereum contract.
type ContractsCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ContractsTransactor is an auto generated write-only Go binding around an Ethereum contract.
type ContractsTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ContractsFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type ContractsFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ContractsSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type ContractsSession struct {
	Contract     *Contracts        // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// ContractsCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type ContractsCallerSession struct {
	Contract *ContractsCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts    // Call options to use throughout this session
}

// ContractsTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type ContractsTransactorSession struct {
	Contract     *ContractsTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts    // Transaction auth options to use throughout this session
}

// ContractsRaw is an auto generated low-level Go binding around an Ethereum contract.
type ContractsRaw struct {
	Contract *Contracts // Generic contract binding to access the raw methods on
}

// ContractsCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type ContractsCallerRaw struct {
	Contract *ContractsCaller // Generic read-only contract binding to access the raw methods on
}

// ContractsTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type ContractsTransactorRaw struct {
	Contract *ContractsTransactor // Generic write-only contract binding to access the raw methods on
}

// NewContracts creates a new instance of Contracts, bound to a specific deployed contract.
func NewContracts(address common.Address, backend bind.ContractBackend) (*Contracts, error) {
	contract, err := bindContracts(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &Contracts{ContractsCaller: ContractsCaller{contract: contract}, ContractsTransactor: ContractsTransactor{contract: contract}, ContractsFilterer: ContractsFilterer{contract: contract}}, nil
}

// NewContractsCaller creates a new read-only instance of Contracts, bound to a specific deployed contract.
func NewContractsCaller(address common.Address, caller bind.ContractCaller) (*ContractsCaller, error) {
	contract, err := bindContracts(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &ContractsCaller{contract: contract}, nil
}

// NewContractsTransactor creates a new write-only instance of Contracts, bound to a specific deployed contract.
func NewContractsTransactor(address common.Address, transactor bind.ContractTransactor) (*ContractsTransactor, error) {
	contract, err := bindContracts(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &ContractsTransactor{contract: contract}, nil
}

// NewContractsFilterer creates a new log filterer instance of Contracts, bound to a specific deployed contract.
func NewContractsFilterer(address common.Address, filterer bind.ContractFilterer) (*ContractsFilterer, error) {
	contract, err := bindContracts(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &ContractsFilterer{contract: contract}, nil
}

// bindContracts binds a generic wrapper to an already deployed contract.
func bindContracts(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(ContractsABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Contracts *ContractsRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _Contracts.Contract.ContractsCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Contracts *ContractsRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Contracts.Contract.ContractsTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Contracts *ContractsRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _Contracts.Contract.ContractsTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Contracts *ContractsCallerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _Contracts.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Contracts *ContractsTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Contracts.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Contracts *ContractsTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _Contracts.Contract.contract.Transact(opts, method, params...)
}

// WETH is a free data retrieval call binding the contract method 0xad5c4648.
//
// Solidity: function WETH() view returns(address)
func (_Contracts *ContractsCaller) WETH(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _Contracts.contract.Call(opts, &out, "WETH")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// WETH is a free data retrieval call binding the contract method 0xad5c4648.
//
// Solidity: function WETH() view returns(address)
func (_Contracts *ContractsSession) WETH() (common.Address, error) {
	return _Contracts.Contract.WETH(&_Contracts.CallOpts)
}

// WETH is a free data retrieval call binding the contract method 0xad5c4648.
//
// Solidity: function WETH() view returns(address)
func (_Contracts *ContractsCallerSession) WETH() (common.Address, error) {
	return _Contracts.Contract.WETH(&_Contracts.CallOpts)
}

// BalanceETH is a free data retrieval call binding the contract method 0xecbdbb32.
//
// Solidity: function balanceETH() view returns(uint256)
func (_Contracts *ContractsCaller) BalanceETH(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _Contracts.contract.Call(opts, &out, "balanceETH")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// BalanceETH is a free data retrieval call binding the contract method 0xecbdbb32.
//
// Solidity: function balanceETH() view returns(uint256)
func (_Contracts *ContractsSession) BalanceETH() (*big.Int, error) {
	return _Contracts.Contract.BalanceETH(&_Contracts.CallOpts)
}

// BalanceETH is a free data retrieval call binding the contract method 0xecbdbb32.
//
// Solidity: function balanceETH() view returns(uint256)
func (_Contracts *ContractsCallerSession) BalanceETH() (*big.Int, error) {
	return _Contracts.Contract.BalanceETH(&_Contracts.CallOpts)
}

// BalanceToken is a free data retrieval call binding the contract method 0x04599012.
//
// Solidity: function balanceToken(address token) view returns(uint256)
func (_Contracts *ContractsCaller) BalanceToken(opts *bind.CallOpts, token common.Address) (*big.Int, error) {
	var out []interface{}
	err := _Contracts.contract.Call(opts, &out, "balanceToken", token)

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// BalanceToken is a free data retrieval call binding the contract method 0x04599012.
//
// Solidity: function balanceToken(address token) view returns(uint256)
func (_Contracts *ContractsSession) BalanceToken(token common.Address) (*big.Int, error) {
	return _Contracts.Contract.BalanceToken(&_Contracts.CallOpts, token)
}

// BalanceToken is a free data retrieval call binding the contract method 0x04599012.
//
// Solidity: function balanceToken(address token) view returns(uint256)
func (_Contracts *ContractsCallerSession) BalanceToken(token common.Address) (*big.Int, error) {
	return _Contracts.Contract.BalanceToken(&_Contracts.CallOpts, token)
}

// GetPrices is a free data retrieval call binding the contract method 0xea8650c5.
//
// Solidity: function getPrices((uint256,address,address,address,uint8)[] inputs) view returns((uint256,uint256,uint24)[])
func (_Contracts *ContractsCaller) GetPrices(opts *bind.CallOpts, inputs []IPriceAggregatorpriceIn) ([]IPriceAggregatorpriceOut, error) {
	var out []interface{}
	err := _Contracts.contract.Call(opts, &out, "getPrices", inputs)

	if err != nil {
		return *new([]IPriceAggregatorpriceOut), err
	}

	out0 := *abi.ConvertType(out[0], new([]IPriceAggregatorpriceOut)).(*[]IPriceAggregatorpriceOut)

	return out0, err

}

// GetPrices is a free data retrieval call binding the contract method 0xea8650c5.
//
// Solidity: function getPrices((uint256,address,address,address,uint8)[] inputs) view returns((uint256,uint256,uint24)[])
func (_Contracts *ContractsSession) GetPrices(inputs []IPriceAggregatorpriceIn) ([]IPriceAggregatorpriceOut, error) {
	return _Contracts.Contract.GetPrices(&_Contracts.CallOpts, inputs)
}

// GetPrices is a free data retrieval call binding the contract method 0xea8650c5.
//
// Solidity: function getPrices((uint256,address,address,address,uint8)[] inputs) view returns((uint256,uint256,uint24)[])
func (_Contracts *ContractsCallerSession) GetPrices(inputs []IPriceAggregatorpriceIn) ([]IPriceAggregatorpriceOut, error) {
	return _Contracts.Contract.GetPrices(&_Contracts.CallOpts, inputs)
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() view returns(address)
func (_Contracts *ContractsCaller) Owner(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _Contracts.contract.Call(opts, &out, "owner")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() view returns(address)
func (_Contracts *ContractsSession) Owner() (common.Address, error) {
	return _Contracts.Contract.Owner(&_Contracts.CallOpts)
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() view returns(address)
func (_Contracts *ContractsCallerSession) Owner() (common.Address, error) {
	return _Contracts.Contract.Owner(&_Contracts.CallOpts)
}

// PoolsExists is a free data retrieval call binding the contract method 0x3d157a46.
//
// Solidity: function poolsExists((uint256,address,address,address,uint8,uint256,uint256)[] inputs) view returns((uint256,bool)[])
func (_Contracts *ContractsCaller) PoolsExists(opts *bind.CallOpts, inputs []IPriceAggregatorexistsIn) ([]IPriceAggregatorexistsOut, error) {
	var out []interface{}
	err := _Contracts.contract.Call(opts, &out, "poolsExists", inputs)

	if err != nil {
		return *new([]IPriceAggregatorexistsOut), err
	}

	out0 := *abi.ConvertType(out[0], new([]IPriceAggregatorexistsOut)).(*[]IPriceAggregatorexistsOut)

	return out0, err

}

// PoolsExists is a free data retrieval call binding the contract method 0x3d157a46.
//
// Solidity: function poolsExists((uint256,address,address,address,uint8,uint256,uint256)[] inputs) view returns((uint256,bool)[])
func (_Contracts *ContractsSession) PoolsExists(inputs []IPriceAggregatorexistsIn) ([]IPriceAggregatorexistsOut, error) {
	return _Contracts.Contract.PoolsExists(&_Contracts.CallOpts, inputs)
}

// PoolsExists is a free data retrieval call binding the contract method 0x3d157a46.
//
// Solidity: function poolsExists((uint256,address,address,address,uint8,uint256,uint256)[] inputs) view returns((uint256,bool)[])
func (_Contracts *ContractsCallerSession) PoolsExists(inputs []IPriceAggregatorexistsIn) ([]IPriceAggregatorexistsOut, error) {
	return _Contracts.Contract.PoolsExists(&_Contracts.CallOpts, inputs)
}

// PriceAggregator is a free data retrieval call binding the contract method 0x3078fff5.
//
// Solidity: function priceAggregator() view returns(address)
func (_Contracts *ContractsCaller) PriceAggregator(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _Contracts.contract.Call(opts, &out, "priceAggregator")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// PriceAggregator is a free data retrieval call binding the contract method 0x3078fff5.
//
// Solidity: function priceAggregator() view returns(address)
func (_Contracts *ContractsSession) PriceAggregator() (common.Address, error) {
	return _Contracts.Contract.PriceAggregator(&_Contracts.CallOpts)
}

// PriceAggregator is a free data retrieval call binding the contract method 0x3078fff5.
//
// Solidity: function priceAggregator() view returns(address)
func (_Contracts *ContractsCallerSession) PriceAggregator() (common.Address, error) {
	return _Contracts.Contract.PriceAggregator(&_Contracts.CallOpts)
}

// ChangePriceAggregator is a paid mutator transaction binding the contract method 0x6c45125e.
//
// Solidity: function changePriceAggregator(address _priceAggregator) returns()
func (_Contracts *ContractsTransactor) ChangePriceAggregator(opts *bind.TransactOpts, _priceAggregator common.Address) (*types.Transaction, error) {
	return _Contracts.contract.Transact(opts, "changePriceAggregator", _priceAggregator)
}

// ChangePriceAggregator is a paid mutator transaction binding the contract method 0x6c45125e.
//
// Solidity: function changePriceAggregator(address _priceAggregator) returns()
func (_Contracts *ContractsSession) ChangePriceAggregator(_priceAggregator common.Address) (*types.Transaction, error) {
	return _Contracts.Contract.ChangePriceAggregator(&_Contracts.TransactOpts, _priceAggregator)
}

// ChangePriceAggregator is a paid mutator transaction binding the contract method 0x6c45125e.
//
// Solidity: function changePriceAggregator(address _priceAggregator) returns()
func (_Contracts *ContractsTransactorSession) ChangePriceAggregator(_priceAggregator common.Address) (*types.Transaction, error) {
	return _Contracts.Contract.ChangePriceAggregator(&_Contracts.TransactOpts, _priceAggregator)
}

// RenounceOwnership is a paid mutator transaction binding the contract method 0x715018a6.
//
// Solidity: function renounceOwnership() returns()
func (_Contracts *ContractsTransactor) RenounceOwnership(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Contracts.contract.Transact(opts, "renounceOwnership")
}

// RenounceOwnership is a paid mutator transaction binding the contract method 0x715018a6.
//
// Solidity: function renounceOwnership() returns()
func (_Contracts *ContractsSession) RenounceOwnership() (*types.Transaction, error) {
	return _Contracts.Contract.RenounceOwnership(&_Contracts.TransactOpts)
}

// RenounceOwnership is a paid mutator transaction binding the contract method 0x715018a6.
//
// Solidity: function renounceOwnership() returns()
func (_Contracts *ContractsTransactorSession) RenounceOwnership() (*types.Transaction, error) {
	return _Contracts.Contract.RenounceOwnership(&_Contracts.TransactOpts)
}

// Swap is a paid mutator transaction binding the contract method 0x2906799b.
//
// Solidity: function swap((address,uint256,uint256,address,bytes,address) data, bytes sig) returns()
func (_Contracts *ContractsTransactor) Swap(opts *bind.TransactOpts, data IExchangeAggregatorswapData, sig []byte) (*types.Transaction, error) {
	return _Contracts.contract.Transact(opts, "swap", data, sig)
}

// Swap is a paid mutator transaction binding the contract method 0x2906799b.
//
// Solidity: function swap((address,uint256,uint256,address,bytes,address) data, bytes sig) returns()
func (_Contracts *ContractsSession) Swap(data IExchangeAggregatorswapData, sig []byte) (*types.Transaction, error) {
	return _Contracts.Contract.Swap(&_Contracts.TransactOpts, data, sig)
}

// Swap is a paid mutator transaction binding the contract method 0x2906799b.
//
// Solidity: function swap((address,uint256,uint256,address,bytes,address) data, bytes sig) returns()
func (_Contracts *ContractsTransactorSession) Swap(data IExchangeAggregatorswapData, sig []byte) (*types.Transaction, error) {
	return _Contracts.Contract.Swap(&_Contracts.TransactOpts, data, sig)
}

// SwapNativeIn is a paid mutator transaction binding the contract method 0x5d86acf1.
//
// Solidity: function swapNativeIn((address,uint256,uint256,address,bytes,address) data, bytes sig) payable returns()
func (_Contracts *ContractsTransactor) SwapNativeIn(opts *bind.TransactOpts, data IExchangeAggregatorswapData, sig []byte) (*types.Transaction, error) {
	return _Contracts.contract.Transact(opts, "swapNativeIn", data, sig)
}

// SwapNativeIn is a paid mutator transaction binding the contract method 0x5d86acf1.
//
// Solidity: function swapNativeIn((address,uint256,uint256,address,bytes,address) data, bytes sig) payable returns()
func (_Contracts *ContractsSession) SwapNativeIn(data IExchangeAggregatorswapData, sig []byte) (*types.Transaction, error) {
	return _Contracts.Contract.SwapNativeIn(&_Contracts.TransactOpts, data, sig)
}

// SwapNativeIn is a paid mutator transaction binding the contract method 0x5d86acf1.
//
// Solidity: function swapNativeIn((address,uint256,uint256,address,bytes,address) data, bytes sig) payable returns()
func (_Contracts *ContractsTransactorSession) SwapNativeIn(data IExchangeAggregatorswapData, sig []byte) (*types.Transaction, error) {
	return _Contracts.Contract.SwapNativeIn(&_Contracts.TransactOpts, data, sig)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(address newOwner) returns()
func (_Contracts *ContractsTransactor) TransferOwnership(opts *bind.TransactOpts, newOwner common.Address) (*types.Transaction, error) {
	return _Contracts.contract.Transact(opts, "transferOwnership", newOwner)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(address newOwner) returns()
func (_Contracts *ContractsSession) TransferOwnership(newOwner common.Address) (*types.Transaction, error) {
	return _Contracts.Contract.TransferOwnership(&_Contracts.TransactOpts, newOwner)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(address newOwner) returns()
func (_Contracts *ContractsTransactorSession) TransferOwnership(newOwner common.Address) (*types.Transaction, error) {
	return _Contracts.Contract.TransferOwnership(&_Contracts.TransactOpts, newOwner)
}

// WithdrawETH is a paid mutator transaction binding the contract method 0x4782f779.
//
// Solidity: function withdrawETH(address to, uint256 amount) returns()
func (_Contracts *ContractsTransactor) WithdrawETH(opts *bind.TransactOpts, to common.Address, amount *big.Int) (*types.Transaction, error) {
	return _Contracts.contract.Transact(opts, "withdrawETH", to, amount)
}

// WithdrawETH is a paid mutator transaction binding the contract method 0x4782f779.
//
// Solidity: function withdrawETH(address to, uint256 amount) returns()
func (_Contracts *ContractsSession) WithdrawETH(to common.Address, amount *big.Int) (*types.Transaction, error) {
	return _Contracts.Contract.WithdrawETH(&_Contracts.TransactOpts, to, amount)
}

// WithdrawETH is a paid mutator transaction binding the contract method 0x4782f779.
//
// Solidity: function withdrawETH(address to, uint256 amount) returns()
func (_Contracts *ContractsTransactorSession) WithdrawETH(to common.Address, amount *big.Int) (*types.Transaction, error) {
	return _Contracts.Contract.WithdrawETH(&_Contracts.TransactOpts, to, amount)
}

// WithdrawToken is a paid mutator transaction binding the contract method 0x01e33667.
//
// Solidity: function withdrawToken(address token, address to, uint256 amount) returns()
func (_Contracts *ContractsTransactor) WithdrawToken(opts *bind.TransactOpts, token common.Address, to common.Address, amount *big.Int) (*types.Transaction, error) {
	return _Contracts.contract.Transact(opts, "withdrawToken", token, to, amount)
}

// WithdrawToken is a paid mutator transaction binding the contract method 0x01e33667.
//
// Solidity: function withdrawToken(address token, address to, uint256 amount) returns()
func (_Contracts *ContractsSession) WithdrawToken(token common.Address, to common.Address, amount *big.Int) (*types.Transaction, error) {
	return _Contracts.Contract.WithdrawToken(&_Contracts.TransactOpts, token, to, amount)
}

// WithdrawToken is a paid mutator transaction binding the contract method 0x01e33667.
//
// Solidity: function withdrawToken(address token, address to, uint256 amount) returns()
func (_Contracts *ContractsTransactorSession) WithdrawToken(token common.Address, to common.Address, amount *big.Int) (*types.Transaction, error) {
	return _Contracts.Contract.WithdrawToken(&_Contracts.TransactOpts, token, to, amount)
}

// ContractsOwnershipTransferredIterator is returned from FilterOwnershipTransferred and is used to iterate over the raw logs and unpacked data for OwnershipTransferred events raised by the Contracts contract.
type ContractsOwnershipTransferredIterator struct {
	Event *ContractsOwnershipTransferred // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ContractsOwnershipTransferredIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ContractsOwnershipTransferred)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ContractsOwnershipTransferred)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ContractsOwnershipTransferredIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ContractsOwnershipTransferredIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ContractsOwnershipTransferred represents a OwnershipTransferred event raised by the Contracts contract.
type ContractsOwnershipTransferred struct {
	PreviousOwner common.Address
	NewOwner      common.Address
	Raw           types.Log // Blockchain specific contextual infos
}

// FilterOwnershipTransferred is a free log retrieval operation binding the contract event 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0.
//
// Solidity: event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)
func (_Contracts *ContractsFilterer) FilterOwnershipTransferred(opts *bind.FilterOpts, previousOwner []common.Address, newOwner []common.Address) (*ContractsOwnershipTransferredIterator, error) {

	var previousOwnerRule []interface{}
	for _, previousOwnerItem := range previousOwner {
		previousOwnerRule = append(previousOwnerRule, previousOwnerItem)
	}
	var newOwnerRule []interface{}
	for _, newOwnerItem := range newOwner {
		newOwnerRule = append(newOwnerRule, newOwnerItem)
	}

	logs, sub, err := _Contracts.contract.FilterLogs(opts, "OwnershipTransferred", previousOwnerRule, newOwnerRule)
	if err != nil {
		return nil, err
	}
	return &ContractsOwnershipTransferredIterator{contract: _Contracts.contract, event: "OwnershipTransferred", logs: logs, sub: sub}, nil
}

// WatchOwnershipTransferred is a free log subscription operation binding the contract event 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0.
//
// Solidity: event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)
func (_Contracts *ContractsFilterer) WatchOwnershipTransferred(opts *bind.WatchOpts, sink chan<- *ContractsOwnershipTransferred, previousOwner []common.Address, newOwner []common.Address) (event.Subscription, error) {

	var previousOwnerRule []interface{}
	for _, previousOwnerItem := range previousOwner {
		previousOwnerRule = append(previousOwnerRule, previousOwnerItem)
	}
	var newOwnerRule []interface{}
	for _, newOwnerItem := range newOwner {
		newOwnerRule = append(newOwnerRule, newOwnerItem)
	}

	logs, sub, err := _Contracts.contract.WatchLogs(opts, "OwnershipTransferred", previousOwnerRule, newOwnerRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ContractsOwnershipTransferred)
				if err := _Contracts.contract.UnpackLog(event, "OwnershipTransferred", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseOwnershipTransferred is a log parse operation binding the contract event 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0.
//
// Solidity: event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)
func (_Contracts *ContractsFilterer) ParseOwnershipTransferred(log types.Log) (*ContractsOwnershipTransferred, error) {
	event := new(ContractsOwnershipTransferred)
	if err := _Contracts.contract.UnpackLog(event, "OwnershipTransferred", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

func (c *Contracts) ErrSTF() error {
	return errors.New("execution reverted: ExchangeAggregator::TransferHelper:safeTransferFrom")
}
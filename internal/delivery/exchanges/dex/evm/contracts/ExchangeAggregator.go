// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package contracts

import (
	"errors"
	"math/big"
	"strings"

	ethereum "github.com/ethereum/go-ethereum"
	"github.com/ethereum/go-ethereum/accounts/abi"
	"exchange-provider/pkg/bind"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
	"github.com/ethereum/go-ethereum/event"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = errors.New
	_ = big.NewInt
	_ = strings.NewReader
	_ = ethereum.NotFound
	_ = bind.Bind
	_ = common.Big1
	_ = types.BloomLookup
	_ = event.NewSubscription
)

// IExchangeAggregatorswapData is an auto generated low-level Go binding around an user-defined struct.
type IExchangeAggregatorswapData struct {
	Input       common.Address
	TotalAmount *big.Int
	FeeAmount   *big.Int
	Swapper     common.Address
	Data        []byte
	Sender      common.Address
}

// IPriceAggregatorexistsIn is an auto generated low-level Go binding around an user-defined struct.
type IPriceAggregatorexistsIn struct {
	Index           *big.Int
	T0              common.Address
	T1              common.Address
	Provider        common.Address
	ProviderVersion uint8
	Min0            *big.Int
	Min1            *big.Int
}

// IPriceAggregatorexistsOut is an auto generated low-level Go binding around an user-defined struct.
type IPriceAggregatorexistsOut struct {
	Index  *big.Int
	Exists bool
}

// IPriceAggregatorpriceIn is an auto generated low-level Go binding around an user-defined struct.
type IPriceAggregatorpriceIn struct {
	Index           *big.Int
	T0              common.Address
	T1              common.Address
	Provider        common.Address
	ProviderVersion uint8
}

// IPriceAggregatorpriceOut is an auto generated low-level Go binding around an user-defined struct.
type IPriceAggregatorpriceOut struct {
	Index *big.Int
	Price *big.Int
	Fee   *big.Int
}

// ContractsMetaData contains all meta data concerning the Contracts contract.
var ContractsMetaData = &bind.MetaData{
	ABI: "[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_priceAggregator\",\"type\":\"address\"}],\"name\":\"changePriceAggregator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"input\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"totalAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"swapper\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"internalType\":\"structIExchangeAggregator.swapData\",\"name\":\"data\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"sig\",\"type\":\"bytes\"}],\"name\":\"swap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"input\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"totalAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"swapper\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"internalType\":\"structIExchangeAggregator.swapData\",\"name\":\"data\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"sig\",\"type\":\"bytes\"}],\"name\":\"swapNativeIn\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawETH\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_WETH\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_priceAggregator\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"balanceETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"balanceToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"estimateAmountOut\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"t0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"t1\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"providerVersion\",\"type\":\"uint8\"}],\"internalType\":\"structIPriceAggregator.priceIn[]\",\"name\":\"inputs\",\"type\":\"tuple[]\"}],\"name\":\"getPrices\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"}],\"internalType\":\"structIPriceAggregator.priceOut[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"t0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"t1\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"providerVersion\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"min0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"min1\",\"type\":\"uint256\"}],\"internalType\":\"structIPriceAggregator.existsIn[]\",\"name\":\"inputs\",\"type\":\"tuple[]\"}],\"name\":\"poolsExists\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"exists\",\"type\":\"bool\"}],\"internalType\":\"structIPriceAggregator.existsOut[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceAggregator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WETH\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]",
	Bin: "0x60806040523480156200001157600080fd5b506040516200362c3803806200362c833981810160405281019062000037919062000217565b620000576200004b620000e160201b60201c565b620000e960201b60201c565b81600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050506200025e565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620001df82620001b2565b9050919050565b620001f181620001d2565b8114620001fd57600080fd5b50565b6000815190506200021181620001e6565b92915050565b60008060408385031215620002315762000230620001ad565b5b6000620002418582860162000200565b9250506020620002548582860162000200565b9150509250929050565b6133be806200026e6000396000f3fe6080604052600436106100e85760003560e01c80636110358d1161008a578063ad5c464811610059578063ad5c4648146102d2578063ea8650c5146102fd578063ecbdbb321461033a578063f2fde38b14610365576100e8565b80636110358d146102295780636c45125e14610267578063715018a6146102905780638da5cb5b146102a7576100e8565b80633078fff5116100c65780633078fff51461017c5780633d157a46146101a75780634782f779146101e45780635d86acf11461020d576100e8565b806301e33667146100ed57806304599012146101165780632906799b14610153575b600080fd5b3480156100f957600080fd5b50610114600480360381019061010f9190611725565b61038e565b005b34801561012257600080fd5b5061013d60048036038101906101389190611778565b6103a6565b60405161014a91906117b4565b60405180910390f35b34801561015f57600080fd5b5061017a60048036038101906101759190611858565b610429565b005b34801561018857600080fd5b506101916105f7565b60405161019e91906118e3565b60405180910390f35b3480156101b357600080fd5b506101ce60048036038101906101c99190611b3f565b61061d565b6040516101db9190611c90565b60405180910390f35b3480156101f057600080fd5b5061020b60048036038101906102069190611cb2565b6106c7565b005b61022760048036038101906102229190611858565b6106dd565b005b34801561023557600080fd5b50610250600480360381019061024b9190611cf2565b6108a2565b60405161025e929190611d8b565b60405180910390f35b34801561027357600080fd5b5061028e60048036038101906102899190611778565b610956565b005b34801561029c57600080fd5b506102a56109a2565b005b3480156102b357600080fd5b506102bc6109b6565b6040516102c991906118e3565b60405180910390f35b3480156102de57600080fd5b506102e76109df565b6040516102f491906118e3565b60405180910390f35b34801561030957600080fd5b50610324600480360381019061031f9190611f03565b610a05565b604051610331919061204c565b60405180910390f35b34801561034657600080fd5b5061034f610aaf565b60405161035c91906117b4565b60405180910390f35b34801561037157600080fd5b5061038c60048036038101906103879190611778565b610ab7565b005b610396610b3a565b6103a1838383610bb8565b505050565b60008173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016103e191906118e3565b602060405180830381865afa1580156103fe573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104229190612083565b9050919050565b3373ffffffffffffffffffffffffffffffffffffffff168360a00160208101906104539190611778565b73ffffffffffffffffffffffffffffffffffffffff16146104a9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104a09061210d565b60405180910390fd5b61051e6104b46109b6565b846040516020016104c591906122e4565b60405160208183030381529060405284848080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050610cee565b6105408360000160208101906105349190611778565b33308660200135610e5a565b6105828360000160208101906105569190611778565b8460600160208101906105699190611778565b8560400135866020013561057d9190612335565b610f93565b6105f28360600160208101906105989190611778565b60008580608001906105aa9190612378565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050506110c9565b505050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6060600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16633d157a46836040518263ffffffff1660e01b815260040161067a9190612527565b600060405180830381865afa158015610697573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906106c09190612688565b9050919050565b6106cf610b3a565b6106d982826111e0565b5050565b3373ffffffffffffffffffffffffffffffffffffffff168360a00160208101906107079190611778565b73ffffffffffffffffffffffffffffffffffffffff161461075d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107549061210d565b60405180910390fd5b6107d26107686109b6565b8460405160200161077991906122e4565b60405160208183030381529060405284848080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050610cee565b8260200135341015610819576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108109061271d565b60405180910390fd5b600083604001353461082b9190612335565b905061089c8460600160208101906108439190611778565b828680608001906108549190612378565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050506110c9565b50505050565b600080600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636110358d88888888886040518663ffffffff1660e01b815260040161090895949392919061274c565b6040805180830381865afa158015610924573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061094891906127cb565b915091509550959350505050565b61095e610b3a565b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6109aa610b3a565b6109b460006112e0565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6060600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ea8650c5836040518263ffffffff1660e01b8152600401610a629190612922565b600060405180830381865afa158015610a7f573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190610aa89190612a6b565b9050919050565b600047905090565b610abf610b3a565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610b2e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b2590612b26565b60405180910390fd5b610b37816112e0565b50565b610b426113a4565b73ffffffffffffffffffffffffffffffffffffffff16610b606109b6565b73ffffffffffffffffffffffffffffffffffffffff1614610bb6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bad90612b92565b60405180910390fd5b565b6000808473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb8585604051602401610bea929190612bb2565b6040516020818303038152906040529060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050604051610c389190612c4c565b6000604051808303816000865af19150503d8060008114610c75576040519150601f19603f3d011682016040523d82523d6000602084013e610c7a565b606091505b5091509150818015610ca85750600081511480610ca7575080806020019051810190610ca69190612c63565b5b5b610ce7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cde90612d02565b60405180910390fd5b5050505050565b601b60f81b81604081518110610d0757610d06612d22565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508273ffffffffffffffffffffffffffffffffffffffff16610d6882610d5a856113ac565b6113bd90919063ffffffff16565b73ffffffffffffffffffffffffffffffffffffffff160315610e5557601c60f81b81604081518110610d9d57610d9c612d22565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508273ffffffffffffffffffffffffffffffffffffffff16610dfe82610df0856113ac565b6113bd90919063ffffffff16565b73ffffffffffffffffffffffffffffffffffffffff1614610e54576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e4b90612d9d565b60405180910390fd5b5b505050565b6000808573ffffffffffffffffffffffffffffffffffffffff166323b872dd868686604051602401610e8e93929190612dbd565b6040516020818303038152906040529060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050604051610edc9190612c4c565b6000604051808303816000865af19150503d8060008114610f19576040519150601f19603f3d011682016040523d82523d6000602084013e610f1e565b606091505b5091509150818015610f4c5750600081511480610f4b575080806020019051810190610f4a9190612c63565b5b5b610f8b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f8290612e66565b60405180910390fd5b505050505050565b6000808473ffffffffffffffffffffffffffffffffffffffff1663095ea7b38585604051602401610fc5929190612bb2565b6040516020818303038152906040529060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040516110139190612c4c565b6000604051808303816000865af19150503d8060008114611050576040519150601f19603f3d011682016040523d82523d6000602084013e611055565b606091505b509150915081801561108357506000815114806110825750808060200190518101906110819190612c63565b5b5b6110c2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110b990612ef8565b60405180910390fd5b5050505050565b6000808473ffffffffffffffffffffffffffffffffffffffff1684846040516110f29190612c4c565b60006040518083038185875af1925050503d806000811461112f576040519150601f19603f3d011682016040523d82523d6000602084013e611134565b606091505b5091509150816111d957604481511015611183576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161117a90612f8a565b60405180910390fd5b6004810190508080602001905181019061119d9190613050565b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111d091906130dd565b60405180910390fd5b5050505050565b60008273ffffffffffffffffffffffffffffffffffffffff1682600067ffffffffffffffff8111156112155761121461190f565b5b6040519080825280601f01601f1916602001820160405280156112475781602001600182028036833780820191505090505b506040516112559190612c4c565b60006040518083038185875af1925050503d8060008114611292576040519150601f19603f3d011682016040523d82523d6000602084013e611297565b606091505b50509050806112db576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112d290613171565b60405180910390fd5b505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b600081805190602001209050919050565b60008060006113cc85856113e4565b915091506113d981611435565b819250505092915050565b60008060418351036114255760008060006020860151925060408601519150606086015160001a90506114198782858561159b565b9450945050505061142e565b60006002915091505b9250929050565b6000600481111561144957611448613191565b5b81600481111561145c5761145b613191565b5b0315611598576001600481111561147657611475613191565b5b81600481111561148957611488613191565b5b036114c9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114c09061320c565b60405180910390fd5b600260048111156114dd576114dc613191565b5b8160048111156114f0576114ef613191565b5b03611530576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161152790613278565b60405180910390fd5b6003600481111561154457611543613191565b5b81600481111561155757611556613191565b5b03611597576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161158e9061330a565b60405180910390fd5b5b50565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08360001c11156115d6576000600391509150611674565b6000600187878787604051600081526020016040526040516115fb9493929190613343565b6020604051602081039080840390855afa15801561161d573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361166b57600060019250925050611674565b80600092509250505b94509492505050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006116bc82611691565b9050919050565b6116cc816116b1565b81146116d757600080fd5b50565b6000813590506116e9816116c3565b92915050565b6000819050919050565b611702816116ef565b811461170d57600080fd5b50565b60008135905061171f816116f9565b92915050565b60008060006060848603121561173e5761173d611687565b5b600061174c868287016116da565b935050602061175d868287016116da565b925050604061176e86828701611710565b9150509250925092565b60006020828403121561178e5761178d611687565b5b600061179c848285016116da565b91505092915050565b6117ae816116ef565b82525050565b60006020820190506117c960008301846117a5565b92915050565b600080fd5b600060c082840312156117ea576117e96117cf565b5b81905092915050565b600080fd5b600080fd5b600080fd5b60008083601f840112611818576118176117f3565b5b8235905067ffffffffffffffff811115611835576118346117f8565b5b602083019150836001820283011115611851576118506117fd565b5b9250929050565b60008060006040848603121561187157611870611687565b5b600084013567ffffffffffffffff81111561188f5761188e61168c565b5b61189b868287016117d4565b935050602084013567ffffffffffffffff8111156118bc576118bb61168c565b5b6118c886828701611802565b92509250509250925092565b6118dd816116b1565b82525050565b60006020820190506118f860008301846118d4565b92915050565b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611947826118fe565b810181811067ffffffffffffffff821117156119665761196561190f565b5b80604052505050565b600061197961167d565b9050611985828261193e565b919050565b600067ffffffffffffffff8211156119a5576119a461190f565b5b602082029050602081019050919050565b600080fd5b600060ff82169050919050565b6119d1816119bb565b81146119dc57600080fd5b50565b6000813590506119ee816119c8565b92915050565b600060e08284031215611a0a57611a096119b6565b5b611a1460e061196f565b90506000611a2484828501611710565b6000830152506020611a38848285016116da565b6020830152506040611a4c848285016116da565b6040830152506060611a60848285016116da565b6060830152506080611a74848285016119df565b60808301525060a0611a8884828501611710565b60a08301525060c0611a9c84828501611710565b60c08301525092915050565b6000611abb611ab68461198a565b61196f565b90508083825260208201905060e08402830185811115611ade57611add6117fd565b5b835b81811015611b075780611af388826119f4565b84526020840193505060e081019050611ae0565b5050509392505050565b600082601f830112611b2657611b256117f3565b5b8135611b36848260208601611aa8565b91505092915050565b600060208284031215611b5557611b54611687565b5b600082013567ffffffffffffffff811115611b7357611b7261168c565b5b611b7f84828501611b11565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b611bbd816116ef565b82525050565b60008115159050919050565b611bd881611bc3565b82525050565b604082016000820151611bf46000850182611bb4565b506020820151611c076020850182611bcf565b50505050565b6000611c198383611bde565b60408301905092915050565b6000602082019050919050565b6000611c3d82611b88565b611c478185611b93565b9350611c5283611ba4565b8060005b83811015611c83578151611c6a8882611c0d565b9750611c7583611c25565b925050600181019050611c56565b5085935050505092915050565b60006020820190508181036000830152611caa8184611c32565b905092915050565b60008060408385031215611cc957611cc8611687565b5b6000611cd7858286016116da565b9250506020611ce885828601611710565b9150509250929050565b600080600080600060a08688031215611d0e57611d0d611687565b5b6000611d1c888289016116da565b9550506020611d2d888289016116da565b9450506040611d3e888289016116da565b9350506060611d4f88828901611710565b9250506080611d60888289016119df565b9150509295509295909350565b600062ffffff82169050919050565b611d8581611d6d565b82525050565b6000604082019050611da060008301856117a5565b611dad6020830184611d7c565b9392505050565b600067ffffffffffffffff821115611dcf57611dce61190f565b5b602082029050602081019050919050565b600060a08284031215611df657611df56119b6565b5b611e0060a061196f565b90506000611e1084828501611710565b6000830152506020611e24848285016116da565b6020830152506040611e38848285016116da565b6040830152506060611e4c848285016116da565b6060830152506080611e60848285016119df565b60808301525092915050565b6000611e7f611e7a84611db4565b61196f565b90508083825260208201905060a08402830185811115611ea257611ea16117fd565b5b835b81811015611ecb5780611eb78882611de0565b84526020840193505060a081019050611ea4565b5050509392505050565b600082601f830112611eea57611ee96117f3565b5b8135611efa848260208601611e6c565b91505092915050565b600060208284031215611f1957611f18611687565b5b600082013567ffffffffffffffff811115611f3757611f3661168c565b5b611f4384828501611ed5565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b611f8181611d6d565b82525050565b606082016000820151611f9d6000850182611bb4565b506020820151611fb06020850182611bb4565b506040820151611fc36040850182611f78565b50505050565b6000611fd58383611f87565b60608301905092915050565b6000602082019050919050565b6000611ff982611f4c565b6120038185611f57565b935061200e83611f68565b8060005b8381101561203f5781516120268882611fc9565b975061203183611fe1565b925050600181019050612012565b5085935050505092915050565b600060208201905081810360008301526120668184611fee565b905092915050565b60008151905061207d816116f9565b92915050565b60006020828403121561209957612098611687565b5b60006120a78482850161206e565b91505092915050565b600082825260208201905092915050565b7f696e76616c65642073656e646572000000000000000000000000000000000000600082015250565b60006120f7600e836120b0565b9150612102826120c1565b602082019050919050565b60006020820190508181036000830152612126816120ea565b9050919050565b600061213c60208401846116da565b905092915050565b61214d816116b1565b82525050565b60006121626020840184611710565b905092915050565b600080fd5b600080fd5b600080fd5b6000808335600160200384360303811261219657612195612174565b5b83810192508235915060208301925067ffffffffffffffff8211156121be576121bd61216a565b5b6001820236038313156121d4576121d361216f565b5b509250929050565b600082825260208201905092915050565b82818337600083830152505050565b600061220883856121dc565b93506122158385846121ed565b61221e836118fe565b840190509392505050565b600060c0830161223c600084018461212d565b6122496000860182612144565b506122576020840184612153565b6122646020860182611bb4565b506122726040840184612153565b61227f6040860182611bb4565b5061228d606084018461212d565b61229a6060860182612144565b506122a86080840184612179565b85830360808701526122bb8382846121fc565b925050506122cc60a084018461212d565b6122d960a0860182612144565b508091505092915050565b600060208201905081810360008301526122fe8184612229565b905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000612340826116ef565b915061234b836116ef565b925082820390508181111561236357612362612306565b5b92915050565b600080fd5b600080fd5b600080fd5b6000808335600160200384360303811261239557612394612369565b5b80840192508235915067ffffffffffffffff8211156123b7576123b661236e565b5b6020830192506001820236038313156123d3576123d2612373565b5b509250929050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b612410816119bb565b82525050565b60e08201600082015161242c6000850182611bb4565b50602082015161243f6020850182612144565b5060408201516124526040850182612144565b5060608201516124656060850182612144565b5060808201516124786080850182612407565b5060a082015161248b60a0850182611bb4565b5060c082015161249e60c0850182611bb4565b50505050565b60006124b08383612416565b60e08301905092915050565b6000602082019050919050565b60006124d4826123db565b6124de81856123e6565b93506124e9836123f7565b8060005b8381101561251a57815161250188826124a4565b975061250c836124bc565b9250506001810190506124ed565b5085935050505092915050565b6000602082019050818103600083015261254181846124c9565b905092915050565b600067ffffffffffffffff8211156125645761256361190f565b5b602082029050602081019050919050565b61257e81611bc3565b811461258957600080fd5b50565b60008151905061259b81612575565b92915050565b6000604082840312156125b7576125b66119b6565b5b6125c1604061196f565b905060006125d18482850161206e565b60008301525060206125e58482850161258c565b60208301525092915050565b60006126046125ff84612549565b61196f565b90508083825260208201905060408402830185811115612627576126266117fd565b5b835b81811015612650578061263c88826125a1565b845260208401935050604081019050612629565b5050509392505050565b600082601f83011261266f5761266e6117f3565b5b815161267f8482602086016125f1565b91505092915050565b60006020828403121561269e5761269d611687565b5b600082015167ffffffffffffffff8111156126bc576126bb61168c565b5b6126c88482850161265a565b91505092915050565b7f696e73756666696369656e7420696e70757420616d6f756e7400000000000000600082015250565b60006127076019836120b0565b9150612712826126d1565b602082019050919050565b60006020820190508181036000830152612736816126fa565b9050919050565b612746816119bb565b82525050565b600060a08201905061276160008301886118d4565b61276e60208301876118d4565b61277b60408301866118d4565b61278860608301856117a5565b612795608083018461273d565b9695505050505050565b6127a881611d6d565b81146127b357600080fd5b50565b6000815190506127c58161279f565b92915050565b600080604083850312156127e2576127e1611687565b5b60006127f08582860161206e565b9250506020612801858286016127b6565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b60a08201600082015161284d6000850182611bb4565b5060208201516128606020850182612144565b5060408201516128736040850182612144565b5060608201516128866060850182612144565b5060808201516128996080850182612407565b50505050565b60006128ab8383612837565b60a08301905092915050565b6000602082019050919050565b60006128cf8261280b565b6128d98185612816565b93506128e483612827565b8060005b838110156129155781516128fc888261289f565b9750612907836128b7565b9250506001810190506128e8565b5085935050505092915050565b6000602082019050818103600083015261293c81846128c4565b905092915050565b600067ffffffffffffffff82111561295f5761295e61190f565b5b602082029050602081019050919050565b600060608284031215612986576129856119b6565b5b612990606061196f565b905060006129a08482850161206e565b60008301525060206129b48482850161206e565b60208301525060406129c8848285016127b6565b60408301525092915050565b60006129e76129e284612944565b61196f565b90508083825260208201905060608402830185811115612a0a57612a096117fd565b5b835b81811015612a335780612a1f8882612970565b845260208401935050606081019050612a0c565b5050509392505050565b600082601f830112612a5257612a516117f3565b5b8151612a628482602086016129d4565b91505092915050565b600060208284031215612a8157612a80611687565b5b600082015167ffffffffffffffff811115612a9f57612a9e61168c565b5b612aab84828501612a3d565b91505092915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000612b106026836120b0565b9150612b1b82612ab4565b604082019050919050565b60006020820190508181036000830152612b3f81612b03565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000612b7c6020836120b0565b9150612b8782612b46565b602082019050919050565b60006020820190508181036000830152612bab81612b6f565b9050919050565b6000604082019050612bc760008301856118d4565b612bd460208301846117a5565b9392505050565b600081519050919050565b600081905092915050565b60005b83811015612c0f578082015181840152602081019050612bf4565b60008484015250505050565b6000612c2682612bdb565b612c308185612be6565b9350612c40818560208601612bf1565b80840191505092915050565b6000612c588284612c1b565b915081905092915050565b600060208284031215612c7957612c78611687565b5b6000612c878482850161258c565b91505092915050565b7f45786368616e676541676772656761746f723a3a5472616e7366657248656c7060008201527f65723a736166655472616e736665720000000000000000000000000000000000602082015250565b6000612cec602f836120b0565b9150612cf782612c90565b604082019050919050565b60006020820190508181036000830152612d1b81612cdf565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f646174612074616d706572656400000000000000000000000000000000000000600082015250565b6000612d87600d836120b0565b9150612d9282612d51565b602082019050919050565b60006020820190508181036000830152612db681612d7a565b9050919050565b6000606082019050612dd260008301866118d4565b612ddf60208301856118d4565b612dec60408301846117a5565b949350505050565b7f45786368616e676541676772656761746f723a3a5472616e7366657248656c7060008201527f65723a736166655472616e7366657246726f6d00000000000000000000000000602082015250565b6000612e506033836120b0565b9150612e5b82612df4565b604082019050919050565b60006020820190508181036000830152612e7f81612e43565b9050919050565b7f45786368616e676541676772656761746f723a3a5472616e7366657248656c7060008201527f65723a73616665417070726f7665000000000000000000000000000000000000602082015250565b6000612ee2602e836120b0565b9150612eed82612e86565b604082019050919050565b60006020820190508181036000830152612f1181612ed5565b9050919050565b7f45786368616e676541676772656761746f723a3a5361666543616c6c65723a7360008201527f61666543616c6c00000000000000000000000000000000000000000000000000602082015250565b6000612f746027836120b0565b9150612f7f82612f18565b604082019050919050565b60006020820190508181036000830152612fa381612f67565b9050919050565b600080fd5b600067ffffffffffffffff821115612fca57612fc961190f565b5b612fd3826118fe565b9050602081019050919050565b6000612ff3612fee84612faf565b61196f565b90508281526020810184848401111561300f5761300e612faa565b5b61301a848285612bf1565b509392505050565b600082601f830112613037576130366117f3565b5b8151613047848260208601612fe0565b91505092915050565b60006020828403121561306657613065611687565b5b600082015167ffffffffffffffff8111156130845761308361168c565b5b61309084828501613022565b91505092915050565b600081519050919050565b60006130af82613099565b6130b981856120b0565b93506130c9818560208601612bf1565b6130d2816118fe565b840191505092915050565b600060208201905081810360008301526130f781846130a4565b905092915050565b7f45786368616e676541676772656761746f723a3a5472616e7366657248656c7060008201527f65723a736166655472616e736665724554480000000000000000000000000000602082015250565b600061315b6032836120b0565b9150613166826130ff565b604082019050919050565b6000602082019050818103600083015261318a8161314e565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f45434453413a20696e76616c6964207369676e61747572650000000000000000600082015250565b60006131f66018836120b0565b9150613201826131c0565b602082019050919050565b60006020820190508181036000830152613225816131e9565b9050919050565b7f45434453413a20696e76616c6964207369676e6174757265206c656e67746800600082015250565b6000613262601f836120b0565b915061326d8261322c565b602082019050919050565b6000602082019050818103600083015261329181613255565b9050919050565b7f45434453413a20696e76616c6964207369676e6174757265202773272076616c60008201527f7565000000000000000000000000000000000000000000000000000000000000602082015250565b60006132f46022836120b0565b91506132ff82613298565b604082019050919050565b60006020820190508181036000830152613323816132e7565b9050919050565b6000819050919050565b61333d8161332a565b82525050565b60006080820190506133586000830187613334565b613365602083018661273d565b6133726040830185613334565b61337f6060830184613334565b9594505050505056fea2646970667358221220e81bf82e3a31ce278429fed9ac67da78c49bada2bd6fb7e5e30da4ebad31b30464736f6c63430008110033",
}

// ContractsABI is the input ABI used to generate the binding from.
// Deprecated: Use ContractsMetaData.ABI instead.
var ContractsABI = ContractsMetaData.ABI

// ContractsBin is the compiled bytecode used for deploying new contracts.
// Deprecated: Use ContractsMetaData.Bin instead.
var ContractsBin = ContractsMetaData.Bin

// DeployContracts deploys a new Ethereum contract, binding an instance of Contracts to it.
func DeployContracts(auth *bind.TransactOpts, backend bind.ContractBackend, _WETH common.Address, _priceAggregator common.Address) (common.Address, *types.Transaction, *Contracts, error) {
	parsed, err := ContractsMetaData.GetAbi()
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	if parsed == nil {
		return common.Address{}, nil, nil, errors.New("GetABI returned nil")
	}

	address, tx, contract, err := bind.DeployContract(auth, *parsed, common.FromHex(ContractsBin), backend, _WETH, _priceAggregator)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &Contracts{ContractsCaller: ContractsCaller{contract: contract}, ContractsTransactor: ContractsTransactor{contract: contract}, ContractsFilterer: ContractsFilterer{contract: contract}}, nil
}

// Contracts is an auto generated Go binding around an Ethereum contract.
type Contracts struct {
	ContractsCaller     // Read-only binding to the contract
	ContractsTransactor // Write-only binding to the contract
	ContractsFilterer   // Log filterer for contract events
}

// ContractsCaller is an auto generated read-only Go binding around an Ethereum contract.
type ContractsCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ContractsTransactor is an auto generated write-only Go binding around an Ethereum contract.
type ContractsTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ContractsFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type ContractsFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ContractsSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type ContractsSession struct {
	Contract     *Contracts        // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// ContractsCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type ContractsCallerSession struct {
	Contract *ContractsCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts    // Call options to use throughout this session
}

// ContractsTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type ContractsTransactorSession struct {
	Contract     *ContractsTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts    // Transaction auth options to use throughout this session
}

// ContractsRaw is an auto generated low-level Go binding around an Ethereum contract.
type ContractsRaw struct {
	Contract *Contracts // Generic contract binding to access the raw methods on
}

// ContractsCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type ContractsCallerRaw struct {
	Contract *ContractsCaller // Generic read-only contract binding to access the raw methods on
}

// ContractsTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type ContractsTransactorRaw struct {
	Contract *ContractsTransactor // Generic write-only contract binding to access the raw methods on
}

// NewContracts creates a new instance of Contracts, bound to a specific deployed contract.
func NewContracts(address common.Address, backend bind.ContractBackend) (*Contracts, error) {
	contract, err := bindContracts(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &Contracts{ContractsCaller: ContractsCaller{contract: contract}, ContractsTransactor: ContractsTransactor{contract: contract}, ContractsFilterer: ContractsFilterer{contract: contract}}, nil
}

// NewContractsCaller creates a new read-only instance of Contracts, bound to a specific deployed contract.
func NewContractsCaller(address common.Address, caller bind.ContractCaller) (*ContractsCaller, error) {
	contract, err := bindContracts(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &ContractsCaller{contract: contract}, nil
}

// NewContractsTransactor creates a new write-only instance of Contracts, bound to a specific deployed contract.
func NewContractsTransactor(address common.Address, transactor bind.ContractTransactor) (*ContractsTransactor, error) {
	contract, err := bindContracts(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &ContractsTransactor{contract: contract}, nil
}

// NewContractsFilterer creates a new log filterer instance of Contracts, bound to a specific deployed contract.
func NewContractsFilterer(address common.Address, filterer bind.ContractFilterer) (*ContractsFilterer, error) {
	contract, err := bindContracts(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &ContractsFilterer{contract: contract}, nil
}

// bindContracts binds a generic wrapper to an already deployed contract.
func bindContracts(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(ContractsABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Contracts *ContractsRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _Contracts.Contract.ContractsCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Contracts *ContractsRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Contracts.Contract.ContractsTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Contracts *ContractsRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _Contracts.Contract.ContractsTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Contracts *ContractsCallerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _Contracts.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Contracts *ContractsTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Contracts.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Contracts *ContractsTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _Contracts.Contract.contract.Transact(opts, method, params...)
}

// WETH is a free data retrieval call binding the contract method 0xad5c4648.
//
// Solidity: function WETH() view returns(address)
func (_Contracts *ContractsCaller) WETH(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _Contracts.contract.Call(opts, &out, "WETH")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// WETH is a free data retrieval call binding the contract method 0xad5c4648.
//
// Solidity: function WETH() view returns(address)
func (_Contracts *ContractsSession) WETH() (common.Address, error) {
	return _Contracts.Contract.WETH(&_Contracts.CallOpts)
}

// WETH is a free data retrieval call binding the contract method 0xad5c4648.
//
// Solidity: function WETH() view returns(address)
func (_Contracts *ContractsCallerSession) WETH() (common.Address, error) {
	return _Contracts.Contract.WETH(&_Contracts.CallOpts)
}

// BalanceETH is a free data retrieval call binding the contract method 0xecbdbb32.
//
// Solidity: function balanceETH() view returns(uint256)
func (_Contracts *ContractsCaller) BalanceETH(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _Contracts.contract.Call(opts, &out, "balanceETH")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// BalanceETH is a free data retrieval call binding the contract method 0xecbdbb32.
//
// Solidity: function balanceETH() view returns(uint256)
func (_Contracts *ContractsSession) BalanceETH() (*big.Int, error) {
	return _Contracts.Contract.BalanceETH(&_Contracts.CallOpts)
}

// BalanceETH is a free data retrieval call binding the contract method 0xecbdbb32.
//
// Solidity: function balanceETH() view returns(uint256)
func (_Contracts *ContractsCallerSession) BalanceETH() (*big.Int, error) {
	return _Contracts.Contract.BalanceETH(&_Contracts.CallOpts)
}

// BalanceToken is a free data retrieval call binding the contract method 0x04599012.
//
// Solidity: function balanceToken(address token) view returns(uint256)
func (_Contracts *ContractsCaller) BalanceToken(opts *bind.CallOpts, token common.Address) (*big.Int, error) {
	var out []interface{}
	err := _Contracts.contract.Call(opts, &out, "balanceToken", token)

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// BalanceToken is a free data retrieval call binding the contract method 0x04599012.
//
// Solidity: function balanceToken(address token) view returns(uint256)
func (_Contracts *ContractsSession) BalanceToken(token common.Address) (*big.Int, error) {
	return _Contracts.Contract.BalanceToken(&_Contracts.CallOpts, token)
}

// BalanceToken is a free data retrieval call binding the contract method 0x04599012.
//
// Solidity: function balanceToken(address token) view returns(uint256)
func (_Contracts *ContractsCallerSession) BalanceToken(token common.Address) (*big.Int, error) {
	return _Contracts.Contract.BalanceToken(&_Contracts.CallOpts, token)
}

// EstimateAmountOut is a free data retrieval call binding the contract method 0x6110358d.
//
// Solidity: function estimateAmountOut(address provider, address tA, address tB, uint256 amountIn, uint8 version) view returns(uint256 amountOut, uint24 fee)
func (_Contracts *ContractsCaller) EstimateAmountOut(opts *bind.CallOpts, provider common.Address, tA common.Address, tB common.Address, amountIn *big.Int, version uint8) (struct {
	AmountOut *big.Int
	Fee       *big.Int
}, error) {
	var out []interface{}
	err := _Contracts.contract.Call(opts, &out, "estimateAmountOut", provider, tA, tB, amountIn, version)

	outstruct := new(struct {
		AmountOut *big.Int
		Fee       *big.Int
	})
	if err != nil {
		return *outstruct, err
	}

	outstruct.AmountOut = *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)
	outstruct.Fee = *abi.ConvertType(out[1], new(*big.Int)).(**big.Int)

	return *outstruct, err

}

// EstimateAmountOut is a free data retrieval call binding the contract method 0x6110358d.
//
// Solidity: function estimateAmountOut(address provider, address tA, address tB, uint256 amountIn, uint8 version) view returns(uint256 amountOut, uint24 fee)
func (_Contracts *ContractsSession) EstimateAmountOut(provider common.Address, tA common.Address, tB common.Address, amountIn *big.Int, version uint8) (struct {
	AmountOut *big.Int
	Fee       *big.Int
}, error) {
	return _Contracts.Contract.EstimateAmountOut(&_Contracts.CallOpts, provider, tA, tB, amountIn, version)
}

// EstimateAmountOut is a free data retrieval call binding the contract method 0x6110358d.
//
// Solidity: function estimateAmountOut(address provider, address tA, address tB, uint256 amountIn, uint8 version) view returns(uint256 amountOut, uint24 fee)
func (_Contracts *ContractsCallerSession) EstimateAmountOut(provider common.Address, tA common.Address, tB common.Address, amountIn *big.Int, version uint8) (struct {
	AmountOut *big.Int
	Fee       *big.Int
}, error) {
	return _Contracts.Contract.EstimateAmountOut(&_Contracts.CallOpts, provider, tA, tB, amountIn, version)
}

// GetPrices is a free data retrieval call binding the contract method 0xea8650c5.
//
// Solidity: function getPrices((uint256,address,address,address,uint8)[] inputs) view returns((uint256,uint256,uint24)[])
func (_Contracts *ContractsCaller) GetPrices(opts *bind.CallOpts, inputs []IPriceAggregatorpriceIn) ([]IPriceAggregatorpriceOut, error) {
	var out []interface{}
	err := _Contracts.contract.Call(opts, &out, "getPrices", inputs)

	if err != nil {
		return *new([]IPriceAggregatorpriceOut), err
	}

	out0 := *abi.ConvertType(out[0], new([]IPriceAggregatorpriceOut)).(*[]IPriceAggregatorpriceOut)

	return out0, err

}

// GetPrices is a free data retrieval call binding the contract method 0xea8650c5.
//
// Solidity: function getPrices((uint256,address,address,address,uint8)[] inputs) view returns((uint256,uint256,uint24)[])
func (_Contracts *ContractsSession) GetPrices(inputs []IPriceAggregatorpriceIn) ([]IPriceAggregatorpriceOut, error) {
	return _Contracts.Contract.GetPrices(&_Contracts.CallOpts, inputs)
}

// GetPrices is a free data retrieval call binding the contract method 0xea8650c5.
//
// Solidity: function getPrices((uint256,address,address,address,uint8)[] inputs) view returns((uint256,uint256,uint24)[])
func (_Contracts *ContractsCallerSession) GetPrices(inputs []IPriceAggregatorpriceIn) ([]IPriceAggregatorpriceOut, error) {
	return _Contracts.Contract.GetPrices(&_Contracts.CallOpts, inputs)
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() view returns(address)
func (_Contracts *ContractsCaller) Owner(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _Contracts.contract.Call(opts, &out, "owner")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() view returns(address)
func (_Contracts *ContractsSession) Owner() (common.Address, error) {
	return _Contracts.Contract.Owner(&_Contracts.CallOpts)
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() view returns(address)
func (_Contracts *ContractsCallerSession) Owner() (common.Address, error) {
	return _Contracts.Contract.Owner(&_Contracts.CallOpts)
}

// PoolsExists is a free data retrieval call binding the contract method 0x3d157a46.
//
// Solidity: function poolsExists((uint256,address,address,address,uint8,uint256,uint256)[] inputs) view returns((uint256,bool)[])
func (_Contracts *ContractsCaller) PoolsExists(opts *bind.CallOpts, inputs []IPriceAggregatorexistsIn) ([]IPriceAggregatorexistsOut, error) {
	var out []interface{}
	err := _Contracts.contract.Call(opts, &out, "poolsExists", inputs)

	if err != nil {
		return *new([]IPriceAggregatorexistsOut), err
	}

	out0 := *abi.ConvertType(out[0], new([]IPriceAggregatorexistsOut)).(*[]IPriceAggregatorexistsOut)

	return out0, err

}

// PoolsExists is a free data retrieval call binding the contract method 0x3d157a46.
//
// Solidity: function poolsExists((uint256,address,address,address,uint8,uint256,uint256)[] inputs) view returns((uint256,bool)[])
func (_Contracts *ContractsSession) PoolsExists(inputs []IPriceAggregatorexistsIn) ([]IPriceAggregatorexistsOut, error) {
	return _Contracts.Contract.PoolsExists(&_Contracts.CallOpts, inputs)
}

// PoolsExists is a free data retrieval call binding the contract method 0x3d157a46.
//
// Solidity: function poolsExists((uint256,address,address,address,uint8,uint256,uint256)[] inputs) view returns((uint256,bool)[])
func (_Contracts *ContractsCallerSession) PoolsExists(inputs []IPriceAggregatorexistsIn) ([]IPriceAggregatorexistsOut, error) {
	return _Contracts.Contract.PoolsExists(&_Contracts.CallOpts, inputs)
}

// PriceAggregator is a free data retrieval call binding the contract method 0x3078fff5.
//
// Solidity: function priceAggregator() view returns(address)
func (_Contracts *ContractsCaller) PriceAggregator(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _Contracts.contract.Call(opts, &out, "priceAggregator")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// PriceAggregator is a free data retrieval call binding the contract method 0x3078fff5.
//
// Solidity: function priceAggregator() view returns(address)
func (_Contracts *ContractsSession) PriceAggregator() (common.Address, error) {
	return _Contracts.Contract.PriceAggregator(&_Contracts.CallOpts)
}

// PriceAggregator is a free data retrieval call binding the contract method 0x3078fff5.
//
// Solidity: function priceAggregator() view returns(address)
func (_Contracts *ContractsCallerSession) PriceAggregator() (common.Address, error) {
	return _Contracts.Contract.PriceAggregator(&_Contracts.CallOpts)
}

// ChangePriceAggregator is a paid mutator transaction binding the contract method 0x6c45125e.
//
// Solidity: function changePriceAggregator(address _priceAggregator) returns()
func (_Contracts *ContractsTransactor) ChangePriceAggregator(opts *bind.TransactOpts, _priceAggregator common.Address) (*types.Transaction, error) {
	return _Contracts.contract.Transact(opts, "changePriceAggregator", _priceAggregator)
}

// ChangePriceAggregator is a paid mutator transaction binding the contract method 0x6c45125e.
//
// Solidity: function changePriceAggregator(address _priceAggregator) returns()
func (_Contracts *ContractsSession) ChangePriceAggregator(_priceAggregator common.Address) (*types.Transaction, error) {
	return _Contracts.Contract.ChangePriceAggregator(&_Contracts.TransactOpts, _priceAggregator)
}

// ChangePriceAggregator is a paid mutator transaction binding the contract method 0x6c45125e.
//
// Solidity: function changePriceAggregator(address _priceAggregator) returns()
func (_Contracts *ContractsTransactorSession) ChangePriceAggregator(_priceAggregator common.Address) (*types.Transaction, error) {
	return _Contracts.Contract.ChangePriceAggregator(&_Contracts.TransactOpts, _priceAggregator)
}

// RenounceOwnership is a paid mutator transaction binding the contract method 0x715018a6.
//
// Solidity: function renounceOwnership() returns()
func (_Contracts *ContractsTransactor) RenounceOwnership(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Contracts.contract.Transact(opts, "renounceOwnership")
}

// RenounceOwnership is a paid mutator transaction binding the contract method 0x715018a6.
//
// Solidity: function renounceOwnership() returns()
func (_Contracts *ContractsSession) RenounceOwnership() (*types.Transaction, error) {
	return _Contracts.Contract.RenounceOwnership(&_Contracts.TransactOpts)
}

// RenounceOwnership is a paid mutator transaction binding the contract method 0x715018a6.
//
// Solidity: function renounceOwnership() returns()
func (_Contracts *ContractsTransactorSession) RenounceOwnership() (*types.Transaction, error) {
	return _Contracts.Contract.RenounceOwnership(&_Contracts.TransactOpts)
}

// Swap is a paid mutator transaction binding the contract method 0x2906799b.
//
// Solidity: function swap((address,uint256,uint256,address,bytes,address) data, bytes sig) returns()
func (_Contracts *ContractsTransactor) Swap(opts *bind.TransactOpts, data IExchangeAggregatorswapData, sig []byte) (*types.Transaction, error) {
	return _Contracts.contract.Transact(opts, "swap", data, sig)
}

// Swap is a paid mutator transaction binding the contract method 0x2906799b.
//
// Solidity: function swap((address,uint256,uint256,address,bytes,address) data, bytes sig) returns()
func (_Contracts *ContractsSession) Swap(data IExchangeAggregatorswapData, sig []byte) (*types.Transaction, error) {
	return _Contracts.Contract.Swap(&_Contracts.TransactOpts, data, sig)
}

// Swap is a paid mutator transaction binding the contract method 0x2906799b.
//
// Solidity: function swap((address,uint256,uint256,address,bytes,address) data, bytes sig) returns()
func (_Contracts *ContractsTransactorSession) Swap(data IExchangeAggregatorswapData, sig []byte) (*types.Transaction, error) {
	return _Contracts.Contract.Swap(&_Contracts.TransactOpts, data, sig)
}

// SwapNativeIn is a paid mutator transaction binding the contract method 0x5d86acf1.
//
// Solidity: function swapNativeIn((address,uint256,uint256,address,bytes,address) data, bytes sig) payable returns()
func (_Contracts *ContractsTransactor) SwapNativeIn(opts *bind.TransactOpts, data IExchangeAggregatorswapData, sig []byte) (*types.Transaction, error) {
	return _Contracts.contract.Transact(opts, "swapNativeIn", data, sig)
}

// SwapNativeIn is a paid mutator transaction binding the contract method 0x5d86acf1.
//
// Solidity: function swapNativeIn((address,uint256,uint256,address,bytes,address) data, bytes sig) payable returns()
func (_Contracts *ContractsSession) SwapNativeIn(data IExchangeAggregatorswapData, sig []byte) (*types.Transaction, error) {
	return _Contracts.Contract.SwapNativeIn(&_Contracts.TransactOpts, data, sig)
}

// SwapNativeIn is a paid mutator transaction binding the contract method 0x5d86acf1.
//
// Solidity: function swapNativeIn((address,uint256,uint256,address,bytes,address) data, bytes sig) payable returns()
func (_Contracts *ContractsTransactorSession) SwapNativeIn(data IExchangeAggregatorswapData, sig []byte) (*types.Transaction, error) {
	return _Contracts.Contract.SwapNativeIn(&_Contracts.TransactOpts, data, sig)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(address newOwner) returns()
func (_Contracts *ContractsTransactor) TransferOwnership(opts *bind.TransactOpts, newOwner common.Address) (*types.Transaction, error) {
	return _Contracts.contract.Transact(opts, "transferOwnership", newOwner)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(address newOwner) returns()
func (_Contracts *ContractsSession) TransferOwnership(newOwner common.Address) (*types.Transaction, error) {
	return _Contracts.Contract.TransferOwnership(&_Contracts.TransactOpts, newOwner)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(address newOwner) returns()
func (_Contracts *ContractsTransactorSession) TransferOwnership(newOwner common.Address) (*types.Transaction, error) {
	return _Contracts.Contract.TransferOwnership(&_Contracts.TransactOpts, newOwner)
}

// WithdrawETH is a paid mutator transaction binding the contract method 0x4782f779.
//
// Solidity: function withdrawETH(address to, uint256 amount) returns()
func (_Contracts *ContractsTransactor) WithdrawETH(opts *bind.TransactOpts, to common.Address, amount *big.Int) (*types.Transaction, error) {
	return _Contracts.contract.Transact(opts, "withdrawETH", to, amount)
}

// WithdrawETH is a paid mutator transaction binding the contract method 0x4782f779.
//
// Solidity: function withdrawETH(address to, uint256 amount) returns()
func (_Contracts *ContractsSession) WithdrawETH(to common.Address, amount *big.Int) (*types.Transaction, error) {
	return _Contracts.Contract.WithdrawETH(&_Contracts.TransactOpts, to, amount)
}

// WithdrawETH is a paid mutator transaction binding the contract method 0x4782f779.
//
// Solidity: function withdrawETH(address to, uint256 amount) returns()
func (_Contracts *ContractsTransactorSession) WithdrawETH(to common.Address, amount *big.Int) (*types.Transaction, error) {
	return _Contracts.Contract.WithdrawETH(&_Contracts.TransactOpts, to, amount)
}

// WithdrawToken is a paid mutator transaction binding the contract method 0x01e33667.
//
// Solidity: function withdrawToken(address token, address to, uint256 amount) returns()
func (_Contracts *ContractsTransactor) WithdrawToken(opts *bind.TransactOpts, token common.Address, to common.Address, amount *big.Int) (*types.Transaction, error) {
	return _Contracts.contract.Transact(opts, "withdrawToken", token, to, amount)
}

// WithdrawToken is a paid mutator transaction binding the contract method 0x01e33667.
//
// Solidity: function withdrawToken(address token, address to, uint256 amount) returns()
func (_Contracts *ContractsSession) WithdrawToken(token common.Address, to common.Address, amount *big.Int) (*types.Transaction, error) {
	return _Contracts.Contract.WithdrawToken(&_Contracts.TransactOpts, token, to, amount)
}

// WithdrawToken is a paid mutator transaction binding the contract method 0x01e33667.
//
// Solidity: function withdrawToken(address token, address to, uint256 amount) returns()
func (_Contracts *ContractsTransactorSession) WithdrawToken(token common.Address, to common.Address, amount *big.Int) (*types.Transaction, error) {
	return _Contracts.Contract.WithdrawToken(&_Contracts.TransactOpts, token, to, amount)
}

// ContractsOwnershipTransferredIterator is returned from FilterOwnershipTransferred and is used to iterate over the raw logs and unpacked data for OwnershipTransferred events raised by the Contracts contract.
type ContractsOwnershipTransferredIterator struct {
	Event *ContractsOwnershipTransferred // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ContractsOwnershipTransferredIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ContractsOwnershipTransferred)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ContractsOwnershipTransferred)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ContractsOwnershipTransferredIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ContractsOwnershipTransferredIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ContractsOwnershipTransferred represents a OwnershipTransferred event raised by the Contracts contract.
type ContractsOwnershipTransferred struct {
	PreviousOwner common.Address
	NewOwner      common.Address
	Raw           types.Log // Blockchain specific contextual infos
}

// FilterOwnershipTransferred is a free log retrieval operation binding the contract event 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0.
//
// Solidity: event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)
func (_Contracts *ContractsFilterer) FilterOwnershipTransferred(opts *bind.FilterOpts, previousOwner []common.Address, newOwner []common.Address) (*ContractsOwnershipTransferredIterator, error) {

	var previousOwnerRule []interface{}
	for _, previousOwnerItem := range previousOwner {
		previousOwnerRule = append(previousOwnerRule, previousOwnerItem)
	}
	var newOwnerRule []interface{}
	for _, newOwnerItem := range newOwner {
		newOwnerRule = append(newOwnerRule, newOwnerItem)
	}

	logs, sub, err := _Contracts.contract.FilterLogs(opts, "OwnershipTransferred", previousOwnerRule, newOwnerRule)
	if err != nil {
		return nil, err
	}
	return &ContractsOwnershipTransferredIterator{contract: _Contracts.contract, event: "OwnershipTransferred", logs: logs, sub: sub}, nil
}

// WatchOwnershipTransferred is a free log subscription operation binding the contract event 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0.
//
// Solidity: event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)
func (_Contracts *ContractsFilterer) WatchOwnershipTransferred(opts *bind.WatchOpts, sink chan<- *ContractsOwnershipTransferred, previousOwner []common.Address, newOwner []common.Address) (event.Subscription, error) {

	var previousOwnerRule []interface{}
	for _, previousOwnerItem := range previousOwner {
		previousOwnerRule = append(previousOwnerRule, previousOwnerItem)
	}
	var newOwnerRule []interface{}
	for _, newOwnerItem := range newOwner {
		newOwnerRule = append(newOwnerRule, newOwnerItem)
	}

	logs, sub, err := _Contracts.contract.WatchLogs(opts, "OwnershipTransferred", previousOwnerRule, newOwnerRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ContractsOwnershipTransferred)
				if err := _Contracts.contract.UnpackLog(event, "OwnershipTransferred", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseOwnershipTransferred is a log parse operation binding the contract event 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0.
//
// Solidity: event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)
func (_Contracts *ContractsFilterer) ParseOwnershipTransferred(log types.Log) (*ContractsOwnershipTransferred, error) {
	event := new(ContractsOwnershipTransferred)
	if err := _Contracts.contract.UnpackLog(event, "OwnershipTransferred", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}



{
	"id": "6dccb3dfe48fa043ffbedb5aa9e540b3",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.17",
	"solcLongVersion": "0.8.17+commit.8df45f5f",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/PriceAggregator.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.17;\n\nimport './libraries/UniswapV2.sol';\nimport './libraries/UniswapV3.sol';\nimport '@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol';\nimport '@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol';\nimport '@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol';\nimport './interfaces/IERC20.sol';\n\ncontract PriceAggregator {\n    \n    struct input {\n        address t1;\n        address t2;\n        address provider;\n        uint8 providerVersion;\n    }\n\n    struct output {\n        address t1;\n        address t2;\n        uint256 price;\n    }\n\n    function getPrices(input[] memory inputs) public view returns (output[] memory) {\n        output[] memory outputs = new output[](inputs.length);\n       for (uint i=0;i<inputs.length;i++){\n        if (inputs[i].providerVersion == 2) {\n            uint256 price = UniswapV2.Price(inputs[i].provider,inputs[i].t1,inputs[i].t2);\n            outputs[i] = output(inputs[i].t1,inputs[i].t2,price); \n        \n        } else if (inputs[i].providerVersion == 3) {\n            uint256 price = UniswapV3.sqrtPrice(inputs[i].provider,inputs[i].t1,inputs[i].t2);\n            outputs[i] = output(inputs[i].t1,inputs[i].t2,price); \n        }\n       }\n    \n       return outputs;\n    }\n\n\n}"
			},
			"contracts/interfaces/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity >=0.7.6;\n\ninterface IERC20 {\n    event Approval(address indexed owner, address indexed spender, uint value);\n    event Transfer(address indexed from, address indexed to, uint value);\n\n    function name() external view returns (string memory);\n    function symbol() external view returns (string memory);\n    function decimals() external view returns (uint8);\n    function totalSupply() external view returns (uint);\n    function balanceOf(address owner) external view returns (uint);\n    function allowance(address owner, address spender) external view returns (uint);\n\n    function approve(address spender, uint value) external returns (bool);\n    function transfer(address to, uint value) external returns (bool);\n    function transferFrom(address from, address to, uint value) external returns (bool);\n    function deposit() external payable;\n    function withdraw(uint) external;\n}"
			},
			"@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title The interface for the Uniswap V3 Factory\n/// @notice The Uniswap V3 Factory facilitates creation of Uniswap V3 pools and control over the protocol fees\ninterface IUniswapV3Factory {\n    /// @notice Emitted when the owner of the factory is changed\n    /// @param oldOwner The owner before the owner was changed\n    /// @param newOwner The owner after the owner was changed\n    event OwnerChanged(address indexed oldOwner, address indexed newOwner);\n\n    /// @notice Emitted when a pool is created\n    /// @param token0 The first token of the pool by address sort order\n    /// @param token1 The second token of the pool by address sort order\n    /// @param fee The fee collected upon every swap in the pool, denominated in hundredths of a bip\n    /// @param tickSpacing The minimum number of ticks between initialized ticks\n    /// @param pool The address of the created pool\n    event PoolCreated(\n        address indexed token0,\n        address indexed token1,\n        uint24 indexed fee,\n        int24 tickSpacing,\n        address pool\n    );\n\n    /// @notice Emitted when a new fee amount is enabled for pool creation via the factory\n    /// @param fee The enabled fee, denominated in hundredths of a bip\n    /// @param tickSpacing The minimum number of ticks between initialized ticks for pools created with the given fee\n    event FeeAmountEnabled(uint24 indexed fee, int24 indexed tickSpacing);\n\n    /// @notice Returns the current owner of the factory\n    /// @dev Can be changed by the current owner via setOwner\n    /// @return The address of the factory owner\n    function owner() external view returns (address);\n\n    /// @notice Returns the tick spacing for a given fee amount, if enabled, or 0 if not enabled\n    /// @dev A fee amount can never be removed, so this value should be hard coded or cached in the calling context\n    /// @param fee The enabled fee, denominated in hundredths of a bip. Returns 0 in case of unenabled fee\n    /// @return The tick spacing\n    function feeAmountTickSpacing(uint24 fee) external view returns (int24);\n\n    /// @notice Returns the pool address for a given pair of tokens and a fee, or address 0 if it does not exist\n    /// @dev tokenA and tokenB may be passed in either token0/token1 or token1/token0 order\n    /// @param tokenA The contract address of either token0 or token1\n    /// @param tokenB The contract address of the other token\n    /// @param fee The fee collected upon every swap in the pool, denominated in hundredths of a bip\n    /// @return pool The pool address\n    function getPool(\n        address tokenA,\n        address tokenB,\n        uint24 fee\n    ) external view returns (address pool);\n\n    /// @notice Creates a pool for the given two tokens and fee\n    /// @param tokenA One of the two tokens in the desired pool\n    /// @param tokenB The other of the two tokens in the desired pool\n    /// @param fee The desired fee for the pool\n    /// @dev tokenA and tokenB may be passed in either order: token0/token1 or token1/token0. tickSpacing is retrieved\n    /// from the fee. The call will revert if the pool already exists, the fee is invalid, or the token arguments\n    /// are invalid.\n    /// @return pool The address of the newly created pool\n    function createPool(\n        address tokenA,\n        address tokenB,\n        uint24 fee\n    ) external returns (address pool);\n\n    /// @notice Updates the owner of the factory\n    /// @dev Must be called by the current owner\n    /// @param _owner The new owner of the factory\n    function setOwner(address _owner) external;\n\n    /// @notice Enables a fee amount with the given tickSpacing\n    /// @dev Fee amounts may never be removed once enabled\n    /// @param fee The fee amount to enable, denominated in hundredths of a bip (i.e. 1e-6)\n    /// @param tickSpacing The spacing between ticks to be enforced for all pools created with the given fee amount\n    function enableFeeAmount(uint24 fee, int24 tickSpacing) external;\n}\n"
			},
			"@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\nimport './pool/IUniswapV3PoolImmutables.sol';\nimport './pool/IUniswapV3PoolState.sol';\nimport './pool/IUniswapV3PoolDerivedState.sol';\nimport './pool/IUniswapV3PoolActions.sol';\nimport './pool/IUniswapV3PoolOwnerActions.sol';\nimport './pool/IUniswapV3PoolEvents.sol';\n\n/// @title The interface for a Uniswap V3 Pool\n/// @notice A Uniswap pool facilitates swapping and automated market making between any two assets that strictly conform\n/// to the ERC20 specification\n/// @dev The pool interface is broken up into many smaller pieces\ninterface IUniswapV3Pool is\n    IUniswapV3PoolImmutables,\n    IUniswapV3PoolState,\n    IUniswapV3PoolDerivedState,\n    IUniswapV3PoolActions,\n    IUniswapV3PoolOwnerActions,\n    IUniswapV3PoolEvents\n{\n\n}\n"
			},
			"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol": {
				"content": "pragma solidity >=0.6.2;\n\ninterface IUniswapV2Router01 {\n    function factory() external pure returns (address);\n    function WETH() external pure returns (address);\n\n    function addLiquidity(\n        address tokenA,\n        address tokenB,\n        uint amountADesired,\n        uint amountBDesired,\n        uint amountAMin,\n        uint amountBMin,\n        address to,\n        uint deadline\n    ) external returns (uint amountA, uint amountB, uint liquidity);\n    function addLiquidityETH(\n        address token,\n        uint amountTokenDesired,\n        uint amountTokenMin,\n        uint amountETHMin,\n        address to,\n        uint deadline\n    ) external payable returns (uint amountToken, uint amountETH, uint liquidity);\n    function removeLiquidity(\n        address tokenA,\n        address tokenB,\n        uint liquidity,\n        uint amountAMin,\n        uint amountBMin,\n        address to,\n        uint deadline\n    ) external returns (uint amountA, uint amountB);\n    function removeLiquidityETH(\n        address token,\n        uint liquidity,\n        uint amountTokenMin,\n        uint amountETHMin,\n        address to,\n        uint deadline\n    ) external returns (uint amountToken, uint amountETH);\n    function removeLiquidityWithPermit(\n        address tokenA,\n        address tokenB,\n        uint liquidity,\n        uint amountAMin,\n        uint amountBMin,\n        address to,\n        uint deadline,\n        bool approveMax, uint8 v, bytes32 r, bytes32 s\n    ) external returns (uint amountA, uint amountB);\n    function removeLiquidityETHWithPermit(\n        address token,\n        uint liquidity,\n        uint amountTokenMin,\n        uint amountETHMin,\n        address to,\n        uint deadline,\n        bool approveMax, uint8 v, bytes32 r, bytes32 s\n    ) external returns (uint amountToken, uint amountETH);\n    function swapExactTokensForTokens(\n        uint amountIn,\n        uint amountOutMin,\n        address[] calldata path,\n        address to,\n        uint deadline\n    ) external returns (uint[] memory amounts);\n    function swapTokensForExactTokens(\n        uint amountOut,\n        uint amountInMax,\n        address[] calldata path,\n        address to,\n        uint deadline\n    ) external returns (uint[] memory amounts);\n    function swapExactETHForTokens(uint amountOutMin, address[] calldata path, address to, uint deadline)\n        external\n        payable\n        returns (uint[] memory amounts);\n    function swapTokensForExactETH(uint amountOut, uint amountInMax, address[] calldata path, address to, uint deadline)\n        external\n        returns (uint[] memory amounts);\n    function swapExactTokensForETH(uint amountIn, uint amountOutMin, address[] calldata path, address to, uint deadline)\n        external\n        returns (uint[] memory amounts);\n    function swapETHForExactTokens(uint amountOut, address[] calldata path, address to, uint deadline)\n        external\n        payable\n        returns (uint[] memory amounts);\n\n    function quote(uint amountA, uint reserveA, uint reserveB) external pure returns (uint amountB);\n    function getAmountOut(uint amountIn, uint reserveIn, uint reserveOut) external pure returns (uint amountOut);\n    function getAmountIn(uint amountOut, uint reserveIn, uint reserveOut) external pure returns (uint amountIn);\n    function getAmountsOut(uint amountIn, address[] calldata path) external view returns (uint[] memory amounts);\n    function getAmountsIn(uint amountOut, address[] calldata path) external view returns (uint[] memory amounts);\n}\n"
			},
			"contracts/libraries/UniswapV3.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.17;\n\nimport '@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol';\nimport '@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol';\n\nimport '../interfaces/IERC20.sol';\n\nlibrary UniswapV3 {\n    \n    function sqrtPrice(address provider,address tIn,address tOut) external view returns (uint256){\n            address pool = IUniswapV3Factory(provider).getPool(tIn,tOut,3000);\n            if (pool == address(0)) return 0 ;\n            (uint160 sqrtPriceX96,,,,,,) = IUniswapV3Pool(pool).slot0();\n             return sqrtPriceX96 ;\n    }\n}"
			},
			"contracts/libraries/UniswapV2.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.17;\n\nimport '../interfaces/IERC20.sol';\nimport '@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol';\n\nlibrary UniswapV2 {\n    function Price(address provider, address tIn,address tOut) external view returns (uint256){\n        address[] memory path = new address[](2);\n        path[0] = tIn;\n        path[1] = tOut;\n        uint[] memory amounts = IUniswapV2Router01(provider).getAmountsOut(10**IERC20(tIn).decimals(),path);\n       return amounts[1];\n    }\n\n}"
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Events emitted by a pool\n/// @notice Contains all events emitted by the pool\ninterface IUniswapV3PoolEvents {\n    /// @notice Emitted exactly once by a pool when #initialize is first called on the pool\n    /// @dev Mint/Burn/Swap cannot be emitted by the pool before Initialize\n    /// @param sqrtPriceX96 The initial sqrt price of the pool, as a Q64.96\n    /// @param tick The initial tick of the pool, i.e. log base 1.0001 of the starting price of the pool\n    event Initialize(uint160 sqrtPriceX96, int24 tick);\n\n    /// @notice Emitted when liquidity is minted for a given position\n    /// @param sender The address that minted the liquidity\n    /// @param owner The owner of the position and recipient of any minted liquidity\n    /// @param tickLower The lower tick of the position\n    /// @param tickUpper The upper tick of the position\n    /// @param amount The amount of liquidity minted to the position range\n    /// @param amount0 How much token0 was required for the minted liquidity\n    /// @param amount1 How much token1 was required for the minted liquidity\n    event Mint(\n        address sender,\n        address indexed owner,\n        int24 indexed tickLower,\n        int24 indexed tickUpper,\n        uint128 amount,\n        uint256 amount0,\n        uint256 amount1\n    );\n\n    /// @notice Emitted when fees are collected by the owner of a position\n    /// @dev Collect events may be emitted with zero amount0 and amount1 when the caller chooses not to collect fees\n    /// @param owner The owner of the position for which fees are collected\n    /// @param tickLower The lower tick of the position\n    /// @param tickUpper The upper tick of the position\n    /// @param amount0 The amount of token0 fees collected\n    /// @param amount1 The amount of token1 fees collected\n    event Collect(\n        address indexed owner,\n        address recipient,\n        int24 indexed tickLower,\n        int24 indexed tickUpper,\n        uint128 amount0,\n        uint128 amount1\n    );\n\n    /// @notice Emitted when a position's liquidity is removed\n    /// @dev Does not withdraw any fees earned by the liquidity position, which must be withdrawn via #collect\n    /// @param owner The owner of the position for which liquidity is removed\n    /// @param tickLower The lower tick of the position\n    /// @param tickUpper The upper tick of the position\n    /// @param amount The amount of liquidity to remove\n    /// @param amount0 The amount of token0 withdrawn\n    /// @param amount1 The amount of token1 withdrawn\n    event Burn(\n        address indexed owner,\n        int24 indexed tickLower,\n        int24 indexed tickUpper,\n        uint128 amount,\n        uint256 amount0,\n        uint256 amount1\n    );\n\n    /// @notice Emitted by the pool for any swaps between token0 and token1\n    /// @param sender The address that initiated the swap call, and that received the callback\n    /// @param recipient The address that received the output of the swap\n    /// @param amount0 The delta of the token0 balance of the pool\n    /// @param amount1 The delta of the token1 balance of the pool\n    /// @param sqrtPriceX96 The sqrt(price) of the pool after the swap, as a Q64.96\n    /// @param liquidity The liquidity of the pool after the swap\n    /// @param tick The log base 1.0001 of price of the pool after the swap\n    event Swap(\n        address indexed sender,\n        address indexed recipient,\n        int256 amount0,\n        int256 amount1,\n        uint160 sqrtPriceX96,\n        uint128 liquidity,\n        int24 tick\n    );\n\n    /// @notice Emitted by the pool for any flashes of token0/token1\n    /// @param sender The address that initiated the swap call, and that received the callback\n    /// @param recipient The address that received the tokens from flash\n    /// @param amount0 The amount of token0 that was flashed\n    /// @param amount1 The amount of token1 that was flashed\n    /// @param paid0 The amount of token0 paid for the flash, which can exceed the amount0 plus the fee\n    /// @param paid1 The amount of token1 paid for the flash, which can exceed the amount1 plus the fee\n    event Flash(\n        address indexed sender,\n        address indexed recipient,\n        uint256 amount0,\n        uint256 amount1,\n        uint256 paid0,\n        uint256 paid1\n    );\n\n    /// @notice Emitted by the pool for increases to the number of observations that can be stored\n    /// @dev observationCardinalityNext is not the observation cardinality until an observation is written at the index\n    /// just before a mint/swap/burn.\n    /// @param observationCardinalityNextOld The previous value of the next observation cardinality\n    /// @param observationCardinalityNextNew The updated value of the next observation cardinality\n    event IncreaseObservationCardinalityNext(\n        uint16 observationCardinalityNextOld,\n        uint16 observationCardinalityNextNew\n    );\n\n    /// @notice Emitted when the protocol fee is changed by the pool\n    /// @param feeProtocol0Old The previous value of the token0 protocol fee\n    /// @param feeProtocol1Old The previous value of the token1 protocol fee\n    /// @param feeProtocol0New The updated value of the token0 protocol fee\n    /// @param feeProtocol1New The updated value of the token1 protocol fee\n    event SetFeeProtocol(uint8 feeProtocol0Old, uint8 feeProtocol1Old, uint8 feeProtocol0New, uint8 feeProtocol1New);\n\n    /// @notice Emitted when the collected protocol fees are withdrawn by the factory owner\n    /// @param sender The address that collects the protocol fees\n    /// @param recipient The address that receives the collected protocol fees\n    /// @param amount0 The amount of token0 protocol fees that is withdrawn\n    /// @param amount0 The amount of token1 protocol fees that is withdrawn\n    event CollectProtocol(address indexed sender, address indexed recipient, uint128 amount0, uint128 amount1);\n}\n"
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Permissioned pool actions\n/// @notice Contains pool methods that may only be called by the factory owner\ninterface IUniswapV3PoolOwnerActions {\n    /// @notice Set the denominator of the protocol's % share of the fees\n    /// @param feeProtocol0 new protocol fee for token0 of the pool\n    /// @param feeProtocol1 new protocol fee for token1 of the pool\n    function setFeeProtocol(uint8 feeProtocol0, uint8 feeProtocol1) external;\n\n    /// @notice Collect the protocol fee accrued to the pool\n    /// @param recipient The address to which collected protocol fees should be sent\n    /// @param amount0Requested The maximum amount of token0 to send, can be 0 to collect fees in only token1\n    /// @param amount1Requested The maximum amount of token1 to send, can be 0 to collect fees in only token0\n    /// @return amount0 The protocol fee collected in token0\n    /// @return amount1 The protocol fee collected in token1\n    function collectProtocol(\n        address recipient,\n        uint128 amount0Requested,\n        uint128 amount1Requested\n    ) external returns (uint128 amount0, uint128 amount1);\n}\n"
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Permissionless pool actions\n/// @notice Contains pool methods that can be called by anyone\ninterface IUniswapV3PoolActions {\n    /// @notice Sets the initial price for the pool\n    /// @dev Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value\n    /// @param sqrtPriceX96 the initial sqrt price of the pool as a Q64.96\n    function initialize(uint160 sqrtPriceX96) external;\n\n    /// @notice Adds liquidity for the given recipient/tickLower/tickUpper position\n    /// @dev The caller of this method receives a callback in the form of IUniswapV3MintCallback#uniswapV3MintCallback\n    /// in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends\n    /// on tickLower, tickUpper, the amount of liquidity, and the current price.\n    /// @param recipient The address for which the liquidity will be created\n    /// @param tickLower The lower tick of the position in which to add liquidity\n    /// @param tickUpper The upper tick of the position in which to add liquidity\n    /// @param amount The amount of liquidity to mint\n    /// @param data Any data that should be passed through to the callback\n    /// @return amount0 The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback\n    /// @return amount1 The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback\n    function mint(\n        address recipient,\n        int24 tickLower,\n        int24 tickUpper,\n        uint128 amount,\n        bytes calldata data\n    ) external returns (uint256 amount0, uint256 amount1);\n\n    /// @notice Collects tokens owed to a position\n    /// @dev Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity.\n    /// Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or\n    /// amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the\n    /// actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.\n    /// @param recipient The address which should receive the fees collected\n    /// @param tickLower The lower tick of the position for which to collect fees\n    /// @param tickUpper The upper tick of the position for which to collect fees\n    /// @param amount0Requested How much token0 should be withdrawn from the fees owed\n    /// @param amount1Requested How much token1 should be withdrawn from the fees owed\n    /// @return amount0 The amount of fees collected in token0\n    /// @return amount1 The amount of fees collected in token1\n    function collect(\n        address recipient,\n        int24 tickLower,\n        int24 tickUpper,\n        uint128 amount0Requested,\n        uint128 amount1Requested\n    ) external returns (uint128 amount0, uint128 amount1);\n\n    /// @notice Burn liquidity from the sender and account tokens owed for the liquidity to the position\n    /// @dev Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0\n    /// @dev Fees must be collected separately via a call to #collect\n    /// @param tickLower The lower tick of the position for which to burn liquidity\n    /// @param tickUpper The upper tick of the position for which to burn liquidity\n    /// @param amount How much liquidity to burn\n    /// @return amount0 The amount of token0 sent to the recipient\n    /// @return amount1 The amount of token1 sent to the recipient\n    function burn(\n        int24 tickLower,\n        int24 tickUpper,\n        uint128 amount\n    ) external returns (uint256 amount0, uint256 amount1);\n\n    /// @notice Swap token0 for token1, or token1 for token0\n    /// @dev The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback\n    /// @param recipient The address to receive the output of the swap\n    /// @param zeroForOne The direction of the swap, true for token0 to token1, false for token1 to token0\n    /// @param amountSpecified The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)\n    /// @param sqrtPriceLimitX96 The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this\n    /// value after the swap. If one for zero, the price cannot be greater than this value after the swap\n    /// @param data Any data to be passed through to the callback\n    /// @return amount0 The delta of the balance of token0 of the pool, exact when negative, minimum when positive\n    /// @return amount1 The delta of the balance of token1 of the pool, exact when negative, minimum when positive\n    function swap(\n        address recipient,\n        bool zeroForOne,\n        int256 amountSpecified,\n        uint160 sqrtPriceLimitX96,\n        bytes calldata data\n    ) external returns (int256 amount0, int256 amount1);\n\n    /// @notice Receive token0 and/or token1 and pay it back, plus a fee, in the callback\n    /// @dev The caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallback\n    /// @dev Can be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling\n    /// with 0 amount{0,1} and sending the donation amount(s) from the callback\n    /// @param recipient The address which will receive the token0 and token1 amounts\n    /// @param amount0 The amount of token0 to send\n    /// @param amount1 The amount of token1 to send\n    /// @param data Any data to be passed through to the callback\n    function flash(\n        address recipient,\n        uint256 amount0,\n        uint256 amount1,\n        bytes calldata data\n    ) external;\n\n    /// @notice Increase the maximum number of price and liquidity observations that this pool will store\n    /// @dev This method is no-op if the pool already has an observationCardinalityNext greater than or equal to\n    /// the input observationCardinalityNext.\n    /// @param observationCardinalityNext The desired minimum number of observations for the pool to store\n    function increaseObservationCardinalityNext(uint16 observationCardinalityNext) external;\n}\n"
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Pool state that is not stored\n/// @notice Contains view functions to provide information about the pool that is computed rather than stored on the\n/// blockchain. The functions here may have variable gas costs.\ninterface IUniswapV3PoolDerivedState {\n    /// @notice Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp\n    /// @dev To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing\n    /// the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick,\n    /// you must call it with secondsAgos = [3600, 0].\n    /// @dev The time weighted average tick represents the geometric time weighted average price of the pool, in\n    /// log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.\n    /// @param secondsAgos From how long ago each cumulative tick and liquidity value should be returned\n    /// @return tickCumulatives Cumulative tick values as of each `secondsAgos` from the current block timestamp\n    /// @return secondsPerLiquidityCumulativeX128s Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block\n    /// timestamp\n    function observe(uint32[] calldata secondsAgos)\n        external\n        view\n        returns (int56[] memory tickCumulatives, uint160[] memory secondsPerLiquidityCumulativeX128s);\n\n    /// @notice Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range\n    /// @dev Snapshots must only be compared to other snapshots, taken over a period for which a position existed.\n    /// I.e., snapshots cannot be compared if a position is not held for the entire period between when the first\n    /// snapshot is taken and the second snapshot is taken.\n    /// @param tickLower The lower tick of the range\n    /// @param tickUpper The upper tick of the range\n    /// @return tickCumulativeInside The snapshot of the tick accumulator for the range\n    /// @return secondsPerLiquidityInsideX128 The snapshot of seconds per liquidity for the range\n    /// @return secondsInside The snapshot of seconds per liquidity for the range\n    function snapshotCumulativesInside(int24 tickLower, int24 tickUpper)\n        external\n        view\n        returns (\n            int56 tickCumulativeInside,\n            uint160 secondsPerLiquidityInsideX128,\n            uint32 secondsInside\n        );\n}\n"
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Pool state that can change\n/// @notice These methods compose the pool's state, and can change with any frequency including multiple times\n/// per transaction\ninterface IUniswapV3PoolState {\n    /// @notice The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas\n    /// when accessed externally.\n    /// @return sqrtPriceX96 The current price of the pool as a sqrt(token1/token0) Q64.96 value\n    /// tick The current tick of the pool, i.e. according to the last tick transition that was run.\n    /// This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick\n    /// boundary.\n    /// observationIndex The index of the last oracle observation that was written,\n    /// observationCardinality The current maximum number of observations stored in the pool,\n    /// observationCardinalityNext The next maximum number of observations, to be updated when the observation.\n    /// feeProtocol The protocol fee for both tokens of the pool.\n    /// Encoded as two 4 bit values, where the protocol fee of token1 is shifted 4 bits and the protocol fee of token0\n    /// is the lower 4 bits. Used as the denominator of a fraction of the swap fee, e.g. 4 means 1/4th of the swap fee.\n    /// unlocked Whether the pool is currently locked to reentrancy\n    function slot0()\n        external\n        view\n        returns (\n            uint160 sqrtPriceX96,\n            int24 tick,\n            uint16 observationIndex,\n            uint16 observationCardinality,\n            uint16 observationCardinalityNext,\n            uint8 feeProtocol,\n            bool unlocked\n        );\n\n    /// @notice The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool\n    /// @dev This value can overflow the uint256\n    function feeGrowthGlobal0X128() external view returns (uint256);\n\n    /// @notice The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool\n    /// @dev This value can overflow the uint256\n    function feeGrowthGlobal1X128() external view returns (uint256);\n\n    /// @notice The amounts of token0 and token1 that are owed to the protocol\n    /// @dev Protocol fees will never exceed uint128 max in either token\n    function protocolFees() external view returns (uint128 token0, uint128 token1);\n\n    /// @notice The currently in range liquidity available to the pool\n    /// @dev This value has no relationship to the total liquidity across all ticks\n    function liquidity() external view returns (uint128);\n\n    /// @notice Look up information about a specific tick in the pool\n    /// @param tick The tick to look up\n    /// @return liquidityGross the total amount of position liquidity that uses the pool either as tick lower or\n    /// tick upper,\n    /// liquidityNet how much liquidity changes when the pool price crosses the tick,\n    /// feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0,\n    /// feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1,\n    /// tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick\n    /// secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick,\n    /// secondsOutside the seconds spent on the other side of the tick from the current tick,\n    /// initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false.\n    /// Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0.\n    /// In addition, these values are only relative and must be used only in comparison to previous snapshots for\n    /// a specific position.\n    function ticks(int24 tick)\n        external\n        view\n        returns (\n            uint128 liquidityGross,\n            int128 liquidityNet,\n            uint256 feeGrowthOutside0X128,\n            uint256 feeGrowthOutside1X128,\n            int56 tickCumulativeOutside,\n            uint160 secondsPerLiquidityOutsideX128,\n            uint32 secondsOutside,\n            bool initialized\n        );\n\n    /// @notice Returns 256 packed tick initialized boolean values. See TickBitmap for more information\n    function tickBitmap(int16 wordPosition) external view returns (uint256);\n\n    /// @notice Returns the information about a position by the position's key\n    /// @param key The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper\n    /// @return _liquidity The amount of liquidity in the position,\n    /// Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke,\n    /// Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke,\n    /// Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke,\n    /// Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke\n    function positions(bytes32 key)\n        external\n        view\n        returns (\n            uint128 _liquidity,\n            uint256 feeGrowthInside0LastX128,\n            uint256 feeGrowthInside1LastX128,\n            uint128 tokensOwed0,\n            uint128 tokensOwed1\n        );\n\n    /// @notice Returns data about a specific observation index\n    /// @param index The element of the observations array to fetch\n    /// @dev You most likely want to use #observe() instead of this method to get an observation as of some amount of time\n    /// ago, rather than at a specific index in the array.\n    /// @return blockTimestamp The timestamp of the observation,\n    /// Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp,\n    /// Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp,\n    /// Returns initialized whether the observation has been initialized and the values are safe to use\n    function observations(uint256 index)\n        external\n        view\n        returns (\n            uint32 blockTimestamp,\n            int56 tickCumulative,\n            uint160 secondsPerLiquidityCumulativeX128,\n            bool initialized\n        );\n}\n"
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Pool state that never changes\n/// @notice These parameters are fixed for a pool forever, i.e., the methods will always return the same values\ninterface IUniswapV3PoolImmutables {\n    /// @notice The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface\n    /// @return The contract address\n    function factory() external view returns (address);\n\n    /// @notice The first of the two tokens of the pool, sorted by address\n    /// @return The token contract address\n    function token0() external view returns (address);\n\n    /// @notice The second of the two tokens of the pool, sorted by address\n    /// @return The token contract address\n    function token1() external view returns (address);\n\n    /// @notice The pool's fee in hundredths of a bip, i.e. 1e-6\n    /// @return The fee\n    function fee() external view returns (uint24);\n\n    /// @notice The pool tick spacing\n    /// @dev Ticks can only be used at multiples of this value, minimum of 1 and always positive\n    /// e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ...\n    /// This value is an int24 to avoid casting even though it is always positive.\n    /// @return The tick spacing\n    function tickSpacing() external view returns (int24);\n\n    /// @notice The maximum amount of position liquidity that can use any tick in the range\n    /// @dev This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and\n    /// also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool\n    /// @return The max amount of liquidity per tick\n    function maxLiquidityPerTick() external view returns (uint128);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol": {
				"IUniswapV2Router01": {
					"abi": [
						{
							"inputs": [],
							"name": "WETH",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountADesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBDesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountAMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "addLiquidity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenDesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "addLiquidityETH",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountToken",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveOut",
									"type": "uint256"
								}
							],
							"name": "getAmountIn",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveOut",
									"type": "uint256"
								}
							],
							"name": "getAmountOut",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								}
							],
							"name": "getAmountsIn",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								}
							],
							"name": "getAmountsOut",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveB",
									"type": "uint256"
								}
							],
							"name": "quote",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountAMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "removeLiquidity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "removeLiquidityETH",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountToken",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "approveMax",
									"type": "bool"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "removeLiquidityETHWithPermit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountToken",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountAMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "approveMax",
									"type": "bool"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "removeLiquidityWithPermit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapETHForExactTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactETHForTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactTokensForETH",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactTokensForTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountInMax",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapTokensForExactETH",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountInMax",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapTokensForExactTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"WETH()": "ad5c4648",
							"addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)": "e8e33700",
							"addLiquidityETH(address,uint256,uint256,uint256,address,uint256)": "f305d719",
							"factory()": "c45a0155",
							"getAmountIn(uint256,uint256,uint256)": "85f8c259",
							"getAmountOut(uint256,uint256,uint256)": "054d50d4",
							"getAmountsIn(uint256,address[])": "1f00ca74",
							"getAmountsOut(uint256,address[])": "d06ca61f",
							"quote(uint256,uint256,uint256)": "ad615dec",
							"removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)": "baa2abde",
							"removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)": "02751cec",
							"removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)": "ded9382a",
							"removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)": "2195995c",
							"swapETHForExactTokens(uint256,address[],address,uint256)": "fb3bdb41",
							"swapExactETHForTokens(uint256,address[],address,uint256)": "7ff36ab5",
							"swapExactTokensForETH(uint256,uint256,address[],address,uint256)": "18cbafe5",
							"swapExactTokensForTokens(uint256,uint256,address[],address,uint256)": "38ed1739",
							"swapTokensForExactETH(uint256,uint256,address[],address,uint256)": "4a25d94a",
							"swapTokensForExactTokens(uint256,uint256,address[],address,uint256)": "8803dbee"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"WETH\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountADesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBDesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenDesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"addLiquidityETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveOut\",\"type\":\"uint256\"}],\"name\":\"getAmountIn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveOut\",\"type\":\"uint256\"}],\"name\":\"getAmountOut\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"}],\"name\":\"getAmountsIn\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"}],\"name\":\"getAmountsOut\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveB\",\"type\":\"uint256\"}],\"name\":\"quote\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidityETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"approveMax\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"removeLiquidityETHWithPermit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"approveMax\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"removeLiquidityWithPermit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapETHForExactTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactETHForTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForETH\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMax\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapTokensForExactETH\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMax\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapTokensForExactTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol\":\"IUniswapV2Router01\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol\":{\"keccak256\":\"0x8a3c5c449d4b7cd76513ed6995f4b86e4a86f222c770f8442f5fc128ce29b4d2\",\"urls\":[\"bzz-raw://1df63ca373dafae3bd0ee7fe70f890a1dc7c45ed869c01de68413e0e97ff9deb\",\"dweb:/ipfs/QmefJgEYGUL8KX7kQKYTrDweF8GB7yjy3nw5Bmqzryg7PG\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol": {
				"IUniswapV3Factory": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint24",
									"name": "fee",
									"type": "uint24"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickSpacing",
									"type": "int24"
								}
							],
							"name": "FeeAmountEnabled",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "oldOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnerChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "token0",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "token1",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint24",
									"name": "fee",
									"type": "uint24"
								},
								{
									"indexed": false,
									"internalType": "int24",
									"name": "tickSpacing",
									"type": "int24"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "pool",
									"type": "address"
								}
							],
							"name": "PoolCreated",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint24",
									"name": "fee",
									"type": "uint24"
								}
							],
							"name": "createPool",
							"outputs": [
								{
									"internalType": "address",
									"name": "pool",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint24",
									"name": "fee",
									"type": "uint24"
								},
								{
									"internalType": "int24",
									"name": "tickSpacing",
									"type": "int24"
								}
							],
							"name": "enableFeeAmount",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint24",
									"name": "fee",
									"type": "uint24"
								}
							],
							"name": "feeAmountTickSpacing",
							"outputs": [
								{
									"internalType": "int24",
									"name": "",
									"type": "int24"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint24",
									"name": "fee",
									"type": "uint24"
								}
							],
							"name": "getPool",
							"outputs": [
								{
									"internalType": "address",
									"name": "pool",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								}
							],
							"name": "setOwner",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"FeeAmountEnabled(uint24,int24)": {
								"params": {
									"fee": "The enabled fee, denominated in hundredths of a bip",
									"tickSpacing": "The minimum number of ticks between initialized ticks for pools created with the given fee"
								}
							},
							"OwnerChanged(address,address)": {
								"params": {
									"newOwner": "The owner after the owner was changed",
									"oldOwner": "The owner before the owner was changed"
								}
							},
							"PoolCreated(address,address,uint24,int24,address)": {
								"params": {
									"fee": "The fee collected upon every swap in the pool, denominated in hundredths of a bip",
									"pool": "The address of the created pool",
									"tickSpacing": "The minimum number of ticks between initialized ticks",
									"token0": "The first token of the pool by address sort order",
									"token1": "The second token of the pool by address sort order"
								}
							}
						},
						"kind": "dev",
						"methods": {
							"createPool(address,address,uint24)": {
								"details": "tokenA and tokenB may be passed in either order: token0/token1 or token1/token0. tickSpacing is retrieved from the fee. The call will revert if the pool already exists, the fee is invalid, or the token arguments are invalid.",
								"params": {
									"fee": "The desired fee for the pool",
									"tokenA": "One of the two tokens in the desired pool",
									"tokenB": "The other of the two tokens in the desired pool"
								},
								"returns": {
									"pool": "The address of the newly created pool"
								}
							},
							"enableFeeAmount(uint24,int24)": {
								"details": "Fee amounts may never be removed once enabled",
								"params": {
									"fee": "The fee amount to enable, denominated in hundredths of a bip (i.e. 1e-6)",
									"tickSpacing": "The spacing between ticks to be enforced for all pools created with the given fee amount"
								}
							},
							"feeAmountTickSpacing(uint24)": {
								"details": "A fee amount can never be removed, so this value should be hard coded or cached in the calling context",
								"params": {
									"fee": "The enabled fee, denominated in hundredths of a bip. Returns 0 in case of unenabled fee"
								},
								"returns": {
									"_0": "The tick spacing"
								}
							},
							"getPool(address,address,uint24)": {
								"details": "tokenA and tokenB may be passed in either token0/token1 or token1/token0 order",
								"params": {
									"fee": "The fee collected upon every swap in the pool, denominated in hundredths of a bip",
									"tokenA": "The contract address of either token0 or token1",
									"tokenB": "The contract address of the other token"
								},
								"returns": {
									"pool": "The pool address"
								}
							},
							"owner()": {
								"details": "Can be changed by the current owner via setOwner",
								"returns": {
									"_0": "The address of the factory owner"
								}
							},
							"setOwner(address)": {
								"details": "Must be called by the current owner",
								"params": {
									"_owner": "The new owner of the factory"
								}
							}
						},
						"title": "The interface for the Uniswap V3 Factory",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"createPool(address,address,uint24)": "a1671295",
							"enableFeeAmount(uint24,int24)": "8a7c195f",
							"feeAmountTickSpacing(uint24)": "22afcccb",
							"getPool(address,address,uint24)": "1698ee82",
							"owner()": "8da5cb5b",
							"setOwner(address)": "13af4035"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"}],\"name\":\"FeeAmountEnabled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnerChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"PoolCreated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"}],\"name\":\"createPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"}],\"name\":\"enableFeeAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"}],\"name\":\"feeAmountTickSpacing\",\"outputs\":[{\"internalType\":\"int24\",\"name\":\"\",\"type\":\"int24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"}],\"name\":\"getPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"FeeAmountEnabled(uint24,int24)\":{\"params\":{\"fee\":\"The enabled fee, denominated in hundredths of a bip\",\"tickSpacing\":\"The minimum number of ticks between initialized ticks for pools created with the given fee\"}},\"OwnerChanged(address,address)\":{\"params\":{\"newOwner\":\"The owner after the owner was changed\",\"oldOwner\":\"The owner before the owner was changed\"}},\"PoolCreated(address,address,uint24,int24,address)\":{\"params\":{\"fee\":\"The fee collected upon every swap in the pool, denominated in hundredths of a bip\",\"pool\":\"The address of the created pool\",\"tickSpacing\":\"The minimum number of ticks between initialized ticks\",\"token0\":\"The first token of the pool by address sort order\",\"token1\":\"The second token of the pool by address sort order\"}}},\"kind\":\"dev\",\"methods\":{\"createPool(address,address,uint24)\":{\"details\":\"tokenA and tokenB may be passed in either order: token0/token1 or token1/token0. tickSpacing is retrieved from the fee. The call will revert if the pool already exists, the fee is invalid, or the token arguments are invalid.\",\"params\":{\"fee\":\"The desired fee for the pool\",\"tokenA\":\"One of the two tokens in the desired pool\",\"tokenB\":\"The other of the two tokens in the desired pool\"},\"returns\":{\"pool\":\"The address of the newly created pool\"}},\"enableFeeAmount(uint24,int24)\":{\"details\":\"Fee amounts may never be removed once enabled\",\"params\":{\"fee\":\"The fee amount to enable, denominated in hundredths of a bip (i.e. 1e-6)\",\"tickSpacing\":\"The spacing between ticks to be enforced for all pools created with the given fee amount\"}},\"feeAmountTickSpacing(uint24)\":{\"details\":\"A fee amount can never be removed, so this value should be hard coded or cached in the calling context\",\"params\":{\"fee\":\"The enabled fee, denominated in hundredths of a bip. Returns 0 in case of unenabled fee\"},\"returns\":{\"_0\":\"The tick spacing\"}},\"getPool(address,address,uint24)\":{\"details\":\"tokenA and tokenB may be passed in either token0/token1 or token1/token0 order\",\"params\":{\"fee\":\"The fee collected upon every swap in the pool, denominated in hundredths of a bip\",\"tokenA\":\"The contract address of either token0 or token1\",\"tokenB\":\"The contract address of the other token\"},\"returns\":{\"pool\":\"The pool address\"}},\"owner()\":{\"details\":\"Can be changed by the current owner via setOwner\",\"returns\":{\"_0\":\"The address of the factory owner\"}},\"setOwner(address)\":{\"details\":\"Must be called by the current owner\",\"params\":{\"_owner\":\"The new owner of the factory\"}}},\"title\":\"The interface for the Uniswap V3 Factory\",\"version\":1},\"userdoc\":{\"events\":{\"FeeAmountEnabled(uint24,int24)\":{\"notice\":\"Emitted when a new fee amount is enabled for pool creation via the factory\"},\"OwnerChanged(address,address)\":{\"notice\":\"Emitted when the owner of the factory is changed\"},\"PoolCreated(address,address,uint24,int24,address)\":{\"notice\":\"Emitted when a pool is created\"}},\"kind\":\"user\",\"methods\":{\"createPool(address,address,uint24)\":{\"notice\":\"Creates a pool for the given two tokens and fee\"},\"enableFeeAmount(uint24,int24)\":{\"notice\":\"Enables a fee amount with the given tickSpacing\"},\"feeAmountTickSpacing(uint24)\":{\"notice\":\"Returns the tick spacing for a given fee amount, if enabled, or 0 if not enabled\"},\"getPool(address,address,uint24)\":{\"notice\":\"Returns the pool address for a given pair of tokens and a fee, or address 0 if it does not exist\"},\"owner()\":{\"notice\":\"Returns the current owner of the factory\"},\"setOwner(address)\":{\"notice\":\"Updates the owner of the factory\"}},\"notice\":\"The Uniswap V3 Factory facilitates creation of Uniswap V3 pools and control over the protocol fees\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol\":\"IUniswapV3Factory\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol\":{\"keccak256\":\"0xcc3d0c93fc9ac0febbe09f941b465b57f750bcf3b48432da0b97dc289cfdc489\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b9379ad954680c44a0bc523b314ae4c4da735f9fe1d02aa56ea5bdba6f1136f2\",\"dweb:/ipfs/QmZXdgQNXKAckrXWz9R3mc47F1fvDvr28a2ewJrwNAw71B\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"events": {
							"FeeAmountEnabled(uint24,int24)": {
								"notice": "Emitted when a new fee amount is enabled for pool creation via the factory"
							},
							"OwnerChanged(address,address)": {
								"notice": "Emitted when the owner of the factory is changed"
							},
							"PoolCreated(address,address,uint24,int24,address)": {
								"notice": "Emitted when a pool is created"
							}
						},
						"kind": "user",
						"methods": {
							"createPool(address,address,uint24)": {
								"notice": "Creates a pool for the given two tokens and fee"
							},
							"enableFeeAmount(uint24,int24)": {
								"notice": "Enables a fee amount with the given tickSpacing"
							},
							"feeAmountTickSpacing(uint24)": {
								"notice": "Returns the tick spacing for a given fee amount, if enabled, or 0 if not enabled"
							},
							"getPool(address,address,uint24)": {
								"notice": "Returns the pool address for a given pair of tokens and a fee, or address 0 if it does not exist"
							},
							"owner()": {
								"notice": "Returns the current owner of the factory"
							},
							"setOwner(address)": {
								"notice": "Updates the owner of the factory"
							}
						},
						"notice": "The Uniswap V3 Factory facilitates creation of Uniswap V3 pools and control over the protocol fees",
						"version": 1
					}
				}
			},
			"@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol": {
				"IUniswapV3Pool": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "Burn",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"name": "Collect",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"name": "CollectProtocol",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "paid0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "paid1",
									"type": "uint256"
								}
							],
							"name": "Flash",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint16",
									"name": "observationCardinalityNextOld",
									"type": "uint16"
								},
								{
									"indexed": false,
									"internalType": "uint16",
									"name": "observationCardinalityNextNew",
									"type": "uint16"
								}
							],
							"name": "IncreaseObservationCardinalityNext",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								},
								{
									"indexed": false,
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								}
							],
							"name": "Initialize",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "Mint",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol0Old",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol1Old",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol0New",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol1New",
									"type": "uint8"
								}
							],
							"name": "SetFeeProtocol",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "int256",
									"name": "amount0",
									"type": "int256"
								},
								{
									"indexed": false,
									"internalType": "int256",
									"name": "amount1",
									"type": "int256"
								},
								{
									"indexed": false,
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "liquidity",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								}
							],
							"name": "Swap",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								}
							],
							"name": "burn",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"internalType": "uint128",
									"name": "amount0Requested",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1Requested",
									"type": "uint128"
								}
							],
							"name": "collect",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint128",
									"name": "amount0Requested",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1Requested",
									"type": "uint128"
								}
							],
							"name": "collectProtocol",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "fee",
							"outputs": [
								{
									"internalType": "uint24",
									"name": "",
									"type": "uint24"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "feeGrowthGlobal0X128",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "feeGrowthGlobal1X128",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "flash",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "observationCardinalityNext",
									"type": "uint16"
								}
							],
							"name": "increaseObservationCardinalityNext",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "liquidity",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "maxLiquidityPerTick",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "mint",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "observations",
							"outputs": [
								{
									"internalType": "uint32",
									"name": "blockTimestamp",
									"type": "uint32"
								},
								{
									"internalType": "int56",
									"name": "tickCumulative",
									"type": "int56"
								},
								{
									"internalType": "uint160",
									"name": "secondsPerLiquidityCumulativeX128",
									"type": "uint160"
								},
								{
									"internalType": "bool",
									"name": "initialized",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint32[]",
									"name": "secondsAgos",
									"type": "uint32[]"
								}
							],
							"name": "observe",
							"outputs": [
								{
									"internalType": "int56[]",
									"name": "tickCumulatives",
									"type": "int56[]"
								},
								{
									"internalType": "uint160[]",
									"name": "secondsPerLiquidityCumulativeX128s",
									"type": "uint160[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "key",
									"type": "bytes32"
								}
							],
							"name": "positions",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "_liquidity",
									"type": "uint128"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthInside0LastX128",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthInside1LastX128",
									"type": "uint256"
								},
								{
									"internalType": "uint128",
									"name": "tokensOwed0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "tokensOwed1",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "protocolFees",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "token0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "token1",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint8",
									"name": "feeProtocol0",
									"type": "uint8"
								},
								{
									"internalType": "uint8",
									"name": "feeProtocol1",
									"type": "uint8"
								}
							],
							"name": "setFeeProtocol",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "slot0",
							"outputs": [
								{
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								},
								{
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								},
								{
									"internalType": "uint16",
									"name": "observationIndex",
									"type": "uint16"
								},
								{
									"internalType": "uint16",
									"name": "observationCardinality",
									"type": "uint16"
								},
								{
									"internalType": "uint16",
									"name": "observationCardinalityNext",
									"type": "uint16"
								},
								{
									"internalType": "uint8",
									"name": "feeProtocol",
									"type": "uint8"
								},
								{
									"internalType": "bool",
									"name": "unlocked",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								}
							],
							"name": "snapshotCumulativesInside",
							"outputs": [
								{
									"internalType": "int56",
									"name": "tickCumulativeInside",
									"type": "int56"
								},
								{
									"internalType": "uint160",
									"name": "secondsPerLiquidityInsideX128",
									"type": "uint160"
								},
								{
									"internalType": "uint32",
									"name": "secondsInside",
									"type": "uint32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "zeroForOne",
									"type": "bool"
								},
								{
									"internalType": "int256",
									"name": "amountSpecified",
									"type": "int256"
								},
								{
									"internalType": "uint160",
									"name": "sqrtPriceLimitX96",
									"type": "uint160"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "swap",
							"outputs": [
								{
									"internalType": "int256",
									"name": "amount0",
									"type": "int256"
								},
								{
									"internalType": "int256",
									"name": "amount1",
									"type": "int256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int16",
									"name": "wordPosition",
									"type": "int16"
								}
							],
							"name": "tickBitmap",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tickSpacing",
							"outputs": [
								{
									"internalType": "int24",
									"name": "",
									"type": "int24"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								}
							],
							"name": "ticks",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "liquidityGross",
									"type": "uint128"
								},
								{
									"internalType": "int128",
									"name": "liquidityNet",
									"type": "int128"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthOutside0X128",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthOutside1X128",
									"type": "uint256"
								},
								{
									"internalType": "int56",
									"name": "tickCumulativeOutside",
									"type": "int56"
								},
								{
									"internalType": "uint160",
									"name": "secondsPerLiquidityOutsideX128",
									"type": "uint160"
								},
								{
									"internalType": "uint32",
									"name": "secondsOutside",
									"type": "uint32"
								},
								{
									"internalType": "bool",
									"name": "initialized",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token0",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token1",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "The pool interface is broken up into many smaller pieces",
						"kind": "dev",
						"methods": {
							"burn(int24,int24,uint128)": {
								"details": "Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0Fees must be collected separately via a call to #collect",
								"params": {
									"amount": "How much liquidity to burn",
									"tickLower": "The lower tick of the position for which to burn liquidity",
									"tickUpper": "The upper tick of the position for which to burn liquidity"
								},
								"returns": {
									"amount0": "The amount of token0 sent to the recipient",
									"amount1": "The amount of token1 sent to the recipient"
								}
							},
							"collect(address,int24,int24,uint128,uint128)": {
								"details": "Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity. Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.",
								"params": {
									"amount0Requested": "How much token0 should be withdrawn from the fees owed",
									"amount1Requested": "How much token1 should be withdrawn from the fees owed",
									"recipient": "The address which should receive the fees collected",
									"tickLower": "The lower tick of the position for which to collect fees",
									"tickUpper": "The upper tick of the position for which to collect fees"
								},
								"returns": {
									"amount0": "The amount of fees collected in token0",
									"amount1": "The amount of fees collected in token1"
								}
							},
							"collectProtocol(address,uint128,uint128)": {
								"params": {
									"amount0Requested": "The maximum amount of token0 to send, can be 0 to collect fees in only token1",
									"amount1Requested": "The maximum amount of token1 to send, can be 0 to collect fees in only token0",
									"recipient": "The address to which collected protocol fees should be sent"
								},
								"returns": {
									"amount0": "The protocol fee collected in token0",
									"amount1": "The protocol fee collected in token1"
								}
							},
							"factory()": {
								"returns": {
									"_0": "The contract address"
								}
							},
							"fee()": {
								"returns": {
									"_0": "The fee"
								}
							},
							"feeGrowthGlobal0X128()": {
								"details": "This value can overflow the uint256"
							},
							"feeGrowthGlobal1X128()": {
								"details": "This value can overflow the uint256"
							},
							"flash(address,uint256,uint256,bytes)": {
								"details": "The caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallbackCan be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling with 0 amount{0,1} and sending the donation amount(s) from the callback",
								"params": {
									"amount0": "The amount of token0 to send",
									"amount1": "The amount of token1 to send",
									"data": "Any data to be passed through to the callback",
									"recipient": "The address which will receive the token0 and token1 amounts"
								}
							},
							"increaseObservationCardinalityNext(uint16)": {
								"details": "This method is no-op if the pool already has an observationCardinalityNext greater than or equal to the input observationCardinalityNext.",
								"params": {
									"observationCardinalityNext": "The desired minimum number of observations for the pool to store"
								}
							},
							"initialize(uint160)": {
								"details": "Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value",
								"params": {
									"sqrtPriceX96": "the initial sqrt price of the pool as a Q64.96"
								}
							},
							"liquidity()": {
								"details": "This value has no relationship to the total liquidity across all ticks"
							},
							"maxLiquidityPerTick()": {
								"details": "This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool",
								"returns": {
									"_0": "The max amount of liquidity per tick"
								}
							},
							"mint(address,int24,int24,uint128,bytes)": {
								"details": "The caller of this method receives a callback in the form of IUniswapV3MintCallback#uniswapV3MintCallback in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends on tickLower, tickUpper, the amount of liquidity, and the current price.",
								"params": {
									"amount": "The amount of liquidity to mint",
									"data": "Any data that should be passed through to the callback",
									"recipient": "The address for which the liquidity will be created",
									"tickLower": "The lower tick of the position in which to add liquidity",
									"tickUpper": "The upper tick of the position in which to add liquidity"
								},
								"returns": {
									"amount0": "The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback",
									"amount1": "The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback"
								}
							},
							"observations(uint256)": {
								"details": "You most likely want to use #observe() instead of this method to get an observation as of some amount of time ago, rather than at a specific index in the array.",
								"params": {
									"index": "The element of the observations array to fetch"
								},
								"returns": {
									"blockTimestamp": "The timestamp of the observation, Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp, Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp, Returns initialized whether the observation has been initialized and the values are safe to use"
								}
							},
							"observe(uint32[])": {
								"details": "To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick, you must call it with secondsAgos = [3600, 0].The time weighted average tick represents the geometric time weighted average price of the pool, in log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.",
								"params": {
									"secondsAgos": "From how long ago each cumulative tick and liquidity value should be returned"
								},
								"returns": {
									"secondsPerLiquidityCumulativeX128s": "Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block timestamp",
									"tickCumulatives": "Cumulative tick values as of each `secondsAgos` from the current block timestamp"
								}
							},
							"positions(bytes32)": {
								"params": {
									"key": "The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper"
								},
								"returns": {
									"_liquidity": "The amount of liquidity in the position, Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke, Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke, Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke, Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke"
								}
							},
							"protocolFees()": {
								"details": "Protocol fees will never exceed uint128 max in either token"
							},
							"setFeeProtocol(uint8,uint8)": {
								"params": {
									"feeProtocol0": "new protocol fee for token0 of the pool",
									"feeProtocol1": "new protocol fee for token1 of the pool"
								}
							},
							"slot0()": {
								"returns": {
									"sqrtPriceX96": "The current price of the pool as a sqrt(token1/token0) Q64.96 value tick The current tick of the pool, i.e. according to the last tick transition that was run. This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick boundary. observationIndex The index of the last oracle observation that was written, observationCardinality The current maximum number of observations stored in the pool, observationCardinalityNext The next maximum number of observations, to be updated when the observation. feeProtocol The protocol fee for both tokens of the pool. Encoded as two 4 bit values, where the protocol fee of token1 is shifted 4 bits and the protocol fee of token0 is the lower 4 bits. Used as the denominator of a fraction of the swap fee, e.g. 4 means 1/4th of the swap fee. unlocked Whether the pool is currently locked to reentrancy"
								}
							},
							"snapshotCumulativesInside(int24,int24)": {
								"details": "Snapshots must only be compared to other snapshots, taken over a period for which a position existed. I.e., snapshots cannot be compared if a position is not held for the entire period between when the first snapshot is taken and the second snapshot is taken.",
								"params": {
									"tickLower": "The lower tick of the range",
									"tickUpper": "The upper tick of the range"
								},
								"returns": {
									"secondsInside": "The snapshot of seconds per liquidity for the range",
									"secondsPerLiquidityInsideX128": "The snapshot of seconds per liquidity for the range",
									"tickCumulativeInside": "The snapshot of the tick accumulator for the range"
								}
							},
							"swap(address,bool,int256,uint160,bytes)": {
								"details": "The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback",
								"params": {
									"amountSpecified": "The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)",
									"data": "Any data to be passed through to the callback",
									"recipient": "The address to receive the output of the swap",
									"sqrtPriceLimitX96": "The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this value after the swap. If one for zero, the price cannot be greater than this value after the swap",
									"zeroForOne": "The direction of the swap, true for token0 to token1, false for token1 to token0"
								},
								"returns": {
									"amount0": "The delta of the balance of token0 of the pool, exact when negative, minimum when positive",
									"amount1": "The delta of the balance of token1 of the pool, exact when negative, minimum when positive"
								}
							},
							"tickSpacing()": {
								"details": "Ticks can only be used at multiples of this value, minimum of 1 and always positive e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ... This value is an int24 to avoid casting even though it is always positive.",
								"returns": {
									"_0": "The tick spacing"
								}
							},
							"ticks(int24)": {
								"params": {
									"tick": "The tick to look up"
								},
								"returns": {
									"liquidityGross": "the total amount of position liquidity that uses the pool either as tick lower or tick upper, liquidityNet how much liquidity changes when the pool price crosses the tick, feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0, feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1, tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick, secondsOutside the seconds spent on the other side of the tick from the current tick, initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false. Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0. In addition, these values are only relative and must be used only in comparison to previous snapshots for a specific position."
								}
							},
							"token0()": {
								"returns": {
									"_0": "The token contract address"
								}
							},
							"token1()": {
								"returns": {
									"_0": "The token contract address"
								}
							}
						},
						"title": "The interface for a Uniswap V3 Pool",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"burn(int24,int24,uint128)": "a34123a7",
							"collect(address,int24,int24,uint128,uint128)": "4f1eb3d8",
							"collectProtocol(address,uint128,uint128)": "85b66729",
							"factory()": "c45a0155",
							"fee()": "ddca3f43",
							"feeGrowthGlobal0X128()": "f3058399",
							"feeGrowthGlobal1X128()": "46141319",
							"flash(address,uint256,uint256,bytes)": "490e6cbc",
							"increaseObservationCardinalityNext(uint16)": "32148f67",
							"initialize(uint160)": "f637731d",
							"liquidity()": "1a686502",
							"maxLiquidityPerTick()": "70cf754a",
							"mint(address,int24,int24,uint128,bytes)": "3c8a7d8d",
							"observations(uint256)": "252c09d7",
							"observe(uint32[])": "883bdbfd",
							"positions(bytes32)": "514ea4bf",
							"protocolFees()": "1ad8b03b",
							"setFeeProtocol(uint8,uint8)": "8206a4d1",
							"slot0()": "3850c7bd",
							"snapshotCumulativesInside(int24,int24)": "a38807f2",
							"swap(address,bool,int256,uint160,bytes)": "128acb08",
							"tickBitmap(int16)": "5339c296",
							"tickSpacing()": "d0c93a7c",
							"ticks(int24)": "f30dba93",
							"token0()": "0dfe1681",
							"token1()": "d21220a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"name\":\"Collect\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"name\":\"CollectProtocol\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paid0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paid1\",\"type\":\"uint256\"}],\"name\":\"Flash\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"observationCardinalityNextOld\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"observationCardinalityNextNew\",\"type\":\"uint16\"}],\"name\":\"IncreaseObservationCardinalityNext\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"Initialize\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol0Old\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol1Old\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol0New\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol1New\",\"type\":\"uint8\"}],\"name\":\"SetFeeProtocol\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount0\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount1\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"Swap\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount0Requested\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1Requested\",\"type\":\"uint128\"}],\"name\":\"collect\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"amount0Requested\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1Requested\",\"type\":\"uint128\"}],\"name\":\"collectProtocol\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fee\",\"outputs\":[{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeGrowthGlobal0X128\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeGrowthGlobal1X128\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"flash\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"observationCardinalityNext\",\"type\":\"uint16\"}],\"name\":\"increaseObservationCardinalityNext\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidity\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxLiquidityPerTick\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"observations\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"blockTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"int56\",\"name\":\"tickCumulative\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityCumulativeX128\",\"type\":\"uint160\"},{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32[]\",\"name\":\"secondsAgos\",\"type\":\"uint32[]\"}],\"name\":\"observe\",\"outputs\":[{\"internalType\":\"int56[]\",\"name\":\"tickCumulatives\",\"type\":\"int56[]\"},{\"internalType\":\"uint160[]\",\"name\":\"secondsPerLiquidityCumulativeX128s\",\"type\":\"uint160[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"}],\"name\":\"positions\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"_liquidity\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside0LastX128\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside1LastX128\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"tokensOwed0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"tokensOwed1\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"protocolFees\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"token0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"token1\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"feeProtocol0\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"feeProtocol1\",\"type\":\"uint8\"}],\"name\":\"setFeeProtocol\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"slot0\",\"outputs\":[{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"},{\"internalType\":\"uint16\",\"name\":\"observationIndex\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"observationCardinality\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"observationCardinalityNext\",\"type\":\"uint16\"},{\"internalType\":\"uint8\",\"name\":\"feeProtocol\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"unlocked\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"}],\"name\":\"snapshotCumulativesInside\",\"outputs\":[{\"internalType\":\"int56\",\"name\":\"tickCumulativeInside\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityInsideX128\",\"type\":\"uint160\"},{\"internalType\":\"uint32\",\"name\":\"secondsInside\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"zeroForOne\",\"type\":\"bool\"},{\"internalType\":\"int256\",\"name\":\"amountSpecified\",\"type\":\"int256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"swap\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"amount0\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1\",\"type\":\"int256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int16\",\"name\":\"wordPosition\",\"type\":\"int16\"}],\"name\":\"tickBitmap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tickSpacing\",\"outputs\":[{\"internalType\":\"int24\",\"name\":\"\",\"type\":\"int24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"ticks\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"liquidityGross\",\"type\":\"uint128\"},{\"internalType\":\"int128\",\"name\":\"liquidityNet\",\"type\":\"int128\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthOutside0X128\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthOutside1X128\",\"type\":\"uint256\"},{\"internalType\":\"int56\",\"name\":\"tickCumulativeOutside\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityOutsideX128\",\"type\":\"uint160\"},{\"internalType\":\"uint32\",\"name\":\"secondsOutside\",\"type\":\"uint32\"},{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token0\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"The pool interface is broken up into many smaller pieces\",\"kind\":\"dev\",\"methods\":{\"burn(int24,int24,uint128)\":{\"details\":\"Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0Fees must be collected separately via a call to #collect\",\"params\":{\"amount\":\"How much liquidity to burn\",\"tickLower\":\"The lower tick of the position for which to burn liquidity\",\"tickUpper\":\"The upper tick of the position for which to burn liquidity\"},\"returns\":{\"amount0\":\"The amount of token0 sent to the recipient\",\"amount1\":\"The amount of token1 sent to the recipient\"}},\"collect(address,int24,int24,uint128,uint128)\":{\"details\":\"Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity. Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.\",\"params\":{\"amount0Requested\":\"How much token0 should be withdrawn from the fees owed\",\"amount1Requested\":\"How much token1 should be withdrawn from the fees owed\",\"recipient\":\"The address which should receive the fees collected\",\"tickLower\":\"The lower tick of the position for which to collect fees\",\"tickUpper\":\"The upper tick of the position for which to collect fees\"},\"returns\":{\"amount0\":\"The amount of fees collected in token0\",\"amount1\":\"The amount of fees collected in token1\"}},\"collectProtocol(address,uint128,uint128)\":{\"params\":{\"amount0Requested\":\"The maximum amount of token0 to send, can be 0 to collect fees in only token1\",\"amount1Requested\":\"The maximum amount of token1 to send, can be 0 to collect fees in only token0\",\"recipient\":\"The address to which collected protocol fees should be sent\"},\"returns\":{\"amount0\":\"The protocol fee collected in token0\",\"amount1\":\"The protocol fee collected in token1\"}},\"factory()\":{\"returns\":{\"_0\":\"The contract address\"}},\"fee()\":{\"returns\":{\"_0\":\"The fee\"}},\"feeGrowthGlobal0X128()\":{\"details\":\"This value can overflow the uint256\"},\"feeGrowthGlobal1X128()\":{\"details\":\"This value can overflow the uint256\"},\"flash(address,uint256,uint256,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallbackCan be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling with 0 amount{0,1} and sending the donation amount(s) from the callback\",\"params\":{\"amount0\":\"The amount of token0 to send\",\"amount1\":\"The amount of token1 to send\",\"data\":\"Any data to be passed through to the callback\",\"recipient\":\"The address which will receive the token0 and token1 amounts\"}},\"increaseObservationCardinalityNext(uint16)\":{\"details\":\"This method is no-op if the pool already has an observationCardinalityNext greater than or equal to the input observationCardinalityNext.\",\"params\":{\"observationCardinalityNext\":\"The desired minimum number of observations for the pool to store\"}},\"initialize(uint160)\":{\"details\":\"Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value\",\"params\":{\"sqrtPriceX96\":\"the initial sqrt price of the pool as a Q64.96\"}},\"liquidity()\":{\"details\":\"This value has no relationship to the total liquidity across all ticks\"},\"maxLiquidityPerTick()\":{\"details\":\"This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool\",\"returns\":{\"_0\":\"The max amount of liquidity per tick\"}},\"mint(address,int24,int24,uint128,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3MintCallback#uniswapV3MintCallback in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends on tickLower, tickUpper, the amount of liquidity, and the current price.\",\"params\":{\"amount\":\"The amount of liquidity to mint\",\"data\":\"Any data that should be passed through to the callback\",\"recipient\":\"The address for which the liquidity will be created\",\"tickLower\":\"The lower tick of the position in which to add liquidity\",\"tickUpper\":\"The upper tick of the position in which to add liquidity\"},\"returns\":{\"amount0\":\"The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback\",\"amount1\":\"The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback\"}},\"observations(uint256)\":{\"details\":\"You most likely want to use #observe() instead of this method to get an observation as of some amount of time ago, rather than at a specific index in the array.\",\"params\":{\"index\":\"The element of the observations array to fetch\"},\"returns\":{\"blockTimestamp\":\"The timestamp of the observation, Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp, Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp, Returns initialized whether the observation has been initialized and the values are safe to use\"}},\"observe(uint32[])\":{\"details\":\"To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick, you must call it with secondsAgos = [3600, 0].The time weighted average tick represents the geometric time weighted average price of the pool, in log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.\",\"params\":{\"secondsAgos\":\"From how long ago each cumulative tick and liquidity value should be returned\"},\"returns\":{\"secondsPerLiquidityCumulativeX128s\":\"Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block timestamp\",\"tickCumulatives\":\"Cumulative tick values as of each `secondsAgos` from the current block timestamp\"}},\"positions(bytes32)\":{\"params\":{\"key\":\"The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper\"},\"returns\":{\"_liquidity\":\"The amount of liquidity in the position, Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke, Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke, Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke, Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke\"}},\"protocolFees()\":{\"details\":\"Protocol fees will never exceed uint128 max in either token\"},\"setFeeProtocol(uint8,uint8)\":{\"params\":{\"feeProtocol0\":\"new protocol fee for token0 of the pool\",\"feeProtocol1\":\"new protocol fee for token1 of the pool\"}},\"slot0()\":{\"returns\":{\"sqrtPriceX96\":\"The current price of the pool as a sqrt(token1/token0) Q64.96 value tick The current tick of the pool, i.e. according to the last tick transition that was run. This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick boundary. observationIndex The index of the last oracle observation that was written, observationCardinality The current maximum number of observations stored in the pool, observationCardinalityNext The next maximum number of observations, to be updated when the observation. feeProtocol The protocol fee for both tokens of the pool. Encoded as two 4 bit values, where the protocol fee of token1 is shifted 4 bits and the protocol fee of token0 is the lower 4 bits. Used as the denominator of a fraction of the swap fee, e.g. 4 means 1/4th of the swap fee. unlocked Whether the pool is currently locked to reentrancy\"}},\"snapshotCumulativesInside(int24,int24)\":{\"details\":\"Snapshots must only be compared to other snapshots, taken over a period for which a position existed. I.e., snapshots cannot be compared if a position is not held for the entire period between when the first snapshot is taken and the second snapshot is taken.\",\"params\":{\"tickLower\":\"The lower tick of the range\",\"tickUpper\":\"The upper tick of the range\"},\"returns\":{\"secondsInside\":\"The snapshot of seconds per liquidity for the range\",\"secondsPerLiquidityInsideX128\":\"The snapshot of seconds per liquidity for the range\",\"tickCumulativeInside\":\"The snapshot of the tick accumulator for the range\"}},\"swap(address,bool,int256,uint160,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback\",\"params\":{\"amountSpecified\":\"The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)\",\"data\":\"Any data to be passed through to the callback\",\"recipient\":\"The address to receive the output of the swap\",\"sqrtPriceLimitX96\":\"The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this value after the swap. If one for zero, the price cannot be greater than this value after the swap\",\"zeroForOne\":\"The direction of the swap, true for token0 to token1, false for token1 to token0\"},\"returns\":{\"amount0\":\"The delta of the balance of token0 of the pool, exact when negative, minimum when positive\",\"amount1\":\"The delta of the balance of token1 of the pool, exact when negative, minimum when positive\"}},\"tickSpacing()\":{\"details\":\"Ticks can only be used at multiples of this value, minimum of 1 and always positive e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ... This value is an int24 to avoid casting even though it is always positive.\",\"returns\":{\"_0\":\"The tick spacing\"}},\"ticks(int24)\":{\"params\":{\"tick\":\"The tick to look up\"},\"returns\":{\"liquidityGross\":\"the total amount of position liquidity that uses the pool either as tick lower or tick upper, liquidityNet how much liquidity changes when the pool price crosses the tick, feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0, feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1, tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick, secondsOutside the seconds spent on the other side of the tick from the current tick, initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false. Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0. In addition, these values are only relative and must be used only in comparison to previous snapshots for a specific position.\"}},\"token0()\":{\"returns\":{\"_0\":\"The token contract address\"}},\"token1()\":{\"returns\":{\"_0\":\"The token contract address\"}}},\"title\":\"The interface for a Uniswap V3 Pool\",\"version\":1},\"userdoc\":{\"events\":{\"Burn(address,int24,int24,uint128,uint256,uint256)\":{\"notice\":\"Emitted when a position's liquidity is removed\"},\"Collect(address,address,int24,int24,uint128,uint128)\":{\"notice\":\"Emitted when fees are collected by the owner of a position\"},\"CollectProtocol(address,address,uint128,uint128)\":{\"notice\":\"Emitted when the collected protocol fees are withdrawn by the factory owner\"},\"Flash(address,address,uint256,uint256,uint256,uint256)\":{\"notice\":\"Emitted by the pool for any flashes of token0/token1\"},\"IncreaseObservationCardinalityNext(uint16,uint16)\":{\"notice\":\"Emitted by the pool for increases to the number of observations that can be stored\"},\"Initialize(uint160,int24)\":{\"notice\":\"Emitted exactly once by a pool when #initialize is first called on the pool\"},\"Mint(address,address,int24,int24,uint128,uint256,uint256)\":{\"notice\":\"Emitted when liquidity is minted for a given position\"},\"SetFeeProtocol(uint8,uint8,uint8,uint8)\":{\"notice\":\"Emitted when the protocol fee is changed by the pool\"},\"Swap(address,address,int256,int256,uint160,uint128,int24)\":{\"notice\":\"Emitted by the pool for any swaps between token0 and token1\"}},\"kind\":\"user\",\"methods\":{\"burn(int24,int24,uint128)\":{\"notice\":\"Burn liquidity from the sender and account tokens owed for the liquidity to the position\"},\"collect(address,int24,int24,uint128,uint128)\":{\"notice\":\"Collects tokens owed to a position\"},\"collectProtocol(address,uint128,uint128)\":{\"notice\":\"Collect the protocol fee accrued to the pool\"},\"factory()\":{\"notice\":\"The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface\"},\"fee()\":{\"notice\":\"The pool's fee in hundredths of a bip, i.e. 1e-6\"},\"feeGrowthGlobal0X128()\":{\"notice\":\"The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool\"},\"feeGrowthGlobal1X128()\":{\"notice\":\"The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool\"},\"flash(address,uint256,uint256,bytes)\":{\"notice\":\"Receive token0 and/or token1 and pay it back, plus a fee, in the callback\"},\"increaseObservationCardinalityNext(uint16)\":{\"notice\":\"Increase the maximum number of price and liquidity observations that this pool will store\"},\"initialize(uint160)\":{\"notice\":\"Sets the initial price for the pool\"},\"liquidity()\":{\"notice\":\"The currently in range liquidity available to the pool\"},\"maxLiquidityPerTick()\":{\"notice\":\"The maximum amount of position liquidity that can use any tick in the range\"},\"mint(address,int24,int24,uint128,bytes)\":{\"notice\":\"Adds liquidity for the given recipient/tickLower/tickUpper position\"},\"observations(uint256)\":{\"notice\":\"Returns data about a specific observation index\"},\"observe(uint32[])\":{\"notice\":\"Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp\"},\"positions(bytes32)\":{\"notice\":\"Returns the information about a position by the position's key\"},\"protocolFees()\":{\"notice\":\"The amounts of token0 and token1 that are owed to the protocol\"},\"setFeeProtocol(uint8,uint8)\":{\"notice\":\"Set the denominator of the protocol's % share of the fees\"},\"slot0()\":{\"notice\":\"The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas when accessed externally.\"},\"snapshotCumulativesInside(int24,int24)\":{\"notice\":\"Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range\"},\"swap(address,bool,int256,uint160,bytes)\":{\"notice\":\"Swap token0 for token1, or token1 for token0\"},\"tickBitmap(int16)\":{\"notice\":\"Returns 256 packed tick initialized boolean values. See TickBitmap for more information\"},\"tickSpacing()\":{\"notice\":\"The pool tick spacing\"},\"ticks(int24)\":{\"notice\":\"Look up information about a specific tick in the pool\"},\"token0()\":{\"notice\":\"The first of the two tokens of the pool, sorted by address\"},\"token1()\":{\"notice\":\"The second of the two tokens of the pool, sorted by address\"}},\"notice\":\"A Uniswap pool facilitates swapping and automated market making between any two assets that strictly conform to the ERC20 specification\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol\":\"IUniswapV3Pool\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol\":{\"keccak256\":\"0xfe6113d518466cd6652c85b111e01f33eb62157f49ae5ed7d5a3947a2044adb1\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://1c42b9e6f5902ac38dd43e25750939baa7e0c1425dc75afd717c4412731065d5\",\"dweb:/ipfs/QmWaoacnzsucTvBME2o7YgZBZMhaHv7fkj83htHMVWJKWh\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol\":{\"keccak256\":\"0x9453dd0e7442188667d01d9b65de3f1e14e9511ff3e303179a15f6fc267f7634\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://982f4328f956c3e60e67501e759eb292ac487f76460c774c50e9ae4fcc92aae5\",\"dweb:/ipfs/QmRnzEDsaqtd9PJEVcgQi7p5aV5pMSvRUoGZJAdwFUJxgZ\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol\":{\"keccak256\":\"0xe603ac5b17ecdee73ba2b27efdf386c257a19c14206e87eee77e2017b742d9e5\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://8febc9bdb399a4d94bb89f5377732652e2400e4a8dee808201ade6848f9004e7\",\"dweb:/ipfs/QmaKDqYYFU4d2W2iN77aDHptfbFmYZRrMYXHeGpJmM8C1c\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol\":{\"keccak256\":\"0x8071514d0fe5d17d6fbd31c191cdfb703031c24e0ece3621d88ab10e871375cd\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://d0b571930cc7488b1d546a7e9cea7c52d8b3c4e207da657ed0e0db7343b8cd03\",\"dweb:/ipfs/QmaGK6vVwB95QSTR1XMYvrh7ivYAYZxi3fD7v6VMA4jZ39\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol\":{\"keccak256\":\"0xf6e5d2cd1139c4c276bdbc8e1d2b256e456c866a91f1b868da265c6d2685c3f7\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b99c8c9ae8e27ee6559e5866bea82cbc9ffc8247f8d15b7422a4deb287d4d047\",\"dweb:/ipfs/QmfL8gaqt3ffAnm6nVj5ksuNpLygXuL3xq5VBqrkwC2JJ3\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol\":{\"keccak256\":\"0x759b78a2918af9e99e246dc3af084f654e48ef32bb4e4cb8a966aa3dcaece235\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://64144fb96e1c7fdba87305acadb98a198d26a3d46c097cb3a666e567f6f29735\",\"dweb:/ipfs/QmUnWVwN9FKB9uV5Pr8YfLpWZnYM2DENnRMaadZ492JS9u\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol\":{\"keccak256\":\"0x852dc1f5df7dcf7f11e7bb3eed79f0cea72ad4b25f6a9d2c35aafb48925fd49f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://ed63907c38ff36b0e22bc9ffc53e791ea74f0d4f0e7c257fdfb5aaf8825b1f0f\",\"dweb:/ipfs/QmSQrckghEjs6HVsA5GVgpNpZWvTXMY5eQLF7cN6deFeEg\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"events": {
							"Burn(address,int24,int24,uint128,uint256,uint256)": {
								"notice": "Emitted when a position's liquidity is removed"
							},
							"Collect(address,address,int24,int24,uint128,uint128)": {
								"notice": "Emitted when fees are collected by the owner of a position"
							},
							"CollectProtocol(address,address,uint128,uint128)": {
								"notice": "Emitted when the collected protocol fees are withdrawn by the factory owner"
							},
							"Flash(address,address,uint256,uint256,uint256,uint256)": {
								"notice": "Emitted by the pool for any flashes of token0/token1"
							},
							"IncreaseObservationCardinalityNext(uint16,uint16)": {
								"notice": "Emitted by the pool for increases to the number of observations that can be stored"
							},
							"Initialize(uint160,int24)": {
								"notice": "Emitted exactly once by a pool when #initialize is first called on the pool"
							},
							"Mint(address,address,int24,int24,uint128,uint256,uint256)": {
								"notice": "Emitted when liquidity is minted for a given position"
							},
							"SetFeeProtocol(uint8,uint8,uint8,uint8)": {
								"notice": "Emitted when the protocol fee is changed by the pool"
							},
							"Swap(address,address,int256,int256,uint160,uint128,int24)": {
								"notice": "Emitted by the pool for any swaps between token0 and token1"
							}
						},
						"kind": "user",
						"methods": {
							"burn(int24,int24,uint128)": {
								"notice": "Burn liquidity from the sender and account tokens owed for the liquidity to the position"
							},
							"collect(address,int24,int24,uint128,uint128)": {
								"notice": "Collects tokens owed to a position"
							},
							"collectProtocol(address,uint128,uint128)": {
								"notice": "Collect the protocol fee accrued to the pool"
							},
							"factory()": {
								"notice": "The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface"
							},
							"fee()": {
								"notice": "The pool's fee in hundredths of a bip, i.e. 1e-6"
							},
							"feeGrowthGlobal0X128()": {
								"notice": "The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool"
							},
							"feeGrowthGlobal1X128()": {
								"notice": "The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool"
							},
							"flash(address,uint256,uint256,bytes)": {
								"notice": "Receive token0 and/or token1 and pay it back, plus a fee, in the callback"
							},
							"increaseObservationCardinalityNext(uint16)": {
								"notice": "Increase the maximum number of price and liquidity observations that this pool will store"
							},
							"initialize(uint160)": {
								"notice": "Sets the initial price for the pool"
							},
							"liquidity()": {
								"notice": "The currently in range liquidity available to the pool"
							},
							"maxLiquidityPerTick()": {
								"notice": "The maximum amount of position liquidity that can use any tick in the range"
							},
							"mint(address,int24,int24,uint128,bytes)": {
								"notice": "Adds liquidity for the given recipient/tickLower/tickUpper position"
							},
							"observations(uint256)": {
								"notice": "Returns data about a specific observation index"
							},
							"observe(uint32[])": {
								"notice": "Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp"
							},
							"positions(bytes32)": {
								"notice": "Returns the information about a position by the position's key"
							},
							"protocolFees()": {
								"notice": "The amounts of token0 and token1 that are owed to the protocol"
							},
							"setFeeProtocol(uint8,uint8)": {
								"notice": "Set the denominator of the protocol's % share of the fees"
							},
							"slot0()": {
								"notice": "The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas when accessed externally."
							},
							"snapshotCumulativesInside(int24,int24)": {
								"notice": "Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range"
							},
							"swap(address,bool,int256,uint160,bytes)": {
								"notice": "Swap token0 for token1, or token1 for token0"
							},
							"tickBitmap(int16)": {
								"notice": "Returns 256 packed tick initialized boolean values. See TickBitmap for more information"
							},
							"tickSpacing()": {
								"notice": "The pool tick spacing"
							},
							"ticks(int24)": {
								"notice": "Look up information about a specific tick in the pool"
							},
							"token0()": {
								"notice": "The first of the two tokens of the pool, sorted by address"
							},
							"token1()": {
								"notice": "The second of the two tokens of the pool, sorted by address"
							}
						},
						"notice": "A Uniswap pool facilitates swapping and automated market making between any two assets that strictly conform to the ERC20 specification",
						"version": 1
					}
				}
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol": {
				"IUniswapV3PoolActions": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								}
							],
							"name": "burn",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"internalType": "uint128",
									"name": "amount0Requested",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1Requested",
									"type": "uint128"
								}
							],
							"name": "collect",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "flash",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "observationCardinalityNext",
									"type": "uint16"
								}
							],
							"name": "increaseObservationCardinalityNext",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "mint",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "zeroForOne",
									"type": "bool"
								},
								{
									"internalType": "int256",
									"name": "amountSpecified",
									"type": "int256"
								},
								{
									"internalType": "uint160",
									"name": "sqrtPriceLimitX96",
									"type": "uint160"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "swap",
							"outputs": [
								{
									"internalType": "int256",
									"name": "amount0",
									"type": "int256"
								},
								{
									"internalType": "int256",
									"name": "amount1",
									"type": "int256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"burn(int24,int24,uint128)": {
								"details": "Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0Fees must be collected separately via a call to #collect",
								"params": {
									"amount": "How much liquidity to burn",
									"tickLower": "The lower tick of the position for which to burn liquidity",
									"tickUpper": "The upper tick of the position for which to burn liquidity"
								},
								"returns": {
									"amount0": "The amount of token0 sent to the recipient",
									"amount1": "The amount of token1 sent to the recipient"
								}
							},
							"collect(address,int24,int24,uint128,uint128)": {
								"details": "Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity. Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.",
								"params": {
									"amount0Requested": "How much token0 should be withdrawn from the fees owed",
									"amount1Requested": "How much token1 should be withdrawn from the fees owed",
									"recipient": "The address which should receive the fees collected",
									"tickLower": "The lower tick of the position for which to collect fees",
									"tickUpper": "The upper tick of the position for which to collect fees"
								},
								"returns": {
									"amount0": "The amount of fees collected in token0",
									"amount1": "The amount of fees collected in token1"
								}
							},
							"flash(address,uint256,uint256,bytes)": {
								"details": "The caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallbackCan be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling with 0 amount{0,1} and sending the donation amount(s) from the callback",
								"params": {
									"amount0": "The amount of token0 to send",
									"amount1": "The amount of token1 to send",
									"data": "Any data to be passed through to the callback",
									"recipient": "The address which will receive the token0 and token1 amounts"
								}
							},
							"increaseObservationCardinalityNext(uint16)": {
								"details": "This method is no-op if the pool already has an observationCardinalityNext greater than or equal to the input observationCardinalityNext.",
								"params": {
									"observationCardinalityNext": "The desired minimum number of observations for the pool to store"
								}
							},
							"initialize(uint160)": {
								"details": "Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value",
								"params": {
									"sqrtPriceX96": "the initial sqrt price of the pool as a Q64.96"
								}
							},
							"mint(address,int24,int24,uint128,bytes)": {
								"details": "The caller of this method receives a callback in the form of IUniswapV3MintCallback#uniswapV3MintCallback in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends on tickLower, tickUpper, the amount of liquidity, and the current price.",
								"params": {
									"amount": "The amount of liquidity to mint",
									"data": "Any data that should be passed through to the callback",
									"recipient": "The address for which the liquidity will be created",
									"tickLower": "The lower tick of the position in which to add liquidity",
									"tickUpper": "The upper tick of the position in which to add liquidity"
								},
								"returns": {
									"amount0": "The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback",
									"amount1": "The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback"
								}
							},
							"swap(address,bool,int256,uint160,bytes)": {
								"details": "The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback",
								"params": {
									"amountSpecified": "The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)",
									"data": "Any data to be passed through to the callback",
									"recipient": "The address to receive the output of the swap",
									"sqrtPriceLimitX96": "The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this value after the swap. If one for zero, the price cannot be greater than this value after the swap",
									"zeroForOne": "The direction of the swap, true for token0 to token1, false for token1 to token0"
								},
								"returns": {
									"amount0": "The delta of the balance of token0 of the pool, exact when negative, minimum when positive",
									"amount1": "The delta of the balance of token1 of the pool, exact when negative, minimum when positive"
								}
							}
						},
						"title": "Permissionless pool actions",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"burn(int24,int24,uint128)": "a34123a7",
							"collect(address,int24,int24,uint128,uint128)": "4f1eb3d8",
							"flash(address,uint256,uint256,bytes)": "490e6cbc",
							"increaseObservationCardinalityNext(uint16)": "32148f67",
							"initialize(uint160)": "f637731d",
							"mint(address,int24,int24,uint128,bytes)": "3c8a7d8d",
							"swap(address,bool,int256,uint160,bytes)": "128acb08"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount0Requested\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1Requested\",\"type\":\"uint128\"}],\"name\":\"collect\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"flash\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"observationCardinalityNext\",\"type\":\"uint16\"}],\"name\":\"increaseObservationCardinalityNext\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"zeroForOne\",\"type\":\"bool\"},{\"internalType\":\"int256\",\"name\":\"amountSpecified\",\"type\":\"int256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"swap\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"amount0\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1\",\"type\":\"int256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"burn(int24,int24,uint128)\":{\"details\":\"Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0Fees must be collected separately via a call to #collect\",\"params\":{\"amount\":\"How much liquidity to burn\",\"tickLower\":\"The lower tick of the position for which to burn liquidity\",\"tickUpper\":\"The upper tick of the position for which to burn liquidity\"},\"returns\":{\"amount0\":\"The amount of token0 sent to the recipient\",\"amount1\":\"The amount of token1 sent to the recipient\"}},\"collect(address,int24,int24,uint128,uint128)\":{\"details\":\"Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity. Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.\",\"params\":{\"amount0Requested\":\"How much token0 should be withdrawn from the fees owed\",\"amount1Requested\":\"How much token1 should be withdrawn from the fees owed\",\"recipient\":\"The address which should receive the fees collected\",\"tickLower\":\"The lower tick of the position for which to collect fees\",\"tickUpper\":\"The upper tick of the position for which to collect fees\"},\"returns\":{\"amount0\":\"The amount of fees collected in token0\",\"amount1\":\"The amount of fees collected in token1\"}},\"flash(address,uint256,uint256,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallbackCan be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling with 0 amount{0,1} and sending the donation amount(s) from the callback\",\"params\":{\"amount0\":\"The amount of token0 to send\",\"amount1\":\"The amount of token1 to send\",\"data\":\"Any data to be passed through to the callback\",\"recipient\":\"The address which will receive the token0 and token1 amounts\"}},\"increaseObservationCardinalityNext(uint16)\":{\"details\":\"This method is no-op if the pool already has an observationCardinalityNext greater than or equal to the input observationCardinalityNext.\",\"params\":{\"observationCardinalityNext\":\"The desired minimum number of observations for the pool to store\"}},\"initialize(uint160)\":{\"details\":\"Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value\",\"params\":{\"sqrtPriceX96\":\"the initial sqrt price of the pool as a Q64.96\"}},\"mint(address,int24,int24,uint128,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3MintCallback#uniswapV3MintCallback in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends on tickLower, tickUpper, the amount of liquidity, and the current price.\",\"params\":{\"amount\":\"The amount of liquidity to mint\",\"data\":\"Any data that should be passed through to the callback\",\"recipient\":\"The address for which the liquidity will be created\",\"tickLower\":\"The lower tick of the position in which to add liquidity\",\"tickUpper\":\"The upper tick of the position in which to add liquidity\"},\"returns\":{\"amount0\":\"The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback\",\"amount1\":\"The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback\"}},\"swap(address,bool,int256,uint160,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback\",\"params\":{\"amountSpecified\":\"The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)\",\"data\":\"Any data to be passed through to the callback\",\"recipient\":\"The address to receive the output of the swap\",\"sqrtPriceLimitX96\":\"The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this value after the swap. If one for zero, the price cannot be greater than this value after the swap\",\"zeroForOne\":\"The direction of the swap, true for token0 to token1, false for token1 to token0\"},\"returns\":{\"amount0\":\"The delta of the balance of token0 of the pool, exact when negative, minimum when positive\",\"amount1\":\"The delta of the balance of token1 of the pool, exact when negative, minimum when positive\"}}},\"title\":\"Permissionless pool actions\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"burn(int24,int24,uint128)\":{\"notice\":\"Burn liquidity from the sender and account tokens owed for the liquidity to the position\"},\"collect(address,int24,int24,uint128,uint128)\":{\"notice\":\"Collects tokens owed to a position\"},\"flash(address,uint256,uint256,bytes)\":{\"notice\":\"Receive token0 and/or token1 and pay it back, plus a fee, in the callback\"},\"increaseObservationCardinalityNext(uint16)\":{\"notice\":\"Increase the maximum number of price and liquidity observations that this pool will store\"},\"initialize(uint160)\":{\"notice\":\"Sets the initial price for the pool\"},\"mint(address,int24,int24,uint128,bytes)\":{\"notice\":\"Adds liquidity for the given recipient/tickLower/tickUpper position\"},\"swap(address,bool,int256,uint160,bytes)\":{\"notice\":\"Swap token0 for token1, or token1 for token0\"}},\"notice\":\"Contains pool methods that can be called by anyone\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol\":\"IUniswapV3PoolActions\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol\":{\"keccak256\":\"0x9453dd0e7442188667d01d9b65de3f1e14e9511ff3e303179a15f6fc267f7634\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://982f4328f956c3e60e67501e759eb292ac487f76460c774c50e9ae4fcc92aae5\",\"dweb:/ipfs/QmRnzEDsaqtd9PJEVcgQi7p5aV5pMSvRUoGZJAdwFUJxgZ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"burn(int24,int24,uint128)": {
								"notice": "Burn liquidity from the sender and account tokens owed for the liquidity to the position"
							},
							"collect(address,int24,int24,uint128,uint128)": {
								"notice": "Collects tokens owed to a position"
							},
							"flash(address,uint256,uint256,bytes)": {
								"notice": "Receive token0 and/or token1 and pay it back, plus a fee, in the callback"
							},
							"increaseObservationCardinalityNext(uint16)": {
								"notice": "Increase the maximum number of price and liquidity observations that this pool will store"
							},
							"initialize(uint160)": {
								"notice": "Sets the initial price for the pool"
							},
							"mint(address,int24,int24,uint128,bytes)": {
								"notice": "Adds liquidity for the given recipient/tickLower/tickUpper position"
							},
							"swap(address,bool,int256,uint160,bytes)": {
								"notice": "Swap token0 for token1, or token1 for token0"
							}
						},
						"notice": "Contains pool methods that can be called by anyone",
						"version": 1
					}
				}
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol": {
				"IUniswapV3PoolDerivedState": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint32[]",
									"name": "secondsAgos",
									"type": "uint32[]"
								}
							],
							"name": "observe",
							"outputs": [
								{
									"internalType": "int56[]",
									"name": "tickCumulatives",
									"type": "int56[]"
								},
								{
									"internalType": "uint160[]",
									"name": "secondsPerLiquidityCumulativeX128s",
									"type": "uint160[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								}
							],
							"name": "snapshotCumulativesInside",
							"outputs": [
								{
									"internalType": "int56",
									"name": "tickCumulativeInside",
									"type": "int56"
								},
								{
									"internalType": "uint160",
									"name": "secondsPerLiquidityInsideX128",
									"type": "uint160"
								},
								{
									"internalType": "uint32",
									"name": "secondsInside",
									"type": "uint32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"observe(uint32[])": {
								"details": "To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick, you must call it with secondsAgos = [3600, 0].The time weighted average tick represents the geometric time weighted average price of the pool, in log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.",
								"params": {
									"secondsAgos": "From how long ago each cumulative tick and liquidity value should be returned"
								},
								"returns": {
									"secondsPerLiquidityCumulativeX128s": "Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block timestamp",
									"tickCumulatives": "Cumulative tick values as of each `secondsAgos` from the current block timestamp"
								}
							},
							"snapshotCumulativesInside(int24,int24)": {
								"details": "Snapshots must only be compared to other snapshots, taken over a period for which a position existed. I.e., snapshots cannot be compared if a position is not held for the entire period between when the first snapshot is taken and the second snapshot is taken.",
								"params": {
									"tickLower": "The lower tick of the range",
									"tickUpper": "The upper tick of the range"
								},
								"returns": {
									"secondsInside": "The snapshot of seconds per liquidity for the range",
									"secondsPerLiquidityInsideX128": "The snapshot of seconds per liquidity for the range",
									"tickCumulativeInside": "The snapshot of the tick accumulator for the range"
								}
							}
						},
						"title": "Pool state that is not stored",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"observe(uint32[])": "883bdbfd",
							"snapshotCumulativesInside(int24,int24)": "a38807f2"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint32[]\",\"name\":\"secondsAgos\",\"type\":\"uint32[]\"}],\"name\":\"observe\",\"outputs\":[{\"internalType\":\"int56[]\",\"name\":\"tickCumulatives\",\"type\":\"int56[]\"},{\"internalType\":\"uint160[]\",\"name\":\"secondsPerLiquidityCumulativeX128s\",\"type\":\"uint160[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"}],\"name\":\"snapshotCumulativesInside\",\"outputs\":[{\"internalType\":\"int56\",\"name\":\"tickCumulativeInside\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityInsideX128\",\"type\":\"uint160\"},{\"internalType\":\"uint32\",\"name\":\"secondsInside\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"observe(uint32[])\":{\"details\":\"To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick, you must call it with secondsAgos = [3600, 0].The time weighted average tick represents the geometric time weighted average price of the pool, in log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.\",\"params\":{\"secondsAgos\":\"From how long ago each cumulative tick and liquidity value should be returned\"},\"returns\":{\"secondsPerLiquidityCumulativeX128s\":\"Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block timestamp\",\"tickCumulatives\":\"Cumulative tick values as of each `secondsAgos` from the current block timestamp\"}},\"snapshotCumulativesInside(int24,int24)\":{\"details\":\"Snapshots must only be compared to other snapshots, taken over a period for which a position existed. I.e., snapshots cannot be compared if a position is not held for the entire period between when the first snapshot is taken and the second snapshot is taken.\",\"params\":{\"tickLower\":\"The lower tick of the range\",\"tickUpper\":\"The upper tick of the range\"},\"returns\":{\"secondsInside\":\"The snapshot of seconds per liquidity for the range\",\"secondsPerLiquidityInsideX128\":\"The snapshot of seconds per liquidity for the range\",\"tickCumulativeInside\":\"The snapshot of the tick accumulator for the range\"}}},\"title\":\"Pool state that is not stored\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"observe(uint32[])\":{\"notice\":\"Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp\"},\"snapshotCumulativesInside(int24,int24)\":{\"notice\":\"Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range\"}},\"notice\":\"Contains view functions to provide information about the pool that is computed rather than stored on the blockchain. The functions here may have variable gas costs.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol\":\"IUniswapV3PoolDerivedState\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol\":{\"keccak256\":\"0xe603ac5b17ecdee73ba2b27efdf386c257a19c14206e87eee77e2017b742d9e5\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://8febc9bdb399a4d94bb89f5377732652e2400e4a8dee808201ade6848f9004e7\",\"dweb:/ipfs/QmaKDqYYFU4d2W2iN77aDHptfbFmYZRrMYXHeGpJmM8C1c\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"observe(uint32[])": {
								"notice": "Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp"
							},
							"snapshotCumulativesInside(int24,int24)": {
								"notice": "Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range"
							}
						},
						"notice": "Contains view functions to provide information about the pool that is computed rather than stored on the blockchain. The functions here may have variable gas costs.",
						"version": 1
					}
				}
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol": {
				"IUniswapV3PoolEvents": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "Burn",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"name": "Collect",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"name": "CollectProtocol",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "paid0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "paid1",
									"type": "uint256"
								}
							],
							"name": "Flash",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint16",
									"name": "observationCardinalityNextOld",
									"type": "uint16"
								},
								{
									"indexed": false,
									"internalType": "uint16",
									"name": "observationCardinalityNextNew",
									"type": "uint16"
								}
							],
							"name": "IncreaseObservationCardinalityNext",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								},
								{
									"indexed": false,
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								}
							],
							"name": "Initialize",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "Mint",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol0Old",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol1Old",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol0New",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol1New",
									"type": "uint8"
								}
							],
							"name": "SetFeeProtocol",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "int256",
									"name": "amount0",
									"type": "int256"
								},
								{
									"indexed": false,
									"internalType": "int256",
									"name": "amount1",
									"type": "int256"
								},
								{
									"indexed": false,
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "liquidity",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								}
							],
							"name": "Swap",
							"type": "event"
						}
					],
					"devdoc": {
						"events": {
							"Burn(address,int24,int24,uint128,uint256,uint256)": {
								"details": "Does not withdraw any fees earned by the liquidity position, which must be withdrawn via #collect",
								"params": {
									"amount": "The amount of liquidity to remove",
									"amount0": "The amount of token0 withdrawn",
									"amount1": "The amount of token1 withdrawn",
									"owner": "The owner of the position for which liquidity is removed",
									"tickLower": "The lower tick of the position",
									"tickUpper": "The upper tick of the position"
								}
							},
							"Collect(address,address,int24,int24,uint128,uint128)": {
								"details": "Collect events may be emitted with zero amount0 and amount1 when the caller chooses not to collect fees",
								"params": {
									"amount0": "The amount of token0 fees collected",
									"amount1": "The amount of token1 fees collected",
									"owner": "The owner of the position for which fees are collected",
									"tickLower": "The lower tick of the position",
									"tickUpper": "The upper tick of the position"
								}
							},
							"CollectProtocol(address,address,uint128,uint128)": {
								"params": {
									"amount0": "The amount of token1 protocol fees that is withdrawn",
									"recipient": "The address that receives the collected protocol fees",
									"sender": "The address that collects the protocol fees"
								}
							},
							"Flash(address,address,uint256,uint256,uint256,uint256)": {
								"params": {
									"amount0": "The amount of token0 that was flashed",
									"amount1": "The amount of token1 that was flashed",
									"paid0": "The amount of token0 paid for the flash, which can exceed the amount0 plus the fee",
									"paid1": "The amount of token1 paid for the flash, which can exceed the amount1 plus the fee",
									"recipient": "The address that received the tokens from flash",
									"sender": "The address that initiated the swap call, and that received the callback"
								}
							},
							"IncreaseObservationCardinalityNext(uint16,uint16)": {
								"details": "observationCardinalityNext is not the observation cardinality until an observation is written at the index just before a mint/swap/burn.",
								"params": {
									"observationCardinalityNextNew": "The updated value of the next observation cardinality",
									"observationCardinalityNextOld": "The previous value of the next observation cardinality"
								}
							},
							"Initialize(uint160,int24)": {
								"details": "Mint/Burn/Swap cannot be emitted by the pool before Initialize",
								"params": {
									"sqrtPriceX96": "The initial sqrt price of the pool, as a Q64.96",
									"tick": "The initial tick of the pool, i.e. log base 1.0001 of the starting price of the pool"
								}
							},
							"Mint(address,address,int24,int24,uint128,uint256,uint256)": {
								"params": {
									"amount": "The amount of liquidity minted to the position range",
									"amount0": "How much token0 was required for the minted liquidity",
									"amount1": "How much token1 was required for the minted liquidity",
									"owner": "The owner of the position and recipient of any minted liquidity",
									"sender": "The address that minted the liquidity",
									"tickLower": "The lower tick of the position",
									"tickUpper": "The upper tick of the position"
								}
							},
							"SetFeeProtocol(uint8,uint8,uint8,uint8)": {
								"params": {
									"feeProtocol0New": "The updated value of the token0 protocol fee",
									"feeProtocol0Old": "The previous value of the token0 protocol fee",
									"feeProtocol1New": "The updated value of the token1 protocol fee",
									"feeProtocol1Old": "The previous value of the token1 protocol fee"
								}
							},
							"Swap(address,address,int256,int256,uint160,uint128,int24)": {
								"params": {
									"amount0": "The delta of the token0 balance of the pool",
									"amount1": "The delta of the token1 balance of the pool",
									"liquidity": "The liquidity of the pool after the swap",
									"recipient": "The address that received the output of the swap",
									"sender": "The address that initiated the swap call, and that received the callback",
									"sqrtPriceX96": "The sqrt(price) of the pool after the swap, as a Q64.96",
									"tick": "The log base 1.0001 of price of the pool after the swap"
								}
							}
						},
						"kind": "dev",
						"methods": {},
						"title": "Events emitted by a pool",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"name\":\"Collect\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"name\":\"CollectProtocol\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paid0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paid1\",\"type\":\"uint256\"}],\"name\":\"Flash\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"observationCardinalityNextOld\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"observationCardinalityNextNew\",\"type\":\"uint16\"}],\"name\":\"IncreaseObservationCardinalityNext\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"Initialize\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol0Old\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol1Old\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol0New\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol1New\",\"type\":\"uint8\"}],\"name\":\"SetFeeProtocol\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount0\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount1\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"Swap\",\"type\":\"event\"}],\"devdoc\":{\"events\":{\"Burn(address,int24,int24,uint128,uint256,uint256)\":{\"details\":\"Does not withdraw any fees earned by the liquidity position, which must be withdrawn via #collect\",\"params\":{\"amount\":\"The amount of liquidity to remove\",\"amount0\":\"The amount of token0 withdrawn\",\"amount1\":\"The amount of token1 withdrawn\",\"owner\":\"The owner of the position for which liquidity is removed\",\"tickLower\":\"The lower tick of the position\",\"tickUpper\":\"The upper tick of the position\"}},\"Collect(address,address,int24,int24,uint128,uint128)\":{\"details\":\"Collect events may be emitted with zero amount0 and amount1 when the caller chooses not to collect fees\",\"params\":{\"amount0\":\"The amount of token0 fees collected\",\"amount1\":\"The amount of token1 fees collected\",\"owner\":\"The owner of the position for which fees are collected\",\"tickLower\":\"The lower tick of the position\",\"tickUpper\":\"The upper tick of the position\"}},\"CollectProtocol(address,address,uint128,uint128)\":{\"params\":{\"amount0\":\"The amount of token1 protocol fees that is withdrawn\",\"recipient\":\"The address that receives the collected protocol fees\",\"sender\":\"The address that collects the protocol fees\"}},\"Flash(address,address,uint256,uint256,uint256,uint256)\":{\"params\":{\"amount0\":\"The amount of token0 that was flashed\",\"amount1\":\"The amount of token1 that was flashed\",\"paid0\":\"The amount of token0 paid for the flash, which can exceed the amount0 plus the fee\",\"paid1\":\"The amount of token1 paid for the flash, which can exceed the amount1 plus the fee\",\"recipient\":\"The address that received the tokens from flash\",\"sender\":\"The address that initiated the swap call, and that received the callback\"}},\"IncreaseObservationCardinalityNext(uint16,uint16)\":{\"details\":\"observationCardinalityNext is not the observation cardinality until an observation is written at the index just before a mint/swap/burn.\",\"params\":{\"observationCardinalityNextNew\":\"The updated value of the next observation cardinality\",\"observationCardinalityNextOld\":\"The previous value of the next observation cardinality\"}},\"Initialize(uint160,int24)\":{\"details\":\"Mint/Burn/Swap cannot be emitted by the pool before Initialize\",\"params\":{\"sqrtPriceX96\":\"The initial sqrt price of the pool, as a Q64.96\",\"tick\":\"The initial tick of the pool, i.e. log base 1.0001 of the starting price of the pool\"}},\"Mint(address,address,int24,int24,uint128,uint256,uint256)\":{\"params\":{\"amount\":\"The amount of liquidity minted to the position range\",\"amount0\":\"How much token0 was required for the minted liquidity\",\"amount1\":\"How much token1 was required for the minted liquidity\",\"owner\":\"The owner of the position and recipient of any minted liquidity\",\"sender\":\"The address that minted the liquidity\",\"tickLower\":\"The lower tick of the position\",\"tickUpper\":\"The upper tick of the position\"}},\"SetFeeProtocol(uint8,uint8,uint8,uint8)\":{\"params\":{\"feeProtocol0New\":\"The updated value of the token0 protocol fee\",\"feeProtocol0Old\":\"The previous value of the token0 protocol fee\",\"feeProtocol1New\":\"The updated value of the token1 protocol fee\",\"feeProtocol1Old\":\"The previous value of the token1 protocol fee\"}},\"Swap(address,address,int256,int256,uint160,uint128,int24)\":{\"params\":{\"amount0\":\"The delta of the token0 balance of the pool\",\"amount1\":\"The delta of the token1 balance of the pool\",\"liquidity\":\"The liquidity of the pool after the swap\",\"recipient\":\"The address that received the output of the swap\",\"sender\":\"The address that initiated the swap call, and that received the callback\",\"sqrtPriceX96\":\"The sqrt(price) of the pool after the swap, as a Q64.96\",\"tick\":\"The log base 1.0001 of price of the pool after the swap\"}}},\"kind\":\"dev\",\"methods\":{},\"title\":\"Events emitted by a pool\",\"version\":1},\"userdoc\":{\"events\":{\"Burn(address,int24,int24,uint128,uint256,uint256)\":{\"notice\":\"Emitted when a position's liquidity is removed\"},\"Collect(address,address,int24,int24,uint128,uint128)\":{\"notice\":\"Emitted when fees are collected by the owner of a position\"},\"CollectProtocol(address,address,uint128,uint128)\":{\"notice\":\"Emitted when the collected protocol fees are withdrawn by the factory owner\"},\"Flash(address,address,uint256,uint256,uint256,uint256)\":{\"notice\":\"Emitted by the pool for any flashes of token0/token1\"},\"IncreaseObservationCardinalityNext(uint16,uint16)\":{\"notice\":\"Emitted by the pool for increases to the number of observations that can be stored\"},\"Initialize(uint160,int24)\":{\"notice\":\"Emitted exactly once by a pool when #initialize is first called on the pool\"},\"Mint(address,address,int24,int24,uint128,uint256,uint256)\":{\"notice\":\"Emitted when liquidity is minted for a given position\"},\"SetFeeProtocol(uint8,uint8,uint8,uint8)\":{\"notice\":\"Emitted when the protocol fee is changed by the pool\"},\"Swap(address,address,int256,int256,uint160,uint128,int24)\":{\"notice\":\"Emitted by the pool for any swaps between token0 and token1\"}},\"kind\":\"user\",\"methods\":{},\"notice\":\"Contains all events emitted by the pool\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol\":\"IUniswapV3PoolEvents\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol\":{\"keccak256\":\"0x8071514d0fe5d17d6fbd31c191cdfb703031c24e0ece3621d88ab10e871375cd\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://d0b571930cc7488b1d546a7e9cea7c52d8b3c4e207da657ed0e0db7343b8cd03\",\"dweb:/ipfs/QmaGK6vVwB95QSTR1XMYvrh7ivYAYZxi3fD7v6VMA4jZ39\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"events": {
							"Burn(address,int24,int24,uint128,uint256,uint256)": {
								"notice": "Emitted when a position's liquidity is removed"
							},
							"Collect(address,address,int24,int24,uint128,uint128)": {
								"notice": "Emitted when fees are collected by the owner of a position"
							},
							"CollectProtocol(address,address,uint128,uint128)": {
								"notice": "Emitted when the collected protocol fees are withdrawn by the factory owner"
							},
							"Flash(address,address,uint256,uint256,uint256,uint256)": {
								"notice": "Emitted by the pool for any flashes of token0/token1"
							},
							"IncreaseObservationCardinalityNext(uint16,uint16)": {
								"notice": "Emitted by the pool for increases to the number of observations that can be stored"
							},
							"Initialize(uint160,int24)": {
								"notice": "Emitted exactly once by a pool when #initialize is first called on the pool"
							},
							"Mint(address,address,int24,int24,uint128,uint256,uint256)": {
								"notice": "Emitted when liquidity is minted for a given position"
							},
							"SetFeeProtocol(uint8,uint8,uint8,uint8)": {
								"notice": "Emitted when the protocol fee is changed by the pool"
							},
							"Swap(address,address,int256,int256,uint160,uint128,int24)": {
								"notice": "Emitted by the pool for any swaps between token0 and token1"
							}
						},
						"kind": "user",
						"methods": {},
						"notice": "Contains all events emitted by the pool",
						"version": 1
					}
				}
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol": {
				"IUniswapV3PoolImmutables": {
					"abi": [
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "fee",
							"outputs": [
								{
									"internalType": "uint24",
									"name": "",
									"type": "uint24"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "maxLiquidityPerTick",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tickSpacing",
							"outputs": [
								{
									"internalType": "int24",
									"name": "",
									"type": "int24"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token0",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token1",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"factory()": {
								"returns": {
									"_0": "The contract address"
								}
							},
							"fee()": {
								"returns": {
									"_0": "The fee"
								}
							},
							"maxLiquidityPerTick()": {
								"details": "This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool",
								"returns": {
									"_0": "The max amount of liquidity per tick"
								}
							},
							"tickSpacing()": {
								"details": "Ticks can only be used at multiples of this value, minimum of 1 and always positive e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ... This value is an int24 to avoid casting even though it is always positive.",
								"returns": {
									"_0": "The tick spacing"
								}
							},
							"token0()": {
								"returns": {
									"_0": "The token contract address"
								}
							},
							"token1()": {
								"returns": {
									"_0": "The token contract address"
								}
							}
						},
						"title": "Pool state that never changes",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"factory()": "c45a0155",
							"fee()": "ddca3f43",
							"maxLiquidityPerTick()": "70cf754a",
							"tickSpacing()": "d0c93a7c",
							"token0()": "0dfe1681",
							"token1()": "d21220a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fee\",\"outputs\":[{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxLiquidityPerTick\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tickSpacing\",\"outputs\":[{\"internalType\":\"int24\",\"name\":\"\",\"type\":\"int24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token0\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"factory()\":{\"returns\":{\"_0\":\"The contract address\"}},\"fee()\":{\"returns\":{\"_0\":\"The fee\"}},\"maxLiquidityPerTick()\":{\"details\":\"This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool\",\"returns\":{\"_0\":\"The max amount of liquidity per tick\"}},\"tickSpacing()\":{\"details\":\"Ticks can only be used at multiples of this value, minimum of 1 and always positive e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ... This value is an int24 to avoid casting even though it is always positive.\",\"returns\":{\"_0\":\"The tick spacing\"}},\"token0()\":{\"returns\":{\"_0\":\"The token contract address\"}},\"token1()\":{\"returns\":{\"_0\":\"The token contract address\"}}},\"title\":\"Pool state that never changes\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"factory()\":{\"notice\":\"The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface\"},\"fee()\":{\"notice\":\"The pool's fee in hundredths of a bip, i.e. 1e-6\"},\"maxLiquidityPerTick()\":{\"notice\":\"The maximum amount of position liquidity that can use any tick in the range\"},\"tickSpacing()\":{\"notice\":\"The pool tick spacing\"},\"token0()\":{\"notice\":\"The first of the two tokens of the pool, sorted by address\"},\"token1()\":{\"notice\":\"The second of the two tokens of the pool, sorted by address\"}},\"notice\":\"These parameters are fixed for a pool forever, i.e., the methods will always return the same values\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol\":\"IUniswapV3PoolImmutables\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol\":{\"keccak256\":\"0xf6e5d2cd1139c4c276bdbc8e1d2b256e456c866a91f1b868da265c6d2685c3f7\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b99c8c9ae8e27ee6559e5866bea82cbc9ffc8247f8d15b7422a4deb287d4d047\",\"dweb:/ipfs/QmfL8gaqt3ffAnm6nVj5ksuNpLygXuL3xq5VBqrkwC2JJ3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"factory()": {
								"notice": "The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface"
							},
							"fee()": {
								"notice": "The pool's fee in hundredths of a bip, i.e. 1e-6"
							},
							"maxLiquidityPerTick()": {
								"notice": "The maximum amount of position liquidity that can use any tick in the range"
							},
							"tickSpacing()": {
								"notice": "The pool tick spacing"
							},
							"token0()": {
								"notice": "The first of the two tokens of the pool, sorted by address"
							},
							"token1()": {
								"notice": "The second of the two tokens of the pool, sorted by address"
							}
						},
						"notice": "These parameters are fixed for a pool forever, i.e., the methods will always return the same values",
						"version": 1
					}
				}
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol": {
				"IUniswapV3PoolOwnerActions": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint128",
									"name": "amount0Requested",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1Requested",
									"type": "uint128"
								}
							],
							"name": "collectProtocol",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint8",
									"name": "feeProtocol0",
									"type": "uint8"
								},
								{
									"internalType": "uint8",
									"name": "feeProtocol1",
									"type": "uint8"
								}
							],
							"name": "setFeeProtocol",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"collectProtocol(address,uint128,uint128)": {
								"params": {
									"amount0Requested": "The maximum amount of token0 to send, can be 0 to collect fees in only token1",
									"amount1Requested": "The maximum amount of token1 to send, can be 0 to collect fees in only token0",
									"recipient": "The address to which collected protocol fees should be sent"
								},
								"returns": {
									"amount0": "The protocol fee collected in token0",
									"amount1": "The protocol fee collected in token1"
								}
							},
							"setFeeProtocol(uint8,uint8)": {
								"params": {
									"feeProtocol0": "new protocol fee for token0 of the pool",
									"feeProtocol1": "new protocol fee for token1 of the pool"
								}
							}
						},
						"title": "Permissioned pool actions",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"collectProtocol(address,uint128,uint128)": "85b66729",
							"setFeeProtocol(uint8,uint8)": "8206a4d1"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"amount0Requested\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1Requested\",\"type\":\"uint128\"}],\"name\":\"collectProtocol\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"feeProtocol0\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"feeProtocol1\",\"type\":\"uint8\"}],\"name\":\"setFeeProtocol\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"collectProtocol(address,uint128,uint128)\":{\"params\":{\"amount0Requested\":\"The maximum amount of token0 to send, can be 0 to collect fees in only token1\",\"amount1Requested\":\"The maximum amount of token1 to send, can be 0 to collect fees in only token0\",\"recipient\":\"The address to which collected protocol fees should be sent\"},\"returns\":{\"amount0\":\"The protocol fee collected in token0\",\"amount1\":\"The protocol fee collected in token1\"}},\"setFeeProtocol(uint8,uint8)\":{\"params\":{\"feeProtocol0\":\"new protocol fee for token0 of the pool\",\"feeProtocol1\":\"new protocol fee for token1 of the pool\"}}},\"title\":\"Permissioned pool actions\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"collectProtocol(address,uint128,uint128)\":{\"notice\":\"Collect the protocol fee accrued to the pool\"},\"setFeeProtocol(uint8,uint8)\":{\"notice\":\"Set the denominator of the protocol's % share of the fees\"}},\"notice\":\"Contains pool methods that may only be called by the factory owner\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol\":\"IUniswapV3PoolOwnerActions\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol\":{\"keccak256\":\"0x759b78a2918af9e99e246dc3af084f654e48ef32bb4e4cb8a966aa3dcaece235\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://64144fb96e1c7fdba87305acadb98a198d26a3d46c097cb3a666e567f6f29735\",\"dweb:/ipfs/QmUnWVwN9FKB9uV5Pr8YfLpWZnYM2DENnRMaadZ492JS9u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"collectProtocol(address,uint128,uint128)": {
								"notice": "Collect the protocol fee accrued to the pool"
							},
							"setFeeProtocol(uint8,uint8)": {
								"notice": "Set the denominator of the protocol's % share of the fees"
							}
						},
						"notice": "Contains pool methods that may only be called by the factory owner",
						"version": 1
					}
				}
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol": {
				"IUniswapV3PoolState": {
					"abi": [
						{
							"inputs": [],
							"name": "feeGrowthGlobal0X128",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "feeGrowthGlobal1X128",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "liquidity",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "observations",
							"outputs": [
								{
									"internalType": "uint32",
									"name": "blockTimestamp",
									"type": "uint32"
								},
								{
									"internalType": "int56",
									"name": "tickCumulative",
									"type": "int56"
								},
								{
									"internalType": "uint160",
									"name": "secondsPerLiquidityCumulativeX128",
									"type": "uint160"
								},
								{
									"internalType": "bool",
									"name": "initialized",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "key",
									"type": "bytes32"
								}
							],
							"name": "positions",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "_liquidity",
									"type": "uint128"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthInside0LastX128",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthInside1LastX128",
									"type": "uint256"
								},
								{
									"internalType": "uint128",
									"name": "tokensOwed0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "tokensOwed1",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "protocolFees",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "token0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "token1",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "slot0",
							"outputs": [
								{
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								},
								{
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								},
								{
									"internalType": "uint16",
									"name": "observationIndex",
									"type": "uint16"
								},
								{
									"internalType": "uint16",
									"name": "observationCardinality",
									"type": "uint16"
								},
								{
									"internalType": "uint16",
									"name": "observationCardinalityNext",
									"type": "uint16"
								},
								{
									"internalType": "uint8",
									"name": "feeProtocol",
									"type": "uint8"
								},
								{
									"internalType": "bool",
									"name": "unlocked",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int16",
									"name": "wordPosition",
									"type": "int16"
								}
							],
							"name": "tickBitmap",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								}
							],
							"name": "ticks",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "liquidityGross",
									"type": "uint128"
								},
								{
									"internalType": "int128",
									"name": "liquidityNet",
									"type": "int128"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthOutside0X128",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthOutside1X128",
									"type": "uint256"
								},
								{
									"internalType": "int56",
									"name": "tickCumulativeOutside",
									"type": "int56"
								},
								{
									"internalType": "uint160",
									"name": "secondsPerLiquidityOutsideX128",
									"type": "uint160"
								},
								{
									"internalType": "uint32",
									"name": "secondsOutside",
									"type": "uint32"
								},
								{
									"internalType": "bool",
									"name": "initialized",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"feeGrowthGlobal0X128()": {
								"details": "This value can overflow the uint256"
							},
							"feeGrowthGlobal1X128()": {
								"details": "This value can overflow the uint256"
							},
							"liquidity()": {
								"details": "This value has no relationship to the total liquidity across all ticks"
							},
							"observations(uint256)": {
								"details": "You most likely want to use #observe() instead of this method to get an observation as of some amount of time ago, rather than at a specific index in the array.",
								"params": {
									"index": "The element of the observations array to fetch"
								},
								"returns": {
									"blockTimestamp": "The timestamp of the observation, Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp, Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp, Returns initialized whether the observation has been initialized and the values are safe to use"
								}
							},
							"positions(bytes32)": {
								"params": {
									"key": "The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper"
								},
								"returns": {
									"_liquidity": "The amount of liquidity in the position, Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke, Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke, Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke, Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke"
								}
							},
							"protocolFees()": {
								"details": "Protocol fees will never exceed uint128 max in either token"
							},
							"slot0()": {
								"returns": {
									"sqrtPriceX96": "The current price of the pool as a sqrt(token1/token0) Q64.96 value tick The current tick of the pool, i.e. according to the last tick transition that was run. This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick boundary. observationIndex The index of the last oracle observation that was written, observationCardinality The current maximum number of observations stored in the pool, observationCardinalityNext The next maximum number of observations, to be updated when the observation. feeProtocol The protocol fee for both tokens of the pool. Encoded as two 4 bit values, where the protocol fee of token1 is shifted 4 bits and the protocol fee of token0 is the lower 4 bits. Used as the denominator of a fraction of the swap fee, e.g. 4 means 1/4th of the swap fee. unlocked Whether the pool is currently locked to reentrancy"
								}
							},
							"ticks(int24)": {
								"params": {
									"tick": "The tick to look up"
								},
								"returns": {
									"liquidityGross": "the total amount of position liquidity that uses the pool either as tick lower or tick upper, liquidityNet how much liquidity changes when the pool price crosses the tick, feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0, feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1, tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick, secondsOutside the seconds spent on the other side of the tick from the current tick, initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false. Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0. In addition, these values are only relative and must be used only in comparison to previous snapshots for a specific position."
								}
							}
						},
						"title": "Pool state that can change",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"feeGrowthGlobal0X128()": "f3058399",
							"feeGrowthGlobal1X128()": "46141319",
							"liquidity()": "1a686502",
							"observations(uint256)": "252c09d7",
							"positions(bytes32)": "514ea4bf",
							"protocolFees()": "1ad8b03b",
							"slot0()": "3850c7bd",
							"tickBitmap(int16)": "5339c296",
							"ticks(int24)": "f30dba93"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"feeGrowthGlobal0X128\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeGrowthGlobal1X128\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidity\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"observations\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"blockTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"int56\",\"name\":\"tickCumulative\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityCumulativeX128\",\"type\":\"uint160\"},{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"}],\"name\":\"positions\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"_liquidity\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside0LastX128\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside1LastX128\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"tokensOwed0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"tokensOwed1\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"protocolFees\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"token0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"token1\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"slot0\",\"outputs\":[{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"},{\"internalType\":\"uint16\",\"name\":\"observationIndex\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"observationCardinality\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"observationCardinalityNext\",\"type\":\"uint16\"},{\"internalType\":\"uint8\",\"name\":\"feeProtocol\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"unlocked\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int16\",\"name\":\"wordPosition\",\"type\":\"int16\"}],\"name\":\"tickBitmap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"ticks\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"liquidityGross\",\"type\":\"uint128\"},{\"internalType\":\"int128\",\"name\":\"liquidityNet\",\"type\":\"int128\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthOutside0X128\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthOutside1X128\",\"type\":\"uint256\"},{\"internalType\":\"int56\",\"name\":\"tickCumulativeOutside\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityOutsideX128\",\"type\":\"uint160\"},{\"internalType\":\"uint32\",\"name\":\"secondsOutside\",\"type\":\"uint32\"},{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"feeGrowthGlobal0X128()\":{\"details\":\"This value can overflow the uint256\"},\"feeGrowthGlobal1X128()\":{\"details\":\"This value can overflow the uint256\"},\"liquidity()\":{\"details\":\"This value has no relationship to the total liquidity across all ticks\"},\"observations(uint256)\":{\"details\":\"You most likely want to use #observe() instead of this method to get an observation as of some amount of time ago, rather than at a specific index in the array.\",\"params\":{\"index\":\"The element of the observations array to fetch\"},\"returns\":{\"blockTimestamp\":\"The timestamp of the observation, Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp, Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp, Returns initialized whether the observation has been initialized and the values are safe to use\"}},\"positions(bytes32)\":{\"params\":{\"key\":\"The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper\"},\"returns\":{\"_liquidity\":\"The amount of liquidity in the position, Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke, Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke, Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke, Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke\"}},\"protocolFees()\":{\"details\":\"Protocol fees will never exceed uint128 max in either token\"},\"slot0()\":{\"returns\":{\"sqrtPriceX96\":\"The current price of the pool as a sqrt(token1/token0) Q64.96 value tick The current tick of the pool, i.e. according to the last tick transition that was run. This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick boundary. observationIndex The index of the last oracle observation that was written, observationCardinality The current maximum number of observations stored in the pool, observationCardinalityNext The next maximum number of observations, to be updated when the observation. feeProtocol The protocol fee for both tokens of the pool. Encoded as two 4 bit values, where the protocol fee of token1 is shifted 4 bits and the protocol fee of token0 is the lower 4 bits. Used as the denominator of a fraction of the swap fee, e.g. 4 means 1/4th of the swap fee. unlocked Whether the pool is currently locked to reentrancy\"}},\"ticks(int24)\":{\"params\":{\"tick\":\"The tick to look up\"},\"returns\":{\"liquidityGross\":\"the total amount of position liquidity that uses the pool either as tick lower or tick upper, liquidityNet how much liquidity changes when the pool price crosses the tick, feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0, feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1, tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick, secondsOutside the seconds spent on the other side of the tick from the current tick, initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false. Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0. In addition, these values are only relative and must be used only in comparison to previous snapshots for a specific position.\"}}},\"title\":\"Pool state that can change\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"feeGrowthGlobal0X128()\":{\"notice\":\"The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool\"},\"feeGrowthGlobal1X128()\":{\"notice\":\"The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool\"},\"liquidity()\":{\"notice\":\"The currently in range liquidity available to the pool\"},\"observations(uint256)\":{\"notice\":\"Returns data about a specific observation index\"},\"positions(bytes32)\":{\"notice\":\"Returns the information about a position by the position's key\"},\"protocolFees()\":{\"notice\":\"The amounts of token0 and token1 that are owed to the protocol\"},\"slot0()\":{\"notice\":\"The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas when accessed externally.\"},\"tickBitmap(int16)\":{\"notice\":\"Returns 256 packed tick initialized boolean values. See TickBitmap for more information\"},\"ticks(int24)\":{\"notice\":\"Look up information about a specific tick in the pool\"}},\"notice\":\"These methods compose the pool's state, and can change with any frequency including multiple times per transaction\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol\":\"IUniswapV3PoolState\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol\":{\"keccak256\":\"0x852dc1f5df7dcf7f11e7bb3eed79f0cea72ad4b25f6a9d2c35aafb48925fd49f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://ed63907c38ff36b0e22bc9ffc53e791ea74f0d4f0e7c257fdfb5aaf8825b1f0f\",\"dweb:/ipfs/QmSQrckghEjs6HVsA5GVgpNpZWvTXMY5eQLF7cN6deFeEg\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"feeGrowthGlobal0X128()": {
								"notice": "The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool"
							},
							"feeGrowthGlobal1X128()": {
								"notice": "The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool"
							},
							"liquidity()": {
								"notice": "The currently in range liquidity available to the pool"
							},
							"observations(uint256)": {
								"notice": "Returns data about a specific observation index"
							},
							"positions(bytes32)": {
								"notice": "Returns the information about a position by the position's key"
							},
							"protocolFees()": {
								"notice": "The amounts of token0 and token1 that are owed to the protocol"
							},
							"slot0()": {
								"notice": "The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas when accessed externally."
							},
							"tickBitmap(int16)": {
								"notice": "Returns 256 packed tick initialized boolean values. See TickBitmap for more information"
							},
							"ticks(int24)": {
								"notice": "Look up information about a specific tick in the pool"
							}
						},
						"notice": "These methods compose the pool's state, and can change with any frequency including multiple times per transaction",
						"version": 1
					}
				}
			},
			"contracts/PriceAggregator.sol": {
				"PriceAggregator": {
					"abi": [
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "t1",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "t2",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "provider",
											"type": "address"
										},
										{
											"internalType": "uint8",
											"name": "providerVersion",
											"type": "uint8"
										}
									],
									"internalType": "struct PriceAggregator.input[]",
									"name": "inputs",
									"type": "tuple[]"
								}
							],
							"name": "getPrices",
							"outputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "t1",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "t2",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "price",
											"type": "uint256"
										}
									],
									"internalType": "struct PriceAggregator.output[]",
									"name": "",
									"type": "tuple[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/PriceAggregator.sol\":378:1299  contract PriceAggregator {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/PriceAggregator.sol\":378:1299  contract PriceAggregator {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xff514fa3\n      eq\n      tag_3\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/PriceAggregator.sol\":627:1295  function getPrices(input[] memory inputs) public view returns (output[] memory) {... */\n    tag_3:\n      tag_4\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_5\n      swap2\n      swap1\n      tag_6\n      jump\t// in\n    tag_5:\n      tag_7\n      jump\t// in\n    tag_4:\n      mload(0x40)\n      tag_8\n      swap2\n      swap1\n      tag_9\n      jump\t// in\n    tag_8:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n    tag_7:\n        /* \"contracts/PriceAggregator.sol\":690:705  output[] memory */\n      0x60\n        /* \"contracts/PriceAggregator.sol\":717:740  output[] memory outputs */\n      0x00\n        /* \"contracts/PriceAggregator.sol\":756:762  inputs */\n      dup3\n        /* \"contracts/PriceAggregator.sol\":756:769  inputs.length */\n      mload\n        /* \"contracts/PriceAggregator.sol\":743:770  new output[](inputs.length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_11\n      jumpi\n      tag_12\n      tag_13\n      jump\t// in\n    tag_12:\n    tag_11:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_14\n      jumpi\n      dup2\n      0x20\n      add\n    tag_15:\n      tag_16\n      tag_17\n      jump\t// in\n    tag_16:\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x01\n      swap1\n      sub\n      swap1\n      dup2\n      tag_15\n      jumpi\n      swap1\n      pop\n    tag_14:\n      pop\n        /* \"contracts/PriceAggregator.sol\":717:770  output[] memory outputs = new output[](inputs.length) */\n      swap1\n      pop\n        /* \"contracts/PriceAggregator.sol\":784:790  uint i */\n      0x00\n        /* \"contracts/PriceAggregator.sol\":779:1261  for (uint i=0;i<inputs.length;i++){... */\n    tag_18:\n        /* \"contracts/PriceAggregator.sol\":795:801  inputs */\n      dup4\n        /* \"contracts/PriceAggregator.sol\":795:808  inputs.length */\n      mload\n        /* \"contracts/PriceAggregator.sol\":793:794  i */\n      dup2\n        /* \"contracts/PriceAggregator.sol\":793:808  i<inputs.length */\n      lt\n        /* \"contracts/PriceAggregator.sol\":779:1261  for (uint i=0;i<inputs.length;i++){... */\n      iszero\n      tag_19\n      jumpi\n        /* \"contracts/PriceAggregator.sol\":856:857  2 */\n      0x02\n        /* \"contracts/PriceAggregator.sol\":827:833  inputs */\n      dup5\n        /* \"contracts/PriceAggregator.sol\":834:835  i */\n      dup3\n        /* \"contracts/PriceAggregator.sol\":827:836  inputs[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_21\n      jumpi\n      tag_22\n      tag_23\n      jump\t// in\n    tag_22:\n    tag_21:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/PriceAggregator.sol\":827:852  inputs[i].providerVersion */\n      0x60\n      add\n      mload\n        /* \"contracts/PriceAggregator.sol\":827:857  inputs[i].providerVersion == 2 */\n      0xff\n      and\n      sub\n        /* \"contracts/PriceAggregator.sol\":823:1252  if (inputs[i].providerVersion == 2) {... */\n      tag_24\n      jumpi\n        /* \"contracts/PriceAggregator.sol\":873:886  uint256 price */\n      0x00\n        /* \"contracts/PriceAggregator.sol\":889:898  UniswapV2 */\n      linkerSymbol(\"66db80e837caed232b747c0dfa8ba195e80afd37d58afd4790f0bc06a2afa716\")\n        /* \"contracts/PriceAggregator.sol\":889:904  UniswapV2.Price */\n      0xc361e0b1\n        /* \"contracts/PriceAggregator.sol\":905:911  inputs */\n      dup7\n        /* \"contracts/PriceAggregator.sol\":912:913  i */\n      dup5\n        /* \"contracts/PriceAggregator.sol\":905:914  inputs[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_25\n      jumpi\n      tag_26\n      tag_23\n      jump\t// in\n    tag_26:\n    tag_25:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/PriceAggregator.sol\":905:923  inputs[i].provider */\n      0x40\n      add\n      mload\n        /* \"contracts/PriceAggregator.sol\":924:930  inputs */\n      dup8\n        /* \"contracts/PriceAggregator.sol\":931:932  i */\n      dup6\n        /* \"contracts/PriceAggregator.sol\":924:933  inputs[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_27\n      jumpi\n      tag_28\n      tag_23\n      jump\t// in\n    tag_28:\n    tag_27:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/PriceAggregator.sol\":924:936  inputs[i].t1 */\n      0x00\n      add\n      mload\n        /* \"contracts/PriceAggregator.sol\":937:943  inputs */\n      dup9\n        /* \"contracts/PriceAggregator.sol\":944:945  i */\n      dup7\n        /* \"contracts/PriceAggregator.sol\":937:946  inputs[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_29\n      jumpi\n      tag_30\n      tag_23\n      jump\t// in\n    tag_30:\n    tag_29:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/PriceAggregator.sol\":937:949  inputs[i].t2 */\n      0x20\n      add\n      mload\n        /* \"contracts/PriceAggregator.sol\":889:950  UniswapV2.Price(inputs[i].provider,inputs[i].t1,inputs[i].t2) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_31\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      delegatecall\n      iszero\n      dup1\n      iszero\n      tag_34\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_34:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_35\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_35:\n        /* \"contracts/PriceAggregator.sol\":873:950  uint256 price = UniswapV2.Price(inputs[i].provider,inputs[i].t1,inputs[i].t2) */\n      swap1\n      pop\n        /* \"contracts/PriceAggregator.sol\":977:1016  output(inputs[i].t1,inputs[i].t2,price) */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/PriceAggregator.sol\":984:990  inputs */\n      dup7\n        /* \"contracts/PriceAggregator.sol\":991:992  i */\n      dup5\n        /* \"contracts/PriceAggregator.sol\":984:993  inputs[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_37\n      jumpi\n      tag_38\n      tag_23\n      jump\t// in\n    tag_38:\n    tag_37:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/PriceAggregator.sol\":984:996  inputs[i].t1 */\n      0x00\n      add\n      mload\n        /* \"contracts/PriceAggregator.sol\":977:1016  output(inputs[i].t1,inputs[i].t2,price) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/PriceAggregator.sol\":997:1003  inputs */\n      dup7\n        /* \"contracts/PriceAggregator.sol\":1004:1005  i */\n      dup5\n        /* \"contracts/PriceAggregator.sol\":997:1006  inputs[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_39\n      jumpi\n      tag_40\n      tag_23\n      jump\t// in\n    tag_40:\n    tag_39:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/PriceAggregator.sol\":997:1009  inputs[i].t2 */\n      0x20\n      add\n      mload\n        /* \"contracts/PriceAggregator.sol\":977:1016  output(inputs[i].t1,inputs[i].t2,price) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/PriceAggregator.sol\":1010:1015  price */\n      dup3\n        /* \"contracts/PriceAggregator.sol\":977:1016  output(inputs[i].t1,inputs[i].t2,price) */\n      dup2\n      mstore\n      pop\n        /* \"contracts/PriceAggregator.sol\":964:971  outputs */\n      dup4\n        /* \"contracts/PriceAggregator.sol\":972:973  i */\n      dup4\n        /* \"contracts/PriceAggregator.sol\":964:974  outputs[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_41\n      jumpi\n      tag_42\n      tag_23\n      jump\t// in\n    tag_42:\n    tag_41:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"contracts/PriceAggregator.sol\":964:1016  outputs[i] = output(inputs[i].t1,inputs[i].t2,price) */\n      dup2\n      swap1\n      mstore\n      pop\n        /* \"contracts/PriceAggregator.sol\":859:1037  {... */\n      pop\n        /* \"contracts/PriceAggregator.sol\":823:1252  if (inputs[i].providerVersion == 2) {... */\n      jump(tag_43)\n    tag_24:\n        /* \"contracts/PriceAggregator.sol\":1076:1077  3 */\n      0x03\n        /* \"contracts/PriceAggregator.sol\":1047:1053  inputs */\n      dup5\n        /* \"contracts/PriceAggregator.sol\":1054:1055  i */\n      dup3\n        /* \"contracts/PriceAggregator.sol\":1047:1056  inputs[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_44\n      jumpi\n      tag_45\n      tag_23\n      jump\t// in\n    tag_45:\n    tag_44:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/PriceAggregator.sol\":1047:1072  inputs[i].providerVersion */\n      0x60\n      add\n      mload\n        /* \"contracts/PriceAggregator.sol\":1047:1077  inputs[i].providerVersion == 3 */\n      0xff\n      and\n      sub\n        /* \"contracts/PriceAggregator.sol\":1043:1252  if (inputs[i].providerVersion == 3) {... */\n      tag_46\n      jumpi\n        /* \"contracts/PriceAggregator.sol\":1093:1106  uint256 price */\n      0x00\n        /* \"contracts/PriceAggregator.sol\":1109:1118  UniswapV3 */\n      linkerSymbol(\"295ab41254e875e078eae9a73e9e2c34b169d6e6e61c89bb6c8551dc204f08c5\")\n        /* \"contracts/PriceAggregator.sol\":1109:1128  UniswapV3.sqrtPrice */\n      0xedf15a9a\n        /* \"contracts/PriceAggregator.sol\":1129:1135  inputs */\n      dup7\n        /* \"contracts/PriceAggregator.sol\":1136:1137  i */\n      dup5\n        /* \"contracts/PriceAggregator.sol\":1129:1138  inputs[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_47\n      jumpi\n      tag_48\n      tag_23\n      jump\t// in\n    tag_48:\n    tag_47:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/PriceAggregator.sol\":1129:1147  inputs[i].provider */\n      0x40\n      add\n      mload\n        /* \"contracts/PriceAggregator.sol\":1148:1154  inputs */\n      dup8\n        /* \"contracts/PriceAggregator.sol\":1155:1156  i */\n      dup6\n        /* \"contracts/PriceAggregator.sol\":1148:1157  inputs[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_49\n      jumpi\n      tag_50\n      tag_23\n      jump\t// in\n    tag_50:\n    tag_49:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/PriceAggregator.sol\":1148:1160  inputs[i].t1 */\n      0x00\n      add\n      mload\n        /* \"contracts/PriceAggregator.sol\":1161:1167  inputs */\n      dup9\n        /* \"contracts/PriceAggregator.sol\":1168:1169  i */\n      dup7\n        /* \"contracts/PriceAggregator.sol\":1161:1170  inputs[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_51\n      jumpi\n      tag_52\n      tag_23\n      jump\t// in\n    tag_52:\n    tag_51:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/PriceAggregator.sol\":1161:1173  inputs[i].t2 */\n      0x20\n      add\n      mload\n        /* \"contracts/PriceAggregator.sol\":1109:1174  UniswapV3.sqrtPrice(inputs[i].provider,inputs[i].t1,inputs[i].t2) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_53\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_53:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      delegatecall\n      iszero\n      dup1\n      iszero\n      tag_55\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_55:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_56\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_56:\n        /* \"contracts/PriceAggregator.sol\":1093:1174  uint256 price = UniswapV3.sqrtPrice(inputs[i].provider,inputs[i].t1,inputs[i].t2) */\n      swap1\n      pop\n        /* \"contracts/PriceAggregator.sol\":1201:1240  output(inputs[i].t1,inputs[i].t2,price) */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/PriceAggregator.sol\":1208:1214  inputs */\n      dup7\n        /* \"contracts/PriceAggregator.sol\":1215:1216  i */\n      dup5\n        /* \"contracts/PriceAggregator.sol\":1208:1217  inputs[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_57\n      jumpi\n      tag_58\n      tag_23\n      jump\t// in\n    tag_58:\n    tag_57:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/PriceAggregator.sol\":1208:1220  inputs[i].t1 */\n      0x00\n      add\n      mload\n        /* \"contracts/PriceAggregator.sol\":1201:1240  output(inputs[i].t1,inputs[i].t2,price) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/PriceAggregator.sol\":1221:1227  inputs */\n      dup7\n        /* \"contracts/PriceAggregator.sol\":1228:1229  i */\n      dup5\n        /* \"contracts/PriceAggregator.sol\":1221:1230  inputs[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_59\n      jumpi\n      tag_60\n      tag_23\n      jump\t// in\n    tag_60:\n    tag_59:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/PriceAggregator.sol\":1221:1233  inputs[i].t2 */\n      0x20\n      add\n      mload\n        /* \"contracts/PriceAggregator.sol\":1201:1240  output(inputs[i].t1,inputs[i].t2,price) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/PriceAggregator.sol\":1234:1239  price */\n      dup3\n        /* \"contracts/PriceAggregator.sol\":1201:1240  output(inputs[i].t1,inputs[i].t2,price) */\n      dup2\n      mstore\n      pop\n        /* \"contracts/PriceAggregator.sol\":1188:1195  outputs */\n      dup4\n        /* \"contracts/PriceAggregator.sol\":1196:1197  i */\n      dup4\n        /* \"contracts/PriceAggregator.sol\":1188:1198  outputs[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_61\n      jumpi\n      tag_62\n      tag_23\n      jump\t// in\n    tag_62:\n    tag_61:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"contracts/PriceAggregator.sol\":1188:1240  outputs[i] = output(inputs[i].t1,inputs[i].t2,price) */\n      dup2\n      swap1\n      mstore\n      pop\n        /* \"contracts/PriceAggregator.sol\":1079:1252  {... */\n      pop\n        /* \"contracts/PriceAggregator.sol\":1043:1252  if (inputs[i].providerVersion == 3) {... */\n    tag_46:\n        /* \"contracts/PriceAggregator.sol\":823:1252  if (inputs[i].providerVersion == 2) {... */\n    tag_43:\n        /* \"contracts/PriceAggregator.sol\":809:812  i++ */\n      dup1\n      dup1\n      tag_63\n      swap1\n      tag_64\n      jump\t// in\n    tag_63:\n      swap2\n      pop\n      pop\n        /* \"contracts/PriceAggregator.sol\":779:1261  for (uint i=0;i<inputs.length;i++){... */\n      jump(tag_18)\n    tag_19:\n      pop\n        /* \"contracts/PriceAggregator.sol\":1281:1288  outputs */\n      dup1\n        /* \"contracts/PriceAggregator.sol\":1274:1288  return outputs */\n      swap2\n      pop\n      pop\n        /* \"contracts/PriceAggregator.sol\":627:1295  function getPrices(input[] memory inputs) public view returns (output[] memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n    tag_17:\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      and(0xffffffffffffffffffffffffffffffffffffffff, 0x00)\n      dup2\n      mstore\n      0x20\n      add\n      and(0xffffffffffffffffffffffffffffffffffffffff, 0x00)\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      pop\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:82   */\n    tag_65:\n        /* \"#utility.yul\":40:46   */\n      0x00\n        /* \"#utility.yul\":73:75   */\n      0x40\n        /* \"#utility.yul\":67:76   */\n      mload\n        /* \"#utility.yul\":57:76   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:82   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_66:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_67:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:451   */\n    tag_68:\n        /* \"#utility.yul\":443:444   */\n      0x00\n        /* \"#utility.yul\":440:441   */\n      dup1\n        /* \"#utility.yul\":433:445   */\n      revert\n        /* \"#utility.yul\":457:559   */\n    tag_69:\n        /* \"#utility.yul\":498:504   */\n      0x00\n        /* \"#utility.yul\":549:551   */\n      0x1f\n        /* \"#utility.yul\":545:552   */\n      not\n        /* \"#utility.yul\":540:542   */\n      0x1f\n        /* \"#utility.yul\":533:538   */\n      dup4\n        /* \"#utility.yul\":529:543   */\n      add\n        /* \"#utility.yul\":525:553   */\n      and\n        /* \"#utility.yul\":515:553   */\n      swap1\n      pop\n        /* \"#utility.yul\":457:559   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":565:745   */\n    tag_13:\n        /* \"#utility.yul\":613:690   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":610:611   */\n      0x00\n        /* \"#utility.yul\":603:691   */\n      mstore\n        /* \"#utility.yul\":710:714   */\n      0x41\n        /* \"#utility.yul\":707:708   */\n      0x04\n        /* \"#utility.yul\":700:715   */\n      mstore\n        /* \"#utility.yul\":734:738   */\n      0x24\n        /* \"#utility.yul\":731:732   */\n      0x00\n        /* \"#utility.yul\":724:739   */\n      revert\n        /* \"#utility.yul\":751:1032   */\n    tag_70:\n        /* \"#utility.yul\":834:861   */\n      tag_108\n        /* \"#utility.yul\":856:860   */\n      dup3\n        /* \"#utility.yul\":834:861   */\n      tag_69\n      jump\t// in\n    tag_108:\n        /* \"#utility.yul\":826:832   */\n      dup2\n        /* \"#utility.yul\":822:862   */\n      add\n        /* \"#utility.yul\":964:970   */\n      dup2\n        /* \"#utility.yul\":952:962   */\n      dup2\n        /* \"#utility.yul\":949:971   */\n      lt\n        /* \"#utility.yul\":928:946   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":916:926   */\n      dup3\n        /* \"#utility.yul\":913:947   */\n      gt\n        /* \"#utility.yul\":910:972   */\n      or\n        /* \"#utility.yul\":907:995   */\n      iszero\n      tag_109\n      jumpi\n        /* \"#utility.yul\":975:993   */\n      tag_110\n      tag_13\n      jump\t// in\n    tag_110:\n        /* \"#utility.yul\":907:995   */\n    tag_109:\n        /* \"#utility.yul\":1015:1025   */\n      dup1\n        /* \"#utility.yul\":1011:1013   */\n      0x40\n        /* \"#utility.yul\":1004:1026   */\n      mstore\n        /* \"#utility.yul\":794:1032   */\n      pop\n        /* \"#utility.yul\":751:1032   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1038:1167   */\n    tag_71:\n        /* \"#utility.yul\":1072:1078   */\n      0x00\n        /* \"#utility.yul\":1099:1119   */\n      tag_112\n      tag_65\n      jump\t// in\n    tag_112:\n        /* \"#utility.yul\":1089:1119   */\n      swap1\n      pop\n        /* \"#utility.yul\":1128:1161   */\n      tag_113\n        /* \"#utility.yul\":1156:1160   */\n      dup3\n        /* \"#utility.yul\":1148:1154   */\n      dup3\n        /* \"#utility.yul\":1128:1161   */\n      tag_70\n      jump\t// in\n    tag_113:\n        /* \"#utility.yul\":1038:1167   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1173:1506   */\n    tag_72:\n        /* \"#utility.yul\":1272:1276   */\n      0x00\n        /* \"#utility.yul\":1362:1380   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1354:1360   */\n      dup3\n        /* \"#utility.yul\":1351:1381   */\n      gt\n        /* \"#utility.yul\":1348:1404   */\n      iszero\n      tag_115\n      jumpi\n        /* \"#utility.yul\":1384:1402   */\n      tag_116\n      tag_13\n      jump\t// in\n    tag_116:\n        /* \"#utility.yul\":1348:1404   */\n    tag_115:\n        /* \"#utility.yul\":1434:1438   */\n      0x20\n        /* \"#utility.yul\":1426:1432   */\n      dup3\n        /* \"#utility.yul\":1422:1439   */\n      mul\n        /* \"#utility.yul\":1414:1439   */\n      swap1\n      pop\n        /* \"#utility.yul\":1494:1498   */\n      0x20\n        /* \"#utility.yul\":1488:1492   */\n      dup2\n        /* \"#utility.yul\":1484:1499   */\n      add\n        /* \"#utility.yul\":1476:1499   */\n      swap1\n      pop\n        /* \"#utility.yul\":1173:1506   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1512:1629   */\n    tag_73:\n        /* \"#utility.yul\":1621:1622   */\n      0x00\n        /* \"#utility.yul\":1618:1619   */\n      dup1\n        /* \"#utility.yul\":1611:1623   */\n      revert\n        /* \"#utility.yul\":1635:1752   */\n    tag_74:\n        /* \"#utility.yul\":1744:1745   */\n      0x00\n        /* \"#utility.yul\":1741:1742   */\n      dup1\n        /* \"#utility.yul\":1734:1746   */\n      revert\n        /* \"#utility.yul\":1881:2007   */\n    tag_76:\n        /* \"#utility.yul\":1918:1925   */\n      0x00\n        /* \"#utility.yul\":1958:2000   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1951:1956   */\n      dup3\n        /* \"#utility.yul\":1947:2001   */\n      and\n        /* \"#utility.yul\":1936:2001   */\n      swap1\n      pop\n        /* \"#utility.yul\":1881:2007   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2013:2109   */\n    tag_77:\n        /* \"#utility.yul\":2050:2057   */\n      0x00\n        /* \"#utility.yul\":2079:2103   */\n      tag_122\n        /* \"#utility.yul\":2097:2102   */\n      dup3\n        /* \"#utility.yul\":2079:2103   */\n      tag_76\n      jump\t// in\n    tag_122:\n        /* \"#utility.yul\":2068:2103   */\n      swap1\n      pop\n        /* \"#utility.yul\":2013:2109   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2115:2237   */\n    tag_78:\n        /* \"#utility.yul\":2188:2212   */\n      tag_124\n        /* \"#utility.yul\":2206:2211   */\n      dup2\n        /* \"#utility.yul\":2188:2212   */\n      tag_77\n      jump\t// in\n    tag_124:\n        /* \"#utility.yul\":2181:2186   */\n      dup2\n        /* \"#utility.yul\":2178:2213   */\n      eq\n        /* \"#utility.yul\":2168:2231   */\n      tag_125\n      jumpi\n        /* \"#utility.yul\":2227:2228   */\n      0x00\n        /* \"#utility.yul\":2224:2225   */\n      dup1\n        /* \"#utility.yul\":2217:2229   */\n      revert\n        /* \"#utility.yul\":2168:2231   */\n    tag_125:\n        /* \"#utility.yul\":2115:2237   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2243:2382   */\n    tag_79:\n        /* \"#utility.yul\":2289:2294   */\n      0x00\n        /* \"#utility.yul\":2327:2333   */\n      dup2\n        /* \"#utility.yul\":2314:2334   */\n      calldataload\n        /* \"#utility.yul\":2305:2334   */\n      swap1\n      pop\n        /* \"#utility.yul\":2343:2376   */\n      tag_127\n        /* \"#utility.yul\":2370:2375   */\n      dup2\n        /* \"#utility.yul\":2343:2376   */\n      tag_78\n      jump\t// in\n    tag_127:\n        /* \"#utility.yul\":2243:2382   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2388:2474   */\n    tag_80:\n        /* \"#utility.yul\":2423:2430   */\n      0x00\n        /* \"#utility.yul\":2463:2467   */\n      0xff\n        /* \"#utility.yul\":2456:2461   */\n      dup3\n        /* \"#utility.yul\":2452:2468   */\n      and\n        /* \"#utility.yul\":2441:2468   */\n      swap1\n      pop\n        /* \"#utility.yul\":2388:2474   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2480:2598   */\n    tag_81:\n        /* \"#utility.yul\":2551:2573   */\n      tag_130\n        /* \"#utility.yul\":2567:2572   */\n      dup2\n        /* \"#utility.yul\":2551:2573   */\n      tag_80\n      jump\t// in\n    tag_130:\n        /* \"#utility.yul\":2544:2549   */\n      dup2\n        /* \"#utility.yul\":2541:2574   */\n      eq\n        /* \"#utility.yul\":2531:2592   */\n      tag_131\n      jumpi\n        /* \"#utility.yul\":2588:2589   */\n      0x00\n        /* \"#utility.yul\":2585:2586   */\n      dup1\n        /* \"#utility.yul\":2578:2590   */\n      revert\n        /* \"#utility.yul\":2531:2592   */\n    tag_131:\n        /* \"#utility.yul\":2480:2598   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2604:2739   */\n    tag_82:\n        /* \"#utility.yul\":2648:2653   */\n      0x00\n        /* \"#utility.yul\":2686:2692   */\n      dup2\n        /* \"#utility.yul\":2673:2693   */\n      calldataload\n        /* \"#utility.yul\":2664:2693   */\n      swap1\n      pop\n        /* \"#utility.yul\":2702:2733   */\n      tag_133\n        /* \"#utility.yul\":2727:2732   */\n      dup2\n        /* \"#utility.yul\":2702:2733   */\n      tag_81\n      jump\t// in\n    tag_133:\n        /* \"#utility.yul\":2604:2739   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2781:3683   */\n    tag_83:\n        /* \"#utility.yul\":2852:2857   */\n      0x00\n        /* \"#utility.yul\":2896:2900   */\n      0x80\n        /* \"#utility.yul\":2884:2893   */\n      dup3\n        /* \"#utility.yul\":2879:2882   */\n      dup5\n        /* \"#utility.yul\":2875:2894   */\n      sub\n        /* \"#utility.yul\":2871:2901   */\n      slt\n        /* \"#utility.yul\":2868:2985   */\n      iszero\n      tag_135\n      jumpi\n        /* \"#utility.yul\":2904:2983   */\n      tag_136\n      tag_74\n      jump\t// in\n    tag_136:\n        /* \"#utility.yul\":2868:2985   */\n    tag_135:\n        /* \"#utility.yul\":3003:3024   */\n      tag_137\n        /* \"#utility.yul\":3019:3023   */\n      0x80\n        /* \"#utility.yul\":3003:3024   */\n      tag_71\n      jump\t// in\n    tag_137:\n        /* \"#utility.yul\":2994:3024   */\n      swap1\n      pop\n        /* \"#utility.yul\":3081:3082   */\n      0x00\n        /* \"#utility.yul\":3121:3170   */\n      tag_138\n        /* \"#utility.yul\":3166:3169   */\n      dup5\n        /* \"#utility.yul\":3157:3163   */\n      dup3\n        /* \"#utility.yul\":3146:3155   */\n      dup6\n        /* \"#utility.yul\":3142:3164   */\n      add\n        /* \"#utility.yul\":3121:3170   */\n      tag_79\n      jump\t// in\n    tag_138:\n        /* \"#utility.yul\":3114:3118   */\n      0x00\n        /* \"#utility.yul\":3107:3112   */\n      dup4\n        /* \"#utility.yul\":3103:3119   */\n      add\n        /* \"#utility.yul\":3096:3171   */\n      mstore\n        /* \"#utility.yul\":3034:3182   */\n      pop\n        /* \"#utility.yul\":3239:3241   */\n      0x20\n        /* \"#utility.yul\":3280:3329   */\n      tag_139\n        /* \"#utility.yul\":3325:3328   */\n      dup5\n        /* \"#utility.yul\":3316:3322   */\n      dup3\n        /* \"#utility.yul\":3305:3314   */\n      dup6\n        /* \"#utility.yul\":3301:3323   */\n      add\n        /* \"#utility.yul\":3280:3329   */\n      tag_79\n      jump\t// in\n    tag_139:\n        /* \"#utility.yul\":3273:3277   */\n      0x20\n        /* \"#utility.yul\":3266:3271   */\n      dup4\n        /* \"#utility.yul\":3262:3278   */\n      add\n        /* \"#utility.yul\":3255:3330   */\n      mstore\n        /* \"#utility.yul\":3192:3341   */\n      pop\n        /* \"#utility.yul\":3404:3406   */\n      0x40\n        /* \"#utility.yul\":3445:3494   */\n      tag_140\n        /* \"#utility.yul\":3490:3493   */\n      dup5\n        /* \"#utility.yul\":3481:3487   */\n      dup3\n        /* \"#utility.yul\":3470:3479   */\n      dup6\n        /* \"#utility.yul\":3466:3488   */\n      add\n        /* \"#utility.yul\":3445:3494   */\n      tag_79\n      jump\t// in\n    tag_140:\n        /* \"#utility.yul\":3438:3442   */\n      0x40\n        /* \"#utility.yul\":3431:3436   */\n      dup4\n        /* \"#utility.yul\":3427:3443   */\n      add\n        /* \"#utility.yul\":3420:3495   */\n      mstore\n        /* \"#utility.yul\":3351:3506   */\n      pop\n        /* \"#utility.yul\":3576:3578   */\n      0x60\n        /* \"#utility.yul\":3617:3664   */\n      tag_141\n        /* \"#utility.yul\":3660:3663   */\n      dup5\n        /* \"#utility.yul\":3651:3657   */\n      dup3\n        /* \"#utility.yul\":3640:3649   */\n      dup6\n        /* \"#utility.yul\":3636:3658   */\n      add\n        /* \"#utility.yul\":3617:3664   */\n      tag_82\n      jump\t// in\n    tag_141:\n        /* \"#utility.yul\":3610:3614   */\n      0x60\n        /* \"#utility.yul\":3603:3608   */\n      dup4\n        /* \"#utility.yul\":3599:3615   */\n      add\n        /* \"#utility.yul\":3592:3665   */\n      mstore\n        /* \"#utility.yul\":3516:3676   */\n      pop\n        /* \"#utility.yul\":2781:3683   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3727:4503   */\n    tag_84:\n        /* \"#utility.yul\":3845:3850   */\n      0x00\n        /* \"#utility.yul\":3870:3973   */\n      tag_143\n        /* \"#utility.yul\":3886:3972   */\n      tag_144\n        /* \"#utility.yul\":3965:3971   */\n      dup5\n        /* \"#utility.yul\":3886:3972   */\n      tag_72\n      jump\t// in\n    tag_144:\n        /* \"#utility.yul\":3870:3973   */\n      tag_71\n      jump\t// in\n    tag_143:\n        /* \"#utility.yul\":3861:3973   */\n      swap1\n      pop\n        /* \"#utility.yul\":3993:3998   */\n      dup1\n        /* \"#utility.yul\":4022:4028   */\n      dup4\n        /* \"#utility.yul\":4015:4020   */\n      dup3\n        /* \"#utility.yul\":4008:4029   */\n      mstore\n        /* \"#utility.yul\":4056:4060   */\n      0x20\n        /* \"#utility.yul\":4049:4054   */\n      dup3\n        /* \"#utility.yul\":4045:4061   */\n      add\n        /* \"#utility.yul\":4038:4061   */\n      swap1\n      pop\n        /* \"#utility.yul\":4109:4113   */\n      0x80\n        /* \"#utility.yul\":4101:4107   */\n      dup5\n        /* \"#utility.yul\":4097:4114   */\n      mul\n        /* \"#utility.yul\":4089:4095   */\n      dup4\n        /* \"#utility.yul\":4085:4115   */\n      add\n        /* \"#utility.yul\":4138:4141   */\n      dup6\n        /* \"#utility.yul\":4130:4136   */\n      dup2\n        /* \"#utility.yul\":4127:4142   */\n      gt\n        /* \"#utility.yul\":4124:4246   */\n      iszero\n      tag_145\n      jumpi\n        /* \"#utility.yul\":4157:4236   */\n      tag_146\n      tag_73\n      jump\t// in\n    tag_146:\n        /* \"#utility.yul\":4124:4246   */\n    tag_145:\n        /* \"#utility.yul\":4272:4278   */\n      dup4\n        /* \"#utility.yul\":4255:4497   */\n    tag_147:\n        /* \"#utility.yul\":4289:4295   */\n      dup2\n        /* \"#utility.yul\":4284:4287   */\n      dup2\n        /* \"#utility.yul\":4281:4296   */\n      lt\n        /* \"#utility.yul\":4255:4497   */\n      iszero\n      tag_149\n      jumpi\n        /* \"#utility.yul\":4364:4367   */\n      dup1\n        /* \"#utility.yul\":4393:4452   */\n      tag_150\n        /* \"#utility.yul\":4448:4451   */\n      dup9\n        /* \"#utility.yul\":4436:4446   */\n      dup3\n        /* \"#utility.yul\":4393:4452   */\n      tag_83\n      jump\t// in\n    tag_150:\n        /* \"#utility.yul\":4388:4391   */\n      dup5\n        /* \"#utility.yul\":4381:4453   */\n      mstore\n        /* \"#utility.yul\":4482:4486   */\n      0x20\n        /* \"#utility.yul\":4477:4480   */\n      dup5\n        /* \"#utility.yul\":4473:4487   */\n      add\n        /* \"#utility.yul\":4466:4487   */\n      swap4\n      pop\n        /* \"#utility.yul\":4331:4497   */\n      pop\n        /* \"#utility.yul\":4315:4319   */\n      0x80\n        /* \"#utility.yul\":4310:4313   */\n      dup2\n        /* \"#utility.yul\":4306:4320   */\n      add\n        /* \"#utility.yul\":4299:4320   */\n      swap1\n      pop\n        /* \"#utility.yul\":4255:4497   */\n      jump(tag_147)\n    tag_149:\n        /* \"#utility.yul\":4259:4280   */\n      pop\n        /* \"#utility.yul\":3851:4503   */\n      pop\n      pop\n        /* \"#utility.yul\":3727:4503   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4547:4961   */\n    tag_85:\n        /* \"#utility.yul\":4640:4645   */\n      0x00\n        /* \"#utility.yul\":4689:4692   */\n      dup3\n        /* \"#utility.yul\":4682:4686   */\n      0x1f\n        /* \"#utility.yul\":4674:4680   */\n      dup4\n        /* \"#utility.yul\":4670:4687   */\n      add\n        /* \"#utility.yul\":4666:4693   */\n      slt\n        /* \"#utility.yul\":4656:4778   */\n      tag_152\n      jumpi\n        /* \"#utility.yul\":4697:4776   */\n      tag_153\n      tag_68\n      jump\t// in\n    tag_153:\n        /* \"#utility.yul\":4656:4778   */\n    tag_152:\n        /* \"#utility.yul\":4814:4820   */\n      dup2\n        /* \"#utility.yul\":4801:4821   */\n      calldataload\n        /* \"#utility.yul\":4839:4955   */\n      tag_154\n        /* \"#utility.yul\":4951:4954   */\n      dup5\n        /* \"#utility.yul\":4943:4949   */\n      dup3\n        /* \"#utility.yul\":4936:4940   */\n      0x20\n        /* \"#utility.yul\":4928:4934   */\n      dup7\n        /* \"#utility.yul\":4924:4941   */\n      add\n        /* \"#utility.yul\":4839:4955   */\n      tag_84\n      jump\t// in\n    tag_154:\n        /* \"#utility.yul\":4830:4955   */\n      swap2\n      pop\n        /* \"#utility.yul\":4646:4961   */\n      pop\n        /* \"#utility.yul\":4547:4961   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4967:5550   */\n    tag_6:\n        /* \"#utility.yul\":5073:5079   */\n      0x00\n        /* \"#utility.yul\":5122:5124   */\n      0x20\n        /* \"#utility.yul\":5110:5119   */\n      dup3\n        /* \"#utility.yul\":5101:5108   */\n      dup5\n        /* \"#utility.yul\":5097:5120   */\n      sub\n        /* \"#utility.yul\":5093:5125   */\n      slt\n        /* \"#utility.yul\":5090:5209   */\n      iszero\n      tag_156\n      jumpi\n        /* \"#utility.yul\":5128:5207   */\n      tag_157\n      tag_66\n      jump\t// in\n    tag_157:\n        /* \"#utility.yul\":5090:5209   */\n    tag_156:\n        /* \"#utility.yul\":5276:5277   */\n      0x00\n        /* \"#utility.yul\":5265:5274   */\n      dup3\n        /* \"#utility.yul\":5261:5278   */\n      add\n        /* \"#utility.yul\":5248:5279   */\n      calldataload\n        /* \"#utility.yul\":5306:5324   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5298:5304   */\n      dup2\n        /* \"#utility.yul\":5295:5325   */\n      gt\n        /* \"#utility.yul\":5292:5409   */\n      iszero\n      tag_158\n      jumpi\n        /* \"#utility.yul\":5328:5407   */\n      tag_159\n      tag_67\n      jump\t// in\n    tag_159:\n        /* \"#utility.yul\":5292:5409   */\n    tag_158:\n        /* \"#utility.yul\":5433:5533   */\n      tag_160\n        /* \"#utility.yul\":5525:5532   */\n      dup5\n        /* \"#utility.yul\":5516:5522   */\n      dup3\n        /* \"#utility.yul\":5505:5514   */\n      dup6\n        /* \"#utility.yul\":5501:5523   */\n      add\n        /* \"#utility.yul\":5433:5533   */\n      tag_85\n      jump\t// in\n    tag_160:\n        /* \"#utility.yul\":5423:5533   */\n      swap2\n      pop\n        /* \"#utility.yul\":5219:5543   */\n      pop\n        /* \"#utility.yul\":4967:5550   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5556:5693   */\n    tag_86:\n        /* \"#utility.yul\":5646:5652   */\n      0x00\n        /* \"#utility.yul\":5680:5685   */\n      dup2\n        /* \"#utility.yul\":5674:5686   */\n      mload\n        /* \"#utility.yul\":5664:5686   */\n      swap1\n      pop\n        /* \"#utility.yul\":5556:5693   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5699:5906   */\n    tag_87:\n        /* \"#utility.yul\":5821:5832   */\n      0x00\n        /* \"#utility.yul\":5855:5861   */\n      dup3\n        /* \"#utility.yul\":5850:5853   */\n      dup3\n        /* \"#utility.yul\":5843:5862   */\n      mstore\n        /* \"#utility.yul\":5895:5899   */\n      0x20\n        /* \"#utility.yul\":5890:5893   */\n      dup3\n        /* \"#utility.yul\":5886:5900   */\n      add\n        /* \"#utility.yul\":5871:5900   */\n      swap1\n      pop\n        /* \"#utility.yul\":5699:5906   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5912:6067   */\n    tag_88:\n        /* \"#utility.yul\":6002:6006   */\n      0x00\n        /* \"#utility.yul\":6025:6028   */\n      dup2\n        /* \"#utility.yul\":6017:6028   */\n      swap1\n      pop\n        /* \"#utility.yul\":6055:6059   */\n      0x20\n        /* \"#utility.yul\":6050:6053   */\n      dup3\n        /* \"#utility.yul\":6046:6060   */\n      add\n        /* \"#utility.yul\":6038:6060   */\n      swap1\n      pop\n        /* \"#utility.yul\":5912:6067   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6073:6181   */\n    tag_89:\n        /* \"#utility.yul\":6150:6174   */\n      tag_165\n        /* \"#utility.yul\":6168:6173   */\n      dup2\n        /* \"#utility.yul\":6150:6174   */\n      tag_77\n      jump\t// in\n    tag_165:\n        /* \"#utility.yul\":6145:6148   */\n      dup3\n        /* \"#utility.yul\":6138:6175   */\n      mstore\n        /* \"#utility.yul\":6073:6181   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6187:6264   */\n    tag_90:\n        /* \"#utility.yul\":6224:6231   */\n      0x00\n        /* \"#utility.yul\":6253:6258   */\n      dup2\n        /* \"#utility.yul\":6242:6258   */\n      swap1\n      pop\n        /* \"#utility.yul\":6187:6264   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6270:6378   */\n    tag_91:\n        /* \"#utility.yul\":6347:6371   */\n      tag_168\n        /* \"#utility.yul\":6365:6370   */\n      dup2\n        /* \"#utility.yul\":6347:6371   */\n      tag_90\n      jump\t// in\n    tag_168:\n        /* \"#utility.yul\":6342:6345   */\n      dup3\n        /* \"#utility.yul\":6335:6372   */\n      mstore\n        /* \"#utility.yul\":6270:6378   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6454:7118   */\n    tag_92:\n        /* \"#utility.yul\":6587:6591   */\n      0x60\n        /* \"#utility.yul\":6582:6585   */\n      dup3\n        /* \"#utility.yul\":6578:6592   */\n      add\n        /* \"#utility.yul\":6672:6676   */\n      0x00\n        /* \"#utility.yul\":6665:6670   */\n      dup3\n        /* \"#utility.yul\":6661:6677   */\n      add\n        /* \"#utility.yul\":6655:6678   */\n      mload\n        /* \"#utility.yul\":6691:6754   */\n      tag_170\n        /* \"#utility.yul\":6748:6752   */\n      0x00\n        /* \"#utility.yul\":6743:6746   */\n      dup6\n        /* \"#utility.yul\":6739:6753   */\n      add\n        /* \"#utility.yul\":6725:6737   */\n      dup3\n        /* \"#utility.yul\":6691:6754   */\n      tag_89\n      jump\t// in\n    tag_170:\n        /* \"#utility.yul\":6602:6764   */\n      pop\n        /* \"#utility.yul\":6844:6848   */\n      0x20\n        /* \"#utility.yul\":6837:6842   */\n      dup3\n        /* \"#utility.yul\":6833:6849   */\n      add\n        /* \"#utility.yul\":6827:6850   */\n      mload\n        /* \"#utility.yul\":6863:6926   */\n      tag_171\n        /* \"#utility.yul\":6920:6924   */\n      0x20\n        /* \"#utility.yul\":6915:6918   */\n      dup6\n        /* \"#utility.yul\":6911:6925   */\n      add\n        /* \"#utility.yul\":6897:6909   */\n      dup3\n        /* \"#utility.yul\":6863:6926   */\n      tag_89\n      jump\t// in\n    tag_171:\n        /* \"#utility.yul\":6774:6936   */\n      pop\n        /* \"#utility.yul\":7019:7023   */\n      0x40\n        /* \"#utility.yul\":7012:7017   */\n      dup3\n        /* \"#utility.yul\":7008:7024   */\n      add\n        /* \"#utility.yul\":7002:7025   */\n      mload\n        /* \"#utility.yul\":7038:7101   */\n      tag_172\n        /* \"#utility.yul\":7095:7099   */\n      0x40\n        /* \"#utility.yul\":7090:7093   */\n      dup6\n        /* \"#utility.yul\":7086:7100   */\n      add\n        /* \"#utility.yul\":7072:7084   */\n      dup3\n        /* \"#utility.yul\":7038:7101   */\n      tag_91\n      jump\t// in\n    tag_172:\n        /* \"#utility.yul\":6946:7111   */\n      pop\n        /* \"#utility.yul\":6556:7118   */\n      pop\n        /* \"#utility.yul\":6454:7118   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7124:7395   */\n    tag_93:\n        /* \"#utility.yul\":7239:7249   */\n      0x00\n        /* \"#utility.yul\":7260:7352   */\n      tag_174\n        /* \"#utility.yul\":7348:7351   */\n      dup4\n        /* \"#utility.yul\":7340:7346   */\n      dup4\n        /* \"#utility.yul\":7260:7352   */\n      tag_92\n      jump\t// in\n    tag_174:\n        /* \"#utility.yul\":7384:7388   */\n      0x60\n        /* \"#utility.yul\":7379:7382   */\n      dup4\n        /* \"#utility.yul\":7375:7389   */\n      add\n        /* \"#utility.yul\":7361:7389   */\n      swap1\n      pop\n        /* \"#utility.yul\":7124:7395   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7401:7537   */\n    tag_94:\n        /* \"#utility.yul\":7494:7498   */\n      0x00\n        /* \"#utility.yul\":7526:7530   */\n      0x20\n        /* \"#utility.yul\":7521:7524   */\n      dup3\n        /* \"#utility.yul\":7517:7531   */\n      add\n        /* \"#utility.yul\":7509:7531   */\n      swap1\n      pop\n        /* \"#utility.yul\":7401:7537   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7617:8533   */\n    tag_95:\n        /* \"#utility.yul\":7782:7785   */\n      0x00\n        /* \"#utility.yul\":7811:7888   */\n      tag_177\n        /* \"#utility.yul\":7882:7887   */\n      dup3\n        /* \"#utility.yul\":7811:7888   */\n      tag_86\n      jump\t// in\n    tag_177:\n        /* \"#utility.yul\":7904:8013   */\n      tag_178\n        /* \"#utility.yul\":8006:8012   */\n      dup2\n        /* \"#utility.yul\":8001:8004   */\n      dup6\n        /* \"#utility.yul\":7904:8013   */\n      tag_87\n      jump\t// in\n    tag_178:\n        /* \"#utility.yul\":7897:8013   */\n      swap4\n      pop\n        /* \"#utility.yul\":8037:8116   */\n      tag_179\n        /* \"#utility.yul\":8110:8115   */\n      dup4\n        /* \"#utility.yul\":8037:8116   */\n      tag_88\n      jump\t// in\n    tag_179:\n        /* \"#utility.yul\":8139:8146   */\n      dup1\n        /* \"#utility.yul\":8170:8171   */\n      0x00\n        /* \"#utility.yul\":8155:8508   */\n    tag_180:\n        /* \"#utility.yul\":8180:8186   */\n      dup4\n        /* \"#utility.yul\":8177:8178   */\n      dup2\n        /* \"#utility.yul\":8174:8187   */\n      lt\n        /* \"#utility.yul\":8155:8508   */\n      iszero\n      tag_182\n      jumpi\n        /* \"#utility.yul\":8256:8262   */\n      dup2\n        /* \"#utility.yul\":8250:8263   */\n      mload\n        /* \"#utility.yul\":8283:8392   */\n      tag_183\n        /* \"#utility.yul\":8388:8391   */\n      dup9\n        /* \"#utility.yul\":8373:8386   */\n      dup3\n        /* \"#utility.yul\":8283:8392   */\n      tag_93\n      jump\t// in\n    tag_183:\n        /* \"#utility.yul\":8276:8392   */\n      swap8\n      pop\n        /* \"#utility.yul\":8415:8498   */\n      tag_184\n        /* \"#utility.yul\":8491:8497   */\n      dup4\n        /* \"#utility.yul\":8415:8498   */\n      tag_94\n      jump\t// in\n    tag_184:\n        /* \"#utility.yul\":8405:8498   */\n      swap3\n      pop\n        /* \"#utility.yul\":8215:8508   */\n      pop\n        /* \"#utility.yul\":8202:8203   */\n      0x01\n        /* \"#utility.yul\":8199:8200   */\n      dup2\n        /* \"#utility.yul\":8195:8204   */\n      add\n        /* \"#utility.yul\":8190:8204   */\n      swap1\n      pop\n        /* \"#utility.yul\":8155:8508   */\n      jump(tag_180)\n    tag_182:\n        /* \"#utility.yul\":8159:8173   */\n      pop\n        /* \"#utility.yul\":8524:8527   */\n      dup6\n        /* \"#utility.yul\":8517:8527   */\n      swap4\n      pop\n        /* \"#utility.yul\":7787:8533   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":7617:8533   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8539:9004   */\n    tag_9:\n        /* \"#utility.yul\":8728:8732   */\n      0x00\n        /* \"#utility.yul\":8766:8768   */\n      0x20\n        /* \"#utility.yul\":8755:8764   */\n      dup3\n        /* \"#utility.yul\":8751:8769   */\n      add\n        /* \"#utility.yul\":8743:8769   */\n      swap1\n      pop\n        /* \"#utility.yul\":8815:8824   */\n      dup2\n        /* \"#utility.yul\":8809:8813   */\n      dup2\n        /* \"#utility.yul\":8805:8825   */\n      sub\n        /* \"#utility.yul\":8801:8802   */\n      0x00\n        /* \"#utility.yul\":8790:8799   */\n      dup4\n        /* \"#utility.yul\":8786:8803   */\n      add\n        /* \"#utility.yul\":8779:8826   */\n      mstore\n        /* \"#utility.yul\":8843:8997   */\n      tag_186\n        /* \"#utility.yul\":8992:8996   */\n      dup2\n        /* \"#utility.yul\":8983:8989   */\n      dup5\n        /* \"#utility.yul\":8843:8997   */\n      tag_95\n      jump\t// in\n    tag_186:\n        /* \"#utility.yul\":8835:8997   */\n      swap1\n      pop\n        /* \"#utility.yul\":8539:9004   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9010:9190   */\n    tag_23:\n        /* \"#utility.yul\":9058:9135   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9055:9056   */\n      0x00\n        /* \"#utility.yul\":9048:9136   */\n      mstore\n        /* \"#utility.yul\":9155:9159   */\n      0x32\n        /* \"#utility.yul\":9152:9153   */\n      0x04\n        /* \"#utility.yul\":9145:9160   */\n      mstore\n        /* \"#utility.yul\":9179:9183   */\n      0x24\n        /* \"#utility.yul\":9176:9177   */\n      0x00\n        /* \"#utility.yul\":9169:9184   */\n      revert\n        /* \"#utility.yul\":9196:9322   */\n    tag_96:\n        /* \"#utility.yul\":9291:9315   */\n      tag_189\n        /* \"#utility.yul\":9309:9314   */\n      dup2\n        /* \"#utility.yul\":9291:9315   */\n      tag_77\n      jump\t// in\n    tag_189:\n        /* \"#utility.yul\":9286:9289   */\n      dup3\n        /* \"#utility.yul\":9279:9316   */\n      mstore\n        /* \"#utility.yul\":9196:9322   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9328:9802   */\n    tag_32:\n        /* \"#utility.yul\":9485:9489   */\n      0x00\n        /* \"#utility.yul\":9523:9525   */\n      0x60\n        /* \"#utility.yul\":9512:9521   */\n      dup3\n        /* \"#utility.yul\":9508:9526   */\n      add\n        /* \"#utility.yul\":9500:9526   */\n      swap1\n      pop\n        /* \"#utility.yul\":9536:9615   */\n      tag_191\n        /* \"#utility.yul\":9612:9613   */\n      0x00\n        /* \"#utility.yul\":9601:9610   */\n      dup4\n        /* \"#utility.yul\":9597:9614   */\n      add\n        /* \"#utility.yul\":9588:9594   */\n      dup7\n        /* \"#utility.yul\":9536:9615   */\n      tag_96\n      jump\t// in\n    tag_191:\n        /* \"#utility.yul\":9625:9705   */\n      tag_192\n        /* \"#utility.yul\":9701:9703   */\n      0x20\n        /* \"#utility.yul\":9690:9699   */\n      dup4\n        /* \"#utility.yul\":9686:9704   */\n      add\n        /* \"#utility.yul\":9677:9683   */\n      dup6\n        /* \"#utility.yul\":9625:9705   */\n      tag_96\n      jump\t// in\n    tag_192:\n        /* \"#utility.yul\":9715:9795   */\n      tag_193\n        /* \"#utility.yul\":9791:9793   */\n      0x40\n        /* \"#utility.yul\":9780:9789   */\n      dup4\n        /* \"#utility.yul\":9776:9794   */\n      add\n        /* \"#utility.yul\":9767:9773   */\n      dup5\n        /* \"#utility.yul\":9715:9795   */\n      tag_96\n      jump\t// in\n    tag_193:\n        /* \"#utility.yul\":9328:9802   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9808:9930   */\n    tag_97:\n        /* \"#utility.yul\":9881:9905   */\n      tag_195\n        /* \"#utility.yul\":9899:9904   */\n      dup2\n        /* \"#utility.yul\":9881:9905   */\n      tag_90\n      jump\t// in\n    tag_195:\n        /* \"#utility.yul\":9874:9879   */\n      dup2\n        /* \"#utility.yul\":9871:9906   */\n      eq\n        /* \"#utility.yul\":9861:9924   */\n      tag_196\n      jumpi\n        /* \"#utility.yul\":9920:9921   */\n      0x00\n        /* \"#utility.yul\":9917:9918   */\n      dup1\n        /* \"#utility.yul\":9910:9922   */\n      revert\n        /* \"#utility.yul\":9861:9924   */\n    tag_196:\n        /* \"#utility.yul\":9808:9930   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9936:10079   */\n    tag_98:\n        /* \"#utility.yul\":9993:9998   */\n      0x00\n        /* \"#utility.yul\":10024:10030   */\n      dup2\n        /* \"#utility.yul\":10018:10031   */\n      mload\n        /* \"#utility.yul\":10009:10031   */\n      swap1\n      pop\n        /* \"#utility.yul\":10040:10073   */\n      tag_198\n        /* \"#utility.yul\":10067:10072   */\n      dup2\n        /* \"#utility.yul\":10040:10073   */\n      tag_97\n      jump\t// in\n    tag_198:\n        /* \"#utility.yul\":9936:10079   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10085:10436   */\n    tag_36:\n        /* \"#utility.yul\":10155:10161   */\n      0x00\n        /* \"#utility.yul\":10204:10206   */\n      0x20\n        /* \"#utility.yul\":10192:10201   */\n      dup3\n        /* \"#utility.yul\":10183:10190   */\n      dup5\n        /* \"#utility.yul\":10179:10202   */\n      sub\n        /* \"#utility.yul\":10175:10207   */\n      slt\n        /* \"#utility.yul\":10172:10291   */\n      iszero\n      tag_200\n      jumpi\n        /* \"#utility.yul\":10210:10289   */\n      tag_201\n      tag_66\n      jump\t// in\n    tag_201:\n        /* \"#utility.yul\":10172:10291   */\n    tag_200:\n        /* \"#utility.yul\":10330:10331   */\n      0x00\n        /* \"#utility.yul\":10355:10419   */\n      tag_202\n        /* \"#utility.yul\":10411:10418   */\n      dup5\n        /* \"#utility.yul\":10402:10408   */\n      dup3\n        /* \"#utility.yul\":10391:10400   */\n      dup6\n        /* \"#utility.yul\":10387:10409   */\n      add\n        /* \"#utility.yul\":10355:10419   */\n      tag_98\n      jump\t// in\n    tag_202:\n        /* \"#utility.yul\":10345:10419   */\n      swap2\n      pop\n        /* \"#utility.yul\":10301:10429   */\n      pop\n        /* \"#utility.yul\":10085:10436   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10442:10622   */\n    tag_99:\n        /* \"#utility.yul\":10490:10567   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10487:10488   */\n      0x00\n        /* \"#utility.yul\":10480:10568   */\n      mstore\n        /* \"#utility.yul\":10587:10591   */\n      0x11\n        /* \"#utility.yul\":10584:10585   */\n      0x04\n        /* \"#utility.yul\":10577:10592   */\n      mstore\n        /* \"#utility.yul\":10611:10615   */\n      0x24\n        /* \"#utility.yul\":10608:10609   */\n      0x00\n        /* \"#utility.yul\":10601:10616   */\n      revert\n        /* \"#utility.yul\":10628:10861   */\n    tag_64:\n        /* \"#utility.yul\":10667:10670   */\n      0x00\n        /* \"#utility.yul\":10690:10714   */\n      tag_205\n        /* \"#utility.yul\":10708:10713   */\n      dup3\n        /* \"#utility.yul\":10690:10714   */\n      tag_90\n      jump\t// in\n    tag_205:\n        /* \"#utility.yul\":10681:10714   */\n      swap2\n      pop\n        /* \"#utility.yul\":10736:10802   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":10729:10734   */\n      dup3\n        /* \"#utility.yul\":10726:10803   */\n      sub\n        /* \"#utility.yul\":10723:10826   */\n      tag_206\n      jumpi\n        /* \"#utility.yul\":10806:10824   */\n      tag_207\n      tag_99\n      jump\t// in\n    tag_207:\n        /* \"#utility.yul\":10723:10826   */\n    tag_206:\n        /* \"#utility.yul\":10853:10854   */\n      0x01\n        /* \"#utility.yul\":10846:10851   */\n      dup3\n        /* \"#utility.yul\":10842:10855   */\n      add\n        /* \"#utility.yul\":10835:10855   */\n      swap1\n      pop\n        /* \"#utility.yul\":10628:10861   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212200ff7d3504e3e3891de77f6842ffbc014f65489ef8bff620974b562faa43409cd64736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {
								"contracts/libraries/UniswapV2.sol": {
									"UniswapV2": [
										{
											"length": 20,
											"start": 276
										}
									]
								},
								"contracts/libraries/UniswapV3.sol": {
									"UniswapV3": [
										{
											"length": 20,
											"start": 702
										}
									]
								}
							},
							"object": "608060405234801561001057600080fd5b50610a02806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063ff514fa314610030575b600080fd5b61004a60048036038101906100459190610703565b610060565b6040516100579190610865565b60405180910390f35b60606000825167ffffffffffffffff81111561007f5761007e6104ac565b5b6040519080825280602002602001820160405280156100b857816020015b6100a5610435565b81526020019060019003908161009d5790505b50905060005b835181101561042b5760028482815181106100dc576100db610887565b5b60200260200101516060015160ff160361027157600073__$66db80e837caed232b747c0dfa8ba195e8$__63c361e0b186848151811061011f5761011e610887565b5b60200260200101516040015187858151811061013e5761013d610887565b5b60200260200101516000015188868151811061015d5761015c610887565b5b6020026020010151602001516040518463ffffffff1660e01b8152600401610187939291906108c5565b602060405180830381865af41580156101a4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101c89190610928565b905060405180606001604052808684815181106101e8576101e7610887565b5b60200260200101516000015173ffffffffffffffffffffffffffffffffffffffff16815260200186848151811061022257610221610887565b5b60200260200101516020015173ffffffffffffffffffffffffffffffffffffffff168152602001828152508383815181106102605761025f610887565b5b602002602001018190525050610418565b600384828151811061028657610285610887565b5b60200260200101516060015160ff160361041757600073__$295ab41254e875e078eae9a73e9e2c34b1$__63edf15a9a8684815181106102c9576102c8610887565b5b6020026020010151604001518785815181106102e8576102e7610887565b5b60200260200101516000015188868151811061030757610306610887565b5b6020026020010151602001516040518463ffffffff1660e01b8152600401610331939291906108c5565b602060405180830381865af415801561034e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103729190610928565b9050604051806060016040528086848151811061039257610391610887565b5b60200260200101516000015173ffffffffffffffffffffffffffffffffffffffff1681526020018684815181106103cc576103cb610887565b5b60200260200101516020015173ffffffffffffffffffffffffffffffffffffffff1681526020018281525083838151811061040a57610409610887565b5b6020026020010181905250505b5b808061042390610984565b9150506100be565b5080915050919050565b6040518060600160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600081525090565b6000604051905090565b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6104e48261049b565b810181811067ffffffffffffffff82111715610503576105026104ac565b5b80604052505050565b6000610516610482565b905061052282826104db565b919050565b600067ffffffffffffffff821115610542576105416104ac565b5b602082029050602081019050919050565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006105888261055d565b9050919050565b6105988161057d565b81146105a357600080fd5b50565b6000813590506105b58161058f565b92915050565b600060ff82169050919050565b6105d1816105bb565b81146105dc57600080fd5b50565b6000813590506105ee816105c8565b92915050565b60006080828403121561060a57610609610558565b5b610614608061050c565b90506000610624848285016105a6565b6000830152506020610638848285016105a6565b602083015250604061064c848285016105a6565b6040830152506060610660848285016105df565b60608301525092915050565b600061067f61067a84610527565b61050c565b905080838252602082019050608084028301858111156106a2576106a1610553565b5b835b818110156106cb57806106b788826105f4565b8452602084019350506080810190506106a4565b5050509392505050565b600082601f8301126106ea576106e9610496565b5b81356106fa84826020860161066c565b91505092915050565b6000602082840312156107195761071861048c565b5b600082013567ffffffffffffffff81111561073757610736610491565b5b610743848285016106d5565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6107818161057d565b82525050565b6000819050919050565b61079a81610787565b82525050565b6060820160008201516107b66000850182610778565b5060208201516107c96020850182610778565b5060408201516107dc6040850182610791565b50505050565b60006107ee83836107a0565b60608301905092915050565b6000602082019050919050565b60006108128261074c565b61081c8185610757565b935061082783610768565b8060005b8381101561085857815161083f88826107e2565b975061084a836107fa565b92505060018101905061082b565b5085935050505092915050565b6000602082019050818103600083015261087f8184610807565b905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6108bf8161057d565b82525050565b60006060820190506108da60008301866108b6565b6108e760208301856108b6565b6108f460408301846108b6565b949350505050565b61090581610787565b811461091057600080fd5b50565b600081519050610922816108fc565b92915050565b60006020828403121561093e5761093d61048c565b5b600061094c84828501610913565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061098f82610787565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036109c1576109c0610955565b5b60018201905091905056fea26469706673582212200ff7d3504e3e3891de77f6842ffbc014f65489ef8bff620974b562faa43409cd64736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA02 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xFF514FA3 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x45 SWAP2 SWAP1 PUSH2 0x703 JUMP JUMPDEST PUSH2 0x60 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x57 SWAP2 SWAP1 PUSH2 0x865 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP3 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x7F JUMPI PUSH2 0x7E PUSH2 0x4AC JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xB8 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0xA5 PUSH2 0x435 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x9D JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x42B JUMPI PUSH1 0x2 DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xDC JUMPI PUSH2 0xDB PUSH2 0x887 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x60 ADD MLOAD PUSH1 0xFF AND SUB PUSH2 0x271 JUMPI PUSH1 0x0 PUSH20 0x0 PUSH4 0xC361E0B1 DUP7 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x11F JUMPI PUSH2 0x11E PUSH2 0x887 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 ADD MLOAD DUP8 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x13E JUMPI PUSH2 0x13D PUSH2 0x887 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD MLOAD DUP9 DUP7 DUP2 MLOAD DUP2 LT PUSH2 0x15D JUMPI PUSH2 0x15C PUSH2 0x887 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x187 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x8C5 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x1A4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1C8 SWAP2 SWAP1 PUSH2 0x928 JUMP JUMPDEST SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP7 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x1E8 JUMPI PUSH2 0x1E7 PUSH2 0x887 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x222 JUMPI PUSH2 0x221 PUSH2 0x887 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE POP DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x260 JUMPI PUSH2 0x25F PUSH2 0x887 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP POP PUSH2 0x418 JUMP JUMPDEST PUSH1 0x3 DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x286 JUMPI PUSH2 0x285 PUSH2 0x887 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x60 ADD MLOAD PUSH1 0xFF AND SUB PUSH2 0x417 JUMPI PUSH1 0x0 PUSH20 0x0 PUSH4 0xEDF15A9A DUP7 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x2C9 JUMPI PUSH2 0x2C8 PUSH2 0x887 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 ADD MLOAD DUP8 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x2E8 JUMPI PUSH2 0x2E7 PUSH2 0x887 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD MLOAD DUP9 DUP7 DUP2 MLOAD DUP2 LT PUSH2 0x307 JUMPI PUSH2 0x306 PUSH2 0x887 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x331 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x8C5 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x34E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x372 SWAP2 SWAP1 PUSH2 0x928 JUMP JUMPDEST SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP7 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x392 JUMPI PUSH2 0x391 PUSH2 0x887 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x3CC JUMPI PUSH2 0x3CB PUSH2 0x887 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE POP DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x40A JUMPI PUSH2 0x409 PUSH2 0x887 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP POP JUMPDEST JUMPDEST DUP1 DUP1 PUSH2 0x423 SWAP1 PUSH2 0x984 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xBE JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x4E4 DUP3 PUSH2 0x49B JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x503 JUMPI PUSH2 0x502 PUSH2 0x4AC JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x516 PUSH2 0x482 JUMP JUMPDEST SWAP1 POP PUSH2 0x522 DUP3 DUP3 PUSH2 0x4DB JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x542 JUMPI PUSH2 0x541 PUSH2 0x4AC JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x588 DUP3 PUSH2 0x55D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x598 DUP2 PUSH2 0x57D JUMP JUMPDEST DUP2 EQ PUSH2 0x5A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x5B5 DUP2 PUSH2 0x58F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5D1 DUP2 PUSH2 0x5BB JUMP JUMPDEST DUP2 EQ PUSH2 0x5DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x5EE DUP2 PUSH2 0x5C8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x60A JUMPI PUSH2 0x609 PUSH2 0x558 JUMP JUMPDEST JUMPDEST PUSH2 0x614 PUSH1 0x80 PUSH2 0x50C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x624 DUP5 DUP3 DUP6 ADD PUSH2 0x5A6 JUMP JUMPDEST PUSH1 0x0 DUP4 ADD MSTORE POP PUSH1 0x20 PUSH2 0x638 DUP5 DUP3 DUP6 ADD PUSH2 0x5A6 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP PUSH1 0x40 PUSH2 0x64C DUP5 DUP3 DUP6 ADD PUSH2 0x5A6 JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MSTORE POP PUSH1 0x60 PUSH2 0x660 DUP5 DUP3 DUP6 ADD PUSH2 0x5DF JUMP JUMPDEST PUSH1 0x60 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x67F PUSH2 0x67A DUP5 PUSH2 0x527 JUMP JUMPDEST PUSH2 0x50C JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x80 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x6A2 JUMPI PUSH2 0x6A1 PUSH2 0x553 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x6CB JUMPI DUP1 PUSH2 0x6B7 DUP9 DUP3 PUSH2 0x5F4 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x80 DUP2 ADD SWAP1 POP PUSH2 0x6A4 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x6EA JUMPI PUSH2 0x6E9 PUSH2 0x496 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x6FA DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x66C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x719 JUMPI PUSH2 0x718 PUSH2 0x48C JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x737 JUMPI PUSH2 0x736 PUSH2 0x491 JUMP JUMPDEST JUMPDEST PUSH2 0x743 DUP5 DUP3 DUP6 ADD PUSH2 0x6D5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x781 DUP2 PUSH2 0x57D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x79A DUP2 PUSH2 0x787 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x7B6 PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x778 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x7C9 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x778 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x7DC PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x791 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7EE DUP4 DUP4 PUSH2 0x7A0 JUMP JUMPDEST PUSH1 0x60 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x812 DUP3 PUSH2 0x74C JUMP JUMPDEST PUSH2 0x81C DUP2 DUP6 PUSH2 0x757 JUMP JUMPDEST SWAP4 POP PUSH2 0x827 DUP4 PUSH2 0x768 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x858 JUMPI DUP2 MLOAD PUSH2 0x83F DUP9 DUP3 PUSH2 0x7E2 JUMP JUMPDEST SWAP8 POP PUSH2 0x84A DUP4 PUSH2 0x7FA JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x82B JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x87F DUP2 DUP5 PUSH2 0x807 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x8BF DUP2 PUSH2 0x57D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x8DA PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x8B6 JUMP JUMPDEST PUSH2 0x8E7 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x8B6 JUMP JUMPDEST PUSH2 0x8F4 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x8B6 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x905 DUP2 PUSH2 0x787 JUMP JUMPDEST DUP2 EQ PUSH2 0x910 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x922 DUP2 PUSH2 0x8FC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x93E JUMPI PUSH2 0x93D PUSH2 0x48C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x94C DUP5 DUP3 DUP6 ADD PUSH2 0x913 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x98F DUP3 PUSH2 0x787 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x9C1 JUMPI PUSH2 0x9C0 PUSH2 0x955 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF 0xF7 0xD3 POP 0x4E RETURNDATACOPY CODESIZE SWAP2 0xDE PUSH24 0xF6842FFBC014F65489EF8BFF620974B562FAA43409CD6473 PUSH16 0x6C634300081100330000000000000000 ",
							"sourceMap": "378:921:9:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@getPrices_980": {
									"entryPoint": 96,
									"id": 980,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_array$_t_struct$_input_$849_memory_ptr_$dyn_memory_ptr": {
									"entryPoint": 1644,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 1446,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_array$_t_struct$_input_$849_memory_ptr_$dyn_memory_ptr": {
									"entryPoint": 1749,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_struct$_input_$849_memory_ptr": {
									"entryPoint": 1524,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 2323,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint8": {
									"entryPoint": 1503,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_array$_t_struct$_input_$849_memory_ptr_$dyn_memory_ptr": {
									"entryPoint": 1795,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 2344,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encodeUpdatedPos_t_struct$_output_$856_memory_ptr_to_t_struct$_output_$856_memory_ptr": {
									"entryPoint": 2018,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address": {
									"entryPoint": 1912,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack_library": {
									"entryPoint": 2230,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_array$_t_struct$_output_$856_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_output_$856_memory_ptr_$dyn_memory_ptr_fromStack": {
									"entryPoint": 2055,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_struct$_output_$856_memory_ptr_to_t_struct$_output_$856_memory_ptr": {
									"entryPoint": 1952,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256": {
									"entryPoint": 1937,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address_t_address_t_address__to_t_address_t_address_t_address__fromStack_library_reversed": {
									"entryPoint": 2245,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_struct$_output_$856_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_output_$856_memory_ptr_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 2149,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 1292,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 1154,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_array$_t_struct$_input_$849_memory_ptr_$dyn_memory_ptr": {
									"entryPoint": 1319,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_array$_t_struct$_output_$856_memory_ptr_$dyn_memory_ptr": {
									"entryPoint": 1896,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_array$_t_struct$_output_$856_memory_ptr_$dyn_memory_ptr": {
									"entryPoint": 1868,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_nextElement_t_array$_t_struct$_output_$856_memory_ptr_$dyn_memory_ptr": {
									"entryPoint": 2042,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_array$_t_struct$_output_$856_memory_ptr_$dyn_memory_ptr_fromStack": {
									"entryPoint": 1879,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 1405,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1373,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1927,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 1467,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 1243,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"increment_t_uint256": {
									"entryPoint": 2436,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2389,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 2183,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 1196,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 1174,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f": {
									"entryPoint": 1368,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
									"entryPoint": 1363,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 1169,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1164,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 1179,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"validator_revert_t_address": {
									"entryPoint": 1423,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 2300,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint8": {
									"entryPoint": 1480,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:10864:13",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:13"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:13"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:13",
														"type": ""
													}
												],
												"src": "7:75:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:13"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:13"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "423:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "440:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "443:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "433:12:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "433:12:13"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "334:117:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "505:54:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "515:38:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "533:5:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "540:2:13",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "529:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "529:14:13"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "549:2:13",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "545:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "545:7:13"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "525:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "525:28:13"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "515:6:13"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "488:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "498:6:13",
														"type": ""
													}
												],
												"src": "457:102:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "593:152:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "610:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "613:77:13",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "603:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "603:88:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "603:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "707:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "710:4:13",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "700:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "700:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "700:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "731:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "734:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "724:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "724:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "724:15:13"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "565:180:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "794:238:13",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "804:58:13",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "826:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "856:4:13"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "834:21:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "834:27:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "822:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "822:40:13"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "808:10:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "973:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "975:16:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "975:18:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "975:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "916:10:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "928:18:13",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "913:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "913:34:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "952:10:13"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "964:6:13"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "949:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "949:22:13"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "910:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "910:62:13"
															},
															"nodeType": "YulIf",
															"src": "907:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1011:2:13",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "1015:10:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1004:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1004:22:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1004:22:13"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "780:6:13",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "788:4:13",
														"type": ""
													}
												],
												"src": "751:281:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1079:88:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1089:30:13",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "1099:18:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1099:20:13"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1089:6:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1148:6:13"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "1156:4:13"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "1128:19:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1128:33:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1128:33:13"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "1063:4:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1072:6:13",
														"type": ""
													}
												],
												"src": "1038:129:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1277:229:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1382:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1384:16:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1384:18:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1384:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1354:6:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1362:18:13",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1351:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1351:30:13"
															},
															"nodeType": "YulIf",
															"src": "1348:56:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1414:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1426:6:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1434:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "1422:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1422:17:13"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1414:4:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1476:23:13",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "1488:4:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1494:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1484:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1484:15:13"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1476:4:13"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_array$_t_struct$_input_$849_memory_ptr_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1261:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "1272:4:13",
														"type": ""
													}
												],
												"src": "1173:333:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1601:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1618:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1621:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1611:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1611:12:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1611:12:13"
														}
													]
												},
												"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
												"nodeType": "YulFunctionDefinition",
												"src": "1512:117:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1724:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1741:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1744:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1734:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1734:12:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1734:12:13"
														}
													]
												},
												"name": "revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f",
												"nodeType": "YulFunctionDefinition",
												"src": "1635:117:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1847:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1864:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1867:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1857:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1857:12:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1857:12:13"
														}
													]
												},
												"name": "revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421",
												"nodeType": "YulFunctionDefinition",
												"src": "1758:117:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1926:81:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1936:65:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1951:5:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1958:42:13",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1947:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1947:54:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1936:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1908:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1918:7:13",
														"type": ""
													}
												],
												"src": "1881:126:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2058:51:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2068:35:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2097:5:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "2079:17:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2079:24:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2068:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2040:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2050:7:13",
														"type": ""
													}
												],
												"src": "2013:96:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2158:79:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2215:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2224:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2227:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2217:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2217:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2217:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2181:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2206:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "2188:17:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2188:24:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2178:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2178:35:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2171:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2171:43:13"
															},
															"nodeType": "YulIf",
															"src": "2168:63:13"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2151:5:13",
														"type": ""
													}
												],
												"src": "2115:122:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2295:87:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2305:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2327:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2314:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2314:20:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2305:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2370:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "2343:26:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2343:33:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2343:33:13"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2273:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2281:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2289:5:13",
														"type": ""
													}
												],
												"src": "2243:139:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2431:43:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2441:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2456:5:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2463:4:13",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2452:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2452:16:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2441:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2413:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2423:7:13",
														"type": ""
													}
												],
												"src": "2388:86:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2521:77:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2576:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2585:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2588:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2578:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2578:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2578:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2544:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2567:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint8",
																					"nodeType": "YulIdentifier",
																					"src": "2551:15:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2551:22:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2541:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2541:33:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2534:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2534:41:13"
															},
															"nodeType": "YulIf",
															"src": "2531:61:13"
														}
													]
												},
												"name": "validator_revert_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2514:5:13",
														"type": ""
													}
												],
												"src": "2480:118:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2654:85:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2664:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2686:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2673:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2673:20:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2664:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2727:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint8",
																	"nodeType": "YulIdentifier",
																	"src": "2702:24:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2702:31:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2702:31:13"
														}
													]
												},
												"name": "abi_decode_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2632:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2640:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2648:5:13",
														"type": ""
													}
												],
												"src": "2604:135:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2858:825:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2902:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f",
																				"nodeType": "YulIdentifier",
																				"src": "2904:77:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2904:79:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2904:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "2879:3:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2884:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2875:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2875:19:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2896:4:13",
																		"type": "",
																		"value": "0x80"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2871:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2871:30:13"
															},
															"nodeType": "YulIf",
															"src": "2868:117:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2994:30:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3019:4:13",
																		"type": "",
																		"value": "0x80"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "3003:15:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3003:21:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2994:5:13"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3034:148:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3067:15:13",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3081:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3071:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3107:5:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3114:4:13",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3103:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3103:16:13"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "headStart",
																								"nodeType": "YulIdentifier",
																								"src": "3146:9:13"
																							},
																							{
																								"name": "offset",
																								"nodeType": "YulIdentifier",
																								"src": "3157:6:13"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "3142:3:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3142:22:13"
																					},
																					{
																						"name": "end",
																						"nodeType": "YulIdentifier",
																						"src": "3166:3:13"
																					}
																				],
																				"functionName": {
																					"name": "abi_decode_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "3121:20:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3121:49:13"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nodeType": "YulIdentifier",
																			"src": "3096:6:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3096:75:13"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "3096:75:13"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3192:149:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3225:16:13",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3239:2:13",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3229:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3266:5:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3273:4:13",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3262:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3262:16:13"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "headStart",
																								"nodeType": "YulIdentifier",
																								"src": "3305:9:13"
																							},
																							{
																								"name": "offset",
																								"nodeType": "YulIdentifier",
																								"src": "3316:6:13"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "3301:3:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3301:22:13"
																					},
																					{
																						"name": "end",
																						"nodeType": "YulIdentifier",
																						"src": "3325:3:13"
																					}
																				],
																				"functionName": {
																					"name": "abi_decode_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "3280:20:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3280:49:13"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nodeType": "YulIdentifier",
																			"src": "3255:6:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3255:75:13"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "3255:75:13"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3351:155:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3390:16:13",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3404:2:13",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3394:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3431:5:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3438:4:13",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3427:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3427:16:13"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "headStart",
																								"nodeType": "YulIdentifier",
																								"src": "3470:9:13"
																							},
																							{
																								"name": "offset",
																								"nodeType": "YulIdentifier",
																								"src": "3481:6:13"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "3466:3:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3466:22:13"
																					},
																					{
																						"name": "end",
																						"nodeType": "YulIdentifier",
																						"src": "3490:3:13"
																					}
																				],
																				"functionName": {
																					"name": "abi_decode_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "3445:20:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3445:49:13"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nodeType": "YulIdentifier",
																			"src": "3420:6:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3420:75:13"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "3420:75:13"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3516:160:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3562:16:13",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3576:2:13",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3566:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3603:5:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3610:4:13",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3599:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3599:16:13"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "headStart",
																								"nodeType": "YulIdentifier",
																								"src": "3640:9:13"
																							},
																							{
																								"name": "offset",
																								"nodeType": "YulIdentifier",
																								"src": "3651:6:13"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "3636:3:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3636:22:13"
																					},
																					{
																						"name": "end",
																						"nodeType": "YulIdentifier",
																						"src": "3660:3:13"
																					}
																				],
																				"functionName": {
																					"name": "abi_decode_t_uint8",
																					"nodeType": "YulIdentifier",
																					"src": "3617:18:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3617:47:13"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nodeType": "YulIdentifier",
																			"src": "3592:6:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3592:73:13"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "3592:73:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_struct$_input_$849_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2833:9:13",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2844:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2852:5:13",
														"type": ""
													}
												],
												"src": "2781:902:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3851:652:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3861:112:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "3965:6:13"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_array$_t_struct$_input_$849_memory_ptr_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "3886:78:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3886:86:13"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "3870:15:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3870:103:13"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "3861:5:13"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3982:16:13",
															"value": {
																"name": "array",
																"nodeType": "YulIdentifier",
																"src": "3993:5:13"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "3986:3:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "4015:5:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4022:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4008:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4008:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4008:21:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4038:23:13",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "4049:5:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4056:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4045:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4045:16:13"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "4038:3:13"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4071:44:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4089:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "4101:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4109:4:13",
																				"type": "",
																				"value": "0x80"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "4097:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4097:17:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4085:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4085:30:13"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nodeType": "YulTypedName",
																	"src": "4075:6:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4143:103:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nodeType": "YulIdentifier",
																				"src": "4157:77:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4157:79:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4157:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "4130:6:13"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "4138:3:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4127:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4127:15:13"
															},
															"nodeType": "YulIf",
															"src": "4124:122:13"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4331:166:13",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "4346:21:13",
																		"value": {
																			"name": "src",
																			"nodeType": "YulIdentifier",
																			"src": "4364:3:13"
																		},
																		"variables": [
																			{
																				"name": "elementPos",
																				"nodeType": "YulTypedName",
																				"src": "4350:10:13",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "4388:3:13"
																				},
																				{
																					"arguments": [
																						{
																							"name": "elementPos",
																							"nodeType": "YulIdentifier",
																							"src": "4436:10:13"
																						},
																						{
																							"name": "end",
																							"nodeType": "YulIdentifier",
																							"src": "4448:3:13"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_t_struct$_input_$849_memory_ptr",
																						"nodeType": "YulIdentifier",
																						"src": "4393:42:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4393:59:13"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "4381:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4381:72:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4381:72:13"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "4466:21:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "4477:3:13"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4482:4:13",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "4473:3:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4473:14:13"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "4466:3:13"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "4284:3:13"
																	},
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "4289:6:13"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "4281:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4281:15:13"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "4297:25:13",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "4299:21:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "4310:3:13"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4315:4:13",
																					"type": "",
																					"value": "0x80"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "4306:3:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4306:14:13"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "4299:3:13"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "4259:21:13",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "4261:17:13",
																		"value": {
																			"name": "offset",
																			"nodeType": "YulIdentifier",
																			"src": "4272:6:13"
																		},
																		"variables": [
																			{
																				"name": "src",
																				"nodeType": "YulTypedName",
																				"src": "4265:3:13",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "4255:242:13"
														}
													]
												},
												"name": "abi_decode_available_length_t_array$_t_struct$_input_$849_memory_ptr_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3821:6:13",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3829:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3837:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "3845:5:13",
														"type": ""
													}
												],
												"src": "3727:776:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4646:315:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4695:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "4697:77:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4697:79:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4697:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4674:6:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4682:4:13",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4670:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4670:17:13"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "4689:3:13"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "4666:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4666:27:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4659:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4659:35:13"
															},
															"nodeType": "YulIf",
															"src": "4656:122:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4787:34:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4814:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4801:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4801:20:13"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "4791:6:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4830:125:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "4928:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4936:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4924:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4924:17:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4943:6:13"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "4951:3:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_array$_t_struct$_input_$849_memory_ptr_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "4839:84:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4839:116:13"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "4830:5:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_array$_t_struct$_input_$849_memory_ptr_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "4624:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4632:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "4640:5:13",
														"type": ""
													}
												],
												"src": "4547:414:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5080:470:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5126:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5128:77:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5128:79:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5128:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5101:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5110:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5097:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5097:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5122:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5093:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5093:32:13"
															},
															"nodeType": "YulIf",
															"src": "5090:119:13"
														},
														{
															"nodeType": "YulBlock",
															"src": "5219:324:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5234:45:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5265:9:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5276:1:13",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5261:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5261:17:13"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "5248:12:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5248:31:13"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5238:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "5326:83:13",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "5328:77:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5328:79:13"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "5328:79:13"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "5298:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5306:18:13",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "5295:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5295:30:13"
																	},
																	"nodeType": "YulIf",
																	"src": "5292:117:13"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5423:110:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5505:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5516:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5501:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5501:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5525:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_struct$_input_$849_memory_ptr_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "5433:67:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5433:100:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5423:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_struct$_input_$849_memory_ptr_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5050:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5061:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5073:6:13",
														"type": ""
													}
												],
												"src": "4967:583:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5653:40:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5664:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5680:5:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "5674:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5674:12:13"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "5664:6:13"
																}
															]
														}
													]
												},
												"name": "array_length_t_array$_t_struct$_output_$856_memory_ptr_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5636:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "5646:6:13",
														"type": ""
													}
												],
												"src": "5556:137:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5833:73:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5850:3:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5855:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5843:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5843:19:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5843:19:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5871:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5890:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5895:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5886:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5886:14:13"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "5871:11:13"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_array$_t_struct$_output_$856_memory_ptr_$dyn_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5805:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "5810:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "5821:11:13",
														"type": ""
													}
												],
												"src": "5699:207:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6007:60:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6017:11:13",
															"value": {
																"name": "ptr",
																"nodeType": "YulIdentifier",
																"src": "6025:3:13"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "6017:4:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6038:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "6050:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6055:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6046:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6046:14:13"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "6038:4:13"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_array$_t_struct$_output_$856_memory_ptr_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "5994:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "6002:4:13",
														"type": ""
													}
												],
												"src": "5912:155:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6128:53:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6145:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6168:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "6150:17:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6150:24:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6138:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6138:37:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6138:37:13"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6116:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6123:3:13",
														"type": ""
													}
												],
												"src": "6073:108:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6232:32:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6242:16:13",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "6253:5:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "6242:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6214:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "6224:7:13",
														"type": ""
													}
												],
												"src": "6187:77:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6325:53:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6342:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6365:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "6347:17:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6347:24:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6335:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6335:37:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6335:37:13"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6313:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6320:3:13",
														"type": ""
													}
												],
												"src": "6270:108:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6556:562:13",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6566:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6582:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6587:4:13",
																		"type": "",
																		"value": "0x60"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6578:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6578:14:13"
															},
															"variables": [
																{
																	"name": "tail",
																	"nodeType": "YulTypedName",
																	"src": "6570:4:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "6602:162:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6635:43:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "6665:5:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6672:4:13",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6661:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6661:16:13"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "6655:5:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6655:23:13"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "6639:12:13",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "6725:12:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "6743:3:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6748:4:13",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6739:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6739:14:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_address_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "6691:33:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6691:63:13"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "6691:63:13"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "6774:162:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6807:43:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "6837:5:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6844:4:13",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6833:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6833:16:13"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "6827:5:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6827:23:13"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "6811:12:13",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "6897:12:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "6915:3:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6920:4:13",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6911:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6911:14:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_address_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "6863:33:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6863:63:13"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "6863:63:13"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "6946:165:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6982:43:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "7012:5:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7019:4:13",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7008:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7008:16:13"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "7002:5:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7002:23:13"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "6986:12:13",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "7072:12:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "7090:3:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7095:4:13",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7086:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7086:14:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "7038:33:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7038:63:13"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "7038:63:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_struct$_output_$856_memory_ptr_to_t_struct$_output_$856_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6543:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6550:3:13",
														"type": ""
													}
												],
												"src": "6454:664:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7250:145:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7340:6:13"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7348:3:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_struct$_output_$856_memory_ptr_to_t_struct$_output_$856_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "7260:79:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7260:92:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7260:92:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7361:28:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7379:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7384:4:13",
																		"type": "",
																		"value": "0x60"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7375:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7375:14:13"
															},
															"variableNames": [
																{
																	"name": "updatedPos",
																	"nodeType": "YulIdentifier",
																	"src": "7361:10:13"
																}
															]
														}
													]
												},
												"name": "abi_encodeUpdatedPos_t_struct$_output_$856_memory_ptr_to_t_struct$_output_$856_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7223:6:13",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7231:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updatedPos",
														"nodeType": "YulTypedName",
														"src": "7239:10:13",
														"type": ""
													}
												],
												"src": "7124:271:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7499:38:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7509:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "7521:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7526:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7517:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7517:14:13"
															},
															"variableNames": [
																{
																	"name": "next",
																	"nodeType": "YulIdentifier",
																	"src": "7509:4:13"
																}
															]
														}
													]
												},
												"name": "array_nextElement_t_array$_t_struct$_output_$856_memory_ptr_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "7486:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "next",
														"nodeType": "YulTypedName",
														"src": "7494:4:13",
														"type": ""
													}
												],
												"src": "7401:136:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7787:746:13",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7797:91:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7882:5:13"
																	}
																],
																"functionName": {
																	"name": "array_length_t_array$_t_struct$_output_$856_memory_ptr_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "7811:70:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7811:77:13"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "7801:6:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7897:116:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8001:3:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8006:6:13"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_array$_t_struct$_output_$856_memory_ptr_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7904:96:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7904:109:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "7897:3:13"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8022:94:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "8110:5:13"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_t_array$_t_struct$_output_$856_memory_ptr_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "8037:72:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8037:79:13"
															},
															"variables": [
																{
																	"name": "baseRef",
																	"nodeType": "YulTypedName",
																	"src": "8026:7:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8125:21:13",
															"value": {
																"name": "baseRef",
																"nodeType": "YulIdentifier",
																"src": "8139:7:13"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "8129:6:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8215:293:13",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "8229:34:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "8256:6:13"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "8250:5:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8250:13:13"
																		},
																		"variables": [
																			{
																				"name": "elementValue0",
																				"nodeType": "YulTypedName",
																				"src": "8233:13:13",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "8276:116:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "elementValue0",
																					"nodeType": "YulIdentifier",
																					"src": "8373:13:13"
																				},
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "8388:3:13"
																				}
																			],
																			"functionName": {
																				"name": "abi_encodeUpdatedPos_t_struct$_output_$856_memory_ptr_to_t_struct$_output_$856_memory_ptr",
																				"nodeType": "YulIdentifier",
																				"src": "8283:89:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8283:109:13"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "8276:3:13"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "8405:93:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "8491:6:13"
																				}
																			],
																			"functionName": {
																				"name": "array_nextElement_t_array$_t_struct$_output_$856_memory_ptr_$dyn_memory_ptr",
																				"nodeType": "YulIdentifier",
																				"src": "8415:75:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8415:83:13"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "8405:6:13"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "8177:1:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8180:6:13"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "8174:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8174:13:13"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "8188:18:13",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "8190:14:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "8199:1:13"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8202:1:13",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "8195:3:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8195:9:13"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "8190:1:13"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "8159:14:13",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "8161:10:13",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "8170:1:13",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nodeType": "YulTypedName",
																				"src": "8165:1:13",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "8155:353:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8517:10:13",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "8524:3:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "8517:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_array$_t_struct$_output_$856_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_output_$856_memory_ptr_$dyn_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7766:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7773:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7782:3:13",
														"type": ""
													}
												],
												"src": "7617:916:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8733:271:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8743:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8755:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8766:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8751:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8751:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8743:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8790:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8801:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8786:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8786:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "8809:4:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8815:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8805:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8805:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8779:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8779:47:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8779:47:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8835:162:13",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8983:6:13"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "8992:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_struct$_output_$856_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_output_$856_memory_ptr_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8843:139:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8843:154:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8835:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_struct$_output_$856_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_output_$856_memory_ptr_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8705:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8717:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8728:4:13",
														"type": ""
													}
												],
												"src": "8539:465:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9038:152:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9055:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9058:77:13",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9048:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9048:88:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9048:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9152:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9155:4:13",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9145:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9145:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9145:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9176:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9179:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "9169:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9169:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9169:15:13"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "9010:180:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9269:53:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9286:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "9309:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "9291:17:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9291:24:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9279:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9279:37:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9279:37:13"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack_library",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9257:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9264:3:13",
														"type": ""
													}
												],
												"src": "9196:126:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9490:312:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9500:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9512:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9523:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9508:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9508:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9500:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "9588:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9601:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9612:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9597:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9597:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack_library",
																	"nodeType": "YulIdentifier",
																	"src": "9536:51:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9536:79:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9536:79:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "9677:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9690:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9701:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9686:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9686:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack_library",
																	"nodeType": "YulIdentifier",
																	"src": "9625:51:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9625:80:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9625:80:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "9767:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9780:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9791:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9776:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9776:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack_library",
																	"nodeType": "YulIdentifier",
																	"src": "9715:51:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9715:80:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9715:80:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_address__to_t_address_t_address_t_address__fromStack_library_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9446:9:13",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "9458:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "9466:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9474:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9485:4:13",
														"type": ""
													}
												],
												"src": "9328:474:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9851:79:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9908:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9917:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9920:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9910:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9910:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9910:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "9874:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "9899:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "9881:17:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9881:24:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "9871:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9871:35:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "9864:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9864:43:13"
															},
															"nodeType": "YulIf",
															"src": "9861:63:13"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9844:5:13",
														"type": ""
													}
												],
												"src": "9808:122:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9999:80:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10009:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "10024:6:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "10018:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10018:13:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "10009:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10067:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "10040:26:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10040:33:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10040:33:13"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "9977:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "9985:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9993:5:13",
														"type": ""
													}
												],
												"src": "9936:143:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10162:274:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10208:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "10210:77:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10210:79:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10210:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10183:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10192:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10179:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10179:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10204:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "10175:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10175:32:13"
															},
															"nodeType": "YulIf",
															"src": "10172:119:13"
														},
														{
															"nodeType": "YulBlock",
															"src": "10301:128:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "10316:15:13",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10330:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "10320:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "10345:74:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "10391:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "10402:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10387:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10387:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10411:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "10355:31:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10355:64:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "10345:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10132:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "10143:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10155:6:13",
														"type": ""
													}
												],
												"src": "10085:351:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10470:152:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10487:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10490:77:13",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10480:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10480:88:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10480:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10584:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10587:4:13",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10577:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10577:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10577:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10608:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10611:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "10601:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10601:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10601:15:13"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "10442:180:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10671:190:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10681:33:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10708:5:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "10690:17:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10690:24:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "10681:5:13"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10804:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "10806:16:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10806:18:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10806:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10729:5:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10736:66:13",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "10726:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10726:77:13"
															},
															"nodeType": "YulIf",
															"src": "10723:103:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10835:20:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10846:5:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10853:1:13",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10842:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10842:13:13"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "10835:3:13"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10657:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "10667:3:13",
														"type": ""
													}
												],
												"src": "10628:233:13"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_array$_t_struct$_input_$849_memory_ptr_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    function revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f() {\n        revert(0, 0)\n    }\n\n    function revert_error_5e8f644817bc4960744f35c15999b6eff64ae702f94b1c46297cfd4e1aec2421() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function validator_revert_t_uint8(value) {\n        if iszero(eq(value, cleanup_t_uint8(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint8(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint8(value)\n    }\n\n    // struct PriceAggregator.input\n    function abi_decode_t_struct$_input_$849_memory_ptr(headStart, end) -> value {\n        if slt(sub(end, headStart), 0x80) { revert_error_3538a459e4a0eb828f1aed5ebe5dc96fe59620a31d9b33e41259bb820cae769f() }\n        value := allocate_memory(0x80)\n\n        {\n            // t1\n\n            let offset := 0\n\n            mstore(add(value, 0x00), abi_decode_t_address(add(headStart, offset), end))\n\n        }\n\n        {\n            // t2\n\n            let offset := 32\n\n            mstore(add(value, 0x20), abi_decode_t_address(add(headStart, offset), end))\n\n        }\n\n        {\n            // provider\n\n            let offset := 64\n\n            mstore(add(value, 0x40), abi_decode_t_address(add(headStart, offset), end))\n\n        }\n\n        {\n            // providerVersion\n\n            let offset := 96\n\n            mstore(add(value, 0x60), abi_decode_t_uint8(add(headStart, offset), end))\n\n        }\n\n    }\n\n    // struct PriceAggregator.input[]\n    function abi_decode_available_length_t_array$_t_struct$_input_$849_memory_ptr_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_struct$_input_$849_memory_ptr_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x80))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x80) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_struct$_input_$849_memory_ptr(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // struct PriceAggregator.input[]\n    function abi_decode_t_array$_t_struct$_input_$849_memory_ptr_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_struct$_input_$849_memory_ptr_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_array$_t_struct$_input_$849_memory_ptr_$dyn_memory_ptr(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_array$_t_struct$_input_$849_memory_ptr_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_array$_t_struct$_output_$856_memory_ptr_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_struct$_output_$856_memory_ptr_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_struct$_output_$856_memory_ptr_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    // struct PriceAggregator.output -> struct PriceAggregator.output\n    function abi_encode_t_struct$_output_$856_memory_ptr_to_t_struct$_output_$856_memory_ptr(value, pos)  {\n        let tail := add(pos, 0x60)\n\n        {\n            // t1\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // t2\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // price\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x40))\n        }\n\n    }\n\n    function abi_encodeUpdatedPos_t_struct$_output_$856_memory_ptr_to_t_struct$_output_$856_memory_ptr(value0, pos) -> updatedPos {\n        abi_encode_t_struct$_output_$856_memory_ptr_to_t_struct$_output_$856_memory_ptr(value0, pos)\n        updatedPos := add(pos, 0x60)\n    }\n\n    function array_nextElement_t_array$_t_struct$_output_$856_memory_ptr_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // struct PriceAggregator.output[] -> struct PriceAggregator.output[]\n    function abi_encode_t_array$_t_struct$_output_$856_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_output_$856_memory_ptr_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_struct$_output_$856_memory_ptr_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_struct$_output_$856_memory_ptr_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_struct$_output_$856_memory_ptr_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_struct$_output_$856_memory_ptr_to_t_struct$_output_$856_memory_ptr(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_struct$_output_$856_memory_ptr_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_struct$_output_$856_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_output_$856_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_struct$_output_$856_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_output_$856_memory_ptr_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack_library(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_address__to_t_address_t_address_t_address__fromStack_library_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack_library(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack_library(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack_library(value2,  add(headStart, 64))\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n}\n",
									"id": 13,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {
								"contracts/libraries/UniswapV2.sol": {
									"UniswapV2": [
										{
											"length": 20,
											"start": 244
										}
									]
								},
								"contracts/libraries/UniswapV3.sol": {
									"UniswapV3": [
										{
											"length": 20,
											"start": 670
										}
									]
								}
							},
							"object": "608060405234801561001057600080fd5b506004361061002b5760003560e01c8063ff514fa314610030575b600080fd5b61004a60048036038101906100459190610703565b610060565b6040516100579190610865565b60405180910390f35b60606000825167ffffffffffffffff81111561007f5761007e6104ac565b5b6040519080825280602002602001820160405280156100b857816020015b6100a5610435565b81526020019060019003908161009d5790505b50905060005b835181101561042b5760028482815181106100dc576100db610887565b5b60200260200101516060015160ff160361027157600073__$66db80e837caed232b747c0dfa8ba195e8$__63c361e0b186848151811061011f5761011e610887565b5b60200260200101516040015187858151811061013e5761013d610887565b5b60200260200101516000015188868151811061015d5761015c610887565b5b6020026020010151602001516040518463ffffffff1660e01b8152600401610187939291906108c5565b602060405180830381865af41580156101a4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101c89190610928565b905060405180606001604052808684815181106101e8576101e7610887565b5b60200260200101516000015173ffffffffffffffffffffffffffffffffffffffff16815260200186848151811061022257610221610887565b5b60200260200101516020015173ffffffffffffffffffffffffffffffffffffffff168152602001828152508383815181106102605761025f610887565b5b602002602001018190525050610418565b600384828151811061028657610285610887565b5b60200260200101516060015160ff160361041757600073__$295ab41254e875e078eae9a73e9e2c34b1$__63edf15a9a8684815181106102c9576102c8610887565b5b6020026020010151604001518785815181106102e8576102e7610887565b5b60200260200101516000015188868151811061030757610306610887565b5b6020026020010151602001516040518463ffffffff1660e01b8152600401610331939291906108c5565b602060405180830381865af415801561034e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103729190610928565b9050604051806060016040528086848151811061039257610391610887565b5b60200260200101516000015173ffffffffffffffffffffffffffffffffffffffff1681526020018684815181106103cc576103cb610887565b5b60200260200101516020015173ffffffffffffffffffffffffffffffffffffffff1681526020018281525083838151811061040a57610409610887565b5b6020026020010181905250505b5b808061042390610984565b9150506100be565b5080915050919050565b6040518060600160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600081525090565b6000604051905090565b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6104e48261049b565b810181811067ffffffffffffffff82111715610503576105026104ac565b5b80604052505050565b6000610516610482565b905061052282826104db565b919050565b600067ffffffffffffffff821115610542576105416104ac565b5b602082029050602081019050919050565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006105888261055d565b9050919050565b6105988161057d565b81146105a357600080fd5b50565b6000813590506105b58161058f565b92915050565b600060ff82169050919050565b6105d1816105bb565b81146105dc57600080fd5b50565b6000813590506105ee816105c8565b92915050565b60006080828403121561060a57610609610558565b5b610614608061050c565b90506000610624848285016105a6565b6000830152506020610638848285016105a6565b602083015250604061064c848285016105a6565b6040830152506060610660848285016105df565b60608301525092915050565b600061067f61067a84610527565b61050c565b905080838252602082019050608084028301858111156106a2576106a1610553565b5b835b818110156106cb57806106b788826105f4565b8452602084019350506080810190506106a4565b5050509392505050565b600082601f8301126106ea576106e9610496565b5b81356106fa84826020860161066c565b91505092915050565b6000602082840312156107195761071861048c565b5b600082013567ffffffffffffffff81111561073757610736610491565b5b610743848285016106d5565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6107818161057d565b82525050565b6000819050919050565b61079a81610787565b82525050565b6060820160008201516107b66000850182610778565b5060208201516107c96020850182610778565b5060408201516107dc6040850182610791565b50505050565b60006107ee83836107a0565b60608301905092915050565b6000602082019050919050565b60006108128261074c565b61081c8185610757565b935061082783610768565b8060005b8381101561085857815161083f88826107e2565b975061084a836107fa565b92505060018101905061082b565b5085935050505092915050565b6000602082019050818103600083015261087f8184610807565b905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6108bf8161057d565b82525050565b60006060820190506108da60008301866108b6565b6108e760208301856108b6565b6108f460408301846108b6565b949350505050565b61090581610787565b811461091057600080fd5b50565b600081519050610922816108fc565b92915050565b60006020828403121561093e5761093d61048c565b5b600061094c84828501610913565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061098f82610787565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036109c1576109c0610955565b5b60018201905091905056fea26469706673582212200ff7d3504e3e3891de77f6842ffbc014f65489ef8bff620974b562faa43409cd64736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xFF514FA3 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x45 SWAP2 SWAP1 PUSH2 0x703 JUMP JUMPDEST PUSH2 0x60 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x57 SWAP2 SWAP1 PUSH2 0x865 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP3 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x7F JUMPI PUSH2 0x7E PUSH2 0x4AC JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xB8 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0xA5 PUSH2 0x435 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x9D JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x42B JUMPI PUSH1 0x2 DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xDC JUMPI PUSH2 0xDB PUSH2 0x887 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x60 ADD MLOAD PUSH1 0xFF AND SUB PUSH2 0x271 JUMPI PUSH1 0x0 PUSH20 0x0 PUSH4 0xC361E0B1 DUP7 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x11F JUMPI PUSH2 0x11E PUSH2 0x887 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 ADD MLOAD DUP8 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x13E JUMPI PUSH2 0x13D PUSH2 0x887 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD MLOAD DUP9 DUP7 DUP2 MLOAD DUP2 LT PUSH2 0x15D JUMPI PUSH2 0x15C PUSH2 0x887 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x187 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x8C5 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x1A4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1C8 SWAP2 SWAP1 PUSH2 0x928 JUMP JUMPDEST SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP7 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x1E8 JUMPI PUSH2 0x1E7 PUSH2 0x887 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x222 JUMPI PUSH2 0x221 PUSH2 0x887 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE POP DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x260 JUMPI PUSH2 0x25F PUSH2 0x887 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP POP PUSH2 0x418 JUMP JUMPDEST PUSH1 0x3 DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x286 JUMPI PUSH2 0x285 PUSH2 0x887 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x60 ADD MLOAD PUSH1 0xFF AND SUB PUSH2 0x417 JUMPI PUSH1 0x0 PUSH20 0x0 PUSH4 0xEDF15A9A DUP7 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x2C9 JUMPI PUSH2 0x2C8 PUSH2 0x887 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 ADD MLOAD DUP8 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x2E8 JUMPI PUSH2 0x2E7 PUSH2 0x887 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD MLOAD DUP9 DUP7 DUP2 MLOAD DUP2 LT PUSH2 0x307 JUMPI PUSH2 0x306 PUSH2 0x887 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x331 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x8C5 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x34E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x372 SWAP2 SWAP1 PUSH2 0x928 JUMP JUMPDEST SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP7 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x392 JUMPI PUSH2 0x391 PUSH2 0x887 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x3CC JUMPI PUSH2 0x3CB PUSH2 0x887 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE POP DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x40A JUMPI PUSH2 0x409 PUSH2 0x887 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP POP JUMPDEST JUMPDEST DUP1 DUP1 PUSH2 0x423 SWAP1 PUSH2 0x984 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xBE JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x4E4 DUP3 PUSH2 0x49B JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x503 JUMPI PUSH2 0x502 PUSH2 0x4AC JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x516 PUSH2 0x482 JUMP JUMPDEST SWAP1 POP PUSH2 0x522 DUP3 DUP3 PUSH2 0x4DB JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x542 JUMPI PUSH2 0x541 PUSH2 0x4AC JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x588 DUP3 PUSH2 0x55D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x598 DUP2 PUSH2 0x57D JUMP JUMPDEST DUP2 EQ PUSH2 0x5A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x5B5 DUP2 PUSH2 0x58F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5D1 DUP2 PUSH2 0x5BB JUMP JUMPDEST DUP2 EQ PUSH2 0x5DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x5EE DUP2 PUSH2 0x5C8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x60A JUMPI PUSH2 0x609 PUSH2 0x558 JUMP JUMPDEST JUMPDEST PUSH2 0x614 PUSH1 0x80 PUSH2 0x50C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x624 DUP5 DUP3 DUP6 ADD PUSH2 0x5A6 JUMP JUMPDEST PUSH1 0x0 DUP4 ADD MSTORE POP PUSH1 0x20 PUSH2 0x638 DUP5 DUP3 DUP6 ADD PUSH2 0x5A6 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP PUSH1 0x40 PUSH2 0x64C DUP5 DUP3 DUP6 ADD PUSH2 0x5A6 JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MSTORE POP PUSH1 0x60 PUSH2 0x660 DUP5 DUP3 DUP6 ADD PUSH2 0x5DF JUMP JUMPDEST PUSH1 0x60 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x67F PUSH2 0x67A DUP5 PUSH2 0x527 JUMP JUMPDEST PUSH2 0x50C JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x80 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x6A2 JUMPI PUSH2 0x6A1 PUSH2 0x553 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x6CB JUMPI DUP1 PUSH2 0x6B7 DUP9 DUP3 PUSH2 0x5F4 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x80 DUP2 ADD SWAP1 POP PUSH2 0x6A4 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x6EA JUMPI PUSH2 0x6E9 PUSH2 0x496 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x6FA DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x66C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x719 JUMPI PUSH2 0x718 PUSH2 0x48C JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x737 JUMPI PUSH2 0x736 PUSH2 0x491 JUMP JUMPDEST JUMPDEST PUSH2 0x743 DUP5 DUP3 DUP6 ADD PUSH2 0x6D5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x781 DUP2 PUSH2 0x57D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x79A DUP2 PUSH2 0x787 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x7B6 PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x778 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x7C9 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x778 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x7DC PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x791 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7EE DUP4 DUP4 PUSH2 0x7A0 JUMP JUMPDEST PUSH1 0x60 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x812 DUP3 PUSH2 0x74C JUMP JUMPDEST PUSH2 0x81C DUP2 DUP6 PUSH2 0x757 JUMP JUMPDEST SWAP4 POP PUSH2 0x827 DUP4 PUSH2 0x768 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x858 JUMPI DUP2 MLOAD PUSH2 0x83F DUP9 DUP3 PUSH2 0x7E2 JUMP JUMPDEST SWAP8 POP PUSH2 0x84A DUP4 PUSH2 0x7FA JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x82B JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x87F DUP2 DUP5 PUSH2 0x807 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x8BF DUP2 PUSH2 0x57D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x8DA PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x8B6 JUMP JUMPDEST PUSH2 0x8E7 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x8B6 JUMP JUMPDEST PUSH2 0x8F4 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x8B6 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x905 DUP2 PUSH2 0x787 JUMP JUMPDEST DUP2 EQ PUSH2 0x910 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x922 DUP2 PUSH2 0x8FC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x93E JUMPI PUSH2 0x93D PUSH2 0x48C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x94C DUP5 DUP3 DUP6 ADD PUSH2 0x913 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x98F DUP3 PUSH2 0x787 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x9C1 JUMPI PUSH2 0x9C0 PUSH2 0x955 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF 0xF7 0xD3 POP 0x4E RETURNDATACOPY CODESIZE SWAP2 0xDE PUSH24 0xF6842FFBC014F65489EF8BFF620974B562FAA43409CD6473 PUSH16 0x6C634300081100330000000000000000 ",
							"sourceMap": "378:921:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;627:668;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;690:15;717:23;756:6;:13;743:27;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;717:53;;784:6;779:482;795:6;:13;793:1;:15;779:482;;;856:1;827:6;834:1;827:9;;;;;;;;:::i;:::-;;;;;;;;:25;;;:30;;;823:429;;873:13;889:9;:15;905:6;912:1;905:9;;;;;;;;:::i;:::-;;;;;;;;:18;;;924:6;931:1;924:9;;;;;;;;:::i;:::-;;;;;;;;:12;;;937:6;944:1;937:9;;;;;;;;:::i;:::-;;;;;;;;:12;;;889:61;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;873:77;;977:39;;;;;;;;984:6;991:1;984:9;;;;;;;;:::i;:::-;;;;;;;;:12;;;977:39;;;;;;997:6;1004:1;997:9;;;;;;;;:::i;:::-;;;;;;;;:12;;;977:39;;;;;;1010:5;977:39;;;964:7;972:1;964:10;;;;;;;;:::i;:::-;;;;;;;:52;;;;859:178;823:429;;;1076:1;1047:6;1054:1;1047:9;;;;;;;;:::i;:::-;;;;;;;;:25;;;:30;;;1043:209;;1093:13;1109:9;:19;1129:6;1136:1;1129:9;;;;;;;;:::i;:::-;;;;;;;;:18;;;1148:6;1155:1;1148:9;;;;;;;;:::i;:::-;;;;;;;;:12;;;1161:6;1168:1;1161:9;;;;;;;;:::i;:::-;;;;;;;;:12;;;1109:65;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1093:81;;1201:39;;;;;;;;1208:6;1215:1;1208:9;;;;;;;;:::i;:::-;;;;;;;;:12;;;1201:39;;;;;;1221:6;1228:1;1221:9;;;;;;;;:::i;:::-;;;;;;;;:12;;;1201:39;;;;;;1234:5;1201:39;;;1188:7;1196:1;1188:10;;;;;;;;:::i;:::-;;;;;;;:52;;;;1079:173;1043:209;823:429;809:3;;;;;:::i;:::-;;;;779:482;;;;1281:7;1274:14;;;627:668;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;7:75:13:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:102;498:6;549:2;545:7;540:2;533:5;529:14;525:28;515:38;;457:102;;;:::o;565:180::-;613:77;610:1;603:88;710:4;707:1;700:15;734:4;731:1;724:15;751:281;834:27;856:4;834:27;:::i;:::-;826:6;822:40;964:6;952:10;949:22;928:18;916:10;913:34;910:62;907:88;;;975:18;;:::i;:::-;907:88;1015:10;1011:2;1004:22;794:238;751:281;;:::o;1038:129::-;1072:6;1099:20;;:::i;:::-;1089:30;;1128:33;1156:4;1148:6;1128:33;:::i;:::-;1038:129;;;:::o;1173:333::-;1272:4;1362:18;1354:6;1351:30;1348:56;;;1384:18;;:::i;:::-;1348:56;1434:4;1426:6;1422:17;1414:25;;1494:4;1488;1484:15;1476:23;;1173:333;;;:::o;1512:117::-;1621:1;1618;1611:12;1635:117;1744:1;1741;1734:12;1881:126;1918:7;1958:42;1951:5;1947:54;1936:65;;1881:126;;;:::o;2013:96::-;2050:7;2079:24;2097:5;2079:24;:::i;:::-;2068:35;;2013:96;;;:::o;2115:122::-;2188:24;2206:5;2188:24;:::i;:::-;2181:5;2178:35;2168:63;;2227:1;2224;2217:12;2168:63;2115:122;:::o;2243:139::-;2289:5;2327:6;2314:20;2305:29;;2343:33;2370:5;2343:33;:::i;:::-;2243:139;;;;:::o;2388:86::-;2423:7;2463:4;2456:5;2452:16;2441:27;;2388:86;;;:::o;2480:118::-;2551:22;2567:5;2551:22;:::i;:::-;2544:5;2541:33;2531:61;;2588:1;2585;2578:12;2531:61;2480:118;:::o;2604:135::-;2648:5;2686:6;2673:20;2664:29;;2702:31;2727:5;2702:31;:::i;:::-;2604:135;;;;:::o;2781:902::-;2852:5;2896:4;2884:9;2879:3;2875:19;2871:30;2868:117;;;2904:79;;:::i;:::-;2868:117;3003:21;3019:4;3003:21;:::i;:::-;2994:30;;3081:1;3121:49;3166:3;3157:6;3146:9;3142:22;3121:49;:::i;:::-;3114:4;3107:5;3103:16;3096:75;3034:148;3239:2;3280:49;3325:3;3316:6;3305:9;3301:22;3280:49;:::i;:::-;3273:4;3266:5;3262:16;3255:75;3192:149;3404:2;3445:49;3490:3;3481:6;3470:9;3466:22;3445:49;:::i;:::-;3438:4;3431:5;3427:16;3420:75;3351:155;3576:2;3617:47;3660:3;3651:6;3640:9;3636:22;3617:47;:::i;:::-;3610:4;3603:5;3599:16;3592:73;3516:160;2781:902;;;;:::o;3727:776::-;3845:5;3870:103;3886:86;3965:6;3886:86;:::i;:::-;3870:103;:::i;:::-;3861:112;;3993:5;4022:6;4015:5;4008:21;4056:4;4049:5;4045:16;4038:23;;4109:4;4101:6;4097:17;4089:6;4085:30;4138:3;4130:6;4127:15;4124:122;;;4157:79;;:::i;:::-;4124:122;4272:6;4255:242;4289:6;4284:3;4281:15;4255:242;;;4364:3;4393:59;4448:3;4436:10;4393:59;:::i;:::-;4388:3;4381:72;4482:4;4477:3;4473:14;4466:21;;4331:166;4315:4;4310:3;4306:14;4299:21;;4255:242;;;4259:21;3851:652;;3727:776;;;;;:::o;4547:414::-;4640:5;4689:3;4682:4;4674:6;4670:17;4666:27;4656:122;;4697:79;;:::i;:::-;4656:122;4814:6;4801:20;4839:116;4951:3;4943:6;4936:4;4928:6;4924:17;4839:116;:::i;:::-;4830:125;;4646:315;4547:414;;;;:::o;4967:583::-;5073:6;5122:2;5110:9;5101:7;5097:23;5093:32;5090:119;;;5128:79;;:::i;:::-;5090:119;5276:1;5265:9;5261:17;5248:31;5306:18;5298:6;5295:30;5292:117;;;5328:79;;:::i;:::-;5292:117;5433:100;5525:7;5516:6;5505:9;5501:22;5433:100;:::i;:::-;5423:110;;5219:324;4967:583;;;;:::o;5556:137::-;5646:6;5680:5;5674:12;5664:22;;5556:137;;;:::o;5699:207::-;5821:11;5855:6;5850:3;5843:19;5895:4;5890:3;5886:14;5871:29;;5699:207;;;;:::o;5912:155::-;6002:4;6025:3;6017:11;;6055:4;6050:3;6046:14;6038:22;;5912:155;;;:::o;6073:108::-;6150:24;6168:5;6150:24;:::i;:::-;6145:3;6138:37;6073:108;;:::o;6187:77::-;6224:7;6253:5;6242:16;;6187:77;;;:::o;6270:108::-;6347:24;6365:5;6347:24;:::i;:::-;6342:3;6335:37;6270:108;;:::o;6454:664::-;6587:4;6582:3;6578:14;6672:4;6665:5;6661:16;6655:23;6691:63;6748:4;6743:3;6739:14;6725:12;6691:63;:::i;:::-;6602:162;6844:4;6837:5;6833:16;6827:23;6863:63;6920:4;6915:3;6911:14;6897:12;6863:63;:::i;:::-;6774:162;7019:4;7012:5;7008:16;7002:23;7038:63;7095:4;7090:3;7086:14;7072:12;7038:63;:::i;:::-;6946:165;6556:562;6454:664;;:::o;7124:271::-;7239:10;7260:92;7348:3;7340:6;7260:92;:::i;:::-;7384:4;7379:3;7375:14;7361:28;;7124:271;;;;:::o;7401:136::-;7494:4;7526;7521:3;7517:14;7509:22;;7401:136;;;:::o;7617:916::-;7782:3;7811:77;7882:5;7811:77;:::i;:::-;7904:109;8006:6;8001:3;7904:109;:::i;:::-;7897:116;;8037:79;8110:5;8037:79;:::i;:::-;8139:7;8170:1;8155:353;8180:6;8177:1;8174:13;8155:353;;;8256:6;8250:13;8283:109;8388:3;8373:13;8283:109;:::i;:::-;8276:116;;8415:83;8491:6;8415:83;:::i;:::-;8405:93;;8215:293;8202:1;8199;8195:9;8190:14;;8155:353;;;8159:14;8524:3;8517:10;;7787:746;;;7617:916;;;;:::o;8539:465::-;8728:4;8766:2;8755:9;8751:18;8743:26;;8815:9;8809:4;8805:20;8801:1;8790:9;8786:17;8779:47;8843:154;8992:4;8983:6;8843:154;:::i;:::-;8835:162;;8539:465;;;;:::o;9010:180::-;9058:77;9055:1;9048:88;9155:4;9152:1;9145:15;9179:4;9176:1;9169:15;9196:126;9291:24;9309:5;9291:24;:::i;:::-;9286:3;9279:37;9196:126;;:::o;9328:474::-;9485:4;9523:2;9512:9;9508:18;9500:26;;9536:79;9612:1;9601:9;9597:17;9588:6;9536:79;:::i;:::-;9625:80;9701:2;9690:9;9686:18;9677:6;9625:80;:::i;:::-;9715;9791:2;9780:9;9776:18;9767:6;9715:80;:::i;:::-;9328:474;;;;;;:::o;9808:122::-;9881:24;9899:5;9881:24;:::i;:::-;9874:5;9871:35;9861:63;;9920:1;9917;9910:12;9861:63;9808:122;:::o;9936:143::-;9993:5;10024:6;10018:13;10009:22;;10040:33;10067:5;10040:33;:::i;:::-;9936:143;;;;:::o;10085:351::-;10155:6;10204:2;10192:9;10183:7;10179:23;10175:32;10172:119;;;10210:79;;:::i;:::-;10172:119;10330:1;10355:64;10411:7;10402:6;10391:9;10387:22;10355:64;:::i;:::-;10345:74;;10301:128;10085:351;;;;:::o;10442:180::-;10490:77;10487:1;10480:88;10587:4;10584:1;10577:15;10611:4;10608:1;10601:15;10628:233;10667:3;10690:24;10708:5;10690:24;:::i;:::-;10681:33;;10736:66;10729:5;10726:77;10723:103;;10806:18;;:::i;:::-;10723:103;10853:1;10846:5;10842:13;10835:20;;10628:233;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "512400",
								"executionCost": "549",
								"totalCost": "512949"
							},
							"external": {
								"getPrices((address,address,address,uint8)[])": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 378,
									"end": 1299,
									"name": "PUSH",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 378,
									"end": 1299,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 378,
									"end": 1299,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 378,
									"end": 1299,
									"name": "CALLVALUE",
									"source": 9
								},
								{
									"begin": 378,
									"end": 1299,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 378,
									"end": 1299,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 378,
									"end": 1299,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 378,
									"end": 1299,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 378,
									"end": 1299,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 378,
									"end": 1299,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 378,
									"end": 1299,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 378,
									"end": 1299,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 378,
									"end": 1299,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 378,
									"end": 1299,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 378,
									"end": 1299,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 378,
									"end": 1299,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 378,
									"end": 1299,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 378,
									"end": 1299,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 378,
									"end": 1299,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 378,
									"end": 1299,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 378,
									"end": 1299,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212200ff7d3504e3e3891de77f6842ffbc014f65489ef8bff620974b562faa43409cd64736f6c63430008110033",
									".code": [
										{
											"begin": 378,
											"end": 1299,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 378,
											"end": 1299,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 378,
											"end": 1299,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 378,
											"end": 1299,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 378,
											"end": 1299,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 378,
											"end": 1299,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 378,
											"end": 1299,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 378,
											"end": 1299,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 378,
											"end": 1299,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 378,
											"end": 1299,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 378,
											"end": 1299,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 378,
											"end": 1299,
											"name": "tag",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 378,
											"end": 1299,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 378,
											"end": 1299,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 378,
											"end": 1299,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 378,
											"end": 1299,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 378,
											"end": 1299,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 378,
											"end": 1299,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 378,
											"end": 1299,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 378,
											"end": 1299,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 378,
											"end": 1299,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 378,
											"end": 1299,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 378,
											"end": 1299,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 378,
											"end": 1299,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 378,
											"end": 1299,
											"name": "PUSH",
											"source": 9,
											"value": "FF514FA3"
										},
										{
											"begin": 378,
											"end": 1299,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 378,
											"end": 1299,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 378,
											"end": 1299,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 378,
											"end": 1299,
											"name": "tag",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 378,
											"end": 1299,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 378,
											"end": 1299,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 378,
											"end": 1299,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 378,
											"end": 1299,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 627,
											"end": 1295,
											"name": "tag",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 627,
											"end": 1295,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 627,
											"end": 1295,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 627,
											"end": 1295,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 627,
											"end": 1295,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 627,
											"end": 1295,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 627,
											"end": 1295,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 627,
											"end": 1295,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 627,
											"end": 1295,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 627,
											"end": 1295,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 627,
											"end": 1295,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 627,
											"end": 1295,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 627,
											"end": 1295,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 627,
											"end": 1295,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 627,
											"end": 1295,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 627,
											"end": 1295,
											"name": "tag",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 627,
											"end": 1295,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 627,
											"end": 1295,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 627,
											"end": 1295,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 627,
											"end": 1295,
											"name": "tag",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 627,
											"end": 1295,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 627,
											"end": 1295,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 627,
											"end": 1295,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 627,
											"end": 1295,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 627,
											"end": 1295,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 627,
											"end": 1295,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 627,
											"end": 1295,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 627,
											"end": 1295,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 627,
											"end": 1295,
											"name": "tag",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 627,
											"end": 1295,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 627,
											"end": 1295,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 627,
											"end": 1295,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 627,
											"end": 1295,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 627,
											"end": 1295,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 627,
											"end": 1295,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 627,
											"end": 1295,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 627,
											"end": 1295,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 627,
											"end": 1295,
											"name": "tag",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 627,
											"end": 1295,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 690,
											"end": 705,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 717,
											"end": 740,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 756,
											"end": 762,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 756,
											"end": 769,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 743,
											"end": 770,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 743,
											"end": 770,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 743,
											"end": 770,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 743,
											"end": 770,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 743,
											"end": 770,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 743,
											"end": 770,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 743,
											"end": 770,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 743,
											"end": 770,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "13"
										},
										{
											"begin": 743,
											"end": 770,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 743,
											"end": 770,
											"name": "tag",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 743,
											"end": 770,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 743,
											"end": 770,
											"name": "tag",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 743,
											"end": 770,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 743,
											"end": 770,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 743,
											"end": 770,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 743,
											"end": 770,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 743,
											"end": 770,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 743,
											"end": 770,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 743,
											"end": 770,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 743,
											"end": 770,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 743,
											"end": 770,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 743,
											"end": 770,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 743,
											"end": 770,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 743,
											"end": 770,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 743,
											"end": 770,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 743,
											"end": 770,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 743,
											"end": 770,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 743,
											"end": 770,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 743,
											"end": 770,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 743,
											"end": 770,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 743,
											"end": 770,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 743,
											"end": 770,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 743,
											"end": 770,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 743,
											"end": 770,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 743,
											"end": 770,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 743,
											"end": 770,
											"name": "tag",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 743,
											"end": 770,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 743,
											"end": 770,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 743,
											"end": 770,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "17"
										},
										{
											"begin": 743,
											"end": 770,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 743,
											"end": 770,
											"name": "tag",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 743,
											"end": 770,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 743,
											"end": 770,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 743,
											"end": 770,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 743,
											"end": 770,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 743,
											"end": 770,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 743,
											"end": 770,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 743,
											"end": 770,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 743,
											"end": 770,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 743,
											"end": 770,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 743,
											"end": 770,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 743,
											"end": 770,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 743,
											"end": 770,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 743,
											"end": 770,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 743,
											"end": 770,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 743,
											"end": 770,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 743,
											"end": 770,
											"name": "tag",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 743,
											"end": 770,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 743,
											"end": 770,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 717,
											"end": 770,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 717,
											"end": 770,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 784,
											"end": 790,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 779,
											"end": 1261,
											"name": "tag",
											"source": 9,
											"value": "18"
										},
										{
											"begin": 779,
											"end": 1261,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 795,
											"end": 801,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 795,
											"end": 808,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 793,
											"end": 794,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 793,
											"end": 808,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 779,
											"end": 1261,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 779,
											"end": 1261,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "19"
										},
										{
											"begin": 779,
											"end": 1261,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 856,
											"end": 857,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 827,
											"end": 833,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 834,
											"end": 835,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 827,
											"end": 836,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 827,
											"end": 836,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 827,
											"end": 836,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 827,
											"end": 836,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 827,
											"end": 836,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 827,
											"end": 836,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 827,
											"end": 836,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 827,
											"end": 836,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 827,
											"end": 836,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 827,
											"end": 836,
											"name": "tag",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 827,
											"end": 836,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 827,
											"end": 836,
											"name": "tag",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 827,
											"end": 836,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 827,
											"end": 836,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 827,
											"end": 836,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 827,
											"end": 836,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 827,
											"end": 836,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 827,
											"end": 836,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 827,
											"end": 836,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 827,
											"end": 852,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 827,
											"end": 852,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 827,
											"end": 852,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 827,
											"end": 857,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 827,
											"end": 857,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 827,
											"end": 857,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 823,
											"end": 1252,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 823,
											"end": 1252,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 873,
											"end": 886,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 889,
											"end": 898,
											"name": "PUSHLIB",
											"source": 9,
											"value": "contracts/libraries/UniswapV2.sol:UniswapV2"
										},
										{
											"begin": 889,
											"end": 904,
											"name": "PUSH",
											"source": 9,
											"value": "C361E0B1"
										},
										{
											"begin": 905,
											"end": 911,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 912,
											"end": 913,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 905,
											"end": 914,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 905,
											"end": 914,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 905,
											"end": 914,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 905,
											"end": 914,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 905,
											"end": 914,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 905,
											"end": 914,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 905,
											"end": 914,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 905,
											"end": 914,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 905,
											"end": 914,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 905,
											"end": 914,
											"name": "tag",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 905,
											"end": 914,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 905,
											"end": 914,
											"name": "tag",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 905,
											"end": 914,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 905,
											"end": 914,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 905,
											"end": 914,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 905,
											"end": 914,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 905,
											"end": 914,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 905,
											"end": 914,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 905,
											"end": 914,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 905,
											"end": 923,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 905,
											"end": 923,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 905,
											"end": 923,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 924,
											"end": 930,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 931,
											"end": 932,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 924,
											"end": 933,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 924,
											"end": 933,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 924,
											"end": 933,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 924,
											"end": 933,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 924,
											"end": 933,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 924,
											"end": 933,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 924,
											"end": 933,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "28"
										},
										{
											"begin": 924,
											"end": 933,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 924,
											"end": 933,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 924,
											"end": 933,
											"name": "tag",
											"source": 9,
											"value": "28"
										},
										{
											"begin": 924,
											"end": 933,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 924,
											"end": 933,
											"name": "tag",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 924,
											"end": 933,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 924,
											"end": 933,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 924,
											"end": 933,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 924,
											"end": 933,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 924,
											"end": 933,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 924,
											"end": 933,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 924,
											"end": 933,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 924,
											"end": 936,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 924,
											"end": 936,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 924,
											"end": 936,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 937,
											"end": 943,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 944,
											"end": 945,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 937,
											"end": 946,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 937,
											"end": 946,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 937,
											"end": 946,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 937,
											"end": 946,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 937,
											"end": 946,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 937,
											"end": 946,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 937,
											"end": 946,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "30"
										},
										{
											"begin": 937,
											"end": 946,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 937,
											"end": 946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 937,
											"end": 946,
											"name": "tag",
											"source": 9,
											"value": "30"
										},
										{
											"begin": 937,
											"end": 946,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 937,
											"end": 946,
											"name": "tag",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 937,
											"end": 946,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 937,
											"end": 946,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 937,
											"end": 946,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 937,
											"end": 946,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 937,
											"end": 946,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 937,
											"end": 946,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 937,
											"end": 946,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 937,
											"end": 949,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 937,
											"end": 949,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 937,
											"end": 949,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 889,
											"end": 950,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 889,
											"end": 950,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 889,
											"end": 950,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 889,
											"end": 950,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 889,
											"end": 950,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 889,
											"end": 950,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 889,
											"end": 950,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 889,
											"end": 950,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 889,
											"end": 950,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 889,
											"end": 950,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 889,
											"end": 950,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 889,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "31"
										},
										{
											"begin": 889,
											"end": 950,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 889,
											"end": 950,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 889,
											"end": 950,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 889,
											"end": 950,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 889,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 889,
											"end": 950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 889,
											"end": 950,
											"name": "tag",
											"source": 9,
											"value": "31"
										},
										{
											"begin": 889,
											"end": 950,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 889,
											"end": 950,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 889,
											"end": 950,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 889,
											"end": 950,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 889,
											"end": 950,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 889,
											"end": 950,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 889,
											"end": 950,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 889,
											"end": 950,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 889,
											"end": 950,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 889,
											"end": 950,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 889,
											"end": 950,
											"name": "DELEGATECALL",
											"source": 9
										},
										{
											"begin": 889,
											"end": 950,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 889,
											"end": 950,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 889,
											"end": 950,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 889,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "34"
										},
										{
											"begin": 889,
											"end": 950,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 889,
											"end": 950,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 889,
											"end": 950,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 889,
											"end": 950,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 889,
											"end": 950,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 889,
											"end": 950,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 889,
											"end": 950,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 889,
											"end": 950,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 889,
											"end": 950,
											"name": "tag",
											"source": 9,
											"value": "34"
										},
										{
											"begin": 889,
											"end": 950,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 889,
											"end": 950,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 889,
											"end": 950,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 889,
											"end": 950,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 889,
											"end": 950,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 889,
											"end": 950,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 889,
											"end": 950,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 889,
											"end": 950,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 889,
											"end": 950,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 889,
											"end": 950,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 889,
											"end": 950,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 889,
											"end": 950,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 889,
											"end": 950,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 889,
											"end": 950,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 889,
											"end": 950,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 889,
											"end": 950,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 889,
											"end": 950,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 889,
											"end": 950,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 889,
											"end": 950,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 889,
											"end": 950,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 889,
											"end": 950,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 889,
											"end": 950,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 889,
											"end": 950,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 889,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "35"
										},
										{
											"begin": 889,
											"end": 950,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 889,
											"end": 950,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 889,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "36"
										},
										{
											"begin": 889,
											"end": 950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 889,
											"end": 950,
											"name": "tag",
											"source": 9,
											"value": "35"
										},
										{
											"begin": 889,
											"end": 950,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 873,
											"end": 950,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 873,
											"end": 950,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 977,
											"end": 1016,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 977,
											"end": 1016,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 977,
											"end": 1016,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 977,
											"end": 1016,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 977,
											"end": 1016,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 977,
											"end": 1016,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 977,
											"end": 1016,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 977,
											"end": 1016,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 984,
											"end": 990,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 991,
											"end": 992,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 984,
											"end": 993,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 984,
											"end": 993,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 984,
											"end": 993,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 984,
											"end": 993,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 984,
											"end": 993,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "37"
										},
										{
											"begin": 984,
											"end": 993,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 984,
											"end": 993,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "38"
										},
										{
											"begin": 984,
											"end": 993,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 984,
											"end": 993,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 984,
											"end": 993,
											"name": "tag",
											"source": 9,
											"value": "38"
										},
										{
											"begin": 984,
											"end": 993,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 984,
											"end": 993,
											"name": "tag",
											"source": 9,
											"value": "37"
										},
										{
											"begin": 984,
											"end": 993,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 984,
											"end": 993,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 984,
											"end": 993,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 984,
											"end": 993,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 984,
											"end": 993,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 984,
											"end": 993,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 984,
											"end": 993,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 984,
											"end": 996,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 984,
											"end": 996,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 984,
											"end": 996,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 977,
											"end": 1016,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 977,
											"end": 1016,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 977,
											"end": 1016,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 977,
											"end": 1016,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 977,
											"end": 1016,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 977,
											"end": 1016,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 997,
											"end": 1003,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 1004,
											"end": 1005,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 997,
											"end": 1006,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 997,
											"end": 1006,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 997,
											"end": 1006,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 997,
											"end": 1006,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 997,
											"end": 1006,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "39"
										},
										{
											"begin": 997,
											"end": 1006,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 997,
											"end": 1006,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 997,
											"end": 1006,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 997,
											"end": 1006,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 997,
											"end": 1006,
											"name": "tag",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 997,
											"end": 1006,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 997,
											"end": 1006,
											"name": "tag",
											"source": 9,
											"value": "39"
										},
										{
											"begin": 997,
											"end": 1006,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 997,
											"end": 1006,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 997,
											"end": 1006,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 997,
											"end": 1006,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 997,
											"end": 1006,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 997,
											"end": 1006,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 997,
											"end": 1006,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 997,
											"end": 1009,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 997,
											"end": 1009,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 997,
											"end": 1009,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 977,
											"end": 1016,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 977,
											"end": 1016,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 977,
											"end": 1016,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 977,
											"end": 1016,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 977,
											"end": 1016,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 977,
											"end": 1016,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1010,
											"end": 1015,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 977,
											"end": 1016,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 977,
											"end": 1016,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 977,
											"end": 1016,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 964,
											"end": 971,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 972,
											"end": 973,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 964,
											"end": 974,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 964,
											"end": 974,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 964,
											"end": 974,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 964,
											"end": 974,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 964,
											"end": 974,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 964,
											"end": 974,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 964,
											"end": 974,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "42"
										},
										{
											"begin": 964,
											"end": 974,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 964,
											"end": 974,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 964,
											"end": 974,
											"name": "tag",
											"source": 9,
											"value": "42"
										},
										{
											"begin": 964,
											"end": 974,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 964,
											"end": 974,
											"name": "tag",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 964,
											"end": 974,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 964,
											"end": 974,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 964,
											"end": 974,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 964,
											"end": 974,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 964,
											"end": 974,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 964,
											"end": 974,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 964,
											"end": 1016,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 964,
											"end": 1016,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 964,
											"end": 1016,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 964,
											"end": 1016,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 859,
											"end": 1037,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 823,
											"end": 1252,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "43"
										},
										{
											"begin": 823,
											"end": 1252,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 823,
											"end": 1252,
											"name": "tag",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 823,
											"end": 1252,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1076,
											"end": 1077,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 1047,
											"end": 1053,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1054,
											"end": 1055,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1047,
											"end": 1056,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1047,
											"end": 1056,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1047,
											"end": 1056,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1047,
											"end": 1056,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 1047,
											"end": 1056,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 1047,
											"end": 1056,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1047,
											"end": 1056,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "45"
										},
										{
											"begin": 1047,
											"end": 1056,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 1047,
											"end": 1056,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1047,
											"end": 1056,
											"name": "tag",
											"source": 9,
											"value": "45"
										},
										{
											"begin": 1047,
											"end": 1056,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1047,
											"end": 1056,
											"name": "tag",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 1047,
											"end": 1056,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1047,
											"end": 1056,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1047,
											"end": 1056,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 1047,
											"end": 1056,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1047,
											"end": 1056,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1047,
											"end": 1056,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1047,
											"end": 1056,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1047,
											"end": 1072,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 1047,
											"end": 1072,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1047,
											"end": 1072,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1047,
											"end": 1077,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 1047,
											"end": 1077,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1047,
											"end": 1077,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1043,
											"end": 1252,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 1043,
											"end": 1252,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1093,
											"end": 1106,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1109,
											"end": 1118,
											"name": "PUSHLIB",
											"source": 9,
											"value": "contracts/libraries/UniswapV3.sol:UniswapV3"
										},
										{
											"begin": 1109,
											"end": 1128,
											"name": "PUSH",
											"source": 9,
											"value": "EDF15A9A"
										},
										{
											"begin": 1129,
											"end": 1135,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 1136,
											"end": 1137,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1129,
											"end": 1138,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1129,
											"end": 1138,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1129,
											"end": 1138,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1129,
											"end": 1138,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 1129,
											"end": 1138,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "47"
										},
										{
											"begin": 1129,
											"end": 1138,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1129,
											"end": 1138,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "48"
										},
										{
											"begin": 1129,
											"end": 1138,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 1129,
											"end": 1138,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1129,
											"end": 1138,
											"name": "tag",
											"source": 9,
											"value": "48"
										},
										{
											"begin": 1129,
											"end": 1138,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1129,
											"end": 1138,
											"name": "tag",
											"source": 9,
											"value": "47"
										},
										{
											"begin": 1129,
											"end": 1138,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1129,
											"end": 1138,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1129,
											"end": 1138,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 1129,
											"end": 1138,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1129,
											"end": 1138,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1129,
											"end": 1138,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1129,
											"end": 1138,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1129,
											"end": 1147,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1129,
											"end": 1147,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1129,
											"end": 1147,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1148,
											"end": 1154,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 1155,
											"end": 1156,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1148,
											"end": 1157,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1148,
											"end": 1157,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1148,
											"end": 1157,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1148,
											"end": 1157,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 1148,
											"end": 1157,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "49"
										},
										{
											"begin": 1148,
											"end": 1157,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1148,
											"end": 1157,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "50"
										},
										{
											"begin": 1148,
											"end": 1157,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 1148,
											"end": 1157,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1148,
											"end": 1157,
											"name": "tag",
											"source": 9,
											"value": "50"
										},
										{
											"begin": 1148,
											"end": 1157,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1148,
											"end": 1157,
											"name": "tag",
											"source": 9,
											"value": "49"
										},
										{
											"begin": 1148,
											"end": 1157,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1148,
											"end": 1157,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1148,
											"end": 1157,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 1148,
											"end": 1157,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1148,
											"end": 1157,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1148,
											"end": 1157,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1148,
											"end": 1157,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1148,
											"end": 1160,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1148,
											"end": 1160,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1148,
											"end": 1160,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 1167,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 1168,
											"end": 1169,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 1170,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 1170,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 1170,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 1170,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 1170,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "51"
										},
										{
											"begin": 1161,
											"end": 1170,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 1170,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "52"
										},
										{
											"begin": 1161,
											"end": 1170,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 1161,
											"end": 1170,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 1170,
											"name": "tag",
											"source": 9,
											"value": "52"
										},
										{
											"begin": 1161,
											"end": 1170,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 1170,
											"name": "tag",
											"source": 9,
											"value": "51"
										},
										{
											"begin": 1161,
											"end": 1170,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 1170,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1161,
											"end": 1170,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 1170,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1161,
											"end": 1170,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 1170,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 1170,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 1173,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1161,
											"end": 1173,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 1173,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1109,
											"end": 1174,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1109,
											"end": 1174,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1109,
											"end": 1174,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1109,
											"end": 1174,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1109,
											"end": 1174,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1109,
											"end": 1174,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 1109,
											"end": 1174,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 1109,
											"end": 1174,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1109,
											"end": 1174,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1109,
											"end": 1174,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1109,
											"end": 1174,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1109,
											"end": 1174,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "53"
										},
										{
											"begin": 1109,
											"end": 1174,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 1109,
											"end": 1174,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1109,
											"end": 1174,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1109,
											"end": 1174,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1109,
											"end": 1174,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 1109,
											"end": 1174,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1109,
											"end": 1174,
											"name": "tag",
											"source": 9,
											"value": "53"
										},
										{
											"begin": 1109,
											"end": 1174,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1109,
											"end": 1174,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1109,
											"end": 1174,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1109,
											"end": 1174,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1109,
											"end": 1174,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1109,
											"end": 1174,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1109,
											"end": 1174,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1109,
											"end": 1174,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1109,
											"end": 1174,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 1109,
											"end": 1174,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 1109,
											"end": 1174,
											"name": "DELEGATECALL",
											"source": 9
										},
										{
											"begin": 1109,
											"end": 1174,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1109,
											"end": 1174,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1109,
											"end": 1174,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1109,
											"end": 1174,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "55"
										},
										{
											"begin": 1109,
											"end": 1174,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1109,
											"end": 1174,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 1109,
											"end": 1174,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1109,
											"end": 1174,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1109,
											"end": 1174,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 1109,
											"end": 1174,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 1109,
											"end": 1174,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1109,
											"end": 1174,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1109,
											"end": 1174,
											"name": "tag",
											"source": 9,
											"value": "55"
										},
										{
											"begin": 1109,
											"end": 1174,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1109,
											"end": 1174,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1109,
											"end": 1174,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1109,
											"end": 1174,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1109,
											"end": 1174,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1109,
											"end": 1174,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1109,
											"end": 1174,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1109,
											"end": 1174,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 1109,
											"end": 1174,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 1109,
											"end": 1174,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 1109,
											"end": 1174,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 1109,
											"end": 1174,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1109,
											"end": 1174,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1109,
											"end": 1174,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1109,
											"end": 1174,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1109,
											"end": 1174,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1109,
											"end": 1174,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1109,
											"end": 1174,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1109,
											"end": 1174,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1109,
											"end": 1174,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1109,
											"end": 1174,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1109,
											"end": 1174,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1109,
											"end": 1174,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1109,
											"end": 1174,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "56"
										},
										{
											"begin": 1109,
											"end": 1174,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1109,
											"end": 1174,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1109,
											"end": 1174,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "36"
										},
										{
											"begin": 1109,
											"end": 1174,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1109,
											"end": 1174,
											"name": "tag",
											"source": 9,
											"value": "56"
										},
										{
											"begin": 1109,
											"end": 1174,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1093,
											"end": 1174,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1093,
											"end": 1174,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1201,
											"end": 1240,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1201,
											"end": 1240,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1201,
											"end": 1240,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1201,
											"end": 1240,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 1201,
											"end": 1240,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1201,
											"end": 1240,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1201,
											"end": 1240,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1201,
											"end": 1240,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1208,
											"end": 1214,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 1215,
											"end": 1216,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1208,
											"end": 1217,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1208,
											"end": 1217,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1208,
											"end": 1217,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1208,
											"end": 1217,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 1208,
											"end": 1217,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "57"
										},
										{
											"begin": 1208,
											"end": 1217,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1208,
											"end": 1217,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "58"
										},
										{
											"begin": 1208,
											"end": 1217,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 1208,
											"end": 1217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1208,
											"end": 1217,
											"name": "tag",
											"source": 9,
											"value": "58"
										},
										{
											"begin": 1208,
											"end": 1217,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1208,
											"end": 1217,
											"name": "tag",
											"source": 9,
											"value": "57"
										},
										{
											"begin": 1208,
											"end": 1217,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1208,
											"end": 1217,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1208,
											"end": 1217,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 1208,
											"end": 1217,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1208,
											"end": 1217,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1208,
											"end": 1217,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1208,
											"end": 1217,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1208,
											"end": 1220,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1208,
											"end": 1220,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1208,
											"end": 1220,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1201,
											"end": 1240,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1201,
											"end": 1240,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1201,
											"end": 1240,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1201,
											"end": 1240,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1201,
											"end": 1240,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1201,
											"end": 1240,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1221,
											"end": 1227,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 1228,
											"end": 1229,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1221,
											"end": 1230,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1221,
											"end": 1230,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1221,
											"end": 1230,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1221,
											"end": 1230,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 1221,
											"end": 1230,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "59"
										},
										{
											"begin": 1221,
											"end": 1230,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1221,
											"end": 1230,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 1221,
											"end": 1230,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 1221,
											"end": 1230,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1221,
											"end": 1230,
											"name": "tag",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 1221,
											"end": 1230,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1221,
											"end": 1230,
											"name": "tag",
											"source": 9,
											"value": "59"
										},
										{
											"begin": 1221,
											"end": 1230,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1221,
											"end": 1230,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1221,
											"end": 1230,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 1221,
											"end": 1230,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1221,
											"end": 1230,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1221,
											"end": 1230,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1221,
											"end": 1230,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1221,
											"end": 1233,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1221,
											"end": 1233,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1221,
											"end": 1233,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1201,
											"end": 1240,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1201,
											"end": 1240,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1201,
											"end": 1240,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1201,
											"end": 1240,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1201,
											"end": 1240,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1201,
											"end": 1240,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1234,
											"end": 1239,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1201,
											"end": 1240,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1201,
											"end": 1240,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1201,
											"end": 1240,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1188,
											"end": 1195,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1196,
											"end": 1197,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1188,
											"end": 1198,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1188,
											"end": 1198,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1188,
											"end": 1198,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1188,
											"end": 1198,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 1188,
											"end": 1198,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "61"
										},
										{
											"begin": 1188,
											"end": 1198,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1188,
											"end": 1198,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "62"
										},
										{
											"begin": 1188,
											"end": 1198,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 1188,
											"end": 1198,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1188,
											"end": 1198,
											"name": "tag",
											"source": 9,
											"value": "62"
										},
										{
											"begin": 1188,
											"end": 1198,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1188,
											"end": 1198,
											"name": "tag",
											"source": 9,
											"value": "61"
										},
										{
											"begin": 1188,
											"end": 1198,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1188,
											"end": 1198,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1188,
											"end": 1198,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 1188,
											"end": 1198,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1188,
											"end": 1198,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1188,
											"end": 1198,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1188,
											"end": 1240,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1188,
											"end": 1240,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1188,
											"end": 1240,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1188,
											"end": 1240,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1079,
											"end": 1252,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1043,
											"end": 1252,
											"name": "tag",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 1043,
											"end": 1252,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 823,
											"end": 1252,
											"name": "tag",
											"source": 9,
											"value": "43"
										},
										{
											"begin": 823,
											"end": 1252,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 809,
											"end": 812,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 809,
											"end": 812,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 809,
											"end": 812,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "63"
										},
										{
											"begin": 809,
											"end": 812,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 809,
											"end": 812,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 809,
											"end": 812,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 809,
											"end": 812,
											"name": "tag",
											"source": 9,
											"value": "63"
										},
										{
											"begin": 809,
											"end": 812,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 809,
											"end": 812,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 809,
											"end": 812,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 809,
											"end": 812,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 779,
											"end": 1261,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "18"
										},
										{
											"begin": 779,
											"end": 1261,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 779,
											"end": 1261,
											"name": "tag",
											"source": 9,
											"value": "19"
										},
										{
											"begin": 779,
											"end": 1261,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 779,
											"end": 1261,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1281,
											"end": 1288,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1274,
											"end": 1288,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1274,
											"end": 1288,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1274,
											"end": 1288,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 627,
											"end": 1295,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 627,
											"end": 1295,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 627,
											"end": 1295,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 627,
											"end": 1295,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "17"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 7,
											"end": 82,
											"name": "tag",
											"source": 13,
											"value": "65"
										},
										{
											"begin": 7,
											"end": 82,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 40,
											"end": 46,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 75,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 67,
											"end": 76,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 57,
											"end": 76,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 57,
											"end": 76,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7,
											"end": 82,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7,
											"end": 82,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 13,
											"value": "66"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 13,
											"value": "67"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 334,
											"end": 451,
											"name": "tag",
											"source": 13,
											"value": "68"
										},
										{
											"begin": 334,
											"end": 451,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 443,
											"end": 444,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 440,
											"end": 441,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 433,
											"end": 445,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 457,
											"end": 559,
											"name": "tag",
											"source": 13,
											"value": "69"
										},
										{
											"begin": 457,
											"end": 559,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 498,
											"end": 504,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 549,
											"end": 551,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 545,
											"end": 552,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 540,
											"end": 542,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 533,
											"end": 538,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 529,
											"end": 543,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 525,
											"end": 553,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 515,
											"end": 553,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 515,
											"end": 553,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 457,
											"end": 559,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 457,
											"end": 559,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 457,
											"end": 559,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 457,
											"end": 559,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 565,
											"end": 745,
											"name": "tag",
											"source": 13,
											"value": "13"
										},
										{
											"begin": 565,
											"end": 745,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 613,
											"end": 690,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 610,
											"end": 611,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 603,
											"end": 691,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 710,
											"end": 714,
											"name": "PUSH",
											"source": 13,
											"value": "41"
										},
										{
											"begin": 707,
											"end": 708,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 700,
											"end": 715,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 734,
											"end": 738,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 731,
											"end": 732,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 724,
											"end": 739,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 751,
											"end": 1032,
											"name": "tag",
											"source": 13,
											"value": "70"
										},
										{
											"begin": 751,
											"end": 1032,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 834,
											"end": 861,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "108"
										},
										{
											"begin": 856,
											"end": 860,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 834,
											"end": 861,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "69"
										},
										{
											"begin": 834,
											"end": 861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 834,
											"end": 861,
											"name": "tag",
											"source": 13,
											"value": "108"
										},
										{
											"begin": 834,
											"end": 861,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 826,
											"end": 832,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 822,
											"end": 862,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 964,
											"end": 970,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 952,
											"end": 962,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 949,
											"end": 971,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 928,
											"end": 946,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 916,
											"end": 926,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 913,
											"end": 947,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 910,
											"end": 972,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 907,
											"end": 995,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 907,
											"end": 995,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "109"
										},
										{
											"begin": 907,
											"end": 995,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 975,
											"end": 993,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "110"
										},
										{
											"begin": 975,
											"end": 993,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "13"
										},
										{
											"begin": 975,
											"end": 993,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 975,
											"end": 993,
											"name": "tag",
											"source": 13,
											"value": "110"
										},
										{
											"begin": 975,
											"end": 993,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 907,
											"end": 995,
											"name": "tag",
											"source": 13,
											"value": "109"
										},
										{
											"begin": 907,
											"end": 995,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1015,
											"end": 1025,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1011,
											"end": 1013,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1004,
											"end": 1026,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 794,
											"end": 1032,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 751,
											"end": 1032,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 751,
											"end": 1032,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 751,
											"end": 1032,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1038,
											"end": 1167,
											"name": "tag",
											"source": 13,
											"value": "71"
										},
										{
											"begin": 1038,
											"end": 1167,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1072,
											"end": 1078,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1099,
											"end": 1119,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "112"
										},
										{
											"begin": 1099,
											"end": 1119,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "65"
										},
										{
											"begin": 1099,
											"end": 1119,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1099,
											"end": 1119,
											"name": "tag",
											"source": 13,
											"value": "112"
										},
										{
											"begin": 1099,
											"end": 1119,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1089,
											"end": 1119,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1089,
											"end": 1119,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1128,
											"end": 1161,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "113"
										},
										{
											"begin": 1156,
											"end": 1160,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1148,
											"end": 1154,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1128,
											"end": 1161,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "70"
										},
										{
											"begin": 1128,
											"end": 1161,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1128,
											"end": 1161,
											"name": "tag",
											"source": 13,
											"value": "113"
										},
										{
											"begin": 1128,
											"end": 1161,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1038,
											"end": 1167,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1038,
											"end": 1167,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1038,
											"end": 1167,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1038,
											"end": 1167,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1173,
											"end": 1506,
											"name": "tag",
											"source": 13,
											"value": "72"
										},
										{
											"begin": 1173,
											"end": 1506,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1272,
											"end": 1276,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1362,
											"end": 1380,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1354,
											"end": 1360,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1351,
											"end": 1381,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 1348,
											"end": 1404,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1348,
											"end": 1404,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "115"
										},
										{
											"begin": 1348,
											"end": 1404,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1384,
											"end": 1402,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "116"
										},
										{
											"begin": 1384,
											"end": 1402,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "13"
										},
										{
											"begin": 1384,
											"end": 1402,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1384,
											"end": 1402,
											"name": "tag",
											"source": 13,
											"value": "116"
										},
										{
											"begin": 1384,
											"end": 1402,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1348,
											"end": 1404,
											"name": "tag",
											"source": 13,
											"value": "115"
										},
										{
											"begin": 1348,
											"end": 1404,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1434,
											"end": 1438,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1426,
											"end": 1432,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1422,
											"end": 1439,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 1414,
											"end": 1439,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1414,
											"end": 1439,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1494,
											"end": 1498,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1488,
											"end": 1492,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1484,
											"end": 1499,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1476,
											"end": 1499,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1476,
											"end": 1499,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1173,
											"end": 1506,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1173,
											"end": 1506,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1173,
											"end": 1506,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1173,
											"end": 1506,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1512,
											"end": 1629,
											"name": "tag",
											"source": 13,
											"value": "73"
										},
										{
											"begin": 1512,
											"end": 1629,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1621,
											"end": 1622,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1618,
											"end": 1619,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1611,
											"end": 1623,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1635,
											"end": 1752,
											"name": "tag",
											"source": 13,
											"value": "74"
										},
										{
											"begin": 1635,
											"end": 1752,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1744,
											"end": 1745,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1741,
											"end": 1742,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1734,
											"end": 1746,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1881,
											"end": 2007,
											"name": "tag",
											"source": 13,
											"value": "76"
										},
										{
											"begin": 1881,
											"end": 2007,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1918,
											"end": 1925,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1958,
											"end": 2000,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1951,
											"end": 1956,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1947,
											"end": 2001,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1936,
											"end": 2001,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1936,
											"end": 2001,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1881,
											"end": 2007,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1881,
											"end": 2007,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1881,
											"end": 2007,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1881,
											"end": 2007,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2013,
											"end": 2109,
											"name": "tag",
											"source": 13,
											"value": "77"
										},
										{
											"begin": 2013,
											"end": 2109,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2050,
											"end": 2057,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2079,
											"end": 2103,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "122"
										},
										{
											"begin": 2097,
											"end": 2102,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2079,
											"end": 2103,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "76"
										},
										{
											"begin": 2079,
											"end": 2103,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2079,
											"end": 2103,
											"name": "tag",
											"source": 13,
											"value": "122"
										},
										{
											"begin": 2079,
											"end": 2103,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2068,
											"end": 2103,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2068,
											"end": 2103,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2013,
											"end": 2109,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2013,
											"end": 2109,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2013,
											"end": 2109,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2013,
											"end": 2109,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2115,
											"end": 2237,
											"name": "tag",
											"source": 13,
											"value": "78"
										},
										{
											"begin": 2115,
											"end": 2237,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2188,
											"end": 2212,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "124"
										},
										{
											"begin": 2206,
											"end": 2211,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2188,
											"end": 2212,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "77"
										},
										{
											"begin": 2188,
											"end": 2212,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2188,
											"end": 2212,
											"name": "tag",
											"source": 13,
											"value": "124"
										},
										{
											"begin": 2188,
											"end": 2212,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2181,
											"end": 2186,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2178,
											"end": 2213,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 2168,
											"end": 2231,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "125"
										},
										{
											"begin": 2168,
											"end": 2231,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2227,
											"end": 2228,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2224,
											"end": 2225,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2217,
											"end": 2229,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2168,
											"end": 2231,
											"name": "tag",
											"source": 13,
											"value": "125"
										},
										{
											"begin": 2168,
											"end": 2231,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2115,
											"end": 2237,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2115,
											"end": 2237,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2243,
											"end": 2382,
											"name": "tag",
											"source": 13,
											"value": "79"
										},
										{
											"begin": 2243,
											"end": 2382,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2289,
											"end": 2294,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2327,
											"end": 2333,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2314,
											"end": 2334,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 2305,
											"end": 2334,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2305,
											"end": 2334,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2343,
											"end": 2376,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "127"
										},
										{
											"begin": 2370,
											"end": 2375,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2343,
											"end": 2376,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "78"
										},
										{
											"begin": 2343,
											"end": 2376,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2343,
											"end": 2376,
											"name": "tag",
											"source": 13,
											"value": "127"
										},
										{
											"begin": 2343,
											"end": 2376,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2243,
											"end": 2382,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2243,
											"end": 2382,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2243,
											"end": 2382,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2243,
											"end": 2382,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2243,
											"end": 2382,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2388,
											"end": 2474,
											"name": "tag",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 2388,
											"end": 2474,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2423,
											"end": 2430,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2463,
											"end": 2467,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 2456,
											"end": 2461,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2452,
											"end": 2468,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2441,
											"end": 2468,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2441,
											"end": 2468,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2388,
											"end": 2474,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2388,
											"end": 2474,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2388,
											"end": 2474,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2388,
											"end": 2474,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2480,
											"end": 2598,
											"name": "tag",
											"source": 13,
											"value": "81"
										},
										{
											"begin": 2480,
											"end": 2598,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2551,
											"end": 2573,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "130"
										},
										{
											"begin": 2567,
											"end": 2572,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2551,
											"end": 2573,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 2551,
											"end": 2573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2551,
											"end": 2573,
											"name": "tag",
											"source": 13,
											"value": "130"
										},
										{
											"begin": 2551,
											"end": 2573,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2544,
											"end": 2549,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2541,
											"end": 2574,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 2531,
											"end": 2592,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "131"
										},
										{
											"begin": 2531,
											"end": 2592,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2588,
											"end": 2589,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2585,
											"end": 2586,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2578,
											"end": 2590,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2531,
											"end": 2592,
											"name": "tag",
											"source": 13,
											"value": "131"
										},
										{
											"begin": 2531,
											"end": 2592,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2480,
											"end": 2598,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2480,
											"end": 2598,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2604,
											"end": 2739,
											"name": "tag",
											"source": 13,
											"value": "82"
										},
										{
											"begin": 2604,
											"end": 2739,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2648,
											"end": 2653,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2686,
											"end": 2692,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2673,
											"end": 2693,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 2664,
											"end": 2693,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2664,
											"end": 2693,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2702,
											"end": 2733,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "133"
										},
										{
											"begin": 2727,
											"end": 2732,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2702,
											"end": 2733,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "81"
										},
										{
											"begin": 2702,
											"end": 2733,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2702,
											"end": 2733,
											"name": "tag",
											"source": 13,
											"value": "133"
										},
										{
											"begin": 2702,
											"end": 2733,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2604,
											"end": 2739,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2604,
											"end": 2739,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2604,
											"end": 2739,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2604,
											"end": 2739,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2604,
											"end": 2739,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2781,
											"end": 3683,
											"name": "tag",
											"source": 13,
											"value": "83"
										},
										{
											"begin": 2781,
											"end": 3683,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2852,
											"end": 2857,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2896,
											"end": 2900,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 2884,
											"end": 2893,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2879,
											"end": 2882,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 2875,
											"end": 2894,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 2871,
											"end": 2901,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 2868,
											"end": 2985,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2868,
											"end": 2985,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "135"
										},
										{
											"begin": 2868,
											"end": 2985,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2904,
											"end": 2983,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "136"
										},
										{
											"begin": 2904,
											"end": 2983,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "74"
										},
										{
											"begin": 2904,
											"end": 2983,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2904,
											"end": 2983,
											"name": "tag",
											"source": 13,
											"value": "136"
										},
										{
											"begin": 2904,
											"end": 2983,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2868,
											"end": 2985,
											"name": "tag",
											"source": 13,
											"value": "135"
										},
										{
											"begin": 2868,
											"end": 2985,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3003,
											"end": 3024,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "137"
										},
										{
											"begin": 3019,
											"end": 3023,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 3003,
											"end": 3024,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "71"
										},
										{
											"begin": 3003,
											"end": 3024,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3003,
											"end": 3024,
											"name": "tag",
											"source": 13,
											"value": "137"
										},
										{
											"begin": 3003,
											"end": 3024,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2994,
											"end": 3024,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2994,
											"end": 3024,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3081,
											"end": 3082,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3121,
											"end": 3170,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "138"
										},
										{
											"begin": 3166,
											"end": 3169,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3157,
											"end": 3163,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3146,
											"end": 3155,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 3142,
											"end": 3164,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3121,
											"end": 3170,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "79"
										},
										{
											"begin": 3121,
											"end": 3170,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3121,
											"end": 3170,
											"name": "tag",
											"source": 13,
											"value": "138"
										},
										{
											"begin": 3121,
											"end": 3170,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3114,
											"end": 3118,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3107,
											"end": 3112,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3103,
											"end": 3119,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3096,
											"end": 3171,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3034,
											"end": 3182,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3239,
											"end": 3241,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3280,
											"end": 3329,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "139"
										},
										{
											"begin": 3325,
											"end": 3328,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3316,
											"end": 3322,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3305,
											"end": 3314,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 3301,
											"end": 3323,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3280,
											"end": 3329,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "79"
										},
										{
											"begin": 3280,
											"end": 3329,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3280,
											"end": 3329,
											"name": "tag",
											"source": 13,
											"value": "139"
										},
										{
											"begin": 3280,
											"end": 3329,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3273,
											"end": 3277,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3266,
											"end": 3271,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3262,
											"end": 3278,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3255,
											"end": 3330,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3192,
											"end": 3341,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3404,
											"end": 3406,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3445,
											"end": 3494,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "140"
										},
										{
											"begin": 3490,
											"end": 3493,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3481,
											"end": 3487,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3470,
											"end": 3479,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 3466,
											"end": 3488,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3445,
											"end": 3494,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "79"
										},
										{
											"begin": 3445,
											"end": 3494,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3445,
											"end": 3494,
											"name": "tag",
											"source": 13,
											"value": "140"
										},
										{
											"begin": 3445,
											"end": 3494,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3438,
											"end": 3442,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3431,
											"end": 3436,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3427,
											"end": 3443,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3420,
											"end": 3495,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3351,
											"end": 3506,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3576,
											"end": 3578,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 3617,
											"end": 3664,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "141"
										},
										{
											"begin": 3660,
											"end": 3663,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3651,
											"end": 3657,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3640,
											"end": 3649,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 3636,
											"end": 3658,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3617,
											"end": 3664,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "82"
										},
										{
											"begin": 3617,
											"end": 3664,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3617,
											"end": 3664,
											"name": "tag",
											"source": 13,
											"value": "141"
										},
										{
											"begin": 3617,
											"end": 3664,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3610,
											"end": 3614,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 3603,
											"end": 3608,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3599,
											"end": 3615,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3592,
											"end": 3665,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3516,
											"end": 3676,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2781,
											"end": 3683,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2781,
											"end": 3683,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2781,
											"end": 3683,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2781,
											"end": 3683,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2781,
											"end": 3683,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3727,
											"end": 4503,
											"name": "tag",
											"source": 13,
											"value": "84"
										},
										{
											"begin": 3727,
											"end": 4503,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3845,
											"end": 3850,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3870,
											"end": 3973,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "143"
										},
										{
											"begin": 3886,
											"end": 3972,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "144"
										},
										{
											"begin": 3965,
											"end": 3971,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3886,
											"end": 3972,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "72"
										},
										{
											"begin": 3886,
											"end": 3972,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3886,
											"end": 3972,
											"name": "tag",
											"source": 13,
											"value": "144"
										},
										{
											"begin": 3886,
											"end": 3972,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3870,
											"end": 3973,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "71"
										},
										{
											"begin": 3870,
											"end": 3973,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3870,
											"end": 3973,
											"name": "tag",
											"source": 13,
											"value": "143"
										},
										{
											"begin": 3870,
											"end": 3973,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3861,
											"end": 3973,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3861,
											"end": 3973,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3993,
											"end": 3998,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4022,
											"end": 4028,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4015,
											"end": 4020,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4008,
											"end": 4029,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4056,
											"end": 4060,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4049,
											"end": 4054,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4045,
											"end": 4061,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4038,
											"end": 4061,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4038,
											"end": 4061,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4109,
											"end": 4113,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 4101,
											"end": 4107,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4097,
											"end": 4114,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 4089,
											"end": 4095,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4085,
											"end": 4115,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4138,
											"end": 4141,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 4130,
											"end": 4136,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4127,
											"end": 4142,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 4124,
											"end": 4246,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4124,
											"end": 4246,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "145"
										},
										{
											"begin": 4124,
											"end": 4246,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4157,
											"end": 4236,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "146"
										},
										{
											"begin": 4157,
											"end": 4236,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "73"
										},
										{
											"begin": 4157,
											"end": 4236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4157,
											"end": 4236,
											"name": "tag",
											"source": 13,
											"value": "146"
										},
										{
											"begin": 4157,
											"end": 4236,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4124,
											"end": 4246,
											"name": "tag",
											"source": 13,
											"value": "145"
										},
										{
											"begin": 4124,
											"end": 4246,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4272,
											"end": 4278,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4255,
											"end": 4497,
											"name": "tag",
											"source": 13,
											"value": "147"
										},
										{
											"begin": 4255,
											"end": 4497,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4289,
											"end": 4295,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4284,
											"end": 4287,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4281,
											"end": 4296,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 4255,
											"end": 4497,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4255,
											"end": 4497,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "149"
										},
										{
											"begin": 4255,
											"end": 4497,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4364,
											"end": 4367,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4393,
											"end": 4452,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "150"
										},
										{
											"begin": 4448,
											"end": 4451,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 4436,
											"end": 4446,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4393,
											"end": 4452,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "83"
										},
										{
											"begin": 4393,
											"end": 4452,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4393,
											"end": 4452,
											"name": "tag",
											"source": 13,
											"value": "150"
										},
										{
											"begin": 4393,
											"end": 4452,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4388,
											"end": 4391,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4381,
											"end": 4453,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4482,
											"end": 4486,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4477,
											"end": 4480,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4473,
											"end": 4487,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4466,
											"end": 4487,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 4466,
											"end": 4487,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4331,
											"end": 4497,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4315,
											"end": 4319,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 4310,
											"end": 4313,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4306,
											"end": 4320,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4299,
											"end": 4320,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4299,
											"end": 4320,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4255,
											"end": 4497,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "147"
										},
										{
											"begin": 4255,
											"end": 4497,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4255,
											"end": 4497,
											"name": "tag",
											"source": 13,
											"value": "149"
										},
										{
											"begin": 4255,
											"end": 4497,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4259,
											"end": 4280,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3851,
											"end": 4503,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3851,
											"end": 4503,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3727,
											"end": 4503,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 3727,
											"end": 4503,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3727,
											"end": 4503,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3727,
											"end": 4503,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3727,
											"end": 4503,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3727,
											"end": 4503,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4547,
											"end": 4961,
											"name": "tag",
											"source": 13,
											"value": "85"
										},
										{
											"begin": 4547,
											"end": 4961,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4640,
											"end": 4645,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4689,
											"end": 4692,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4682,
											"end": 4686,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 4674,
											"end": 4680,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4670,
											"end": 4687,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4666,
											"end": 4693,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 4656,
											"end": 4778,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "152"
										},
										{
											"begin": 4656,
											"end": 4778,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4697,
											"end": 4776,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "153"
										},
										{
											"begin": 4697,
											"end": 4776,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "68"
										},
										{
											"begin": 4697,
											"end": 4776,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4697,
											"end": 4776,
											"name": "tag",
											"source": 13,
											"value": "153"
										},
										{
											"begin": 4697,
											"end": 4776,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4656,
											"end": 4778,
											"name": "tag",
											"source": 13,
											"value": "152"
										},
										{
											"begin": 4656,
											"end": 4778,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4814,
											"end": 4820,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4801,
											"end": 4821,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 4839,
											"end": 4955,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "154"
										},
										{
											"begin": 4951,
											"end": 4954,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4943,
											"end": 4949,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4936,
											"end": 4940,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4928,
											"end": 4934,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 4924,
											"end": 4941,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4839,
											"end": 4955,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "84"
										},
										{
											"begin": 4839,
											"end": 4955,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4839,
											"end": 4955,
											"name": "tag",
											"source": 13,
											"value": "154"
										},
										{
											"begin": 4839,
											"end": 4955,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4830,
											"end": 4955,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4830,
											"end": 4955,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4646,
											"end": 4961,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4547,
											"end": 4961,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4547,
											"end": 4961,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4547,
											"end": 4961,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4547,
											"end": 4961,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4547,
											"end": 4961,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4967,
											"end": 5550,
											"name": "tag",
											"source": 13,
											"value": "6"
										},
										{
											"begin": 4967,
											"end": 5550,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5073,
											"end": 5079,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5122,
											"end": 5124,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5110,
											"end": 5119,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5101,
											"end": 5108,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 5097,
											"end": 5120,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 5093,
											"end": 5125,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 5090,
											"end": 5209,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5090,
											"end": 5209,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "156"
										},
										{
											"begin": 5090,
											"end": 5209,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5128,
											"end": 5207,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "157"
										},
										{
											"begin": 5128,
											"end": 5207,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "66"
										},
										{
											"begin": 5128,
											"end": 5207,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5128,
											"end": 5207,
											"name": "tag",
											"source": 13,
											"value": "157"
										},
										{
											"begin": 5128,
											"end": 5207,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5090,
											"end": 5209,
											"name": "tag",
											"source": 13,
											"value": "156"
										},
										{
											"begin": 5090,
											"end": 5209,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5276,
											"end": 5277,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5265,
											"end": 5274,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5261,
											"end": 5278,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5248,
											"end": 5279,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 5306,
											"end": 5324,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5298,
											"end": 5304,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5295,
											"end": 5325,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 5292,
											"end": 5409,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5292,
											"end": 5409,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "158"
										},
										{
											"begin": 5292,
											"end": 5409,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5328,
											"end": 5407,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "159"
										},
										{
											"begin": 5328,
											"end": 5407,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "67"
										},
										{
											"begin": 5328,
											"end": 5407,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5328,
											"end": 5407,
											"name": "tag",
											"source": 13,
											"value": "159"
										},
										{
											"begin": 5328,
											"end": 5407,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5292,
											"end": 5409,
											"name": "tag",
											"source": 13,
											"value": "158"
										},
										{
											"begin": 5292,
											"end": 5409,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5433,
											"end": 5533,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "160"
										},
										{
											"begin": 5525,
											"end": 5532,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 5516,
											"end": 5522,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5505,
											"end": 5514,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 5501,
											"end": 5523,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5433,
											"end": 5533,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "85"
										},
										{
											"begin": 5433,
											"end": 5533,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5433,
											"end": 5533,
											"name": "tag",
											"source": 13,
											"value": "160"
										},
										{
											"begin": 5433,
											"end": 5533,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5423,
											"end": 5533,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5423,
											"end": 5533,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5219,
											"end": 5543,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4967,
											"end": 5550,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4967,
											"end": 5550,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4967,
											"end": 5550,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4967,
											"end": 5550,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4967,
											"end": 5550,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5556,
											"end": 5693,
											"name": "tag",
											"source": 13,
											"value": "86"
										},
										{
											"begin": 5556,
											"end": 5693,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5646,
											"end": 5652,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5680,
											"end": 5685,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5674,
											"end": 5686,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5664,
											"end": 5686,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5664,
											"end": 5686,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5556,
											"end": 5693,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5556,
											"end": 5693,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5556,
											"end": 5693,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5556,
											"end": 5693,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5699,
											"end": 5906,
											"name": "tag",
											"source": 13,
											"value": "87"
										},
										{
											"begin": 5699,
											"end": 5906,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5821,
											"end": 5832,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5855,
											"end": 5861,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5850,
											"end": 5853,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5843,
											"end": 5862,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5895,
											"end": 5899,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5890,
											"end": 5893,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5886,
											"end": 5900,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5871,
											"end": 5900,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5871,
											"end": 5900,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5699,
											"end": 5906,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5699,
											"end": 5906,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5699,
											"end": 5906,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5699,
											"end": 5906,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5699,
											"end": 5906,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5912,
											"end": 6067,
											"name": "tag",
											"source": 13,
											"value": "88"
										},
										{
											"begin": 5912,
											"end": 6067,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6002,
											"end": 6006,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6025,
											"end": 6028,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6017,
											"end": 6028,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6017,
											"end": 6028,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6055,
											"end": 6059,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6050,
											"end": 6053,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6046,
											"end": 6060,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6038,
											"end": 6060,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6038,
											"end": 6060,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5912,
											"end": 6067,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5912,
											"end": 6067,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5912,
											"end": 6067,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5912,
											"end": 6067,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6073,
											"end": 6181,
											"name": "tag",
											"source": 13,
											"value": "89"
										},
										{
											"begin": 6073,
											"end": 6181,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6150,
											"end": 6174,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "165"
										},
										{
											"begin": 6168,
											"end": 6173,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6150,
											"end": 6174,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "77"
										},
										{
											"begin": 6150,
											"end": 6174,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6150,
											"end": 6174,
											"name": "tag",
											"source": 13,
											"value": "165"
										},
										{
											"begin": 6150,
											"end": 6174,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6145,
											"end": 6148,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6138,
											"end": 6175,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6073,
											"end": 6181,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6073,
											"end": 6181,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6073,
											"end": 6181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6187,
											"end": 6264,
											"name": "tag",
											"source": 13,
											"value": "90"
										},
										{
											"begin": 6187,
											"end": 6264,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6224,
											"end": 6231,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6253,
											"end": 6258,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6242,
											"end": 6258,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6242,
											"end": 6258,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6187,
											"end": 6264,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6187,
											"end": 6264,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6187,
											"end": 6264,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6187,
											"end": 6264,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6270,
											"end": 6378,
											"name": "tag",
											"source": 13,
											"value": "91"
										},
										{
											"begin": 6270,
											"end": 6378,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6347,
											"end": 6371,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "168"
										},
										{
											"begin": 6365,
											"end": 6370,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6347,
											"end": 6371,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "90"
										},
										{
											"begin": 6347,
											"end": 6371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6347,
											"end": 6371,
											"name": "tag",
											"source": 13,
											"value": "168"
										},
										{
											"begin": 6347,
											"end": 6371,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6342,
											"end": 6345,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6335,
											"end": 6372,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6270,
											"end": 6378,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6270,
											"end": 6378,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6270,
											"end": 6378,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6454,
											"end": 7118,
											"name": "tag",
											"source": 13,
											"value": "92"
										},
										{
											"begin": 6454,
											"end": 7118,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6587,
											"end": 6591,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 6582,
											"end": 6585,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6578,
											"end": 6592,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6672,
											"end": 6676,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6665,
											"end": 6670,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6661,
											"end": 6677,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6655,
											"end": 6678,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 6691,
											"end": 6754,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "170"
										},
										{
											"begin": 6748,
											"end": 6752,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6743,
											"end": 6746,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 6739,
											"end": 6753,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6725,
											"end": 6737,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6691,
											"end": 6754,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "89"
										},
										{
											"begin": 6691,
											"end": 6754,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6691,
											"end": 6754,
											"name": "tag",
											"source": 13,
											"value": "170"
										},
										{
											"begin": 6691,
											"end": 6754,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6602,
											"end": 6764,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6844,
											"end": 6848,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6837,
											"end": 6842,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6833,
											"end": 6849,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6827,
											"end": 6850,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 6863,
											"end": 6926,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "171"
										},
										{
											"begin": 6920,
											"end": 6924,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6915,
											"end": 6918,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 6911,
											"end": 6925,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6897,
											"end": 6909,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6863,
											"end": 6926,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "89"
										},
										{
											"begin": 6863,
											"end": 6926,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6863,
											"end": 6926,
											"name": "tag",
											"source": 13,
											"value": "171"
										},
										{
											"begin": 6863,
											"end": 6926,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6774,
											"end": 6936,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7019,
											"end": 7023,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 7012,
											"end": 7017,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7008,
											"end": 7024,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7002,
											"end": 7025,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 7038,
											"end": 7101,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "172"
										},
										{
											"begin": 7095,
											"end": 7099,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 7090,
											"end": 7093,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 7086,
											"end": 7100,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7072,
											"end": 7084,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7038,
											"end": 7101,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "91"
										},
										{
											"begin": 7038,
											"end": 7101,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7038,
											"end": 7101,
											"name": "tag",
											"source": 13,
											"value": "172"
										},
										{
											"begin": 7038,
											"end": 7101,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6946,
											"end": 7111,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6556,
											"end": 7118,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6454,
											"end": 7118,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6454,
											"end": 7118,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6454,
											"end": 7118,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7124,
											"end": 7395,
											"name": "tag",
											"source": 13,
											"value": "93"
										},
										{
											"begin": 7124,
											"end": 7395,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7239,
											"end": 7249,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7260,
											"end": 7352,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "174"
										},
										{
											"begin": 7348,
											"end": 7351,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 7340,
											"end": 7346,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 7260,
											"end": 7352,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "92"
										},
										{
											"begin": 7260,
											"end": 7352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7260,
											"end": 7352,
											"name": "tag",
											"source": 13,
											"value": "174"
										},
										{
											"begin": 7260,
											"end": 7352,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7384,
											"end": 7388,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 7379,
											"end": 7382,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 7375,
											"end": 7389,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7361,
											"end": 7389,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7361,
											"end": 7389,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7124,
											"end": 7395,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 7124,
											"end": 7395,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7124,
											"end": 7395,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7124,
											"end": 7395,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7124,
											"end": 7395,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7401,
											"end": 7537,
											"name": "tag",
											"source": 13,
											"value": "94"
										},
										{
											"begin": 7401,
											"end": 7537,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7494,
											"end": 7498,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7526,
											"end": 7530,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7521,
											"end": 7524,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7517,
											"end": 7531,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7509,
											"end": 7531,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7509,
											"end": 7531,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7401,
											"end": 7537,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7401,
											"end": 7537,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7401,
											"end": 7537,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7401,
											"end": 7537,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7617,
											"end": 8533,
											"name": "tag",
											"source": 13,
											"value": "95"
										},
										{
											"begin": 7617,
											"end": 8533,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7782,
											"end": 7785,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7811,
											"end": 7888,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "177"
										},
										{
											"begin": 7882,
											"end": 7887,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7811,
											"end": 7888,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "86"
										},
										{
											"begin": 7811,
											"end": 7888,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7811,
											"end": 7888,
											"name": "tag",
											"source": 13,
											"value": "177"
										},
										{
											"begin": 7811,
											"end": 7888,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7904,
											"end": 8013,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "178"
										},
										{
											"begin": 8006,
											"end": 8012,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8001,
											"end": 8004,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 7904,
											"end": 8013,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "87"
										},
										{
											"begin": 7904,
											"end": 8013,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7904,
											"end": 8013,
											"name": "tag",
											"source": 13,
											"value": "178"
										},
										{
											"begin": 7904,
											"end": 8013,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7897,
											"end": 8013,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 7897,
											"end": 8013,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8037,
											"end": 8116,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "179"
										},
										{
											"begin": 8110,
											"end": 8115,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 8037,
											"end": 8116,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "88"
										},
										{
											"begin": 8037,
											"end": 8116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8037,
											"end": 8116,
											"name": "tag",
											"source": 13,
											"value": "179"
										},
										{
											"begin": 8037,
											"end": 8116,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8139,
											"end": 8146,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 8170,
											"end": 8171,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8155,
											"end": 8508,
											"name": "tag",
											"source": 13,
											"value": "180"
										},
										{
											"begin": 8155,
											"end": 8508,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8180,
											"end": 8186,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 8177,
											"end": 8178,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8174,
											"end": 8187,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 8155,
											"end": 8508,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 8155,
											"end": 8508,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "182"
										},
										{
											"begin": 8155,
											"end": 8508,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 8256,
											"end": 8262,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8250,
											"end": 8263,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 8283,
											"end": 8392,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "183"
										},
										{
											"begin": 8388,
											"end": 8391,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 8373,
											"end": 8386,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8283,
											"end": 8392,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "93"
										},
										{
											"begin": 8283,
											"end": 8392,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8283,
											"end": 8392,
											"name": "tag",
											"source": 13,
											"value": "183"
										},
										{
											"begin": 8283,
											"end": 8392,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8276,
											"end": 8392,
											"name": "SWAP8",
											"source": 13
										},
										{
											"begin": 8276,
											"end": 8392,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8415,
											"end": 8498,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "184"
										},
										{
											"begin": 8491,
											"end": 8497,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 8415,
											"end": 8498,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "94"
										},
										{
											"begin": 8415,
											"end": 8498,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8415,
											"end": 8498,
											"name": "tag",
											"source": 13,
											"value": "184"
										},
										{
											"begin": 8415,
											"end": 8498,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8405,
											"end": 8498,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 8405,
											"end": 8498,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8215,
											"end": 8508,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8202,
											"end": 8203,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 8199,
											"end": 8200,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8195,
											"end": 8204,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8190,
											"end": 8204,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8190,
											"end": 8204,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8155,
											"end": 8508,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "180"
										},
										{
											"begin": 8155,
											"end": 8508,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8155,
											"end": 8508,
											"name": "tag",
											"source": 13,
											"value": "182"
										},
										{
											"begin": 8155,
											"end": 8508,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8159,
											"end": 8173,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8524,
											"end": 8527,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 8517,
											"end": 8527,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 8517,
											"end": 8527,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7787,
											"end": 8533,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7787,
											"end": 8533,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7787,
											"end": 8533,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7617,
											"end": 8533,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 7617,
											"end": 8533,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7617,
											"end": 8533,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7617,
											"end": 8533,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7617,
											"end": 8533,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8539,
											"end": 9004,
											"name": "tag",
											"source": 13,
											"value": "9"
										},
										{
											"begin": 8539,
											"end": 9004,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8728,
											"end": 8732,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8766,
											"end": 8768,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 8755,
											"end": 8764,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8751,
											"end": 8769,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8743,
											"end": 8769,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8743,
											"end": 8769,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8815,
											"end": 8824,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8809,
											"end": 8813,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8805,
											"end": 8825,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 8801,
											"end": 8802,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8790,
											"end": 8799,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 8786,
											"end": 8803,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8779,
											"end": 8826,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8843,
											"end": 8997,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "186"
										},
										{
											"begin": 8992,
											"end": 8996,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8983,
											"end": 8989,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 8843,
											"end": 8997,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "95"
										},
										{
											"begin": 8843,
											"end": 8997,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8843,
											"end": 8997,
											"name": "tag",
											"source": 13,
											"value": "186"
										},
										{
											"begin": 8843,
											"end": 8997,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8835,
											"end": 8997,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8835,
											"end": 8997,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8539,
											"end": 9004,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 8539,
											"end": 9004,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8539,
											"end": 9004,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8539,
											"end": 9004,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8539,
											"end": 9004,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9010,
											"end": 9190,
											"name": "tag",
											"source": 13,
											"value": "23"
										},
										{
											"begin": 9010,
											"end": 9190,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9058,
											"end": 9135,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9055,
											"end": 9056,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9048,
											"end": 9136,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 9155,
											"end": 9159,
											"name": "PUSH",
											"source": 13,
											"value": "32"
										},
										{
											"begin": 9152,
											"end": 9153,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 9145,
											"end": 9160,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 9179,
											"end": 9183,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 9176,
											"end": 9177,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9169,
											"end": 9184,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 9196,
											"end": 9322,
											"name": "tag",
											"source": 13,
											"value": "96"
										},
										{
											"begin": 9196,
											"end": 9322,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9291,
											"end": 9315,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "189"
										},
										{
											"begin": 9309,
											"end": 9314,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 9291,
											"end": 9315,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "77"
										},
										{
											"begin": 9291,
											"end": 9315,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9291,
											"end": 9315,
											"name": "tag",
											"source": 13,
											"value": "189"
										},
										{
											"begin": 9291,
											"end": 9315,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9286,
											"end": 9289,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9279,
											"end": 9316,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 9196,
											"end": 9322,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9196,
											"end": 9322,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9196,
											"end": 9322,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9328,
											"end": 9802,
											"name": "tag",
											"source": 13,
											"value": "32"
										},
										{
											"begin": 9328,
											"end": 9802,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9485,
											"end": 9489,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9523,
											"end": 9525,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 9512,
											"end": 9521,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9508,
											"end": 9526,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9500,
											"end": 9526,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9500,
											"end": 9526,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9536,
											"end": 9615,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "191"
										},
										{
											"begin": 9612,
											"end": 9613,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9601,
											"end": 9610,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 9597,
											"end": 9614,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9588,
											"end": 9594,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 9536,
											"end": 9615,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "96"
										},
										{
											"begin": 9536,
											"end": 9615,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9536,
											"end": 9615,
											"name": "tag",
											"source": 13,
											"value": "191"
										},
										{
											"begin": 9536,
											"end": 9615,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9625,
											"end": 9705,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "192"
										},
										{
											"begin": 9701,
											"end": 9703,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 9690,
											"end": 9699,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 9686,
											"end": 9704,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9677,
											"end": 9683,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 9625,
											"end": 9705,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "96"
										},
										{
											"begin": 9625,
											"end": 9705,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9625,
											"end": 9705,
											"name": "tag",
											"source": 13,
											"value": "192"
										},
										{
											"begin": 9625,
											"end": 9705,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9715,
											"end": 9795,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "193"
										},
										{
											"begin": 9791,
											"end": 9793,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 9780,
											"end": 9789,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 9776,
											"end": 9794,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9767,
											"end": 9773,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 9715,
											"end": 9795,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "96"
										},
										{
											"begin": 9715,
											"end": 9795,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9715,
											"end": 9795,
											"name": "tag",
											"source": 13,
											"value": "193"
										},
										{
											"begin": 9715,
											"end": 9795,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9328,
											"end": 9802,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 9328,
											"end": 9802,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 9328,
											"end": 9802,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9328,
											"end": 9802,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9328,
											"end": 9802,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9328,
											"end": 9802,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9328,
											"end": 9802,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9808,
											"end": 9930,
											"name": "tag",
											"source": 13,
											"value": "97"
										},
										{
											"begin": 9808,
											"end": 9930,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9881,
											"end": 9905,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "195"
										},
										{
											"begin": 9899,
											"end": 9904,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 9881,
											"end": 9905,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "90"
										},
										{
											"begin": 9881,
											"end": 9905,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9881,
											"end": 9905,
											"name": "tag",
											"source": 13,
											"value": "195"
										},
										{
											"begin": 9881,
											"end": 9905,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9874,
											"end": 9879,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 9871,
											"end": 9906,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 9861,
											"end": 9924,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "196"
										},
										{
											"begin": 9861,
											"end": 9924,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 9920,
											"end": 9921,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9917,
											"end": 9918,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 9910,
											"end": 9922,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 9861,
											"end": 9924,
											"name": "tag",
											"source": 13,
											"value": "196"
										},
										{
											"begin": 9861,
											"end": 9924,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9808,
											"end": 9930,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9808,
											"end": 9930,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9936,
											"end": 10079,
											"name": "tag",
											"source": 13,
											"value": "98"
										},
										{
											"begin": 9936,
											"end": 10079,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9993,
											"end": 9998,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10024,
											"end": 10030,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10018,
											"end": 10031,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 10009,
											"end": 10031,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10009,
											"end": 10031,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10040,
											"end": 10073,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "198"
										},
										{
											"begin": 10067,
											"end": 10072,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10040,
											"end": 10073,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "97"
										},
										{
											"begin": 10040,
											"end": 10073,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10040,
											"end": 10073,
											"name": "tag",
											"source": 13,
											"value": "198"
										},
										{
											"begin": 10040,
											"end": 10073,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9936,
											"end": 10079,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 9936,
											"end": 10079,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 9936,
											"end": 10079,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9936,
											"end": 10079,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9936,
											"end": 10079,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10085,
											"end": 10436,
											"name": "tag",
											"source": 13,
											"value": "36"
										},
										{
											"begin": 10085,
											"end": 10436,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10155,
											"end": 10161,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10204,
											"end": 10206,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 10192,
											"end": 10201,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10183,
											"end": 10190,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 10179,
											"end": 10202,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 10175,
											"end": 10207,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 10172,
											"end": 10291,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 10172,
											"end": 10291,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "200"
										},
										{
											"begin": 10172,
											"end": 10291,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 10210,
											"end": 10289,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "201"
										},
										{
											"begin": 10210,
											"end": 10289,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "66"
										},
										{
											"begin": 10210,
											"end": 10289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10210,
											"end": 10289,
											"name": "tag",
											"source": 13,
											"value": "201"
										},
										{
											"begin": 10210,
											"end": 10289,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10172,
											"end": 10291,
											"name": "tag",
											"source": 13,
											"value": "200"
										},
										{
											"begin": 10172,
											"end": 10291,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10330,
											"end": 10331,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10355,
											"end": 10419,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "202"
										},
										{
											"begin": 10411,
											"end": 10418,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 10402,
											"end": 10408,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10391,
											"end": 10400,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 10387,
											"end": 10409,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10355,
											"end": 10419,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "98"
										},
										{
											"begin": 10355,
											"end": 10419,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10355,
											"end": 10419,
											"name": "tag",
											"source": 13,
											"value": "202"
										},
										{
											"begin": 10355,
											"end": 10419,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10345,
											"end": 10419,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 10345,
											"end": 10419,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10301,
											"end": 10429,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10085,
											"end": 10436,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 10085,
											"end": 10436,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 10085,
											"end": 10436,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10085,
											"end": 10436,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10085,
											"end": 10436,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10442,
											"end": 10622,
											"name": "tag",
											"source": 13,
											"value": "99"
										},
										{
											"begin": 10442,
											"end": 10622,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10490,
											"end": 10567,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10487,
											"end": 10488,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10480,
											"end": 10568,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 10587,
											"end": 10591,
											"name": "PUSH",
											"source": 13,
											"value": "11"
										},
										{
											"begin": 10584,
											"end": 10585,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 10577,
											"end": 10592,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 10611,
											"end": 10615,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 10608,
											"end": 10609,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10601,
											"end": 10616,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 10628,
											"end": 10861,
											"name": "tag",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 10628,
											"end": 10861,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10667,
											"end": 10670,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10690,
											"end": 10714,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "205"
										},
										{
											"begin": 10708,
											"end": 10713,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10690,
											"end": 10714,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "90"
										},
										{
											"begin": 10690,
											"end": 10714,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10690,
											"end": 10714,
											"name": "tag",
											"source": 13,
											"value": "205"
										},
										{
											"begin": 10690,
											"end": 10714,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10681,
											"end": 10714,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 10681,
											"end": 10714,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10736,
											"end": 10802,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10729,
											"end": 10734,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10726,
											"end": 10803,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 10723,
											"end": 10826,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "206"
										},
										{
											"begin": 10723,
											"end": 10826,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 10806,
											"end": 10824,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "207"
										},
										{
											"begin": 10806,
											"end": 10824,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "99"
										},
										{
											"begin": 10806,
											"end": 10824,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10806,
											"end": 10824,
											"name": "tag",
											"source": 13,
											"value": "207"
										},
										{
											"begin": 10806,
											"end": 10824,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10723,
											"end": 10826,
											"name": "tag",
											"source": 13,
											"value": "206"
										},
										{
											"begin": 10723,
											"end": 10826,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10853,
											"end": 10854,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 10846,
											"end": 10851,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10842,
											"end": 10855,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10835,
											"end": 10855,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10835,
											"end": 10855,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10628,
											"end": 10861,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 10628,
											"end": 10861,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10628,
											"end": 10861,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10628,
											"end": 10861,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										}
									]
								}
							},
							"sourceList": [
								"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol",
								"@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol",
								"@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol",
								"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol",
								"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol",
								"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol",
								"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol",
								"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol",
								"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol",
								"contracts/PriceAggregator.sol",
								"contracts/interfaces/IERC20.sol",
								"contracts/libraries/UniswapV2.sol",
								"contracts/libraries/UniswapV3.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"getPrices((address,address,address,uint8)[])": "ff514fa3"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"t1\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"t2\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"providerVersion\",\"type\":\"uint8\"}],\"internalType\":\"struct PriceAggregator.input[]\",\"name\":\"inputs\",\"type\":\"tuple[]\"}],\"name\":\"getPrices\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"t1\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"t2\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"internalType\":\"struct PriceAggregator.output[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/PriceAggregator.sol\":\"PriceAggregator\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol\":{\"keccak256\":\"0x8a3c5c449d4b7cd76513ed6995f4b86e4a86f222c770f8442f5fc128ce29b4d2\",\"urls\":[\"bzz-raw://1df63ca373dafae3bd0ee7fe70f890a1dc7c45ed869c01de68413e0e97ff9deb\",\"dweb:/ipfs/QmefJgEYGUL8KX7kQKYTrDweF8GB7yjy3nw5Bmqzryg7PG\"]},\"@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol\":{\"keccak256\":\"0xcc3d0c93fc9ac0febbe09f941b465b57f750bcf3b48432da0b97dc289cfdc489\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b9379ad954680c44a0bc523b314ae4c4da735f9fe1d02aa56ea5bdba6f1136f2\",\"dweb:/ipfs/QmZXdgQNXKAckrXWz9R3mc47F1fvDvr28a2ewJrwNAw71B\"]},\"@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol\":{\"keccak256\":\"0xfe6113d518466cd6652c85b111e01f33eb62157f49ae5ed7d5a3947a2044adb1\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://1c42b9e6f5902ac38dd43e25750939baa7e0c1425dc75afd717c4412731065d5\",\"dweb:/ipfs/QmWaoacnzsucTvBME2o7YgZBZMhaHv7fkj83htHMVWJKWh\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol\":{\"keccak256\":\"0x9453dd0e7442188667d01d9b65de3f1e14e9511ff3e303179a15f6fc267f7634\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://982f4328f956c3e60e67501e759eb292ac487f76460c774c50e9ae4fcc92aae5\",\"dweb:/ipfs/QmRnzEDsaqtd9PJEVcgQi7p5aV5pMSvRUoGZJAdwFUJxgZ\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol\":{\"keccak256\":\"0xe603ac5b17ecdee73ba2b27efdf386c257a19c14206e87eee77e2017b742d9e5\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://8febc9bdb399a4d94bb89f5377732652e2400e4a8dee808201ade6848f9004e7\",\"dweb:/ipfs/QmaKDqYYFU4d2W2iN77aDHptfbFmYZRrMYXHeGpJmM8C1c\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol\":{\"keccak256\":\"0x8071514d0fe5d17d6fbd31c191cdfb703031c24e0ece3621d88ab10e871375cd\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://d0b571930cc7488b1d546a7e9cea7c52d8b3c4e207da657ed0e0db7343b8cd03\",\"dweb:/ipfs/QmaGK6vVwB95QSTR1XMYvrh7ivYAYZxi3fD7v6VMA4jZ39\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol\":{\"keccak256\":\"0xf6e5d2cd1139c4c276bdbc8e1d2b256e456c866a91f1b868da265c6d2685c3f7\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b99c8c9ae8e27ee6559e5866bea82cbc9ffc8247f8d15b7422a4deb287d4d047\",\"dweb:/ipfs/QmfL8gaqt3ffAnm6nVj5ksuNpLygXuL3xq5VBqrkwC2JJ3\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol\":{\"keccak256\":\"0x759b78a2918af9e99e246dc3af084f654e48ef32bb4e4cb8a966aa3dcaece235\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://64144fb96e1c7fdba87305acadb98a198d26a3d46c097cb3a666e567f6f29735\",\"dweb:/ipfs/QmUnWVwN9FKB9uV5Pr8YfLpWZnYM2DENnRMaadZ492JS9u\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol\":{\"keccak256\":\"0x852dc1f5df7dcf7f11e7bb3eed79f0cea72ad4b25f6a9d2c35aafb48925fd49f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://ed63907c38ff36b0e22bc9ffc53e791ea74f0d4f0e7c257fdfb5aaf8825b1f0f\",\"dweb:/ipfs/QmSQrckghEjs6HVsA5GVgpNpZWvTXMY5eQLF7cN6deFeEg\"]},\"contracts/PriceAggregator.sol\":{\"keccak256\":\"0x2b6c67c595a641d1b6ead6e03385ac692d07867d6ff8c4a585cae6db6ec18cb0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0286a5780c7b04499017433706c20fdb3ba12984735b9191045dcfe09411b909\",\"dweb:/ipfs/QmQ1HFcm72YUwbHCnzmAwhuCn7mpmWR2hXEbkyxdwc9rEE\"]},\"contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x7df9d93243a890a6dc175905d65495ae5726330faa50409ab8460c4c00c672e1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3ff91fe9d915b97343e152f1a15a46e5ff9477e90e90a4431dca38f79eb2cdba\",\"dweb:/ipfs/QmcHUAJs2MfcdbAFTzdQE1eGevxCGHNDXECiuGLDaUs34S\"]},\"contracts/libraries/UniswapV2.sol\":{\"keccak256\":\"0x8f682c09a2af769d4db8e8a9f34d4aae334a057c6b01ce6f209eaed672730bae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://817dc11c5e97e00fdef113aff3a333bbb1ce9f8285be9f91540a1d197f55fea3\",\"dweb:/ipfs/QmTw2nWphRw5Smt4z4QTV8jBFaEQjxG4Fmzo1VMGi9F82o\"]},\"contracts/libraries/UniswapV3.sol\":{\"keccak256\":\"0xc30677fce43f2ffe4f221bbe3d9720c38fbd322a4bdc9d840a32d1528545fcc4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://38292eaeb348e86e19c293fc779c6f44b804518e80c8085c6c0451d4a748fa45\",\"dweb:/ipfs/QmVpyP9cdAiBmMWChRDP4x7ZvH5rA6C53e2TAmCAGTE7Vm\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/interfaces/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "deposit",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"deposit()": "d0e30db0",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"withdraw(uint256)": "2e1a7d4d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x7df9d93243a890a6dc175905d65495ae5726330faa50409ab8460c4c00c672e1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3ff91fe9d915b97343e152f1a15a46e5ff9477e90e90a4431dca38f79eb2cdba\",\"dweb:/ipfs/QmcHUAJs2MfcdbAFTzdQE1eGevxCGHNDXECiuGLDaUs34S\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/libraries/UniswapV2.sol": {
				"UniswapV2": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "provider",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tIn",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tOut",
									"type": "address"
								}
							],
							"name": "Price",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/libraries/UniswapV2.sol\":170:526  library UniswapV2 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/libraries/UniswapV2.sol\":170:526  library UniswapV2 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xc361e0b1\n      eq\n      tag_2\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"contracts/libraries/UniswapV2.sol\":194:523  function Price(address provider, address tIn,address tOut) external view returns (uint256){... */\n    tag_2:\n      tag_3\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_4\n      swap2\n      swap1\n      tag_5\n      jump\t// in\n    tag_4:\n      tag_6\n      jump\t// in\n    tag_3:\n      mload(0x40)\n      tag_7\n      swap2\n      swap1\n      tag_8\n      jump\t// in\n    tag_7:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n    tag_6:\n        /* \"contracts/libraries/UniswapV2.sol\":276:283  uint256 */\n      0x00\n        /* \"contracts/libraries/UniswapV2.sol\":294:315  address[] memory path */\n      dup1\n        /* \"contracts/libraries/UniswapV2.sol\":332:333  2 */\n      0x02\n        /* \"contracts/libraries/UniswapV2.sol\":318:334  new address[](2) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_10\n      jumpi\n      tag_11\n      tag_12\n      jump\t// in\n    tag_11:\n    tag_10:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_13\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_13:\n      pop\n        /* \"contracts/libraries/UniswapV2.sol\":294:334  address[] memory path = new address[](2) */\n      swap1\n      pop\n        /* \"contracts/libraries/UniswapV2.sol\":354:357  tIn */\n      dup4\n        /* \"contracts/libraries/UniswapV2.sol\":344:348  path */\n      dup2\n        /* \"contracts/libraries/UniswapV2.sol\":349:350  0 */\n      0x00\n        /* \"contracts/libraries/UniswapV2.sol\":344:351  path[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_14\n      jumpi\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n    tag_14:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"contracts/libraries/UniswapV2.sol\":344:357  path[0] = tIn */\n      swap1\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/libraries/UniswapV2.sol\":377:381  tOut */\n      dup3\n        /* \"contracts/libraries/UniswapV2.sol\":367:371  path */\n      dup2\n        /* \"contracts/libraries/UniswapV2.sol\":372:373  1 */\n      0x01\n        /* \"contracts/libraries/UniswapV2.sol\":367:374  path[1] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_17\n      jumpi\n      tag_18\n      tag_16\n      jump\t// in\n    tag_18:\n    tag_17:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"contracts/libraries/UniswapV2.sol\":367:381  path[1] = tOut */\n      swap1\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/libraries/UniswapV2.sol\":391:412  uint[] memory amounts */\n      0x00\n        /* \"contracts/libraries/UniswapV2.sol\":434:442  provider */\n      dup6\n        /* \"contracts/libraries/UniswapV2.sol\":415:457  IUniswapV2Router01(provider).getAmountsOut */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xd06ca61f\n        /* \"contracts/libraries/UniswapV2.sol\":469:472  tIn */\n      dup7\n        /* \"contracts/libraries/UniswapV2.sol\":462:482  IERC20(tIn).decimals */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x313ce567\n        /* \"contracts/libraries/UniswapV2.sol\":462:484  IERC20(tIn).decimals() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_20\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_20:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_21\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_21:\n        /* \"contracts/libraries/UniswapV2.sol\":458:460  10 */\n      0x0a\n        /* \"contracts/libraries/UniswapV2.sol\":458:484  10**IERC20(tIn).decimals() */\n      tag_23\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_23:\n        /* \"contracts/libraries/UniswapV2.sol\":485:489  path */\n      dup5\n        /* \"contracts/libraries/UniswapV2.sol\":415:490  IUniswapV2Router01(provider).getAmountsOut(10**IERC20(tIn).decimals(),path) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_25\n      swap3\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_28\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_28:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x00\n      dup3\n      returndatacopy\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_29\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_29:\n        /* \"contracts/libraries/UniswapV2.sol\":391:490  uint[] memory amounts = IUniswapV2Router01(provider).getAmountsOut(10**IERC20(tIn).decimals(),path) */\n      swap1\n      pop\n        /* \"contracts/libraries/UniswapV2.sol\":506:513  amounts */\n      dup1\n        /* \"contracts/libraries/UniswapV2.sol\":514:515  1 */\n      0x01\n        /* \"contracts/libraries/UniswapV2.sol\":506:516  amounts[1] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_31\n      jumpi\n      tag_32\n      tag_16\n      jump\t// in\n    tag_32:\n    tag_31:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/libraries/UniswapV2.sol\":499:516  return amounts[1] */\n      swap3\n      pop\n      pop\n      pop\n        /* \"contracts/libraries/UniswapV2.sol\":194:523  function Price(address provider, address tIn,address tOut) external view returns (uint256){... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:82   */\n    tag_33:\n        /* \"#utility.yul\":40:46   */\n      0x00\n        /* \"#utility.yul\":73:75   */\n      0x40\n        /* \"#utility.yul\":67:76   */\n      mload\n        /* \"#utility.yul\":57:76   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:82   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_34:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_35:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_36:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_37:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_73\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_36\n      jump\t// in\n    tag_73:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_38:\n        /* \"#utility.yul\":641:665   */\n      tag_75\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_37\n      jump\t// in\n    tag_75:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_76\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      dup1\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_76:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_39:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_78\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_38\n      jump\t// in\n    tag_78:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:1460   */\n    tag_5:\n        /* \"#utility.yul\":918:924   */\n      0x00\n        /* \"#utility.yul\":926:932   */\n      dup1\n        /* \"#utility.yul\":934:940   */\n      0x00\n        /* \"#utility.yul\":983:985   */\n      0x60\n        /* \"#utility.yul\":971:980   */\n      dup5\n        /* \"#utility.yul\":962:969   */\n      dup7\n        /* \"#utility.yul\":958:981   */\n      sub\n        /* \"#utility.yul\":954:986   */\n      slt\n        /* \"#utility.yul\":951:1070   */\n      iszero\n      tag_80\n      jumpi\n        /* \"#utility.yul\":989:1068   */\n      tag_81\n      tag_34\n      jump\t// in\n    tag_81:\n        /* \"#utility.yul\":951:1070   */\n    tag_80:\n        /* \"#utility.yul\":1109:1110   */\n      0x00\n        /* \"#utility.yul\":1134:1187   */\n      tag_82\n        /* \"#utility.yul\":1179:1186   */\n      dup7\n        /* \"#utility.yul\":1170:1176   */\n      dup3\n        /* \"#utility.yul\":1159:1168   */\n      dup8\n        /* \"#utility.yul\":1155:1177   */\n      add\n        /* \"#utility.yul\":1134:1187   */\n      tag_39\n      jump\t// in\n    tag_82:\n        /* \"#utility.yul\":1124:1187   */\n      swap4\n      pop\n        /* \"#utility.yul\":1080:1197   */\n      pop\n        /* \"#utility.yul\":1236:1238   */\n      0x20\n        /* \"#utility.yul\":1262:1315   */\n      tag_83\n        /* \"#utility.yul\":1307:1314   */\n      dup7\n        /* \"#utility.yul\":1298:1304   */\n      dup3\n        /* \"#utility.yul\":1287:1296   */\n      dup8\n        /* \"#utility.yul\":1283:1305   */\n      add\n        /* \"#utility.yul\":1262:1315   */\n      tag_39\n      jump\t// in\n    tag_83:\n        /* \"#utility.yul\":1252:1315   */\n      swap3\n      pop\n        /* \"#utility.yul\":1207:1325   */\n      pop\n        /* \"#utility.yul\":1364:1366   */\n      0x40\n        /* \"#utility.yul\":1390:1443   */\n      tag_84\n        /* \"#utility.yul\":1435:1442   */\n      dup7\n        /* \"#utility.yul\":1426:1432   */\n      dup3\n        /* \"#utility.yul\":1415:1424   */\n      dup8\n        /* \"#utility.yul\":1411:1433   */\n      add\n        /* \"#utility.yul\":1390:1443   */\n      tag_39\n      jump\t// in\n    tag_84:\n        /* \"#utility.yul\":1380:1443   */\n      swap2\n      pop\n        /* \"#utility.yul\":1335:1453   */\n      pop\n        /* \"#utility.yul\":841:1460   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":1466:1543   */\n    tag_40:\n        /* \"#utility.yul\":1503:1510   */\n      0x00\n        /* \"#utility.yul\":1532:1537   */\n      dup2\n        /* \"#utility.yul\":1521:1537   */\n      swap1\n      pop\n        /* \"#utility.yul\":1466:1543   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1549:1675   */\n    tag_41:\n        /* \"#utility.yul\":1644:1668   */\n      tag_87\n        /* \"#utility.yul\":1662:1667   */\n      dup2\n        /* \"#utility.yul\":1644:1668   */\n      tag_40\n      jump\t// in\n    tag_87:\n        /* \"#utility.yul\":1639:1642   */\n      dup3\n        /* \"#utility.yul\":1632:1669   */\n      mstore\n        /* \"#utility.yul\":1549:1675   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1681:1919   */\n    tag_8:\n        /* \"#utility.yul\":1782:1786   */\n      0x00\n        /* \"#utility.yul\":1820:1822   */\n      0x20\n        /* \"#utility.yul\":1809:1818   */\n      dup3\n        /* \"#utility.yul\":1805:1823   */\n      add\n        /* \"#utility.yul\":1797:1823   */\n      swap1\n      pop\n        /* \"#utility.yul\":1833:1912   */\n      tag_89\n        /* \"#utility.yul\":1909:1910   */\n      0x00\n        /* \"#utility.yul\":1898:1907   */\n      dup4\n        /* \"#utility.yul\":1894:1911   */\n      add\n        /* \"#utility.yul\":1885:1891   */\n      dup5\n        /* \"#utility.yul\":1833:1912   */\n      tag_41\n      jump\t// in\n    tag_89:\n        /* \"#utility.yul\":1681:1919   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1925:2105   */\n    tag_12:\n        /* \"#utility.yul\":1973:2050   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":1970:1971   */\n      0x00\n        /* \"#utility.yul\":1963:2051   */\n      mstore\n        /* \"#utility.yul\":2070:2074   */\n      0x41\n        /* \"#utility.yul\":2067:2068   */\n      0x04\n        /* \"#utility.yul\":2060:2075   */\n      mstore\n        /* \"#utility.yul\":2094:2098   */\n      0x24\n        /* \"#utility.yul\":2091:2092   */\n      0x00\n        /* \"#utility.yul\":2084:2099   */\n      revert\n        /* \"#utility.yul\":2111:2291   */\n    tag_16:\n        /* \"#utility.yul\":2159:2236   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":2156:2157   */\n      0x00\n        /* \"#utility.yul\":2149:2237   */\n      mstore\n        /* \"#utility.yul\":2256:2260   */\n      0x32\n        /* \"#utility.yul\":2253:2254   */\n      0x04\n        /* \"#utility.yul\":2246:2261   */\n      mstore\n        /* \"#utility.yul\":2280:2284   */\n      0x24\n        /* \"#utility.yul\":2277:2278   */\n      0x00\n        /* \"#utility.yul\":2270:2285   */\n      revert\n        /* \"#utility.yul\":2297:2383   */\n    tag_42:\n        /* \"#utility.yul\":2332:2339   */\n      0x00\n        /* \"#utility.yul\":2372:2376   */\n      0xff\n        /* \"#utility.yul\":2365:2370   */\n      dup3\n        /* \"#utility.yul\":2361:2377   */\n      and\n        /* \"#utility.yul\":2350:2377   */\n      swap1\n      pop\n        /* \"#utility.yul\":2297:2383   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2389:2507   */\n    tag_43:\n        /* \"#utility.yul\":2460:2482   */\n      tag_94\n        /* \"#utility.yul\":2476:2481   */\n      dup2\n        /* \"#utility.yul\":2460:2482   */\n      tag_42\n      jump\t// in\n    tag_94:\n        /* \"#utility.yul\":2453:2458   */\n      dup2\n        /* \"#utility.yul\":2450:2483   */\n      eq\n        /* \"#utility.yul\":2440:2501   */\n      tag_95\n      jumpi\n        /* \"#utility.yul\":2497:2498   */\n      0x00\n        /* \"#utility.yul\":2494:2495   */\n      dup1\n        /* \"#utility.yul\":2487:2499   */\n      revert\n        /* \"#utility.yul\":2440:2501   */\n    tag_95:\n        /* \"#utility.yul\":2389:2507   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2513:2652   */\n    tag_44:\n        /* \"#utility.yul\":2568:2573   */\n      0x00\n        /* \"#utility.yul\":2599:2605   */\n      dup2\n        /* \"#utility.yul\":2593:2606   */\n      mload\n        /* \"#utility.yul\":2584:2606   */\n      swap1\n      pop\n        /* \"#utility.yul\":2615:2646   */\n      tag_97\n        /* \"#utility.yul\":2640:2645   */\n      dup2\n        /* \"#utility.yul\":2615:2646   */\n      tag_43\n      jump\t// in\n    tag_97:\n        /* \"#utility.yul\":2513:2652   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2658:3005   */\n    tag_22:\n        /* \"#utility.yul\":2726:2732   */\n      0x00\n        /* \"#utility.yul\":2775:2777   */\n      0x20\n        /* \"#utility.yul\":2763:2772   */\n      dup3\n        /* \"#utility.yul\":2754:2761   */\n      dup5\n        /* \"#utility.yul\":2750:2773   */\n      sub\n        /* \"#utility.yul\":2746:2778   */\n      slt\n        /* \"#utility.yul\":2743:2862   */\n      iszero\n      tag_99\n      jumpi\n        /* \"#utility.yul\":2781:2860   */\n      tag_100\n      tag_34\n      jump\t// in\n    tag_100:\n        /* \"#utility.yul\":2743:2862   */\n    tag_99:\n        /* \"#utility.yul\":2901:2902   */\n      0x00\n        /* \"#utility.yul\":2926:2988   */\n      tag_101\n        /* \"#utility.yul\":2980:2987   */\n      dup5\n        /* \"#utility.yul\":2971:2977   */\n      dup3\n        /* \"#utility.yul\":2960:2969   */\n      dup6\n        /* \"#utility.yul\":2956:2978   */\n      add\n        /* \"#utility.yul\":2926:2988   */\n      tag_44\n      jump\t// in\n    tag_101:\n        /* \"#utility.yul\":2916:2988   */\n      swap2\n      pop\n        /* \"#utility.yul\":2872:2998   */\n      pop\n        /* \"#utility.yul\":2658:3005   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3011:3191   */\n    tag_45:\n        /* \"#utility.yul\":3059:3136   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":3056:3057   */\n      0x00\n        /* \"#utility.yul\":3049:3137   */\n      mstore\n        /* \"#utility.yul\":3156:3160   */\n      0x11\n        /* \"#utility.yul\":3153:3154   */\n      0x04\n        /* \"#utility.yul\":3146:3161   */\n      mstore\n        /* \"#utility.yul\":3180:3184   */\n      0x24\n        /* \"#utility.yul\":3177:3178   */\n      0x00\n        /* \"#utility.yul\":3170:3185   */\n      revert\n        /* \"#utility.yul\":3197:3299   */\n    tag_46:\n        /* \"#utility.yul\":3239:3247   */\n      0x00\n        /* \"#utility.yul\":3286:3291   */\n      dup2\n        /* \"#utility.yul\":3283:3284   */\n      0x01\n        /* \"#utility.yul\":3279:3292   */\n      shr\n        /* \"#utility.yul\":3258:3292   */\n      swap1\n      pop\n        /* \"#utility.yul\":3197:3299   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3305:4153   */\n    tag_47:\n        /* \"#utility.yul\":3366:3371   */\n      0x00\n        /* \"#utility.yul\":3373:3377   */\n      dup1\n        /* \"#utility.yul\":3397:3403   */\n      dup3\n        /* \"#utility.yul\":3388:3403   */\n      swap2\n      pop\n        /* \"#utility.yul\":3421:3426   */\n      dup4\n        /* \"#utility.yul\":3412:3426   */\n      swap1\n      pop\n        /* \"#utility.yul\":3435:4147   */\n    tag_105:\n        /* \"#utility.yul\":3456:3457   */\n      0x01\n        /* \"#utility.yul\":3446:3454   */\n      dup6\n        /* \"#utility.yul\":3443:3458   */\n      gt\n        /* \"#utility.yul\":3435:4147   */\n      iszero\n      tag_107\n      jumpi\n        /* \"#utility.yul\":3551:3555   */\n      dup1\n        /* \"#utility.yul\":3546:3549   */\n      dup7\n        /* \"#utility.yul\":3542:3556   */\n      div\n        /* \"#utility.yul\":3536:3540   */\n      dup2\n        /* \"#utility.yul\":3533:3557   */\n      gt\n        /* \"#utility.yul\":3530:3580   */\n      iszero\n      tag_108\n      jumpi\n        /* \"#utility.yul\":3560:3578   */\n      tag_109\n      tag_45\n      jump\t// in\n    tag_109:\n        /* \"#utility.yul\":3530:3580   */\n    tag_108:\n        /* \"#utility.yul\":3610:3611   */\n      0x01\n        /* \"#utility.yul\":3600:3608   */\n      dup6\n        /* \"#utility.yul\":3596:3612   */\n      and\n        /* \"#utility.yul\":3593:4044   */\n      iszero\n      tag_110\n      jumpi\n        /* \"#utility.yul\":4025:4029   */\n      dup1\n        /* \"#utility.yul\":4018:4023   */\n      dup3\n        /* \"#utility.yul\":4014:4030   */\n      mul\n        /* \"#utility.yul\":4005:4030   */\n      swap2\n      pop\n        /* \"#utility.yul\":3593:4044   */\n    tag_110:\n        /* \"#utility.yul\":4075:4079   */\n      dup1\n        /* \"#utility.yul\":4069:4073   */\n      dup2\n        /* \"#utility.yul\":4065:4080   */\n      mul\n        /* \"#utility.yul\":4057:4080   */\n      swap1\n      pop\n        /* \"#utility.yul\":4105:4137   */\n      tag_111\n        /* \"#utility.yul\":4128:4136   */\n      dup6\n        /* \"#utility.yul\":4105:4137   */\n      tag_46\n      jump\t// in\n    tag_111:\n        /* \"#utility.yul\":4093:4137   */\n      swap5\n      pop\n        /* \"#utility.yul\":3435:4147   */\n      jump(tag_105)\n    tag_107:\n        /* \"#utility.yul\":3305:4153   */\n      swap5\n      pop\n      swap5\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4159:5232   */\n    tag_48:\n        /* \"#utility.yul\":4213:4218   */\n      0x00\n        /* \"#utility.yul\":4404:4412   */\n      dup3\n        /* \"#utility.yul\":4394:4434   */\n      tag_113\n      jumpi\n        /* \"#utility.yul\":4425:4426   */\n      0x01\n        /* \"#utility.yul\":4416:4426   */\n      swap1\n      pop\n        /* \"#utility.yul\":4427:4432   */\n      jump(tag_112)\n        /* \"#utility.yul\":4394:4434   */\n    tag_113:\n        /* \"#utility.yul\":4453:4457   */\n      dup2\n        /* \"#utility.yul\":4443:4479   */\n      tag_114\n      jumpi\n        /* \"#utility.yul\":4470:4471   */\n      0x00\n        /* \"#utility.yul\":4461:4471   */\n      swap1\n      pop\n        /* \"#utility.yul\":4472:4477   */\n      jump(tag_112)\n        /* \"#utility.yul\":4443:4479   */\n    tag_114:\n        /* \"#utility.yul\":4539:4543   */\n      dup2\n        /* \"#utility.yul\":4587:4588   */\n      0x01\n        /* \"#utility.yul\":4582:4609   */\n      dup2\n      eq\n      tag_116\n      jumpi\n        /* \"#utility.yul\":4623:4624   */\n      0x02\n        /* \"#utility.yul\":4618:4809   */\n      dup2\n      eq\n      tag_117\n      jumpi\n        /* \"#utility.yul\":4532:4809   */\n      jump(tag_115)\n        /* \"#utility.yul\":4582:4609   */\n    tag_116:\n        /* \"#utility.yul\":4600:4601   */\n      0x01\n        /* \"#utility.yul\":4591:4601   */\n      swap2\n      pop\n        /* \"#utility.yul\":4602:4607   */\n      pop\n      jump(tag_112)\n        /* \"#utility.yul\":4618:4809   */\n    tag_117:\n        /* \"#utility.yul\":4663:4666   */\n      0xff\n        /* \"#utility.yul\":4653:4661   */\n      dup5\n        /* \"#utility.yul\":4650:4667   */\n      gt\n        /* \"#utility.yul\":4647:4690   */\n      iszero\n      tag_118\n      jumpi\n        /* \"#utility.yul\":4670:4688   */\n      tag_119\n      tag_45\n      jump\t// in\n    tag_119:\n        /* \"#utility.yul\":4647:4690   */\n    tag_118:\n        /* \"#utility.yul\":4719:4727   */\n      dup4\n        /* \"#utility.yul\":4716:4717   */\n      0x02\n        /* \"#utility.yul\":4712:4728   */\n      exp\n        /* \"#utility.yul\":4703:4728   */\n      swap2\n      pop\n        /* \"#utility.yul\":4754:4757   */\n      dup5\n        /* \"#utility.yul\":4747:4752   */\n      dup3\n        /* \"#utility.yul\":4744:4758   */\n      gt\n        /* \"#utility.yul\":4741:4781   */\n      iszero\n      tag_120\n      jumpi\n        /* \"#utility.yul\":4761:4779   */\n      tag_121\n      tag_45\n      jump\t// in\n    tag_121:\n        /* \"#utility.yul\":4741:4781   */\n    tag_120:\n        /* \"#utility.yul\":4794:4799   */\n      pop\n      jump(tag_112)\n        /* \"#utility.yul\":4532:4809   */\n    tag_115:\n      pop\n        /* \"#utility.yul\":4918:4920   */\n      0x20\n        /* \"#utility.yul\":4908:4916   */\n      dup4\n        /* \"#utility.yul\":4905:4921   */\n      lt\n        /* \"#utility.yul\":4899:4902   */\n      0x0133\n        /* \"#utility.yul\":4893:4897   */\n      dup4\n        /* \"#utility.yul\":4890:4903   */\n      lt\n        /* \"#utility.yul\":4886:4922   */\n      and\n        /* \"#utility.yul\":4868:4870   */\n      0x4e\n        /* \"#utility.yul\":4858:4866   */\n      dup5\n        /* \"#utility.yul\":4855:4871   */\n      lt\n        /* \"#utility.yul\":4850:4852   */\n      0x0b\n        /* \"#utility.yul\":4844:4848   */\n      dup5\n        /* \"#utility.yul\":4841:4853   */\n      lt\n        /* \"#utility.yul\":4837:4872   */\n      and\n        /* \"#utility.yul\":4821:4932   */\n      or\n        /* \"#utility.yul\":4818:5064   */\n      iszero\n      tag_122\n      jumpi\n        /* \"#utility.yul\":4974:4982   */\n      dup3\n        /* \"#utility.yul\":4968:4972   */\n      dup3\n        /* \"#utility.yul\":4964:4983   */\n      exp\n        /* \"#utility.yul\":4955:4983   */\n      swap1\n      pop\n        /* \"#utility.yul\":5009:5012   */\n      dup4\n        /* \"#utility.yul\":5002:5007   */\n      dup2\n        /* \"#utility.yul\":4999:5013   */\n      gt\n        /* \"#utility.yul\":4996:5036   */\n      iszero\n      tag_123\n      jumpi\n        /* \"#utility.yul\":5016:5034   */\n      tag_124\n      tag_45\n      jump\t// in\n    tag_124:\n        /* \"#utility.yul\":4996:5036   */\n    tag_123:\n        /* \"#utility.yul\":5049:5054   */\n      jump(tag_112)\n        /* \"#utility.yul\":4818:5064   */\n    tag_122:\n        /* \"#utility.yul\":5089:5131   */\n      tag_125\n        /* \"#utility.yul\":5127:5130   */\n      dup5\n        /* \"#utility.yul\":5117:5125   */\n      dup5\n        /* \"#utility.yul\":5111:5115   */\n      dup5\n        /* \"#utility.yul\":5108:5109   */\n      0x01\n        /* \"#utility.yul\":5089:5131   */\n      tag_47\n      jump\t// in\n    tag_125:\n        /* \"#utility.yul\":5074:5131   */\n      swap3\n      pop\n      swap1\n      pop\n        /* \"#utility.yul\":5163:5167   */\n      dup2\n        /* \"#utility.yul\":5158:5161   */\n      dup5\n        /* \"#utility.yul\":5154:5168   */\n      div\n        /* \"#utility.yul\":5147:5152   */\n      dup2\n        /* \"#utility.yul\":5144:5169   */\n      gt\n        /* \"#utility.yul\":5141:5192   */\n      iszero\n      tag_126\n      jumpi\n        /* \"#utility.yul\":5172:5190   */\n      tag_127\n      tag_45\n      jump\t// in\n    tag_127:\n        /* \"#utility.yul\":5141:5192   */\n    tag_126:\n        /* \"#utility.yul\":5221:5225   */\n      dup2\n        /* \"#utility.yul\":5214:5219   */\n      dup2\n        /* \"#utility.yul\":5210:5226   */\n      mul\n        /* \"#utility.yul\":5201:5226   */\n      swap1\n      pop\n        /* \"#utility.yul\":4159:5232   */\n    tag_112:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5238:5519   */\n    tag_24:\n        /* \"#utility.yul\":5296:5301   */\n      0x00\n        /* \"#utility.yul\":5320:5343   */\n      tag_129\n        /* \"#utility.yul\":5338:5342   */\n      dup3\n        /* \"#utility.yul\":5320:5343   */\n      tag_40\n      jump\t// in\n    tag_129:\n        /* \"#utility.yul\":5312:5343   */\n      swap2\n      pop\n        /* \"#utility.yul\":5364:5389   */\n      tag_130\n        /* \"#utility.yul\":5380:5388   */\n      dup4\n        /* \"#utility.yul\":5364:5389   */\n      tag_42\n      jump\t// in\n    tag_130:\n        /* \"#utility.yul\":5352:5389   */\n      swap3\n      pop\n        /* \"#utility.yul\":5408:5512   */\n      tag_131\n        /* \"#utility.yul\":5445:5511   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":5435:5443   */\n      dup5\n        /* \"#utility.yul\":5429:5433   */\n      dup5\n        /* \"#utility.yul\":5408:5512   */\n      tag_48\n      jump\t// in\n    tag_131:\n        /* \"#utility.yul\":5399:5512   */\n      swap1\n      pop\n        /* \"#utility.yul\":5238:5519   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5525:5643   */\n    tag_49:\n        /* \"#utility.yul\":5612:5636   */\n      tag_133\n        /* \"#utility.yul\":5630:5635   */\n      dup2\n        /* \"#utility.yul\":5612:5636   */\n      tag_40\n      jump\t// in\n    tag_133:\n        /* \"#utility.yul\":5607:5610   */\n      dup3\n        /* \"#utility.yul\":5600:5637   */\n      mstore\n        /* \"#utility.yul\":5525:5643   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5649:5763   */\n    tag_50:\n        /* \"#utility.yul\":5716:5722   */\n      0x00\n        /* \"#utility.yul\":5750:5755   */\n      dup2\n        /* \"#utility.yul\":5744:5756   */\n      mload\n        /* \"#utility.yul\":5734:5756   */\n      swap1\n      pop\n        /* \"#utility.yul\":5649:5763   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5769:5953   */\n    tag_51:\n        /* \"#utility.yul\":5868:5879   */\n      0x00\n        /* \"#utility.yul\":5902:5908   */\n      dup3\n        /* \"#utility.yul\":5897:5900   */\n      dup3\n        /* \"#utility.yul\":5890:5909   */\n      mstore\n        /* \"#utility.yul\":5942:5946   */\n      0x20\n        /* \"#utility.yul\":5937:5940   */\n      dup3\n        /* \"#utility.yul\":5933:5947   */\n      add\n        /* \"#utility.yul\":5918:5947   */\n      swap1\n      pop\n        /* \"#utility.yul\":5769:5953   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5959:6091   */\n    tag_52:\n        /* \"#utility.yul\":6026:6030   */\n      0x00\n        /* \"#utility.yul\":6049:6052   */\n      dup2\n        /* \"#utility.yul\":6041:6052   */\n      swap1\n      pop\n        /* \"#utility.yul\":6079:6083   */\n      0x20\n        /* \"#utility.yul\":6074:6077   */\n      dup3\n        /* \"#utility.yul\":6070:6084   */\n      add\n        /* \"#utility.yul\":6062:6084   */\n      swap1\n      pop\n        /* \"#utility.yul\":5959:6091   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6097:6205   */\n    tag_53:\n        /* \"#utility.yul\":6174:6198   */\n      tag_138\n        /* \"#utility.yul\":6192:6197   */\n      dup2\n        /* \"#utility.yul\":6174:6198   */\n      tag_37\n      jump\t// in\n    tag_138:\n        /* \"#utility.yul\":6169:6172   */\n      dup3\n        /* \"#utility.yul\":6162:6199   */\n      mstore\n        /* \"#utility.yul\":6097:6205   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6211:6390   */\n    tag_54:\n        /* \"#utility.yul\":6280:6290   */\n      0x00\n        /* \"#utility.yul\":6301:6347   */\n      tag_140\n        /* \"#utility.yul\":6343:6346   */\n      dup4\n        /* \"#utility.yul\":6335:6341   */\n      dup4\n        /* \"#utility.yul\":6301:6347   */\n      tag_53\n      jump\t// in\n    tag_140:\n        /* \"#utility.yul\":6379:6383   */\n      0x20\n        /* \"#utility.yul\":6374:6377   */\n      dup4\n        /* \"#utility.yul\":6370:6384   */\n      add\n        /* \"#utility.yul\":6356:6384   */\n      swap1\n      pop\n        /* \"#utility.yul\":6211:6390   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6396:6509   */\n    tag_55:\n        /* \"#utility.yul\":6466:6470   */\n      0x00\n        /* \"#utility.yul\":6498:6502   */\n      0x20\n        /* \"#utility.yul\":6493:6496   */\n      dup3\n        /* \"#utility.yul\":6489:6503   */\n      add\n        /* \"#utility.yul\":6481:6503   */\n      swap1\n      pop\n        /* \"#utility.yul\":6396:6509   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6545:7277   */\n    tag_56:\n        /* \"#utility.yul\":6664:6667   */\n      0x00\n        /* \"#utility.yul\":6693:6747   */\n      tag_143\n        /* \"#utility.yul\":6741:6746   */\n      dup3\n        /* \"#utility.yul\":6693:6747   */\n      tag_50\n      jump\t// in\n    tag_143:\n        /* \"#utility.yul\":6763:6849   */\n      tag_144\n        /* \"#utility.yul\":6842:6848   */\n      dup2\n        /* \"#utility.yul\":6837:6840   */\n      dup6\n        /* \"#utility.yul\":6763:6849   */\n      tag_51\n      jump\t// in\n    tag_144:\n        /* \"#utility.yul\":6756:6849   */\n      swap4\n      pop\n        /* \"#utility.yul\":6873:6929   */\n      tag_145\n        /* \"#utility.yul\":6923:6928   */\n      dup4\n        /* \"#utility.yul\":6873:6929   */\n      tag_52\n      jump\t// in\n    tag_145:\n        /* \"#utility.yul\":6952:6959   */\n      dup1\n        /* \"#utility.yul\":6983:6984   */\n      0x00\n        /* \"#utility.yul\":6968:7252   */\n    tag_146:\n        /* \"#utility.yul\":6993:6999   */\n      dup4\n        /* \"#utility.yul\":6990:6991   */\n      dup2\n        /* \"#utility.yul\":6987:7000   */\n      lt\n        /* \"#utility.yul\":6968:7252   */\n      iszero\n      tag_148\n      jumpi\n        /* \"#utility.yul\":7069:7075   */\n      dup2\n        /* \"#utility.yul\":7063:7076   */\n      mload\n        /* \"#utility.yul\":7096:7159   */\n      tag_149\n        /* \"#utility.yul\":7155:7158   */\n      dup9\n        /* \"#utility.yul\":7140:7153   */\n      dup3\n        /* \"#utility.yul\":7096:7159   */\n      tag_54\n      jump\t// in\n    tag_149:\n        /* \"#utility.yul\":7089:7159   */\n      swap8\n      pop\n        /* \"#utility.yul\":7182:7242   */\n      tag_150\n        /* \"#utility.yul\":7235:7241   */\n      dup4\n        /* \"#utility.yul\":7182:7242   */\n      tag_55\n      jump\t// in\n    tag_150:\n        /* \"#utility.yul\":7172:7242   */\n      swap3\n      pop\n        /* \"#utility.yul\":7028:7252   */\n      pop\n        /* \"#utility.yul\":7015:7016   */\n      0x01\n        /* \"#utility.yul\":7012:7013   */\n      dup2\n        /* \"#utility.yul\":7008:7017   */\n      add\n        /* \"#utility.yul\":7003:7017   */\n      swap1\n      pop\n        /* \"#utility.yul\":6968:7252   */\n      jump(tag_146)\n    tag_148:\n        /* \"#utility.yul\":6972:6986   */\n      pop\n        /* \"#utility.yul\":7268:7271   */\n      dup6\n        /* \"#utility.yul\":7261:7271   */\n      swap4\n      pop\n        /* \"#utility.yul\":6669:7277   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":6545:7277   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7283:7766   */\n    tag_26:\n        /* \"#utility.yul\":7454:7458   */\n      0x00\n        /* \"#utility.yul\":7492:7494   */\n      0x40\n        /* \"#utility.yul\":7481:7490   */\n      dup3\n        /* \"#utility.yul\":7477:7495   */\n      add\n        /* \"#utility.yul\":7469:7495   */\n      swap1\n      pop\n        /* \"#utility.yul\":7505:7576   */\n      tag_152\n        /* \"#utility.yul\":7573:7574   */\n      0x00\n        /* \"#utility.yul\":7562:7571   */\n      dup4\n        /* \"#utility.yul\":7558:7575   */\n      add\n        /* \"#utility.yul\":7549:7555   */\n      dup6\n        /* \"#utility.yul\":7505:7576   */\n      tag_49\n      jump\t// in\n    tag_152:\n        /* \"#utility.yul\":7623:7632   */\n      dup2\n        /* \"#utility.yul\":7617:7621   */\n      dup2\n        /* \"#utility.yul\":7613:7633   */\n      sub\n        /* \"#utility.yul\":7608:7610   */\n      0x20\n        /* \"#utility.yul\":7597:7606   */\n      dup4\n        /* \"#utility.yul\":7593:7611   */\n      add\n        /* \"#utility.yul\":7586:7634   */\n      mstore\n        /* \"#utility.yul\":7651:7759   */\n      tag_153\n        /* \"#utility.yul\":7754:7758   */\n      dup2\n        /* \"#utility.yul\":7745:7751   */\n      dup5\n        /* \"#utility.yul\":7651:7759   */\n      tag_56\n      jump\t// in\n    tag_153:\n        /* \"#utility.yul\":7643:7759   */\n      swap1\n      pop\n        /* \"#utility.yul\":7283:7766   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7772:7889   */\n    tag_57:\n        /* \"#utility.yul\":7881:7882   */\n      0x00\n        /* \"#utility.yul\":7878:7879   */\n      dup1\n        /* \"#utility.yul\":7871:7883   */\n      revert\n        /* \"#utility.yul\":7895:7997   */\n    tag_58:\n        /* \"#utility.yul\":7936:7942   */\n      0x00\n        /* \"#utility.yul\":7987:7989   */\n      0x1f\n        /* \"#utility.yul\":7983:7990   */\n      not\n        /* \"#utility.yul\":7978:7980   */\n      0x1f\n        /* \"#utility.yul\":7971:7976   */\n      dup4\n        /* \"#utility.yul\":7967:7981   */\n      add\n        /* \"#utility.yul\":7963:7991   */\n      and\n        /* \"#utility.yul\":7953:7991   */\n      swap1\n      pop\n        /* \"#utility.yul\":7895:7997   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8003:8284   */\n    tag_59:\n        /* \"#utility.yul\":8086:8113   */\n      tag_157\n        /* \"#utility.yul\":8108:8112   */\n      dup3\n        /* \"#utility.yul\":8086:8113   */\n      tag_58\n      jump\t// in\n    tag_157:\n        /* \"#utility.yul\":8078:8084   */\n      dup2\n        /* \"#utility.yul\":8074:8114   */\n      add\n        /* \"#utility.yul\":8216:8222   */\n      dup2\n        /* \"#utility.yul\":8204:8214   */\n      dup2\n        /* \"#utility.yul\":8201:8223   */\n      lt\n        /* \"#utility.yul\":8180:8198   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":8168:8178   */\n      dup3\n        /* \"#utility.yul\":8165:8199   */\n      gt\n        /* \"#utility.yul\":8162:8224   */\n      or\n        /* \"#utility.yul\":8159:8247   */\n      iszero\n      tag_158\n      jumpi\n        /* \"#utility.yul\":8227:8245   */\n      tag_159\n      tag_12\n      jump\t// in\n    tag_159:\n        /* \"#utility.yul\":8159:8247   */\n    tag_158:\n        /* \"#utility.yul\":8267:8277   */\n      dup1\n        /* \"#utility.yul\":8263:8265   */\n      0x40\n        /* \"#utility.yul\":8256:8278   */\n      mstore\n        /* \"#utility.yul\":8046:8284   */\n      pop\n        /* \"#utility.yul\":8003:8284   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8290:8419   */\n    tag_60:\n        /* \"#utility.yul\":8324:8330   */\n      0x00\n        /* \"#utility.yul\":8351:8371   */\n      tag_161\n      tag_33\n      jump\t// in\n    tag_161:\n        /* \"#utility.yul\":8341:8371   */\n      swap1\n      pop\n        /* \"#utility.yul\":8380:8413   */\n      tag_162\n        /* \"#utility.yul\":8408:8412   */\n      dup3\n        /* \"#utility.yul\":8400:8406   */\n      dup3\n        /* \"#utility.yul\":8380:8413   */\n      tag_59\n      jump\t// in\n    tag_162:\n        /* \"#utility.yul\":8290:8419   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8425:8736   */\n    tag_61:\n        /* \"#utility.yul\":8502:8506   */\n      0x00\n        /* \"#utility.yul\":8592:8610   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":8584:8590   */\n      dup3\n        /* \"#utility.yul\":8581:8611   */\n      gt\n        /* \"#utility.yul\":8578:8634   */\n      iszero\n      tag_164\n      jumpi\n        /* \"#utility.yul\":8614:8632   */\n      tag_165\n      tag_12\n      jump\t// in\n    tag_165:\n        /* \"#utility.yul\":8578:8634   */\n    tag_164:\n        /* \"#utility.yul\":8664:8668   */\n      0x20\n        /* \"#utility.yul\":8656:8662   */\n      dup3\n        /* \"#utility.yul\":8652:8669   */\n      mul\n        /* \"#utility.yul\":8644:8669   */\n      swap1\n      pop\n        /* \"#utility.yul\":8724:8728   */\n      0x20\n        /* \"#utility.yul\":8718:8722   */\n      dup2\n        /* \"#utility.yul\":8714:8729   */\n      add\n        /* \"#utility.yul\":8706:8729   */\n      swap1\n      pop\n        /* \"#utility.yul\":8425:8736   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8742:8859   */\n    tag_62:\n        /* \"#utility.yul\":8851:8852   */\n      0x00\n        /* \"#utility.yul\":8848:8849   */\n      dup1\n        /* \"#utility.yul\":8841:8853   */\n      revert\n        /* \"#utility.yul\":8865:8987   */\n    tag_63:\n        /* \"#utility.yul\":8938:8962   */\n      tag_168\n        /* \"#utility.yul\":8956:8961   */\n      dup2\n        /* \"#utility.yul\":8938:8962   */\n      tag_40\n      jump\t// in\n    tag_168:\n        /* \"#utility.yul\":8931:8936   */\n      dup2\n        /* \"#utility.yul\":8928:8963   */\n      eq\n        /* \"#utility.yul\":8918:8981   */\n      tag_169\n      jumpi\n        /* \"#utility.yul\":8977:8978   */\n      0x00\n        /* \"#utility.yul\":8974:8975   */\n      dup1\n        /* \"#utility.yul\":8967:8979   */\n      revert\n        /* \"#utility.yul\":8918:8981   */\n    tag_169:\n        /* \"#utility.yul\":8865:8987   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8993:9136   */\n    tag_64:\n        /* \"#utility.yul\":9050:9055   */\n      0x00\n        /* \"#utility.yul\":9081:9087   */\n      dup2\n        /* \"#utility.yul\":9075:9088   */\n      mload\n        /* \"#utility.yul\":9066:9088   */\n      swap1\n      pop\n        /* \"#utility.yul\":9097:9130   */\n      tag_171\n        /* \"#utility.yul\":9124:9129   */\n      dup2\n        /* \"#utility.yul\":9097:9130   */\n      tag_63\n      jump\t// in\n    tag_171:\n        /* \"#utility.yul\":8993:9136   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9159:9891   */\n    tag_65:\n        /* \"#utility.yul\":9266:9271   */\n      0x00\n        /* \"#utility.yul\":9291:9372   */\n      tag_173\n        /* \"#utility.yul\":9307:9371   */\n      tag_174\n        /* \"#utility.yul\":9364:9370   */\n      dup5\n        /* \"#utility.yul\":9307:9371   */\n      tag_61\n      jump\t// in\n    tag_174:\n        /* \"#utility.yul\":9291:9372   */\n      tag_60\n      jump\t// in\n    tag_173:\n        /* \"#utility.yul\":9282:9372   */\n      swap1\n      pop\n        /* \"#utility.yul\":9392:9397   */\n      dup1\n        /* \"#utility.yul\":9421:9427   */\n      dup4\n        /* \"#utility.yul\":9414:9419   */\n      dup3\n        /* \"#utility.yul\":9407:9428   */\n      mstore\n        /* \"#utility.yul\":9455:9459   */\n      0x20\n        /* \"#utility.yul\":9448:9453   */\n      dup3\n        /* \"#utility.yul\":9444:9460   */\n      add\n        /* \"#utility.yul\":9437:9460   */\n      swap1\n      pop\n        /* \"#utility.yul\":9508:9512   */\n      0x20\n        /* \"#utility.yul\":9500:9506   */\n      dup5\n        /* \"#utility.yul\":9496:9513   */\n      mul\n        /* \"#utility.yul\":9488:9494   */\n      dup4\n        /* \"#utility.yul\":9484:9514   */\n      add\n        /* \"#utility.yul\":9537:9540   */\n      dup6\n        /* \"#utility.yul\":9529:9535   */\n      dup2\n        /* \"#utility.yul\":9526:9541   */\n      gt\n        /* \"#utility.yul\":9523:9645   */\n      iszero\n      tag_175\n      jumpi\n        /* \"#utility.yul\":9556:9635   */\n      tag_176\n      tag_62\n      jump\t// in\n    tag_176:\n        /* \"#utility.yul\":9523:9645   */\n    tag_175:\n        /* \"#utility.yul\":9671:9677   */\n      dup4\n        /* \"#utility.yul\":9654:9885   */\n    tag_177:\n        /* \"#utility.yul\":9688:9694   */\n      dup2\n        /* \"#utility.yul\":9683:9686   */\n      dup2\n        /* \"#utility.yul\":9680:9695   */\n      lt\n        /* \"#utility.yul\":9654:9885   */\n      iszero\n      tag_179\n      jumpi\n        /* \"#utility.yul\":9763:9766   */\n      dup1\n        /* \"#utility.yul\":9792:9840   */\n      tag_180\n        /* \"#utility.yul\":9836:9839   */\n      dup9\n        /* \"#utility.yul\":9824:9834   */\n      dup3\n        /* \"#utility.yul\":9792:9840   */\n      tag_64\n      jump\t// in\n    tag_180:\n        /* \"#utility.yul\":9787:9790   */\n      dup5\n        /* \"#utility.yul\":9780:9841   */\n      mstore\n        /* \"#utility.yul\":9870:9874   */\n      0x20\n        /* \"#utility.yul\":9865:9868   */\n      dup5\n        /* \"#utility.yul\":9861:9875   */\n      add\n        /* \"#utility.yul\":9854:9875   */\n      swap4\n      pop\n        /* \"#utility.yul\":9730:9885   */\n      pop\n        /* \"#utility.yul\":9714:9718   */\n      0x20\n        /* \"#utility.yul\":9709:9712   */\n      dup2\n        /* \"#utility.yul\":9705:9719   */\n      add\n        /* \"#utility.yul\":9698:9719   */\n      swap1\n      pop\n        /* \"#utility.yul\":9654:9885   */\n      jump(tag_177)\n    tag_179:\n        /* \"#utility.yul\":9658:9679   */\n      pop\n        /* \"#utility.yul\":9272:9891   */\n      pop\n      pop\n        /* \"#utility.yul\":9159:9891   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9914:10299   */\n    tag_66:\n        /* \"#utility.yul\":9996:10001   */\n      0x00\n        /* \"#utility.yul\":10045:10048   */\n      dup3\n        /* \"#utility.yul\":10038:10042   */\n      0x1f\n        /* \"#utility.yul\":10030:10036   */\n      dup4\n        /* \"#utility.yul\":10026:10043   */\n      add\n        /* \"#utility.yul\":10022:10049   */\n      slt\n        /* \"#utility.yul\":10012:10134   */\n      tag_182\n      jumpi\n        /* \"#utility.yul\":10053:10132   */\n      tag_183\n      tag_57\n      jump\t// in\n    tag_183:\n        /* \"#utility.yul\":10012:10134   */\n    tag_182:\n        /* \"#utility.yul\":10163:10169   */\n      dup2\n        /* \"#utility.yul\":10157:10170   */\n      mload\n        /* \"#utility.yul\":10188:10293   */\n      tag_184\n        /* \"#utility.yul\":10289:10292   */\n      dup5\n        /* \"#utility.yul\":10281:10287   */\n      dup3\n        /* \"#utility.yul\":10274:10278   */\n      0x20\n        /* \"#utility.yul\":10266:10272   */\n      dup7\n        /* \"#utility.yul\":10262:10279   */\n      add\n        /* \"#utility.yul\":10188:10293   */\n      tag_65\n      jump\t// in\n    tag_184:\n        /* \"#utility.yul\":10179:10293   */\n      swap2\n      pop\n        /* \"#utility.yul\":10002:10299   */\n      pop\n        /* \"#utility.yul\":9914:10299   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10305:10859   */\n    tag_30:\n        /* \"#utility.yul\":10400:10406   */\n      0x00\n        /* \"#utility.yul\":10449:10451   */\n      0x20\n        /* \"#utility.yul\":10437:10446   */\n      dup3\n        /* \"#utility.yul\":10428:10435   */\n      dup5\n        /* \"#utility.yul\":10424:10447   */\n      sub\n        /* \"#utility.yul\":10420:10452   */\n      slt\n        /* \"#utility.yul\":10417:10536   */\n      iszero\n      tag_186\n      jumpi\n        /* \"#utility.yul\":10455:10534   */\n      tag_187\n      tag_34\n      jump\t// in\n    tag_187:\n        /* \"#utility.yul\":10417:10536   */\n    tag_186:\n        /* \"#utility.yul\":10596:10597   */\n      0x00\n        /* \"#utility.yul\":10585:10594   */\n      dup3\n        /* \"#utility.yul\":10581:10598   */\n      add\n        /* \"#utility.yul\":10575:10599   */\n      mload\n        /* \"#utility.yul\":10626:10644   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":10618:10624   */\n      dup2\n        /* \"#utility.yul\":10615:10645   */\n      gt\n        /* \"#utility.yul\":10612:10729   */\n      iszero\n      tag_188\n      jumpi\n        /* \"#utility.yul\":10648:10727   */\n      tag_189\n      tag_35\n      jump\t// in\n    tag_189:\n        /* \"#utility.yul\":10612:10729   */\n    tag_188:\n        /* \"#utility.yul\":10753:10842   */\n      tag_190\n        /* \"#utility.yul\":10834:10841   */\n      dup5\n        /* \"#utility.yul\":10825:10831   */\n      dup3\n        /* \"#utility.yul\":10814:10823   */\n      dup6\n        /* \"#utility.yul\":10810:10832   */\n      add\n        /* \"#utility.yul\":10753:10842   */\n      tag_66\n      jump\t// in\n    tag_190:\n        /* \"#utility.yul\":10743:10842   */\n      swap2\n      pop\n        /* \"#utility.yul\":10546:10852   */\n      pop\n        /* \"#utility.yul\":10305:10859   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122003a70eb0b7e39a0b3950daba934a03f1aeb6788c64cbed7bd04851de3c00f81064736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6108b9610053600b82828239805160001a607314610046577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100355760003560e01c8063c361e0b11461003a575b600080fd5b610054600480360381019061004f91906102ef565b61006a565b604051610061919061035b565b60405180910390f35b600080600267ffffffffffffffff81111561008857610087610376565b5b6040519080825280602002602001820160405280156100b65781602001602082028036833780820191505090505b50905083816000815181106100ce576100cd6103a5565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050828160018151811061011d5761011c6103a5565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505060008573ffffffffffffffffffffffffffffffffffffffff1663d06ca61f8673ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa1580156101c0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101e4919061040d565b600a6101f0919061059c565b846040518363ffffffff1660e01b815260040161020e9291906106b4565b600060405180830381865afa15801561022b573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190610254919061083a565b90508060018151811061026a576102696103a5565b5b6020026020010151925050509392505050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006102bc82610291565b9050919050565b6102cc816102b1565b81146102d757600080fd5b50565b6000813590506102e9816102c3565b92915050565b60008060006060848603121561030857610307610287565b5b6000610316868287016102da565b9350506020610327868287016102da565b9250506040610338868287016102da565b9150509250925092565b6000819050919050565b61035581610342565b82525050565b6000602082019050610370600083018461034c565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600060ff82169050919050565b6103ea816103d4565b81146103f557600080fd5b50565b600081519050610407816103e1565b92915050565b60006020828403121561042357610422610287565b5b6000610431848285016103f8565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60008160011c9050919050565b6000808291508390505b60018511156104c05780860481111561049c5761049b61043a565b5b60018516156104ab5780820291505b80810290506104b985610469565b9450610480565b94509492505050565b6000826104d95760019050610595565b816104e75760009050610595565b81600181146104fd576002811461050757610536565b6001915050610595565b60ff8411156105195761051861043a565b5b8360020a9150848211156105305761052f61043a565b5b50610595565b5060208310610133831016604e8410600b841016171561056b5782820a9050838111156105665761056561043a565b5b610595565b6105788484846001610476565b9250905081840481111561058f5761058e61043a565b5b81810290505b9392505050565b60006105a782610342565b91506105b2836103d4565b92506105df7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff84846104c9565b905092915050565b6105f081610342565b82525050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b61062b816102b1565b82525050565b600061063d8383610622565b60208301905092915050565b6000602082019050919050565b6000610661826105f6565b61066b8185610601565b935061067683610612565b8060005b838110156106a757815161068e8882610631565b975061069983610649565b92505060018101905061067a565b5085935050505092915050565b60006040820190506106c960008301856105e7565b81810360208301526106db8184610656565b90509392505050565b600080fd5b6000601f19601f8301169050919050565b610703826106e9565b810181811067ffffffffffffffff8211171561072257610721610376565b5b80604052505050565b600061073561027d565b905061074182826106fa565b919050565b600067ffffffffffffffff82111561076157610760610376565b5b602082029050602081019050919050565b600080fd5b61078081610342565b811461078b57600080fd5b50565b60008151905061079d81610777565b92915050565b60006107b66107b184610746565b61072b565b905080838252602082019050602084028301858111156107d9576107d8610772565b5b835b8181101561080257806107ee888261078e565b8452602084019350506020810190506107db565b5050509392505050565b600082601f830112610821576108206106e4565b5b81516108318482602086016107a3565b91505092915050565b6000602082840312156108505761084f610287565b5b600082015167ffffffffffffffff81111561086e5761086d61028c565b5b61087a8482850161080c565b9150509291505056fea264697066735822122003a70eb0b7e39a0b3950daba934a03f1aeb6788c64cbed7bd04851de3c00f81064736f6c63430008110033",
							"opcodes": "PUSH2 0x8B9 PUSH2 0x53 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH2 0x46 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x35 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xC361E0B1 EQ PUSH2 0x3A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x54 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4F SWAP2 SWAP1 PUSH2 0x2EF JUMP JUMPDEST PUSH2 0x6A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x61 SWAP2 SWAP1 PUSH2 0x35B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x88 JUMPI PUSH2 0x87 PUSH2 0x376 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xB6 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP DUP4 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xCE JUMPI PUSH2 0xCD PUSH2 0x3A5 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP3 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x11D JUMPI PUSH2 0x11C PUSH2 0x3A5 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xD06CA61F DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1C0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1E4 SWAP2 SWAP1 PUSH2 0x40D JUMP JUMPDEST PUSH1 0xA PUSH2 0x1F0 SWAP2 SWAP1 PUSH2 0x59C JUMP JUMPDEST DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x20E SWAP3 SWAP2 SWAP1 PUSH2 0x6B4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x22B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x254 SWAP2 SWAP1 PUSH2 0x83A JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x26A JUMPI PUSH2 0x269 PUSH2 0x3A5 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2BC DUP3 PUSH2 0x291 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2CC DUP2 PUSH2 0x2B1 JUMP JUMPDEST DUP2 EQ PUSH2 0x2D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2E9 DUP2 PUSH2 0x2C3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x308 JUMPI PUSH2 0x307 PUSH2 0x287 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x316 DUP7 DUP3 DUP8 ADD PUSH2 0x2DA JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x327 DUP7 DUP3 DUP8 ADD PUSH2 0x2DA JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x338 DUP7 DUP3 DUP8 ADD PUSH2 0x2DA JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x355 DUP2 PUSH2 0x342 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x370 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x34C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3EA DUP2 PUSH2 0x3D4 JUMP JUMPDEST DUP2 EQ PUSH2 0x3F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x407 DUP2 PUSH2 0x3E1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x423 JUMPI PUSH2 0x422 PUSH2 0x287 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x431 DUP5 DUP3 DUP6 ADD PUSH2 0x3F8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH2 0x4C0 JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH2 0x49C JUMPI PUSH2 0x49B PUSH2 0x43A JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x4AB JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH2 0x4B9 DUP6 PUSH2 0x469 JUMP JUMPDEST SWAP5 POP PUSH2 0x480 JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x4D9 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x595 JUMP JUMPDEST DUP2 PUSH2 0x4E7 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x595 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x4FD JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x507 JUMPI PUSH2 0x536 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x595 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x519 JUMPI PUSH2 0x518 PUSH2 0x43A JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH2 0x530 JUMPI PUSH2 0x52F PUSH2 0x43A JUMP JUMPDEST JUMPDEST POP PUSH2 0x595 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x56B JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0x566 JUMPI PUSH2 0x565 PUSH2 0x43A JUMP JUMPDEST JUMPDEST PUSH2 0x595 JUMP JUMPDEST PUSH2 0x578 DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0x476 JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH2 0x58F JUMPI PUSH2 0x58E PUSH2 0x43A JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5A7 DUP3 PUSH2 0x342 JUMP JUMPDEST SWAP2 POP PUSH2 0x5B2 DUP4 PUSH2 0x3D4 JUMP JUMPDEST SWAP3 POP PUSH2 0x5DF PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH2 0x4C9 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x5F0 DUP2 PUSH2 0x342 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x62B DUP2 PUSH2 0x2B1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x63D DUP4 DUP4 PUSH2 0x622 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x661 DUP3 PUSH2 0x5F6 JUMP JUMPDEST PUSH2 0x66B DUP2 DUP6 PUSH2 0x601 JUMP JUMPDEST SWAP4 POP PUSH2 0x676 DUP4 PUSH2 0x612 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x6A7 JUMPI DUP2 MLOAD PUSH2 0x68E DUP9 DUP3 PUSH2 0x631 JUMP JUMPDEST SWAP8 POP PUSH2 0x699 DUP4 PUSH2 0x649 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x67A JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x6C9 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x5E7 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x6DB DUP2 DUP5 PUSH2 0x656 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x703 DUP3 PUSH2 0x6E9 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x722 JUMPI PUSH2 0x721 PUSH2 0x376 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x735 PUSH2 0x27D JUMP JUMPDEST SWAP1 POP PUSH2 0x741 DUP3 DUP3 PUSH2 0x6FA JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x761 JUMPI PUSH2 0x760 PUSH2 0x376 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x780 DUP2 PUSH2 0x342 JUMP JUMPDEST DUP2 EQ PUSH2 0x78B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x79D DUP2 PUSH2 0x777 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7B6 PUSH2 0x7B1 DUP5 PUSH2 0x746 JUMP JUMPDEST PUSH2 0x72B JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x7D9 JUMPI PUSH2 0x7D8 PUSH2 0x772 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x802 JUMPI DUP1 PUSH2 0x7EE DUP9 DUP3 PUSH2 0x78E JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x7DB JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x821 JUMPI PUSH2 0x820 PUSH2 0x6E4 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0x831 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x7A3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x850 JUMPI PUSH2 0x84F PUSH2 0x287 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x86E JUMPI PUSH2 0x86D PUSH2 0x28C JUMP JUMPDEST JUMPDEST PUSH2 0x87A DUP5 DUP3 DUP6 ADD PUSH2 0x80C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SUB 0xA7 0xE 0xB0 0xB7 0xE3 SWAP11 SIGNEXTEND CODECOPY POP 0xDA 0xBA SWAP4 0x4A SUB CALL 0xAE 0xB6 PUSH25 0x8C64CBED7BD04851DE3C00F81064736F6C6343000811003300 ",
							"sourceMap": "170:356:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@Price_1135": {
									"entryPoint": 106,
									"id": 1135,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr_fromMemory": {
									"entryPoint": 1955,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 730,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_array$_t_uint256_$dyn_memory_ptr_fromMemory": {
									"entryPoint": 2060,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 1934,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint8_fromMemory": {
									"entryPoint": 1016,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_address": {
									"entryPoint": 751,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_array$_t_uint256_$dyn_memory_ptr_fromMemory": {
									"entryPoint": 2106,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint8_fromMemory": {
									"entryPoint": 1037,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encodeUpdatedPos_t_address_to_t_address": {
									"entryPoint": 1585,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address": {
									"entryPoint": 1570,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack": {
									"entryPoint": 1622,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 1511,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack_library": {
									"entryPoint": 844,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_library_reversed": {
									"entryPoint": 859,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_array$_t_address_$dyn_memory_ptr__to_t_uint256_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 1716,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 1835,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 637,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 1862,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 1554,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 1526,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_nextElement_t_array$_t_address_$dyn_memory_ptr": {
									"entryPoint": 1609,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack": {
									"entryPoint": 1537,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_helper": {
									"entryPoint": 1142,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 2
								},
								"checked_exp_t_uint256_t_uint8": {
									"entryPoint": 1436,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_unsigned": {
									"entryPoint": 1225,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 689,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 657,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 834,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 980,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 1786,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"panic_error_0x11": {
									"entryPoint": 1082,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 933,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 886,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 1764,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
									"entryPoint": 1906,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 652,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 647,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 1769,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_right_1_unsigned": {
									"entryPoint": 1129,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"validator_revert_t_address": {
									"entryPoint": 707,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 1911,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint8": {
									"entryPoint": 993,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:10862:13",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:13"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:13"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:13",
														"type": ""
													}
												],
												"src": "7:75:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:13"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:13"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:13",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:13",
														"type": ""
													}
												],
												"src": "334:126:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:13",
														"type": ""
													}
												],
												"src": "466:96:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:79:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "668:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "677:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:43:13"
															},
															"nodeType": "YulIf",
															"src": "621:63:13"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:13",
														"type": ""
													}
												],
												"src": "568:122:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "748:87:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "758:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "767:20:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "796:33:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "796:33:13"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "726:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "734:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "742:5:13",
														"type": ""
													}
												],
												"src": "696:139:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "941:519:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "987:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "989:77:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "989:79:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "989:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "962:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "971:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "958:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "958:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "983:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "954:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "954:32:13"
															},
															"nodeType": "YulIf",
															"src": "951:119:13"
														},
														{
															"nodeType": "YulBlock",
															"src": "1080:117:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1095:15:13",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1109:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1099:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1124:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1159:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1170:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1155:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1155:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1179:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1134:20:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1134:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1124:6:13"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1207:118:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1222:16:13",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1236:2:13",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1226:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1252:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1287:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1298:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1283:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1283:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1307:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1262:20:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1262:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1252:6:13"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1335:118:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1350:16:13",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1364:2:13",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1354:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1380:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1415:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1426:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1411:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1411:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1435:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1390:20:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1390:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "1380:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "895:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "906:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "918:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "926:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "934:6:13",
														"type": ""
													}
												],
												"src": "841:619:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1511:32:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1521:16:13",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1532:5:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1521:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1493:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1503:7:13",
														"type": ""
													}
												],
												"src": "1466:77:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1622:53:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1639:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1662:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1644:17:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1644:24:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1632:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1632:37:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1632:37:13"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack_library",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1610:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1617:3:13",
														"type": ""
													}
												],
												"src": "1549:126:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1787:132:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1797:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1809:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1820:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1805:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1805:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1797:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1885:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1898:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1909:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1894:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1894:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack_library",
																	"nodeType": "YulIdentifier",
																	"src": "1833:51:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1833:79:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1833:79:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_library_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1759:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1771:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1782:4:13",
														"type": ""
													}
												],
												"src": "1681:238:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1953:152:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1970:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1973:77:13",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1963:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1963:88:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1963:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2067:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2070:4:13",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2060:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2060:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2060:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2091:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2094:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2084:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2084:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2084:15:13"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "1925:180:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2139:152:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2156:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2159:77:13",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2149:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2149:88:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2149:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2253:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2256:4:13",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2246:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2246:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2246:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2277:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2280:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2270:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2270:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2270:15:13"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "2111:180:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2340:43:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2350:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2365:5:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2372:4:13",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2361:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2361:16:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2350:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2322:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2332:7:13",
														"type": ""
													}
												],
												"src": "2297:86:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2430:77:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2485:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2494:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2497:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2487:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2487:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2487:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2453:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2476:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint8",
																					"nodeType": "YulIdentifier",
																					"src": "2460:15:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2460:22:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2450:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2450:33:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2443:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2443:41:13"
															},
															"nodeType": "YulIf",
															"src": "2440:61:13"
														}
													]
												},
												"name": "validator_revert_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2423:5:13",
														"type": ""
													}
												],
												"src": "2389:118:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2574:78:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2584:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2599:6:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2593:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2593:13:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2584:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2640:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint8",
																	"nodeType": "YulIdentifier",
																	"src": "2615:24:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2615:31:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2615:31:13"
														}
													]
												},
												"name": "abi_decode_t_uint8_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2552:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2560:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2568:5:13",
														"type": ""
													}
												],
												"src": "2513:139:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2733:272:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2779:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2781:77:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2781:79:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2781:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2754:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2763:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2750:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2750:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2775:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2746:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2746:32:13"
															},
															"nodeType": "YulIf",
															"src": "2743:119:13"
														},
														{
															"nodeType": "YulBlock",
															"src": "2872:126:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2887:15:13",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2901:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2891:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2916:72:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2960:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2971:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2956:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2956:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2980:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint8_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "2926:29:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2926:62:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2916:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint8_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2703:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2714:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2726:6:13",
														"type": ""
													}
												],
												"src": "2658:347:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3039:152:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3056:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3059:77:13",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3049:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3049:88:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3049:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3153:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3156:4:13",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3146:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3146:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3146:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3177:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3180:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3170:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3170:15:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3170:15:13"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "3011:180:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3248:51:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3258:34:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3283:1:13",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3286:5:13"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "3279:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3279:13:13"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "3258:8:13"
																}
															]
														}
													]
												},
												"name": "shift_right_1_unsigned",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3229:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "3239:8:13",
														"type": ""
													}
												],
												"src": "3197:102:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3378:775:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3388:15:13",
															"value": {
																"name": "_power",
																"nodeType": "YulIdentifier",
																"src": "3397:6:13"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "3388:5:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3412:14:13",
															"value": {
																"name": "_base",
																"nodeType": "YulIdentifier",
																"src": "3421:5:13"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nodeType": "YulIdentifier",
																	"src": "3412:4:13"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3470:677:13",
																"statements": [
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "3558:22:13",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nodeType": "YulIdentifier",
																							"src": "3560:16:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3560:18:13"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "3560:18:13"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "3536:4:13"
																				},
																				{
																					"arguments": [
																						{
																							"name": "max",
																							"nodeType": "YulIdentifier",
																							"src": "3546:3:13"
																						},
																						{
																							"name": "base",
																							"nodeType": "YulIdentifier",
																							"src": "3551:4:13"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nodeType": "YulIdentifier",
																						"src": "3542:3:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3542:14:13"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nodeType": "YulIdentifier",
																				"src": "3533:2:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3533:24:13"
																		},
																		"nodeType": "YulIf",
																		"src": "3530:50:13"
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "3625:419:13",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "4005:25:13",
																					"value": {
																						"arguments": [
																							{
																								"name": "power",
																								"nodeType": "YulIdentifier",
																								"src": "4018:5:13"
																							},
																							{
																								"name": "base",
																								"nodeType": "YulIdentifier",
																								"src": "4025:4:13"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nodeType": "YulIdentifier",
																							"src": "4014:3:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4014:16:13"
																					},
																					"variableNames": [
																						{
																							"name": "power",
																							"nodeType": "YulIdentifier",
																							"src": "4005:5:13"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "3600:8:13"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3610:1:13",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "3596:3:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3596:16:13"
																		},
																		"nodeType": "YulIf",
																		"src": "3593:451:13"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "4057:23:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "4069:4:13"
																				},
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "4075:4:13"
																				}
																			],
																			"functionName": {
																				"name": "mul",
																				"nodeType": "YulIdentifier",
																				"src": "4065:3:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4065:15:13"
																		},
																		"variableNames": [
																			{
																				"name": "base",
																				"nodeType": "YulIdentifier",
																				"src": "4057:4:13"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "4093:44:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "4128:8:13"
																				}
																			],
																			"functionName": {
																				"name": "shift_right_1_unsigned",
																				"nodeType": "YulIdentifier",
																				"src": "4105:22:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4105:32:13"
																		},
																		"variableNames": [
																			{
																				"name": "exponent",
																				"nodeType": "YulIdentifier",
																				"src": "4093:8:13"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "3446:8:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3456:1:13",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3443:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3443:15:13"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "3459:2:13",
																"statements": []
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "3439:3:13",
																"statements": []
															},
															"src": "3435:712:13"
														}
													]
												},
												"name": "checked_exp_helper",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "_power",
														"nodeType": "YulTypedName",
														"src": "3333:6:13",
														"type": ""
													},
													{
														"name": "_base",
														"nodeType": "YulTypedName",
														"src": "3341:5:13",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "3348:8:13",
														"type": ""
													},
													{
														"name": "max",
														"nodeType": "YulTypedName",
														"src": "3358:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "3366:5:13",
														"type": ""
													},
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "3373:4:13",
														"type": ""
													}
												],
												"src": "3305:848:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4219:1013:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4414:20:13",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "4416:10:13",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "4425:1:13",
																			"type": "",
																			"value": "1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "4416:5:13"
																			}
																		]
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "4427:5:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "4404:8:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4397:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4397:16:13"
															},
															"nodeType": "YulIf",
															"src": "4394:40:13"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4459:20:13",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "4461:10:13",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "4470:1:13",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "4461:5:13"
																			}
																		]
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "4472:5:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "4453:4:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4446:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4446:12:13"
															},
															"nodeType": "YulIf",
															"src": "4443:36:13"
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "4589:20:13",
																		"statements": [
																			{
																				"nodeType": "YulAssignment",
																				"src": "4591:10:13",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4600:1:13",
																					"type": "",
																					"value": "1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nodeType": "YulIdentifier",
																						"src": "4591:5:13"
																					}
																				]
																			},
																			{
																				"nodeType": "YulLeave",
																				"src": "4602:5:13"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "4582:27:13",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4587:1:13",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "4633:176:13",
																		"statements": [
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "4668:22:13",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nodeType": "YulIdentifier",
																									"src": "4670:16:13"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4670:18:13"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "4670:18:13"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nodeType": "YulIdentifier",
																							"src": "4653:8:13"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "4663:3:13",
																							"type": "",
																							"value": "255"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nodeType": "YulIdentifier",
																						"src": "4650:2:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4650:17:13"
																				},
																				"nodeType": "YulIf",
																				"src": "4647:43:13"
																			},
																			{
																				"nodeType": "YulAssignment",
																				"src": "4703:25:13",
																				"value": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "4716:1:13",
																							"type": "",
																							"value": "2"
																						},
																						{
																							"name": "exponent",
																							"nodeType": "YulIdentifier",
																							"src": "4719:8:13"
																						}
																					],
																					"functionName": {
																						"name": "exp",
																						"nodeType": "YulIdentifier",
																						"src": "4712:3:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4712:16:13"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nodeType": "YulIdentifier",
																						"src": "4703:5:13"
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "4759:22:13",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nodeType": "YulIdentifier",
																									"src": "4761:16:13"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4761:18:13"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "4761:18:13"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "power",
																							"nodeType": "YulIdentifier",
																							"src": "4747:5:13"
																						},
																						{
																							"name": "max",
																							"nodeType": "YulIdentifier",
																							"src": "4754:3:13"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nodeType": "YulIdentifier",
																						"src": "4744:2:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4744:14:13"
																				},
																				"nodeType": "YulIf",
																				"src": "4741:40:13"
																			},
																			{
																				"nodeType": "YulLeave",
																				"src": "4794:5:13"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "4618:191:13",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4623:1:13",
																		"type": "",
																		"value": "2"
																	}
																}
															],
															"expression": {
																"name": "base",
																"nodeType": "YulIdentifier",
																"src": "4539:4:13"
															},
															"nodeType": "YulSwitch",
															"src": "4532:277:13"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4941:123:13",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "4955:28:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nodeType": "YulIdentifier",
																					"src": "4968:4:13"
																				},
																				{
																					"name": "exponent",
																					"nodeType": "YulIdentifier",
																					"src": "4974:8:13"
																				}
																			],
																			"functionName": {
																				"name": "exp",
																				"nodeType": "YulIdentifier",
																				"src": "4964:3:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4964:19:13"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "4955:5:13"
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "5014:22:13",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nodeType": "YulIdentifier",
																							"src": "5016:16:13"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "5016:18:13"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "5016:18:13"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "power",
																					"nodeType": "YulIdentifier",
																					"src": "5002:5:13"
																				},
																				{
																					"name": "max",
																					"nodeType": "YulIdentifier",
																					"src": "5009:3:13"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nodeType": "YulIdentifier",
																				"src": "4999:2:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4999:14:13"
																		},
																		"nodeType": "YulIf",
																		"src": "4996:40:13"
																	},
																	{
																		"nodeType": "YulLeave",
																		"src": "5049:5:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nodeType": "YulIdentifier",
																						"src": "4844:4:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4850:2:13",
																						"type": "",
																						"value": "11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "4841:2:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4841:12:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nodeType": "YulIdentifier",
																						"src": "4858:8:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4868:2:13",
																						"type": "",
																						"value": "78"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "4855:2:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4855:16:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4837:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4837:35:13"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nodeType": "YulIdentifier",
																						"src": "4893:4:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4899:3:13",
																						"type": "",
																						"value": "307"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "4890:2:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4890:13:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nodeType": "YulIdentifier",
																						"src": "4908:8:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4918:2:13",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "4905:2:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4905:16:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4886:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4886:36:13"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "4821:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4821:111:13"
															},
															"nodeType": "YulIf",
															"src": "4818:246:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5074:57:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5108:1:13",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "5111:4:13"
																	},
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "5117:8:13"
																	},
																	{
																		"name": "max",
																		"nodeType": "YulIdentifier",
																		"src": "5127:3:13"
																	}
																],
																"functionName": {
																	"name": "checked_exp_helper",
																	"nodeType": "YulIdentifier",
																	"src": "5089:18:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5089:42:13"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "5074:5:13"
																},
																{
																	"name": "base",
																	"nodeType": "YulIdentifier",
																	"src": "5081:4:13"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5170:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "5172:16:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5172:18:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5172:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "power",
																		"nodeType": "YulIdentifier",
																		"src": "5147:5:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "max",
																				"nodeType": "YulIdentifier",
																				"src": "5158:3:13"
																			},
																			{
																				"name": "base",
																				"nodeType": "YulIdentifier",
																				"src": "5163:4:13"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "5154:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5154:14:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5144:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5144:25:13"
															},
															"nodeType": "YulIf",
															"src": "5141:51:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5201:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "power",
																		"nodeType": "YulIdentifier",
																		"src": "5214:5:13"
																	},
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "5221:4:13"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "5210:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5210:16:13"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "5201:5:13"
																}
															]
														}
													]
												},
												"name": "checked_exp_unsigned",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "4189:4:13",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "4195:8:13",
														"type": ""
													},
													{
														"name": "max",
														"nodeType": "YulTypedName",
														"src": "4205:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "4213:5:13",
														"type": ""
													}
												],
												"src": "4159:1073:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5302:217:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5312:31:13",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "5338:4:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5320:17:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5320:23:13"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nodeType": "YulIdentifier",
																	"src": "5312:4:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5352:37:13",
															"value": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "5380:8:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint8",
																	"nodeType": "YulIdentifier",
																	"src": "5364:15:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5364:25:13"
															},
															"variableNames": [
																{
																	"name": "exponent",
																	"nodeType": "YulIdentifier",
																	"src": "5352:8:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5399:113:13",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "5429:4:13"
																	},
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "5435:8:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5445:66:13",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "checked_exp_unsigned",
																	"nodeType": "YulIdentifier",
																	"src": "5408:20:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5408:104:13"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "5399:5:13"
																}
															]
														}
													]
												},
												"name": "checked_exp_t_uint256_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nodeType": "YulTypedName",
														"src": "5277:4:13",
														"type": ""
													},
													{
														"name": "exponent",
														"nodeType": "YulTypedName",
														"src": "5283:8:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nodeType": "YulTypedName",
														"src": "5296:5:13",
														"type": ""
													}
												],
												"src": "5238:281:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5590:53:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5607:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5630:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "5612:17:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5612:24:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5600:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5600:37:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5600:37:13"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5578:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5585:3:13",
														"type": ""
													}
												],
												"src": "5525:118:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5723:40:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5734:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5750:5:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "5744:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5744:12:13"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "5734:6:13"
																}
															]
														}
													]
												},
												"name": "array_length_t_array$_t_address_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5706:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "5716:6:13",
														"type": ""
													}
												],
												"src": "5649:114:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5880:73:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5897:3:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5902:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5890:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5890:19:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5890:19:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5918:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5937:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5942:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5933:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5933:14:13"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "5918:11:13"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5852:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "5857:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "5868:11:13",
														"type": ""
													}
												],
												"src": "5769:184:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6031:60:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6041:11:13",
															"value": {
																"name": "ptr",
																"nodeType": "YulIdentifier",
																"src": "6049:3:13"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "6041:4:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6062:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "6074:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6079:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6070:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6070:14:13"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "6062:4:13"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_array$_t_address_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "6018:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "6026:4:13",
														"type": ""
													}
												],
												"src": "5959:132:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6152:53:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6169:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6192:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "6174:17:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6174:24:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6162:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6162:37:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6162:37:13"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6140:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6147:3:13",
														"type": ""
													}
												],
												"src": "6097:108:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6291:99:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6335:6:13"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6343:3:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "6301:33:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6301:46:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6301:46:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6356:28:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6374:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6379:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6370:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6370:14:13"
															},
															"variableNames": [
																{
																	"name": "updatedPos",
																	"nodeType": "YulIdentifier",
																	"src": "6356:10:13"
																}
															]
														}
													]
												},
												"name": "abi_encodeUpdatedPos_t_address_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6264:6:13",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6272:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updatedPos",
														"nodeType": "YulTypedName",
														"src": "6280:10:13",
														"type": ""
													}
												],
												"src": "6211:179:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6471:38:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6481:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "6493:3:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6498:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6489:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6489:14:13"
															},
															"variableNames": [
																{
																	"name": "next",
																	"nodeType": "YulIdentifier",
																	"src": "6481:4:13"
																}
															]
														}
													]
												},
												"name": "array_nextElement_t_array$_t_address_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "6458:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "next",
														"nodeType": "YulTypedName",
														"src": "6466:4:13",
														"type": ""
													}
												],
												"src": "6396:113:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6669:608:13",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6679:68:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6741:5:13"
																	}
																],
																"functionName": {
																	"name": "array_length_t_array$_t_address_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "6693:47:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6693:54:13"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "6683:6:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6756:93:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6837:3:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6842:6:13"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6763:73:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6763:86:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "6756:3:13"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6858:71:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6923:5:13"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_t_array$_t_address_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "6873:49:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6873:56:13"
															},
															"variables": [
																{
																	"name": "baseRef",
																	"nodeType": "YulTypedName",
																	"src": "6862:7:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6938:21:13",
															"value": {
																"name": "baseRef",
																"nodeType": "YulIdentifier",
																"src": "6952:7:13"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "6942:6:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7028:224:13",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "7042:34:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "7069:6:13"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "7063:5:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7063:13:13"
																		},
																		"variables": [
																			{
																				"name": "elementValue0",
																				"nodeType": "YulTypedName",
																				"src": "7046:13:13",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "7089:70:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "elementValue0",
																					"nodeType": "YulIdentifier",
																					"src": "7140:13:13"
																				},
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "7155:3:13"
																				}
																			],
																			"functionName": {
																				"name": "abi_encodeUpdatedPos_t_address_to_t_address",
																				"nodeType": "YulIdentifier",
																				"src": "7096:43:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7096:63:13"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "7089:3:13"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "7172:70:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "7235:6:13"
																				}
																			],
																			"functionName": {
																				"name": "array_nextElement_t_array$_t_address_$dyn_memory_ptr",
																				"nodeType": "YulIdentifier",
																				"src": "7182:52:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7182:60:13"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "7172:6:13"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "6990:1:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6993:6:13"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "6987:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "6987:13:13"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "7001:18:13",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "7003:14:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "7012:1:13"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7015:1:13",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "7008:3:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7008:9:13"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "7003:1:13"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "6972:14:13",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "6974:10:13",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "6983:1:13",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nodeType": "YulTypedName",
																				"src": "6978:1:13",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "6968:284:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7261:10:13",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "7268:3:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "7261:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6648:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6655:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6664:3:13",
														"type": ""
													}
												],
												"src": "6545:732:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7459:307:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7469:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7481:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7492:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7477:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7477:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7469:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7549:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7562:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7573:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7558:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7558:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7505:43:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7505:71:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7505:71:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7597:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7608:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7593:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7593:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "7617:4:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7623:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7613:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7613:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7586:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7586:48:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7586:48:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7643:116:13",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "7745:6:13"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "7754:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7651:93:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7651:108:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7643:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_array$_t_address_$dyn_memory_ptr__to_t_uint256_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7423:9:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7435:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7443:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7454:4:13",
														"type": ""
													}
												],
												"src": "7283:483:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7861:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7878:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7881:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7871:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7871:12:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7871:12:13"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "7772:117:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7943:54:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7953:38:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7971:5:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7978:2:13",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7967:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7967:14:13"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7987:2:13",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "7983:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7983:7:13"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "7963:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "7963:28:13"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "7953:6:13"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7926:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "7936:6:13",
														"type": ""
													}
												],
												"src": "7895:102:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8046:238:13",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8056:58:13",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "8078:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "8108:4:13"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "8086:21:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8086:27:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8074:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8074:40:13"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "8060:10:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8225:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "8227:16:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8227:18:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8227:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "8168:10:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8180:18:13",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "8165:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8165:34:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "8204:10:13"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "8216:6:13"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "8201:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8201:22:13"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "8162:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8162:62:13"
															},
															"nodeType": "YulIf",
															"src": "8159:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8263:2:13",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "8267:10:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8256:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8256:22:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8256:22:13"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "8032:6:13",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "8040:4:13",
														"type": ""
													}
												],
												"src": "8003:281:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8331:88:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8341:30:13",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "8351:18:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8351:20:13"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "8341:6:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "8400:6:13"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "8408:4:13"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "8380:19:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8380:33:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8380:33:13"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "8315:4:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "8324:6:13",
														"type": ""
													}
												],
												"src": "8290:129:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8507:229:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8612:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "8614:16:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8614:18:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8614:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8584:6:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8592:18:13",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "8581:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8581:30:13"
															},
															"nodeType": "YulIf",
															"src": "8578:56:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8644:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8656:6:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8664:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "8652:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8652:17:13"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "8644:4:13"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8706:23:13",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "8718:4:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8724:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8714:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8714:15:13"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "8706:4:13"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "8491:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "8502:4:13",
														"type": ""
													}
												],
												"src": "8425:311:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8831:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8848:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8851:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "8841:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8841:12:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8841:12:13"
														}
													]
												},
												"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
												"nodeType": "YulFunctionDefinition",
												"src": "8742:117:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8908:79:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8965:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8974:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8977:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "8967:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8967:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8967:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "8931:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "8956:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "8938:17:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8938:24:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "8928:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8928:35:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "8921:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "8921:43:13"
															},
															"nodeType": "YulIf",
															"src": "8918:63:13"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8901:5:13",
														"type": ""
													}
												],
												"src": "8865:122:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9056:80:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9066:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "9081:6:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "9075:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9075:13:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "9066:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "9124:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "9097:26:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9097:33:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9097:33:13"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "9034:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "9042:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9050:5:13",
														"type": ""
													}
												],
												"src": "8993:143:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9272:619:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9282:90:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "9364:6:13"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "9307:56:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9307:64:13"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "9291:15:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9291:81:13"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "9282:5:13"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9381:16:13",
															"value": {
																"name": "array",
																"nodeType": "YulIdentifier",
																"src": "9392:5:13"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "9385:3:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "9414:5:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "9421:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9407:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9407:21:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9407:21:13"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9437:23:13",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "9448:5:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9455:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9444:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9444:16:13"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "9437:3:13"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9470:44:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "9488:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "9500:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9508:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "9496:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9496:17:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9484:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9484:30:13"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nodeType": "YulTypedName",
																	"src": "9474:6:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9542:103:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nodeType": "YulIdentifier",
																				"src": "9556:77:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9556:79:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9556:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "9529:6:13"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "9537:3:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "9526:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9526:15:13"
															},
															"nodeType": "YulIf",
															"src": "9523:122:13"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9730:155:13",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "9745:21:13",
																		"value": {
																			"name": "src",
																			"nodeType": "YulIdentifier",
																			"src": "9763:3:13"
																		},
																		"variables": [
																			{
																				"name": "elementPos",
																				"nodeType": "YulTypedName",
																				"src": "9749:10:13",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "9787:3:13"
																				},
																				{
																					"arguments": [
																						{
																							"name": "elementPos",
																							"nodeType": "YulIdentifier",
																							"src": "9824:10:13"
																						},
																						{
																							"name": "end",
																							"nodeType": "YulIdentifier",
																							"src": "9836:3:13"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_t_uint256_fromMemory",
																						"nodeType": "YulIdentifier",
																						"src": "9792:31:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9792:48:13"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "9780:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9780:61:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9780:61:13"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "9854:21:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "9865:3:13"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9870:4:13",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "9861:3:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9861:14:13"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "9854:3:13"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "9683:3:13"
																	},
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "9688:6:13"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "9680:2:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "9680:15:13"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "9696:25:13",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "9698:21:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "9709:3:13"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9714:4:13",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "9705:3:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9705:14:13"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "9698:3:13"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "9658:21:13",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "9660:17:13",
																		"value": {
																			"name": "offset",
																			"nodeType": "YulIdentifier",
																			"src": "9671:6:13"
																		},
																		"variables": [
																			{
																				"name": "src",
																				"nodeType": "YulTypedName",
																				"src": "9664:3:13",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "9654:231:13"
														}
													]
												},
												"name": "abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "9242:6:13",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "9250:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "9258:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "9266:5:13",
														"type": ""
													}
												],
												"src": "9159:732:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10002:297:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10051:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "10053:77:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10053:79:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10053:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "10030:6:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "10038:4:13",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10026:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10026:17:13"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "10045:3:13"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "10022:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10022:27:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "10015:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10015:35:13"
															},
															"nodeType": "YulIf",
															"src": "10012:122:13"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10143:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "10163:6:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "10157:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10157:13:13"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "10147:6:13",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10179:114:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "10266:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10274:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10262:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10262:17:13"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10281:6:13"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "10289:3:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "10188:73:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10188:105:13"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "10179:5:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "9980:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "9988:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "9996:5:13",
														"type": ""
													}
												],
												"src": "9914:385:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10407:452:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10453:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "10455:77:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10455:79:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10455:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10428:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10437:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10424:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10424:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10449:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "10420:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "10420:32:13"
															},
															"nodeType": "YulIf",
															"src": "10417:119:13"
														},
														{
															"nodeType": "YulBlock",
															"src": "10546:306:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "10561:38:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "10585:9:13"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "10596:1:13",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10581:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10581:17:13"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "10575:5:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10575:24:13"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "10565:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "10646:83:13",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "10648:77:13"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "10648:79:13"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "10648:79:13"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "10618:6:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10626:18:13",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "10615:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10615:30:13"
																	},
																	"nodeType": "YulIf",
																	"src": "10612:117:13"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "10743:99:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "10814:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "10825:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10810:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10810:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10834:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "10753:56:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10753:89:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "10743:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_uint256_$dyn_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10377:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "10388:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10400:6:13",
														"type": ""
													}
												],
												"src": "10305:554:13"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_address(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack_library(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_library_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack_library(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function validator_revert_t_uint8(value) {\n        if iszero(eq(value, cleanup_t_uint8(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint8_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint8(value)\n    }\n\n    function abi_decode_tuple_t_uint8_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint8_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function shift_right_1_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(1, value)\n\n    }\n\n    function checked_exp_helper(_power, _base, exponent, max) -> power, base {\n        power := _power\n        base  := _base\n        for { } gt(exponent, 1) {}\n        {\n            // overflow check for base * base\n            if gt(base, div(max, base)) { panic_error_0x11() }\n            if and(exponent, 1)\n            {\n                // No checks for power := mul(power, base) needed, because the check\n                // for base * base above is sufficient, since:\n                // |power| <= base (proof by induction) and thus:\n                // |power * base| <= base * base <= max <= |min| (for signed)\n                // (this is equally true for signed and unsigned exp)\n                power := mul(power, base)\n            }\n            base := mul(base, base)\n            exponent := shift_right_1_unsigned(exponent)\n        }\n    }\n\n    function checked_exp_unsigned(base, exponent, max) -> power {\n        // This function currently cannot be inlined because of the\n        // \"leave\" statements. We have to improve the optimizer.\n\n        // Note that 0**0 == 1\n        if iszero(exponent) { power := 1 leave }\n        if iszero(base) { power := 0 leave }\n\n        // Specializations for small bases\n        switch base\n        // 0 is handled above\n        case 1 { power := 1 leave }\n        case 2\n        {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := exp(2, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n        if or(\n            and(lt(base, 11), lt(exponent, 78)),\n            and(lt(base, 307), lt(exponent, 32))\n        )\n        {\n            power := exp(base, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n\n        power, base := checked_exp_helper(1, base, exponent, max)\n\n        if gt(power, div(max, base)) { panic_error_0x11() }\n        power := mul(power, base)\n    }\n\n    function checked_exp_t_uint256_t_uint8(base, exponent) -> power {\n        base := cleanup_t_uint256(base)\n        exponent := cleanup_t_uint8(exponent)\n\n        power := checked_exp_unsigned(base, exponent, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function array_length_t_array$_t_address_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_address_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encodeUpdatedPos_t_address_to_t_address(value0, pos) -> updatedPos {\n        abi_encode_t_address_to_t_address(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_address_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // address[] -> address[]\n    function abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_address_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_address_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_address_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_address_to_t_address(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_address_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_uint256_t_array$_t_address_$dyn_memory_ptr__to_t_uint256_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_address_$dyn_memory_ptr_to_t_array$_t_address_$dyn_memory_ptr_fromStack(value1,  tail)\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    // uint256[]\n    function abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr_fromMemory(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_uint256_fromMemory(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // uint256[]\n    function abi_decode_t_array$_t_uint256_$dyn_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_array$_t_uint256_$dyn_memory_ptr_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 13,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600436106100355760003560e01c8063c361e0b11461003a575b600080fd5b610054600480360381019061004f91906102ef565b61006a565b604051610061919061035b565b60405180910390f35b600080600267ffffffffffffffff81111561008857610087610376565b5b6040519080825280602002602001820160405280156100b65781602001602082028036833780820191505090505b50905083816000815181106100ce576100cd6103a5565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050828160018151811061011d5761011c6103a5565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505060008573ffffffffffffffffffffffffffffffffffffffff1663d06ca61f8673ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa1580156101c0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101e4919061040d565b600a6101f0919061059c565b846040518363ffffffff1660e01b815260040161020e9291906106b4565b600060405180830381865afa15801561022b573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190610254919061083a565b90508060018151811061026a576102696103a5565b5b6020026020010151925050509392505050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006102bc82610291565b9050919050565b6102cc816102b1565b81146102d757600080fd5b50565b6000813590506102e9816102c3565b92915050565b60008060006060848603121561030857610307610287565b5b6000610316868287016102da565b9350506020610327868287016102da565b9250506040610338868287016102da565b9150509250925092565b6000819050919050565b61035581610342565b82525050565b6000602082019050610370600083018461034c565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600060ff82169050919050565b6103ea816103d4565b81146103f557600080fd5b50565b600081519050610407816103e1565b92915050565b60006020828403121561042357610422610287565b5b6000610431848285016103f8565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60008160011c9050919050565b6000808291508390505b60018511156104c05780860481111561049c5761049b61043a565b5b60018516156104ab5780820291505b80810290506104b985610469565b9450610480565b94509492505050565b6000826104d95760019050610595565b816104e75760009050610595565b81600181146104fd576002811461050757610536565b6001915050610595565b60ff8411156105195761051861043a565b5b8360020a9150848211156105305761052f61043a565b5b50610595565b5060208310610133831016604e8410600b841016171561056b5782820a9050838111156105665761056561043a565b5b610595565b6105788484846001610476565b9250905081840481111561058f5761058e61043a565b5b81810290505b9392505050565b60006105a782610342565b91506105b2836103d4565b92506105df7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff84846104c9565b905092915050565b6105f081610342565b82525050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b61062b816102b1565b82525050565b600061063d8383610622565b60208301905092915050565b6000602082019050919050565b6000610661826105f6565b61066b8185610601565b935061067683610612565b8060005b838110156106a757815161068e8882610631565b975061069983610649565b92505060018101905061067a565b5085935050505092915050565b60006040820190506106c960008301856105e7565b81810360208301526106db8184610656565b90509392505050565b600080fd5b6000601f19601f8301169050919050565b610703826106e9565b810181811067ffffffffffffffff8211171561072257610721610376565b5b80604052505050565b600061073561027d565b905061074182826106fa565b919050565b600067ffffffffffffffff82111561076157610760610376565b5b602082029050602081019050919050565b600080fd5b61078081610342565b811461078b57600080fd5b50565b60008151905061079d81610777565b92915050565b60006107b66107b184610746565b61072b565b905080838252602082019050602084028301858111156107d9576107d8610772565b5b835b8181101561080257806107ee888261078e565b8452602084019350506020810190506107db565b5050509392505050565b600082601f830112610821576108206106e4565b5b81516108318482602086016107a3565b91505092915050565b6000602082840312156108505761084f610287565b5b600082015167ffffffffffffffff81111561086e5761086d61028c565b5b61087a8482850161080c565b9150509291505056fea264697066735822122003a70eb0b7e39a0b3950daba934a03f1aeb6788c64cbed7bd04851de3c00f81064736f6c63430008110033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x35 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xC361E0B1 EQ PUSH2 0x3A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x54 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4F SWAP2 SWAP1 PUSH2 0x2EF JUMP JUMPDEST PUSH2 0x6A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x61 SWAP2 SWAP1 PUSH2 0x35B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x88 JUMPI PUSH2 0x87 PUSH2 0x376 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xB6 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP DUP4 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xCE JUMPI PUSH2 0xCD PUSH2 0x3A5 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP3 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x11D JUMPI PUSH2 0x11C PUSH2 0x3A5 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xD06CA61F DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1C0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1E4 SWAP2 SWAP1 PUSH2 0x40D JUMP JUMPDEST PUSH1 0xA PUSH2 0x1F0 SWAP2 SWAP1 PUSH2 0x59C JUMP JUMPDEST DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x20E SWAP3 SWAP2 SWAP1 PUSH2 0x6B4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x22B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x254 SWAP2 SWAP1 PUSH2 0x83A JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x26A JUMPI PUSH2 0x269 PUSH2 0x3A5 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2BC DUP3 PUSH2 0x291 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2CC DUP2 PUSH2 0x2B1 JUMP JUMPDEST DUP2 EQ PUSH2 0x2D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2E9 DUP2 PUSH2 0x2C3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x308 JUMPI PUSH2 0x307 PUSH2 0x287 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x316 DUP7 DUP3 DUP8 ADD PUSH2 0x2DA JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x327 DUP7 DUP3 DUP8 ADD PUSH2 0x2DA JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x338 DUP7 DUP3 DUP8 ADD PUSH2 0x2DA JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x355 DUP2 PUSH2 0x342 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x370 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x34C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3EA DUP2 PUSH2 0x3D4 JUMP JUMPDEST DUP2 EQ PUSH2 0x3F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x407 DUP2 PUSH2 0x3E1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x423 JUMPI PUSH2 0x422 PUSH2 0x287 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x431 DUP5 DUP3 DUP6 ADD PUSH2 0x3F8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH2 0x4C0 JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH2 0x49C JUMPI PUSH2 0x49B PUSH2 0x43A JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x4AB JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH2 0x4B9 DUP6 PUSH2 0x469 JUMP JUMPDEST SWAP5 POP PUSH2 0x480 JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x4D9 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x595 JUMP JUMPDEST DUP2 PUSH2 0x4E7 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x595 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x4FD JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x507 JUMPI PUSH2 0x536 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x595 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x519 JUMPI PUSH2 0x518 PUSH2 0x43A JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH2 0x530 JUMPI PUSH2 0x52F PUSH2 0x43A JUMP JUMPDEST JUMPDEST POP PUSH2 0x595 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x56B JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0x566 JUMPI PUSH2 0x565 PUSH2 0x43A JUMP JUMPDEST JUMPDEST PUSH2 0x595 JUMP JUMPDEST PUSH2 0x578 DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0x476 JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH2 0x58F JUMPI PUSH2 0x58E PUSH2 0x43A JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5A7 DUP3 PUSH2 0x342 JUMP JUMPDEST SWAP2 POP PUSH2 0x5B2 DUP4 PUSH2 0x3D4 JUMP JUMPDEST SWAP3 POP PUSH2 0x5DF PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH2 0x4C9 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x5F0 DUP2 PUSH2 0x342 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x62B DUP2 PUSH2 0x2B1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x63D DUP4 DUP4 PUSH2 0x622 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x661 DUP3 PUSH2 0x5F6 JUMP JUMPDEST PUSH2 0x66B DUP2 DUP6 PUSH2 0x601 JUMP JUMPDEST SWAP4 POP PUSH2 0x676 DUP4 PUSH2 0x612 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x6A7 JUMPI DUP2 MLOAD PUSH2 0x68E DUP9 DUP3 PUSH2 0x631 JUMP JUMPDEST SWAP8 POP PUSH2 0x699 DUP4 PUSH2 0x649 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x67A JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x6C9 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x5E7 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x6DB DUP2 DUP5 PUSH2 0x656 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x703 DUP3 PUSH2 0x6E9 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x722 JUMPI PUSH2 0x721 PUSH2 0x376 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x735 PUSH2 0x27D JUMP JUMPDEST SWAP1 POP PUSH2 0x741 DUP3 DUP3 PUSH2 0x6FA JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x761 JUMPI PUSH2 0x760 PUSH2 0x376 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x780 DUP2 PUSH2 0x342 JUMP JUMPDEST DUP2 EQ PUSH2 0x78B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x79D DUP2 PUSH2 0x777 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7B6 PUSH2 0x7B1 DUP5 PUSH2 0x746 JUMP JUMPDEST PUSH2 0x72B JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x7D9 JUMPI PUSH2 0x7D8 PUSH2 0x772 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x802 JUMPI DUP1 PUSH2 0x7EE DUP9 DUP3 PUSH2 0x78E JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x7DB JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x821 JUMPI PUSH2 0x820 PUSH2 0x6E4 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0x831 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x7A3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x850 JUMPI PUSH2 0x84F PUSH2 0x287 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x86E JUMPI PUSH2 0x86D PUSH2 0x28C JUMP JUMPDEST JUMPDEST PUSH2 0x87A DUP5 DUP3 DUP6 ADD PUSH2 0x80C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SUB 0xA7 0xE 0xB0 0xB7 0xE3 SWAP11 SIGNEXTEND CODECOPY POP 0xDA 0xBA SWAP4 0x4A SUB CALL 0xAE 0xB6 PUSH25 0x8C64CBED7BD04851DE3C00F81064736F6C6343000811003300 ",
							"sourceMap": "170:356:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;194:329;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;276:7;294:21;332:1;318:16;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;294:40;;354:3;344:4;349:1;344:7;;;;;;;;:::i;:::-;;;;;;;:13;;;;;;;;;;;377:4;367;372:1;367:7;;;;;;;;:::i;:::-;;;;;;;:14;;;;;;;;;;;391:21;434:8;415:42;;;469:3;462:20;;;:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;458:2;:26;;;;:::i;:::-;485:4;415:75;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;391:99;;506:7;514:1;506:10;;;;;;;;:::i;:::-;;;;;;;;499:17;;;;194:329;;;;;:::o;7:75:13:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:619::-;918:6;926;934;983:2;971:9;962:7;958:23;954:32;951:119;;;989:79;;:::i;:::-;951:119;1109:1;1134:53;1179:7;1170:6;1159:9;1155:22;1134:53;:::i;:::-;1124:63;;1080:117;1236:2;1262:53;1307:7;1298:6;1287:9;1283:22;1262:53;:::i;:::-;1252:63;;1207:118;1364:2;1390:53;1435:7;1426:6;1415:9;1411:22;1390:53;:::i;:::-;1380:63;;1335:118;841:619;;;;;:::o;1466:77::-;1503:7;1532:5;1521:16;;1466:77;;;:::o;1549:126::-;1644:24;1662:5;1644:24;:::i;:::-;1639:3;1632:37;1549:126;;:::o;1681:238::-;1782:4;1820:2;1809:9;1805:18;1797:26;;1833:79;1909:1;1898:9;1894:17;1885:6;1833:79;:::i;:::-;1681:238;;;;:::o;1925:180::-;1973:77;1970:1;1963:88;2070:4;2067:1;2060:15;2094:4;2091:1;2084:15;2111:180;2159:77;2156:1;2149:88;2256:4;2253:1;2246:15;2280:4;2277:1;2270:15;2297:86;2332:7;2372:4;2365:5;2361:16;2350:27;;2297:86;;;:::o;2389:118::-;2460:22;2476:5;2460:22;:::i;:::-;2453:5;2450:33;2440:61;;2497:1;2494;2487:12;2440:61;2389:118;:::o;2513:139::-;2568:5;2599:6;2593:13;2584:22;;2615:31;2640:5;2615:31;:::i;:::-;2513:139;;;;:::o;2658:347::-;2726:6;2775:2;2763:9;2754:7;2750:23;2746:32;2743:119;;;2781:79;;:::i;:::-;2743:119;2901:1;2926:62;2980:7;2971:6;2960:9;2956:22;2926:62;:::i;:::-;2916:72;;2872:126;2658:347;;;;:::o;3011:180::-;3059:77;3056:1;3049:88;3156:4;3153:1;3146:15;3180:4;3177:1;3170:15;3197:102;3239:8;3286:5;3283:1;3279:13;3258:34;;3197:102;;;:::o;3305:848::-;3366:5;3373:4;3397:6;3388:15;;3421:5;3412:14;;3435:712;3456:1;3446:8;3443:15;3435:712;;;3551:4;3546:3;3542:14;3536:4;3533:24;3530:50;;;3560:18;;:::i;:::-;3530:50;3610:1;3600:8;3596:16;3593:451;;;4025:4;4018:5;4014:16;4005:25;;3593:451;4075:4;4069;4065:15;4057:23;;4105:32;4128:8;4105:32;:::i;:::-;4093:44;;3435:712;;;3305:848;;;;;;;:::o;4159:1073::-;4213:5;4404:8;4394:40;;4425:1;4416:10;;4427:5;;4394:40;4453:4;4443:36;;4470:1;4461:10;;4472:5;;4443:36;4539:4;4587:1;4582:27;;;;4623:1;4618:191;;;;4532:277;;4582:27;4600:1;4591:10;;4602:5;;;4618:191;4663:3;4653:8;4650:17;4647:43;;;4670:18;;:::i;:::-;4647:43;4719:8;4716:1;4712:16;4703:25;;4754:3;4747:5;4744:14;4741:40;;;4761:18;;:::i;:::-;4741:40;4794:5;;;4532:277;;4918:2;4908:8;4905:16;4899:3;4893:4;4890:13;4886:36;4868:2;4858:8;4855:16;4850:2;4844:4;4841:12;4837:35;4821:111;4818:246;;;4974:8;4968:4;4964:19;4955:28;;5009:3;5002:5;4999:14;4996:40;;;5016:18;;:::i;:::-;4996:40;5049:5;;4818:246;5089:42;5127:3;5117:8;5111:4;5108:1;5089:42;:::i;:::-;5074:57;;;;5163:4;5158:3;5154:14;5147:5;5144:25;5141:51;;;5172:18;;:::i;:::-;5141:51;5221:4;5214:5;5210:16;5201:25;;4159:1073;;;;;;:::o;5238:281::-;5296:5;5320:23;5338:4;5320:23;:::i;:::-;5312:31;;5364:25;5380:8;5364:25;:::i;:::-;5352:37;;5408:104;5445:66;5435:8;5429:4;5408:104;:::i;:::-;5399:113;;5238:281;;;;:::o;5525:118::-;5612:24;5630:5;5612:24;:::i;:::-;5607:3;5600:37;5525:118;;:::o;5649:114::-;5716:6;5750:5;5744:12;5734:22;;5649:114;;;:::o;5769:184::-;5868:11;5902:6;5897:3;5890:19;5942:4;5937:3;5933:14;5918:29;;5769:184;;;;:::o;5959:132::-;6026:4;6049:3;6041:11;;6079:4;6074:3;6070:14;6062:22;;5959:132;;;:::o;6097:108::-;6174:24;6192:5;6174:24;:::i;:::-;6169:3;6162:37;6097:108;;:::o;6211:179::-;6280:10;6301:46;6343:3;6335:6;6301:46;:::i;:::-;6379:4;6374:3;6370:14;6356:28;;6211:179;;;;:::o;6396:113::-;6466:4;6498;6493:3;6489:14;6481:22;;6396:113;;;:::o;6545:732::-;6664:3;6693:54;6741:5;6693:54;:::i;:::-;6763:86;6842:6;6837:3;6763:86;:::i;:::-;6756:93;;6873:56;6923:5;6873:56;:::i;:::-;6952:7;6983:1;6968:284;6993:6;6990:1;6987:13;6968:284;;;7069:6;7063:13;7096:63;7155:3;7140:13;7096:63;:::i;:::-;7089:70;;7182:60;7235:6;7182:60;:::i;:::-;7172:70;;7028:224;7015:1;7012;7008:9;7003:14;;6968:284;;;6972:14;7268:3;7261:10;;6669:608;;;6545:732;;;;:::o;7283:483::-;7454:4;7492:2;7481:9;7477:18;7469:26;;7505:71;7573:1;7562:9;7558:17;7549:6;7505:71;:::i;:::-;7623:9;7617:4;7613:20;7608:2;7597:9;7593:18;7586:48;7651:108;7754:4;7745:6;7651:108;:::i;:::-;7643:116;;7283:483;;;;;:::o;7772:117::-;7881:1;7878;7871:12;7895:102;7936:6;7987:2;7983:7;7978:2;7971:5;7967:14;7963:28;7953:38;;7895:102;;;:::o;8003:281::-;8086:27;8108:4;8086:27;:::i;:::-;8078:6;8074:40;8216:6;8204:10;8201:22;8180:18;8168:10;8165:34;8162:62;8159:88;;;8227:18;;:::i;:::-;8159:88;8267:10;8263:2;8256:22;8046:238;8003:281;;:::o;8290:129::-;8324:6;8351:20;;:::i;:::-;8341:30;;8380:33;8408:4;8400:6;8380:33;:::i;:::-;8290:129;;;:::o;8425:311::-;8502:4;8592:18;8584:6;8581:30;8578:56;;;8614:18;;:::i;:::-;8578:56;8664:4;8656:6;8652:17;8644:25;;8724:4;8718;8714:15;8706:23;;8425:311;;;:::o;8742:117::-;8851:1;8848;8841:12;8865:122;8938:24;8956:5;8938:24;:::i;:::-;8931:5;8928:35;8918:63;;8977:1;8974;8967:12;8918:63;8865:122;:::o;8993:143::-;9050:5;9081:6;9075:13;9066:22;;9097:33;9124:5;9097:33;:::i;:::-;8993:143;;;;:::o;9159:732::-;9266:5;9291:81;9307:64;9364:6;9307:64;:::i;:::-;9291:81;:::i;:::-;9282:90;;9392:5;9421:6;9414:5;9407:21;9455:4;9448:5;9444:16;9437:23;;9508:4;9500:6;9496:17;9488:6;9484:30;9537:3;9529:6;9526:15;9523:122;;;9556:79;;:::i;:::-;9523:122;9671:6;9654:231;9688:6;9683:3;9680:15;9654:231;;;9763:3;9792:48;9836:3;9824:10;9792:48;:::i;:::-;9787:3;9780:61;9870:4;9865:3;9861:14;9854:21;;9730:155;9714:4;9709:3;9705:14;9698:21;;9654:231;;;9658:21;9272:619;;9159:732;;;;;:::o;9914:385::-;9996:5;10045:3;10038:4;10030:6;10026:17;10022:27;10012:122;;10053:79;;:::i;:::-;10012:122;10163:6;10157:13;10188:105;10289:3;10281:6;10274:4;10266:6;10262:17;10188:105;:::i;:::-;10179:114;;10002:297;9914:385;;;;:::o;10305:554::-;10400:6;10449:2;10437:9;10428:7;10424:23;10420:32;10417:119;;;10455:79;;:::i;:::-;10417:119;10596:1;10585:9;10581:17;10575:24;10626:18;10618:6;10615:30;10612:117;;;10648:79;;:::i;:::-;10612:117;10753:89;10834:7;10825:6;10814:9;10810:22;10753:89;:::i;:::-;10743:99;;10546:306;10305:554;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "446600",
								"executionCost": "508",
								"totalCost": "447108"
							},
							"external": {
								"Price(address,address,address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 170,
									"end": 526,
									"name": "PUSH #[$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 170,
									"end": 526,
									"name": "PUSH [$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 170,
									"end": 526,
									"name": "PUSH",
									"source": 11,
									"value": "B"
								},
								{
									"begin": 170,
									"end": 526,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 170,
									"end": 526,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 170,
									"end": 526,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 170,
									"end": 526,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 170,
									"end": 526,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 170,
									"end": 526,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 170,
									"end": 526,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 170,
									"end": 526,
									"name": "BYTE",
									"source": 11
								},
								{
									"begin": 170,
									"end": 526,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 170,
									"end": 526,
									"name": "EQ",
									"source": 11
								},
								{
									"begin": 170,
									"end": 526,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 170,
									"end": 526,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 170,
									"end": 526,
									"name": "PUSH",
									"source": 11,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 170,
									"end": 526,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 170,
									"end": 526,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 170,
									"end": 526,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 170,
									"end": 526,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 170,
									"end": 526,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 170,
									"end": 526,
									"name": "PUSH",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 170,
									"end": 526,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 170,
									"end": 526,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 170,
									"end": 526,
									"name": "tag",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 170,
									"end": 526,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 170,
									"end": 526,
									"name": "ADDRESS",
									"source": 11
								},
								{
									"begin": 170,
									"end": 526,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 170,
									"end": 526,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 170,
									"end": 526,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 170,
									"end": 526,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 170,
									"end": 526,
									"name": "MSTORE8",
									"source": 11
								},
								{
									"begin": 170,
									"end": 526,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 170,
									"end": 526,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 170,
									"end": 526,
									"name": "RETURN",
									"source": 11
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122003a70eb0b7e39a0b3950daba934a03f1aeb6788c64cbed7bd04851de3c00f81064736f6c63430008110033",
									".code": [
										{
											"begin": 170,
											"end": 526,
											"name": "PUSHDEPLOYADDRESS",
											"source": 11
										},
										{
											"begin": 170,
											"end": 526,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": 170,
											"end": 526,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 170,
											"end": 526,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 170,
											"end": 526,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 170,
											"end": 526,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 170,
											"end": 526,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 170,
											"end": 526,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 170,
											"end": 526,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 170,
											"end": 526,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 170,
											"end": 526,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 170,
											"end": 526,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 170,
											"end": 526,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 170,
											"end": 526,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 170,
											"end": 526,
											"name": "SHR",
											"source": 11
										},
										{
											"begin": 170,
											"end": 526,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 170,
											"end": 526,
											"name": "PUSH",
											"source": 11,
											"value": "C361E0B1"
										},
										{
											"begin": 170,
											"end": 526,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 170,
											"end": 526,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 170,
											"end": 526,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 170,
											"end": 526,
											"name": "tag",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 170,
											"end": 526,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 170,
											"end": 526,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 170,
											"end": 526,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 170,
											"end": 526,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 194,
											"end": 523,
											"name": "tag",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 194,
											"end": 523,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 194,
											"end": 523,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 194,
											"end": 523,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 194,
											"end": 523,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 194,
											"end": 523,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 194,
											"end": 523,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 194,
											"end": 523,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 194,
											"end": 523,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 194,
											"end": 523,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 194,
											"end": 523,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 194,
											"end": 523,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 194,
											"end": 523,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 194,
											"end": 523,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 194,
											"end": 523,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 194,
											"end": 523,
											"name": "tag",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 194,
											"end": 523,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 194,
											"end": 523,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 194,
											"end": 523,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 194,
											"end": 523,
											"name": "tag",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 194,
											"end": 523,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 194,
											"end": 523,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 194,
											"end": 523,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 194,
											"end": 523,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 194,
											"end": 523,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 194,
											"end": 523,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 194,
											"end": 523,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 194,
											"end": 523,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 194,
											"end": 523,
											"name": "tag",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 194,
											"end": 523,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 194,
											"end": 523,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 194,
											"end": 523,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 194,
											"end": 523,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 194,
											"end": 523,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 194,
											"end": 523,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 194,
											"end": 523,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 194,
											"end": 523,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 194,
											"end": 523,
											"name": "tag",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 194,
											"end": 523,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 276,
											"end": 283,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 294,
											"end": 315,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 332,
											"end": 333,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 318,
											"end": 334,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 318,
											"end": 334,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 318,
											"end": 334,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 318,
											"end": 334,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 318,
											"end": 334,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "10"
										},
										{
											"begin": 318,
											"end": 334,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 318,
											"end": 334,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "11"
										},
										{
											"begin": 318,
											"end": 334,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "12"
										},
										{
											"begin": 318,
											"end": 334,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 318,
											"end": 334,
											"name": "tag",
											"source": 11,
											"value": "11"
										},
										{
											"begin": 318,
											"end": 334,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 318,
											"end": 334,
											"name": "tag",
											"source": 11,
											"value": "10"
										},
										{
											"begin": 318,
											"end": 334,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 318,
											"end": 334,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 318,
											"end": 334,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 318,
											"end": 334,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 318,
											"end": 334,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 318,
											"end": 334,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 318,
											"end": 334,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 318,
											"end": 334,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 318,
											"end": 334,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 318,
											"end": 334,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 318,
											"end": 334,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 318,
											"end": 334,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 318,
											"end": 334,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 318,
											"end": 334,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 318,
											"end": 334,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 318,
											"end": 334,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 318,
											"end": 334,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 318,
											"end": 334,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 318,
											"end": 334,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "13"
										},
										{
											"begin": 318,
											"end": 334,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 318,
											"end": 334,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 318,
											"end": 334,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 318,
											"end": 334,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 318,
											"end": 334,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 318,
											"end": 334,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 318,
											"end": 334,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 318,
											"end": 334,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 318,
											"end": 334,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 318,
											"end": 334,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 318,
											"end": 334,
											"name": "CALLDATACOPY",
											"source": 11
										},
										{
											"begin": 318,
											"end": 334,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 318,
											"end": 334,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 318,
											"end": 334,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 318,
											"end": 334,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 318,
											"end": 334,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 318,
											"end": 334,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 318,
											"end": 334,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 318,
											"end": 334,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 318,
											"end": 334,
											"name": "tag",
											"source": 11,
											"value": "13"
										},
										{
											"begin": 318,
											"end": 334,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 318,
											"end": 334,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 294,
											"end": 334,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 294,
											"end": 334,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 354,
											"end": 357,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 344,
											"end": 348,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 349,
											"end": 350,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 344,
											"end": 351,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 344,
											"end": 351,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 344,
											"end": 351,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 344,
											"end": 351,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 344,
											"end": 351,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "14"
										},
										{
											"begin": 344,
											"end": 351,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 344,
											"end": 351,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "15"
										},
										{
											"begin": 344,
											"end": 351,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "16"
										},
										{
											"begin": 344,
											"end": 351,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 344,
											"end": 351,
											"name": "tag",
											"source": 11,
											"value": "15"
										},
										{
											"begin": 344,
											"end": 351,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 344,
											"end": 351,
											"name": "tag",
											"source": 11,
											"value": "14"
										},
										{
											"begin": 344,
											"end": 351,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 344,
											"end": 351,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 344,
											"end": 351,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 344,
											"end": 351,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 344,
											"end": 351,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 344,
											"end": 351,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 344,
											"end": 357,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 344,
											"end": 357,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 344,
											"end": 357,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 344,
											"end": 357,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 344,
											"end": 357,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 344,
											"end": 357,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 344,
											"end": 357,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 344,
											"end": 357,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 344,
											"end": 357,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 344,
											"end": 357,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 344,
											"end": 357,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 377,
											"end": 381,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 367,
											"end": 371,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 372,
											"end": 373,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 367,
											"end": 374,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 367,
											"end": 374,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 367,
											"end": 374,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 367,
											"end": 374,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 367,
											"end": 374,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "17"
										},
										{
											"begin": 367,
											"end": 374,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 367,
											"end": 374,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "18"
										},
										{
											"begin": 367,
											"end": 374,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "16"
										},
										{
											"begin": 367,
											"end": 374,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 367,
											"end": 374,
											"name": "tag",
											"source": 11,
											"value": "18"
										},
										{
											"begin": 367,
											"end": 374,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 367,
											"end": 374,
											"name": "tag",
											"source": 11,
											"value": "17"
										},
										{
											"begin": 367,
											"end": 374,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 367,
											"end": 374,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 367,
											"end": 374,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 367,
											"end": 374,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 367,
											"end": 374,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 367,
											"end": 374,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 367,
											"end": 381,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 367,
											"end": 381,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 367,
											"end": 381,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 367,
											"end": 381,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 367,
											"end": 381,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 367,
											"end": 381,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 367,
											"end": 381,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 367,
											"end": 381,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 367,
											"end": 381,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 367,
											"end": 381,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 367,
											"end": 381,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 391,
											"end": 412,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 434,
											"end": 442,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 415,
											"end": 457,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 415,
											"end": 457,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 415,
											"end": 457,
											"name": "PUSH",
											"source": 11,
											"value": "D06CA61F"
										},
										{
											"begin": 469,
											"end": 472,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 462,
											"end": 482,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 462,
											"end": 482,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 462,
											"end": 482,
											"name": "PUSH",
											"source": 11,
											"value": "313CE567"
										},
										{
											"begin": 462,
											"end": 484,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 462,
											"end": 484,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 462,
											"end": 484,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 462,
											"end": 484,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 462,
											"end": 484,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 462,
											"end": 484,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 462,
											"end": 484,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 462,
											"end": 484,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 462,
											"end": 484,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 462,
											"end": 484,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 462,
											"end": 484,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 462,
											"end": 484,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 462,
											"end": 484,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 462,
											"end": 484,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 462,
											"end": 484,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 462,
											"end": 484,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 462,
											"end": 484,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 462,
											"end": 484,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 462,
											"end": 484,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 462,
											"end": 484,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 462,
											"end": 484,
											"name": "STATICCALL",
											"source": 11
										},
										{
											"begin": 462,
											"end": 484,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 462,
											"end": 484,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 462,
											"end": 484,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 462,
											"end": 484,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 462,
											"end": 484,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 462,
											"end": 484,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 462,
											"end": 484,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 462,
											"end": 484,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 462,
											"end": 484,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 462,
											"end": 484,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 462,
											"end": 484,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 462,
											"end": 484,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 462,
											"end": 484,
											"name": "tag",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 462,
											"end": 484,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 462,
											"end": 484,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 462,
											"end": 484,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 462,
											"end": 484,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 462,
											"end": 484,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 462,
											"end": 484,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 462,
											"end": 484,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 462,
											"end": 484,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 462,
											"end": 484,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 462,
											"end": 484,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 462,
											"end": 484,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 462,
											"end": 484,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 462,
											"end": 484,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 462,
											"end": 484,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 462,
											"end": 484,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 462,
											"end": 484,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 462,
											"end": 484,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 462,
											"end": 484,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 462,
											"end": 484,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 462,
											"end": 484,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 462,
											"end": 484,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 462,
											"end": 484,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 462,
											"end": 484,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 462,
											"end": 484,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "21"
										},
										{
											"begin": 462,
											"end": 484,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 462,
											"end": 484,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 462,
											"end": 484,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "22"
										},
										{
											"begin": 462,
											"end": 484,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 462,
											"end": 484,
											"name": "tag",
											"source": 11,
											"value": "21"
										},
										{
											"begin": 462,
											"end": 484,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 458,
											"end": 460,
											"name": "PUSH",
											"source": 11,
											"value": "A"
										},
										{
											"begin": 458,
											"end": 484,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "23"
										},
										{
											"begin": 458,
											"end": 484,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 458,
											"end": 484,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 458,
											"end": 484,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 458,
											"end": 484,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 458,
											"end": 484,
											"name": "tag",
											"source": 11,
											"value": "23"
										},
										{
											"begin": 458,
											"end": 484,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 485,
											"end": 489,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 415,
											"end": 490,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 415,
											"end": 490,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 415,
											"end": 490,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 415,
											"end": 490,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 415,
											"end": 490,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 415,
											"end": 490,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 415,
											"end": 490,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 415,
											"end": 490,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 415,
											"end": 490,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 415,
											"end": 490,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 415,
											"end": 490,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 415,
											"end": 490,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "25"
										},
										{
											"begin": 415,
											"end": 490,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 415,
											"end": 490,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 415,
											"end": 490,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 415,
											"end": 490,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "26"
										},
										{
											"begin": 415,
											"end": 490,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 415,
											"end": 490,
											"name": "tag",
											"source": 11,
											"value": "25"
										},
										{
											"begin": 415,
											"end": 490,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 415,
											"end": 490,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 415,
											"end": 490,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 415,
											"end": 490,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 415,
											"end": 490,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 415,
											"end": 490,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 415,
											"end": 490,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 415,
											"end": 490,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 415,
											"end": 490,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 415,
											"end": 490,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 415,
											"end": 490,
											"name": "STATICCALL",
											"source": 11
										},
										{
											"begin": 415,
											"end": 490,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 415,
											"end": 490,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 415,
											"end": 490,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 415,
											"end": 490,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "28"
										},
										{
											"begin": 415,
											"end": 490,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 415,
											"end": 490,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 415,
											"end": 490,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 415,
											"end": 490,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 415,
											"end": 490,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 415,
											"end": 490,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 415,
											"end": 490,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 415,
											"end": 490,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 415,
											"end": 490,
											"name": "tag",
											"source": 11,
											"value": "28"
										},
										{
											"begin": 415,
											"end": 490,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 415,
											"end": 490,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 415,
											"end": 490,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 415,
											"end": 490,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 415,
											"end": 490,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 415,
											"end": 490,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 415,
											"end": 490,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 415,
											"end": 490,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 415,
											"end": 490,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 415,
											"end": 490,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 415,
											"end": 490,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 415,
											"end": 490,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 415,
											"end": 490,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 415,
											"end": 490,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 415,
											"end": 490,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 415,
											"end": 490,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 415,
											"end": 490,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 415,
											"end": 490,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 415,
											"end": 490,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 415,
											"end": 490,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 415,
											"end": 490,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 415,
											"end": 490,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 415,
											"end": 490,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 415,
											"end": 490,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 415,
											"end": 490,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 415,
											"end": 490,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 415,
											"end": 490,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 415,
											"end": 490,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "29"
										},
										{
											"begin": 415,
											"end": 490,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 415,
											"end": 490,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 415,
											"end": 490,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "30"
										},
										{
											"begin": 415,
											"end": 490,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 415,
											"end": 490,
											"name": "tag",
											"source": 11,
											"value": "29"
										},
										{
											"begin": 415,
											"end": 490,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 391,
											"end": 490,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 391,
											"end": 490,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 506,
											"end": 513,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 514,
											"end": 515,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 506,
											"end": 516,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 506,
											"end": 516,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 506,
											"end": 516,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 506,
											"end": 516,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 506,
											"end": 516,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "31"
										},
										{
											"begin": 506,
											"end": 516,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 506,
											"end": 516,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "32"
										},
										{
											"begin": 506,
											"end": 516,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "16"
										},
										{
											"begin": 506,
											"end": 516,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 506,
											"end": 516,
											"name": "tag",
											"source": 11,
											"value": "32"
										},
										{
											"begin": 506,
											"end": 516,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 506,
											"end": 516,
											"name": "tag",
											"source": 11,
											"value": "31"
										},
										{
											"begin": 506,
											"end": 516,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 506,
											"end": 516,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 506,
											"end": 516,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 506,
											"end": 516,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 506,
											"end": 516,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 506,
											"end": 516,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 506,
											"end": 516,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 499,
											"end": 516,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 499,
											"end": 516,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 499,
											"end": 516,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 499,
											"end": 516,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 194,
											"end": 523,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 194,
											"end": 523,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 194,
											"end": 523,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 194,
											"end": 523,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 194,
											"end": 523,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 194,
											"end": 523,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7,
											"end": 82,
											"name": "tag",
											"source": 13,
											"value": "33"
										},
										{
											"begin": 7,
											"end": 82,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 40,
											"end": 46,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 75,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 67,
											"end": 76,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 57,
											"end": 76,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 57,
											"end": 76,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7,
											"end": 82,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7,
											"end": 82,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 13,
											"value": "34"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 13,
											"value": "35"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 13,
											"value": "36"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 334,
											"end": 460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 13,
											"value": "37"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "73"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "36"
										},
										{
											"begin": 532,
											"end": 556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 13,
											"value": "73"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 466,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 13,
											"value": "38"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "75"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "37"
										},
										{
											"begin": 641,
											"end": 665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 13,
											"value": "75"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "76"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 13,
											"value": "76"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 568,
											"end": 690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 13,
											"value": "39"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "78"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "38"
										},
										{
											"begin": 796,
											"end": 829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 13,
											"value": "78"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 696,
											"end": 835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 841,
											"end": 1460,
											"name": "tag",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 841,
											"end": 1460,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 918,
											"end": 924,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 926,
											"end": 932,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 934,
											"end": 940,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 983,
											"end": 985,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 971,
											"end": 980,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 962,
											"end": 969,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 958,
											"end": 981,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 954,
											"end": 986,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 951,
											"end": 1070,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 951,
											"end": 1070,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 951,
											"end": 1070,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 989,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "81"
										},
										{
											"begin": 989,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "34"
										},
										{
											"begin": 989,
											"end": 1068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 989,
											"end": 1068,
											"name": "tag",
											"source": 13,
											"value": "81"
										},
										{
											"begin": 989,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 951,
											"end": 1070,
											"name": "tag",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 951,
											"end": 1070,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1109,
											"end": 1110,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1134,
											"end": 1187,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "82"
										},
										{
											"begin": 1179,
											"end": 1186,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 1170,
											"end": 1176,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1159,
											"end": 1168,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 1155,
											"end": 1177,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1134,
											"end": 1187,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "39"
										},
										{
											"begin": 1134,
											"end": 1187,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1134,
											"end": 1187,
											"name": "tag",
											"source": 13,
											"value": "82"
										},
										{
											"begin": 1134,
											"end": 1187,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1124,
											"end": 1187,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 1124,
											"end": 1187,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1080,
											"end": 1197,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1236,
											"end": 1238,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1262,
											"end": 1315,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "83"
										},
										{
											"begin": 1307,
											"end": 1314,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 1298,
											"end": 1304,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1296,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 1283,
											"end": 1305,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1262,
											"end": 1315,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "39"
										},
										{
											"begin": 1262,
											"end": 1315,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1262,
											"end": 1315,
											"name": "tag",
											"source": 13,
											"value": "83"
										},
										{
											"begin": 1262,
											"end": 1315,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1252,
											"end": 1315,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1252,
											"end": 1315,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1207,
											"end": 1325,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1364,
											"end": 1366,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1390,
											"end": 1443,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "84"
										},
										{
											"begin": 1435,
											"end": 1442,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 1426,
											"end": 1432,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1415,
											"end": 1424,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 1411,
											"end": 1433,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1390,
											"end": 1443,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "39"
										},
										{
											"begin": 1390,
											"end": 1443,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1390,
											"end": 1443,
											"name": "tag",
											"source": 13,
											"value": "84"
										},
										{
											"begin": 1390,
											"end": 1443,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1380,
											"end": 1443,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1380,
											"end": 1443,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1335,
											"end": 1453,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 841,
											"end": 1460,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 841,
											"end": 1460,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 841,
											"end": 1460,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 841,
											"end": 1460,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 841,
											"end": 1460,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 841,
											"end": 1460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1466,
											"end": 1543,
											"name": "tag",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1466,
											"end": 1543,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1503,
											"end": 1510,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1532,
											"end": 1537,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1521,
											"end": 1537,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1521,
											"end": 1537,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1466,
											"end": 1543,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1466,
											"end": 1543,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1466,
											"end": 1543,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1466,
											"end": 1543,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1549,
											"end": 1675,
											"name": "tag",
											"source": 13,
											"value": "41"
										},
										{
											"begin": 1549,
											"end": 1675,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1644,
											"end": 1668,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "87"
										},
										{
											"begin": 1662,
											"end": 1667,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1644,
											"end": 1668,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1644,
											"end": 1668,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1644,
											"end": 1668,
											"name": "tag",
											"source": 13,
											"value": "87"
										},
										{
											"begin": 1644,
											"end": 1668,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1639,
											"end": 1642,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1632,
											"end": 1669,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1549,
											"end": 1675,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1549,
											"end": 1675,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1549,
											"end": 1675,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1681,
											"end": 1919,
											"name": "tag",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 1681,
											"end": 1919,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1782,
											"end": 1786,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1820,
											"end": 1822,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1809,
											"end": 1818,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1805,
											"end": 1823,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1797,
											"end": 1823,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1797,
											"end": 1823,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1833,
											"end": 1912,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "89"
										},
										{
											"begin": 1909,
											"end": 1910,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1898,
											"end": 1907,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1894,
											"end": 1911,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1885,
											"end": 1891,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1833,
											"end": 1912,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "41"
										},
										{
											"begin": 1833,
											"end": 1912,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1833,
											"end": 1912,
											"name": "tag",
											"source": 13,
											"value": "89"
										},
										{
											"begin": 1833,
											"end": 1912,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1681,
											"end": 1919,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1681,
											"end": 1919,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1681,
											"end": 1919,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1681,
											"end": 1919,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1681,
											"end": 1919,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1925,
											"end": 2105,
											"name": "tag",
											"source": 13,
											"value": "12"
										},
										{
											"begin": 1925,
											"end": 2105,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1973,
											"end": 2050,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1970,
											"end": 1971,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1963,
											"end": 2051,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2070,
											"end": 2074,
											"name": "PUSH",
											"source": 13,
											"value": "41"
										},
										{
											"begin": 2067,
											"end": 2068,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 2060,
											"end": 2075,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2094,
											"end": 2098,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 2091,
											"end": 2092,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2084,
											"end": 2099,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2111,
											"end": 2291,
											"name": "tag",
											"source": 13,
											"value": "16"
										},
										{
											"begin": 2111,
											"end": 2291,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2159,
											"end": 2236,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2156,
											"end": 2157,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2149,
											"end": 2237,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2256,
											"end": 2260,
											"name": "PUSH",
											"source": 13,
											"value": "32"
										},
										{
											"begin": 2253,
											"end": 2254,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 2246,
											"end": 2261,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2280,
											"end": 2284,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 2277,
											"end": 2278,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2270,
											"end": 2285,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2297,
											"end": 2383,
											"name": "tag",
											"source": 13,
											"value": "42"
										},
										{
											"begin": 2297,
											"end": 2383,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2332,
											"end": 2339,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2372,
											"end": 2376,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 2365,
											"end": 2370,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2361,
											"end": 2377,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2350,
											"end": 2377,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2350,
											"end": 2377,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2297,
											"end": 2383,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2297,
											"end": 2383,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2297,
											"end": 2383,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2297,
											"end": 2383,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2389,
											"end": 2507,
											"name": "tag",
											"source": 13,
											"value": "43"
										},
										{
											"begin": 2389,
											"end": 2507,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2460,
											"end": 2482,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "94"
										},
										{
											"begin": 2476,
											"end": 2481,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2460,
											"end": 2482,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "42"
										},
										{
											"begin": 2460,
											"end": 2482,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2460,
											"end": 2482,
											"name": "tag",
											"source": 13,
											"value": "94"
										},
										{
											"begin": 2460,
											"end": 2482,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2453,
											"end": 2458,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2450,
											"end": 2483,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 2440,
											"end": 2501,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "95"
										},
										{
											"begin": 2440,
											"end": 2501,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2497,
											"end": 2498,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2494,
											"end": 2495,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2487,
											"end": 2499,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2440,
											"end": 2501,
											"name": "tag",
											"source": 13,
											"value": "95"
										},
										{
											"begin": 2440,
											"end": 2501,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2389,
											"end": 2507,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2389,
											"end": 2507,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2513,
											"end": 2652,
											"name": "tag",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 2513,
											"end": 2652,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2568,
											"end": 2573,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2599,
											"end": 2605,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2593,
											"end": 2606,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 2584,
											"end": 2606,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2584,
											"end": 2606,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2615,
											"end": 2646,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "97"
										},
										{
											"begin": 2640,
											"end": 2645,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2615,
											"end": 2646,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "43"
										},
										{
											"begin": 2615,
											"end": 2646,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2615,
											"end": 2646,
											"name": "tag",
											"source": 13,
											"value": "97"
										},
										{
											"begin": 2615,
											"end": 2646,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2513,
											"end": 2652,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2513,
											"end": 2652,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2513,
											"end": 2652,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2513,
											"end": 2652,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2513,
											"end": 2652,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2658,
											"end": 3005,
											"name": "tag",
											"source": 13,
											"value": "22"
										},
										{
											"begin": 2658,
											"end": 3005,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2726,
											"end": 2732,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2775,
											"end": 2777,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2763,
											"end": 2772,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2754,
											"end": 2761,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 2750,
											"end": 2773,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 2746,
											"end": 2778,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 2743,
											"end": 2862,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2743,
											"end": 2862,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "99"
										},
										{
											"begin": 2743,
											"end": 2862,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2781,
											"end": 2860,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 2781,
											"end": 2860,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "34"
										},
										{
											"begin": 2781,
											"end": 2860,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2781,
											"end": 2860,
											"name": "tag",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 2781,
											"end": 2860,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2743,
											"end": 2862,
											"name": "tag",
											"source": 13,
											"value": "99"
										},
										{
											"begin": 2743,
											"end": 2862,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2901,
											"end": 2902,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2926,
											"end": 2988,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "101"
										},
										{
											"begin": 2980,
											"end": 2987,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 2971,
											"end": 2977,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2960,
											"end": 2969,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 2956,
											"end": 2978,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2926,
											"end": 2988,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 2926,
											"end": 2988,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2926,
											"end": 2988,
											"name": "tag",
											"source": 13,
											"value": "101"
										},
										{
											"begin": 2926,
											"end": 2988,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2916,
											"end": 2988,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2916,
											"end": 2988,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2872,
											"end": 2998,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2658,
											"end": 3005,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2658,
											"end": 3005,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2658,
											"end": 3005,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2658,
											"end": 3005,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2658,
											"end": 3005,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3011,
											"end": 3191,
											"name": "tag",
											"source": 13,
											"value": "45"
										},
										{
											"begin": 3011,
											"end": 3191,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3059,
											"end": 3136,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3056,
											"end": 3057,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3049,
											"end": 3137,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3156,
											"end": 3160,
											"name": "PUSH",
											"source": 13,
											"value": "11"
										},
										{
											"begin": 3153,
											"end": 3154,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 3146,
											"end": 3161,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3180,
											"end": 3184,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 3177,
											"end": 3178,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3170,
											"end": 3185,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 3197,
											"end": 3299,
											"name": "tag",
											"source": 13,
											"value": "46"
										},
										{
											"begin": 3197,
											"end": 3299,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3239,
											"end": 3247,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3286,
											"end": 3291,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3283,
											"end": 3284,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 3279,
											"end": 3292,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 3258,
											"end": 3292,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3258,
											"end": 3292,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3197,
											"end": 3299,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3197,
											"end": 3299,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3197,
											"end": 3299,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3197,
											"end": 3299,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3305,
											"end": 4153,
											"name": "tag",
											"source": 13,
											"value": "47"
										},
										{
											"begin": 3305,
											"end": 4153,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3366,
											"end": 3371,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3373,
											"end": 3377,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3397,
											"end": 3403,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3388,
											"end": 3403,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3388,
											"end": 3403,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3421,
											"end": 3426,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3412,
											"end": 3426,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3412,
											"end": 3426,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3435,
											"end": 4147,
											"name": "tag",
											"source": 13,
											"value": "105"
										},
										{
											"begin": 3435,
											"end": 4147,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3456,
											"end": 3457,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 3446,
											"end": 3454,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 3443,
											"end": 3458,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 3435,
											"end": 4147,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3435,
											"end": 4147,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "107"
										},
										{
											"begin": 3435,
											"end": 4147,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3551,
											"end": 3555,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3546,
											"end": 3549,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 3542,
											"end": 3556,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 3536,
											"end": 3540,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 3530,
											"end": 3580,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3530,
											"end": 3580,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "108"
										},
										{
											"begin": 3530,
											"end": 3580,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3560,
											"end": 3578,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "109"
										},
										{
											"begin": 3560,
											"end": 3578,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "45"
										},
										{
											"begin": 3560,
											"end": 3578,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3560,
											"end": 3578,
											"name": "tag",
											"source": 13,
											"value": "109"
										},
										{
											"begin": 3560,
											"end": 3578,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3530,
											"end": 3580,
											"name": "tag",
											"source": 13,
											"value": "108"
										},
										{
											"begin": 3530,
											"end": 3580,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3610,
											"end": 3611,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 3600,
											"end": 3608,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 3596,
											"end": 3612,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3593,
											"end": 4044,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3593,
											"end": 4044,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "110"
										},
										{
											"begin": 3593,
											"end": 4044,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4025,
											"end": 4029,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4018,
											"end": 4023,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4014,
											"end": 4030,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 4005,
											"end": 4030,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4005,
											"end": 4030,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3593,
											"end": 4044,
											"name": "tag",
											"source": 13,
											"value": "110"
										},
										{
											"begin": 3593,
											"end": 4044,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4075,
											"end": 4079,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4069,
											"end": 4073,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4065,
											"end": 4080,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 4057,
											"end": 4080,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4057,
											"end": 4080,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4105,
											"end": 4137,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "111"
										},
										{
											"begin": 4128,
											"end": 4136,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 4105,
											"end": 4137,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "46"
										},
										{
											"begin": 4105,
											"end": 4137,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4105,
											"end": 4137,
											"name": "tag",
											"source": 13,
											"value": "111"
										},
										{
											"begin": 4105,
											"end": 4137,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4093,
											"end": 4137,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 4093,
											"end": 4137,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3435,
											"end": 4147,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "105"
										},
										{
											"begin": 3435,
											"end": 4147,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3435,
											"end": 4147,
											"name": "tag",
											"source": 13,
											"value": "107"
										},
										{
											"begin": 3435,
											"end": 4147,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3305,
											"end": 4153,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 3305,
											"end": 4153,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3305,
											"end": 4153,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 3305,
											"end": 4153,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3305,
											"end": 4153,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3305,
											"end": 4153,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3305,
											"end": 4153,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3305,
											"end": 4153,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4159,
											"end": 5232,
											"name": "tag",
											"source": 13,
											"value": "48"
										},
										{
											"begin": 4159,
											"end": 5232,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4213,
											"end": 4218,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4404,
											"end": 4412,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4394,
											"end": 4434,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "113"
										},
										{
											"begin": 4394,
											"end": 4434,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4425,
											"end": 4426,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 4416,
											"end": 4426,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4416,
											"end": 4426,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4427,
											"end": 4432,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "112"
										},
										{
											"begin": 4427,
											"end": 4432,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4394,
											"end": 4434,
											"name": "tag",
											"source": 13,
											"value": "113"
										},
										{
											"begin": 4394,
											"end": 4434,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4453,
											"end": 4457,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4443,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "114"
										},
										{
											"begin": 4443,
											"end": 4479,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4470,
											"end": 4471,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4461,
											"end": 4471,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4461,
											"end": 4471,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4472,
											"end": 4477,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "112"
										},
										{
											"begin": 4472,
											"end": 4477,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4443,
											"end": 4479,
											"name": "tag",
											"source": 13,
											"value": "114"
										},
										{
											"begin": 4443,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4539,
											"end": 4543,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4587,
											"end": 4588,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 4582,
											"end": 4609,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4582,
											"end": 4609,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 4582,
											"end": 4609,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "116"
										},
										{
											"begin": 4582,
											"end": 4609,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4623,
											"end": 4624,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 4618,
											"end": 4809,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4618,
											"end": 4809,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 4618,
											"end": 4809,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "117"
										},
										{
											"begin": 4618,
											"end": 4809,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4532,
											"end": 4809,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "115"
										},
										{
											"begin": 4532,
											"end": 4809,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4582,
											"end": 4609,
											"name": "tag",
											"source": 13,
											"value": "116"
										},
										{
											"begin": 4582,
											"end": 4609,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4600,
											"end": 4601,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 4591,
											"end": 4601,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4591,
											"end": 4601,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4602,
											"end": 4607,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4602,
											"end": 4607,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "112"
										},
										{
											"begin": 4602,
											"end": 4607,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4618,
											"end": 4809,
											"name": "tag",
											"source": 13,
											"value": "117"
										},
										{
											"begin": 4618,
											"end": 4809,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4663,
											"end": 4666,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 4653,
											"end": 4661,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4650,
											"end": 4667,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 4647,
											"end": 4690,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4647,
											"end": 4690,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "118"
										},
										{
											"begin": 4647,
											"end": 4690,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4670,
											"end": 4688,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "119"
										},
										{
											"begin": 4670,
											"end": 4688,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "45"
										},
										{
											"begin": 4670,
											"end": 4688,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4670,
											"end": 4688,
											"name": "tag",
											"source": 13,
											"value": "119"
										},
										{
											"begin": 4670,
											"end": 4688,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4647,
											"end": 4690,
											"name": "tag",
											"source": 13,
											"value": "118"
										},
										{
											"begin": 4647,
											"end": 4690,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4719,
											"end": 4727,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4716,
											"end": 4717,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 4712,
											"end": 4728,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 4703,
											"end": 4728,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4703,
											"end": 4728,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4754,
											"end": 4757,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4747,
											"end": 4752,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4744,
											"end": 4758,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 4741,
											"end": 4781,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4741,
											"end": 4781,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "120"
										},
										{
											"begin": 4741,
											"end": 4781,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4761,
											"end": 4779,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "121"
										},
										{
											"begin": 4761,
											"end": 4779,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "45"
										},
										{
											"begin": 4761,
											"end": 4779,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4761,
											"end": 4779,
											"name": "tag",
											"source": 13,
											"value": "121"
										},
										{
											"begin": 4761,
											"end": 4779,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4741,
											"end": 4781,
											"name": "tag",
											"source": 13,
											"value": "120"
										},
										{
											"begin": 4741,
											"end": 4781,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4794,
											"end": 4799,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4794,
											"end": 4799,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "112"
										},
										{
											"begin": 4794,
											"end": 4799,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4532,
											"end": 4809,
											"name": "tag",
											"source": 13,
											"value": "115"
										},
										{
											"begin": 4532,
											"end": 4809,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4532,
											"end": 4809,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4918,
											"end": 4920,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4908,
											"end": 4916,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4905,
											"end": 4921,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 4899,
											"end": 4902,
											"name": "PUSH",
											"source": 13,
											"value": "133"
										},
										{
											"begin": 4893,
											"end": 4897,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4890,
											"end": 4903,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 4886,
											"end": 4922,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4868,
											"end": 4870,
											"name": "PUSH",
											"source": 13,
											"value": "4E"
										},
										{
											"begin": 4858,
											"end": 4866,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4855,
											"end": 4871,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 4850,
											"end": 4852,
											"name": "PUSH",
											"source": 13,
											"value": "B"
										},
										{
											"begin": 4844,
											"end": 4848,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4841,
											"end": 4853,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 4837,
											"end": 4872,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4821,
											"end": 4932,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 4818,
											"end": 5064,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4818,
											"end": 5064,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "122"
										},
										{
											"begin": 4818,
											"end": 5064,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4974,
											"end": 4982,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4968,
											"end": 4972,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4964,
											"end": 4983,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 4955,
											"end": 4983,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4955,
											"end": 4983,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5009,
											"end": 5012,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5002,
											"end": 5007,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4999,
											"end": 5013,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 4996,
											"end": 5036,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4996,
											"end": 5036,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "123"
										},
										{
											"begin": 4996,
											"end": 5036,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5016,
											"end": 5034,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "124"
										},
										{
											"begin": 5016,
											"end": 5034,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "45"
										},
										{
											"begin": 5016,
											"end": 5034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5016,
											"end": 5034,
											"name": "tag",
											"source": 13,
											"value": "124"
										},
										{
											"begin": 5016,
											"end": 5034,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4996,
											"end": 5036,
											"name": "tag",
											"source": 13,
											"value": "123"
										},
										{
											"begin": 4996,
											"end": 5036,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5049,
											"end": 5054,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "112"
										},
										{
											"begin": 5049,
											"end": 5054,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4818,
											"end": 5064,
											"name": "tag",
											"source": 13,
											"value": "122"
										},
										{
											"begin": 4818,
											"end": 5064,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5089,
											"end": 5131,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "125"
										},
										{
											"begin": 5127,
											"end": 5130,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 5117,
											"end": 5125,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 5111,
											"end": 5115,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 5108,
											"end": 5109,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 5089,
											"end": 5131,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "47"
										},
										{
											"begin": 5089,
											"end": 5131,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5089,
											"end": 5131,
											"name": "tag",
											"source": 13,
											"value": "125"
										},
										{
											"begin": 5089,
											"end": 5131,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5074,
											"end": 5131,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5074,
											"end": 5131,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5074,
											"end": 5131,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5074,
											"end": 5131,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5163,
											"end": 5167,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5158,
											"end": 5161,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 5154,
											"end": 5168,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 5147,
											"end": 5152,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5144,
											"end": 5169,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 5141,
											"end": 5192,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5141,
											"end": 5192,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "126"
										},
										{
											"begin": 5141,
											"end": 5192,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5172,
											"end": 5190,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "127"
										},
										{
											"begin": 5172,
											"end": 5190,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "45"
										},
										{
											"begin": 5172,
											"end": 5190,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5172,
											"end": 5190,
											"name": "tag",
											"source": 13,
											"value": "127"
										},
										{
											"begin": 5172,
											"end": 5190,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5141,
											"end": 5192,
											"name": "tag",
											"source": 13,
											"value": "126"
										},
										{
											"begin": 5141,
											"end": 5192,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5221,
											"end": 5225,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5214,
											"end": 5219,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5210,
											"end": 5226,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 5201,
											"end": 5226,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5201,
											"end": 5226,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4159,
											"end": 5232,
											"name": "tag",
											"source": 13,
											"value": "112"
										},
										{
											"begin": 4159,
											"end": 5232,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4159,
											"end": 5232,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 4159,
											"end": 5232,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4159,
											"end": 5232,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4159,
											"end": 5232,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4159,
											"end": 5232,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4159,
											"end": 5232,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5238,
											"end": 5519,
											"name": "tag",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 5238,
											"end": 5519,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5296,
											"end": 5301,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5320,
											"end": 5343,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "129"
										},
										{
											"begin": 5338,
											"end": 5342,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5320,
											"end": 5343,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5320,
											"end": 5343,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5320,
											"end": 5343,
											"name": "tag",
											"source": 13,
											"value": "129"
										},
										{
											"begin": 5320,
											"end": 5343,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5312,
											"end": 5343,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5312,
											"end": 5343,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5364,
											"end": 5389,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "130"
										},
										{
											"begin": 5380,
											"end": 5388,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5364,
											"end": 5389,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "42"
										},
										{
											"begin": 5364,
											"end": 5389,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5364,
											"end": 5389,
											"name": "tag",
											"source": 13,
											"value": "130"
										},
										{
											"begin": 5364,
											"end": 5389,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5352,
											"end": 5389,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5352,
											"end": 5389,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5408,
											"end": 5512,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "131"
										},
										{
											"begin": 5445,
											"end": 5511,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5435,
											"end": 5443,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 5429,
											"end": 5433,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 5408,
											"end": 5512,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "48"
										},
										{
											"begin": 5408,
											"end": 5512,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5408,
											"end": 5512,
											"name": "tag",
											"source": 13,
											"value": "131"
										},
										{
											"begin": 5408,
											"end": 5512,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5399,
											"end": 5512,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5399,
											"end": 5512,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5238,
											"end": 5519,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5238,
											"end": 5519,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5238,
											"end": 5519,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5238,
											"end": 5519,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5238,
											"end": 5519,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5525,
											"end": 5643,
											"name": "tag",
											"source": 13,
											"value": "49"
										},
										{
											"begin": 5525,
											"end": 5643,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5612,
											"end": 5636,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "133"
										},
										{
											"begin": 5630,
											"end": 5635,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5612,
											"end": 5636,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5612,
											"end": 5636,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5612,
											"end": 5636,
											"name": "tag",
											"source": 13,
											"value": "133"
										},
										{
											"begin": 5612,
											"end": 5636,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5607,
											"end": 5610,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5600,
											"end": 5637,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5525,
											"end": 5643,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5525,
											"end": 5643,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5525,
											"end": 5643,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5649,
											"end": 5763,
											"name": "tag",
											"source": 13,
											"value": "50"
										},
										{
											"begin": 5649,
											"end": 5763,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5716,
											"end": 5722,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5750,
											"end": 5755,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5744,
											"end": 5756,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5734,
											"end": 5756,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5734,
											"end": 5756,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5649,
											"end": 5763,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5649,
											"end": 5763,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5649,
											"end": 5763,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5649,
											"end": 5763,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5769,
											"end": 5953,
											"name": "tag",
											"source": 13,
											"value": "51"
										},
										{
											"begin": 5769,
											"end": 5953,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5868,
											"end": 5879,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5902,
											"end": 5908,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5897,
											"end": 5900,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5890,
											"end": 5909,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5942,
											"end": 5946,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5937,
											"end": 5940,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5933,
											"end": 5947,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5918,
											"end": 5947,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5918,
											"end": 5947,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5769,
											"end": 5953,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5769,
											"end": 5953,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5769,
											"end": 5953,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5769,
											"end": 5953,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5769,
											"end": 5953,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5959,
											"end": 6091,
											"name": "tag",
											"source": 13,
											"value": "52"
										},
										{
											"begin": 5959,
											"end": 6091,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6026,
											"end": 6030,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6049,
											"end": 6052,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6041,
											"end": 6052,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6041,
											"end": 6052,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6079,
											"end": 6083,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6074,
											"end": 6077,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6070,
											"end": 6084,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6062,
											"end": 6084,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6062,
											"end": 6084,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5959,
											"end": 6091,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5959,
											"end": 6091,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5959,
											"end": 6091,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5959,
											"end": 6091,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6097,
											"end": 6205,
											"name": "tag",
											"source": 13,
											"value": "53"
										},
										{
											"begin": 6097,
											"end": 6205,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6174,
											"end": 6198,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "138"
										},
										{
											"begin": 6192,
											"end": 6197,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6174,
											"end": 6198,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "37"
										},
										{
											"begin": 6174,
											"end": 6198,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6174,
											"end": 6198,
											"name": "tag",
											"source": 13,
											"value": "138"
										},
										{
											"begin": 6174,
											"end": 6198,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6169,
											"end": 6172,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6162,
											"end": 6199,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6097,
											"end": 6205,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6097,
											"end": 6205,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6097,
											"end": 6205,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6211,
											"end": 6390,
											"name": "tag",
											"source": 13,
											"value": "54"
										},
										{
											"begin": 6211,
											"end": 6390,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6280,
											"end": 6290,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6301,
											"end": 6347,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "140"
										},
										{
											"begin": 6343,
											"end": 6346,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 6335,
											"end": 6341,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 6301,
											"end": 6347,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "53"
										},
										{
											"begin": 6301,
											"end": 6347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6301,
											"end": 6347,
											"name": "tag",
											"source": 13,
											"value": "140"
										},
										{
											"begin": 6301,
											"end": 6347,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6379,
											"end": 6383,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6374,
											"end": 6377,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 6370,
											"end": 6384,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6356,
											"end": 6384,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6356,
											"end": 6384,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6211,
											"end": 6390,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 6211,
											"end": 6390,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6211,
											"end": 6390,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6211,
											"end": 6390,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6211,
											"end": 6390,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6396,
											"end": 6509,
											"name": "tag",
											"source": 13,
											"value": "55"
										},
										{
											"begin": 6396,
											"end": 6509,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6466,
											"end": 6470,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6498,
											"end": 6502,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6493,
											"end": 6496,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6489,
											"end": 6503,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6481,
											"end": 6503,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6481,
											"end": 6503,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6396,
											"end": 6509,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6396,
											"end": 6509,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6396,
											"end": 6509,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6396,
											"end": 6509,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6545,
											"end": 7277,
											"name": "tag",
											"source": 13,
											"value": "56"
										},
										{
											"begin": 6545,
											"end": 7277,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6664,
											"end": 6667,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6693,
											"end": 6747,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "143"
										},
										{
											"begin": 6741,
											"end": 6746,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6693,
											"end": 6747,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "50"
										},
										{
											"begin": 6693,
											"end": 6747,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6693,
											"end": 6747,
											"name": "tag",
											"source": 13,
											"value": "143"
										},
										{
											"begin": 6693,
											"end": 6747,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6763,
											"end": 6849,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "144"
										},
										{
											"begin": 6842,
											"end": 6848,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6837,
											"end": 6840,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 6763,
											"end": 6849,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "51"
										},
										{
											"begin": 6763,
											"end": 6849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6763,
											"end": 6849,
											"name": "tag",
											"source": 13,
											"value": "144"
										},
										{
											"begin": 6763,
											"end": 6849,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6756,
											"end": 6849,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 6756,
											"end": 6849,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6873,
											"end": 6929,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "145"
										},
										{
											"begin": 6923,
											"end": 6928,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 6873,
											"end": 6929,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "52"
										},
										{
											"begin": 6873,
											"end": 6929,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6873,
											"end": 6929,
											"name": "tag",
											"source": 13,
											"value": "145"
										},
										{
											"begin": 6873,
											"end": 6929,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6952,
											"end": 6959,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6983,
											"end": 6984,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6968,
											"end": 7252,
											"name": "tag",
											"source": 13,
											"value": "146"
										},
										{
											"begin": 6968,
											"end": 7252,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6993,
											"end": 6999,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 6990,
											"end": 6991,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6987,
											"end": 7000,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 6968,
											"end": 7252,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 6968,
											"end": 7252,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "148"
										},
										{
											"begin": 6968,
											"end": 7252,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 7069,
											"end": 7075,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7063,
											"end": 7076,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 7096,
											"end": 7159,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "149"
										},
										{
											"begin": 7155,
											"end": 7158,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 7140,
											"end": 7153,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7096,
											"end": 7159,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "54"
										},
										{
											"begin": 7096,
											"end": 7159,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7096,
											"end": 7159,
											"name": "tag",
											"source": 13,
											"value": "149"
										},
										{
											"begin": 7096,
											"end": 7159,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7089,
											"end": 7159,
											"name": "SWAP8",
											"source": 13
										},
										{
											"begin": 7089,
											"end": 7159,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7182,
											"end": 7242,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "150"
										},
										{
											"begin": 7235,
											"end": 7241,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 7182,
											"end": 7242,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "55"
										},
										{
											"begin": 7182,
											"end": 7242,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7182,
											"end": 7242,
											"name": "tag",
											"source": 13,
											"value": "150"
										},
										{
											"begin": 7182,
											"end": 7242,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7172,
											"end": 7242,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 7172,
											"end": 7242,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7028,
											"end": 7252,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7015,
											"end": 7016,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 7012,
											"end": 7013,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7008,
											"end": 7017,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7003,
											"end": 7017,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7003,
											"end": 7017,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6968,
											"end": 7252,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "146"
										},
										{
											"begin": 6968,
											"end": 7252,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6968,
											"end": 7252,
											"name": "tag",
											"source": 13,
											"value": "148"
										},
										{
											"begin": 6968,
											"end": 7252,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6972,
											"end": 6986,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7268,
											"end": 7271,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 7261,
											"end": 7271,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 7261,
											"end": 7271,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6669,
											"end": 7277,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6669,
											"end": 7277,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6669,
											"end": 7277,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6545,
											"end": 7277,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 6545,
											"end": 7277,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6545,
											"end": 7277,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6545,
											"end": 7277,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6545,
											"end": 7277,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7283,
											"end": 7766,
											"name": "tag",
											"source": 13,
											"value": "26"
										},
										{
											"begin": 7283,
											"end": 7766,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7454,
											"end": 7458,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7492,
											"end": 7494,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 7481,
											"end": 7490,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7477,
											"end": 7495,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7469,
											"end": 7495,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7469,
											"end": 7495,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7505,
											"end": 7576,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "152"
										},
										{
											"begin": 7573,
											"end": 7574,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7562,
											"end": 7571,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 7558,
											"end": 7575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7549,
											"end": 7555,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 7505,
											"end": 7576,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "49"
										},
										{
											"begin": 7505,
											"end": 7576,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7505,
											"end": 7576,
											"name": "tag",
											"source": 13,
											"value": "152"
										},
										{
											"begin": 7505,
											"end": 7576,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7623,
											"end": 7632,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7617,
											"end": 7621,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7613,
											"end": 7633,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 7608,
											"end": 7610,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7597,
											"end": 7606,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 7593,
											"end": 7611,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7586,
											"end": 7634,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7651,
											"end": 7759,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "153"
										},
										{
											"begin": 7754,
											"end": 7758,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7745,
											"end": 7751,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 7651,
											"end": 7759,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "56"
										},
										{
											"begin": 7651,
											"end": 7759,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7651,
											"end": 7759,
											"name": "tag",
											"source": 13,
											"value": "153"
										},
										{
											"begin": 7651,
											"end": 7759,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7643,
											"end": 7759,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7643,
											"end": 7759,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7283,
											"end": 7766,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 7283,
											"end": 7766,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 7283,
											"end": 7766,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7283,
											"end": 7766,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7283,
											"end": 7766,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7283,
											"end": 7766,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7772,
											"end": 7889,
											"name": "tag",
											"source": 13,
											"value": "57"
										},
										{
											"begin": 7772,
											"end": 7889,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7881,
											"end": 7882,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7878,
											"end": 7879,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7871,
											"end": 7883,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 7895,
											"end": 7997,
											"name": "tag",
											"source": 13,
											"value": "58"
										},
										{
											"begin": 7895,
											"end": 7997,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7936,
											"end": 7942,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7987,
											"end": 7989,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 7983,
											"end": 7990,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 7978,
											"end": 7980,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 7971,
											"end": 7976,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 7967,
											"end": 7981,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7963,
											"end": 7991,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 7953,
											"end": 7991,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7953,
											"end": 7991,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7895,
											"end": 7997,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7895,
											"end": 7997,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7895,
											"end": 7997,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7895,
											"end": 7997,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8003,
											"end": 8284,
											"name": "tag",
											"source": 13,
											"value": "59"
										},
										{
											"begin": 8003,
											"end": 8284,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8086,
											"end": 8113,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "157"
										},
										{
											"begin": 8108,
											"end": 8112,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8086,
											"end": 8113,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "58"
										},
										{
											"begin": 8086,
											"end": 8113,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8086,
											"end": 8113,
											"name": "tag",
											"source": 13,
											"value": "157"
										},
										{
											"begin": 8086,
											"end": 8113,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8078,
											"end": 8084,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8074,
											"end": 8114,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8216,
											"end": 8222,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8204,
											"end": 8214,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8201,
											"end": 8223,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 8180,
											"end": 8198,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8168,
											"end": 8178,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8165,
											"end": 8199,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 8162,
											"end": 8224,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 8159,
											"end": 8247,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 8159,
											"end": 8247,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "158"
										},
										{
											"begin": 8159,
											"end": 8247,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 8227,
											"end": 8245,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "159"
										},
										{
											"begin": 8227,
											"end": 8245,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "12"
										},
										{
											"begin": 8227,
											"end": 8245,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8227,
											"end": 8245,
											"name": "tag",
											"source": 13,
											"value": "159"
										},
										{
											"begin": 8227,
											"end": 8245,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8159,
											"end": 8247,
											"name": "tag",
											"source": 13,
											"value": "158"
										},
										{
											"begin": 8159,
											"end": 8247,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8267,
											"end": 8277,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 8263,
											"end": 8265,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 8256,
											"end": 8278,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 8046,
											"end": 8284,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8003,
											"end": 8284,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8003,
											"end": 8284,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8003,
											"end": 8284,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8290,
											"end": 8419,
											"name": "tag",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 8290,
											"end": 8419,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8324,
											"end": 8330,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8351,
											"end": 8371,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "161"
										},
										{
											"begin": 8351,
											"end": 8371,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "33"
										},
										{
											"begin": 8351,
											"end": 8371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8351,
											"end": 8371,
											"name": "tag",
											"source": 13,
											"value": "161"
										},
										{
											"begin": 8351,
											"end": 8371,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8341,
											"end": 8371,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8341,
											"end": 8371,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8380,
											"end": 8413,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "162"
										},
										{
											"begin": 8408,
											"end": 8412,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8400,
											"end": 8406,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8380,
											"end": 8413,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "59"
										},
										{
											"begin": 8380,
											"end": 8413,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8380,
											"end": 8413,
											"name": "tag",
											"source": 13,
											"value": "162"
										},
										{
											"begin": 8380,
											"end": 8413,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8290,
											"end": 8419,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8290,
											"end": 8419,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8290,
											"end": 8419,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8290,
											"end": 8419,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8425,
											"end": 8736,
											"name": "tag",
											"source": 13,
											"value": "61"
										},
										{
											"begin": 8425,
											"end": 8736,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8502,
											"end": 8506,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8592,
											"end": 8610,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8584,
											"end": 8590,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8581,
											"end": 8611,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 8578,
											"end": 8634,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 8578,
											"end": 8634,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "164"
										},
										{
											"begin": 8578,
											"end": 8634,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 8614,
											"end": 8632,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "165"
										},
										{
											"begin": 8614,
											"end": 8632,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "12"
										},
										{
											"begin": 8614,
											"end": 8632,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8614,
											"end": 8632,
											"name": "tag",
											"source": 13,
											"value": "165"
										},
										{
											"begin": 8614,
											"end": 8632,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8578,
											"end": 8634,
											"name": "tag",
											"source": 13,
											"value": "164"
										},
										{
											"begin": 8578,
											"end": 8634,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8664,
											"end": 8668,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 8656,
											"end": 8662,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8652,
											"end": 8669,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 8644,
											"end": 8669,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8644,
											"end": 8669,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8724,
											"end": 8728,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 8718,
											"end": 8722,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8714,
											"end": 8729,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8706,
											"end": 8729,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8706,
											"end": 8729,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8425,
											"end": 8736,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8425,
											"end": 8736,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8425,
											"end": 8736,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8425,
											"end": 8736,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8742,
											"end": 8859,
											"name": "tag",
											"source": 13,
											"value": "62"
										},
										{
											"begin": 8742,
											"end": 8859,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8851,
											"end": 8852,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8848,
											"end": 8849,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 8841,
											"end": 8853,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 8865,
											"end": 8987,
											"name": "tag",
											"source": 13,
											"value": "63"
										},
										{
											"begin": 8865,
											"end": 8987,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8938,
											"end": 8962,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "168"
										},
										{
											"begin": 8956,
											"end": 8961,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8938,
											"end": 8962,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 8938,
											"end": 8962,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8938,
											"end": 8962,
											"name": "tag",
											"source": 13,
											"value": "168"
										},
										{
											"begin": 8938,
											"end": 8962,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8931,
											"end": 8936,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8928,
											"end": 8963,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 8918,
											"end": 8981,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "169"
										},
										{
											"begin": 8918,
											"end": 8981,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 8977,
											"end": 8978,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8974,
											"end": 8975,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 8967,
											"end": 8979,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 8918,
											"end": 8981,
											"name": "tag",
											"source": 13,
											"value": "169"
										},
										{
											"begin": 8918,
											"end": 8981,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8865,
											"end": 8987,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8865,
											"end": 8987,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8993,
											"end": 9136,
											"name": "tag",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 8993,
											"end": 9136,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9050,
											"end": 9055,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9081,
											"end": 9087,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 9075,
											"end": 9088,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 9066,
											"end": 9088,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9066,
											"end": 9088,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9097,
											"end": 9130,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "171"
										},
										{
											"begin": 9124,
											"end": 9129,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 9097,
											"end": 9130,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "63"
										},
										{
											"begin": 9097,
											"end": 9130,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9097,
											"end": 9130,
											"name": "tag",
											"source": 13,
											"value": "171"
										},
										{
											"begin": 9097,
											"end": 9130,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8993,
											"end": 9136,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 8993,
											"end": 9136,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8993,
											"end": 9136,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8993,
											"end": 9136,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8993,
											"end": 9136,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9159,
											"end": 9891,
											"name": "tag",
											"source": 13,
											"value": "65"
										},
										{
											"begin": 9159,
											"end": 9891,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9266,
											"end": 9271,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9291,
											"end": 9372,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "173"
										},
										{
											"begin": 9307,
											"end": 9371,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "174"
										},
										{
											"begin": 9364,
											"end": 9370,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 9307,
											"end": 9371,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "61"
										},
										{
											"begin": 9307,
											"end": 9371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9307,
											"end": 9371,
											"name": "tag",
											"source": 13,
											"value": "174"
										},
										{
											"begin": 9307,
											"end": 9371,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9291,
											"end": 9372,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 9291,
											"end": 9372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9291,
											"end": 9372,
											"name": "tag",
											"source": 13,
											"value": "173"
										},
										{
											"begin": 9291,
											"end": 9372,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9282,
											"end": 9372,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9282,
											"end": 9372,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9392,
											"end": 9397,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 9421,
											"end": 9427,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 9414,
											"end": 9419,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9407,
											"end": 9428,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 9455,
											"end": 9459,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 9448,
											"end": 9453,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9444,
											"end": 9460,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9437,
											"end": 9460,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9437,
											"end": 9460,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9508,
											"end": 9512,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 9500,
											"end": 9506,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 9496,
											"end": 9513,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 9488,
											"end": 9494,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 9484,
											"end": 9514,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9537,
											"end": 9540,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 9529,
											"end": 9535,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 9526,
											"end": 9541,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 9523,
											"end": 9645,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 9523,
											"end": 9645,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "175"
										},
										{
											"begin": 9523,
											"end": 9645,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 9556,
											"end": 9635,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "176"
										},
										{
											"begin": 9556,
											"end": 9635,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "62"
										},
										{
											"begin": 9556,
											"end": 9635,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9556,
											"end": 9635,
											"name": "tag",
											"source": 13,
											"value": "176"
										},
										{
											"begin": 9556,
											"end": 9635,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9523,
											"end": 9645,
											"name": "tag",
											"source": 13,
											"value": "175"
										},
										{
											"begin": 9523,
											"end": 9645,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9671,
											"end": 9677,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 9654,
											"end": 9885,
											"name": "tag",
											"source": 13,
											"value": "177"
										},
										{
											"begin": 9654,
											"end": 9885,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9688,
											"end": 9694,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 9683,
											"end": 9686,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 9680,
											"end": 9695,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 9654,
											"end": 9885,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 9654,
											"end": 9885,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "179"
										},
										{
											"begin": 9654,
											"end": 9885,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 9763,
											"end": 9766,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 9792,
											"end": 9840,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "180"
										},
										{
											"begin": 9836,
											"end": 9839,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 9824,
											"end": 9834,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9792,
											"end": 9840,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 9792,
											"end": 9840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9792,
											"end": 9840,
											"name": "tag",
											"source": 13,
											"value": "180"
										},
										{
											"begin": 9792,
											"end": 9840,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9787,
											"end": 9790,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 9780,
											"end": 9841,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 9870,
											"end": 9874,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 9865,
											"end": 9868,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 9861,
											"end": 9875,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9854,
											"end": 9875,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 9854,
											"end": 9875,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9730,
											"end": 9885,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9714,
											"end": 9718,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 9709,
											"end": 9712,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 9705,
											"end": 9719,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9698,
											"end": 9719,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9698,
											"end": 9719,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9654,
											"end": 9885,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "177"
										},
										{
											"begin": 9654,
											"end": 9885,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9654,
											"end": 9885,
											"name": "tag",
											"source": 13,
											"value": "179"
										},
										{
											"begin": 9654,
											"end": 9885,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9658,
											"end": 9679,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9272,
											"end": 9891,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9272,
											"end": 9891,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9159,
											"end": 9891,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 9159,
											"end": 9891,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 9159,
											"end": 9891,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9159,
											"end": 9891,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9159,
											"end": 9891,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9159,
											"end": 9891,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9914,
											"end": 10299,
											"name": "tag",
											"source": 13,
											"value": "66"
										},
										{
											"begin": 9914,
											"end": 10299,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9996,
											"end": 10001,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10045,
											"end": 10048,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10038,
											"end": 10042,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 10030,
											"end": 10036,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 10026,
											"end": 10043,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10022,
											"end": 10049,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 10012,
											"end": 10134,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "182"
										},
										{
											"begin": 10012,
											"end": 10134,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 10053,
											"end": 10132,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "183"
										},
										{
											"begin": 10053,
											"end": 10132,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "57"
										},
										{
											"begin": 10053,
											"end": 10132,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10053,
											"end": 10132,
											"name": "tag",
											"source": 13,
											"value": "183"
										},
										{
											"begin": 10053,
											"end": 10132,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10012,
											"end": 10134,
											"name": "tag",
											"source": 13,
											"value": "182"
										},
										{
											"begin": 10012,
											"end": 10134,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10163,
											"end": 10169,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10157,
											"end": 10170,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 10188,
											"end": 10293,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "184"
										},
										{
											"begin": 10289,
											"end": 10292,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 10281,
											"end": 10287,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10274,
											"end": 10278,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 10266,
											"end": 10272,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 10262,
											"end": 10279,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10188,
											"end": 10293,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "65"
										},
										{
											"begin": 10188,
											"end": 10293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10188,
											"end": 10293,
											"name": "tag",
											"source": 13,
											"value": "184"
										},
										{
											"begin": 10188,
											"end": 10293,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10179,
											"end": 10293,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 10179,
											"end": 10293,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10002,
											"end": 10299,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9914,
											"end": 10299,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 9914,
											"end": 10299,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 9914,
											"end": 10299,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9914,
											"end": 10299,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9914,
											"end": 10299,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10305,
											"end": 10859,
											"name": "tag",
											"source": 13,
											"value": "30"
										},
										{
											"begin": 10305,
											"end": 10859,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10400,
											"end": 10406,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10449,
											"end": 10451,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 10437,
											"end": 10446,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10428,
											"end": 10435,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 10424,
											"end": 10447,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 10420,
											"end": 10452,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 10417,
											"end": 10536,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 10417,
											"end": 10536,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "186"
										},
										{
											"begin": 10417,
											"end": 10536,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 10455,
											"end": 10534,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "187"
										},
										{
											"begin": 10455,
											"end": 10534,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "34"
										},
										{
											"begin": 10455,
											"end": 10534,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10455,
											"end": 10534,
											"name": "tag",
											"source": 13,
											"value": "187"
										},
										{
											"begin": 10455,
											"end": 10534,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10417,
											"end": 10536,
											"name": "tag",
											"source": 13,
											"value": "186"
										},
										{
											"begin": 10417,
											"end": 10536,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10596,
											"end": 10597,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10585,
											"end": 10594,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10581,
											"end": 10598,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10575,
											"end": 10599,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 10626,
											"end": 10644,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10618,
											"end": 10624,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10615,
											"end": 10645,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 10612,
											"end": 10729,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 10612,
											"end": 10729,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "188"
										},
										{
											"begin": 10612,
											"end": 10729,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 10648,
											"end": 10727,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "189"
										},
										{
											"begin": 10648,
											"end": 10727,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "35"
										},
										{
											"begin": 10648,
											"end": 10727,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10648,
											"end": 10727,
											"name": "tag",
											"source": 13,
											"value": "189"
										},
										{
											"begin": 10648,
											"end": 10727,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10612,
											"end": 10729,
											"name": "tag",
											"source": 13,
											"value": "188"
										},
										{
											"begin": 10612,
											"end": 10729,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10753,
											"end": 10842,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "190"
										},
										{
											"begin": 10834,
											"end": 10841,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 10825,
											"end": 10831,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10814,
											"end": 10823,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 10810,
											"end": 10832,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10753,
											"end": 10842,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "66"
										},
										{
											"begin": 10753,
											"end": 10842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10753,
											"end": 10842,
											"name": "tag",
											"source": 13,
											"value": "190"
										},
										{
											"begin": 10753,
											"end": 10842,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10743,
											"end": 10842,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 10743,
											"end": 10842,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10546,
											"end": 10852,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10305,
											"end": 10859,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 10305,
											"end": 10859,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 10305,
											"end": 10859,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10305,
											"end": 10859,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10305,
											"end": 10859,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										}
									]
								}
							},
							"sourceList": [
								"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol",
								"@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol",
								"@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol",
								"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol",
								"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol",
								"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol",
								"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol",
								"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol",
								"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol",
								"contracts/PriceAggregator.sol",
								"contracts/interfaces/IERC20.sol",
								"contracts/libraries/UniswapV2.sol",
								"contracts/libraries/UniswapV3.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"Price(address,address,address)": "c361e0b1"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tOut\",\"type\":\"address\"}],\"name\":\"Price\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/libraries/UniswapV2.sol\":\"UniswapV2\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol\":{\"keccak256\":\"0x8a3c5c449d4b7cd76513ed6995f4b86e4a86f222c770f8442f5fc128ce29b4d2\",\"urls\":[\"bzz-raw://1df63ca373dafae3bd0ee7fe70f890a1dc7c45ed869c01de68413e0e97ff9deb\",\"dweb:/ipfs/QmefJgEYGUL8KX7kQKYTrDweF8GB7yjy3nw5Bmqzryg7PG\"]},\"contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x7df9d93243a890a6dc175905d65495ae5726330faa50409ab8460c4c00c672e1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3ff91fe9d915b97343e152f1a15a46e5ff9477e90e90a4431dca38f79eb2cdba\",\"dweb:/ipfs/QmcHUAJs2MfcdbAFTzdQE1eGevxCGHNDXECiuGLDaUs34S\"]},\"contracts/libraries/UniswapV2.sol\":{\"keccak256\":\"0x8f682c09a2af769d4db8e8a9f34d4aae334a057c6b01ce6f209eaed672730bae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://817dc11c5e97e00fdef113aff3a333bbb1ce9f8285be9f91540a1d197f55fea3\",\"dweb:/ipfs/QmTw2nWphRw5Smt4z4QTV8jBFaEQjxG4Fmzo1VMGi9F82o\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/libraries/UniswapV3.sol": {
				"UniswapV3": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "provider",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tIn",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tOut",
									"type": "address"
								}
							],
							"name": "sqrtPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/libraries/UniswapV3.sol\":232:597  library UniswapV3 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/libraries/UniswapV3.sol\":232:597  library UniswapV3 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xedf15a9a\n      eq\n      tag_2\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"contracts/libraries/UniswapV3.sol\":261:595  function sqrtPrice(address provider,address tIn,address tOut) external view returns (uint256){... */\n    tag_2:\n      tag_3\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_4\n      swap2\n      swap1\n      tag_5\n      jump\t// in\n    tag_4:\n      tag_6\n      jump\t// in\n    tag_3:\n      mload(0x40)\n      tag_7\n      swap2\n      swap1\n      tag_8\n      jump\t// in\n    tag_7:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n    tag_6:\n        /* \"contracts/libraries/UniswapV3.sol\":346:353  uint256 */\n      0x00\n        /* \"contracts/libraries/UniswapV3.sol\":368:380  address pool */\n      dup1\n        /* \"contracts/libraries/UniswapV3.sol\":401:409  provider */\n      dup5\n        /* \"contracts/libraries/UniswapV3.sol\":383:418  IUniswapV3Factory(provider).getPool */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x1698ee82\n        /* \"contracts/libraries/UniswapV3.sol\":419:422  tIn */\n      dup6\n        /* \"contracts/libraries/UniswapV3.sol\":423:427  tOut */\n      dup6\n        /* \"contracts/libraries/UniswapV3.sol\":428:432  3000 */\n      0x0bb8\n        /* \"contracts/libraries/UniswapV3.sol\":383:433  IUniswapV3Factory(provider).getPool(tIn,tOut,3000) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_10\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_10:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_13\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_13:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_14\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_14:\n        /* \"contracts/libraries/UniswapV3.sol\":368:433  address pool = IUniswapV3Factory(provider).getPool(tIn,tOut,3000) */\n      swap1\n      pop\n        /* \"contracts/libraries/UniswapV3.sol\":467:468  0 */\n      0x00\n        /* \"contracts/libraries/UniswapV3.sol\":451:469  pool == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/libraries/UniswapV3.sol\":451:455  pool */\n      dup2\n        /* \"contracts/libraries/UniswapV3.sol\":451:469  pool == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/libraries/UniswapV3.sol\":447:479  if (pool == address(0)) return 0 */\n      tag_16\n      jumpi\n        /* \"contracts/libraries/UniswapV3.sol\":478:479  0 */\n      0x00\n        /* \"contracts/libraries/UniswapV3.sol\":471:479  return 0 */\n      swap2\n      pop\n      pop\n      jump(tag_9)\n        /* \"contracts/libraries/UniswapV3.sol\":447:479  if (pool == address(0)) return 0 */\n    tag_16:\n        /* \"contracts/libraries/UniswapV3.sol\":495:515  uint160 sqrtPriceX96 */\n      0x00\n        /* \"contracts/libraries/UniswapV3.sol\":540:544  pool */\n      dup2\n        /* \"contracts/libraries/UniswapV3.sol\":525:551  IUniswapV3Pool(pool).slot0 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x3850c7bd\n        /* \"contracts/libraries/UniswapV3.sol\":525:553  IUniswapV3Pool(pool).slot0() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0xe0\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_18\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_18:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_19\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_19:\n        /* \"contracts/libraries/UniswapV3.sol\":494:553  (uint160 sqrtPriceX96,,,,,,) = IUniswapV3Pool(pool).slot0() */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/libraries/UniswapV3.sol\":575:587  sqrtPriceX96 */\n      dup1\n        /* \"contracts/libraries/UniswapV3.sol\":568:587  return sqrtPriceX96 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap3\n      pop\n      pop\n      pop\n        /* \"contracts/libraries/UniswapV3.sol\":261:595  function sqrtPrice(address provider,address tIn,address tOut) external view returns (uint256){... */\n    tag_9:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_22:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_24:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_25:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_57\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_24\n      jump\t// in\n    tag_57:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_26:\n        /* \"#utility.yul\":641:665   */\n      tag_59\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_25\n      jump\t// in\n    tag_59:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_60\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      dup1\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_60:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_27:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_62\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_26\n      jump\t// in\n    tag_62:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:1460   */\n    tag_5:\n        /* \"#utility.yul\":918:924   */\n      0x00\n        /* \"#utility.yul\":926:932   */\n      dup1\n        /* \"#utility.yul\":934:940   */\n      0x00\n        /* \"#utility.yul\":983:985   */\n      0x60\n        /* \"#utility.yul\":971:980   */\n      dup5\n        /* \"#utility.yul\":962:969   */\n      dup7\n        /* \"#utility.yul\":958:981   */\n      sub\n        /* \"#utility.yul\":954:986   */\n      slt\n        /* \"#utility.yul\":951:1070   */\n      iszero\n      tag_64\n      jumpi\n        /* \"#utility.yul\":989:1068   */\n      tag_65\n      tag_22\n      jump\t// in\n    tag_65:\n        /* \"#utility.yul\":951:1070   */\n    tag_64:\n        /* \"#utility.yul\":1109:1110   */\n      0x00\n        /* \"#utility.yul\":1134:1187   */\n      tag_66\n        /* \"#utility.yul\":1179:1186   */\n      dup7\n        /* \"#utility.yul\":1170:1176   */\n      dup3\n        /* \"#utility.yul\":1159:1168   */\n      dup8\n        /* \"#utility.yul\":1155:1177   */\n      add\n        /* \"#utility.yul\":1134:1187   */\n      tag_27\n      jump\t// in\n    tag_66:\n        /* \"#utility.yul\":1124:1187   */\n      swap4\n      pop\n        /* \"#utility.yul\":1080:1197   */\n      pop\n        /* \"#utility.yul\":1236:1238   */\n      0x20\n        /* \"#utility.yul\":1262:1315   */\n      tag_67\n        /* \"#utility.yul\":1307:1314   */\n      dup7\n        /* \"#utility.yul\":1298:1304   */\n      dup3\n        /* \"#utility.yul\":1287:1296   */\n      dup8\n        /* \"#utility.yul\":1283:1305   */\n      add\n        /* \"#utility.yul\":1262:1315   */\n      tag_27\n      jump\t// in\n    tag_67:\n        /* \"#utility.yul\":1252:1315   */\n      swap3\n      pop\n        /* \"#utility.yul\":1207:1325   */\n      pop\n        /* \"#utility.yul\":1364:1366   */\n      0x40\n        /* \"#utility.yul\":1390:1443   */\n      tag_68\n        /* \"#utility.yul\":1435:1442   */\n      dup7\n        /* \"#utility.yul\":1426:1432   */\n      dup3\n        /* \"#utility.yul\":1415:1424   */\n      dup8\n        /* \"#utility.yul\":1411:1433   */\n      add\n        /* \"#utility.yul\":1390:1443   */\n      tag_27\n      jump\t// in\n    tag_68:\n        /* \"#utility.yul\":1380:1443   */\n      swap2\n      pop\n        /* \"#utility.yul\":1335:1453   */\n      pop\n        /* \"#utility.yul\":841:1460   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":1466:1543   */\n    tag_28:\n        /* \"#utility.yul\":1503:1510   */\n      0x00\n        /* \"#utility.yul\":1532:1537   */\n      dup2\n        /* \"#utility.yul\":1521:1537   */\n      swap1\n      pop\n        /* \"#utility.yul\":1466:1543   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1549:1675   */\n    tag_29:\n        /* \"#utility.yul\":1644:1668   */\n      tag_71\n        /* \"#utility.yul\":1662:1667   */\n      dup2\n        /* \"#utility.yul\":1644:1668   */\n      tag_28\n      jump\t// in\n    tag_71:\n        /* \"#utility.yul\":1639:1642   */\n      dup3\n        /* \"#utility.yul\":1632:1669   */\n      mstore\n        /* \"#utility.yul\":1549:1675   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1681:1919   */\n    tag_8:\n        /* \"#utility.yul\":1782:1786   */\n      0x00\n        /* \"#utility.yul\":1820:1822   */\n      0x20\n        /* \"#utility.yul\":1809:1818   */\n      dup3\n        /* \"#utility.yul\":1805:1823   */\n      add\n        /* \"#utility.yul\":1797:1823   */\n      swap1\n      pop\n        /* \"#utility.yul\":1833:1912   */\n      tag_73\n        /* \"#utility.yul\":1909:1910   */\n      0x00\n        /* \"#utility.yul\":1898:1907   */\n      dup4\n        /* \"#utility.yul\":1894:1911   */\n      add\n        /* \"#utility.yul\":1885:1891   */\n      dup5\n        /* \"#utility.yul\":1833:1912   */\n      tag_29\n      jump\t// in\n    tag_73:\n        /* \"#utility.yul\":1681:1919   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1925:2043   */\n    tag_30:\n        /* \"#utility.yul\":2012:2036   */\n      tag_75\n        /* \"#utility.yul\":2030:2035   */\n      dup2\n        /* \"#utility.yul\":2012:2036   */\n      tag_25\n      jump\t// in\n    tag_75:\n        /* \"#utility.yul\":2007:2010   */\n      dup3\n        /* \"#utility.yul\":2000:2037   */\n      mstore\n        /* \"#utility.yul\":1925:2043   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2049:2137   */\n    tag_31:\n        /* \"#utility.yul\":2097:2104   */\n      0x00\n        /* \"#utility.yul\":2126:2131   */\n      dup2\n        /* \"#utility.yul\":2115:2131   */\n      swap1\n      pop\n        /* \"#utility.yul\":2049:2137   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2143:2234   */\n    tag_32:\n        /* \"#utility.yul\":2179:2186   */\n      0x00\n        /* \"#utility.yul\":2219:2227   */\n      0xffffff\n        /* \"#utility.yul\":2212:2217   */\n      dup3\n        /* \"#utility.yul\":2208:2228   */\n      and\n        /* \"#utility.yul\":2197:2228   */\n      swap1\n      pop\n        /* \"#utility.yul\":2143:2234   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2240:2300   */\n    tag_33:\n        /* \"#utility.yul\":2268:2271   */\n      0x00\n        /* \"#utility.yul\":2289:2294   */\n      dup2\n        /* \"#utility.yul\":2282:2294   */\n      swap1\n      pop\n        /* \"#utility.yul\":2240:2300   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2306:2468   */\n    tag_34:\n        /* \"#utility.yul\":2366:2375   */\n      0x00\n        /* \"#utility.yul\":2399:2462   */\n      tag_80\n        /* \"#utility.yul\":2416:2461   */\n      tag_81\n        /* \"#utility.yul\":2425:2460   */\n      tag_82\n        /* \"#utility.yul\":2454:2459   */\n      dup5\n        /* \"#utility.yul\":2425:2460   */\n      tag_31\n      jump\t// in\n    tag_82:\n        /* \"#utility.yul\":2416:2461   */\n      tag_33\n      jump\t// in\n    tag_81:\n        /* \"#utility.yul\":2399:2462   */\n      tag_32\n      jump\t// in\n    tag_80:\n        /* \"#utility.yul\":2386:2462   */\n      swap1\n      pop\n        /* \"#utility.yul\":2306:2468   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2474:2625   */\n    tag_35:\n        /* \"#utility.yul\":2571:2618   */\n      tag_84\n        /* \"#utility.yul\":2612:2617   */\n      dup2\n        /* \"#utility.yul\":2571:2618   */\n      tag_34\n      jump\t// in\n    tag_84:\n        /* \"#utility.yul\":2566:2569   */\n      dup3\n        /* \"#utility.yul\":2559:2619   */\n      mstore\n        /* \"#utility.yul\":2474:2625   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2631:3093   */\n    tag_11:\n        /* \"#utility.yul\":2790:2794   */\n      0x00\n        /* \"#utility.yul\":2828:2830   */\n      0x60\n        /* \"#utility.yul\":2817:2826   */\n      dup3\n        /* \"#utility.yul\":2813:2831   */\n      add\n        /* \"#utility.yul\":2805:2831   */\n      swap1\n      pop\n        /* \"#utility.yul\":2841:2912   */\n      tag_86\n        /* \"#utility.yul\":2909:2910   */\n      0x00\n        /* \"#utility.yul\":2898:2907   */\n      dup4\n        /* \"#utility.yul\":2894:2911   */\n      add\n        /* \"#utility.yul\":2885:2891   */\n      dup7\n        /* \"#utility.yul\":2841:2912   */\n      tag_30\n      jump\t// in\n    tag_86:\n        /* \"#utility.yul\":2922:2994   */\n      tag_87\n        /* \"#utility.yul\":2990:2992   */\n      0x20\n        /* \"#utility.yul\":2979:2988   */\n      dup4\n        /* \"#utility.yul\":2975:2993   */\n      add\n        /* \"#utility.yul\":2966:2972   */\n      dup6\n        /* \"#utility.yul\":2922:2994   */\n      tag_30\n      jump\t// in\n    tag_87:\n        /* \"#utility.yul\":3004:3086   */\n      tag_88\n        /* \"#utility.yul\":3082:3084   */\n      0x40\n        /* \"#utility.yul\":3071:3080   */\n      dup4\n        /* \"#utility.yul\":3067:3085   */\n      add\n        /* \"#utility.yul\":3058:3064   */\n      dup5\n        /* \"#utility.yul\":3004:3086   */\n      tag_35\n      jump\t// in\n    tag_88:\n        /* \"#utility.yul\":2631:3093   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3099:3242   */\n    tag_36:\n        /* \"#utility.yul\":3156:3161   */\n      0x00\n        /* \"#utility.yul\":3187:3193   */\n      dup2\n        /* \"#utility.yul\":3181:3194   */\n      mload\n        /* \"#utility.yul\":3172:3194   */\n      swap1\n      pop\n        /* \"#utility.yul\":3203:3236   */\n      tag_90\n        /* \"#utility.yul\":3230:3235   */\n      dup2\n        /* \"#utility.yul\":3203:3236   */\n      tag_26\n      jump\t// in\n    tag_90:\n        /* \"#utility.yul\":3099:3242   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3248:3599   */\n    tag_15:\n        /* \"#utility.yul\":3318:3324   */\n      0x00\n        /* \"#utility.yul\":3367:3369   */\n      0x20\n        /* \"#utility.yul\":3355:3364   */\n      dup3\n        /* \"#utility.yul\":3346:3353   */\n      dup5\n        /* \"#utility.yul\":3342:3365   */\n      sub\n        /* \"#utility.yul\":3338:3370   */\n      slt\n        /* \"#utility.yul\":3335:3454   */\n      iszero\n      tag_92\n      jumpi\n        /* \"#utility.yul\":3373:3452   */\n      tag_93\n      tag_22\n      jump\t// in\n    tag_93:\n        /* \"#utility.yul\":3335:3454   */\n    tag_92:\n        /* \"#utility.yul\":3493:3494   */\n      0x00\n        /* \"#utility.yul\":3518:3582   */\n      tag_94\n        /* \"#utility.yul\":3574:3581   */\n      dup5\n        /* \"#utility.yul\":3565:3571   */\n      dup3\n        /* \"#utility.yul\":3554:3563   */\n      dup6\n        /* \"#utility.yul\":3550:3572   */\n      add\n        /* \"#utility.yul\":3518:3582   */\n      tag_36\n      jump\t// in\n    tag_94:\n        /* \"#utility.yul\":3508:3582   */\n      swap2\n      pop\n        /* \"#utility.yul\":3464:3592   */\n      pop\n        /* \"#utility.yul\":3248:3599   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3605:3727   */\n    tag_37:\n        /* \"#utility.yul\":3678:3702   */\n      tag_96\n        /* \"#utility.yul\":3696:3701   */\n      dup2\n        /* \"#utility.yul\":3678:3702   */\n      tag_24\n      jump\t// in\n    tag_96:\n        /* \"#utility.yul\":3671:3676   */\n      dup2\n        /* \"#utility.yul\":3668:3703   */\n      eq\n        /* \"#utility.yul\":3658:3721   */\n      tag_97\n      jumpi\n        /* \"#utility.yul\":3717:3718   */\n      0x00\n        /* \"#utility.yul\":3714:3715   */\n      dup1\n        /* \"#utility.yul\":3707:3719   */\n      revert\n        /* \"#utility.yul\":3658:3721   */\n    tag_97:\n        /* \"#utility.yul\":3605:3727   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3733:3876   */\n    tag_38:\n        /* \"#utility.yul\":3790:3795   */\n      0x00\n        /* \"#utility.yul\":3821:3827   */\n      dup2\n        /* \"#utility.yul\":3815:3828   */\n      mload\n        /* \"#utility.yul\":3806:3828   */\n      swap1\n      pop\n        /* \"#utility.yul\":3837:3870   */\n      tag_99\n        /* \"#utility.yul\":3864:3869   */\n      dup2\n        /* \"#utility.yul\":3837:3870   */\n      tag_37\n      jump\t// in\n    tag_99:\n        /* \"#utility.yul\":3733:3876   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3882:3972   */\n    tag_39:\n        /* \"#utility.yul\":3917:3924   */\n      0x00\n        /* \"#utility.yul\":3960:3965   */\n      dup2\n        /* \"#utility.yul\":3957:3958   */\n      0x02\n        /* \"#utility.yul\":3946:3966   */\n      signextend\n        /* \"#utility.yul\":3935:3966   */\n      swap1\n      pop\n        /* \"#utility.yul\":3882:3972   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3978:4096   */\n    tag_40:\n        /* \"#utility.yul\":4049:4071   */\n      tag_102\n        /* \"#utility.yul\":4065:4070   */\n      dup2\n        /* \"#utility.yul\":4049:4071   */\n      tag_39\n      jump\t// in\n    tag_102:\n        /* \"#utility.yul\":4042:4047   */\n      dup2\n        /* \"#utility.yul\":4039:4072   */\n      eq\n        /* \"#utility.yul\":4029:4090   */\n      tag_103\n      jumpi\n        /* \"#utility.yul\":4086:4087   */\n      0x00\n        /* \"#utility.yul\":4083:4084   */\n      dup1\n        /* \"#utility.yul\":4076:4088   */\n      revert\n        /* \"#utility.yul\":4029:4090   */\n    tag_103:\n        /* \"#utility.yul\":3978:4096   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4102:4241   */\n    tag_41:\n        /* \"#utility.yul\":4157:4162   */\n      0x00\n        /* \"#utility.yul\":4188:4194   */\n      dup2\n        /* \"#utility.yul\":4182:4195   */\n      mload\n        /* \"#utility.yul\":4173:4195   */\n      swap1\n      pop\n        /* \"#utility.yul\":4204:4235   */\n      tag_105\n        /* \"#utility.yul\":4229:4234   */\n      dup2\n        /* \"#utility.yul\":4204:4235   */\n      tag_40\n      jump\t// in\n    tag_105:\n        /* \"#utility.yul\":4102:4241   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4247:4336   */\n    tag_42:\n        /* \"#utility.yul\":4283:4290   */\n      0x00\n        /* \"#utility.yul\":4323:4329   */\n      0xffff\n        /* \"#utility.yul\":4316:4321   */\n      dup3\n        /* \"#utility.yul\":4312:4330   */\n      and\n        /* \"#utility.yul\":4301:4330   */\n      swap1\n      pop\n        /* \"#utility.yul\":4247:4336   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4342:4462   */\n    tag_43:\n        /* \"#utility.yul\":4414:4437   */\n      tag_108\n        /* \"#utility.yul\":4431:4436   */\n      dup2\n        /* \"#utility.yul\":4414:4437   */\n      tag_42\n      jump\t// in\n    tag_108:\n        /* \"#utility.yul\":4407:4412   */\n      dup2\n        /* \"#utility.yul\":4404:4438   */\n      eq\n        /* \"#utility.yul\":4394:4456   */\n      tag_109\n      jumpi\n        /* \"#utility.yul\":4452:4453   */\n      0x00\n        /* \"#utility.yul\":4449:4450   */\n      dup1\n        /* \"#utility.yul\":4442:4454   */\n      revert\n        /* \"#utility.yul\":4394:4456   */\n    tag_109:\n        /* \"#utility.yul\":4342:4462   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4468:4609   */\n    tag_44:\n        /* \"#utility.yul\":4524:4529   */\n      0x00\n        /* \"#utility.yul\":4555:4561   */\n      dup2\n        /* \"#utility.yul\":4549:4562   */\n      mload\n        /* \"#utility.yul\":4540:4562   */\n      swap1\n      pop\n        /* \"#utility.yul\":4571:4603   */\n      tag_111\n        /* \"#utility.yul\":4597:4602   */\n      dup2\n        /* \"#utility.yul\":4571:4603   */\n      tag_43\n      jump\t// in\n    tag_111:\n        /* \"#utility.yul\":4468:4609   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4615:4701   */\n    tag_45:\n        /* \"#utility.yul\":4650:4657   */\n      0x00\n        /* \"#utility.yul\":4690:4694   */\n      0xff\n        /* \"#utility.yul\":4683:4688   */\n      dup3\n        /* \"#utility.yul\":4679:4695   */\n      and\n        /* \"#utility.yul\":4668:4695   */\n      swap1\n      pop\n        /* \"#utility.yul\":4615:4701   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4707:4825   */\n    tag_46:\n        /* \"#utility.yul\":4778:4800   */\n      tag_114\n        /* \"#utility.yul\":4794:4799   */\n      dup2\n        /* \"#utility.yul\":4778:4800   */\n      tag_45\n      jump\t// in\n    tag_114:\n        /* \"#utility.yul\":4771:4776   */\n      dup2\n        /* \"#utility.yul\":4768:4801   */\n      eq\n        /* \"#utility.yul\":4758:4819   */\n      tag_115\n      jumpi\n        /* \"#utility.yul\":4815:4816   */\n      0x00\n        /* \"#utility.yul\":4812:4813   */\n      dup1\n        /* \"#utility.yul\":4805:4817   */\n      revert\n        /* \"#utility.yul\":4758:4819   */\n    tag_115:\n        /* \"#utility.yul\":4707:4825   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4831:4970   */\n    tag_47:\n        /* \"#utility.yul\":4886:4891   */\n      0x00\n        /* \"#utility.yul\":4917:4923   */\n      dup2\n        /* \"#utility.yul\":4911:4924   */\n      mload\n        /* \"#utility.yul\":4902:4924   */\n      swap1\n      pop\n        /* \"#utility.yul\":4933:4964   */\n      tag_117\n        /* \"#utility.yul\":4958:4963   */\n      dup2\n        /* \"#utility.yul\":4933:4964   */\n      tag_46\n      jump\t// in\n    tag_117:\n        /* \"#utility.yul\":4831:4970   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4976:5066   */\n    tag_48:\n        /* \"#utility.yul\":5010:5017   */\n      0x00\n        /* \"#utility.yul\":5053:5058   */\n      dup2\n        /* \"#utility.yul\":5046:5059   */\n      iszero\n        /* \"#utility.yul\":5039:5060   */\n      iszero\n        /* \"#utility.yul\":5028:5060   */\n      swap1\n      pop\n        /* \"#utility.yul\":4976:5066   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5072:5188   */\n    tag_49:\n        /* \"#utility.yul\":5142:5163   */\n      tag_120\n        /* \"#utility.yul\":5157:5162   */\n      dup2\n        /* \"#utility.yul\":5142:5163   */\n      tag_48\n      jump\t// in\n    tag_120:\n        /* \"#utility.yul\":5135:5140   */\n      dup2\n        /* \"#utility.yul\":5132:5164   */\n      eq\n        /* \"#utility.yul\":5122:5182   */\n      tag_121\n      jumpi\n        /* \"#utility.yul\":5178:5179   */\n      0x00\n        /* \"#utility.yul\":5175:5176   */\n      dup1\n        /* \"#utility.yul\":5168:5180   */\n      revert\n        /* \"#utility.yul\":5122:5182   */\n    tag_121:\n        /* \"#utility.yul\":5072:5188   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5194:5331   */\n    tag_50:\n        /* \"#utility.yul\":5248:5253   */\n      0x00\n        /* \"#utility.yul\":5279:5285   */\n      dup2\n        /* \"#utility.yul\":5273:5286   */\n      mload\n        /* \"#utility.yul\":5264:5286   */\n      swap1\n      pop\n        /* \"#utility.yul\":5295:5325   */\n      tag_123\n        /* \"#utility.yul\":5319:5324   */\n      dup2\n        /* \"#utility.yul\":5295:5325   */\n      tag_49\n      jump\t// in\n    tag_123:\n        /* \"#utility.yul\":5194:5331   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5337:6608   */\n    tag_20:\n        /* \"#utility.yul\":5451:5457   */\n      0x00\n        /* \"#utility.yul\":5459:5465   */\n      dup1\n        /* \"#utility.yul\":5467:5473   */\n      0x00\n        /* \"#utility.yul\":5475:5481   */\n      dup1\n        /* \"#utility.yul\":5483:5489   */\n      0x00\n        /* \"#utility.yul\":5491:5497   */\n      dup1\n        /* \"#utility.yul\":5499:5505   */\n      0x00\n        /* \"#utility.yul\":5548:5551   */\n      0xe0\n        /* \"#utility.yul\":5536:5545   */\n      dup9\n        /* \"#utility.yul\":5527:5534   */\n      dup11\n        /* \"#utility.yul\":5523:5546   */\n      sub\n        /* \"#utility.yul\":5519:5552   */\n      slt\n        /* \"#utility.yul\":5516:5636   */\n      iszero\n      tag_125\n      jumpi\n        /* \"#utility.yul\":5555:5634   */\n      tag_126\n      tag_22\n      jump\t// in\n    tag_126:\n        /* \"#utility.yul\":5516:5636   */\n    tag_125:\n        /* \"#utility.yul\":5675:5676   */\n      0x00\n        /* \"#utility.yul\":5700:5764   */\n      tag_127\n        /* \"#utility.yul\":5756:5763   */\n      dup11\n        /* \"#utility.yul\":5747:5753   */\n      dup3\n        /* \"#utility.yul\":5736:5745   */\n      dup12\n        /* \"#utility.yul\":5732:5754   */\n      add\n        /* \"#utility.yul\":5700:5764   */\n      tag_38\n      jump\t// in\n    tag_127:\n        /* \"#utility.yul\":5690:5764   */\n      swap8\n      pop\n        /* \"#utility.yul\":5646:5774   */\n      pop\n        /* \"#utility.yul\":5813:5815   */\n      0x20\n        /* \"#utility.yul\":5839:5901   */\n      tag_128\n        /* \"#utility.yul\":5893:5900   */\n      dup11\n        /* \"#utility.yul\":5884:5890   */\n      dup3\n        /* \"#utility.yul\":5873:5882   */\n      dup12\n        /* \"#utility.yul\":5869:5891   */\n      add\n        /* \"#utility.yul\":5839:5901   */\n      tag_41\n      jump\t// in\n    tag_128:\n        /* \"#utility.yul\":5829:5901   */\n      swap7\n      pop\n        /* \"#utility.yul\":5784:5911   */\n      pop\n        /* \"#utility.yul\":5950:5952   */\n      0x40\n        /* \"#utility.yul\":5976:6039   */\n      tag_129\n        /* \"#utility.yul\":6031:6038   */\n      dup11\n        /* \"#utility.yul\":6022:6028   */\n      dup3\n        /* \"#utility.yul\":6011:6020   */\n      dup12\n        /* \"#utility.yul\":6007:6029   */\n      add\n        /* \"#utility.yul\":5976:6039   */\n      tag_44\n      jump\t// in\n    tag_129:\n        /* \"#utility.yul\":5966:6039   */\n      swap6\n      pop\n        /* \"#utility.yul\":5921:6049   */\n      pop\n        /* \"#utility.yul\":6088:6090   */\n      0x60\n        /* \"#utility.yul\":6114:6177   */\n      tag_130\n        /* \"#utility.yul\":6169:6176   */\n      dup11\n        /* \"#utility.yul\":6160:6166   */\n      dup3\n        /* \"#utility.yul\":6149:6158   */\n      dup12\n        /* \"#utility.yul\":6145:6167   */\n      add\n        /* \"#utility.yul\":6114:6177   */\n      tag_44\n      jump\t// in\n    tag_130:\n        /* \"#utility.yul\":6104:6177   */\n      swap5\n      pop\n        /* \"#utility.yul\":6059:6187   */\n      pop\n        /* \"#utility.yul\":6226:6229   */\n      0x80\n        /* \"#utility.yul\":6253:6316   */\n      tag_131\n        /* \"#utility.yul\":6308:6315   */\n      dup11\n        /* \"#utility.yul\":6299:6305   */\n      dup3\n        /* \"#utility.yul\":6288:6297   */\n      dup12\n        /* \"#utility.yul\":6284:6306   */\n      add\n        /* \"#utility.yul\":6253:6316   */\n      tag_44\n      jump\t// in\n    tag_131:\n        /* \"#utility.yul\":6243:6316   */\n      swap4\n      pop\n        /* \"#utility.yul\":6197:6326   */\n      pop\n        /* \"#utility.yul\":6365:6368   */\n      0xa0\n        /* \"#utility.yul\":6392:6454   */\n      tag_132\n        /* \"#utility.yul\":6446:6453   */\n      dup11\n        /* \"#utility.yul\":6437:6443   */\n      dup3\n        /* \"#utility.yul\":6426:6435   */\n      dup12\n        /* \"#utility.yul\":6422:6444   */\n      add\n        /* \"#utility.yul\":6392:6454   */\n      tag_47\n      jump\t// in\n    tag_132:\n        /* \"#utility.yul\":6382:6454   */\n      swap3\n      pop\n        /* \"#utility.yul\":6336:6464   */\n      pop\n        /* \"#utility.yul\":6503:6506   */\n      0xc0\n        /* \"#utility.yul\":6530:6591   */\n      tag_133\n        /* \"#utility.yul\":6583:6590   */\n      dup11\n        /* \"#utility.yul\":6574:6580   */\n      dup3\n        /* \"#utility.yul\":6563:6572   */\n      dup12\n        /* \"#utility.yul\":6559:6581   */\n      add\n        /* \"#utility.yul\":6530:6591   */\n      tag_50\n      jump\t// in\n    tag_133:\n        /* \"#utility.yul\":6520:6591   */\n      swap2\n      pop\n        /* \"#utility.yul\":6474:6601   */\n      pop\n        /* \"#utility.yul\":5337:6608   */\n      swap3\n      swap6\n      swap9\n      swap2\n      swap5\n      swap8\n      pop\n      swap3\n      swap6\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220d3d90ca81bb6b5aa2b4923f7f99497428bf1d8e22869e834d6c8e0145b73d88d64736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "610577610053600b82828239805160001a607314610046577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100355760003560e01c8063edf15a9a1461003a575b600080fd5b610054600480360381019061004f919061022c565b61006a565b6040516100619190610298565b60405180910390f35b6000808473ffffffffffffffffffffffffffffffffffffffff16631698ee828585610bb86040518463ffffffff1660e01b81526004016100ac93929190610316565b602060405180830381865afa1580156100c9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100ed9190610362565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361012d5760009150506101c2565b60008173ffffffffffffffffffffffffffffffffffffffff16633850c7bd6040518163ffffffff1660e01b815260040160e060405180830381865afa15801561017a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061019e919061049f565b50505050505090508073ffffffffffffffffffffffffffffffffffffffff16925050505b9392505050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006101f9826101ce565b9050919050565b610209816101ee565b811461021457600080fd5b50565b60008135905061022681610200565b92915050565b600080600060608486031215610245576102446101c9565b5b600061025386828701610217565b935050602061026486828701610217565b925050604061027586828701610217565b9150509250925092565b6000819050919050565b6102928161027f565b82525050565b60006020820190506102ad6000830184610289565b92915050565b6102bc816101ee565b82525050565b6000819050919050565b600062ffffff82169050919050565b6000819050919050565b60006103006102fb6102f6846102c2565b6102db565b6102cc565b9050919050565b610310816102e5565b82525050565b600060608201905061032b60008301866102b3565b61033860208301856102b3565b6103456040830184610307565b949350505050565b60008151905061035c81610200565b92915050565b600060208284031215610378576103776101c9565b5b60006103868482850161034d565b91505092915050565b610398816101ce565b81146103a357600080fd5b50565b6000815190506103b58161038f565b92915050565b60008160020b9050919050565b6103d1816103bb565b81146103dc57600080fd5b50565b6000815190506103ee816103c8565b92915050565b600061ffff82169050919050565b61040b816103f4565b811461041657600080fd5b50565b60008151905061042881610402565b92915050565b600060ff82169050919050565b6104448161042e565b811461044f57600080fd5b50565b6000815190506104618161043b565b92915050565b60008115159050919050565b61047c81610467565b811461048757600080fd5b50565b60008151905061049981610473565b92915050565b600080600080600080600060e0888a0312156104be576104bd6101c9565b5b60006104cc8a828b016103a6565b97505060206104dd8a828b016103df565b96505060406104ee8a828b01610419565b95505060606104ff8a828b01610419565b94505060806105108a828b01610419565b93505060a06105218a828b01610452565b92505060c06105328a828b0161048a565b9150509295989194975092955056fea2646970667358221220d3d90ca81bb6b5aa2b4923f7f99497428bf1d8e22869e834d6c8e0145b73d88d64736f6c63430008110033",
							"opcodes": "PUSH2 0x577 PUSH2 0x53 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH2 0x46 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x35 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xEDF15A9A EQ PUSH2 0x3A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x54 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4F SWAP2 SWAP1 PUSH2 0x22C JUMP JUMPDEST PUSH2 0x6A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x61 SWAP2 SWAP1 PUSH2 0x298 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x1698EE82 DUP6 DUP6 PUSH2 0xBB8 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAC SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x316 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xED SWAP2 SWAP1 PUSH2 0x362 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x12D JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0x1C2 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x3850C7BD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xE0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x17A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x19E SWAP2 SWAP1 PUSH2 0x49F JUMP JUMPDEST POP POP POP POP POP POP SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP3 POP POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F9 DUP3 PUSH2 0x1CE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x209 DUP2 PUSH2 0x1EE JUMP JUMPDEST DUP2 EQ PUSH2 0x214 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x226 DUP2 PUSH2 0x200 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x245 JUMPI PUSH2 0x244 PUSH2 0x1C9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x253 DUP7 DUP3 DUP8 ADD PUSH2 0x217 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x264 DUP7 DUP3 DUP8 ADD PUSH2 0x217 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x275 DUP7 DUP3 DUP8 ADD PUSH2 0x217 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x292 DUP2 PUSH2 0x27F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2AD PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x289 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2BC DUP2 PUSH2 0x1EE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x300 PUSH2 0x2FB PUSH2 0x2F6 DUP5 PUSH2 0x2C2 JUMP JUMPDEST PUSH2 0x2DB JUMP JUMPDEST PUSH2 0x2CC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x310 DUP2 PUSH2 0x2E5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x32B PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x2B3 JUMP JUMPDEST PUSH2 0x338 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x2B3 JUMP JUMPDEST PUSH2 0x345 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x307 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x35C DUP2 PUSH2 0x200 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x378 JUMPI PUSH2 0x377 PUSH2 0x1C9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x386 DUP5 DUP3 DUP6 ADD PUSH2 0x34D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x398 DUP2 PUSH2 0x1CE JUMP JUMPDEST DUP2 EQ PUSH2 0x3A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x3B5 DUP2 PUSH2 0x38F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x2 SIGNEXTEND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3D1 DUP2 PUSH2 0x3BB JUMP JUMPDEST DUP2 EQ PUSH2 0x3DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x3EE DUP2 PUSH2 0x3C8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x40B DUP2 PUSH2 0x3F4 JUMP JUMPDEST DUP2 EQ PUSH2 0x416 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x428 DUP2 PUSH2 0x402 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x444 DUP2 PUSH2 0x42E JUMP JUMPDEST DUP2 EQ PUSH2 0x44F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x461 DUP2 PUSH2 0x43B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x47C DUP2 PUSH2 0x467 JUMP JUMPDEST DUP2 EQ PUSH2 0x487 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x499 DUP2 PUSH2 0x473 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x4BE JUMPI PUSH2 0x4BD PUSH2 0x1C9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4CC DUP11 DUP3 DUP12 ADD PUSH2 0x3A6 JUMP JUMPDEST SWAP8 POP POP PUSH1 0x20 PUSH2 0x4DD DUP11 DUP3 DUP12 ADD PUSH2 0x3DF JUMP JUMPDEST SWAP7 POP POP PUSH1 0x40 PUSH2 0x4EE DUP11 DUP3 DUP12 ADD PUSH2 0x419 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x60 PUSH2 0x4FF DUP11 DUP3 DUP12 ADD PUSH2 0x419 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x80 PUSH2 0x510 DUP11 DUP3 DUP12 ADD PUSH2 0x419 JUMP JUMPDEST SWAP4 POP POP PUSH1 0xA0 PUSH2 0x521 DUP11 DUP3 DUP12 ADD PUSH2 0x452 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xC0 PUSH2 0x532 DUP11 DUP3 DUP12 ADD PUSH2 0x48A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD3 0xD9 0xC 0xA8 SHL 0xB6 0xB5 0xAA 0x2B 0x49 0x23 0xF7 0xF9 SWAP5 SWAP8 TIMESTAMP DUP12 CALL 0xD8 0xE2 0x28 PUSH10 0xE834D6C8E0145B73D88D PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "232:365:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@sqrtPrice_1183": {
									"entryPoint": 106,
									"id": 1183,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 535,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 845,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 1162,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_int24_fromMemory": {
									"entryPoint": 991,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint160_fromMemory": {
									"entryPoint": 934,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint16_fromMemory": {
									"entryPoint": 1049,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint8_fromMemory": {
									"entryPoint": 1106,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 866,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_address": {
									"entryPoint": 556,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_uint160t_int24t_uint16t_uint16t_uint16t_uint8t_bool_fromMemory": {
									"entryPoint": 1183,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 7
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 691,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_rational_3000_by_1_to_t_uint24_fromStack": {
									"entryPoint": 775,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack_library": {
									"entryPoint": 649,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address_t_address_t_rational_3000_by_1__to_t_address_t_address_t_uint24__fromStack_reversed": {
									"entryPoint": 790,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_library_reversed": {
									"entryPoint": 664,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 494,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 1127,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_int24": {
									"entryPoint": 955,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_rational_3000_by_1": {
									"entryPoint": 706,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint16": {
									"entryPoint": 1012,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 462,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint24": {
									"entryPoint": 716,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 639,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 1070,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_rational_3000_by_1_to_t_uint24": {
									"entryPoint": 741,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 731,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 457,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 512,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 1139,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_int24": {
									"entryPoint": 968,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint16": {
									"entryPoint": 1026,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint160": {
									"entryPoint": 911,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint8": {
									"entryPoint": 1083,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:6611:13",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:13"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:13"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:13",
														"type": ""
													}
												],
												"src": "7:75:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:13"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:13"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:13",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:13",
														"type": ""
													}
												],
												"src": "334:126:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:13",
														"type": ""
													}
												],
												"src": "466:96:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:79:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "668:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "677:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:43:13"
															},
															"nodeType": "YulIf",
															"src": "621:63:13"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:13",
														"type": ""
													}
												],
												"src": "568:122:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "748:87:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "758:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "767:20:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "796:33:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "796:33:13"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "726:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "734:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "742:5:13",
														"type": ""
													}
												],
												"src": "696:139:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "941:519:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "987:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "989:77:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "989:79:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "989:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "962:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "971:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "958:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "958:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "983:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "954:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "954:32:13"
															},
															"nodeType": "YulIf",
															"src": "951:119:13"
														},
														{
															"nodeType": "YulBlock",
															"src": "1080:117:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1095:15:13",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1109:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1099:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1124:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1159:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1170:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1155:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1155:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1179:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1134:20:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1134:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1124:6:13"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1207:118:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1222:16:13",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1236:2:13",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1226:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1252:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1287:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1298:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1283:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1283:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1307:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1262:20:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1262:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1252:6:13"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1335:118:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1350:16:13",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1364:2:13",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1354:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1380:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1415:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1426:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1411:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1411:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1435:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1390:20:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1390:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "1380:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "895:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "906:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "918:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "926:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "934:6:13",
														"type": ""
													}
												],
												"src": "841:619:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1511:32:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1521:16:13",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1532:5:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1521:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1493:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1503:7:13",
														"type": ""
													}
												],
												"src": "1466:77:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1622:53:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1639:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1662:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1644:17:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1644:24:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1632:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1632:37:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1632:37:13"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack_library",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1610:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1617:3:13",
														"type": ""
													}
												],
												"src": "1549:126:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1787:132:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1797:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1809:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1820:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1805:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1805:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1797:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1885:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1898:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1909:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1894:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1894:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack_library",
																	"nodeType": "YulIdentifier",
																	"src": "1833:51:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "1833:79:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1833:79:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_library_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1759:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1771:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1782:4:13",
														"type": ""
													}
												],
												"src": "1681:238:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1990:53:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2007:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2030:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2012:17:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2012:24:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2000:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2000:37:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2000:37:13"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1978:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1985:3:13",
														"type": ""
													}
												],
												"src": "1925:118:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2105:32:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2115:16:13",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2126:5:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2115:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_rational_3000_by_1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2087:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2097:7:13",
														"type": ""
													}
												],
												"src": "2049:88:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2187:47:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2197:31:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2212:5:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2219:8:13",
																		"type": "",
																		"value": "0xffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2208:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2208:20:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2197:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint24",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2169:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2179:7:13",
														"type": ""
													}
												],
												"src": "2143:91:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2272:28:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2282:12:13",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2289:5:13"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "2282:3:13"
																}
															]
														}
													]
												},
												"name": "identity",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2258:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "2268:3:13",
														"type": ""
													}
												],
												"src": "2240:60:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2376:92:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2386:76:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2454:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_rational_3000_by_1",
																					"nodeType": "YulIdentifier",
																					"src": "2425:28:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2425:35:13"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nodeType": "YulIdentifier",
																			"src": "2416:8:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2416:45:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint24",
																	"nodeType": "YulIdentifier",
																	"src": "2399:16:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2399:63:13"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "2386:9:13"
																}
															]
														}
													]
												},
												"name": "convert_t_rational_3000_by_1_to_t_uint24",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2356:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "2366:9:13",
														"type": ""
													}
												],
												"src": "2306:162:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2549:76:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2566:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2612:5:13"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_rational_3000_by_1_to_t_uint24",
																			"nodeType": "YulIdentifier",
																			"src": "2571:40:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2571:47:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2559:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2559:60:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2559:60:13"
														}
													]
												},
												"name": "abi_encode_t_rational_3000_by_1_to_t_uint24_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2537:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2544:3:13",
														"type": ""
													}
												],
												"src": "2474:151:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2795:298:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2805:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2817:9:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2828:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2813:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2813:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2805:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2885:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2898:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2909:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2894:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2894:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2841:43:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2841:71:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2841:71:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "2966:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2979:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2990:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2975:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2975:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2922:43:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "2922:72:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2922:72:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "3058:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3071:9:13"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3082:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3067:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3067:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_rational_3000_by_1_to_t_uint24_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3004:53:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3004:82:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3004:82:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_rational_3000_by_1__to_t_address_t_address_t_uint24__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2751:9:13",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2763:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2771:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2779:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2790:4:13",
														"type": ""
													}
												],
												"src": "2631:462:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3162:80:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3172:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3187:6:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3181:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3181:13:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "3172:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3230:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "3203:26:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3203:33:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3203:33:13"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3140:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3148:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3156:5:13",
														"type": ""
													}
												],
												"src": "3099:143:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3325:274:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3371:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3373:77:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3373:79:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3373:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3346:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3355:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3342:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3342:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3367:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3338:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3338:32:13"
															},
															"nodeType": "YulIf",
															"src": "3335:119:13"
														},
														{
															"nodeType": "YulBlock",
															"src": "3464:128:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3479:15:13",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3493:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3483:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3508:74:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3554:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3565:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3550:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3550:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3574:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "3518:31:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3518:64:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3508:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3295:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3306:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3318:6:13",
														"type": ""
													}
												],
												"src": "3248:351:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3648:79:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3705:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3714:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3717:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3707:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3707:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3707:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3671:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3696:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nodeType": "YulIdentifier",
																					"src": "3678:17:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3678:24:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "3668:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3668:35:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3661:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3661:43:13"
															},
															"nodeType": "YulIf",
															"src": "3658:63:13"
														}
													]
												},
												"name": "validator_revert_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3641:5:13",
														"type": ""
													}
												],
												"src": "3605:122:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3796:80:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3806:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3821:6:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3815:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3815:13:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "3806:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3864:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "3837:26:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3837:33:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3837:33:13"
														}
													]
												},
												"name": "abi_decode_t_uint160_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3774:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3782:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3790:5:13",
														"type": ""
													}
												],
												"src": "3733:143:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3925:47:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3935:31:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3957:1:13",
																		"type": "",
																		"value": "2"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3960:5:13"
																	}
																],
																"functionName": {
																	"name": "signextend",
																	"nodeType": "YulIdentifier",
																	"src": "3946:10:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "3946:20:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3935:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_int24",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3907:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3917:7:13",
														"type": ""
													}
												],
												"src": "3882:90:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4019:77:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4074:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4083:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4086:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4076:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4076:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4076:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4042:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "4065:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_int24",
																					"nodeType": "YulIdentifier",
																					"src": "4049:15:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4049:22:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "4039:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4039:33:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4032:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4032:41:13"
															},
															"nodeType": "YulIf",
															"src": "4029:61:13"
														}
													]
												},
												"name": "validator_revert_t_int24",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4012:5:13",
														"type": ""
													}
												],
												"src": "3978:118:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4163:78:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4173:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4188:6:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4182:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4182:13:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "4173:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4229:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_int24",
																	"nodeType": "YulIdentifier",
																	"src": "4204:24:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4204:31:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4204:31:13"
														}
													]
												},
												"name": "abi_decode_t_int24_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "4141:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4149:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4157:5:13",
														"type": ""
													}
												],
												"src": "4102:139:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4291:45:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4301:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4316:5:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4323:6:13",
																		"type": "",
																		"value": "0xffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4312:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4312:18:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "4301:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4273:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "4283:7:13",
														"type": ""
													}
												],
												"src": "4247:89:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4384:78:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4440:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4449:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4452:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4442:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4442:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4442:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4407:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "4431:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint16",
																					"nodeType": "YulIdentifier",
																					"src": "4414:16:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4414:23:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "4404:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4404:34:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4397:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4397:42:13"
															},
															"nodeType": "YulIf",
															"src": "4394:62:13"
														}
													]
												},
												"name": "validator_revert_t_uint16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4377:5:13",
														"type": ""
													}
												],
												"src": "4342:120:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4530:79:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4540:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4555:6:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4549:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4549:13:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "4540:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4597:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint16",
																	"nodeType": "YulIdentifier",
																	"src": "4571:25:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4571:32:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4571:32:13"
														}
													]
												},
												"name": "abi_decode_t_uint16_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "4508:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4516:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4524:5:13",
														"type": ""
													}
												],
												"src": "4468:141:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4658:43:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4668:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4683:5:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4690:4:13",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4679:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4679:16:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "4668:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4640:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "4650:7:13",
														"type": ""
													}
												],
												"src": "4615:86:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4748:77:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4803:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4812:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4815:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4805:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4805:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4805:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4771:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "4794:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint8",
																					"nodeType": "YulIdentifier",
																					"src": "4778:15:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4778:22:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "4768:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4768:33:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4761:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4761:41:13"
															},
															"nodeType": "YulIf",
															"src": "4758:61:13"
														}
													]
												},
												"name": "validator_revert_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4741:5:13",
														"type": ""
													}
												],
												"src": "4707:118:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4892:78:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4902:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4917:6:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4911:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4911:13:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "4902:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4958:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint8",
																	"nodeType": "YulIdentifier",
																	"src": "4933:24:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "4933:31:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4933:31:13"
														}
													]
												},
												"name": "abi_decode_t_uint8_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "4870:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4878:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4886:5:13",
														"type": ""
													}
												],
												"src": "4831:139:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5018:48:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5028:32:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5053:5:13"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "5046:6:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5046:13:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5039:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5039:21:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "5028:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5000:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "5010:7:13",
														"type": ""
													}
												],
												"src": "4976:90:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5112:76:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5166:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5175:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5178:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5168:6:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5168:12:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5168:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5135:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "5157:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "5142:14:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5142:21:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "5132:2:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5132:32:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5125:6:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5125:40:13"
															},
															"nodeType": "YulIf",
															"src": "5122:60:13"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5105:5:13",
														"type": ""
													}
												],
												"src": "5072:116:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5254:77:13",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5264:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "5279:6:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "5273:5:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5273:13:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "5264:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5319:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "5295:23:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5295:30:13"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5295:30:13"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "5232:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5240:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5248:5:13",
														"type": ""
													}
												],
												"src": "5194:137:13"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5506:1102:13",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5553:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5555:77:13"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5555:79:13"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5555:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5527:7:13"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5536:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5523:3:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5523:23:13"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5548:3:13",
																		"type": "",
																		"value": "224"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5519:3:13"
																},
																"nodeType": "YulFunctionCall",
																"src": "5519:33:13"
															},
															"nodeType": "YulIf",
															"src": "5516:120:13"
														},
														{
															"nodeType": "YulBlock",
															"src": "5646:128:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5661:15:13",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5675:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5665:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5690:74:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5736:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5747:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5732:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5732:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5756:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint160_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "5700:31:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5700:64:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5690:6:13"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5784:127:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5799:16:13",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5813:2:13",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5803:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5829:72:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5873:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5884:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5869:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5869:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5893:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_int24_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "5839:29:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5839:62:13"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "5829:6:13"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5921:128:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5936:16:13",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5950:2:13",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5940:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5966:73:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6011:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6022:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6007:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6007:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6031:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint16_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "5976:30:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5976:63:13"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "5966:6:13"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "6059:128:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6074:16:13",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6088:2:13",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6078:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6104:73:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6149:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6160:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6145:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6145:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6169:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint16_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "6114:30:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6114:63:13"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "6104:6:13"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "6197:129:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6212:17:13",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6226:3:13",
																		"type": "",
																		"value": "128"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6216:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6243:73:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6288:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6299:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6284:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6284:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6308:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint16_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "6253:30:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6253:63:13"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nodeType": "YulIdentifier",
																			"src": "6243:6:13"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "6336:128:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6351:17:13",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6365:3:13",
																		"type": "",
																		"value": "160"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6355:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6382:72:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6426:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6437:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6422:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6422:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6446:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint8_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "6392:29:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6392:62:13"
																	},
																	"variableNames": [
																		{
																			"name": "value5",
																			"nodeType": "YulIdentifier",
																			"src": "6382:6:13"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "6474:127:13",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6489:17:13",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6503:3:13",
																		"type": "",
																		"value": "192"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6493:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6520:71:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6563:9:13"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6574:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6559:3:13"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6559:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6583:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "6530:28:13"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6530:61:13"
																	},
																	"variableNames": [
																		{
																			"name": "value6",
																			"nodeType": "YulIdentifier",
																			"src": "6520:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint160t_int24t_uint16t_uint16t_uint16t_uint8t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5428:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5439:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5451:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5459:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "5467:6:13",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "5475:6:13",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "5483:6:13",
														"type": ""
													},
													{
														"name": "value5",
														"nodeType": "YulTypedName",
														"src": "5491:6:13",
														"type": ""
													},
													{
														"name": "value6",
														"nodeType": "YulTypedName",
														"src": "5499:6:13",
														"type": ""
													}
												],
												"src": "5337:1271:13"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_address(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack_library(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_library_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack_library(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function cleanup_t_rational_3000_by_1(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint24(value) -> cleaned {\n        cleaned := and(value, 0xffffff)\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_rational_3000_by_1_to_t_uint24(value) -> converted {\n        converted := cleanup_t_uint24(identity(cleanup_t_rational_3000_by_1(value)))\n    }\n\n    function abi_encode_t_rational_3000_by_1_to_t_uint24_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_3000_by_1_to_t_uint24(value))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_rational_3000_by_1__to_t_address_t_address_t_uint24__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_rational_3000_by_1_to_t_uint24_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_uint160(value) {\n        if iszero(eq(value, cleanup_t_uint160(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint160_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint160(value)\n    }\n\n    function cleanup_t_int24(value) -> cleaned {\n        cleaned := signextend(2, value)\n    }\n\n    function validator_revert_t_int24(value) {\n        if iszero(eq(value, cleanup_t_int24(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_int24_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_int24(value)\n    }\n\n    function cleanup_t_uint16(value) -> cleaned {\n        cleaned := and(value, 0xffff)\n    }\n\n    function validator_revert_t_uint16(value) {\n        if iszero(eq(value, cleanup_t_uint16(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint16_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint16(value)\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function validator_revert_t_uint8(value) {\n        if iszero(eq(value, cleanup_t_uint8(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint8_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint8(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_uint160t_int24t_uint16t_uint16t_uint16t_uint8t_bool_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6 {\n        if slt(sub(dataEnd, headStart), 224) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint160_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_int24_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint16_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint16_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint16_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 160\n\n            value5 := abi_decode_t_uint8_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 192\n\n            value6 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 13,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600436106100355760003560e01c8063edf15a9a1461003a575b600080fd5b610054600480360381019061004f919061022c565b61006a565b6040516100619190610298565b60405180910390f35b6000808473ffffffffffffffffffffffffffffffffffffffff16631698ee828585610bb86040518463ffffffff1660e01b81526004016100ac93929190610316565b602060405180830381865afa1580156100c9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100ed9190610362565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361012d5760009150506101c2565b60008173ffffffffffffffffffffffffffffffffffffffff16633850c7bd6040518163ffffffff1660e01b815260040160e060405180830381865afa15801561017a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061019e919061049f565b50505050505090508073ffffffffffffffffffffffffffffffffffffffff16925050505b9392505050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006101f9826101ce565b9050919050565b610209816101ee565b811461021457600080fd5b50565b60008135905061022681610200565b92915050565b600080600060608486031215610245576102446101c9565b5b600061025386828701610217565b935050602061026486828701610217565b925050604061027586828701610217565b9150509250925092565b6000819050919050565b6102928161027f565b82525050565b60006020820190506102ad6000830184610289565b92915050565b6102bc816101ee565b82525050565b6000819050919050565b600062ffffff82169050919050565b6000819050919050565b60006103006102fb6102f6846102c2565b6102db565b6102cc565b9050919050565b610310816102e5565b82525050565b600060608201905061032b60008301866102b3565b61033860208301856102b3565b6103456040830184610307565b949350505050565b60008151905061035c81610200565b92915050565b600060208284031215610378576103776101c9565b5b60006103868482850161034d565b91505092915050565b610398816101ce565b81146103a357600080fd5b50565b6000815190506103b58161038f565b92915050565b60008160020b9050919050565b6103d1816103bb565b81146103dc57600080fd5b50565b6000815190506103ee816103c8565b92915050565b600061ffff82169050919050565b61040b816103f4565b811461041657600080fd5b50565b60008151905061042881610402565b92915050565b600060ff82169050919050565b6104448161042e565b811461044f57600080fd5b50565b6000815190506104618161043b565b92915050565b60008115159050919050565b61047c81610467565b811461048757600080fd5b50565b60008151905061049981610473565b92915050565b600080600080600080600060e0888a0312156104be576104bd6101c9565b5b60006104cc8a828b016103a6565b97505060206104dd8a828b016103df565b96505060406104ee8a828b01610419565b95505060606104ff8a828b01610419565b94505060806105108a828b01610419565b93505060a06105218a828b01610452565b92505060c06105328a828b0161048a565b9150509295989194975092955056fea2646970667358221220d3d90ca81bb6b5aa2b4923f7f99497428bf1d8e22869e834d6c8e0145b73d88d64736f6c63430008110033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x35 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xEDF15A9A EQ PUSH2 0x3A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x54 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4F SWAP2 SWAP1 PUSH2 0x22C JUMP JUMPDEST PUSH2 0x6A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x61 SWAP2 SWAP1 PUSH2 0x298 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x1698EE82 DUP6 DUP6 PUSH2 0xBB8 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAC SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x316 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xED SWAP2 SWAP1 PUSH2 0x362 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x12D JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0x1C2 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x3850C7BD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xE0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x17A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x19E SWAP2 SWAP1 PUSH2 0x49F JUMP JUMPDEST POP POP POP POP POP POP SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP3 POP POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F9 DUP3 PUSH2 0x1CE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x209 DUP2 PUSH2 0x1EE JUMP JUMPDEST DUP2 EQ PUSH2 0x214 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x226 DUP2 PUSH2 0x200 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x245 JUMPI PUSH2 0x244 PUSH2 0x1C9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x253 DUP7 DUP3 DUP8 ADD PUSH2 0x217 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x264 DUP7 DUP3 DUP8 ADD PUSH2 0x217 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x275 DUP7 DUP3 DUP8 ADD PUSH2 0x217 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x292 DUP2 PUSH2 0x27F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2AD PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x289 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2BC DUP2 PUSH2 0x1EE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x300 PUSH2 0x2FB PUSH2 0x2F6 DUP5 PUSH2 0x2C2 JUMP JUMPDEST PUSH2 0x2DB JUMP JUMPDEST PUSH2 0x2CC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x310 DUP2 PUSH2 0x2E5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x32B PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x2B3 JUMP JUMPDEST PUSH2 0x338 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x2B3 JUMP JUMPDEST PUSH2 0x345 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x307 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x35C DUP2 PUSH2 0x200 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x378 JUMPI PUSH2 0x377 PUSH2 0x1C9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x386 DUP5 DUP3 DUP6 ADD PUSH2 0x34D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x398 DUP2 PUSH2 0x1CE JUMP JUMPDEST DUP2 EQ PUSH2 0x3A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x3B5 DUP2 PUSH2 0x38F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x2 SIGNEXTEND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3D1 DUP2 PUSH2 0x3BB JUMP JUMPDEST DUP2 EQ PUSH2 0x3DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x3EE DUP2 PUSH2 0x3C8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x40B DUP2 PUSH2 0x3F4 JUMP JUMPDEST DUP2 EQ PUSH2 0x416 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x428 DUP2 PUSH2 0x402 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x444 DUP2 PUSH2 0x42E JUMP JUMPDEST DUP2 EQ PUSH2 0x44F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x461 DUP2 PUSH2 0x43B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x47C DUP2 PUSH2 0x467 JUMP JUMPDEST DUP2 EQ PUSH2 0x487 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x499 DUP2 PUSH2 0x473 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x4BE JUMPI PUSH2 0x4BD PUSH2 0x1C9 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4CC DUP11 DUP3 DUP12 ADD PUSH2 0x3A6 JUMP JUMPDEST SWAP8 POP POP PUSH1 0x20 PUSH2 0x4DD DUP11 DUP3 DUP12 ADD PUSH2 0x3DF JUMP JUMPDEST SWAP7 POP POP PUSH1 0x40 PUSH2 0x4EE DUP11 DUP3 DUP12 ADD PUSH2 0x419 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x60 PUSH2 0x4FF DUP11 DUP3 DUP12 ADD PUSH2 0x419 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x80 PUSH2 0x510 DUP11 DUP3 DUP12 ADD PUSH2 0x419 JUMP JUMPDEST SWAP4 POP POP PUSH1 0xA0 PUSH2 0x521 DUP11 DUP3 DUP12 ADD PUSH2 0x452 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xC0 PUSH2 0x532 DUP11 DUP3 DUP12 ADD PUSH2 0x48A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD3 0xD9 0xC 0xA8 SHL 0xB6 0xB5 0xAA 0x2B 0x49 0x23 0xF7 0xF9 SWAP5 SWAP8 TIMESTAMP DUP12 CALL 0xD8 0xE2 0x28 PUSH10 0xE834D6C8E0145B73D88D PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "232:365:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;261:334;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;346:7;368:12;401:8;383:35;;;419:3;423:4;428;383:50;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;368:65;;467:1;451:18;;:4;:18;;;447:32;;478:1;471:8;;;;;447:32;495:20;540:4;525:26;;;:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;494:59;;;;;;;;575:12;568:19;;;;;;261:334;;;;;;:::o;88:117:13:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:619::-;918:6;926;934;983:2;971:9;962:7;958:23;954:32;951:119;;;989:79;;:::i;:::-;951:119;1109:1;1134:53;1179:7;1170:6;1159:9;1155:22;1134:53;:::i;:::-;1124:63;;1080:117;1236:2;1262:53;1307:7;1298:6;1287:9;1283:22;1262:53;:::i;:::-;1252:63;;1207:118;1364:2;1390:53;1435:7;1426:6;1415:9;1411:22;1390:53;:::i;:::-;1380:63;;1335:118;841:619;;;;;:::o;1466:77::-;1503:7;1532:5;1521:16;;1466:77;;;:::o;1549:126::-;1644:24;1662:5;1644:24;:::i;:::-;1639:3;1632:37;1549:126;;:::o;1681:238::-;1782:4;1820:2;1809:9;1805:18;1797:26;;1833:79;1909:1;1898:9;1894:17;1885:6;1833:79;:::i;:::-;1681:238;;;;:::o;1925:118::-;2012:24;2030:5;2012:24;:::i;:::-;2007:3;2000:37;1925:118;;:::o;2049:88::-;2097:7;2126:5;2115:16;;2049:88;;;:::o;2143:91::-;2179:7;2219:8;2212:5;2208:20;2197:31;;2143:91;;;:::o;2240:60::-;2268:3;2289:5;2282:12;;2240:60;;;:::o;2306:162::-;2366:9;2399:63;2416:45;2425:35;2454:5;2425:35;:::i;:::-;2416:45;:::i;:::-;2399:63;:::i;:::-;2386:76;;2306:162;;;:::o;2474:151::-;2571:47;2612:5;2571:47;:::i;:::-;2566:3;2559:60;2474:151;;:::o;2631:462::-;2790:4;2828:2;2817:9;2813:18;2805:26;;2841:71;2909:1;2898:9;2894:17;2885:6;2841:71;:::i;:::-;2922:72;2990:2;2979:9;2975:18;2966:6;2922:72;:::i;:::-;3004:82;3082:2;3071:9;3067:18;3058:6;3004:82;:::i;:::-;2631:462;;;;;;:::o;3099:143::-;3156:5;3187:6;3181:13;3172:22;;3203:33;3230:5;3203:33;:::i;:::-;3099:143;;;;:::o;3248:351::-;3318:6;3367:2;3355:9;3346:7;3342:23;3338:32;3335:119;;;3373:79;;:::i;:::-;3335:119;3493:1;3518:64;3574:7;3565:6;3554:9;3550:22;3518:64;:::i;:::-;3508:74;;3464:128;3248:351;;;;:::o;3605:122::-;3678:24;3696:5;3678:24;:::i;:::-;3671:5;3668:35;3658:63;;3717:1;3714;3707:12;3658:63;3605:122;:::o;3733:143::-;3790:5;3821:6;3815:13;3806:22;;3837:33;3864:5;3837:33;:::i;:::-;3733:143;;;;:::o;3882:90::-;3917:7;3960:5;3957:1;3946:20;3935:31;;3882:90;;;:::o;3978:118::-;4049:22;4065:5;4049:22;:::i;:::-;4042:5;4039:33;4029:61;;4086:1;4083;4076:12;4029:61;3978:118;:::o;4102:139::-;4157:5;4188:6;4182:13;4173:22;;4204:31;4229:5;4204:31;:::i;:::-;4102:139;;;;:::o;4247:89::-;4283:7;4323:6;4316:5;4312:18;4301:29;;4247:89;;;:::o;4342:120::-;4414:23;4431:5;4414:23;:::i;:::-;4407:5;4404:34;4394:62;;4452:1;4449;4442:12;4394:62;4342:120;:::o;4468:141::-;4524:5;4555:6;4549:13;4540:22;;4571:32;4597:5;4571:32;:::i;:::-;4468:141;;;;:::o;4615:86::-;4650:7;4690:4;4683:5;4679:16;4668:27;;4615:86;;;:::o;4707:118::-;4778:22;4794:5;4778:22;:::i;:::-;4771:5;4768:33;4758:61;;4815:1;4812;4805:12;4758:61;4707:118;:::o;4831:139::-;4886:5;4917:6;4911:13;4902:22;;4933:31;4958:5;4933:31;:::i;:::-;4831:139;;;;:::o;4976:90::-;5010:7;5053:5;5046:13;5039:21;5028:32;;4976:90;;;:::o;5072:116::-;5142:21;5157:5;5142:21;:::i;:::-;5135:5;5132:32;5122:60;;5178:1;5175;5168:12;5122:60;5072:116;:::o;5194:137::-;5248:5;5279:6;5273:13;5264:22;;5295:30;5319:5;5295:30;:::i;:::-;5194:137;;;;:::o;5337:1271::-;5451:6;5459;5467;5475;5483;5491;5499;5548:3;5536:9;5527:7;5523:23;5519:33;5516:120;;;5555:79;;:::i;:::-;5516:120;5675:1;5700:64;5756:7;5747:6;5736:9;5732:22;5700:64;:::i;:::-;5690:74;;5646:128;5813:2;5839:62;5893:7;5884:6;5873:9;5869:22;5839:62;:::i;:::-;5829:72;;5784:127;5950:2;5976:63;6031:7;6022:6;6011:9;6007:22;5976:63;:::i;:::-;5966:73;;5921:128;6088:2;6114:63;6169:7;6160:6;6149:9;6145:22;6114:63;:::i;:::-;6104:73;;6059:128;6226:3;6253:63;6308:7;6299:6;6288:9;6284:22;6253:63;:::i;:::-;6243:73;;6197:129;6365:3;6392:62;6446:7;6437:6;6426:9;6422:22;6392:62;:::i;:::-;6382:72;;6336:128;6503:3;6530:61;6583:7;6574:6;6563:9;6559:22;6530:61;:::i;:::-;6520:71;;6474:127;5337:1271;;;;;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "279800",
								"executionCost": "346",
								"totalCost": "280146"
							},
							"external": {
								"sqrtPrice(address,address,address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 232,
									"end": 597,
									"name": "PUSH #[$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 232,
									"end": 597,
									"name": "PUSH [$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 232,
									"end": 597,
									"name": "PUSH",
									"source": 12,
									"value": "B"
								},
								{
									"begin": 232,
									"end": 597,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 232,
									"end": 597,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 232,
									"end": 597,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 232,
									"end": 597,
									"name": "CODECOPY",
									"source": 12
								},
								{
									"begin": 232,
									"end": 597,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 232,
									"end": 597,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 232,
									"end": 597,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 232,
									"end": 597,
									"name": "BYTE",
									"source": 12
								},
								{
									"begin": 232,
									"end": 597,
									"name": "PUSH",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 232,
									"end": 597,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 232,
									"end": 597,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 232,
									"end": 597,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 232,
									"end": 597,
									"name": "PUSH",
									"source": 12,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 232,
									"end": 597,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 232,
									"end": 597,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 232,
									"end": 597,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 232,
									"end": 597,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 232,
									"end": 597,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 232,
									"end": 597,
									"name": "PUSH",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 232,
									"end": 597,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 232,
									"end": 597,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 232,
									"end": 597,
									"name": "tag",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 232,
									"end": 597,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 232,
									"end": 597,
									"name": "ADDRESS",
									"source": 12
								},
								{
									"begin": 232,
									"end": 597,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 232,
									"end": 597,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 232,
									"end": 597,
									"name": "PUSH",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 232,
									"end": 597,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 232,
									"end": 597,
									"name": "MSTORE8",
									"source": 12
								},
								{
									"begin": 232,
									"end": 597,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 232,
									"end": 597,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 232,
									"end": 597,
									"name": "RETURN",
									"source": 12
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220d3d90ca81bb6b5aa2b4923f7f99497428bf1d8e22869e834d6c8e0145b73d88d64736f6c63430008110033",
									".code": [
										{
											"begin": 232,
											"end": 597,
											"name": "PUSHDEPLOYADDRESS",
											"source": 12
										},
										{
											"begin": 232,
											"end": 597,
											"name": "ADDRESS",
											"source": 12
										},
										{
											"begin": 232,
											"end": 597,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 232,
											"end": 597,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 232,
											"end": 597,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 232,
											"end": 597,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 232,
											"end": 597,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 232,
											"end": 597,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 232,
											"end": 597,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 232,
											"end": 597,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 232,
											"end": 597,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 232,
											"end": 597,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 232,
											"end": 597,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 232,
											"end": 597,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 232,
											"end": 597,
											"name": "SHR",
											"source": 12
										},
										{
											"begin": 232,
											"end": 597,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 232,
											"end": 597,
											"name": "PUSH",
											"source": 12,
											"value": "EDF15A9A"
										},
										{
											"begin": 232,
											"end": 597,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 232,
											"end": 597,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 232,
											"end": 597,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 232,
											"end": 597,
											"name": "tag",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 232,
											"end": 597,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 232,
											"end": 597,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 232,
											"end": 597,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 232,
											"end": 597,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 261,
											"end": 595,
											"name": "tag",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 261,
											"end": 595,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 261,
											"end": 595,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 261,
											"end": 595,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 261,
											"end": 595,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 261,
											"end": 595,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 261,
											"end": 595,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 261,
											"end": 595,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 261,
											"end": 595,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 261,
											"end": 595,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 261,
											"end": 595,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 261,
											"end": 595,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 261,
											"end": 595,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 261,
											"end": 595,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 261,
											"end": 595,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 261,
											"end": 595,
											"name": "tag",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 261,
											"end": 595,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 261,
											"end": 595,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "6"
										},
										{
											"begin": 261,
											"end": 595,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 261,
											"end": 595,
											"name": "tag",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 261,
											"end": 595,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 261,
											"end": 595,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 261,
											"end": 595,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 261,
											"end": 595,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 261,
											"end": 595,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 261,
											"end": 595,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 261,
											"end": 595,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 261,
											"end": 595,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 261,
											"end": 595,
											"name": "tag",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 261,
											"end": 595,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 261,
											"end": 595,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 261,
											"end": 595,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 261,
											"end": 595,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 261,
											"end": 595,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 261,
											"end": 595,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 261,
											"end": 595,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 261,
											"end": 595,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 261,
											"end": 595,
											"name": "tag",
											"source": 12,
											"value": "6"
										},
										{
											"begin": 261,
											"end": 595,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 346,
											"end": 353,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 368,
											"end": 380,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 401,
											"end": 409,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 383,
											"end": 418,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 383,
											"end": 418,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 383,
											"end": 418,
											"name": "PUSH",
											"source": 12,
											"value": "1698EE82"
										},
										{
											"begin": 419,
											"end": 422,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 423,
											"end": 427,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 428,
											"end": 432,
											"name": "PUSH",
											"source": 12,
											"value": "BB8"
										},
										{
											"begin": 383,
											"end": 433,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 383,
											"end": 433,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 383,
											"end": 433,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 383,
											"end": 433,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFF"
										},
										{
											"begin": 383,
											"end": 433,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 383,
											"end": 433,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 383,
											"end": 433,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 383,
											"end": 433,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 383,
											"end": 433,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 383,
											"end": 433,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 383,
											"end": 433,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 383,
											"end": 433,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "10"
										},
										{
											"begin": 383,
											"end": 433,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 383,
											"end": 433,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 383,
											"end": 433,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 383,
											"end": 433,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 383,
											"end": 433,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "11"
										},
										{
											"begin": 383,
											"end": 433,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 383,
											"end": 433,
											"name": "tag",
											"source": 12,
											"value": "10"
										},
										{
											"begin": 383,
											"end": 433,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 383,
											"end": 433,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 383,
											"end": 433,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 383,
											"end": 433,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 383,
											"end": 433,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 383,
											"end": 433,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 383,
											"end": 433,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 383,
											"end": 433,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 383,
											"end": 433,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 383,
											"end": 433,
											"name": "GAS",
											"source": 12
										},
										{
											"begin": 383,
											"end": 433,
											"name": "STATICCALL",
											"source": 12
										},
										{
											"begin": 383,
											"end": 433,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 383,
											"end": 433,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 383,
											"end": 433,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 383,
											"end": 433,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "13"
										},
										{
											"begin": 383,
											"end": 433,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 383,
											"end": 433,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 383,
											"end": 433,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 383,
											"end": 433,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 383,
											"end": 433,
											"name": "RETURNDATACOPY",
											"source": 12
										},
										{
											"begin": 383,
											"end": 433,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 383,
											"end": 433,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 383,
											"end": 433,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 383,
											"end": 433,
											"name": "tag",
											"source": 12,
											"value": "13"
										},
										{
											"begin": 383,
											"end": 433,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 383,
											"end": 433,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 383,
											"end": 433,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 383,
											"end": 433,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 383,
											"end": 433,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 383,
											"end": 433,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 383,
											"end": 433,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 383,
											"end": 433,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 383,
											"end": 433,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 383,
											"end": 433,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 383,
											"end": 433,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 383,
											"end": 433,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 383,
											"end": 433,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 383,
											"end": 433,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 383,
											"end": 433,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 383,
											"end": 433,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 383,
											"end": 433,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 383,
											"end": 433,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 383,
											"end": 433,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 383,
											"end": 433,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 383,
											"end": 433,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 383,
											"end": 433,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 383,
											"end": 433,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 383,
											"end": 433,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "14"
										},
										{
											"begin": 383,
											"end": 433,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 383,
											"end": 433,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 383,
											"end": 433,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "15"
										},
										{
											"begin": 383,
											"end": 433,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 383,
											"end": 433,
											"name": "tag",
											"source": 12,
											"value": "14"
										},
										{
											"begin": 383,
											"end": 433,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 368,
											"end": 433,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 368,
											"end": 433,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 467,
											"end": 468,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 451,
											"end": 469,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 451,
											"end": 469,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 451,
											"end": 455,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 451,
											"end": 469,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 451,
											"end": 469,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 451,
											"end": 469,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 447,
											"end": 479,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "16"
										},
										{
											"begin": 447,
											"end": 479,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 478,
											"end": 479,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 471,
											"end": 479,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 471,
											"end": 479,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 471,
											"end": 479,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 471,
											"end": 479,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "9"
										},
										{
											"begin": 471,
											"end": 479,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 447,
											"end": 479,
											"name": "tag",
											"source": 12,
											"value": "16"
										},
										{
											"begin": 447,
											"end": 479,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 495,
											"end": 515,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 540,
											"end": 544,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 525,
											"end": 551,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 525,
											"end": 551,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 525,
											"end": 551,
											"name": "PUSH",
											"source": 12,
											"value": "3850C7BD"
										},
										{
											"begin": 525,
											"end": 553,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 525,
											"end": 553,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 525,
											"end": 553,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 525,
											"end": 553,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFF"
										},
										{
											"begin": 525,
											"end": 553,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 525,
											"end": 553,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 525,
											"end": 553,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 525,
											"end": 553,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 525,
											"end": 553,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 525,
											"end": 553,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 525,
											"end": 553,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 525,
											"end": 553,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 525,
											"end": 553,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 525,
											"end": 553,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 525,
											"end": 553,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 525,
											"end": 553,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 525,
											"end": 553,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 525,
											"end": 553,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 525,
											"end": 553,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 525,
											"end": 553,
											"name": "GAS",
											"source": 12
										},
										{
											"begin": 525,
											"end": 553,
											"name": "STATICCALL",
											"source": 12
										},
										{
											"begin": 525,
											"end": 553,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 525,
											"end": 553,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 525,
											"end": 553,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 525,
											"end": 553,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "18"
										},
										{
											"begin": 525,
											"end": 553,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 525,
											"end": 553,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 525,
											"end": 553,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 525,
											"end": 553,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 525,
											"end": 553,
											"name": "RETURNDATACOPY",
											"source": 12
										},
										{
											"begin": 525,
											"end": 553,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 525,
											"end": 553,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 525,
											"end": 553,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 525,
											"end": 553,
											"name": "tag",
											"source": 12,
											"value": "18"
										},
										{
											"begin": 525,
											"end": 553,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 525,
											"end": 553,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 525,
											"end": 553,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 525,
											"end": 553,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 525,
											"end": 553,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 525,
											"end": 553,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 525,
											"end": 553,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 525,
											"end": 553,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 525,
											"end": 553,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 525,
											"end": 553,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 525,
											"end": 553,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 525,
											"end": 553,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 525,
											"end": 553,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 525,
											"end": 553,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 525,
											"end": 553,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 525,
											"end": 553,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 525,
											"end": 553,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 525,
											"end": 553,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 525,
											"end": 553,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 525,
											"end": 553,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 525,
											"end": 553,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 525,
											"end": 553,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 525,
											"end": 553,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 525,
											"end": 553,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "19"
										},
										{
											"begin": 525,
											"end": 553,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 525,
											"end": 553,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 525,
											"end": 553,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 525,
											"end": 553,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 525,
											"end": 553,
											"name": "tag",
											"source": 12,
											"value": "19"
										},
										{
											"begin": 525,
											"end": 553,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 494,
											"end": 553,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 494,
											"end": 553,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 494,
											"end": 553,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 494,
											"end": 553,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 494,
											"end": 553,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 494,
											"end": 553,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 494,
											"end": 553,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 494,
											"end": 553,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 575,
											"end": 587,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 568,
											"end": 587,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 568,
											"end": 587,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 568,
											"end": 587,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 568,
											"end": 587,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 568,
											"end": 587,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 568,
											"end": 587,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 261,
											"end": 595,
											"name": "tag",
											"source": 12,
											"value": "9"
										},
										{
											"begin": 261,
											"end": 595,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 261,
											"end": 595,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 261,
											"end": 595,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 261,
											"end": 595,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 261,
											"end": 595,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 261,
											"end": 595,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 261,
											"end": 595,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 13,
											"value": "22"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 334,
											"end": 460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 13,
											"value": "25"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "57"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 532,
											"end": 556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 13,
											"value": "57"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 466,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 13,
											"value": "26"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "59"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "25"
										},
										{
											"begin": 641,
											"end": 665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 13,
											"value": "59"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 568,
											"end": 690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 13,
											"value": "27"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "62"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "26"
										},
										{
											"begin": 796,
											"end": 829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 13,
											"value": "62"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 696,
											"end": 835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 841,
											"end": 1460,
											"name": "tag",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 841,
											"end": 1460,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 918,
											"end": 924,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 926,
											"end": 932,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 934,
											"end": 940,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 983,
											"end": 985,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 971,
											"end": 980,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 962,
											"end": 969,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 958,
											"end": 981,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 954,
											"end": 986,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 951,
											"end": 1070,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 951,
											"end": 1070,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 951,
											"end": 1070,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 989,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "65"
										},
										{
											"begin": 989,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "22"
										},
										{
											"begin": 989,
											"end": 1068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 989,
											"end": 1068,
											"name": "tag",
											"source": 13,
											"value": "65"
										},
										{
											"begin": 989,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 951,
											"end": 1070,
											"name": "tag",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 951,
											"end": 1070,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1109,
											"end": 1110,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1134,
											"end": 1187,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "66"
										},
										{
											"begin": 1179,
											"end": 1186,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 1170,
											"end": 1176,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1159,
											"end": 1168,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 1155,
											"end": 1177,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1134,
											"end": 1187,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "27"
										},
										{
											"begin": 1134,
											"end": 1187,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1134,
											"end": 1187,
											"name": "tag",
											"source": 13,
											"value": "66"
										},
										{
											"begin": 1134,
											"end": 1187,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1124,
											"end": 1187,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 1124,
											"end": 1187,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1080,
											"end": 1197,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1236,
											"end": 1238,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1262,
											"end": 1315,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "67"
										},
										{
											"begin": 1307,
											"end": 1314,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 1298,
											"end": 1304,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1287,
											"end": 1296,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 1283,
											"end": 1305,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1262,
											"end": 1315,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "27"
										},
										{
											"begin": 1262,
											"end": 1315,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1262,
											"end": 1315,
											"name": "tag",
											"source": 13,
											"value": "67"
										},
										{
											"begin": 1262,
											"end": 1315,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1252,
											"end": 1315,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1252,
											"end": 1315,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1207,
											"end": 1325,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1364,
											"end": 1366,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1390,
											"end": 1443,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "68"
										},
										{
											"begin": 1435,
											"end": 1442,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 1426,
											"end": 1432,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1415,
											"end": 1424,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 1411,
											"end": 1433,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1390,
											"end": 1443,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "27"
										},
										{
											"begin": 1390,
											"end": 1443,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1390,
											"end": 1443,
											"name": "tag",
											"source": 13,
											"value": "68"
										},
										{
											"begin": 1390,
											"end": 1443,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1380,
											"end": 1443,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1380,
											"end": 1443,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1335,
											"end": 1453,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 841,
											"end": 1460,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 841,
											"end": 1460,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 841,
											"end": 1460,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 841,
											"end": 1460,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 841,
											"end": 1460,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 841,
											"end": 1460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1466,
											"end": 1543,
											"name": "tag",
											"source": 13,
											"value": "28"
										},
										{
											"begin": 1466,
											"end": 1543,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1503,
											"end": 1510,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1532,
											"end": 1537,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1521,
											"end": 1537,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1521,
											"end": 1537,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1466,
											"end": 1543,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1466,
											"end": 1543,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1466,
											"end": 1543,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1466,
											"end": 1543,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1549,
											"end": 1675,
											"name": "tag",
											"source": 13,
											"value": "29"
										},
										{
											"begin": 1549,
											"end": 1675,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1644,
											"end": 1668,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "71"
										},
										{
											"begin": 1662,
											"end": 1667,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1644,
											"end": 1668,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "28"
										},
										{
											"begin": 1644,
											"end": 1668,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1644,
											"end": 1668,
											"name": "tag",
											"source": 13,
											"value": "71"
										},
										{
											"begin": 1644,
											"end": 1668,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1639,
											"end": 1642,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1632,
											"end": 1669,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1549,
											"end": 1675,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1549,
											"end": 1675,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1549,
											"end": 1675,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1681,
											"end": 1919,
											"name": "tag",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 1681,
											"end": 1919,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1782,
											"end": 1786,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1820,
											"end": 1822,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1809,
											"end": 1818,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1805,
											"end": 1823,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1797,
											"end": 1823,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1797,
											"end": 1823,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1833,
											"end": 1912,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "73"
										},
										{
											"begin": 1909,
											"end": 1910,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1898,
											"end": 1907,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1894,
											"end": 1911,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1885,
											"end": 1891,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1833,
											"end": 1912,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "29"
										},
										{
											"begin": 1833,
											"end": 1912,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1833,
											"end": 1912,
											"name": "tag",
											"source": 13,
											"value": "73"
										},
										{
											"begin": 1833,
											"end": 1912,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1681,
											"end": 1919,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1681,
											"end": 1919,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1681,
											"end": 1919,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1681,
											"end": 1919,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1681,
											"end": 1919,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1925,
											"end": 2043,
											"name": "tag",
											"source": 13,
											"value": "30"
										},
										{
											"begin": 1925,
											"end": 2043,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2012,
											"end": 2036,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "75"
										},
										{
											"begin": 2030,
											"end": 2035,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2012,
											"end": 2036,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "25"
										},
										{
											"begin": 2012,
											"end": 2036,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2012,
											"end": 2036,
											"name": "tag",
											"source": 13,
											"value": "75"
										},
										{
											"begin": 2012,
											"end": 2036,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2007,
											"end": 2010,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2000,
											"end": 2037,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1925,
											"end": 2043,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1925,
											"end": 2043,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1925,
											"end": 2043,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2049,
											"end": 2137,
											"name": "tag",
											"source": 13,
											"value": "31"
										},
										{
											"begin": 2049,
											"end": 2137,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2097,
											"end": 2104,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2126,
											"end": 2131,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2115,
											"end": 2131,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2115,
											"end": 2131,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2049,
											"end": 2137,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2049,
											"end": 2137,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2049,
											"end": 2137,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2049,
											"end": 2137,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2143,
											"end": 2234,
											"name": "tag",
											"source": 13,
											"value": "32"
										},
										{
											"begin": 2143,
											"end": 2234,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2179,
											"end": 2186,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2219,
											"end": 2227,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFF"
										},
										{
											"begin": 2212,
											"end": 2217,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2208,
											"end": 2228,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2197,
											"end": 2228,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2197,
											"end": 2228,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2143,
											"end": 2234,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2143,
											"end": 2234,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2143,
											"end": 2234,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2143,
											"end": 2234,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2240,
											"end": 2300,
											"name": "tag",
											"source": 13,
											"value": "33"
										},
										{
											"begin": 2240,
											"end": 2300,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2268,
											"end": 2271,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2289,
											"end": 2294,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2282,
											"end": 2294,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2282,
											"end": 2294,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2240,
											"end": 2300,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2240,
											"end": 2300,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2240,
											"end": 2300,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2240,
											"end": 2300,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2306,
											"end": 2468,
											"name": "tag",
											"source": 13,
											"value": "34"
										},
										{
											"begin": 2306,
											"end": 2468,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2366,
											"end": 2375,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2399,
											"end": 2462,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 2416,
											"end": 2461,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "81"
										},
										{
											"begin": 2425,
											"end": 2460,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "82"
										},
										{
											"begin": 2454,
											"end": 2459,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 2425,
											"end": 2460,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "31"
										},
										{
											"begin": 2425,
											"end": 2460,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2425,
											"end": 2460,
											"name": "tag",
											"source": 13,
											"value": "82"
										},
										{
											"begin": 2425,
											"end": 2460,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2416,
											"end": 2461,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "33"
										},
										{
											"begin": 2416,
											"end": 2461,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2416,
											"end": 2461,
											"name": "tag",
											"source": 13,
											"value": "81"
										},
										{
											"begin": 2416,
											"end": 2461,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2399,
											"end": 2462,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "32"
										},
										{
											"begin": 2399,
											"end": 2462,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2399,
											"end": 2462,
											"name": "tag",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 2399,
											"end": 2462,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2386,
											"end": 2462,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2386,
											"end": 2462,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2306,
											"end": 2468,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2306,
											"end": 2468,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2306,
											"end": 2468,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2306,
											"end": 2468,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2474,
											"end": 2625,
											"name": "tag",
											"source": 13,
											"value": "35"
										},
										{
											"begin": 2474,
											"end": 2625,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2571,
											"end": 2618,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "84"
										},
										{
											"begin": 2612,
											"end": 2617,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2571,
											"end": 2618,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "34"
										},
										{
											"begin": 2571,
											"end": 2618,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2571,
											"end": 2618,
											"name": "tag",
											"source": 13,
											"value": "84"
										},
										{
											"begin": 2571,
											"end": 2618,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2566,
											"end": 2569,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2559,
											"end": 2619,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2474,
											"end": 2625,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2474,
											"end": 2625,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2474,
											"end": 2625,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2631,
											"end": 3093,
											"name": "tag",
											"source": 13,
											"value": "11"
										},
										{
											"begin": 2631,
											"end": 3093,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2790,
											"end": 2794,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2828,
											"end": 2830,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 2817,
											"end": 2826,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2813,
											"end": 2831,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2805,
											"end": 2831,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2805,
											"end": 2831,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2841,
											"end": 2912,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "86"
										},
										{
											"begin": 2909,
											"end": 2910,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2898,
											"end": 2907,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2894,
											"end": 2911,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2885,
											"end": 2891,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 2841,
											"end": 2912,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "30"
										},
										{
											"begin": 2841,
											"end": 2912,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2841,
											"end": 2912,
											"name": "tag",
											"source": 13,
											"value": "86"
										},
										{
											"begin": 2841,
											"end": 2912,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2922,
											"end": 2994,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "87"
										},
										{
											"begin": 2990,
											"end": 2992,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2979,
											"end": 2988,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2975,
											"end": 2993,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2966,
											"end": 2972,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 2922,
											"end": 2994,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "30"
										},
										{
											"begin": 2922,
											"end": 2994,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2922,
											"end": 2994,
											"name": "tag",
											"source": 13,
											"value": "87"
										},
										{
											"begin": 2922,
											"end": 2994,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3004,
											"end": 3086,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "88"
										},
										{
											"begin": 3082,
											"end": 3084,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3071,
											"end": 3080,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3067,
											"end": 3085,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3058,
											"end": 3064,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3004,
											"end": 3086,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "35"
										},
										{
											"begin": 3004,
											"end": 3086,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3004,
											"end": 3086,
											"name": "tag",
											"source": 13,
											"value": "88"
										},
										{
											"begin": 3004,
											"end": 3086,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2631,
											"end": 3093,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 2631,
											"end": 3093,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 2631,
											"end": 3093,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2631,
											"end": 3093,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2631,
											"end": 3093,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2631,
											"end": 3093,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2631,
											"end": 3093,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3099,
											"end": 3242,
											"name": "tag",
											"source": 13,
											"value": "36"
										},
										{
											"begin": 3099,
											"end": 3242,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3156,
											"end": 3161,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3187,
											"end": 3193,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3181,
											"end": 3194,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 3172,
											"end": 3194,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3172,
											"end": 3194,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3203,
											"end": 3236,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "90"
										},
										{
											"begin": 3230,
											"end": 3235,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3203,
											"end": 3236,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "26"
										},
										{
											"begin": 3203,
											"end": 3236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3203,
											"end": 3236,
											"name": "tag",
											"source": 13,
											"value": "90"
										},
										{
											"begin": 3203,
											"end": 3236,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3099,
											"end": 3242,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3099,
											"end": 3242,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3099,
											"end": 3242,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3099,
											"end": 3242,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3099,
											"end": 3242,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3248,
											"end": 3599,
											"name": "tag",
											"source": 13,
											"value": "15"
										},
										{
											"begin": 3248,
											"end": 3599,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3318,
											"end": 3324,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3367,
											"end": 3369,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3355,
											"end": 3364,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3346,
											"end": 3353,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3342,
											"end": 3365,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 3338,
											"end": 3370,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 3335,
											"end": 3454,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3335,
											"end": 3454,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "92"
										},
										{
											"begin": 3335,
											"end": 3454,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3373,
											"end": 3452,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "93"
										},
										{
											"begin": 3373,
											"end": 3452,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "22"
										},
										{
											"begin": 3373,
											"end": 3452,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3373,
											"end": 3452,
											"name": "tag",
											"source": 13,
											"value": "93"
										},
										{
											"begin": 3373,
											"end": 3452,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3335,
											"end": 3454,
											"name": "tag",
											"source": 13,
											"value": "92"
										},
										{
											"begin": 3335,
											"end": 3454,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3493,
											"end": 3494,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3518,
											"end": 3582,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "94"
										},
										{
											"begin": 3574,
											"end": 3581,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3565,
											"end": 3571,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3554,
											"end": 3563,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 3550,
											"end": 3572,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3518,
											"end": 3582,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "36"
										},
										{
											"begin": 3518,
											"end": 3582,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3518,
											"end": 3582,
											"name": "tag",
											"source": 13,
											"value": "94"
										},
										{
											"begin": 3518,
											"end": 3582,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3508,
											"end": 3582,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3508,
											"end": 3582,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3464,
											"end": 3592,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3248,
											"end": 3599,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3248,
											"end": 3599,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3248,
											"end": 3599,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3248,
											"end": 3599,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3248,
											"end": 3599,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3605,
											"end": 3727,
											"name": "tag",
											"source": 13,
											"value": "37"
										},
										{
											"begin": 3605,
											"end": 3727,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3678,
											"end": 3702,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "96"
										},
										{
											"begin": 3696,
											"end": 3701,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3678,
											"end": 3702,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 3678,
											"end": 3702,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3678,
											"end": 3702,
											"name": "tag",
											"source": 13,
											"value": "96"
										},
										{
											"begin": 3678,
											"end": 3702,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3671,
											"end": 3676,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3668,
											"end": 3703,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 3658,
											"end": 3721,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "97"
										},
										{
											"begin": 3658,
											"end": 3721,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3717,
											"end": 3718,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3714,
											"end": 3715,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3707,
											"end": 3719,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 3658,
											"end": 3721,
											"name": "tag",
											"source": 13,
											"value": "97"
										},
										{
											"begin": 3658,
											"end": 3721,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3605,
											"end": 3727,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3605,
											"end": 3727,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3733,
											"end": 3876,
											"name": "tag",
											"source": 13,
											"value": "38"
										},
										{
											"begin": 3733,
											"end": 3876,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3790,
											"end": 3795,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3821,
											"end": 3827,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3815,
											"end": 3828,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 3806,
											"end": 3828,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3806,
											"end": 3828,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3837,
											"end": 3870,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "99"
										},
										{
											"begin": 3864,
											"end": 3869,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3837,
											"end": 3870,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "37"
										},
										{
											"begin": 3837,
											"end": 3870,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3837,
											"end": 3870,
											"name": "tag",
											"source": 13,
											"value": "99"
										},
										{
											"begin": 3837,
											"end": 3870,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3733,
											"end": 3876,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3733,
											"end": 3876,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3733,
											"end": 3876,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3733,
											"end": 3876,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3733,
											"end": 3876,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3882,
											"end": 3972,
											"name": "tag",
											"source": 13,
											"value": "39"
										},
										{
											"begin": 3882,
											"end": 3972,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3917,
											"end": 3924,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3960,
											"end": 3965,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3957,
											"end": 3958,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 3946,
											"end": 3966,
											"name": "SIGNEXTEND",
											"source": 13
										},
										{
											"begin": 3935,
											"end": 3966,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3935,
											"end": 3966,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3882,
											"end": 3972,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3882,
											"end": 3972,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3882,
											"end": 3972,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3882,
											"end": 3972,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3978,
											"end": 4096,
											"name": "tag",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3978,
											"end": 4096,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4049,
											"end": 4071,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "102"
										},
										{
											"begin": 4065,
											"end": 4070,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4049,
											"end": 4071,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "39"
										},
										{
											"begin": 4049,
											"end": 4071,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4049,
											"end": 4071,
											"name": "tag",
											"source": 13,
											"value": "102"
										},
										{
											"begin": 4049,
											"end": 4071,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4042,
											"end": 4047,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4039,
											"end": 4072,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 4029,
											"end": 4090,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "103"
										},
										{
											"begin": 4029,
											"end": 4090,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4086,
											"end": 4087,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4083,
											"end": 4084,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4076,
											"end": 4088,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 4029,
											"end": 4090,
											"name": "tag",
											"source": 13,
											"value": "103"
										},
										{
											"begin": 4029,
											"end": 4090,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3978,
											"end": 4096,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3978,
											"end": 4096,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4102,
											"end": 4241,
											"name": "tag",
											"source": 13,
											"value": "41"
										},
										{
											"begin": 4102,
											"end": 4241,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4157,
											"end": 4162,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4188,
											"end": 4194,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4182,
											"end": 4195,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 4173,
											"end": 4195,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4173,
											"end": 4195,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4204,
											"end": 4235,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "105"
										},
										{
											"begin": 4229,
											"end": 4234,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4204,
											"end": 4235,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4204,
											"end": 4235,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4204,
											"end": 4235,
											"name": "tag",
											"source": 13,
											"value": "105"
										},
										{
											"begin": 4204,
											"end": 4235,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4102,
											"end": 4241,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4102,
											"end": 4241,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4102,
											"end": 4241,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4102,
											"end": 4241,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4102,
											"end": 4241,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4247,
											"end": 4336,
											"name": "tag",
											"source": 13,
											"value": "42"
										},
										{
											"begin": 4247,
											"end": 4336,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4283,
											"end": 4290,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4323,
											"end": 4329,
											"name": "PUSH",
											"source": 13,
											"value": "FFFF"
										},
										{
											"begin": 4316,
											"end": 4321,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4312,
											"end": 4330,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4301,
											"end": 4330,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4301,
											"end": 4330,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4247,
											"end": 4336,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4247,
											"end": 4336,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4247,
											"end": 4336,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4247,
											"end": 4336,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4342,
											"end": 4462,
											"name": "tag",
											"source": 13,
											"value": "43"
										},
										{
											"begin": 4342,
											"end": 4462,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4414,
											"end": 4437,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "108"
										},
										{
											"begin": 4431,
											"end": 4436,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4414,
											"end": 4437,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "42"
										},
										{
											"begin": 4414,
											"end": 4437,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4414,
											"end": 4437,
											"name": "tag",
											"source": 13,
											"value": "108"
										},
										{
											"begin": 4414,
											"end": 4437,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4407,
											"end": 4412,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4404,
											"end": 4438,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 4394,
											"end": 4456,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "109"
										},
										{
											"begin": 4394,
											"end": 4456,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4452,
											"end": 4453,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4449,
											"end": 4450,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4442,
											"end": 4454,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 4394,
											"end": 4456,
											"name": "tag",
											"source": 13,
											"value": "109"
										},
										{
											"begin": 4394,
											"end": 4456,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4342,
											"end": 4462,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4342,
											"end": 4462,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4468,
											"end": 4609,
											"name": "tag",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 4468,
											"end": 4609,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4524,
											"end": 4529,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4555,
											"end": 4561,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4549,
											"end": 4562,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 4540,
											"end": 4562,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4540,
											"end": 4562,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4571,
											"end": 4603,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "111"
										},
										{
											"begin": 4597,
											"end": 4602,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4571,
											"end": 4603,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "43"
										},
										{
											"begin": 4571,
											"end": 4603,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4571,
											"end": 4603,
											"name": "tag",
											"source": 13,
											"value": "111"
										},
										{
											"begin": 4571,
											"end": 4603,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4468,
											"end": 4609,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4468,
											"end": 4609,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4468,
											"end": 4609,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4468,
											"end": 4609,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4468,
											"end": 4609,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4615,
											"end": 4701,
											"name": "tag",
											"source": 13,
											"value": "45"
										},
										{
											"begin": 4615,
											"end": 4701,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4650,
											"end": 4657,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4690,
											"end": 4694,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 4683,
											"end": 4688,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4679,
											"end": 4695,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4668,
											"end": 4695,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4668,
											"end": 4695,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4615,
											"end": 4701,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4615,
											"end": 4701,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4615,
											"end": 4701,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4615,
											"end": 4701,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4707,
											"end": 4825,
											"name": "tag",
											"source": 13,
											"value": "46"
										},
										{
											"begin": 4707,
											"end": 4825,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4778,
											"end": 4800,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "114"
										},
										{
											"begin": 4794,
											"end": 4799,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4778,
											"end": 4800,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "45"
										},
										{
											"begin": 4778,
											"end": 4800,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4778,
											"end": 4800,
											"name": "tag",
											"source": 13,
											"value": "114"
										},
										{
											"begin": 4778,
											"end": 4800,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4771,
											"end": 4776,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4768,
											"end": 4801,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 4758,
											"end": 4819,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "115"
										},
										{
											"begin": 4758,
											"end": 4819,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4815,
											"end": 4816,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4812,
											"end": 4813,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4805,
											"end": 4817,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 4758,
											"end": 4819,
											"name": "tag",
											"source": 13,
											"value": "115"
										},
										{
											"begin": 4758,
											"end": 4819,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4707,
											"end": 4825,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4707,
											"end": 4825,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4831,
											"end": 4970,
											"name": "tag",
											"source": 13,
											"value": "47"
										},
										{
											"begin": 4831,
											"end": 4970,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4886,
											"end": 4891,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4917,
											"end": 4923,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4911,
											"end": 4924,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 4902,
											"end": 4924,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4902,
											"end": 4924,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4933,
											"end": 4964,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "117"
										},
										{
											"begin": 4958,
											"end": 4963,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4933,
											"end": 4964,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "46"
										},
										{
											"begin": 4933,
											"end": 4964,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4933,
											"end": 4964,
											"name": "tag",
											"source": 13,
											"value": "117"
										},
										{
											"begin": 4933,
											"end": 4964,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4831,
											"end": 4970,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4831,
											"end": 4970,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4831,
											"end": 4970,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4831,
											"end": 4970,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4831,
											"end": 4970,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4976,
											"end": 5066,
											"name": "tag",
											"source": 13,
											"value": "48"
										},
										{
											"begin": 4976,
											"end": 5066,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5010,
											"end": 5017,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5053,
											"end": 5058,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5046,
											"end": 5059,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5039,
											"end": 5060,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5028,
											"end": 5060,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5028,
											"end": 5060,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4976,
											"end": 5066,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4976,
											"end": 5066,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4976,
											"end": 5066,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4976,
											"end": 5066,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5072,
											"end": 5188,
											"name": "tag",
											"source": 13,
											"value": "49"
										},
										{
											"begin": 5072,
											"end": 5188,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5142,
											"end": 5163,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "120"
										},
										{
											"begin": 5157,
											"end": 5162,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5142,
											"end": 5163,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "48"
										},
										{
											"begin": 5142,
											"end": 5163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5142,
											"end": 5163,
											"name": "tag",
											"source": 13,
											"value": "120"
										},
										{
											"begin": 5142,
											"end": 5163,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5135,
											"end": 5140,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5132,
											"end": 5164,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 5122,
											"end": 5182,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "121"
										},
										{
											"begin": 5122,
											"end": 5182,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5178,
											"end": 5179,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5175,
											"end": 5176,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5168,
											"end": 5180,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 5122,
											"end": 5182,
											"name": "tag",
											"source": 13,
											"value": "121"
										},
										{
											"begin": 5122,
											"end": 5182,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5072,
											"end": 5188,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5072,
											"end": 5188,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5194,
											"end": 5331,
											"name": "tag",
											"source": 13,
											"value": "50"
										},
										{
											"begin": 5194,
											"end": 5331,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5248,
											"end": 5253,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5279,
											"end": 5285,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5273,
											"end": 5286,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5264,
											"end": 5286,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5264,
											"end": 5286,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5295,
											"end": 5325,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "123"
										},
										{
											"begin": 5319,
											"end": 5324,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5295,
											"end": 5325,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "49"
										},
										{
											"begin": 5295,
											"end": 5325,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5295,
											"end": 5325,
											"name": "tag",
											"source": 13,
											"value": "123"
										},
										{
											"begin": 5295,
											"end": 5325,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5194,
											"end": 5331,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5194,
											"end": 5331,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5194,
											"end": 5331,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5194,
											"end": 5331,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5194,
											"end": 5331,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5337,
											"end": 6608,
											"name": "tag",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5337,
											"end": 6608,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5451,
											"end": 5457,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5459,
											"end": 5465,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5467,
											"end": 5473,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5475,
											"end": 5481,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5483,
											"end": 5489,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5491,
											"end": 5497,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5499,
											"end": 5505,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5548,
											"end": 5551,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 5536,
											"end": 5545,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 5527,
											"end": 5534,
											"name": "DUP11",
											"source": 13
										},
										{
											"begin": 5523,
											"end": 5546,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 5519,
											"end": 5552,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 5516,
											"end": 5636,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5516,
											"end": 5636,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "125"
										},
										{
											"begin": 5516,
											"end": 5636,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5555,
											"end": 5634,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "126"
										},
										{
											"begin": 5555,
											"end": 5634,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "22"
										},
										{
											"begin": 5555,
											"end": 5634,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5555,
											"end": 5634,
											"name": "tag",
											"source": 13,
											"value": "126"
										},
										{
											"begin": 5555,
											"end": 5634,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5516,
											"end": 5636,
											"name": "tag",
											"source": 13,
											"value": "125"
										},
										{
											"begin": 5516,
											"end": 5636,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5675,
											"end": 5676,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5700,
											"end": 5764,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "127"
										},
										{
											"begin": 5756,
											"end": 5763,
											"name": "DUP11",
											"source": 13
										},
										{
											"begin": 5747,
											"end": 5753,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5736,
											"end": 5745,
											"name": "DUP12",
											"source": 13
										},
										{
											"begin": 5732,
											"end": 5754,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5700,
											"end": 5764,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "38"
										},
										{
											"begin": 5700,
											"end": 5764,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5700,
											"end": 5764,
											"name": "tag",
											"source": 13,
											"value": "127"
										},
										{
											"begin": 5700,
											"end": 5764,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5690,
											"end": 5764,
											"name": "SWAP8",
											"source": 13
										},
										{
											"begin": 5690,
											"end": 5764,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5646,
											"end": 5774,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5813,
											"end": 5815,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5839,
											"end": 5901,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "128"
										},
										{
											"begin": 5893,
											"end": 5900,
											"name": "DUP11",
											"source": 13
										},
										{
											"begin": 5884,
											"end": 5890,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5873,
											"end": 5882,
											"name": "DUP12",
											"source": 13
										},
										{
											"begin": 5869,
											"end": 5891,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5839,
											"end": 5901,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "41"
										},
										{
											"begin": 5839,
											"end": 5901,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5839,
											"end": 5901,
											"name": "tag",
											"source": 13,
											"value": "128"
										},
										{
											"begin": 5839,
											"end": 5901,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5829,
											"end": 5901,
											"name": "SWAP7",
											"source": 13
										},
										{
											"begin": 5829,
											"end": 5901,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5784,
											"end": 5911,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5950,
											"end": 5952,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5976,
											"end": 6039,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "129"
										},
										{
											"begin": 6031,
											"end": 6038,
											"name": "DUP11",
											"source": 13
										},
										{
											"begin": 6022,
											"end": 6028,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6011,
											"end": 6020,
											"name": "DUP12",
											"source": 13
										},
										{
											"begin": 6007,
											"end": 6029,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5976,
											"end": 6039,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 5976,
											"end": 6039,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5976,
											"end": 6039,
											"name": "tag",
											"source": 13,
											"value": "129"
										},
										{
											"begin": 5976,
											"end": 6039,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5966,
											"end": 6039,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 5966,
											"end": 6039,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5921,
											"end": 6049,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6088,
											"end": 6090,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 6114,
											"end": 6177,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "130"
										},
										{
											"begin": 6169,
											"end": 6176,
											"name": "DUP11",
											"source": 13
										},
										{
											"begin": 6160,
											"end": 6166,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6149,
											"end": 6158,
											"name": "DUP12",
											"source": 13
										},
										{
											"begin": 6145,
											"end": 6167,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6114,
											"end": 6177,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 6114,
											"end": 6177,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6114,
											"end": 6177,
											"name": "tag",
											"source": 13,
											"value": "130"
										},
										{
											"begin": 6114,
											"end": 6177,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6104,
											"end": 6177,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 6104,
											"end": 6177,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6059,
											"end": 6187,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6226,
											"end": 6229,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 6253,
											"end": 6316,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "131"
										},
										{
											"begin": 6308,
											"end": 6315,
											"name": "DUP11",
											"source": 13
										},
										{
											"begin": 6299,
											"end": 6305,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6288,
											"end": 6297,
											"name": "DUP12",
											"source": 13
										},
										{
											"begin": 6284,
											"end": 6306,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6253,
											"end": 6316,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 6253,
											"end": 6316,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6253,
											"end": 6316,
											"name": "tag",
											"source": 13,
											"value": "131"
										},
										{
											"begin": 6253,
											"end": 6316,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6243,
											"end": 6316,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 6243,
											"end": 6316,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6197,
											"end": 6326,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6365,
											"end": 6368,
											"name": "PUSH",
											"source": 13,
											"value": "A0"
										},
										{
											"begin": 6392,
											"end": 6454,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "132"
										},
										{
											"begin": 6446,
											"end": 6453,
											"name": "DUP11",
											"source": 13
										},
										{
											"begin": 6437,
											"end": 6443,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6426,
											"end": 6435,
											"name": "DUP12",
											"source": 13
										},
										{
											"begin": 6422,
											"end": 6444,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6392,
											"end": 6454,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "47"
										},
										{
											"begin": 6392,
											"end": 6454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6392,
											"end": 6454,
											"name": "tag",
											"source": 13,
											"value": "132"
										},
										{
											"begin": 6392,
											"end": 6454,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6382,
											"end": 6454,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 6382,
											"end": 6454,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6336,
											"end": 6464,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6503,
											"end": 6506,
											"name": "PUSH",
											"source": 13,
											"value": "C0"
										},
										{
											"begin": 6530,
											"end": 6591,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "133"
										},
										{
											"begin": 6583,
											"end": 6590,
											"name": "DUP11",
											"source": 13
										},
										{
											"begin": 6574,
											"end": 6580,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6563,
											"end": 6572,
											"name": "DUP12",
											"source": 13
										},
										{
											"begin": 6559,
											"end": 6581,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6530,
											"end": 6591,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "50"
										},
										{
											"begin": 6530,
											"end": 6591,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6530,
											"end": 6591,
											"name": "tag",
											"source": 13,
											"value": "133"
										},
										{
											"begin": 6530,
											"end": 6591,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6520,
											"end": 6591,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6520,
											"end": 6591,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6474,
											"end": 6601,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5337,
											"end": 6608,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5337,
											"end": 6608,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 5337,
											"end": 6608,
											"name": "SWAP9",
											"source": 13
										},
										{
											"begin": 5337,
											"end": 6608,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5337,
											"end": 6608,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 5337,
											"end": 6608,
											"name": "SWAP8",
											"source": 13
										},
										{
											"begin": 5337,
											"end": 6608,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5337,
											"end": 6608,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5337,
											"end": 6608,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 5337,
											"end": 6608,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5337,
											"end": 6608,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										}
									]
								}
							},
							"sourceList": [
								"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol",
								"@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol",
								"@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol",
								"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol",
								"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol",
								"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol",
								"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol",
								"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol",
								"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol",
								"contracts/PriceAggregator.sol",
								"contracts/interfaces/IERC20.sol",
								"contracts/libraries/UniswapV2.sol",
								"contracts/libraries/UniswapV3.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"sqrtPrice(address,address,address)": "edf15a9a"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tOut\",\"type\":\"address\"}],\"name\":\"sqrtPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/libraries/UniswapV3.sol\":\"UniswapV3\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol\":{\"keccak256\":\"0xcc3d0c93fc9ac0febbe09f941b465b57f750bcf3b48432da0b97dc289cfdc489\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b9379ad954680c44a0bc523b314ae4c4da735f9fe1d02aa56ea5bdba6f1136f2\",\"dweb:/ipfs/QmZXdgQNXKAckrXWz9R3mc47F1fvDvr28a2ewJrwNAw71B\"]},\"@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol\":{\"keccak256\":\"0xfe6113d518466cd6652c85b111e01f33eb62157f49ae5ed7d5a3947a2044adb1\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://1c42b9e6f5902ac38dd43e25750939baa7e0c1425dc75afd717c4412731065d5\",\"dweb:/ipfs/QmWaoacnzsucTvBME2o7YgZBZMhaHv7fkj83htHMVWJKWh\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol\":{\"keccak256\":\"0x9453dd0e7442188667d01d9b65de3f1e14e9511ff3e303179a15f6fc267f7634\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://982f4328f956c3e60e67501e759eb292ac487f76460c774c50e9ae4fcc92aae5\",\"dweb:/ipfs/QmRnzEDsaqtd9PJEVcgQi7p5aV5pMSvRUoGZJAdwFUJxgZ\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol\":{\"keccak256\":\"0xe603ac5b17ecdee73ba2b27efdf386c257a19c14206e87eee77e2017b742d9e5\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://8febc9bdb399a4d94bb89f5377732652e2400e4a8dee808201ade6848f9004e7\",\"dweb:/ipfs/QmaKDqYYFU4d2W2iN77aDHptfbFmYZRrMYXHeGpJmM8C1c\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol\":{\"keccak256\":\"0x8071514d0fe5d17d6fbd31c191cdfb703031c24e0ece3621d88ab10e871375cd\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://d0b571930cc7488b1d546a7e9cea7c52d8b3c4e207da657ed0e0db7343b8cd03\",\"dweb:/ipfs/QmaGK6vVwB95QSTR1XMYvrh7ivYAYZxi3fD7v6VMA4jZ39\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol\":{\"keccak256\":\"0xf6e5d2cd1139c4c276bdbc8e1d2b256e456c866a91f1b868da265c6d2685c3f7\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b99c8c9ae8e27ee6559e5866bea82cbc9ffc8247f8d15b7422a4deb287d4d047\",\"dweb:/ipfs/QmfL8gaqt3ffAnm6nVj5ksuNpLygXuL3xq5VBqrkwC2JJ3\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol\":{\"keccak256\":\"0x759b78a2918af9e99e246dc3af084f654e48ef32bb4e4cb8a966aa3dcaece235\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://64144fb96e1c7fdba87305acadb98a198d26a3d46c097cb3a666e567f6f29735\",\"dweb:/ipfs/QmUnWVwN9FKB9uV5Pr8YfLpWZnYM2DENnRMaadZ492JS9u\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol\":{\"keccak256\":\"0x852dc1f5df7dcf7f11e7bb3eed79f0cea72ad4b25f6a9d2c35aafb48925fd49f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://ed63907c38ff36b0e22bc9ffc53e791ea74f0d4f0e7c257fdfb5aaf8825b1f0f\",\"dweb:/ipfs/QmSQrckghEjs6HVsA5GVgpNpZWvTXMY5eQLF7cN6deFeEg\"]},\"contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x7df9d93243a890a6dc175905d65495ae5726330faa50409ab8460c4c00c672e1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3ff91fe9d915b97343e152f1a15a46e5ff9477e90e90a4431dca38f79eb2cdba\",\"dweb:/ipfs/QmcHUAJs2MfcdbAFTzdQE1eGevxCGHNDXECiuGLDaUs34S\"]},\"contracts/libraries/UniswapV3.sol\":{\"keccak256\":\"0xc30677fce43f2ffe4f221bbe3d9720c38fbd322a4bdc9d840a32d1528545fcc4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://38292eaeb348e86e19c293fc779c6f44b804518e80c8085c6c0451d4a748fa45\",\"dweb:/ipfs/QmVpyP9cdAiBmMWChRDP4x7ZvH5rA6C53e2TAmCAGTE7Vm\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> @uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol": {
				"ast": {
					"absolutePath": "@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol",
					"exportedSymbols": {
						"IUniswapV2Router01": [
							307
						]
					},
					"id": 308,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUniswapV2Router01",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 307,
							"linearizedBaseContracts": [
								307
							],
							"name": "IUniswapV2Router01",
							"nameLocation": "36:18:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "c45a0155",
									"id": 6,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "factory",
									"nameLocation": "70:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "77:2:0"
									},
									"returnParameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 6,
												"src": "103:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "103:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "102:9:0"
									},
									"scope": 307,
									"src": "61:51:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "ad5c4648",
									"id": 11,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "WETH",
									"nameLocation": "126:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "130:2:0"
									},
									"returnParameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "156:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "156:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "155:9:0"
									},
									"scope": 307,
									"src": "117:48:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "e8e33700",
									"id": 36,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "addLiquidity",
									"nameLocation": "180:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 13,
												"mutability": "mutable",
												"name": "tokenA",
												"nameLocation": "210:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 36,
												"src": "202:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 12,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "202:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 15,
												"mutability": "mutable",
												"name": "tokenB",
												"nameLocation": "234:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 36,
												"src": "226:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 14,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "226:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 17,
												"mutability": "mutable",
												"name": "amountADesired",
												"nameLocation": "255:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 36,
												"src": "250:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 16,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "250:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 19,
												"mutability": "mutable",
												"name": "amountBDesired",
												"nameLocation": "284:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 36,
												"src": "279:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 18,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "279:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 21,
												"mutability": "mutable",
												"name": "amountAMin",
												"nameLocation": "313:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 36,
												"src": "308:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 20,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "308:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 23,
												"mutability": "mutable",
												"name": "amountBMin",
												"nameLocation": "338:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 36,
												"src": "333:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 22,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "333:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 25,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "366:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 36,
												"src": "358:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 24,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "358:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "383:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 36,
												"src": "378:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 26,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "378:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "192:205:0"
									},
									"returnParameters": {
										"id": 35,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 30,
												"mutability": "mutable",
												"name": "amountA",
												"nameLocation": "421:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 36,
												"src": "416:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 29,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "416:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "amountB",
												"nameLocation": "435:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 36,
												"src": "430:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 31,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "430:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 34,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "449:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 36,
												"src": "444:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 33,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "444:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "415:44:0"
									},
									"scope": 307,
									"src": "171:289:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "f305d719",
									"id": 57,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "addLiquidityETH",
									"nameLocation": "474:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 49,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "507:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 57,
												"src": "499:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 37,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "499:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 40,
												"mutability": "mutable",
												"name": "amountTokenDesired",
												"nameLocation": "527:18:0",
												"nodeType": "VariableDeclaration",
												"scope": 57,
												"src": "522:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 39,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "522:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "amountTokenMin",
												"nameLocation": "560:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 57,
												"src": "555:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 41,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "555:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 44,
												"mutability": "mutable",
												"name": "amountETHMin",
												"nameLocation": "589:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 57,
												"src": "584:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 43,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "584:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 46,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "619:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 57,
												"src": "611:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 45,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "611:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 48,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "636:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 57,
												"src": "631:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 47,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "631:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "489:161:0"
									},
									"returnParameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 51,
												"mutability": "mutable",
												"name": "amountToken",
												"nameLocation": "682:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 57,
												"src": "677:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 50,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "677:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 53,
												"mutability": "mutable",
												"name": "amountETH",
												"nameLocation": "700:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 57,
												"src": "695:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 52,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "695:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 55,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "716:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 57,
												"src": "711:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 54,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "711:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "676:50:0"
									},
									"scope": 307,
									"src": "465:262:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "baa2abde",
									"id": 78,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeLiquidity",
									"nameLocation": "741:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "tokenA",
												"nameLocation": "774:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "766:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 58,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "766:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 61,
												"mutability": "mutable",
												"name": "tokenB",
												"nameLocation": "798:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "790:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 60,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "790:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "819:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "814:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 62,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "814:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 65,
												"mutability": "mutable",
												"name": "amountAMin",
												"nameLocation": "843:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "838:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 64,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "838:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "amountBMin",
												"nameLocation": "868:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "863:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 66,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "863:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "896:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "888:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "888:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "913:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "908:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 70,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "908:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "756:171:0"
									},
									"returnParameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "amountA",
												"nameLocation": "951:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "946:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 73,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "946:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 76,
												"mutability": "mutable",
												"name": "amountB",
												"nameLocation": "965:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "960:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 75,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "960:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "945:28:0"
									},
									"scope": 307,
									"src": "732:242:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "02751cec",
									"id": 97,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeLiquidityETH",
									"nameLocation": "988:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 91,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 80,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1024:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 97,
												"src": "1016:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 79,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1016:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 82,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "1044:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 97,
												"src": "1039:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 81,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1039:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 84,
												"mutability": "mutable",
												"name": "amountTokenMin",
												"nameLocation": "1068:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 97,
												"src": "1063:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 83,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1063:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "amountETHMin",
												"nameLocation": "1097:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 97,
												"src": "1092:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 85,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1092:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 88,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1127:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 97,
												"src": "1119:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 87,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1119:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 90,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "1144:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 97,
												"src": "1139:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 89,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1139:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1006:152:0"
									},
									"returnParameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "amountToken",
												"nameLocation": "1182:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 97,
												"src": "1177:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 92,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1177:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "amountETH",
												"nameLocation": "1200:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 97,
												"src": "1195:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 94,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1195:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1176:34:0"
									},
									"scope": 307,
									"src": "979:232:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "2195995c",
									"id": 126,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeLiquidityWithPermit",
									"nameLocation": "1225:25:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "tokenA",
												"nameLocation": "1268:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "1260:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 98,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1260:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "tokenB",
												"nameLocation": "1292:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "1284:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1284:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 103,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "1313:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "1308:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 102,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1308:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 105,
												"mutability": "mutable",
												"name": "amountAMin",
												"nameLocation": "1337:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "1332:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 104,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1332:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 107,
												"mutability": "mutable",
												"name": "amountBMin",
												"nameLocation": "1362:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "1357:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 106,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1357:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1390:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "1382:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 108,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1382:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 111,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "1407:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "1402:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 110,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1402:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 113,
												"mutability": "mutable",
												"name": "approveMax",
												"nameLocation": "1430:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "1425:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 112,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1425:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 115,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "1448:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "1442:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 114,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1442:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 117,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "1459:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "1451:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 116,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1451:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 119,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "1470:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "1462:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 118,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1462:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1250:227:0"
									},
									"returnParameters": {
										"id": 125,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 122,
												"mutability": "mutable",
												"name": "amountA",
												"nameLocation": "1501:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "1496:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 121,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1496:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 124,
												"mutability": "mutable",
												"name": "amountB",
												"nameLocation": "1515:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "1510:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 123,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1510:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1495:28:0"
									},
									"scope": 307,
									"src": "1216:308:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "ded9382a",
									"id": 153,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeLiquidityETHWithPermit",
									"nameLocation": "1538:28:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 147,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 128,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1584:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 153,
												"src": "1576:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 127,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1576:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 130,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "1604:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 153,
												"src": "1599:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 129,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1599:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 132,
												"mutability": "mutable",
												"name": "amountTokenMin",
												"nameLocation": "1628:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 153,
												"src": "1623:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 131,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1623:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 134,
												"mutability": "mutable",
												"name": "amountETHMin",
												"nameLocation": "1657:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 153,
												"src": "1652:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 133,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1652:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 136,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1687:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 153,
												"src": "1679:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 135,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1679:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 138,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "1704:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 153,
												"src": "1699:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 137,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1699:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 140,
												"mutability": "mutable",
												"name": "approveMax",
												"nameLocation": "1727:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 153,
												"src": "1722:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 139,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1722:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 142,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "1745:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 153,
												"src": "1739:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 141,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1739:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 144,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "1756:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 153,
												"src": "1748:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 143,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1748:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 146,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "1767:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 153,
												"src": "1759:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 145,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1759:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:208:0"
									},
									"returnParameters": {
										"id": 152,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 149,
												"mutability": "mutable",
												"name": "amountToken",
												"nameLocation": "1798:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 153,
												"src": "1793:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 148,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1793:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 151,
												"mutability": "mutable",
												"name": "amountETH",
												"nameLocation": "1816:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 153,
												"src": "1811:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 150,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1811:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1792:34:0"
									},
									"scope": 307,
									"src": "1529:298:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "38ed1739",
									"id": 170,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactTokensForTokens",
									"nameLocation": "1841:24:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 165,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "1880:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 170,
												"src": "1875:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1875:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nameLocation": "1903:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 170,
												"src": "1898:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1898:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 160,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "1944:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 170,
												"src": "1925:23:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 158,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1925:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 159,
													"nodeType": "ArrayTypeName",
													"src": "1925:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1966:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 170,
												"src": "1958:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1958:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 164,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "1983:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 170,
												"src": "1978:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 163,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1978:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1865:132:0"
									},
									"returnParameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 168,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "2030:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 170,
												"src": "2016:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 166,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "2016:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 167,
													"nodeType": "ArrayTypeName",
													"src": "2016:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2015:23:0"
									},
									"scope": 307,
									"src": "1832:207:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "8803dbee",
									"id": 187,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapTokensForExactTokens",
									"nameLocation": "2053:24:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "2092:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 187,
												"src": "2087:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 171,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2087:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "amountInMax",
												"nameLocation": "2116:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 187,
												"src": "2111:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 173,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2111:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "2156:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 187,
												"src": "2137:23:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 175,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2137:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 176,
													"nodeType": "ArrayTypeName",
													"src": "2137:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 179,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2178:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 187,
												"src": "2170:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 178,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2170:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "2195:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 187,
												"src": "2190:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 180,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2190:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2077:132:0"
									},
									"returnParameters": {
										"id": 186,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "2242:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 187,
												"src": "2228:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 183,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "2228:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 184,
													"nodeType": "ArrayTypeName",
													"src": "2228:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2227:23:0"
									},
									"scope": 307,
									"src": "2044:207:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "7ff36ab5",
									"id": 202,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactETHForTokens",
									"nameLocation": "2265:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 197,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 189,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nameLocation": "2292:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 202,
												"src": "2287:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 188,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2287:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "2325:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 202,
												"src": "2306:23:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 190,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2306:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 191,
													"nodeType": "ArrayTypeName",
													"src": "2306:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 194,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2339:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 202,
												"src": "2331:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 193,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2331:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 196,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "2348:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 202,
												"src": "2343:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 195,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2343:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2286:71:0"
									},
									"returnParameters": {
										"id": 201,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 200,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "2422:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 202,
												"src": "2408:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 198,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "2408:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 199,
													"nodeType": "ArrayTypeName",
													"src": "2408:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2407:23:0"
									},
									"scope": 307,
									"src": "2256:175:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "4a25d94a",
									"id": 219,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapTokensForExactETH",
									"nameLocation": "2445:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "2472:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "2467:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 203,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2467:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 206,
												"mutability": "mutable",
												"name": "amountInMax",
												"nameLocation": "2488:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "2483:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 205,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2483:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 209,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "2520:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "2501:23:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 207,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2501:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 208,
													"nodeType": "ArrayTypeName",
													"src": "2501:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 211,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2534:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "2526:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 210,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2526:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 213,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "2543:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "2538:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 212,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2538:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2466:86:0"
									},
									"returnParameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "2601:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "2587:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 215,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "2587:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 216,
													"nodeType": "ArrayTypeName",
													"src": "2587:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2586:23:0"
									},
									"scope": 307,
									"src": "2436:174:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "18cbafe5",
									"id": 236,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactTokensForETH",
									"nameLocation": "2624:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 221,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "2651:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "2646:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 220,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2646:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nameLocation": "2666:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "2661:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 222,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2661:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "2699:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "2680:23:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 224,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2680:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 225,
													"nodeType": "ArrayTypeName",
													"src": "2680:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 228,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2713:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "2705:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 227,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2705:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 230,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "2722:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "2717:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 229,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2717:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2645:86:0"
									},
									"returnParameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "2780:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "2766:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 232,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "2766:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 233,
													"nodeType": "ArrayTypeName",
													"src": "2766:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2765:23:0"
									},
									"scope": 307,
									"src": "2615:174:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "fb3bdb41",
									"id": 251,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapETHForExactTokens",
									"nameLocation": "2803:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 238,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "2830:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 251,
												"src": "2825:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 237,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2825:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "2860:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 251,
												"src": "2841:23:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 239,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2841:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 240,
													"nodeType": "ArrayTypeName",
													"src": "2841:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2874:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 251,
												"src": "2866:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 242,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2866:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "2883:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 251,
												"src": "2878:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2878:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2824:68:0"
									},
									"returnParameters": {
										"id": 250,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 249,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "2957:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 251,
												"src": "2943:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 247,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "2943:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 248,
													"nodeType": "ArrayTypeName",
													"src": "2943:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2942:23:0"
									},
									"scope": 307,
									"src": "2794:172:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "ad615dec",
									"id": 262,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "quote",
									"nameLocation": "2981:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 253,
												"mutability": "mutable",
												"name": "amountA",
												"nameLocation": "2992:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 262,
												"src": "2987:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 252,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2987:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 255,
												"mutability": "mutable",
												"name": "reserveA",
												"nameLocation": "3006:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 262,
												"src": "3001:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 254,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3001:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "reserveB",
												"nameLocation": "3021:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 262,
												"src": "3016:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 256,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3016:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2986:44:0"
									},
									"returnParameters": {
										"id": 261,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 260,
												"mutability": "mutable",
												"name": "amountB",
												"nameLocation": "3059:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 262,
												"src": "3054:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 259,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3054:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3053:14:0"
									},
									"scope": 307,
									"src": "2972:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "054d50d4",
									"id": 273,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountOut",
									"nameLocation": "3082:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 269,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "3100:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 273,
												"src": "3095:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 263,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3095:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 266,
												"mutability": "mutable",
												"name": "reserveIn",
												"nameLocation": "3115:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 273,
												"src": "3110:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 265,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3110:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 268,
												"mutability": "mutable",
												"name": "reserveOut",
												"nameLocation": "3131:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 273,
												"src": "3126:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 267,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3126:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3094:48:0"
									},
									"returnParameters": {
										"id": 272,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 271,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "3171:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 273,
												"src": "3166:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 270,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3166:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3165:16:0"
									},
									"scope": 307,
									"src": "3073:109:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "85f8c259",
									"id": 284,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountIn",
									"nameLocation": "3196:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 280,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 275,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "3213:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 284,
												"src": "3208:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 274,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3208:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 277,
												"mutability": "mutable",
												"name": "reserveIn",
												"nameLocation": "3229:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 284,
												"src": "3224:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 276,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3224:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "reserveOut",
												"nameLocation": "3245:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 284,
												"src": "3240:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 278,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3240:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3207:49:0"
									},
									"returnParameters": {
										"id": 283,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 282,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "3285:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 284,
												"src": "3280:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 281,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3280:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3279:15:0"
									},
									"scope": 307,
									"src": "3187:108:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "d06ca61f",
									"id": 295,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountsOut",
									"nameLocation": "3309:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 290,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 286,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "3328:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "3323:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 285,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3323:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 289,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "3357:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "3338:23:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 287,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "3338:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 288,
													"nodeType": "ArrayTypeName",
													"src": "3338:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3322:40:0"
									},
									"returnParameters": {
										"id": 294,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 293,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "3400:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "3386:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 291,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "3386:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 292,
													"nodeType": "ArrayTypeName",
													"src": "3386:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3385:23:0"
									},
									"scope": 307,
									"src": "3300:109:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "1f00ca74",
									"id": 306,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountsIn",
									"nameLocation": "3423:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 301,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 297,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "3441:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 306,
												"src": "3436:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 296,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3436:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 300,
												"mutability": "mutable",
												"name": "path",
												"nameLocation": "3471:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 306,
												"src": "3452:23:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 298,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "3452:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 299,
													"nodeType": "ArrayTypeName",
													"src": "3452:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3435:41:0"
									},
									"returnParameters": {
										"id": 305,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 304,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "3514:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 306,
												"src": "3500:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 302,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "3500:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 303,
													"nodeType": "ArrayTypeName",
													"src": "3500:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3499:23:0"
									},
									"scope": 307,
									"src": "3414:109:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 308,
							"src": "26:3499:0",
							"usedErrors": []
						}
					],
					"src": "0:3526:0"
				},
				"id": 0
			},
			"@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol": {
				"ast": {
					"absolutePath": "@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol",
					"exportedSymbols": {
						"IUniswapV3Factory": [
							390
						]
					},
					"id": 391,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 309,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUniswapV3Factory",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 310,
								"nodeType": "StructuredDocumentation",
								"src": "71:163:1",
								"text": "@title The interface for the Uniswap V3 Factory\n @notice The Uniswap V3 Factory facilitates creation of Uniswap V3 pools and control over the protocol fees"
							},
							"fullyImplemented": false,
							"id": 390,
							"linearizedBaseContracts": [
								390
							],
							"name": "IUniswapV3Factory",
							"nameLocation": "244:17:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 311,
										"nodeType": "StructuredDocumentation",
										"src": "268:185:1",
										"text": "@notice Emitted when the owner of the factory is changed\n @param oldOwner The owner before the owner was changed\n @param newOwner The owner after the owner was changed"
									},
									"eventSelector": "b532073b38c83145e3e5135377a08bf9aab55bc0fd7c1179cd4fb995d2a5159c",
									"id": 317,
									"name": "OwnerChanged",
									"nameLocation": "464:12:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 313,
												"indexed": true,
												"mutability": "mutable",
												"name": "oldOwner",
												"nameLocation": "493:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "477:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 312,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "477:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 315,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "519:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "503:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 314,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "503:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "476:52:1"
									},
									"src": "458:71:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 318,
										"nodeType": "StructuredDocumentation",
										"src": "535:421:1",
										"text": "@notice Emitted when a pool is created\n @param token0 The first token of the pool by address sort order\n @param token1 The second token of the pool by address sort order\n @param fee The fee collected upon every swap in the pool, denominated in hundredths of a bip\n @param tickSpacing The minimum number of ticks between initialized ticks\n @param pool The address of the created pool"
									},
									"eventSelector": "783cca1c0412dd0d695e784568c96da2e9c22ff989357a2e8b1d9b2b4e6b7118",
									"id": 330,
									"name": "PoolCreated",
									"nameLocation": "967:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 329,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 320,
												"indexed": true,
												"mutability": "mutable",
												"name": "token0",
												"nameLocation": "1004:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 330,
												"src": "988:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 319,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "988:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 322,
												"indexed": true,
												"mutability": "mutable",
												"name": "token1",
												"nameLocation": "1036:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 330,
												"src": "1020:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 321,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1020:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 324,
												"indexed": true,
												"mutability": "mutable",
												"name": "fee",
												"nameLocation": "1067:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 330,
												"src": "1052:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 323,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "1052:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 326,
												"indexed": false,
												"mutability": "mutable",
												"name": "tickSpacing",
												"nameLocation": "1086:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 330,
												"src": "1080:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 325,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1080:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 328,
												"indexed": false,
												"mutability": "mutable",
												"name": "pool",
												"nameLocation": "1115:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 330,
												"src": "1107:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 327,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1107:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "978:147:1"
									},
									"src": "961:165:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 331,
										"nodeType": "StructuredDocumentation",
										"src": "1132:275:1",
										"text": "@notice Emitted when a new fee amount is enabled for pool creation via the factory\n @param fee The enabled fee, denominated in hundredths of a bip\n @param tickSpacing The minimum number of ticks between initialized ticks for pools created with the given fee"
									},
									"eventSelector": "c66a3fdf07232cdd185febcc6579d408c241b47ae2f9907d84be655141eeaecc",
									"id": 337,
									"name": "FeeAmountEnabled",
									"nameLocation": "1418:16:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 336,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 333,
												"indexed": true,
												"mutability": "mutable",
												"name": "fee",
												"nameLocation": "1450:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 337,
												"src": "1435:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 332,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "1435:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 335,
												"indexed": true,
												"mutability": "mutable",
												"name": "tickSpacing",
												"nameLocation": "1469:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 337,
												"src": "1455:25:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 334,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1455:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1434:47:1"
									},
									"src": "1412:70:1"
								},
								{
									"documentation": {
										"id": 338,
										"nodeType": "StructuredDocumentation",
										"src": "1488:163:1",
										"text": "@notice Returns the current owner of the factory\n @dev Can be changed by the current owner via setOwner\n @return The address of the factory owner"
									},
									"functionSelector": "8da5cb5b",
									"id": 343,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1665:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 339,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1670:2:1"
									},
									"returnParameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 343,
												"src": "1696:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 340,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1696:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1695:9:1"
									},
									"scope": 390,
									"src": "1656:49:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 344,
										"nodeType": "StructuredDocumentation",
										"src": "1711:348:1",
										"text": "@notice Returns the tick spacing for a given fee amount, if enabled, or 0 if not enabled\n @dev A fee amount can never be removed, so this value should be hard coded or cached in the calling context\n @param fee The enabled fee, denominated in hundredths of a bip. Returns 0 in case of unenabled fee\n @return The tick spacing"
									},
									"functionSelector": "22afcccb",
									"id": 351,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "feeAmountTickSpacing",
									"nameLocation": "2073:20:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 346,
												"mutability": "mutable",
												"name": "fee",
												"nameLocation": "2101:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 351,
												"src": "2094:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 345,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "2094:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2093:12:1"
									},
									"returnParameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 351,
												"src": "2129:5:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 348,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "2129:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2128:7:1"
									},
									"scope": 390,
									"src": "2064:72:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 352,
										"nodeType": "StructuredDocumentation",
										"src": "2142:471:1",
										"text": "@notice Returns the pool address for a given pair of tokens and a fee, or address 0 if it does not exist\n @dev tokenA and tokenB may be passed in either token0/token1 or token1/token0 order\n @param tokenA The contract address of either token0 or token1\n @param tokenB The contract address of the other token\n @param fee The fee collected upon every swap in the pool, denominated in hundredths of a bip\n @return pool The pool address"
									},
									"functionSelector": "1698ee82",
									"id": 363,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getPool",
									"nameLocation": "2627:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 354,
												"mutability": "mutable",
												"name": "tokenA",
												"nameLocation": "2652:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "2644:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 353,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2644:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 356,
												"mutability": "mutable",
												"name": "tokenB",
												"nameLocation": "2676:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "2668:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 355,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2668:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "fee",
												"nameLocation": "2699:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "2692:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 357,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "2692:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2634:74:1"
									},
									"returnParameters": {
										"id": 362,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 361,
												"mutability": "mutable",
												"name": "pool",
												"nameLocation": "2740:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "2732:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 360,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2732:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2731:14:1"
									},
									"scope": 390,
									"src": "2618:128:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 364,
										"nodeType": "StructuredDocumentation",
										"src": "2752:554:1",
										"text": "@notice Creates a pool for the given two tokens and fee\n @param tokenA One of the two tokens in the desired pool\n @param tokenB The other of the two tokens in the desired pool\n @param fee The desired fee for the pool\n @dev tokenA and tokenB may be passed in either order: token0/token1 or token1/token0. tickSpacing is retrieved\n from the fee. The call will revert if the pool already exists, the fee is invalid, or the token arguments\n are invalid.\n @return pool The address of the newly created pool"
									},
									"functionSelector": "a1671295",
									"id": 375,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "createPool",
									"nameLocation": "3320:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 371,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 366,
												"mutability": "mutable",
												"name": "tokenA",
												"nameLocation": "3348:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 375,
												"src": "3340:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 365,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3340:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 368,
												"mutability": "mutable",
												"name": "tokenB",
												"nameLocation": "3372:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 375,
												"src": "3364:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 367,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3364:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 370,
												"mutability": "mutable",
												"name": "fee",
												"nameLocation": "3395:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 375,
												"src": "3388:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 369,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "3388:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3330:74:1"
									},
									"returnParameters": {
										"id": 374,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 373,
												"mutability": "mutable",
												"name": "pool",
												"nameLocation": "3431:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 375,
												"src": "3423:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 372,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3423:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3422:14:1"
									},
									"scope": 390,
									"src": "3311:126:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 376,
										"nodeType": "StructuredDocumentation",
										"src": "3443:144:1",
										"text": "@notice Updates the owner of the factory\n @dev Must be called by the current owner\n @param _owner The new owner of the factory"
									},
									"functionSelector": "13af4035",
									"id": 381,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setOwner",
									"nameLocation": "3601:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 378,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "3618:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "3610:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 377,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3610:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3609:16:1"
									},
									"returnParameters": {
										"id": 380,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3634:0:1"
									},
									"scope": 390,
									"src": "3592:43:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 382,
										"nodeType": "StructuredDocumentation",
										"src": "3641:326:1",
										"text": "@notice Enables a fee amount with the given tickSpacing\n @dev Fee amounts may never be removed once enabled\n @param fee The fee amount to enable, denominated in hundredths of a bip (i.e. 1e-6)\n @param tickSpacing The spacing between ticks to be enforced for all pools created with the given fee amount"
									},
									"functionSelector": "8a7c195f",
									"id": 389,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "enableFeeAmount",
									"nameLocation": "3981:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 387,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "fee",
												"nameLocation": "4004:3:1",
												"nodeType": "VariableDeclaration",
												"scope": 389,
												"src": "3997:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 383,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "3997:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "tickSpacing",
												"nameLocation": "4015:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 389,
												"src": "4009:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 385,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "4009:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3996:31:1"
									},
									"returnParameters": {
										"id": 388,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4036:0:1"
									},
									"scope": 390,
									"src": "3972:65:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 391,
							"src": "234:3805:1",
							"usedErrors": []
						}
					],
					"src": "45:3995:1"
				},
				"id": 1
			},
			"@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol": {
				"ast": {
					"absolutePath": "@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol",
					"exportedSymbols": {
						"IUniswapV3Pool": [
							412
						],
						"IUniswapV3PoolActions": [
							508
						],
						"IUniswapV3PoolDerivedState": [
							539
						],
						"IUniswapV3PoolEvents": [
							658
						],
						"IUniswapV3PoolImmutables": [
							698
						],
						"IUniswapV3PoolOwnerActions": [
							724
						],
						"IUniswapV3PoolState": [
							832
						]
					},
					"id": 413,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 392,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:2"
						},
						{
							"absolutePath": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol",
							"file": "./pool/IUniswapV3PoolImmutables.sol",
							"id": 393,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 413,
							"sourceUnit": 699,
							"src": "71:45:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol",
							"file": "./pool/IUniswapV3PoolState.sol",
							"id": 394,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 413,
							"sourceUnit": 833,
							"src": "117:40:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol",
							"file": "./pool/IUniswapV3PoolDerivedState.sol",
							"id": 395,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 413,
							"sourceUnit": 540,
							"src": "158:47:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol",
							"file": "./pool/IUniswapV3PoolActions.sol",
							"id": 396,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 413,
							"sourceUnit": 509,
							"src": "206:42:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol",
							"file": "./pool/IUniswapV3PoolOwnerActions.sol",
							"id": 397,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 413,
							"sourceUnit": 725,
							"src": "249:47:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol",
							"file": "./pool/IUniswapV3PoolEvents.sol",
							"id": 398,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 413,
							"sourceUnit": 659,
							"src": "297:41:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 400,
										"name": "IUniswapV3PoolImmutables",
										"nameLocations": [
											"637:24:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 698,
										"src": "637:24:2"
									},
									"id": 401,
									"nodeType": "InheritanceSpecifier",
									"src": "637:24:2"
								},
								{
									"baseName": {
										"id": 402,
										"name": "IUniswapV3PoolState",
										"nameLocations": [
											"667:19:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 832,
										"src": "667:19:2"
									},
									"id": 403,
									"nodeType": "InheritanceSpecifier",
									"src": "667:19:2"
								},
								{
									"baseName": {
										"id": 404,
										"name": "IUniswapV3PoolDerivedState",
										"nameLocations": [
											"692:26:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 539,
										"src": "692:26:2"
									},
									"id": 405,
									"nodeType": "InheritanceSpecifier",
									"src": "692:26:2"
								},
								{
									"baseName": {
										"id": 406,
										"name": "IUniswapV3PoolActions",
										"nameLocations": [
											"724:21:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 508,
										"src": "724:21:2"
									},
									"id": 407,
									"nodeType": "InheritanceSpecifier",
									"src": "724:21:2"
								},
								{
									"baseName": {
										"id": 408,
										"name": "IUniswapV3PoolOwnerActions",
										"nameLocations": [
											"751:26:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 724,
										"src": "751:26:2"
									},
									"id": 409,
									"nodeType": "InheritanceSpecifier",
									"src": "751:26:2"
								},
								{
									"baseName": {
										"id": 410,
										"name": "IUniswapV3PoolEvents",
										"nameLocations": [
											"783:20:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 658,
										"src": "783:20:2"
									},
									"id": 411,
									"nodeType": "InheritanceSpecifier",
									"src": "783:20:2"
								}
							],
							"canonicalName": "IUniswapV3Pool",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 399,
								"nodeType": "StructuredDocumentation",
								"src": "340:265:2",
								"text": "@title The interface for a Uniswap V3 Pool\n @notice A Uniswap pool facilitates swapping and automated market making between any two assets that strictly conform\n to the ERC20 specification\n @dev The pool interface is broken up into many smaller pieces"
							},
							"fullyImplemented": false,
							"id": 412,
							"linearizedBaseContracts": [
								412,
								658,
								724,
								508,
								539,
								832,
								698
							],
							"name": "IUniswapV3Pool",
							"nameLocation": "615:14:2",
							"nodeType": "ContractDefinition",
							"nodes": [],
							"scope": 413,
							"src": "605:203:2",
							"usedErrors": []
						}
					],
					"src": "45:764:2"
				},
				"id": 2
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol": {
				"ast": {
					"absolutePath": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol",
					"exportedSymbols": {
						"IUniswapV3PoolActions": [
							508
						]
					},
					"id": 509,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 414,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUniswapV3PoolActions",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 415,
								"nodeType": "StructuredDocumentation",
								"src": "71:102:3",
								"text": "@title Permissionless pool actions\n @notice Contains pool methods that can be called by anyone"
							},
							"fullyImplemented": false,
							"id": 508,
							"linearizedBaseContracts": [
								508
							],
							"name": "IUniswapV3PoolActions",
							"nameLocation": "183:21:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 416,
										"nodeType": "StructuredDocumentation",
										"src": "211:206:3",
										"text": "@notice Sets the initial price for the pool\n @dev Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value\n @param sqrtPriceX96 the initial sqrt price of the pool as a Q64.96"
									},
									"functionSelector": "f637731d",
									"id": 421,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "initialize",
									"nameLocation": "431:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 419,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 418,
												"mutability": "mutable",
												"name": "sqrtPriceX96",
												"nameLocation": "450:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 421,
												"src": "442:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 417,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "442:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "441:22:3"
									},
									"returnParameters": {
										"id": 420,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "472:0:3"
									},
									"scope": 508,
									"src": "422:51:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 422,
										"nodeType": "StructuredDocumentation",
										"src": "479:1029:3",
										"text": "@notice Adds liquidity for the given recipient/tickLower/tickUpper position\n @dev The caller of this method receives a callback in the form of IUniswapV3MintCallback#uniswapV3MintCallback\n in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends\n on tickLower, tickUpper, the amount of liquidity, and the current price.\n @param recipient The address for which the liquidity will be created\n @param tickLower The lower tick of the position in which to add liquidity\n @param tickUpper The upper tick of the position in which to add liquidity\n @param amount The amount of liquidity to mint\n @param data Any data that should be passed through to the callback\n @return amount0 The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback\n @return amount1 The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback"
									},
									"functionSelector": "3c8a7d8d",
									"id": 439,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nameLocation": "1522:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 433,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 424,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1544:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 439,
												"src": "1536:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 423,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1536:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 426,
												"mutability": "mutable",
												"name": "tickLower",
												"nameLocation": "1569:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 439,
												"src": "1563:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 425,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1563:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 428,
												"mutability": "mutable",
												"name": "tickUpper",
												"nameLocation": "1594:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 439,
												"src": "1588:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 427,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1588:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 430,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1621:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 439,
												"src": "1613:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 429,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1613:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 432,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1652:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 439,
												"src": "1637:19:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 431,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1637:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1526:136:3"
									},
									"returnParameters": {
										"id": 438,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 435,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "1689:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 439,
												"src": "1681:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 434,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1681:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 437,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "1706:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 439,
												"src": "1698:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 436,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1698:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1680:34:3"
									},
									"scope": 508,
									"src": "1513:202:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 440,
										"nodeType": "StructuredDocumentation",
										"src": "1721:1053:3",
										"text": "@notice Collects tokens owed to a position\n @dev Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity.\n Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or\n amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the\n actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.\n @param recipient The address which should receive the fees collected\n @param tickLower The lower tick of the position for which to collect fees\n @param tickUpper The upper tick of the position for which to collect fees\n @param amount0Requested How much token0 should be withdrawn from the fees owed\n @param amount1Requested How much token1 should be withdrawn from the fees owed\n @return amount0 The amount of fees collected in token0\n @return amount1 The amount of fees collected in token1"
									},
									"functionSelector": "4f1eb3d8",
									"id": 457,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "collect",
									"nameLocation": "2788:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 451,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 442,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2813:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 457,
												"src": "2805:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 441,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2805:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 444,
												"mutability": "mutable",
												"name": "tickLower",
												"nameLocation": "2838:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 457,
												"src": "2832:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 443,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "2832:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 446,
												"mutability": "mutable",
												"name": "tickUpper",
												"nameLocation": "2863:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 457,
												"src": "2857:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 445,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "2857:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 448,
												"mutability": "mutable",
												"name": "amount0Requested",
												"nameLocation": "2890:16:3",
												"nodeType": "VariableDeclaration",
												"scope": 457,
												"src": "2882:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 447,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2882:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 450,
												"mutability": "mutable",
												"name": "amount1Requested",
												"nameLocation": "2924:16:3",
												"nodeType": "VariableDeclaration",
												"scope": 457,
												"src": "2916:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 449,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2916:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2795:151:3"
									},
									"returnParameters": {
										"id": 456,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "2973:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 457,
												"src": "2965:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 452,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2965:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "2990:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 457,
												"src": "2982:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 454,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2982:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2964:34:3"
									},
									"scope": 508,
									"src": "2779:220:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 458,
										"nodeType": "StructuredDocumentation",
										"src": "3005:631:3",
										"text": "@notice Burn liquidity from the sender and account tokens owed for the liquidity to the position\n @dev Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0\n @dev Fees must be collected separately via a call to #collect\n @param tickLower The lower tick of the position for which to burn liquidity\n @param tickUpper The upper tick of the position for which to burn liquidity\n @param amount How much liquidity to burn\n @return amount0 The amount of token0 sent to the recipient\n @return amount1 The amount of token1 sent to the recipient"
									},
									"functionSelector": "a34123a7",
									"id": 471,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "3650:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 465,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "tickLower",
												"nameLocation": "3670:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 471,
												"src": "3664:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 459,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "3664:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 462,
												"mutability": "mutable",
												"name": "tickUpper",
												"nameLocation": "3695:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 471,
												"src": "3689:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 461,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "3689:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 464,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3722:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 471,
												"src": "3714:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 463,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "3714:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3654:80:3"
									},
									"returnParameters": {
										"id": 470,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 467,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "3761:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 471,
												"src": "3753:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 466,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3753:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 469,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "3778:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 471,
												"src": "3770:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 468,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3770:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3752:34:3"
									},
									"scope": 508,
									"src": "3641:146:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 472,
										"nodeType": "StructuredDocumentation",
										"src": "3793:1015:3",
										"text": "@notice Swap token0 for token1, or token1 for token0\n @dev The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback\n @param recipient The address to receive the output of the swap\n @param zeroForOne The direction of the swap, true for token0 to token1, false for token1 to token0\n @param amountSpecified The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)\n @param sqrtPriceLimitX96 The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this\n value after the swap. If one for zero, the price cannot be greater than this value after the swap\n @param data Any data to be passed through to the callback\n @return amount0 The delta of the balance of token0 of the pool, exact when negative, minimum when positive\n @return amount1 The delta of the balance of token1 of the pool, exact when negative, minimum when positive"
									},
									"functionSelector": "128acb08",
									"id": 489,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swap",
									"nameLocation": "4822:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 483,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 474,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "4844:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 489,
												"src": "4836:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 473,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4836:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 476,
												"mutability": "mutable",
												"name": "zeroForOne",
												"nameLocation": "4868:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 489,
												"src": "4863:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 475,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4863:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 478,
												"mutability": "mutable",
												"name": "amountSpecified",
												"nameLocation": "4895:15:3",
												"nodeType": "VariableDeclaration",
												"scope": 489,
												"src": "4888:22:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 477,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "4888:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 480,
												"mutability": "mutable",
												"name": "sqrtPriceLimitX96",
												"nameLocation": "4928:17:3",
												"nodeType": "VariableDeclaration",
												"scope": 489,
												"src": "4920:25:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 479,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "4920:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 482,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4970:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 489,
												"src": "4955:19:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 481,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4955:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4826:154:3"
									},
									"returnParameters": {
										"id": 488,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 485,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "5006:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 489,
												"src": "4999:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 484,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "4999:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "5022:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 489,
												"src": "5015:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 486,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "5015:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4998:32:3"
									},
									"scope": 508,
									"src": "4813:218:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 490,
										"nodeType": "StructuredDocumentation",
										"src": "5037:657:3",
										"text": "@notice Receive token0 and/or token1 and pay it back, plus a fee, in the callback\n @dev The caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallback\n @dev Can be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling\n with 0 amount{0,1} and sending the donation amount(s) from the callback\n @param recipient The address which will receive the token0 and token1 amounts\n @param amount0 The amount of token0 to send\n @param amount1 The amount of token1 to send\n @param data Any data to be passed through to the callback"
									},
									"functionSelector": "490e6cbc",
									"id": 501,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "flash",
									"nameLocation": "5708:5:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 499,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 492,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "5731:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 501,
												"src": "5723:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 491,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5723:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 494,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "5758:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 501,
												"src": "5750:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 493,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5750:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 496,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "5783:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 501,
												"src": "5775:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 495,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5775:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 498,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5815:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 501,
												"src": "5800:19:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 497,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5800:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5713:112:3"
									},
									"returnParameters": {
										"id": 500,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5834:0:3"
									},
									"scope": 508,
									"src": "5699:136:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 502,
										"nodeType": "StructuredDocumentation",
										"src": "5841:367:3",
										"text": "@notice Increase the maximum number of price and liquidity observations that this pool will store\n @dev This method is no-op if the pool already has an observationCardinalityNext greater than or equal to\n the input observationCardinalityNext.\n @param observationCardinalityNext The desired minimum number of observations for the pool to store"
									},
									"functionSelector": "32148f67",
									"id": 507,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "increaseObservationCardinalityNext",
									"nameLocation": "6222:34:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 505,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 504,
												"mutability": "mutable",
												"name": "observationCardinalityNext",
												"nameLocation": "6264:26:3",
												"nodeType": "VariableDeclaration",
												"scope": 507,
												"src": "6257:33:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 503,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "6257:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6256:35:3"
									},
									"returnParameters": {
										"id": 506,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6300:0:3"
									},
									"scope": 508,
									"src": "6213:88:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 509,
							"src": "173:6130:3",
							"usedErrors": []
						}
					],
					"src": "45:6259:3"
				},
				"id": 3
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol": {
				"ast": {
					"absolutePath": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol",
					"exportedSymbols": {
						"IUniswapV3PoolDerivedState": [
							539
						]
					},
					"id": 540,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 510,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUniswapV3PoolDerivedState",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 511,
								"nodeType": "StructuredDocumentation",
								"src": "71:222:4",
								"text": "@title Pool state that is not stored\n @notice Contains view functions to provide information about the pool that is computed rather than stored on the\n blockchain. The functions here may have variable gas costs."
							},
							"fullyImplemented": false,
							"id": 539,
							"linearizedBaseContracts": [
								539
							],
							"name": "IUniswapV3PoolDerivedState",
							"nameLocation": "303:26:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 512,
										"nodeType": "StructuredDocumentation",
										"src": "336:1045:4",
										"text": "@notice Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp\n @dev To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing\n the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick,\n you must call it with secondsAgos = [3600, 0].\n @dev The time weighted average tick represents the geometric time weighted average price of the pool, in\n log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.\n @param secondsAgos From how long ago each cumulative tick and liquidity value should be returned\n @return tickCumulatives Cumulative tick values as of each `secondsAgos` from the current block timestamp\n @return secondsPerLiquidityCumulativeX128s Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block\n timestamp"
									},
									"functionSelector": "883bdbfd",
									"id": 524,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "observe",
									"nameLocation": "1395:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 516,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 515,
												"mutability": "mutable",
												"name": "secondsAgos",
												"nameLocation": "1421:11:4",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "1403:29:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint32_$dyn_calldata_ptr",
													"typeString": "uint32[]"
												},
												"typeName": {
													"baseType": {
														"id": 513,
														"name": "uint32",
														"nodeType": "ElementaryTypeName",
														"src": "1403:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"id": 514,
													"nodeType": "ArrayTypeName",
													"src": "1403:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint32_$dyn_storage_ptr",
														"typeString": "uint32[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1402:31:4"
									},
									"returnParameters": {
										"id": 523,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 519,
												"mutability": "mutable",
												"name": "tickCumulatives",
												"nameLocation": "1496:15:4",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "1481:30:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_int56_$dyn_memory_ptr",
													"typeString": "int56[]"
												},
												"typeName": {
													"baseType": {
														"id": 517,
														"name": "int56",
														"nodeType": "ElementaryTypeName",
														"src": "1481:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_int56",
															"typeString": "int56"
														}
													},
													"id": 518,
													"nodeType": "ArrayTypeName",
													"src": "1481:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_int56_$dyn_storage_ptr",
														"typeString": "int56[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 522,
												"mutability": "mutable",
												"name": "secondsPerLiquidityCumulativeX128s",
												"nameLocation": "1530:34:4",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "1513:51:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint160_$dyn_memory_ptr",
													"typeString": "uint160[]"
												},
												"typeName": {
													"baseType": {
														"id": 520,
														"name": "uint160",
														"nodeType": "ElementaryTypeName",
														"src": "1513:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"id": 521,
													"nodeType": "ArrayTypeName",
													"src": "1513:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint160_$dyn_storage_ptr",
														"typeString": "uint160[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1480:85:4"
									},
									"scope": 539,
									"src": "1386:180:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 525,
										"nodeType": "StructuredDocumentation",
										"src": "1572:771:4",
										"text": "@notice Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range\n @dev Snapshots must only be compared to other snapshots, taken over a period for which a position existed.\n I.e., snapshots cannot be compared if a position is not held for the entire period between when the first\n snapshot is taken and the second snapshot is taken.\n @param tickLower The lower tick of the range\n @param tickUpper The upper tick of the range\n @return tickCumulativeInside The snapshot of the tick accumulator for the range\n @return secondsPerLiquidityInsideX128 The snapshot of seconds per liquidity for the range\n @return secondsInside The snapshot of seconds per liquidity for the range"
									},
									"functionSelector": "a38807f2",
									"id": 538,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "snapshotCumulativesInside",
									"nameLocation": "2357:25:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 530,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 527,
												"mutability": "mutable",
												"name": "tickLower",
												"nameLocation": "2389:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 538,
												"src": "2383:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 526,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "2383:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 529,
												"mutability": "mutable",
												"name": "tickUpper",
												"nameLocation": "2406:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 538,
												"src": "2400:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 528,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "2400:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2382:34:4"
									},
									"returnParameters": {
										"id": 537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 532,
												"mutability": "mutable",
												"name": "tickCumulativeInside",
												"nameLocation": "2483:20:4",
												"nodeType": "VariableDeclaration",
												"scope": 538,
												"src": "2477:26:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int56",
													"typeString": "int56"
												},
												"typeName": {
													"id": 531,
													"name": "int56",
													"nodeType": "ElementaryTypeName",
													"src": "2477:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int56",
														"typeString": "int56"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 534,
												"mutability": "mutable",
												"name": "secondsPerLiquidityInsideX128",
												"nameLocation": "2525:29:4",
												"nodeType": "VariableDeclaration",
												"scope": 538,
												"src": "2517:37:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 533,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "2517:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 536,
												"mutability": "mutable",
												"name": "secondsInside",
												"nameLocation": "2575:13:4",
												"nodeType": "VariableDeclaration",
												"scope": 538,
												"src": "2568:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 535,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "2568:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2463:135:4"
									},
									"scope": 539,
									"src": "2348:251:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 540,
							"src": "293:2308:4",
							"usedErrors": []
						}
					],
					"src": "45:2557:4"
				},
				"id": 4
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol": {
				"ast": {
					"absolutePath": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol",
					"exportedSymbols": {
						"IUniswapV3PoolEvents": [
							658
						]
					},
					"id": 659,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 541,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUniswapV3PoolEvents",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 542,
								"nodeType": "StructuredDocumentation",
								"src": "71:88:5",
								"text": "@title Events emitted by a pool\n @notice Contains all events emitted by the pool"
							},
							"fullyImplemented": true,
							"id": 658,
							"linearizedBaseContracts": [
								658
							],
							"name": "IUniswapV3PoolEvents",
							"nameLocation": "169:20:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 543,
										"nodeType": "StructuredDocumentation",
										"src": "196:344:5",
										"text": "@notice Emitted exactly once by a pool when #initialize is first called on the pool\n @dev Mint/Burn/Swap cannot be emitted by the pool before Initialize\n @param sqrtPriceX96 The initial sqrt price of the pool, as a Q64.96\n @param tick The initial tick of the pool, i.e. log base 1.0001 of the starting price of the pool"
									},
									"eventSelector": "98636036cb66a9c19a37435efc1e90142190214e8abeb821bdba3f2990dd4c95",
									"id": 549,
									"name": "Initialize",
									"nameLocation": "551:10:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 548,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 545,
												"indexed": false,
												"mutability": "mutable",
												"name": "sqrtPriceX96",
												"nameLocation": "570:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 549,
												"src": "562:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 544,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "562:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 547,
												"indexed": false,
												"mutability": "mutable",
												"name": "tick",
												"nameLocation": "590:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 549,
												"src": "584:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 546,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "584:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "561:34:5"
									},
									"src": "545:51:5"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 550,
										"nodeType": "StructuredDocumentation",
										"src": "602:551:5",
										"text": "@notice Emitted when liquidity is minted for a given position\n @param sender The address that minted the liquidity\n @param owner The owner of the position and recipient of any minted liquidity\n @param tickLower The lower tick of the position\n @param tickUpper The upper tick of the position\n @param amount The amount of liquidity minted to the position range\n @param amount0 How much token0 was required for the minted liquidity\n @param amount1 How much token1 was required for the minted liquidity"
									},
									"eventSelector": "7a53080ba414158be7ec69b987b5fb7d07dee101fe85488f0853ae16239d0bde",
									"id": 566,
									"name": "Mint",
									"nameLocation": "1164:4:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 565,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 552,
												"indexed": false,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1186:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 566,
												"src": "1178:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 551,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1178:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 554,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1218:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 566,
												"src": "1202:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 553,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1202:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 556,
												"indexed": true,
												"mutability": "mutable",
												"name": "tickLower",
												"nameLocation": "1247:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 566,
												"src": "1233:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 555,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1233:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 558,
												"indexed": true,
												"mutability": "mutable",
												"name": "tickUpper",
												"nameLocation": "1280:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 566,
												"src": "1266:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 557,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1266:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 560,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1307:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 566,
												"src": "1299:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 559,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1299:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 562,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "1331:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 566,
												"src": "1323:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 561,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1323:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 564,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "1356:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 566,
												"src": "1348:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 563,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1348:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1168:201:5"
									},
									"src": "1158:212:5"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 567,
										"nodeType": "StructuredDocumentation",
										"src": "1376:493:5",
										"text": "@notice Emitted when fees are collected by the owner of a position\n @dev Collect events may be emitted with zero amount0 and amount1 when the caller chooses not to collect fees\n @param owner The owner of the position for which fees are collected\n @param tickLower The lower tick of the position\n @param tickUpper The upper tick of the position\n @param amount0 The amount of token0 fees collected\n @param amount1 The amount of token1 fees collected"
									},
									"eventSelector": "70935338e69775456a85ddef226c395fb668b63fa0115f5f20610b388e6ca9c0",
									"id": 581,
									"name": "Collect",
									"nameLocation": "1880:7:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 580,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 569,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1913:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 581,
												"src": "1897:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 568,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1897:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 571,
												"indexed": false,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1936:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 581,
												"src": "1928:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 570,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1928:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 573,
												"indexed": true,
												"mutability": "mutable",
												"name": "tickLower",
												"nameLocation": "1969:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 581,
												"src": "1955:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 572,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1955:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 575,
												"indexed": true,
												"mutability": "mutable",
												"name": "tickUpper",
												"nameLocation": "2002:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 581,
												"src": "1988:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 574,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1988:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 577,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "2029:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 581,
												"src": "2021:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 576,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2021:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 579,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "2054:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 581,
												"src": "2046:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 578,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2046:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1887:180:5"
									},
									"src": "1874:194:5"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 582,
										"nodeType": "StructuredDocumentation",
										"src": "2074:523:5",
										"text": "@notice Emitted when a position's liquidity is removed\n @dev Does not withdraw any fees earned by the liquidity position, which must be withdrawn via #collect\n @param owner The owner of the position for which liquidity is removed\n @param tickLower The lower tick of the position\n @param tickUpper The upper tick of the position\n @param amount The amount of liquidity to remove\n @param amount0 The amount of token0 withdrawn\n @param amount1 The amount of token1 withdrawn"
									},
									"eventSelector": "0c396cd989a39f4459b5fa1aed6a9a8dcdbc45908acfd67e028cd568da98982c",
									"id": 596,
									"name": "Burn",
									"nameLocation": "2608:4:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 595,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 584,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2638:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 596,
												"src": "2622:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 583,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2622:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 586,
												"indexed": true,
												"mutability": "mutable",
												"name": "tickLower",
												"nameLocation": "2667:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 596,
												"src": "2653:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 585,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "2653:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 588,
												"indexed": true,
												"mutability": "mutable",
												"name": "tickUpper",
												"nameLocation": "2700:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 596,
												"src": "2686:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 587,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "2686:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 590,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2727:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 596,
												"src": "2719:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 589,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2719:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 592,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "2751:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 596,
												"src": "2743:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 591,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2743:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 594,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "2776:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 596,
												"src": "2768:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 593,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2768:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2612:177:5"
									},
									"src": "2602:188:5"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 597,
										"nodeType": "StructuredDocumentation",
										"src": "2796:600:5",
										"text": "@notice Emitted by the pool for any swaps between token0 and token1\n @param sender The address that initiated the swap call, and that received the callback\n @param recipient The address that received the output of the swap\n @param amount0 The delta of the token0 balance of the pool\n @param amount1 The delta of the token1 balance of the pool\n @param sqrtPriceX96 The sqrt(price) of the pool after the swap, as a Q64.96\n @param liquidity The liquidity of the pool after the swap\n @param tick The log base 1.0001 of price of the pool after the swap"
									},
									"eventSelector": "c42079f94a6350d7e6235f29174924f928cc2ac818eb64fed8004e115fbcca67",
									"id": 613,
									"name": "Swap",
									"nameLocation": "3407:4:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 599,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3437:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 613,
												"src": "3421:22:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 598,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3421:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 601,
												"indexed": true,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "3469:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 613,
												"src": "3453:25:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 600,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3453:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 603,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "3495:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 613,
												"src": "3488:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 602,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "3488:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 605,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "3519:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 613,
												"src": "3512:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 604,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "3512:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 607,
												"indexed": false,
												"mutability": "mutable",
												"name": "sqrtPriceX96",
												"nameLocation": "3544:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 613,
												"src": "3536:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 606,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "3536:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 609,
												"indexed": false,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "3574:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 613,
												"src": "3566:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 608,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "3566:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 611,
												"indexed": false,
												"mutability": "mutable",
												"name": "tick",
												"nameLocation": "3599:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 613,
												"src": "3593:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 610,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "3593:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3411:198:5"
									},
									"src": "3401:209:5"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 614,
										"nodeType": "StructuredDocumentation",
										"src": "3616:562:5",
										"text": "@notice Emitted by the pool for any flashes of token0/token1\n @param sender The address that initiated the swap call, and that received the callback\n @param recipient The address that received the tokens from flash\n @param amount0 The amount of token0 that was flashed\n @param amount1 The amount of token1 that was flashed\n @param paid0 The amount of token0 paid for the flash, which can exceed the amount0 plus the fee\n @param paid1 The amount of token1 paid for the flash, which can exceed the amount1 plus the fee"
									},
									"eventSelector": "bdbdb71d7860376ba52b25a5028beea23581364a40522f6bcfb86bb1f2dca633",
									"id": 628,
									"name": "Flash",
									"nameLocation": "4189:5:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 627,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 616,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4220:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 628,
												"src": "4204:22:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 615,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4204:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 618,
												"indexed": true,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "4252:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 628,
												"src": "4236:25:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 617,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4236:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 620,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "4279:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 628,
												"src": "4271:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 619,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4271:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 622,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "4304:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 628,
												"src": "4296:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 621,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4296:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 624,
												"indexed": false,
												"mutability": "mutable",
												"name": "paid0",
												"nameLocation": "4329:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 628,
												"src": "4321:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 623,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4321:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 626,
												"indexed": false,
												"mutability": "mutable",
												"name": "paid1",
												"nameLocation": "4352:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 628,
												"src": "4344:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 625,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4344:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4194:169:5"
									},
									"src": "4183:181:5"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 629,
										"nodeType": "StructuredDocumentation",
										"src": "4370:451:5",
										"text": "@notice Emitted by the pool for increases to the number of observations that can be stored\n @dev observationCardinalityNext is not the observation cardinality until an observation is written at the index\n just before a mint/swap/burn.\n @param observationCardinalityNextOld The previous value of the next observation cardinality\n @param observationCardinalityNextNew The updated value of the next observation cardinality"
									},
									"eventSelector": "ac49e518f90a358f652e4400164f05a5d8f7e35e7747279bc3a93dbf584e125a",
									"id": 635,
									"name": "IncreaseObservationCardinalityNext",
									"nameLocation": "4832:34:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 634,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 631,
												"indexed": false,
												"mutability": "mutable",
												"name": "observationCardinalityNextOld",
												"nameLocation": "4883:29:5",
												"nodeType": "VariableDeclaration",
												"scope": 635,
												"src": "4876:36:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 630,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "4876:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 633,
												"indexed": false,
												"mutability": "mutable",
												"name": "observationCardinalityNextNew",
												"nameLocation": "4929:29:5",
												"nodeType": "VariableDeclaration",
												"scope": 635,
												"src": "4922:36:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 632,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "4922:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4866:98:5"
									},
									"src": "4826:139:5"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 636,
										"nodeType": "StructuredDocumentation",
										"src": "4971:370:5",
										"text": "@notice Emitted when the protocol fee is changed by the pool\n @param feeProtocol0Old The previous value of the token0 protocol fee\n @param feeProtocol1Old The previous value of the token1 protocol fee\n @param feeProtocol0New The updated value of the token0 protocol fee\n @param feeProtocol1New The updated value of the token1 protocol fee"
									},
									"eventSelector": "973d8d92bb299f4af6ce49b52a8adb85ae46b9f214c4c4fc06ac77401237b133",
									"id": 646,
									"name": "SetFeeProtocol",
									"nameLocation": "5352:14:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 638,
												"indexed": false,
												"mutability": "mutable",
												"name": "feeProtocol0Old",
												"nameLocation": "5373:15:5",
												"nodeType": "VariableDeclaration",
												"scope": 646,
												"src": "5367:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 637,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "5367:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 640,
												"indexed": false,
												"mutability": "mutable",
												"name": "feeProtocol1Old",
												"nameLocation": "5396:15:5",
												"nodeType": "VariableDeclaration",
												"scope": 646,
												"src": "5390:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 639,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "5390:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 642,
												"indexed": false,
												"mutability": "mutable",
												"name": "feeProtocol0New",
												"nameLocation": "5419:15:5",
												"nodeType": "VariableDeclaration",
												"scope": 646,
												"src": "5413:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 641,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "5413:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 644,
												"indexed": false,
												"mutability": "mutable",
												"name": "feeProtocol1New",
												"nameLocation": "5442:15:5",
												"nodeType": "VariableDeclaration",
												"scope": 646,
												"src": "5436:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 643,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "5436:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5366:92:5"
									},
									"src": "5346:113:5"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 647,
										"nodeType": "StructuredDocumentation",
										"src": "5465:384:5",
										"text": "@notice Emitted when the collected protocol fees are withdrawn by the factory owner\n @param sender The address that collects the protocol fees\n @param recipient The address that receives the collected protocol fees\n @param amount0 The amount of token0 protocol fees that is withdrawn\n @param amount0 The amount of token1 protocol fees that is withdrawn"
									},
									"eventSelector": "596b573906218d3411850b26a6b437d6c4522fdb43d2d2386263f86d50b8b151",
									"id": 657,
									"name": "CollectProtocol",
									"nameLocation": "5860:15:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 656,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 649,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5892:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 657,
												"src": "5876:22:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 648,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5876:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 651,
												"indexed": true,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "5916:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 657,
												"src": "5900:25:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 650,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5900:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 653,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "5935:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 657,
												"src": "5927:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 652,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "5927:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 655,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "5952:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 657,
												"src": "5944:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 654,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "5944:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5875:85:5"
									},
									"src": "5854:107:5"
								}
							],
							"scope": 659,
							"src": "159:5804:5",
							"usedErrors": []
						}
					],
					"src": "45:5919:5"
				},
				"id": 5
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol": {
				"ast": {
					"absolutePath": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol",
					"exportedSymbols": {
						"IUniswapV3PoolImmutables": [
							698
						]
					},
					"id": 699,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 660,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUniswapV3PoolImmutables",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 661,
								"nodeType": "StructuredDocumentation",
								"src": "71:153:6",
								"text": "@title Pool state that never changes\n @notice These parameters are fixed for a pool forever, i.e., the methods will always return the same values"
							},
							"fullyImplemented": false,
							"id": 698,
							"linearizedBaseContracts": [
								698
							],
							"name": "IUniswapV3PoolImmutables",
							"nameLocation": "234:24:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 662,
										"nodeType": "StructuredDocumentation",
										"src": "265:138:6",
										"text": "@notice The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface\n @return The contract address"
									},
									"functionSelector": "c45a0155",
									"id": 667,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "factory",
									"nameLocation": "417:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 663,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "424:2:6"
									},
									"returnParameters": {
										"id": 666,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 665,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 667,
												"src": "450:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 664,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "450:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "449:9:6"
									},
									"scope": 698,
									"src": "408:51:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 668,
										"nodeType": "StructuredDocumentation",
										"src": "465:113:6",
										"text": "@notice The first of the two tokens of the pool, sorted by address\n @return The token contract address"
									},
									"functionSelector": "0dfe1681",
									"id": 673,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "token0",
									"nameLocation": "592:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 669,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "598:2:6"
									},
									"returnParameters": {
										"id": 672,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 671,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 673,
												"src": "624:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 670,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "624:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "623:9:6"
									},
									"scope": 698,
									"src": "583:50:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 674,
										"nodeType": "StructuredDocumentation",
										"src": "639:114:6",
										"text": "@notice The second of the two tokens of the pool, sorted by address\n @return The token contract address"
									},
									"functionSelector": "d21220a7",
									"id": 679,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "token1",
									"nameLocation": "767:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 675,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "773:2:6"
									},
									"returnParameters": {
										"id": 678,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 677,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 679,
												"src": "799:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 676,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "799:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "798:9:6"
									},
									"scope": 698,
									"src": "758:50:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 680,
										"nodeType": "StructuredDocumentation",
										"src": "814:84:6",
										"text": "@notice The pool's fee in hundredths of a bip, i.e. 1e-6\n @return The fee"
									},
									"functionSelector": "ddca3f43",
									"id": 685,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "fee",
									"nameLocation": "912:3:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 681,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "915:2:6"
									},
									"returnParameters": {
										"id": 684,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 683,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 685,
												"src": "941:6:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 682,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "941:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "940:8:6"
									},
									"scope": 698,
									"src": "903:46:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 686,
										"nodeType": "StructuredDocumentation",
										"src": "955:358:6",
										"text": "@notice The pool tick spacing\n @dev Ticks can only be used at multiples of this value, minimum of 1 and always positive\n e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ...\n This value is an int24 to avoid casting even though it is always positive.\n @return The tick spacing"
									},
									"functionSelector": "d0c93a7c",
									"id": 691,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tickSpacing",
									"nameLocation": "1327:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 687,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1338:2:6"
									},
									"returnParameters": {
										"id": 690,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 689,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 691,
												"src": "1364:5:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 688,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1364:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1363:7:6"
									},
									"scope": 698,
									"src": "1318:53:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 692,
										"nodeType": "StructuredDocumentation",
										"src": "1377:363:6",
										"text": "@notice The maximum amount of position liquidity that can use any tick in the range\n @dev This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and\n also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool\n @return The max amount of liquidity per tick"
									},
									"functionSelector": "70cf754a",
									"id": 697,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "maxLiquidityPerTick",
									"nameLocation": "1754:19:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 693,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1773:2:6"
									},
									"returnParameters": {
										"id": 696,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 695,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 697,
												"src": "1799:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 694,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1799:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1798:9:6"
									},
									"scope": 698,
									"src": "1745:63:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 699,
							"src": "224:1586:6",
							"usedErrors": []
						}
					],
					"src": "45:1766:6"
				},
				"id": 6
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol": {
				"ast": {
					"absolutePath": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol",
					"exportedSymbols": {
						"IUniswapV3PoolOwnerActions": [
							724
						]
					},
					"id": 725,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 700,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUniswapV3PoolOwnerActions",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 701,
								"nodeType": "StructuredDocumentation",
								"src": "71:116:7",
								"text": "@title Permissioned pool actions\n @notice Contains pool methods that may only be called by the factory owner"
							},
							"fullyImplemented": false,
							"id": 724,
							"linearizedBaseContracts": [
								724
							],
							"name": "IUniswapV3PoolOwnerActions",
							"nameLocation": "197:26:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 702,
										"nodeType": "StructuredDocumentation",
										"src": "230:205:7",
										"text": "@notice Set the denominator of the protocol's % share of the fees\n @param feeProtocol0 new protocol fee for token0 of the pool\n @param feeProtocol1 new protocol fee for token1 of the pool"
									},
									"functionSelector": "8206a4d1",
									"id": 709,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setFeeProtocol",
									"nameLocation": "449:14:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 707,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 704,
												"mutability": "mutable",
												"name": "feeProtocol0",
												"nameLocation": "470:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 709,
												"src": "464:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 703,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "464:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 706,
												"mutability": "mutable",
												"name": "feeProtocol1",
												"nameLocation": "490:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 709,
												"src": "484:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 705,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "484:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "463:40:7"
									},
									"returnParameters": {
										"id": 708,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "512:0:7"
									},
									"scope": 724,
									"src": "440:73:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 710,
										"nodeType": "StructuredDocumentation",
										"src": "519:483:7",
										"text": "@notice Collect the protocol fee accrued to the pool\n @param recipient The address to which collected protocol fees should be sent\n @param amount0Requested The maximum amount of token0 to send, can be 0 to collect fees in only token1\n @param amount1Requested The maximum amount of token1 to send, can be 0 to collect fees in only token0\n @return amount0 The protocol fee collected in token0\n @return amount1 The protocol fee collected in token1"
									},
									"functionSelector": "85b66729",
									"id": 723,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "collectProtocol",
									"nameLocation": "1016:15:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 717,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 712,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1049:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 723,
												"src": "1041:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 711,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1041:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 714,
												"mutability": "mutable",
												"name": "amount0Requested",
												"nameLocation": "1076:16:7",
												"nodeType": "VariableDeclaration",
												"scope": 723,
												"src": "1068:24:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 713,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1068:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 716,
												"mutability": "mutable",
												"name": "amount1Requested",
												"nameLocation": "1110:16:7",
												"nodeType": "VariableDeclaration",
												"scope": 723,
												"src": "1102:24:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 715,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1102:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1031:101:7"
									},
									"returnParameters": {
										"id": 722,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 719,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "1159:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 723,
												"src": "1151:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 718,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1151:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 721,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "1176:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 723,
												"src": "1168:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 720,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1168:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1150:34:7"
									},
									"scope": 724,
									"src": "1007:178:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 725,
							"src": "187:1000:7",
							"usedErrors": []
						}
					],
					"src": "45:1143:7"
				},
				"id": 7
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol": {
				"ast": {
					"absolutePath": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol",
					"exportedSymbols": {
						"IUniswapV3PoolState": [
							832
						]
					},
					"id": 833,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 726,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IUniswapV3PoolState",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 727,
								"nodeType": "StructuredDocumentation",
								"src": "71:169:8",
								"text": "@title Pool state that can change\n @notice These methods compose the pool's state, and can change with any frequency including multiple times\n per transaction"
							},
							"fullyImplemented": false,
							"id": 832,
							"linearizedBaseContracts": [
								832
							],
							"name": "IUniswapV3PoolState",
							"nameLocation": "250:19:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 728,
										"nodeType": "StructuredDocumentation",
										"src": "276:1140:8",
										"text": "@notice The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas\n when accessed externally.\n @return sqrtPriceX96 The current price of the pool as a sqrt(token1/token0) Q64.96 value\n tick The current tick of the pool, i.e. according to the last tick transition that was run.\n This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick\n boundary.\n observationIndex The index of the last oracle observation that was written,\n observationCardinality The current maximum number of observations stored in the pool,\n observationCardinalityNext The next maximum number of observations, to be updated when the observation.\n feeProtocol The protocol fee for both tokens of the pool.\n Encoded as two 4 bit values, where the protocol fee of token1 is shifted 4 bits and the protocol fee of token0\n is the lower 4 bits. Used as the denominator of a fraction of the swap fee, e.g. 4 means 1/4th of the swap fee.\n unlocked Whether the pool is currently locked to reentrancy"
									},
									"functionSelector": "3850c7bd",
									"id": 745,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "slot0",
									"nameLocation": "1430:5:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 729,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1435:2:8"
									},
									"returnParameters": {
										"id": 744,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 731,
												"mutability": "mutable",
												"name": "sqrtPriceX96",
												"nameLocation": "1506:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 745,
												"src": "1498:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 730,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "1498:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 733,
												"mutability": "mutable",
												"name": "tick",
												"nameLocation": "1538:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 745,
												"src": "1532:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 732,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1532:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 735,
												"mutability": "mutable",
												"name": "observationIndex",
												"nameLocation": "1563:16:8",
												"nodeType": "VariableDeclaration",
												"scope": 745,
												"src": "1556:23:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 734,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "1556:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 737,
												"mutability": "mutable",
												"name": "observationCardinality",
												"nameLocation": "1600:22:8",
												"nodeType": "VariableDeclaration",
												"scope": 745,
												"src": "1593:29:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 736,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "1593:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 739,
												"mutability": "mutable",
												"name": "observationCardinalityNext",
												"nameLocation": "1643:26:8",
												"nodeType": "VariableDeclaration",
												"scope": 745,
												"src": "1636:33:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 738,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "1636:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 741,
												"mutability": "mutable",
												"name": "feeProtocol",
												"nameLocation": "1689:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 745,
												"src": "1683:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 740,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1683:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 743,
												"mutability": "mutable",
												"name": "unlocked",
												"nameLocation": "1719:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 745,
												"src": "1714:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 742,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1714:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1484:253:8"
									},
									"scope": 832,
									"src": "1421:317:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 746,
										"nodeType": "StructuredDocumentation",
										"src": "1744:168:8",
										"text": "@notice The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool\n @dev This value can overflow the uint256"
									},
									"functionSelector": "f3058399",
									"id": 751,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "feeGrowthGlobal0X128",
									"nameLocation": "1926:20:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 747,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1946:2:8"
									},
									"returnParameters": {
										"id": 750,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 749,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 751,
												"src": "1972:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 748,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1972:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1971:9:8"
									},
									"scope": 832,
									"src": "1917:64:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 752,
										"nodeType": "StructuredDocumentation",
										"src": "1987:168:8",
										"text": "@notice The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool\n @dev This value can overflow the uint256"
									},
									"functionSelector": "46141319",
									"id": 757,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "feeGrowthGlobal1X128",
									"nameLocation": "2169:20:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 753,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2189:2:8"
									},
									"returnParameters": {
										"id": 756,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 755,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 757,
												"src": "2215:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 754,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2215:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2214:9:8"
									},
									"scope": 832,
									"src": "2160:64:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 758,
										"nodeType": "StructuredDocumentation",
										"src": "2230:147:8",
										"text": "@notice The amounts of token0 and token1 that are owed to the protocol\n @dev Protocol fees will never exceed uint128 max in either token"
									},
									"functionSelector": "1ad8b03b",
									"id": 765,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "protocolFees",
									"nameLocation": "2391:12:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2403:2:8"
									},
									"returnParameters": {
										"id": 764,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 761,
												"mutability": "mutable",
												"name": "token0",
												"nameLocation": "2437:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 765,
												"src": "2429:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 760,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2429:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 763,
												"mutability": "mutable",
												"name": "token1",
												"nameLocation": "2453:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 765,
												"src": "2445:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 762,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2445:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2428:32:8"
									},
									"scope": 832,
									"src": "2382:79:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 766,
										"nodeType": "StructuredDocumentation",
										"src": "2467:150:8",
										"text": "@notice The currently in range liquidity available to the pool\n @dev This value has no relationship to the total liquidity across all ticks"
									},
									"functionSelector": "1a686502",
									"id": 771,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "liquidity",
									"nameLocation": "2631:9:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 767,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2640:2:8"
									},
									"returnParameters": {
										"id": 770,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 769,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 771,
												"src": "2666:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 768,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2666:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2665:9:8"
									},
									"scope": 832,
									"src": "2622:53:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 772,
										"nodeType": "StructuredDocumentation",
										"src": "2681:1244:8",
										"text": "@notice Look up information about a specific tick in the pool\n @param tick The tick to look up\n @return liquidityGross the total amount of position liquidity that uses the pool either as tick lower or\n tick upper,\n liquidityNet how much liquidity changes when the pool price crosses the tick,\n feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0,\n feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1,\n tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick\n secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick,\n secondsOutside the seconds spent on the other side of the tick from the current tick,\n initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false.\n Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0.\n In addition, these values are only relative and must be used only in comparison to previous snapshots for\n a specific position."
									},
									"functionSelector": "f30dba93",
									"id": 793,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ticks",
									"nameLocation": "3939:5:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 775,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 774,
												"mutability": "mutable",
												"name": "tick",
												"nameLocation": "3951:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 793,
												"src": "3945:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 773,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "3945:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3944:12:8"
									},
									"returnParameters": {
										"id": 792,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 777,
												"mutability": "mutable",
												"name": "liquidityGross",
												"nameLocation": "4025:14:8",
												"nodeType": "VariableDeclaration",
												"scope": 793,
												"src": "4017:22:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 776,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "4017:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 779,
												"mutability": "mutable",
												"name": "liquidityNet",
												"nameLocation": "4060:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 793,
												"src": "4053:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int128",
													"typeString": "int128"
												},
												"typeName": {
													"id": 778,
													"name": "int128",
													"nodeType": "ElementaryTypeName",
													"src": "4053:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 781,
												"mutability": "mutable",
												"name": "feeGrowthOutside0X128",
												"nameLocation": "4094:21:8",
												"nodeType": "VariableDeclaration",
												"scope": 793,
												"src": "4086:29:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 780,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4086:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 783,
												"mutability": "mutable",
												"name": "feeGrowthOutside1X128",
												"nameLocation": "4137:21:8",
												"nodeType": "VariableDeclaration",
												"scope": 793,
												"src": "4129:29:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 782,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4129:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 785,
												"mutability": "mutable",
												"name": "tickCumulativeOutside",
												"nameLocation": "4178:21:8",
												"nodeType": "VariableDeclaration",
												"scope": 793,
												"src": "4172:27:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int56",
													"typeString": "int56"
												},
												"typeName": {
													"id": 784,
													"name": "int56",
													"nodeType": "ElementaryTypeName",
													"src": "4172:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int56",
														"typeString": "int56"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 787,
												"mutability": "mutable",
												"name": "secondsPerLiquidityOutsideX128",
												"nameLocation": "4221:30:8",
												"nodeType": "VariableDeclaration",
												"scope": 793,
												"src": "4213:38:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 786,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "4213:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 789,
												"mutability": "mutable",
												"name": "secondsOutside",
												"nameLocation": "4272:14:8",
												"nodeType": "VariableDeclaration",
												"scope": 793,
												"src": "4265:21:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 788,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "4265:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 791,
												"mutability": "mutable",
												"name": "initialized",
												"nameLocation": "4305:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 793,
												"src": "4300:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 790,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4300:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4003:323:8"
									},
									"scope": 832,
									"src": "3930:397:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 794,
										"nodeType": "StructuredDocumentation",
										"src": "4333:99:8",
										"text": "@notice Returns 256 packed tick initialized boolean values. See TickBitmap for more information"
									},
									"functionSelector": "5339c296",
									"id": 801,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tickBitmap",
									"nameLocation": "4446:10:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 797,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 796,
												"mutability": "mutable",
												"name": "wordPosition",
												"nameLocation": "4463:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 801,
												"src": "4457:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int16",
													"typeString": "int16"
												},
												"typeName": {
													"id": 795,
													"name": "int16",
													"nodeType": "ElementaryTypeName",
													"src": "4457:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int16",
														"typeString": "int16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4456:20:8"
									},
									"returnParameters": {
										"id": 800,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 799,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 801,
												"src": "4500:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 798,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4500:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4499:9:8"
									},
									"scope": 832,
									"src": "4437:72:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 802,
										"nodeType": "StructuredDocumentation",
										"src": "4515:700:8",
										"text": "@notice Returns the information about a position by the position's key\n @param key The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper\n @return _liquidity The amount of liquidity in the position,\n Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke,\n Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke,\n Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke,\n Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke"
									},
									"functionSelector": "514ea4bf",
									"id": 817,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "positions",
									"nameLocation": "5229:9:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 805,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 804,
												"mutability": "mutable",
												"name": "key",
												"nameLocation": "5247:3:8",
												"nodeType": "VariableDeclaration",
												"scope": 817,
												"src": "5239:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 803,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5239:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5238:13:8"
									},
									"returnParameters": {
										"id": 816,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 807,
												"mutability": "mutable",
												"name": "_liquidity",
												"nameLocation": "5320:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 817,
												"src": "5312:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 806,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "5312:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 809,
												"mutability": "mutable",
												"name": "feeGrowthInside0LastX128",
												"nameLocation": "5352:24:8",
												"nodeType": "VariableDeclaration",
												"scope": 817,
												"src": "5344:32:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 808,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5344:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 811,
												"mutability": "mutable",
												"name": "feeGrowthInside1LastX128",
												"nameLocation": "5398:24:8",
												"nodeType": "VariableDeclaration",
												"scope": 817,
												"src": "5390:32:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 810,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5390:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 813,
												"mutability": "mutable",
												"name": "tokensOwed0",
												"nameLocation": "5444:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 817,
												"src": "5436:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 812,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "5436:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 815,
												"mutability": "mutable",
												"name": "tokensOwed1",
												"nameLocation": "5477:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 817,
												"src": "5469:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 814,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "5469:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5298:200:8"
									},
									"scope": 832,
									"src": "5220:279:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 818,
										"nodeType": "StructuredDocumentation",
										"src": "5505:749:8",
										"text": "@notice Returns data about a specific observation index\n @param index The element of the observations array to fetch\n @dev You most likely want to use #observe() instead of this method to get an observation as of some amount of time\n ago, rather than at a specific index in the array.\n @return blockTimestamp The timestamp of the observation,\n Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp,\n Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp,\n Returns initialized whether the observation has been initialized and the values are safe to use"
									},
									"functionSelector": "252c09d7",
									"id": 831,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "observations",
									"nameLocation": "6268:12:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 821,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 820,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "6289:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 831,
												"src": "6281:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 819,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6281:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6280:15:8"
									},
									"returnParameters": {
										"id": 830,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 823,
												"mutability": "mutable",
												"name": "blockTimestamp",
												"nameLocation": "6363:14:8",
												"nodeType": "VariableDeclaration",
												"scope": 831,
												"src": "6356:21:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 822,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "6356:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 825,
												"mutability": "mutable",
												"name": "tickCumulative",
												"nameLocation": "6397:14:8",
												"nodeType": "VariableDeclaration",
												"scope": 831,
												"src": "6391:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int56",
													"typeString": "int56"
												},
												"typeName": {
													"id": 824,
													"name": "int56",
													"nodeType": "ElementaryTypeName",
													"src": "6391:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int56",
														"typeString": "int56"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 827,
												"mutability": "mutable",
												"name": "secondsPerLiquidityCumulativeX128",
												"nameLocation": "6433:33:8",
												"nodeType": "VariableDeclaration",
												"scope": 831,
												"src": "6425:41:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 826,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "6425:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 829,
												"mutability": "mutable",
												"name": "initialized",
												"nameLocation": "6485:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 831,
												"src": "6480:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 828,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6480:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6342:164:8"
									},
									"scope": 832,
									"src": "6259:248:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 833,
							"src": "240:6269:8",
							"usedErrors": []
						}
					],
					"src": "45:6465:8"
				},
				"id": 8
			},
			"contracts/PriceAggregator.sol": {
				"ast": {
					"absolutePath": "contracts/PriceAggregator.sol",
					"exportedSymbols": {
						"IERC20": [
							1073
						],
						"IUniswapV2Router01": [
							307
						],
						"IUniswapV3Factory": [
							390
						],
						"IUniswapV3Pool": [
							412
						],
						"IUniswapV3PoolActions": [
							508
						],
						"IUniswapV3PoolDerivedState": [
							539
						],
						"IUniswapV3PoolEvents": [
							658
						],
						"IUniswapV3PoolImmutables": [
							698
						],
						"IUniswapV3PoolOwnerActions": [
							724
						],
						"IUniswapV3PoolState": [
							832
						],
						"PriceAggregator": [
							981
						],
						"UniswapV2": [
							1136
						],
						"UniswapV3": [
							1184
						]
					},
					"id": 982,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 834,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:9"
						},
						{
							"absolutePath": "contracts/libraries/UniswapV2.sol",
							"file": "./libraries/UniswapV2.sol",
							"id": 835,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 982,
							"sourceUnit": 1137,
							"src": "58:35:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/libraries/UniswapV3.sol",
							"file": "./libraries/UniswapV3.sol",
							"id": 836,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 982,
							"sourceUnit": 1185,
							"src": "94:35:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol",
							"file": "@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol",
							"id": 837,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 982,
							"sourceUnit": 308,
							"src": "130:75:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol",
							"file": "@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol",
							"id": 838,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 982,
							"sourceUnit": 413,
							"src": "206:66:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol",
							"file": "@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol",
							"id": 839,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 982,
							"sourceUnit": 391,
							"src": "273:69:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/interfaces/IERC20.sol",
							"file": "./interfaces/IERC20.sol",
							"id": 840,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 982,
							"sourceUnit": 1074,
							"src": "343:33:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "PriceAggregator",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 981,
							"linearizedBaseContracts": [
								981
							],
							"name": "PriceAggregator",
							"nameLocation": "387:15:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "PriceAggregator.input",
									"id": 849,
									"members": [
										{
											"constant": false,
											"id": 842,
											"mutability": "mutable",
											"name": "t1",
											"nameLocation": "445:2:9",
											"nodeType": "VariableDeclaration",
											"scope": 849,
											"src": "437:10:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 841,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "437:7:9",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 844,
											"mutability": "mutable",
											"name": "t2",
											"nameLocation": "465:2:9",
											"nodeType": "VariableDeclaration",
											"scope": 849,
											"src": "457:10:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 843,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "457:7:9",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 846,
											"mutability": "mutable",
											"name": "provider",
											"nameLocation": "485:8:9",
											"nodeType": "VariableDeclaration",
											"scope": 849,
											"src": "477:16:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 845,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "477:7:9",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 848,
											"mutability": "mutable",
											"name": "providerVersion",
											"nameLocation": "509:15:9",
											"nodeType": "VariableDeclaration",
											"scope": 849,
											"src": "503:21:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 847,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "503:5:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "input",
									"nameLocation": "421:5:9",
									"nodeType": "StructDefinition",
									"scope": 981,
									"src": "414:117:9",
									"visibility": "public"
								},
								{
									"canonicalName": "PriceAggregator.output",
									"id": 856,
									"members": [
										{
											"constant": false,
											"id": 851,
											"mutability": "mutable",
											"name": "t1",
											"nameLocation": "569:2:9",
											"nodeType": "VariableDeclaration",
											"scope": 856,
											"src": "561:10:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 850,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "561:7:9",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 853,
											"mutability": "mutable",
											"name": "t2",
											"nameLocation": "589:2:9",
											"nodeType": "VariableDeclaration",
											"scope": 856,
											"src": "581:10:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 852,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "581:7:9",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 855,
											"mutability": "mutable",
											"name": "price",
											"nameLocation": "609:5:9",
											"nodeType": "VariableDeclaration",
											"scope": 856,
											"src": "601:13:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 854,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "601:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "output",
									"nameLocation": "544:6:9",
									"nodeType": "StructDefinition",
									"scope": 981,
									"src": "537:84:9",
									"visibility": "public"
								},
								{
									"body": {
										"id": 979,
										"nodeType": "Block",
										"src": "707:588:9",
										"statements": [
											{
												"assignments": [
													871
												],
												"declarations": [
													{
														"constant": false,
														"id": 871,
														"mutability": "mutable",
														"name": "outputs",
														"nameLocation": "733:7:9",
														"nodeType": "VariableDeclaration",
														"scope": 979,
														"src": "717:23:9",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_output_$856_memory_ptr_$dyn_memory_ptr",
															"typeString": "struct PriceAggregator.output[]"
														},
														"typeName": {
															"baseType": {
																"id": 869,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 868,
																	"name": "output",
																	"nameLocations": [
																		"717:6:9"
																	],
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 856,
																	"src": "717:6:9"
																},
																"referencedDeclaration": 856,
																"src": "717:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_output_$856_storage_ptr",
																	"typeString": "struct PriceAggregator.output"
																}
															},
															"id": 870,
															"nodeType": "ArrayTypeName",
															"src": "717:8:9",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_output_$856_storage_$dyn_storage_ptr",
																"typeString": "struct PriceAggregator.output[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 879,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 876,
																"name": "inputs",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 860,
																"src": "756:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_input_$849_memory_ptr_$dyn_memory_ptr",
																	"typeString": "struct PriceAggregator.input memory[] memory"
																}
															},
															"id": 877,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "763:6:9",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "756:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 875,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "743:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_output_$856_memory_ptr_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (struct PriceAggregator.output memory[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 873,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 872,
																	"name": "output",
																	"nameLocations": [
																		"747:6:9"
																	],
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 856,
																	"src": "747:6:9"
																},
																"referencedDeclaration": 856,
																"src": "747:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_output_$856_storage_ptr",
																	"typeString": "struct PriceAggregator.output"
																}
															},
															"id": 874,
															"nodeType": "ArrayTypeName",
															"src": "747:8:9",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_output_$856_storage_$dyn_storage_ptr",
																"typeString": "struct PriceAggregator.output[]"
															}
														}
													},
													"id": 878,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "743:27:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_output_$856_memory_ptr_$dyn_memory_ptr",
														"typeString": "struct PriceAggregator.output memory[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "717:53:9"
											},
											{
												"body": {
													"id": 975,
													"nodeType": "Block",
													"src": "813:448:9",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																},
																"id": 896,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"baseExpression": {
																			"id": 891,
																			"name": "inputs",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 860,
																			"src": "827:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_struct$_input_$849_memory_ptr_$dyn_memory_ptr",
																				"typeString": "struct PriceAggregator.input memory[] memory"
																			}
																		},
																		"id": 893,
																		"indexExpression": {
																			"id": 892,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 881,
																			"src": "834:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "827:9:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_input_$849_memory_ptr",
																			"typeString": "struct PriceAggregator.input memory"
																		}
																	},
																	"id": 894,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "837:15:9",
																	"memberName": "providerVersion",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 848,
																	"src": "827:25:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 895,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "856:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "827:30:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	},
																	"id": 937,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 932,
																				"name": "inputs",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 860,
																				"src": "1047:6:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_struct$_input_$849_memory_ptr_$dyn_memory_ptr",
																					"typeString": "struct PriceAggregator.input memory[] memory"
																				}
																			},
																			"id": 934,
																			"indexExpression": {
																				"id": 933,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 881,
																				"src": "1054:1:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "1047:9:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_input_$849_memory_ptr",
																				"typeString": "struct PriceAggregator.input memory"
																			}
																		},
																		"id": 935,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1057:15:9",
																		"memberName": "providerVersion",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 848,
																		"src": "1047:25:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "33",
																		"id": 936,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1076:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_3_by_1",
																			"typeString": "int_const 3"
																		},
																		"value": "3"
																	},
																	"src": "1047:30:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"id": 973,
																"nodeType": "IfStatement",
																"src": "1043:209:9",
																"trueBody": {
																	"id": 972,
																	"nodeType": "Block",
																	"src": "1079:173:9",
																	"statements": [
																		{
																			"assignments": [
																				939
																			],
																			"declarations": [
																				{
																					"constant": false,
																					"id": 939,
																					"mutability": "mutable",
																					"name": "price",
																					"nameLocation": "1101:5:9",
																					"nodeType": "VariableDeclaration",
																					"scope": 972,
																					"src": "1093:13:9",
																					"stateVariable": false,
																					"storageLocation": "default",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"typeName": {
																						"id": 938,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "1093:7:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"visibility": "internal"
																				}
																			],
																			"id": 955,
																			"initialValue": {
																				"arguments": [
																					{
																						"expression": {
																							"baseExpression": {
																								"id": 942,
																								"name": "inputs",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 860,
																								"src": "1129:6:9",
																								"typeDescriptions": {
																									"typeIdentifier": "t_array$_t_struct$_input_$849_memory_ptr_$dyn_memory_ptr",
																									"typeString": "struct PriceAggregator.input memory[] memory"
																								}
																							},
																							"id": 944,
																							"indexExpression": {
																								"id": 943,
																								"name": "i",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 881,
																								"src": "1136:1:9",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "1129:9:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_input_$849_memory_ptr",
																								"typeString": "struct PriceAggregator.input memory"
																							}
																						},
																						"id": 945,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "1139:8:9",
																						"memberName": "provider",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 846,
																						"src": "1129:18:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"expression": {
																							"baseExpression": {
																								"id": 946,
																								"name": "inputs",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 860,
																								"src": "1148:6:9",
																								"typeDescriptions": {
																									"typeIdentifier": "t_array$_t_struct$_input_$849_memory_ptr_$dyn_memory_ptr",
																									"typeString": "struct PriceAggregator.input memory[] memory"
																								}
																							},
																							"id": 948,
																							"indexExpression": {
																								"id": 947,
																								"name": "i",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 881,
																								"src": "1155:1:9",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "1148:9:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_input_$849_memory_ptr",
																								"typeString": "struct PriceAggregator.input memory"
																							}
																						},
																						"id": 949,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "1158:2:9",
																						"memberName": "t1",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 842,
																						"src": "1148:12:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"expression": {
																							"baseExpression": {
																								"id": 950,
																								"name": "inputs",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 860,
																								"src": "1161:6:9",
																								"typeDescriptions": {
																									"typeIdentifier": "t_array$_t_struct$_input_$849_memory_ptr_$dyn_memory_ptr",
																									"typeString": "struct PriceAggregator.input memory[] memory"
																								}
																							},
																							"id": 952,
																							"indexExpression": {
																								"id": 951,
																								"name": "i",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 881,
																								"src": "1168:1:9",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "1161:9:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_input_$849_memory_ptr",
																								"typeString": "struct PriceAggregator.input memory"
																							}
																						},
																						"id": 953,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "1171:2:9",
																						"memberName": "t2",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 844,
																						"src": "1161:12:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						},
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						},
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					],
																					"expression": {
																						"id": 940,
																						"name": "UniswapV3",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1184,
																						"src": "1109:9:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_contract$_UniswapV3_$1184_$",
																							"typeString": "type(library UniswapV3)"
																						}
																					},
																					"id": 941,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "1119:9:9",
																					"memberName": "sqrtPrice",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1183,
																					"src": "1109:19:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_delegatecall_view$_t_address_$_t_address_$_t_address_$returns$_t_uint256_$",
																						"typeString": "function (address,address,address) view returns (uint256)"
																					}
																				},
																				"id": 954,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "1109:65:9",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "VariableDeclarationStatement",
																			"src": "1093:81:9"
																		},
																		{
																			"expression": {
																				"id": 970,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftHandSide": {
																					"baseExpression": {
																						"id": 956,
																						"name": "outputs",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 871,
																						"src": "1188:7:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_struct$_output_$856_memory_ptr_$dyn_memory_ptr",
																							"typeString": "struct PriceAggregator.output memory[] memory"
																						}
																					},
																					"id": 958,
																					"indexExpression": {
																						"id": 957,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 881,
																						"src": "1196:1:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": true,
																					"nodeType": "IndexAccess",
																					"src": "1188:10:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_output_$856_memory_ptr",
																						"typeString": "struct PriceAggregator.output memory"
																					}
																				},
																				"nodeType": "Assignment",
																				"operator": "=",
																				"rightHandSide": {
																					"arguments": [
																						{
																							"expression": {
																								"baseExpression": {
																									"id": 960,
																									"name": "inputs",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 860,
																									"src": "1208:6:9",
																									"typeDescriptions": {
																										"typeIdentifier": "t_array$_t_struct$_input_$849_memory_ptr_$dyn_memory_ptr",
																										"typeString": "struct PriceAggregator.input memory[] memory"
																									}
																								},
																								"id": 962,
																								"indexExpression": {
																									"id": 961,
																									"name": "i",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 881,
																									"src": "1215:1:9",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "IndexAccess",
																								"src": "1208:9:9",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_input_$849_memory_ptr",
																									"typeString": "struct PriceAggregator.input memory"
																								}
																							},
																							"id": 963,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "1218:2:9",
																							"memberName": "t1",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 842,
																							"src": "1208:12:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						{
																							"expression": {
																								"baseExpression": {
																									"id": 964,
																									"name": "inputs",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 860,
																									"src": "1221:6:9",
																									"typeDescriptions": {
																										"typeIdentifier": "t_array$_t_struct$_input_$849_memory_ptr_$dyn_memory_ptr",
																										"typeString": "struct PriceAggregator.input memory[] memory"
																									}
																								},
																								"id": 966,
																								"indexExpression": {
																									"id": 965,
																									"name": "i",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 881,
																									"src": "1228:1:9",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "IndexAccess",
																								"src": "1221:9:9",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_input_$849_memory_ptr",
																									"typeString": "struct PriceAggregator.input memory"
																								}
																							},
																							"id": 967,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "1231:2:9",
																							"memberName": "t2",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 844,
																							"src": "1221:12:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						{
																							"id": 968,
																							"name": "price",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 939,
																							"src": "1234:5:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							},
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							},
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"id": 959,
																						"name": "output",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 856,
																						"src": "1201:6:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_struct$_output_$856_storage_ptr_$",
																							"typeString": "type(struct PriceAggregator.output storage pointer)"
																						}
																					},
																					"id": 969,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "structConstructorCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "1201:39:9",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_output_$856_memory_ptr",
																						"typeString": "struct PriceAggregator.output memory"
																					}
																				},
																				"src": "1188:52:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_output_$856_memory_ptr",
																					"typeString": "struct PriceAggregator.output memory"
																				}
																			},
																			"id": 971,
																			"nodeType": "ExpressionStatement",
																			"src": "1188:52:9"
																		}
																	]
																}
															},
															"id": 974,
															"nodeType": "IfStatement",
															"src": "823:429:9",
															"trueBody": {
																"id": 931,
																"nodeType": "Block",
																"src": "859:178:9",
																"statements": [
																	{
																		"assignments": [
																			898
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 898,
																				"mutability": "mutable",
																				"name": "price",
																				"nameLocation": "881:5:9",
																				"nodeType": "VariableDeclaration",
																				"scope": 931,
																				"src": "873:13:9",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 897,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "873:7:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 914,
																		"initialValue": {
																			"arguments": [
																				{
																					"expression": {
																						"baseExpression": {
																							"id": 901,
																							"name": "inputs",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 860,
																							"src": "905:6:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_array$_t_struct$_input_$849_memory_ptr_$dyn_memory_ptr",
																								"typeString": "struct PriceAggregator.input memory[] memory"
																							}
																						},
																						"id": 903,
																						"indexExpression": {
																							"id": 902,
																							"name": "i",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 881,
																							"src": "912:1:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "905:9:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_input_$849_memory_ptr",
																							"typeString": "struct PriceAggregator.input memory"
																						}
																					},
																					"id": 904,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "915:8:9",
																					"memberName": "provider",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 846,
																					"src": "905:18:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"expression": {
																						"baseExpression": {
																							"id": 905,
																							"name": "inputs",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 860,
																							"src": "924:6:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_array$_t_struct$_input_$849_memory_ptr_$dyn_memory_ptr",
																								"typeString": "struct PriceAggregator.input memory[] memory"
																							}
																						},
																						"id": 907,
																						"indexExpression": {
																							"id": 906,
																							"name": "i",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 881,
																							"src": "931:1:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "924:9:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_input_$849_memory_ptr",
																							"typeString": "struct PriceAggregator.input memory"
																						}
																					},
																					"id": 908,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "934:2:9",
																					"memberName": "t1",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 842,
																					"src": "924:12:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"expression": {
																						"baseExpression": {
																							"id": 909,
																							"name": "inputs",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 860,
																							"src": "937:6:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_array$_t_struct$_input_$849_memory_ptr_$dyn_memory_ptr",
																								"typeString": "struct PriceAggregator.input memory[] memory"
																							}
																						},
																						"id": 911,
																						"indexExpression": {
																							"id": 910,
																							"name": "i",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 881,
																							"src": "944:1:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "937:9:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_input_$849_memory_ptr",
																							"typeString": "struct PriceAggregator.input memory"
																						}
																					},
																					"id": 912,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "947:2:9",
																					"memberName": "t2",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 844,
																					"src": "937:12:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"id": 899,
																					"name": "UniswapV2",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1136,
																					"src": "889:9:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_UniswapV2_$1136_$",
																						"typeString": "type(library UniswapV2)"
																					}
																				},
																				"id": 900,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "899:5:9",
																				"memberName": "Price",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1135,
																				"src": "889:15:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_delegatecall_view$_t_address_$_t_address_$_t_address_$returns$_t_uint256_$",
																					"typeString": "function (address,address,address) view returns (uint256)"
																				}
																			},
																			"id": 913,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "889:61:9",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "873:77:9"
																	},
																	{
																		"expression": {
																			"id": 929,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"id": 915,
																					"name": "outputs",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 871,
																					"src": "964:7:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_struct$_output_$856_memory_ptr_$dyn_memory_ptr",
																						"typeString": "struct PriceAggregator.output memory[] memory"
																					}
																				},
																				"id": 917,
																				"indexExpression": {
																					"id": 916,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 881,
																					"src": "972:1:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "964:10:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_output_$856_memory_ptr",
																					"typeString": "struct PriceAggregator.output memory"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"arguments": [
																					{
																						"expression": {
																							"baseExpression": {
																								"id": 919,
																								"name": "inputs",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 860,
																								"src": "984:6:9",
																								"typeDescriptions": {
																									"typeIdentifier": "t_array$_t_struct$_input_$849_memory_ptr_$dyn_memory_ptr",
																									"typeString": "struct PriceAggregator.input memory[] memory"
																								}
																							},
																							"id": 921,
																							"indexExpression": {
																								"id": 920,
																								"name": "i",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 881,
																								"src": "991:1:9",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "984:9:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_input_$849_memory_ptr",
																								"typeString": "struct PriceAggregator.input memory"
																							}
																						},
																						"id": 922,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "994:2:9",
																						"memberName": "t1",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 842,
																						"src": "984:12:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"expression": {
																							"baseExpression": {
																								"id": 923,
																								"name": "inputs",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 860,
																								"src": "997:6:9",
																								"typeDescriptions": {
																									"typeIdentifier": "t_array$_t_struct$_input_$849_memory_ptr_$dyn_memory_ptr",
																									"typeString": "struct PriceAggregator.input memory[] memory"
																								}
																							},
																							"id": 925,
																							"indexExpression": {
																								"id": 924,
																								"name": "i",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 881,
																								"src": "1004:1:9",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "997:9:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_input_$849_memory_ptr",
																								"typeString": "struct PriceAggregator.input memory"
																							}
																						},
																						"id": 926,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "1007:2:9",
																						"memberName": "t2",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 844,
																						"src": "997:12:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"id": 927,
																						"name": "price",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 898,
																						"src": "1010:5:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						},
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						},
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"id": 918,
																					"name": "output",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 856,
																					"src": "977:6:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_struct$_output_$856_storage_ptr_$",
																						"typeString": "type(struct PriceAggregator.output storage pointer)"
																					}
																				},
																				"id": 928,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "structConstructorCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "977:39:9",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_output_$856_memory_ptr",
																					"typeString": "struct PriceAggregator.output memory"
																				}
																			},
																			"src": "964:52:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_output_$856_memory_ptr",
																				"typeString": "struct PriceAggregator.output memory"
																			}
																		},
																		"id": 930,
																		"nodeType": "ExpressionStatement",
																		"src": "964:52:9"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 887,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 884,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 881,
														"src": "793:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 885,
															"name": "inputs",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 860,
															"src": "795:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_input_$849_memory_ptr_$dyn_memory_ptr",
																"typeString": "struct PriceAggregator.input memory[] memory"
															}
														},
														"id": 886,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "802:6:9",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "795:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "793:15:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 976,
												"initializationExpression": {
													"assignments": [
														881
													],
													"declarations": [
														{
															"constant": false,
															"id": 881,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "789:1:9",
															"nodeType": "VariableDeclaration",
															"scope": 976,
															"src": "784:6:9",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 880,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "784:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 883,
													"initialValue": {
														"hexValue": "30",
														"id": 882,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "791:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "784:8:9"
												},
												"loopExpression": {
													"expression": {
														"id": 889,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "809:3:9",
														"subExpression": {
															"id": 888,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 881,
															"src": "809:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 890,
													"nodeType": "ExpressionStatement",
													"src": "809:3:9"
												},
												"nodeType": "ForStatement",
												"src": "779:482:9"
											},
											{
												"expression": {
													"id": 977,
													"name": "outputs",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 871,
													"src": "1281:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_output_$856_memory_ptr_$dyn_memory_ptr",
														"typeString": "struct PriceAggregator.output memory[] memory"
													}
												},
												"functionReturnParameters": 866,
												"id": 978,
												"nodeType": "Return",
												"src": "1274:14:9"
											}
										]
									},
									"functionSelector": "ff514fa3",
									"id": 980,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getPrices",
									"nameLocation": "636:9:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 861,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 860,
												"mutability": "mutable",
												"name": "inputs",
												"nameLocation": "661:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 980,
												"src": "646:21:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_input_$849_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct PriceAggregator.input[]"
												},
												"typeName": {
													"baseType": {
														"id": 858,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 857,
															"name": "input",
															"nameLocations": [
																"646:5:9"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 849,
															"src": "646:5:9"
														},
														"referencedDeclaration": 849,
														"src": "646:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_input_$849_storage_ptr",
															"typeString": "struct PriceAggregator.input"
														}
													},
													"id": 859,
													"nodeType": "ArrayTypeName",
													"src": "646:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_input_$849_storage_$dyn_storage_ptr",
														"typeString": "struct PriceAggregator.input[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "645:23:9"
									},
									"returnParameters": {
										"id": 866,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 865,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 980,
												"src": "690:15:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_output_$856_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct PriceAggregator.output[]"
												},
												"typeName": {
													"baseType": {
														"id": 863,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 862,
															"name": "output",
															"nameLocations": [
																"690:6:9"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 856,
															"src": "690:6:9"
														},
														"referencedDeclaration": 856,
														"src": "690:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_output_$856_storage_ptr",
															"typeString": "struct PriceAggregator.output"
														}
													},
													"id": 864,
													"nodeType": "ArrayTypeName",
													"src": "690:8:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_output_$856_storage_$dyn_storage_ptr",
														"typeString": "struct PriceAggregator.output[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "689:17:9"
									},
									"scope": 981,
									"src": "627:668:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 982,
							"src": "378:921:9",
							"usedErrors": []
						}
					],
					"src": "32:1267:9"
				},
				"id": 9
			},
			"contracts/interfaces/IERC20.sol": {
				"ast": {
					"absolutePath": "contracts/interfaces/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							1073
						]
					},
					"id": 1074,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 983,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".6"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:10"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1073,
							"linearizedBaseContracts": [
								1073
							],
							"name": "IERC20",
							"nameLocation": "68:6:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 991,
									"name": "Approval",
									"nameLocation": "87:8:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 990,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 985,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "112:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 991,
												"src": "96:21:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 984,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "96:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 987,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "135:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 991,
												"src": "119:23:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 986,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "119:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 989,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "149:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 991,
												"src": "144:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 988,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "144:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "95:60:10"
									},
									"src": "81:75:10"
								},
								{
									"anonymous": false,
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 999,
									"name": "Transfer",
									"nameLocation": "167:8:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 998,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 993,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "192:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 999,
												"src": "176:20:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 992,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "176:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 995,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "214:2:10",
												"nodeType": "VariableDeclaration",
												"scope": 999,
												"src": "198:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 994,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "198:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 997,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "223:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 999,
												"src": "218:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 996,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "218:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "175:54:10"
									},
									"src": "161:69:10"
								},
								{
									"functionSelector": "06fdde03",
									"id": 1004,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "245:4:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1000,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "249:2:10"
									},
									"returnParameters": {
										"id": 1003,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1002,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1004,
												"src": "275:13:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1001,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "275:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "274:15:10"
									},
									"scope": 1073,
									"src": "236:54:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "95d89b41",
									"id": 1009,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "304:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1005,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "310:2:10"
									},
									"returnParameters": {
										"id": 1008,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1007,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1009,
												"src": "336:13:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1006,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "336:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "335:15:10"
									},
									"scope": 1073,
									"src": "295:56:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "313ce567",
									"id": 1014,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "365:8:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1010,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "373:2:10"
									},
									"returnParameters": {
										"id": 1013,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1012,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1014,
												"src": "399:5:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1011,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "399:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "398:7:10"
									},
									"scope": 1073,
									"src": "356:50:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "18160ddd",
									"id": 1019,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "420:11:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1015,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "431:2:10"
									},
									"returnParameters": {
										"id": 1018,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1017,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1019,
												"src": "457:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1016,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "457:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "456:6:10"
									},
									"scope": 1073,
									"src": "411:52:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "70a08231",
									"id": 1026,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "477:9:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1022,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1021,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "495:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1026,
												"src": "487:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1020,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "487:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "486:15:10"
									},
									"returnParameters": {
										"id": 1025,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1024,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1026,
												"src": "525:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1023,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "525:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "524:6:10"
									},
									"scope": 1073,
									"src": "468:63:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "dd62ed3e",
									"id": 1035,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "545:9:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1031,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1028,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "563:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1035,
												"src": "555:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1027,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "555:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1030,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "578:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1035,
												"src": "570:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1029,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "570:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "554:32:10"
									},
									"returnParameters": {
										"id": 1034,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1033,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1035,
												"src": "610:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1032,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "610:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "609:6:10"
									},
									"scope": 1073,
									"src": "536:80:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "095ea7b3",
									"id": 1044,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "631:7:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1040,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1037,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "647:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1044,
												"src": "639:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1036,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "639:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1039,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "661:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1044,
												"src": "656:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1038,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "656:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "638:29:10"
									},
									"returnParameters": {
										"id": 1043,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1042,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1044,
												"src": "686:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1041,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "686:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "685:6:10"
									},
									"scope": 1073,
									"src": "622:70:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a9059cbb",
									"id": 1053,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "706:8:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1049,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1046,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "723:2:10",
												"nodeType": "VariableDeclaration",
												"scope": 1053,
												"src": "715:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1045,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "715:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1048,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "732:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1053,
												"src": "727:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1047,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "727:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "714:24:10"
									},
									"returnParameters": {
										"id": 1052,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1051,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1053,
												"src": "757:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1050,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "757:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "756:6:10"
									},
									"scope": 1073,
									"src": "697:66:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "23b872dd",
									"id": 1064,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "777:12:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1060,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1055,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "798:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1064,
												"src": "790:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1054,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "790:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1057,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "812:2:10",
												"nodeType": "VariableDeclaration",
												"scope": 1064,
												"src": "804:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1056,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "804:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1059,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "821:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1064,
												"src": "816:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1058,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "816:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "789:38:10"
									},
									"returnParameters": {
										"id": 1063,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1062,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1064,
												"src": "846:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1061,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "846:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "845:6:10"
									},
									"scope": 1073,
									"src": "768:84:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "d0e30db0",
									"id": 1067,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "deposit",
									"nameLocation": "866:7:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1065,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "873:2:10"
									},
									"returnParameters": {
										"id": 1066,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:0:10"
									},
									"scope": 1073,
									"src": "857:36:10",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "2e1a7d4d",
									"id": 1072,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nameLocation": "907:8:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1070,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1069,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1072,
												"src": "916:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1068,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "916:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "915:6:10"
									},
									"returnParameters": {
										"id": 1071,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "930:0:10"
									},
									"scope": 1073,
									"src": "898:33:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1074,
							"src": "58:875:10",
							"usedErrors": []
						}
					],
					"src": "32:901:10"
				},
				"id": 10
			},
			"contracts/libraries/UniswapV2.sol": {
				"ast": {
					"absolutePath": "contracts/libraries/UniswapV2.sol",
					"exportedSymbols": {
						"IERC20": [
							1073
						],
						"IUniswapV2Router01": [
							307
						],
						"UniswapV2": [
							1136
						]
					},
					"id": 1137,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1075,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:11"
						},
						{
							"absolutePath": "contracts/interfaces/IERC20.sol",
							"file": "../interfaces/IERC20.sol",
							"id": 1076,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1137,
							"sourceUnit": 1074,
							"src": "58:34:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol",
							"file": "@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol",
							"id": 1077,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1137,
							"sourceUnit": 308,
							"src": "93:75:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "UniswapV2",
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 1136,
							"linearizedBaseContracts": [
								1136
							],
							"name": "UniswapV2",
							"nameLocation": "178:9:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1134,
										"nodeType": "Block",
										"src": "284:239:11",
										"statements": [
											{
												"assignments": [
													1092
												],
												"declarations": [
													{
														"constant": false,
														"id": 1092,
														"mutability": "mutable",
														"name": "path",
														"nameLocation": "311:4:11",
														"nodeType": "VariableDeclaration",
														"scope": 1134,
														"src": "294:21:11",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
															"typeString": "address[]"
														},
														"typeName": {
															"baseType": {
																"id": 1090,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "294:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1091,
															"nodeType": "ArrayTypeName",
															"src": "294:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																"typeString": "address[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1098,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "32",
															"id": 1096,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "332:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															}
														],
														"id": 1095,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "318:13:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (address[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 1093,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "322:7:11",
																"stateMutability": "nonpayable",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1094,
															"nodeType": "ArrayTypeName",
															"src": "322:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																"typeString": "address[]"
															}
														}
													},
													"id": 1097,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "318:16:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
														"typeString": "address[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "294:40:11"
											},
											{
												"expression": {
													"id": 1103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1099,
															"name": "path",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1092,
															"src": "344:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 1101,
														"indexExpression": {
															"hexValue": "30",
															"id": 1100,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "349:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "344:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1102,
														"name": "tIn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1081,
														"src": "354:3:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "344:13:11",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1104,
												"nodeType": "ExpressionStatement",
												"src": "344:13:11"
											},
											{
												"expression": {
													"id": 1109,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1105,
															"name": "path",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1092,
															"src": "367:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 1107,
														"indexExpression": {
															"hexValue": "31",
															"id": 1106,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "372:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "367:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1108,
														"name": "tOut",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1083,
														"src": "377:4:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "367:14:11",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1110,
												"nodeType": "ExpressionStatement",
												"src": "367:14:11"
											},
											{
												"assignments": [
													1115
												],
												"declarations": [
													{
														"constant": false,
														"id": 1115,
														"mutability": "mutable",
														"name": "amounts",
														"nameLocation": "405:7:11",
														"nodeType": "VariableDeclaration",
														"scope": 1134,
														"src": "391:21:11",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 1113,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "391:4:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1114,
															"nodeType": "ArrayTypeName",
															"src": "391:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1129,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1126,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "3130",
																"id": 1120,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "458:2:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"value": "10"
															},
															"nodeType": "BinaryOperation",
															"operator": "**",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1122,
																				"name": "tIn",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1081,
																				"src": "469:3:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1121,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1073,
																			"src": "462:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$1073_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 1123,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "462:11:11",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$1073",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1124,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "474:8:11",
																	"memberName": "decimals",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1014,
																	"src": "462:20:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
																		"typeString": "function () view external returns (uint8)"
																	}
																},
																"id": 1125,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "462:22:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "458:26:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1127,
															"name": "path",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1092,
															"src": "485:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1117,
																	"name": "provider",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1079,
																	"src": "434:8:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1116,
																"name": "IUniswapV2Router01",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 307,
																"src": "415:18:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IUniswapV2Router01_$307_$",
																	"typeString": "type(contract IUniswapV2Router01)"
																}
															},
															"id": 1118,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "415:28:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IUniswapV2Router01_$307",
																"typeString": "contract IUniswapV2Router01"
															}
														},
														"id": 1119,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "444:13:11",
														"memberName": "getAmountsOut",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 295,
														"src": "415:42:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256,address[] memory) view external returns (uint256[] memory)"
														}
													},
													"id": 1128,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "415:75:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "391:99:11"
											},
											{
												"expression": {
													"baseExpression": {
														"id": 1130,
														"name": "amounts",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1115,
														"src": "506:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[] memory"
														}
													},
													"id": 1132,
													"indexExpression": {
														"hexValue": "31",
														"id": 1131,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "514:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "506:10:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1087,
												"id": 1133,
												"nodeType": "Return",
												"src": "499:17:11"
											}
										]
									},
									"functionSelector": "c361e0b1",
									"id": 1135,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "Price",
									"nameLocation": "203:5:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1084,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1079,
												"mutability": "mutable",
												"name": "provider",
												"nameLocation": "217:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 1135,
												"src": "209:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1078,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "209:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1081,
												"mutability": "mutable",
												"name": "tIn",
												"nameLocation": "235:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 1135,
												"src": "227:11:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1080,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "227:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1083,
												"mutability": "mutable",
												"name": "tOut",
												"nameLocation": "247:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1135,
												"src": "239:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1082,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "239:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "208:44:11"
									},
									"returnParameters": {
										"id": 1087,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1086,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1135,
												"src": "276:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1085,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "276:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "275:9:11"
									},
									"scope": 1136,
									"src": "194:329:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1137,
							"src": "170:356:11",
							"usedErrors": []
						}
					],
					"src": "32:494:11"
				},
				"id": 11
			},
			"contracts/libraries/UniswapV3.sol": {
				"ast": {
					"absolutePath": "contracts/libraries/UniswapV3.sol",
					"exportedSymbols": {
						"IERC20": [
							1073
						],
						"IUniswapV3Factory": [
							390
						],
						"IUniswapV3Pool": [
							412
						],
						"IUniswapV3PoolActions": [
							508
						],
						"IUniswapV3PoolDerivedState": [
							539
						],
						"IUniswapV3PoolEvents": [
							658
						],
						"IUniswapV3PoolImmutables": [
							698
						],
						"IUniswapV3PoolOwnerActions": [
							724
						],
						"IUniswapV3PoolState": [
							832
						],
						"UniswapV3": [
							1184
						]
					},
					"id": 1185,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1138,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".17"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:12"
						},
						{
							"absolutePath": "@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol",
							"file": "@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol",
							"id": 1139,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1185,
							"sourceUnit": 413,
							"src": "58:66:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol",
							"file": "@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol",
							"id": 1140,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1185,
							"sourceUnit": 391,
							"src": "125:69:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/interfaces/IERC20.sol",
							"file": "../interfaces/IERC20.sol",
							"id": 1141,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1185,
							"sourceUnit": 1074,
							"src": "196:34:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "UniswapV3",
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 1184,
							"linearizedBaseContracts": [
								1184
							],
							"name": "UniswapV3",
							"nameLocation": "240:9:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1182,
										"nodeType": "Block",
										"src": "354:241:12",
										"statements": [
											{
												"assignments": [
													1153
												],
												"declarations": [
													{
														"constant": false,
														"id": 1153,
														"mutability": "mutable",
														"name": "pool",
														"nameLocation": "376:4:12",
														"nodeType": "VariableDeclaration",
														"scope": 1182,
														"src": "368:12:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1152,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "368:7:12",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1162,
												"initialValue": {
													"arguments": [
														{
															"id": 1158,
															"name": "tIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1145,
															"src": "419:3:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1159,
															"name": "tOut",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1147,
															"src": "423:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "33303030",
															"id": 1160,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "428:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_3000_by_1",
																"typeString": "int_const 3000"
															},
															"value": "3000"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_3000_by_1",
																"typeString": "int_const 3000"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1155,
																	"name": "provider",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1143,
																	"src": "401:8:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1154,
																"name": "IUniswapV3Factory",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 390,
																"src": "383:17:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IUniswapV3Factory_$390_$",
																	"typeString": "type(contract IUniswapV3Factory)"
																}
															},
															"id": 1156,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "383:27:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IUniswapV3Factory_$390",
																"typeString": "contract IUniswapV3Factory"
															}
														},
														"id": 1157,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "411:7:12",
														"memberName": "getPool",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 363,
														"src": "383:35:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$_t_uint24_$returns$_t_address_$",
															"typeString": "function (address,address,uint24) view external returns (address)"
														}
													},
													"id": 1161,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "383:50:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "368:65:12"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1168,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1163,
														"name": "pool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1153,
														"src": "451:4:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1166,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "467:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1165,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "459:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1164,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "459:7:12",
																"typeDescriptions": {}
															}
														},
														"id": 1167,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "459:10:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "451:18:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1171,
												"nodeType": "IfStatement",
												"src": "447:32:12",
												"trueBody": {
													"expression": {
														"hexValue": "30",
														"id": 1169,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "478:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"functionReturnParameters": 1151,
													"id": 1170,
													"nodeType": "Return",
													"src": "471:8:12"
												}
											},
											{
												"assignments": [
													1173,
													null,
													null,
													null,
													null,
													null,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1173,
														"mutability": "mutable",
														"name": "sqrtPriceX96",
														"nameLocation": "503:12:12",
														"nodeType": "VariableDeclaration",
														"scope": 1182,
														"src": "495:20:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														},
														"typeName": {
															"id": 1172,
															"name": "uint160",
															"nodeType": "ElementaryTypeName",
															"src": "495:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														},
														"visibility": "internal"
													},
													null,
													null,
													null,
													null,
													null,
													null
												],
												"id": 1179,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"arguments": [
																{
																	"id": 1175,
																	"name": "pool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1153,
																	"src": "540:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1174,
																"name": "IUniswapV3Pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 412,
																"src": "525:14:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IUniswapV3Pool_$412_$",
																	"typeString": "type(contract IUniswapV3Pool)"
																}
															},
															"id": 1176,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "525:20:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IUniswapV3Pool_$412",
																"typeString": "contract IUniswapV3Pool"
															}
														},
														"id": 1177,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "546:5:12",
														"memberName": "slot0",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 745,
														"src": "525:26:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint160_$_t_int24_$_t_uint16_$_t_uint16_$_t_uint16_$_t_uint8_$_t_bool_$",
															"typeString": "function () view external returns (uint160,int24,uint16,uint16,uint16,uint8,bool)"
														}
													},
													"id": 1178,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "525:28:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint160_$_t_int24_$_t_uint16_$_t_uint16_$_t_uint16_$_t_uint8_$_t_bool_$",
														"typeString": "tuple(uint160,int24,uint16,uint16,uint16,uint8,bool)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "494:59:12"
											},
											{
												"expression": {
													"id": 1180,
													"name": "sqrtPriceX96",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1173,
													"src": "575:12:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"functionReturnParameters": 1151,
												"id": 1181,
												"nodeType": "Return",
												"src": "568:19:12"
											}
										]
									},
									"functionSelector": "edf15a9a",
									"id": 1183,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrtPrice",
									"nameLocation": "270:9:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1148,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1143,
												"mutability": "mutable",
												"name": "provider",
												"nameLocation": "288:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 1183,
												"src": "280:16:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1142,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "280:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1145,
												"mutability": "mutable",
												"name": "tIn",
												"nameLocation": "305:3:12",
												"nodeType": "VariableDeclaration",
												"scope": 1183,
												"src": "297:11:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1144,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "297:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1147,
												"mutability": "mutable",
												"name": "tOut",
												"nameLocation": "317:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 1183,
												"src": "309:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1146,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "309:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "279:43:12"
									},
									"returnParameters": {
										"id": 1151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1150,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1183,
												"src": "346:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1149,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "346:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "345:9:12"
									},
									"scope": 1184,
									"src": "261:334:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1185,
							"src": "232:365:12",
							"usedErrors": []
						}
					],
					"src": "32:565:12"
				},
				"id": 12
			}
		}
	}
}
{
	"id": "ca116e388e050354189ceaeb756ffe4b",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.7.6",
	"solcLongVersion": "0.7.6+commit.7338295f",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/PriceAggregator.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity 0.7.6;\npragma abicoder v2;\n\nimport '@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol';\nimport '@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol';\nimport '@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol';\nimport './interfaces/IPriceAggregator.sol';\nimport './interfaces/IERC20.sol';\nimport './libraries/UniswapV2.sol';\nimport './libraries/UniswapV3.sol';\n\n\ncontract PriceAggregator is IPriceAggregator {\n\n    function getPrices(input[] memory inputs) public override view returns (output[] memory) {\n        output[] memory outputs = new output[](inputs.length);\n       for (uint i=0;i<inputs.length;i++){\n        if (inputs[i].providerVersion == 2) {\n            uint256 price = UniswapV2.Price(inputs[i].provider,inputs[i].t1,inputs[i].t2);\n            outputs[i] = output(inputs[i].t1,inputs[i].t2,price,0); \n        \n        } else if (inputs[i].providerVersion == 3) {\n            (uint256 price,uint24 fee) = UniswapV3.Price(inputs[i].provider,inputs[i].t1,inputs[i].t2);\n            outputs[i] = output(inputs[i].t1,inputs[i].t2,price,fee);            \n        }\n       }\n    \n       return outputs;\n    }\n\n\n}"
			},
			"contracts/libraries/UniswapV3.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity 0.7.6;\n\nimport '@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol';\nimport '@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol';\nimport './OracleLibrary.sol';\n\nimport '../interfaces/IERC20.sol';\n\nlibrary UniswapV3 {\n\n    function Price(address provider,address tIn,address tOut) external view returns (uint256 price,uint24 fee){\n        uint16[4] memory fees = [100,500,3000,10000];\n        for(uint8 i=0;i<4;i++){\n        address pool = IUniswapV3Factory(provider).getPool(tIn,tOut,fees[i]);\n        if (pool == address(0)) continue ;\n        int24 tick = OracleLibrary.consult(pool,5);\n        uint256 amountOut = OracleLibrary.getQuoteAtTick(tick,uint128(10**IERC20(tIn).decimals()),tIn,tOut);\n        if (i == 0) price = amountOut;\n        if (i > 0 && amountOut < price) {\n            price = amountOut;\n            fee = fees[i];\n            }\n        }\n        return (price,fee);\n    }\n}\n\n"
			},
			"contracts/libraries/UniswapV2.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity 0.7.6;\n\nimport '../interfaces/IERC20.sol';\nimport '@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol';\n\nlibrary UniswapV2 {\n    function Price(address provider, address tIn,address tOut) external view returns (uint256){\n        address[] memory path = new address[](2);\n        path[0] = tIn;\n        path[1] = tOut;\n        uint[] memory amounts = IUniswapV2Router01(provider).getAmountsOut(10**IERC20(tIn).decimals(),path);\n       return amounts[1];\n    }\n\n}"
			},
			"contracts/interfaces/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity >=0.7.6;\n\ninterface IERC20 {\n    event Approval(address indexed owner, address indexed spender, uint value);\n    event Transfer(address indexed from, address indexed to, uint value);\n\n    function name() external view returns (string memory);\n    function symbol() external view returns (string memory);\n    function decimals() external view returns (uint8);\n    function totalSupply() external view returns (uint);\n    function balanceOf(address owner) external view returns (uint);\n    function allowance(address owner, address spender) external view returns (uint);\n\n    function approve(address spender, uint value) external returns (bool);\n    function transfer(address to, uint value) external returns (bool);\n    function transferFrom(address from, address to, uint value) external returns (bool);\n    function deposit() external payable;\n    function withdraw(uint) external;\n}"
			},
			"contracts/interfaces/IPriceAggregator.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity >=0.7.6;\npragma abicoder v2;\n\ninterface IPriceAggregator {\n       struct input {\n        address t1;\n        address t2;\n        address provider;\n        uint8 providerVersion;\n    }\n\n    struct output {\n        address t1;\n        address t2;\n        uint256 price;\n        uint24 fee;\n    } \n\n    function getPrices(input[] memory inputs) external view returns (output[] memory);\n}"
			},
			"@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\nimport './pool/IUniswapV3PoolImmutables.sol';\nimport './pool/IUniswapV3PoolState.sol';\nimport './pool/IUniswapV3PoolDerivedState.sol';\nimport './pool/IUniswapV3PoolActions.sol';\nimport './pool/IUniswapV3PoolOwnerActions.sol';\nimport './pool/IUniswapV3PoolEvents.sol';\n\n/// @title The interface for a Uniswap V3 Pool\n/// @notice A Uniswap pool facilitates swapping and automated market making between any two assets that strictly conform\n/// to the ERC20 specification\n/// @dev The pool interface is broken up into many smaller pieces\ninterface IUniswapV3Pool is\n    IUniswapV3PoolImmutables,\n    IUniswapV3PoolState,\n    IUniswapV3PoolDerivedState,\n    IUniswapV3PoolActions,\n    IUniswapV3PoolOwnerActions,\n    IUniswapV3PoolEvents\n{\n\n}\n"
			},
			"@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title The interface for the Uniswap V3 Factory\n/// @notice The Uniswap V3 Factory facilitates creation of Uniswap V3 pools and control over the protocol fees\ninterface IUniswapV3Factory {\n    /// @notice Emitted when the owner of the factory is changed\n    /// @param oldOwner The owner before the owner was changed\n    /// @param newOwner The owner after the owner was changed\n    event OwnerChanged(address indexed oldOwner, address indexed newOwner);\n\n    /// @notice Emitted when a pool is created\n    /// @param token0 The first token of the pool by address sort order\n    /// @param token1 The second token of the pool by address sort order\n    /// @param fee The fee collected upon every swap in the pool, denominated in hundredths of a bip\n    /// @param tickSpacing The minimum number of ticks between initialized ticks\n    /// @param pool The address of the created pool\n    event PoolCreated(\n        address indexed token0,\n        address indexed token1,\n        uint24 indexed fee,\n        int24 tickSpacing,\n        address pool\n    );\n\n    /// @notice Emitted when a new fee amount is enabled for pool creation via the factory\n    /// @param fee The enabled fee, denominated in hundredths of a bip\n    /// @param tickSpacing The minimum number of ticks between initialized ticks for pools created with the given fee\n    event FeeAmountEnabled(uint24 indexed fee, int24 indexed tickSpacing);\n\n    /// @notice Returns the current owner of the factory\n    /// @dev Can be changed by the current owner via setOwner\n    /// @return The address of the factory owner\n    function owner() external view returns (address);\n\n    /// @notice Returns the tick spacing for a given fee amount, if enabled, or 0 if not enabled\n    /// @dev A fee amount can never be removed, so this value should be hard coded or cached in the calling context\n    /// @param fee The enabled fee, denominated in hundredths of a bip. Returns 0 in case of unenabled fee\n    /// @return The tick spacing\n    function feeAmountTickSpacing(uint24 fee) external view returns (int24);\n\n    /// @notice Returns the pool address for a given pair of tokens and a fee, or address 0 if it does not exist\n    /// @dev tokenA and tokenB may be passed in either token0/token1 or token1/token0 order\n    /// @param tokenA The contract address of either token0 or token1\n    /// @param tokenB The contract address of the other token\n    /// @param fee The fee collected upon every swap in the pool, denominated in hundredths of a bip\n    /// @return pool The pool address\n    function getPool(\n        address tokenA,\n        address tokenB,\n        uint24 fee\n    ) external view returns (address pool);\n\n    /// @notice Creates a pool for the given two tokens and fee\n    /// @param tokenA One of the two tokens in the desired pool\n    /// @param tokenB The other of the two tokens in the desired pool\n    /// @param fee The desired fee for the pool\n    /// @dev tokenA and tokenB may be passed in either order: token0/token1 or token1/token0. tickSpacing is retrieved\n    /// from the fee. The call will revert if the pool already exists, the fee is invalid, or the token arguments\n    /// are invalid.\n    /// @return pool The address of the newly created pool\n    function createPool(\n        address tokenA,\n        address tokenB,\n        uint24 fee\n    ) external returns (address pool);\n\n    /// @notice Updates the owner of the factory\n    /// @dev Must be called by the current owner\n    /// @param _owner The new owner of the factory\n    function setOwner(address _owner) external;\n\n    /// @notice Enables a fee amount with the given tickSpacing\n    /// @dev Fee amounts may never be removed once enabled\n    /// @param fee The fee amount to enable, denominated in hundredths of a bip (i.e. 1e-6)\n    /// @param tickSpacing The spacing between ticks to be enforced for all pools created with the given fee amount\n    function enableFeeAmount(uint24 fee, int24 tickSpacing) external;\n}\n"
			},
			"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol": {
				"content": "pragma solidity >=0.6.2;\n\ninterface IUniswapV2Router01 {\n    function factory() external pure returns (address);\n    function WETH() external pure returns (address);\n\n    function addLiquidity(\n        address tokenA,\n        address tokenB,\n        uint amountADesired,\n        uint amountBDesired,\n        uint amountAMin,\n        uint amountBMin,\n        address to,\n        uint deadline\n    ) external returns (uint amountA, uint amountB, uint liquidity);\n    function addLiquidityETH(\n        address token,\n        uint amountTokenDesired,\n        uint amountTokenMin,\n        uint amountETHMin,\n        address to,\n        uint deadline\n    ) external payable returns (uint amountToken, uint amountETH, uint liquidity);\n    function removeLiquidity(\n        address tokenA,\n        address tokenB,\n        uint liquidity,\n        uint amountAMin,\n        uint amountBMin,\n        address to,\n        uint deadline\n    ) external returns (uint amountA, uint amountB);\n    function removeLiquidityETH(\n        address token,\n        uint liquidity,\n        uint amountTokenMin,\n        uint amountETHMin,\n        address to,\n        uint deadline\n    ) external returns (uint amountToken, uint amountETH);\n    function removeLiquidityWithPermit(\n        address tokenA,\n        address tokenB,\n        uint liquidity,\n        uint amountAMin,\n        uint amountBMin,\n        address to,\n        uint deadline,\n        bool approveMax, uint8 v, bytes32 r, bytes32 s\n    ) external returns (uint amountA, uint amountB);\n    function removeLiquidityETHWithPermit(\n        address token,\n        uint liquidity,\n        uint amountTokenMin,\n        uint amountETHMin,\n        address to,\n        uint deadline,\n        bool approveMax, uint8 v, bytes32 r, bytes32 s\n    ) external returns (uint amountToken, uint amountETH);\n    function swapExactTokensForTokens(\n        uint amountIn,\n        uint amountOutMin,\n        address[] calldata path,\n        address to,\n        uint deadline\n    ) external returns (uint[] memory amounts);\n    function swapTokensForExactTokens(\n        uint amountOut,\n        uint amountInMax,\n        address[] calldata path,\n        address to,\n        uint deadline\n    ) external returns (uint[] memory amounts);\n    function swapExactETHForTokens(uint amountOutMin, address[] calldata path, address to, uint deadline)\n        external\n        payable\n        returns (uint[] memory amounts);\n    function swapTokensForExactETH(uint amountOut, uint amountInMax, address[] calldata path, address to, uint deadline)\n        external\n        returns (uint[] memory amounts);\n    function swapExactTokensForETH(uint amountIn, uint amountOutMin, address[] calldata path, address to, uint deadline)\n        external\n        returns (uint[] memory amounts);\n    function swapETHForExactTokens(uint amountOut, address[] calldata path, address to, uint deadline)\n        external\n        payable\n        returns (uint[] memory amounts);\n\n    function quote(uint amountA, uint reserveA, uint reserveB) external pure returns (uint amountB);\n    function getAmountOut(uint amountIn, uint reserveIn, uint reserveOut) external pure returns (uint amountOut);\n    function getAmountIn(uint amountOut, uint reserveIn, uint reserveOut) external pure returns (uint amountIn);\n    function getAmountsOut(uint amountIn, address[] calldata path) external view returns (uint[] memory amounts);\n    function getAmountsIn(uint amountOut, address[] calldata path) external view returns (uint[] memory amounts);\n}\n"
			},
			"contracts/libraries/OracleLibrary.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity 0.7.6;\n\nimport '@uniswap/v3-core/contracts/libraries/FullMath.sol';\nimport '@uniswap/v3-core/contracts/libraries/TickMath.sol';\nimport '@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol';\n\nlibrary OracleLibrary {\n  function consult(address pool, uint32 secondsAgo)\n        internal\n        view\n        returns (int24 tick)\n    {\n        require(secondsAgo != 0, 'BP');\n\n        uint32[] memory secondsAgos = new uint32[](2);\n        secondsAgos[0] = secondsAgo;\n        secondsAgos[1] = 0;\n\n        (int56[] memory tickCumulatives, ) =\n            IUniswapV3Pool(pool).observe(secondsAgos);\n\n        int56 tickCumulativesDelta = tickCumulatives[1] - tickCumulatives[0];\n  \n        tick = int24(tickCumulativesDelta / secondsAgo);\n        // Always round to negative infinity\n        if (tickCumulativesDelta < 0 && (tickCumulativesDelta % secondsAgo != 0)) tick--;\n\n    }\n\n\n    function getQuoteAtTick(\n        int24 tick,\n        uint128 baseAmount,\n        address baseToken,\n        address quoteToken\n    ) internal pure returns (uint256 quoteAmount) {\n        uint160 sqrtRatioX96 = TickMath.getSqrtRatioAtTick(tick);\n\n        // Calculate quoteAmount with better precision if it doesn't overflow when multiplied by itself\n        if (sqrtRatioX96 <= type(uint128).max) {\n            uint256 ratioX192 = uint256(sqrtRatioX96) * sqrtRatioX96;\n            quoteAmount = baseToken < quoteToken\n                ? FullMath.mulDiv(ratioX192, baseAmount, 1 << 192)\n                : FullMath.mulDiv(1 << 192, baseAmount, ratioX192);\n        } else {\n            uint256 ratioX128 = FullMath.mulDiv(sqrtRatioX96, sqrtRatioX96, 1 << 64);\n            quoteAmount = baseToken < quoteToken\n                ? FullMath.mulDiv(ratioX128, baseAmount, 1 << 128)\n                : FullMath.mulDiv(1 << 128, baseAmount, ratioX128);\n        }\n    }\n}\n"
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Events emitted by a pool\n/// @notice Contains all events emitted by the pool\ninterface IUniswapV3PoolEvents {\n    /// @notice Emitted exactly once by a pool when #initialize is first called on the pool\n    /// @dev Mint/Burn/Swap cannot be emitted by the pool before Initialize\n    /// @param sqrtPriceX96 The initial sqrt price of the pool, as a Q64.96\n    /// @param tick The initial tick of the pool, i.e. log base 1.0001 of the starting price of the pool\n    event Initialize(uint160 sqrtPriceX96, int24 tick);\n\n    /// @notice Emitted when liquidity is minted for a given position\n    /// @param sender The address that minted the liquidity\n    /// @param owner The owner of the position and recipient of any minted liquidity\n    /// @param tickLower The lower tick of the position\n    /// @param tickUpper The upper tick of the position\n    /// @param amount The amount of liquidity minted to the position range\n    /// @param amount0 How much token0 was required for the minted liquidity\n    /// @param amount1 How much token1 was required for the minted liquidity\n    event Mint(\n        address sender,\n        address indexed owner,\n        int24 indexed tickLower,\n        int24 indexed tickUpper,\n        uint128 amount,\n        uint256 amount0,\n        uint256 amount1\n    );\n\n    /// @notice Emitted when fees are collected by the owner of a position\n    /// @dev Collect events may be emitted with zero amount0 and amount1 when the caller chooses not to collect fees\n    /// @param owner The owner of the position for which fees are collected\n    /// @param tickLower The lower tick of the position\n    /// @param tickUpper The upper tick of the position\n    /// @param amount0 The amount of token0 fees collected\n    /// @param amount1 The amount of token1 fees collected\n    event Collect(\n        address indexed owner,\n        address recipient,\n        int24 indexed tickLower,\n        int24 indexed tickUpper,\n        uint128 amount0,\n        uint128 amount1\n    );\n\n    /// @notice Emitted when a position's liquidity is removed\n    /// @dev Does not withdraw any fees earned by the liquidity position, which must be withdrawn via #collect\n    /// @param owner The owner of the position for which liquidity is removed\n    /// @param tickLower The lower tick of the position\n    /// @param tickUpper The upper tick of the position\n    /// @param amount The amount of liquidity to remove\n    /// @param amount0 The amount of token0 withdrawn\n    /// @param amount1 The amount of token1 withdrawn\n    event Burn(\n        address indexed owner,\n        int24 indexed tickLower,\n        int24 indexed tickUpper,\n        uint128 amount,\n        uint256 amount0,\n        uint256 amount1\n    );\n\n    /// @notice Emitted by the pool for any swaps between token0 and token1\n    /// @param sender The address that initiated the swap call, and that received the callback\n    /// @param recipient The address that received the output of the swap\n    /// @param amount0 The delta of the token0 balance of the pool\n    /// @param amount1 The delta of the token1 balance of the pool\n    /// @param sqrtPriceX96 The sqrt(price) of the pool after the swap, as a Q64.96\n    /// @param liquidity The liquidity of the pool after the swap\n    /// @param tick The log base 1.0001 of price of the pool after the swap\n    event Swap(\n        address indexed sender,\n        address indexed recipient,\n        int256 amount0,\n        int256 amount1,\n        uint160 sqrtPriceX96,\n        uint128 liquidity,\n        int24 tick\n    );\n\n    /// @notice Emitted by the pool for any flashes of token0/token1\n    /// @param sender The address that initiated the swap call, and that received the callback\n    /// @param recipient The address that received the tokens from flash\n    /// @param amount0 The amount of token0 that was flashed\n    /// @param amount1 The amount of token1 that was flashed\n    /// @param paid0 The amount of token0 paid for the flash, which can exceed the amount0 plus the fee\n    /// @param paid1 The amount of token1 paid for the flash, which can exceed the amount1 plus the fee\n    event Flash(\n        address indexed sender,\n        address indexed recipient,\n        uint256 amount0,\n        uint256 amount1,\n        uint256 paid0,\n        uint256 paid1\n    );\n\n    /// @notice Emitted by the pool for increases to the number of observations that can be stored\n    /// @dev observationCardinalityNext is not the observation cardinality until an observation is written at the index\n    /// just before a mint/swap/burn.\n    /// @param observationCardinalityNextOld The previous value of the next observation cardinality\n    /// @param observationCardinalityNextNew The updated value of the next observation cardinality\n    event IncreaseObservationCardinalityNext(\n        uint16 observationCardinalityNextOld,\n        uint16 observationCardinalityNextNew\n    );\n\n    /// @notice Emitted when the protocol fee is changed by the pool\n    /// @param feeProtocol0Old The previous value of the token0 protocol fee\n    /// @param feeProtocol1Old The previous value of the token1 protocol fee\n    /// @param feeProtocol0New The updated value of the token0 protocol fee\n    /// @param feeProtocol1New The updated value of the token1 protocol fee\n    event SetFeeProtocol(uint8 feeProtocol0Old, uint8 feeProtocol1Old, uint8 feeProtocol0New, uint8 feeProtocol1New);\n\n    /// @notice Emitted when the collected protocol fees are withdrawn by the factory owner\n    /// @param sender The address that collects the protocol fees\n    /// @param recipient The address that receives the collected protocol fees\n    /// @param amount0 The amount of token0 protocol fees that is withdrawn\n    /// @param amount0 The amount of token1 protocol fees that is withdrawn\n    event CollectProtocol(address indexed sender, address indexed recipient, uint128 amount0, uint128 amount1);\n}\n"
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Permissioned pool actions\n/// @notice Contains pool methods that may only be called by the factory owner\ninterface IUniswapV3PoolOwnerActions {\n    /// @notice Set the denominator of the protocol's % share of the fees\n    /// @param feeProtocol0 new protocol fee for token0 of the pool\n    /// @param feeProtocol1 new protocol fee for token1 of the pool\n    function setFeeProtocol(uint8 feeProtocol0, uint8 feeProtocol1) external;\n\n    /// @notice Collect the protocol fee accrued to the pool\n    /// @param recipient The address to which collected protocol fees should be sent\n    /// @param amount0Requested The maximum amount of token0 to send, can be 0 to collect fees in only token1\n    /// @param amount1Requested The maximum amount of token1 to send, can be 0 to collect fees in only token0\n    /// @return amount0 The protocol fee collected in token0\n    /// @return amount1 The protocol fee collected in token1\n    function collectProtocol(\n        address recipient,\n        uint128 amount0Requested,\n        uint128 amount1Requested\n    ) external returns (uint128 amount0, uint128 amount1);\n}\n"
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Permissionless pool actions\n/// @notice Contains pool methods that can be called by anyone\ninterface IUniswapV3PoolActions {\n    /// @notice Sets the initial price for the pool\n    /// @dev Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value\n    /// @param sqrtPriceX96 the initial sqrt price of the pool as a Q64.96\n    function initialize(uint160 sqrtPriceX96) external;\n\n    /// @notice Adds liquidity for the given recipient/tickLower/tickUpper position\n    /// @dev The caller of this method receives a callback in the form of IUniswapV3MintCallback#uniswapV3MintCallback\n    /// in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends\n    /// on tickLower, tickUpper, the amount of liquidity, and the current price.\n    /// @param recipient The address for which the liquidity will be created\n    /// @param tickLower The lower tick of the position in which to add liquidity\n    /// @param tickUpper The upper tick of the position in which to add liquidity\n    /// @param amount The amount of liquidity to mint\n    /// @param data Any data that should be passed through to the callback\n    /// @return amount0 The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback\n    /// @return amount1 The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback\n    function mint(\n        address recipient,\n        int24 tickLower,\n        int24 tickUpper,\n        uint128 amount,\n        bytes calldata data\n    ) external returns (uint256 amount0, uint256 amount1);\n\n    /// @notice Collects tokens owed to a position\n    /// @dev Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity.\n    /// Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or\n    /// amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the\n    /// actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.\n    /// @param recipient The address which should receive the fees collected\n    /// @param tickLower The lower tick of the position for which to collect fees\n    /// @param tickUpper The upper tick of the position for which to collect fees\n    /// @param amount0Requested How much token0 should be withdrawn from the fees owed\n    /// @param amount1Requested How much token1 should be withdrawn from the fees owed\n    /// @return amount0 The amount of fees collected in token0\n    /// @return amount1 The amount of fees collected in token1\n    function collect(\n        address recipient,\n        int24 tickLower,\n        int24 tickUpper,\n        uint128 amount0Requested,\n        uint128 amount1Requested\n    ) external returns (uint128 amount0, uint128 amount1);\n\n    /// @notice Burn liquidity from the sender and account tokens owed for the liquidity to the position\n    /// @dev Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0\n    /// @dev Fees must be collected separately via a call to #collect\n    /// @param tickLower The lower tick of the position for which to burn liquidity\n    /// @param tickUpper The upper tick of the position for which to burn liquidity\n    /// @param amount How much liquidity to burn\n    /// @return amount0 The amount of token0 sent to the recipient\n    /// @return amount1 The amount of token1 sent to the recipient\n    function burn(\n        int24 tickLower,\n        int24 tickUpper,\n        uint128 amount\n    ) external returns (uint256 amount0, uint256 amount1);\n\n    /// @notice Swap token0 for token1, or token1 for token0\n    /// @dev The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback\n    /// @param recipient The address to receive the output of the swap\n    /// @param zeroForOne The direction of the swap, true for token0 to token1, false for token1 to token0\n    /// @param amountSpecified The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)\n    /// @param sqrtPriceLimitX96 The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this\n    /// value after the swap. If one for zero, the price cannot be greater than this value after the swap\n    /// @param data Any data to be passed through to the callback\n    /// @return amount0 The delta of the balance of token0 of the pool, exact when negative, minimum when positive\n    /// @return amount1 The delta of the balance of token1 of the pool, exact when negative, minimum when positive\n    function swap(\n        address recipient,\n        bool zeroForOne,\n        int256 amountSpecified,\n        uint160 sqrtPriceLimitX96,\n        bytes calldata data\n    ) external returns (int256 amount0, int256 amount1);\n\n    /// @notice Receive token0 and/or token1 and pay it back, plus a fee, in the callback\n    /// @dev The caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallback\n    /// @dev Can be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling\n    /// with 0 amount{0,1} and sending the donation amount(s) from the callback\n    /// @param recipient The address which will receive the token0 and token1 amounts\n    /// @param amount0 The amount of token0 to send\n    /// @param amount1 The amount of token1 to send\n    /// @param data Any data to be passed through to the callback\n    function flash(\n        address recipient,\n        uint256 amount0,\n        uint256 amount1,\n        bytes calldata data\n    ) external;\n\n    /// @notice Increase the maximum number of price and liquidity observations that this pool will store\n    /// @dev This method is no-op if the pool already has an observationCardinalityNext greater than or equal to\n    /// the input observationCardinalityNext.\n    /// @param observationCardinalityNext The desired minimum number of observations for the pool to store\n    function increaseObservationCardinalityNext(uint16 observationCardinalityNext) external;\n}\n"
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Pool state that is not stored\n/// @notice Contains view functions to provide information about the pool that is computed rather than stored on the\n/// blockchain. The functions here may have variable gas costs.\ninterface IUniswapV3PoolDerivedState {\n    /// @notice Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp\n    /// @dev To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing\n    /// the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick,\n    /// you must call it with secondsAgos = [3600, 0].\n    /// @dev The time weighted average tick represents the geometric time weighted average price of the pool, in\n    /// log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.\n    /// @param secondsAgos From how long ago each cumulative tick and liquidity value should be returned\n    /// @return tickCumulatives Cumulative tick values as of each `secondsAgos` from the current block timestamp\n    /// @return secondsPerLiquidityCumulativeX128s Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block\n    /// timestamp\n    function observe(uint32[] calldata secondsAgos)\n        external\n        view\n        returns (int56[] memory tickCumulatives, uint160[] memory secondsPerLiquidityCumulativeX128s);\n\n    /// @notice Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range\n    /// @dev Snapshots must only be compared to other snapshots, taken over a period for which a position existed.\n    /// I.e., snapshots cannot be compared if a position is not held for the entire period between when the first\n    /// snapshot is taken and the second snapshot is taken.\n    /// @param tickLower The lower tick of the range\n    /// @param tickUpper The upper tick of the range\n    /// @return tickCumulativeInside The snapshot of the tick accumulator for the range\n    /// @return secondsPerLiquidityInsideX128 The snapshot of seconds per liquidity for the range\n    /// @return secondsInside The snapshot of seconds per liquidity for the range\n    function snapshotCumulativesInside(int24 tickLower, int24 tickUpper)\n        external\n        view\n        returns (\n            int56 tickCumulativeInside,\n            uint160 secondsPerLiquidityInsideX128,\n            uint32 secondsInside\n        );\n}\n"
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Pool state that can change\n/// @notice These methods compose the pool's state, and can change with any frequency including multiple times\n/// per transaction\ninterface IUniswapV3PoolState {\n    /// @notice The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas\n    /// when accessed externally.\n    /// @return sqrtPriceX96 The current price of the pool as a sqrt(token1/token0) Q64.96 value\n    /// tick The current tick of the pool, i.e. according to the last tick transition that was run.\n    /// This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick\n    /// boundary.\n    /// observationIndex The index of the last oracle observation that was written,\n    /// observationCardinality The current maximum number of observations stored in the pool,\n    /// observationCardinalityNext The next maximum number of observations, to be updated when the observation.\n    /// feeProtocol The protocol fee for both tokens of the pool.\n    /// Encoded as two 4 bit values, where the protocol fee of token1 is shifted 4 bits and the protocol fee of token0\n    /// is the lower 4 bits. Used as the denominator of a fraction of the swap fee, e.g. 4 means 1/4th of the swap fee.\n    /// unlocked Whether the pool is currently locked to reentrancy\n    function slot0()\n        external\n        view\n        returns (\n            uint160 sqrtPriceX96,\n            int24 tick,\n            uint16 observationIndex,\n            uint16 observationCardinality,\n            uint16 observationCardinalityNext,\n            uint8 feeProtocol,\n            bool unlocked\n        );\n\n    /// @notice The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool\n    /// @dev This value can overflow the uint256\n    function feeGrowthGlobal0X128() external view returns (uint256);\n\n    /// @notice The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool\n    /// @dev This value can overflow the uint256\n    function feeGrowthGlobal1X128() external view returns (uint256);\n\n    /// @notice The amounts of token0 and token1 that are owed to the protocol\n    /// @dev Protocol fees will never exceed uint128 max in either token\n    function protocolFees() external view returns (uint128 token0, uint128 token1);\n\n    /// @notice The currently in range liquidity available to the pool\n    /// @dev This value has no relationship to the total liquidity across all ticks\n    function liquidity() external view returns (uint128);\n\n    /// @notice Look up information about a specific tick in the pool\n    /// @param tick The tick to look up\n    /// @return liquidityGross the total amount of position liquidity that uses the pool either as tick lower or\n    /// tick upper,\n    /// liquidityNet how much liquidity changes when the pool price crosses the tick,\n    /// feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0,\n    /// feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1,\n    /// tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick\n    /// secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick,\n    /// secondsOutside the seconds spent on the other side of the tick from the current tick,\n    /// initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false.\n    /// Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0.\n    /// In addition, these values are only relative and must be used only in comparison to previous snapshots for\n    /// a specific position.\n    function ticks(int24 tick)\n        external\n        view\n        returns (\n            uint128 liquidityGross,\n            int128 liquidityNet,\n            uint256 feeGrowthOutside0X128,\n            uint256 feeGrowthOutside1X128,\n            int56 tickCumulativeOutside,\n            uint160 secondsPerLiquidityOutsideX128,\n            uint32 secondsOutside,\n            bool initialized\n        );\n\n    /// @notice Returns 256 packed tick initialized boolean values. See TickBitmap for more information\n    function tickBitmap(int16 wordPosition) external view returns (uint256);\n\n    /// @notice Returns the information about a position by the position's key\n    /// @param key The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper\n    /// @return _liquidity The amount of liquidity in the position,\n    /// Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke,\n    /// Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke,\n    /// Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke,\n    /// Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke\n    function positions(bytes32 key)\n        external\n        view\n        returns (\n            uint128 _liquidity,\n            uint256 feeGrowthInside0LastX128,\n            uint256 feeGrowthInside1LastX128,\n            uint128 tokensOwed0,\n            uint128 tokensOwed1\n        );\n\n    /// @notice Returns data about a specific observation index\n    /// @param index The element of the observations array to fetch\n    /// @dev You most likely want to use #observe() instead of this method to get an observation as of some amount of time\n    /// ago, rather than at a specific index in the array.\n    /// @return blockTimestamp The timestamp of the observation,\n    /// Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp,\n    /// Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp,\n    /// Returns initialized whether the observation has been initialized and the values are safe to use\n    function observations(uint256 index)\n        external\n        view\n        returns (\n            uint32 blockTimestamp,\n            int56 tickCumulative,\n            uint160 secondsPerLiquidityCumulativeX128,\n            bool initialized\n        );\n}\n"
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Pool state that never changes\n/// @notice These parameters are fixed for a pool forever, i.e., the methods will always return the same values\ninterface IUniswapV3PoolImmutables {\n    /// @notice The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface\n    /// @return The contract address\n    function factory() external view returns (address);\n\n    /// @notice The first of the two tokens of the pool, sorted by address\n    /// @return The token contract address\n    function token0() external view returns (address);\n\n    /// @notice The second of the two tokens of the pool, sorted by address\n    /// @return The token contract address\n    function token1() external view returns (address);\n\n    /// @notice The pool's fee in hundredths of a bip, i.e. 1e-6\n    /// @return The fee\n    function fee() external view returns (uint24);\n\n    /// @notice The pool tick spacing\n    /// @dev Ticks can only be used at multiples of this value, minimum of 1 and always positive\n    /// e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ...\n    /// This value is an int24 to avoid casting even though it is always positive.\n    /// @return The tick spacing\n    function tickSpacing() external view returns (int24);\n\n    /// @notice The maximum amount of position liquidity that can use any tick in the range\n    /// @dev This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and\n    /// also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool\n    /// @return The max amount of liquidity per tick\n    function maxLiquidityPerTick() external view returns (uint128);\n}\n"
			},
			"@uniswap/v3-core/contracts/libraries/TickMath.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0 <0.8.0;\n\n/// @title Math library for computing sqrt prices from ticks and vice versa\n/// @notice Computes sqrt price for ticks of size 1.0001, i.e. sqrt(1.0001^tick) as fixed point Q64.96 numbers. Supports\n/// prices between 2**-128 and 2**128\nlibrary TickMath {\n    /// @dev The minimum tick that may be passed to #getSqrtRatioAtTick computed from log base 1.0001 of 2**-128\n    int24 internal constant MIN_TICK = -887272;\n    /// @dev The maximum tick that may be passed to #getSqrtRatioAtTick computed from log base 1.0001 of 2**128\n    int24 internal constant MAX_TICK = -MIN_TICK;\n\n    /// @dev The minimum value that can be returned from #getSqrtRatioAtTick. Equivalent to getSqrtRatioAtTick(MIN_TICK)\n    uint160 internal constant MIN_SQRT_RATIO = 4295128739;\n    /// @dev The maximum value that can be returned from #getSqrtRatioAtTick. Equivalent to getSqrtRatioAtTick(MAX_TICK)\n    uint160 internal constant MAX_SQRT_RATIO = 1461446703485210103287273052203988822378723970342;\n\n    /// @notice Calculates sqrt(1.0001^tick) * 2^96\n    /// @dev Throws if |tick| > max tick\n    /// @param tick The input tick for the above formula\n    /// @return sqrtPriceX96 A Fixed point Q64.96 number representing the sqrt of the ratio of the two assets (token1/token0)\n    /// at the given tick\n    function getSqrtRatioAtTick(int24 tick) internal pure returns (uint160 sqrtPriceX96) {\n        uint256 absTick = tick < 0 ? uint256(-int256(tick)) : uint256(int256(tick));\n        require(absTick <= uint256(MAX_TICK), 'T');\n\n        uint256 ratio = absTick & 0x1 != 0 ? 0xfffcb933bd6fad37aa2d162d1a594001 : 0x100000000000000000000000000000000;\n        if (absTick & 0x2 != 0) ratio = (ratio * 0xfff97272373d413259a46990580e213a) >> 128;\n        if (absTick & 0x4 != 0) ratio = (ratio * 0xfff2e50f5f656932ef12357cf3c7fdcc) >> 128;\n        if (absTick & 0x8 != 0) ratio = (ratio * 0xffe5caca7e10e4e61c3624eaa0941cd0) >> 128;\n        if (absTick & 0x10 != 0) ratio = (ratio * 0xffcb9843d60f6159c9db58835c926644) >> 128;\n        if (absTick & 0x20 != 0) ratio = (ratio * 0xff973b41fa98c081472e6896dfb254c0) >> 128;\n        if (absTick & 0x40 != 0) ratio = (ratio * 0xff2ea16466c96a3843ec78b326b52861) >> 128;\n        if (absTick & 0x80 != 0) ratio = (ratio * 0xfe5dee046a99a2a811c461f1969c3053) >> 128;\n        if (absTick & 0x100 != 0) ratio = (ratio * 0xfcbe86c7900a88aedcffc83b479aa3a4) >> 128;\n        if (absTick & 0x200 != 0) ratio = (ratio * 0xf987a7253ac413176f2b074cf7815e54) >> 128;\n        if (absTick & 0x400 != 0) ratio = (ratio * 0xf3392b0822b70005940c7a398e4b70f3) >> 128;\n        if (absTick & 0x800 != 0) ratio = (ratio * 0xe7159475a2c29b7443b29c7fa6e889d9) >> 128;\n        if (absTick & 0x1000 != 0) ratio = (ratio * 0xd097f3bdfd2022b8845ad8f792aa5825) >> 128;\n        if (absTick & 0x2000 != 0) ratio = (ratio * 0xa9f746462d870fdf8a65dc1f90e061e5) >> 128;\n        if (absTick & 0x4000 != 0) ratio = (ratio * 0x70d869a156d2a1b890bb3df62baf32f7) >> 128;\n        if (absTick & 0x8000 != 0) ratio = (ratio * 0x31be135f97d08fd981231505542fcfa6) >> 128;\n        if (absTick & 0x10000 != 0) ratio = (ratio * 0x9aa508b5b7a84e1c677de54f3e99bc9) >> 128;\n        if (absTick & 0x20000 != 0) ratio = (ratio * 0x5d6af8dedb81196699c329225ee604) >> 128;\n        if (absTick & 0x40000 != 0) ratio = (ratio * 0x2216e584f5fa1ea926041bedfe98) >> 128;\n        if (absTick & 0x80000 != 0) ratio = (ratio * 0x48a170391f7dc42444e8fa2) >> 128;\n\n        if (tick > 0) ratio = type(uint256).max / ratio;\n\n        // this divides by 1<<32 rounding up to go from a Q128.128 to a Q128.96.\n        // we then downcast because we know the result always fits within 160 bits due to our tick input constraint\n        // we round up in the division so getTickAtSqrtRatio of the output price is always consistent\n        sqrtPriceX96 = uint160((ratio >> 32) + (ratio % (1 << 32) == 0 ? 0 : 1));\n    }\n\n    /// @notice Calculates the greatest tick value such that getRatioAtTick(tick) <= ratio\n    /// @dev Throws in case sqrtPriceX96 < MIN_SQRT_RATIO, as MIN_SQRT_RATIO is the lowest value getRatioAtTick may\n    /// ever return.\n    /// @param sqrtPriceX96 The sqrt ratio for which to compute the tick as a Q64.96\n    /// @return tick The greatest tick for which the ratio is less than or equal to the input ratio\n    function getTickAtSqrtRatio(uint160 sqrtPriceX96) internal pure returns (int24 tick) {\n        // second inequality must be < because the price can never reach the price at the max tick\n        require(sqrtPriceX96 >= MIN_SQRT_RATIO && sqrtPriceX96 < MAX_SQRT_RATIO, 'R');\n        uint256 ratio = uint256(sqrtPriceX96) << 32;\n\n        uint256 r = ratio;\n        uint256 msb = 0;\n\n        assembly {\n            let f := shl(7, gt(r, 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF))\n            msb := or(msb, f)\n            r := shr(f, r)\n        }\n        assembly {\n            let f := shl(6, gt(r, 0xFFFFFFFFFFFFFFFF))\n            msb := or(msb, f)\n            r := shr(f, r)\n        }\n        assembly {\n            let f := shl(5, gt(r, 0xFFFFFFFF))\n            msb := or(msb, f)\n            r := shr(f, r)\n        }\n        assembly {\n            let f := shl(4, gt(r, 0xFFFF))\n            msb := or(msb, f)\n            r := shr(f, r)\n        }\n        assembly {\n            let f := shl(3, gt(r, 0xFF))\n            msb := or(msb, f)\n            r := shr(f, r)\n        }\n        assembly {\n            let f := shl(2, gt(r, 0xF))\n            msb := or(msb, f)\n            r := shr(f, r)\n        }\n        assembly {\n            let f := shl(1, gt(r, 0x3))\n            msb := or(msb, f)\n            r := shr(f, r)\n        }\n        assembly {\n            let f := gt(r, 0x1)\n            msb := or(msb, f)\n        }\n\n        if (msb >= 128) r = ratio >> (msb - 127);\n        else r = ratio << (127 - msb);\n\n        int256 log_2 = (int256(msb) - 128) << 64;\n\n        assembly {\n            r := shr(127, mul(r, r))\n            let f := shr(128, r)\n            log_2 := or(log_2, shl(63, f))\n            r := shr(f, r)\n        }\n        assembly {\n            r := shr(127, mul(r, r))\n            let f := shr(128, r)\n            log_2 := or(log_2, shl(62, f))\n            r := shr(f, r)\n        }\n        assembly {\n            r := shr(127, mul(r, r))\n            let f := shr(128, r)\n            log_2 := or(log_2, shl(61, f))\n            r := shr(f, r)\n        }\n        assembly {\n            r := shr(127, mul(r, r))\n            let f := shr(128, r)\n            log_2 := or(log_2, shl(60, f))\n            r := shr(f, r)\n        }\n        assembly {\n            r := shr(127, mul(r, r))\n            let f := shr(128, r)\n            log_2 := or(log_2, shl(59, f))\n            r := shr(f, r)\n        }\n        assembly {\n            r := shr(127, mul(r, r))\n            let f := shr(128, r)\n            log_2 := or(log_2, shl(58, f))\n            r := shr(f, r)\n        }\n        assembly {\n            r := shr(127, mul(r, r))\n            let f := shr(128, r)\n            log_2 := or(log_2, shl(57, f))\n            r := shr(f, r)\n        }\n        assembly {\n            r := shr(127, mul(r, r))\n            let f := shr(128, r)\n            log_2 := or(log_2, shl(56, f))\n            r := shr(f, r)\n        }\n        assembly {\n            r := shr(127, mul(r, r))\n            let f := shr(128, r)\n            log_2 := or(log_2, shl(55, f))\n            r := shr(f, r)\n        }\n        assembly {\n            r := shr(127, mul(r, r))\n            let f := shr(128, r)\n            log_2 := or(log_2, shl(54, f))\n            r := shr(f, r)\n        }\n        assembly {\n            r := shr(127, mul(r, r))\n            let f := shr(128, r)\n            log_2 := or(log_2, shl(53, f))\n            r := shr(f, r)\n        }\n        assembly {\n            r := shr(127, mul(r, r))\n            let f := shr(128, r)\n            log_2 := or(log_2, shl(52, f))\n            r := shr(f, r)\n        }\n        assembly {\n            r := shr(127, mul(r, r))\n            let f := shr(128, r)\n            log_2 := or(log_2, shl(51, f))\n            r := shr(f, r)\n        }\n        assembly {\n            r := shr(127, mul(r, r))\n            let f := shr(128, r)\n            log_2 := or(log_2, shl(50, f))\n        }\n\n        int256 log_sqrt10001 = log_2 * 255738958999603826347141; // 128.128 number\n\n        int24 tickLow = int24((log_sqrt10001 - 3402992956809132418596140100660247210) >> 128);\n        int24 tickHi = int24((log_sqrt10001 + 291339464771989622907027621153398088495) >> 128);\n\n        tick = tickLow == tickHi ? tickLow : getSqrtRatioAtTick(tickHi) <= sqrtPriceX96 ? tickHi : tickLow;\n    }\n}\n"
			},
			"@uniswap/v3-core/contracts/libraries/FullMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity >=0.4.0 <0.8.0;\n\n/// @title Contains 512-bit math functions\n/// @notice Facilitates multiplication and division that can have overflow of an intermediate value without any loss of precision\n/// @dev Handles \"phantom overflow\" i.e., allows multiplication and division where an intermediate value overflows 256 bits\nlibrary FullMath {\n    /// @notice Calculates floor(a×b÷denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n    /// @param a The multiplicand\n    /// @param b The multiplier\n    /// @param denominator The divisor\n    /// @return result The 256-bit result\n    /// @dev Credit to Remco Bloemen under MIT license https://xn--2-umb.com/21/muldiv\n    function mulDiv(\n        uint256 a,\n        uint256 b,\n        uint256 denominator\n    ) internal pure returns (uint256 result) {\n        // 512-bit multiply [prod1 prod0] = a * b\n        // Compute the product mod 2**256 and mod 2**256 - 1\n        // then use the Chinese Remainder Theorem to reconstruct\n        // the 512 bit result. The result is stored in two 256\n        // variables such that product = prod1 * 2**256 + prod0\n        uint256 prod0; // Least significant 256 bits of the product\n        uint256 prod1; // Most significant 256 bits of the product\n        assembly {\n            let mm := mulmod(a, b, not(0))\n            prod0 := mul(a, b)\n            prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n        }\n\n        // Handle non-overflow cases, 256 by 256 division\n        if (prod1 == 0) {\n            require(denominator > 0);\n            assembly {\n                result := div(prod0, denominator)\n            }\n            return result;\n        }\n\n        // Make sure the result is less than 2**256.\n        // Also prevents denominator == 0\n        require(denominator > prod1);\n\n        ///////////////////////////////////////////////\n        // 512 by 256 division.\n        ///////////////////////////////////////////////\n\n        // Make division exact by subtracting the remainder from [prod1 prod0]\n        // Compute remainder using mulmod\n        uint256 remainder;\n        assembly {\n            remainder := mulmod(a, b, denominator)\n        }\n        // Subtract 256 bit number from 512 bit number\n        assembly {\n            prod1 := sub(prod1, gt(remainder, prod0))\n            prod0 := sub(prod0, remainder)\n        }\n\n        // Factor powers of two out of denominator\n        // Compute largest power of two divisor of denominator.\n        // Always >= 1.\n        uint256 twos = -denominator & denominator;\n        // Divide denominator by power of two\n        assembly {\n            denominator := div(denominator, twos)\n        }\n\n        // Divide [prod1 prod0] by the factors of two\n        assembly {\n            prod0 := div(prod0, twos)\n        }\n        // Shift in bits from prod1 into prod0. For this we need\n        // to flip `twos` such that it is 2**256 / twos.\n        // If twos is zero, then it becomes one\n        assembly {\n            twos := add(div(sub(0, twos), twos), 1)\n        }\n        prod0 |= prod1 * twos;\n\n        // Invert denominator mod 2**256\n        // Now that denominator is an odd number, it has an inverse\n        // modulo 2**256 such that denominator * inv = 1 mod 2**256.\n        // Compute the inverse by starting with a seed that is correct\n        // correct for four bits. That is, denominator * inv = 1 mod 2**4\n        uint256 inv = (3 * denominator) ^ 2;\n        // Now use Newton-Raphson iteration to improve the precision.\n        // Thanks to Hensel's lifting lemma, this also works in modular\n        // arithmetic, doubling the correct bits in each step.\n        inv *= 2 - denominator * inv; // inverse mod 2**8\n        inv *= 2 - denominator * inv; // inverse mod 2**16\n        inv *= 2 - denominator * inv; // inverse mod 2**32\n        inv *= 2 - denominator * inv; // inverse mod 2**64\n        inv *= 2 - denominator * inv; // inverse mod 2**128\n        inv *= 2 - denominator * inv; // inverse mod 2**256\n\n        // Because the division is now exact we can divide by multiplying\n        // with the modular inverse of denominator. This will give us the\n        // correct result modulo 2**256. Since the precoditions guarantee\n        // that the outcome is less than 2**256, this is the final result.\n        // We don't need to compute the high bits of the result and prod1\n        // is no longer required.\n        result = prod0 * inv;\n        return result;\n    }\n\n    /// @notice Calculates ceil(a×b÷denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n    /// @param a The multiplicand\n    /// @param b The multiplier\n    /// @param denominator The divisor\n    /// @return result The 256-bit result\n    function mulDivRoundingUp(\n        uint256 a,\n        uint256 b,\n        uint256 denominator\n    ) internal pure returns (uint256 result) {\n        result = mulDiv(a, b, denominator);\n        if (mulmod(a, b, denominator) > 0) {\n            require(result < type(uint256).max);\n            result++;\n        }\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol": {
				"IUniswapV2Router01": {
					"abi": [
						{
							"inputs": [],
							"name": "WETH",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountADesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBDesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountAMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "addLiquidity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenDesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "addLiquidityETH",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountToken",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveOut",
									"type": "uint256"
								}
							],
							"name": "getAmountIn",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveOut",
									"type": "uint256"
								}
							],
							"name": "getAmountOut",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								}
							],
							"name": "getAmountsIn",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								}
							],
							"name": "getAmountsOut",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveB",
									"type": "uint256"
								}
							],
							"name": "quote",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountAMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "removeLiquidity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "removeLiquidityETH",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountToken",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "approveMax",
									"type": "bool"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "removeLiquidityETHWithPermit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountToken",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountAMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "approveMax",
									"type": "bool"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "removeLiquidityWithPermit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapETHForExactTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactETHForTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactTokensForETH",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactTokensForTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountInMax",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapTokensForExactETH",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountInMax",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapTokensForExactTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"WETH()": "ad5c4648",
							"addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)": "e8e33700",
							"addLiquidityETH(address,uint256,uint256,uint256,address,uint256)": "f305d719",
							"factory()": "c45a0155",
							"getAmountIn(uint256,uint256,uint256)": "85f8c259",
							"getAmountOut(uint256,uint256,uint256)": "054d50d4",
							"getAmountsIn(uint256,address[])": "1f00ca74",
							"getAmountsOut(uint256,address[])": "d06ca61f",
							"quote(uint256,uint256,uint256)": "ad615dec",
							"removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)": "baa2abde",
							"removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)": "02751cec",
							"removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)": "ded9382a",
							"removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)": "2195995c",
							"swapETHForExactTokens(uint256,address[],address,uint256)": "fb3bdb41",
							"swapExactETHForTokens(uint256,address[],address,uint256)": "7ff36ab5",
							"swapExactTokensForETH(uint256,uint256,address[],address,uint256)": "18cbafe5",
							"swapExactTokensForTokens(uint256,uint256,address[],address,uint256)": "38ed1739",
							"swapTokensForExactETH(uint256,uint256,address[],address,uint256)": "4a25d94a",
							"swapTokensForExactTokens(uint256,uint256,address[],address,uint256)": "8803dbee"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"WETH\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountADesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBDesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenDesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"addLiquidityETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveOut\",\"type\":\"uint256\"}],\"name\":\"getAmountIn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveOut\",\"type\":\"uint256\"}],\"name\":\"getAmountOut\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"}],\"name\":\"getAmountsIn\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"}],\"name\":\"getAmountsOut\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveB\",\"type\":\"uint256\"}],\"name\":\"quote\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidityETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"approveMax\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"removeLiquidityETHWithPermit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"approveMax\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"removeLiquidityWithPermit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapETHForExactTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactETHForTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForETH\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMax\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapTokensForExactETH\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMax\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapTokensForExactTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol\":\"IUniswapV2Router01\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol\":{\"keccak256\":\"0x8a3c5c449d4b7cd76513ed6995f4b86e4a86f222c770f8442f5fc128ce29b4d2\",\"urls\":[\"bzz-raw://1df63ca373dafae3bd0ee7fe70f890a1dc7c45ed869c01de68413e0e97ff9deb\",\"dweb:/ipfs/QmefJgEYGUL8KX7kQKYTrDweF8GB7yjy3nw5Bmqzryg7PG\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol": {
				"IUniswapV3Factory": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint24",
									"name": "fee",
									"type": "uint24"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickSpacing",
									"type": "int24"
								}
							],
							"name": "FeeAmountEnabled",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "oldOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnerChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "token0",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "token1",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint24",
									"name": "fee",
									"type": "uint24"
								},
								{
									"indexed": false,
									"internalType": "int24",
									"name": "tickSpacing",
									"type": "int24"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "pool",
									"type": "address"
								}
							],
							"name": "PoolCreated",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint24",
									"name": "fee",
									"type": "uint24"
								}
							],
							"name": "createPool",
							"outputs": [
								{
									"internalType": "address",
									"name": "pool",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint24",
									"name": "fee",
									"type": "uint24"
								},
								{
									"internalType": "int24",
									"name": "tickSpacing",
									"type": "int24"
								}
							],
							"name": "enableFeeAmount",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint24",
									"name": "fee",
									"type": "uint24"
								}
							],
							"name": "feeAmountTickSpacing",
							"outputs": [
								{
									"internalType": "int24",
									"name": "",
									"type": "int24"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint24",
									"name": "fee",
									"type": "uint24"
								}
							],
							"name": "getPool",
							"outputs": [
								{
									"internalType": "address",
									"name": "pool",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								}
							],
							"name": "setOwner",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"FeeAmountEnabled(uint24,int24)": {
								"params": {
									"fee": "The enabled fee, denominated in hundredths of a bip",
									"tickSpacing": "The minimum number of ticks between initialized ticks for pools created with the given fee"
								}
							},
							"OwnerChanged(address,address)": {
								"params": {
									"newOwner": "The owner after the owner was changed",
									"oldOwner": "The owner before the owner was changed"
								}
							},
							"PoolCreated(address,address,uint24,int24,address)": {
								"params": {
									"fee": "The fee collected upon every swap in the pool, denominated in hundredths of a bip",
									"pool": "The address of the created pool",
									"tickSpacing": "The minimum number of ticks between initialized ticks",
									"token0": "The first token of the pool by address sort order",
									"token1": "The second token of the pool by address sort order"
								}
							}
						},
						"kind": "dev",
						"methods": {
							"createPool(address,address,uint24)": {
								"details": "tokenA and tokenB may be passed in either order: token0/token1 or token1/token0. tickSpacing is retrieved from the fee. The call will revert if the pool already exists, the fee is invalid, or the token arguments are invalid.",
								"params": {
									"fee": "The desired fee for the pool",
									"tokenA": "One of the two tokens in the desired pool",
									"tokenB": "The other of the two tokens in the desired pool"
								},
								"returns": {
									"pool": "The address of the newly created pool"
								}
							},
							"enableFeeAmount(uint24,int24)": {
								"details": "Fee amounts may never be removed once enabled",
								"params": {
									"fee": "The fee amount to enable, denominated in hundredths of a bip (i.e. 1e-6)",
									"tickSpacing": "The spacing between ticks to be enforced for all pools created with the given fee amount"
								}
							},
							"feeAmountTickSpacing(uint24)": {
								"details": "A fee amount can never be removed, so this value should be hard coded or cached in the calling context",
								"params": {
									"fee": "The enabled fee, denominated in hundredths of a bip. Returns 0 in case of unenabled fee"
								},
								"returns": {
									"_0": "The tick spacing"
								}
							},
							"getPool(address,address,uint24)": {
								"details": "tokenA and tokenB may be passed in either token0/token1 or token1/token0 order",
								"params": {
									"fee": "The fee collected upon every swap in the pool, denominated in hundredths of a bip",
									"tokenA": "The contract address of either token0 or token1",
									"tokenB": "The contract address of the other token"
								},
								"returns": {
									"pool": "The pool address"
								}
							},
							"owner()": {
								"details": "Can be changed by the current owner via setOwner",
								"returns": {
									"_0": "The address of the factory owner"
								}
							},
							"setOwner(address)": {
								"details": "Must be called by the current owner",
								"params": {
									"_owner": "The new owner of the factory"
								}
							}
						},
						"title": "The interface for the Uniswap V3 Factory",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"createPool(address,address,uint24)": "a1671295",
							"enableFeeAmount(uint24,int24)": "8a7c195f",
							"feeAmountTickSpacing(uint24)": "22afcccb",
							"getPool(address,address,uint24)": "1698ee82",
							"owner()": "8da5cb5b",
							"setOwner(address)": "13af4035"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"}],\"name\":\"FeeAmountEnabled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnerChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"PoolCreated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"}],\"name\":\"createPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"}],\"name\":\"enableFeeAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"}],\"name\":\"feeAmountTickSpacing\",\"outputs\":[{\"internalType\":\"int24\",\"name\":\"\",\"type\":\"int24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"}],\"name\":\"getPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"FeeAmountEnabled(uint24,int24)\":{\"params\":{\"fee\":\"The enabled fee, denominated in hundredths of a bip\",\"tickSpacing\":\"The minimum number of ticks between initialized ticks for pools created with the given fee\"}},\"OwnerChanged(address,address)\":{\"params\":{\"newOwner\":\"The owner after the owner was changed\",\"oldOwner\":\"The owner before the owner was changed\"}},\"PoolCreated(address,address,uint24,int24,address)\":{\"params\":{\"fee\":\"The fee collected upon every swap in the pool, denominated in hundredths of a bip\",\"pool\":\"The address of the created pool\",\"tickSpacing\":\"The minimum number of ticks between initialized ticks\",\"token0\":\"The first token of the pool by address sort order\",\"token1\":\"The second token of the pool by address sort order\"}}},\"kind\":\"dev\",\"methods\":{\"createPool(address,address,uint24)\":{\"details\":\"tokenA and tokenB may be passed in either order: token0/token1 or token1/token0. tickSpacing is retrieved from the fee. The call will revert if the pool already exists, the fee is invalid, or the token arguments are invalid.\",\"params\":{\"fee\":\"The desired fee for the pool\",\"tokenA\":\"One of the two tokens in the desired pool\",\"tokenB\":\"The other of the two tokens in the desired pool\"},\"returns\":{\"pool\":\"The address of the newly created pool\"}},\"enableFeeAmount(uint24,int24)\":{\"details\":\"Fee amounts may never be removed once enabled\",\"params\":{\"fee\":\"The fee amount to enable, denominated in hundredths of a bip (i.e. 1e-6)\",\"tickSpacing\":\"The spacing between ticks to be enforced for all pools created with the given fee amount\"}},\"feeAmountTickSpacing(uint24)\":{\"details\":\"A fee amount can never be removed, so this value should be hard coded or cached in the calling context\",\"params\":{\"fee\":\"The enabled fee, denominated in hundredths of a bip. Returns 0 in case of unenabled fee\"},\"returns\":{\"_0\":\"The tick spacing\"}},\"getPool(address,address,uint24)\":{\"details\":\"tokenA and tokenB may be passed in either token0/token1 or token1/token0 order\",\"params\":{\"fee\":\"The fee collected upon every swap in the pool, denominated in hundredths of a bip\",\"tokenA\":\"The contract address of either token0 or token1\",\"tokenB\":\"The contract address of the other token\"},\"returns\":{\"pool\":\"The pool address\"}},\"owner()\":{\"details\":\"Can be changed by the current owner via setOwner\",\"returns\":{\"_0\":\"The address of the factory owner\"}},\"setOwner(address)\":{\"details\":\"Must be called by the current owner\",\"params\":{\"_owner\":\"The new owner of the factory\"}}},\"title\":\"The interface for the Uniswap V3 Factory\",\"version\":1},\"userdoc\":{\"events\":{\"FeeAmountEnabled(uint24,int24)\":{\"notice\":\"Emitted when a new fee amount is enabled for pool creation via the factory\"},\"OwnerChanged(address,address)\":{\"notice\":\"Emitted when the owner of the factory is changed\"},\"PoolCreated(address,address,uint24,int24,address)\":{\"notice\":\"Emitted when a pool is created\"}},\"kind\":\"user\",\"methods\":{\"createPool(address,address,uint24)\":{\"notice\":\"Creates a pool for the given two tokens and fee\"},\"enableFeeAmount(uint24,int24)\":{\"notice\":\"Enables a fee amount with the given tickSpacing\"},\"feeAmountTickSpacing(uint24)\":{\"notice\":\"Returns the tick spacing for a given fee amount, if enabled, or 0 if not enabled\"},\"getPool(address,address,uint24)\":{\"notice\":\"Returns the pool address for a given pair of tokens and a fee, or address 0 if it does not exist\"},\"owner()\":{\"notice\":\"Returns the current owner of the factory\"},\"setOwner(address)\":{\"notice\":\"Updates the owner of the factory\"}},\"notice\":\"The Uniswap V3 Factory facilitates creation of Uniswap V3 pools and control over the protocol fees\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol\":\"IUniswapV3Factory\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol\":{\"keccak256\":\"0xcc3d0c93fc9ac0febbe09f941b465b57f750bcf3b48432da0b97dc289cfdc489\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b9379ad954680c44a0bc523b314ae4c4da735f9fe1d02aa56ea5bdba6f1136f2\",\"dweb:/ipfs/QmZXdgQNXKAckrXWz9R3mc47F1fvDvr28a2ewJrwNAw71B\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"events": {
							"FeeAmountEnabled(uint24,int24)": {
								"notice": "Emitted when a new fee amount is enabled for pool creation via the factory"
							},
							"OwnerChanged(address,address)": {
								"notice": "Emitted when the owner of the factory is changed"
							},
							"PoolCreated(address,address,uint24,int24,address)": {
								"notice": "Emitted when a pool is created"
							}
						},
						"kind": "user",
						"methods": {
							"createPool(address,address,uint24)": {
								"notice": "Creates a pool for the given two tokens and fee"
							},
							"enableFeeAmount(uint24,int24)": {
								"notice": "Enables a fee amount with the given tickSpacing"
							},
							"feeAmountTickSpacing(uint24)": {
								"notice": "Returns the tick spacing for a given fee amount, if enabled, or 0 if not enabled"
							},
							"getPool(address,address,uint24)": {
								"notice": "Returns the pool address for a given pair of tokens and a fee, or address 0 if it does not exist"
							},
							"owner()": {
								"notice": "Returns the current owner of the factory"
							},
							"setOwner(address)": {
								"notice": "Updates the owner of the factory"
							}
						},
						"notice": "The Uniswap V3 Factory facilitates creation of Uniswap V3 pools and control over the protocol fees",
						"version": 1
					}
				}
			},
			"@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol": {
				"IUniswapV3Pool": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "Burn",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"name": "Collect",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"name": "CollectProtocol",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "paid0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "paid1",
									"type": "uint256"
								}
							],
							"name": "Flash",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint16",
									"name": "observationCardinalityNextOld",
									"type": "uint16"
								},
								{
									"indexed": false,
									"internalType": "uint16",
									"name": "observationCardinalityNextNew",
									"type": "uint16"
								}
							],
							"name": "IncreaseObservationCardinalityNext",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								},
								{
									"indexed": false,
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								}
							],
							"name": "Initialize",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "Mint",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol0Old",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol1Old",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol0New",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol1New",
									"type": "uint8"
								}
							],
							"name": "SetFeeProtocol",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "int256",
									"name": "amount0",
									"type": "int256"
								},
								{
									"indexed": false,
									"internalType": "int256",
									"name": "amount1",
									"type": "int256"
								},
								{
									"indexed": false,
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "liquidity",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								}
							],
							"name": "Swap",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								}
							],
							"name": "burn",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"internalType": "uint128",
									"name": "amount0Requested",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1Requested",
									"type": "uint128"
								}
							],
							"name": "collect",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint128",
									"name": "amount0Requested",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1Requested",
									"type": "uint128"
								}
							],
							"name": "collectProtocol",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "fee",
							"outputs": [
								{
									"internalType": "uint24",
									"name": "",
									"type": "uint24"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "feeGrowthGlobal0X128",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "feeGrowthGlobal1X128",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "flash",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "observationCardinalityNext",
									"type": "uint16"
								}
							],
							"name": "increaseObservationCardinalityNext",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "liquidity",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "maxLiquidityPerTick",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "mint",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "observations",
							"outputs": [
								{
									"internalType": "uint32",
									"name": "blockTimestamp",
									"type": "uint32"
								},
								{
									"internalType": "int56",
									"name": "tickCumulative",
									"type": "int56"
								},
								{
									"internalType": "uint160",
									"name": "secondsPerLiquidityCumulativeX128",
									"type": "uint160"
								},
								{
									"internalType": "bool",
									"name": "initialized",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint32[]",
									"name": "secondsAgos",
									"type": "uint32[]"
								}
							],
							"name": "observe",
							"outputs": [
								{
									"internalType": "int56[]",
									"name": "tickCumulatives",
									"type": "int56[]"
								},
								{
									"internalType": "uint160[]",
									"name": "secondsPerLiquidityCumulativeX128s",
									"type": "uint160[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "key",
									"type": "bytes32"
								}
							],
							"name": "positions",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "_liquidity",
									"type": "uint128"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthInside0LastX128",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthInside1LastX128",
									"type": "uint256"
								},
								{
									"internalType": "uint128",
									"name": "tokensOwed0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "tokensOwed1",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "protocolFees",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "token0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "token1",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint8",
									"name": "feeProtocol0",
									"type": "uint8"
								},
								{
									"internalType": "uint8",
									"name": "feeProtocol1",
									"type": "uint8"
								}
							],
							"name": "setFeeProtocol",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "slot0",
							"outputs": [
								{
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								},
								{
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								},
								{
									"internalType": "uint16",
									"name": "observationIndex",
									"type": "uint16"
								},
								{
									"internalType": "uint16",
									"name": "observationCardinality",
									"type": "uint16"
								},
								{
									"internalType": "uint16",
									"name": "observationCardinalityNext",
									"type": "uint16"
								},
								{
									"internalType": "uint8",
									"name": "feeProtocol",
									"type": "uint8"
								},
								{
									"internalType": "bool",
									"name": "unlocked",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								}
							],
							"name": "snapshotCumulativesInside",
							"outputs": [
								{
									"internalType": "int56",
									"name": "tickCumulativeInside",
									"type": "int56"
								},
								{
									"internalType": "uint160",
									"name": "secondsPerLiquidityInsideX128",
									"type": "uint160"
								},
								{
									"internalType": "uint32",
									"name": "secondsInside",
									"type": "uint32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "zeroForOne",
									"type": "bool"
								},
								{
									"internalType": "int256",
									"name": "amountSpecified",
									"type": "int256"
								},
								{
									"internalType": "uint160",
									"name": "sqrtPriceLimitX96",
									"type": "uint160"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "swap",
							"outputs": [
								{
									"internalType": "int256",
									"name": "amount0",
									"type": "int256"
								},
								{
									"internalType": "int256",
									"name": "amount1",
									"type": "int256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int16",
									"name": "wordPosition",
									"type": "int16"
								}
							],
							"name": "tickBitmap",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tickSpacing",
							"outputs": [
								{
									"internalType": "int24",
									"name": "",
									"type": "int24"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								}
							],
							"name": "ticks",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "liquidityGross",
									"type": "uint128"
								},
								{
									"internalType": "int128",
									"name": "liquidityNet",
									"type": "int128"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthOutside0X128",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthOutside1X128",
									"type": "uint256"
								},
								{
									"internalType": "int56",
									"name": "tickCumulativeOutside",
									"type": "int56"
								},
								{
									"internalType": "uint160",
									"name": "secondsPerLiquidityOutsideX128",
									"type": "uint160"
								},
								{
									"internalType": "uint32",
									"name": "secondsOutside",
									"type": "uint32"
								},
								{
									"internalType": "bool",
									"name": "initialized",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token0",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token1",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "The pool interface is broken up into many smaller pieces",
						"kind": "dev",
						"methods": {
							"burn(int24,int24,uint128)": {
								"details": "Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0Fees must be collected separately via a call to #collect",
								"params": {
									"amount": "How much liquidity to burn",
									"tickLower": "The lower tick of the position for which to burn liquidity",
									"tickUpper": "The upper tick of the position for which to burn liquidity"
								},
								"returns": {
									"amount0": "The amount of token0 sent to the recipient",
									"amount1": "The amount of token1 sent to the recipient"
								}
							},
							"collect(address,int24,int24,uint128,uint128)": {
								"details": "Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity. Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.",
								"params": {
									"amount0Requested": "How much token0 should be withdrawn from the fees owed",
									"amount1Requested": "How much token1 should be withdrawn from the fees owed",
									"recipient": "The address which should receive the fees collected",
									"tickLower": "The lower tick of the position for which to collect fees",
									"tickUpper": "The upper tick of the position for which to collect fees"
								},
								"returns": {
									"amount0": "The amount of fees collected in token0",
									"amount1": "The amount of fees collected in token1"
								}
							},
							"collectProtocol(address,uint128,uint128)": {
								"params": {
									"amount0Requested": "The maximum amount of token0 to send, can be 0 to collect fees in only token1",
									"amount1Requested": "The maximum amount of token1 to send, can be 0 to collect fees in only token0",
									"recipient": "The address to which collected protocol fees should be sent"
								},
								"returns": {
									"amount0": "The protocol fee collected in token0",
									"amount1": "The protocol fee collected in token1"
								}
							},
							"factory()": {
								"returns": {
									"_0": "The contract address"
								}
							},
							"fee()": {
								"returns": {
									"_0": "The fee"
								}
							},
							"feeGrowthGlobal0X128()": {
								"details": "This value can overflow the uint256"
							},
							"feeGrowthGlobal1X128()": {
								"details": "This value can overflow the uint256"
							},
							"flash(address,uint256,uint256,bytes)": {
								"details": "The caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallbackCan be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling with 0 amount{0,1} and sending the donation amount(s) from the callback",
								"params": {
									"amount0": "The amount of token0 to send",
									"amount1": "The amount of token1 to send",
									"data": "Any data to be passed through to the callback",
									"recipient": "The address which will receive the token0 and token1 amounts"
								}
							},
							"increaseObservationCardinalityNext(uint16)": {
								"details": "This method is no-op if the pool already has an observationCardinalityNext greater than or equal to the input observationCardinalityNext.",
								"params": {
									"observationCardinalityNext": "The desired minimum number of observations for the pool to store"
								}
							},
							"initialize(uint160)": {
								"details": "Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value",
								"params": {
									"sqrtPriceX96": "the initial sqrt price of the pool as a Q64.96"
								}
							},
							"liquidity()": {
								"details": "This value has no relationship to the total liquidity across all ticks"
							},
							"maxLiquidityPerTick()": {
								"details": "This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool",
								"returns": {
									"_0": "The max amount of liquidity per tick"
								}
							},
							"mint(address,int24,int24,uint128,bytes)": {
								"details": "The caller of this method receives a callback in the form of IUniswapV3MintCallback#uniswapV3MintCallback in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends on tickLower, tickUpper, the amount of liquidity, and the current price.",
								"params": {
									"amount": "The amount of liquidity to mint",
									"data": "Any data that should be passed through to the callback",
									"recipient": "The address for which the liquidity will be created",
									"tickLower": "The lower tick of the position in which to add liquidity",
									"tickUpper": "The upper tick of the position in which to add liquidity"
								},
								"returns": {
									"amount0": "The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback",
									"amount1": "The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback"
								}
							},
							"observations(uint256)": {
								"details": "You most likely want to use #observe() instead of this method to get an observation as of some amount of time ago, rather than at a specific index in the array.",
								"params": {
									"index": "The element of the observations array to fetch"
								},
								"returns": {
									"blockTimestamp": "The timestamp of the observation, Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp, Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp, Returns initialized whether the observation has been initialized and the values are safe to use"
								}
							},
							"observe(uint32[])": {
								"details": "To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick, you must call it with secondsAgos = [3600, 0].The time weighted average tick represents the geometric time weighted average price of the pool, in log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.",
								"params": {
									"secondsAgos": "From how long ago each cumulative tick and liquidity value should be returned"
								},
								"returns": {
									"secondsPerLiquidityCumulativeX128s": "Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block timestamp",
									"tickCumulatives": "Cumulative tick values as of each `secondsAgos` from the current block timestamp"
								}
							},
							"positions(bytes32)": {
								"params": {
									"key": "The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper"
								},
								"returns": {
									"_liquidity": "The amount of liquidity in the position, Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke, Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke, Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke, Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke"
								}
							},
							"protocolFees()": {
								"details": "Protocol fees will never exceed uint128 max in either token"
							},
							"setFeeProtocol(uint8,uint8)": {
								"params": {
									"feeProtocol0": "new protocol fee for token0 of the pool",
									"feeProtocol1": "new protocol fee for token1 of the pool"
								}
							},
							"slot0()": {
								"returns": {
									"sqrtPriceX96": "The current price of the pool as a sqrt(token1/token0) Q64.96 value tick The current tick of the pool, i.e. according to the last tick transition that was run. This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick boundary. observationIndex The index of the last oracle observation that was written, observationCardinality The current maximum number of observations stored in the pool, observationCardinalityNext The next maximum number of observations, to be updated when the observation. feeProtocol The protocol fee for both tokens of the pool. Encoded as two 4 bit values, where the protocol fee of token1 is shifted 4 bits and the protocol fee of token0 is the lower 4 bits. Used as the denominator of a fraction of the swap fee, e.g. 4 means 1/4th of the swap fee. unlocked Whether the pool is currently locked to reentrancy"
								}
							},
							"snapshotCumulativesInside(int24,int24)": {
								"details": "Snapshots must only be compared to other snapshots, taken over a period for which a position existed. I.e., snapshots cannot be compared if a position is not held for the entire period between when the first snapshot is taken and the second snapshot is taken.",
								"params": {
									"tickLower": "The lower tick of the range",
									"tickUpper": "The upper tick of the range"
								},
								"returns": {
									"secondsInside": "The snapshot of seconds per liquidity for the range",
									"secondsPerLiquidityInsideX128": "The snapshot of seconds per liquidity for the range",
									"tickCumulativeInside": "The snapshot of the tick accumulator for the range"
								}
							},
							"swap(address,bool,int256,uint160,bytes)": {
								"details": "The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback",
								"params": {
									"amountSpecified": "The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)",
									"data": "Any data to be passed through to the callback",
									"recipient": "The address to receive the output of the swap",
									"sqrtPriceLimitX96": "The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this value after the swap. If one for zero, the price cannot be greater than this value after the swap",
									"zeroForOne": "The direction of the swap, true for token0 to token1, false for token1 to token0"
								},
								"returns": {
									"amount0": "The delta of the balance of token0 of the pool, exact when negative, minimum when positive",
									"amount1": "The delta of the balance of token1 of the pool, exact when negative, minimum when positive"
								}
							},
							"tickSpacing()": {
								"details": "Ticks can only be used at multiples of this value, minimum of 1 and always positive e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ... This value is an int24 to avoid casting even though it is always positive.",
								"returns": {
									"_0": "The tick spacing"
								}
							},
							"ticks(int24)": {
								"params": {
									"tick": "The tick to look up"
								},
								"returns": {
									"liquidityGross": "the total amount of position liquidity that uses the pool either as tick lower or tick upper, liquidityNet how much liquidity changes when the pool price crosses the tick, feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0, feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1, tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick, secondsOutside the seconds spent on the other side of the tick from the current tick, initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false. Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0. In addition, these values are only relative and must be used only in comparison to previous snapshots for a specific position."
								}
							},
							"token0()": {
								"returns": {
									"_0": "The token contract address"
								}
							},
							"token1()": {
								"returns": {
									"_0": "The token contract address"
								}
							}
						},
						"title": "The interface for a Uniswap V3 Pool",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"burn(int24,int24,uint128)": "a34123a7",
							"collect(address,int24,int24,uint128,uint128)": "4f1eb3d8",
							"collectProtocol(address,uint128,uint128)": "85b66729",
							"factory()": "c45a0155",
							"fee()": "ddca3f43",
							"feeGrowthGlobal0X128()": "f3058399",
							"feeGrowthGlobal1X128()": "46141319",
							"flash(address,uint256,uint256,bytes)": "490e6cbc",
							"increaseObservationCardinalityNext(uint16)": "32148f67",
							"initialize(uint160)": "f637731d",
							"liquidity()": "1a686502",
							"maxLiquidityPerTick()": "70cf754a",
							"mint(address,int24,int24,uint128,bytes)": "3c8a7d8d",
							"observations(uint256)": "252c09d7",
							"observe(uint32[])": "883bdbfd",
							"positions(bytes32)": "514ea4bf",
							"protocolFees()": "1ad8b03b",
							"setFeeProtocol(uint8,uint8)": "8206a4d1",
							"slot0()": "3850c7bd",
							"snapshotCumulativesInside(int24,int24)": "a38807f2",
							"swap(address,bool,int256,uint160,bytes)": "128acb08",
							"tickBitmap(int16)": "5339c296",
							"tickSpacing()": "d0c93a7c",
							"ticks(int24)": "f30dba93",
							"token0()": "0dfe1681",
							"token1()": "d21220a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"name\":\"Collect\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"name\":\"CollectProtocol\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paid0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paid1\",\"type\":\"uint256\"}],\"name\":\"Flash\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"observationCardinalityNextOld\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"observationCardinalityNextNew\",\"type\":\"uint16\"}],\"name\":\"IncreaseObservationCardinalityNext\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"Initialize\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol0Old\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol1Old\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol0New\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol1New\",\"type\":\"uint8\"}],\"name\":\"SetFeeProtocol\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount0\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount1\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"Swap\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount0Requested\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1Requested\",\"type\":\"uint128\"}],\"name\":\"collect\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"amount0Requested\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1Requested\",\"type\":\"uint128\"}],\"name\":\"collectProtocol\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fee\",\"outputs\":[{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeGrowthGlobal0X128\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeGrowthGlobal1X128\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"flash\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"observationCardinalityNext\",\"type\":\"uint16\"}],\"name\":\"increaseObservationCardinalityNext\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidity\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxLiquidityPerTick\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"observations\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"blockTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"int56\",\"name\":\"tickCumulative\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityCumulativeX128\",\"type\":\"uint160\"},{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32[]\",\"name\":\"secondsAgos\",\"type\":\"uint32[]\"}],\"name\":\"observe\",\"outputs\":[{\"internalType\":\"int56[]\",\"name\":\"tickCumulatives\",\"type\":\"int56[]\"},{\"internalType\":\"uint160[]\",\"name\":\"secondsPerLiquidityCumulativeX128s\",\"type\":\"uint160[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"}],\"name\":\"positions\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"_liquidity\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside0LastX128\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside1LastX128\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"tokensOwed0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"tokensOwed1\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"protocolFees\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"token0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"token1\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"feeProtocol0\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"feeProtocol1\",\"type\":\"uint8\"}],\"name\":\"setFeeProtocol\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"slot0\",\"outputs\":[{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"},{\"internalType\":\"uint16\",\"name\":\"observationIndex\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"observationCardinality\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"observationCardinalityNext\",\"type\":\"uint16\"},{\"internalType\":\"uint8\",\"name\":\"feeProtocol\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"unlocked\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"}],\"name\":\"snapshotCumulativesInside\",\"outputs\":[{\"internalType\":\"int56\",\"name\":\"tickCumulativeInside\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityInsideX128\",\"type\":\"uint160\"},{\"internalType\":\"uint32\",\"name\":\"secondsInside\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"zeroForOne\",\"type\":\"bool\"},{\"internalType\":\"int256\",\"name\":\"amountSpecified\",\"type\":\"int256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"swap\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"amount0\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1\",\"type\":\"int256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int16\",\"name\":\"wordPosition\",\"type\":\"int16\"}],\"name\":\"tickBitmap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tickSpacing\",\"outputs\":[{\"internalType\":\"int24\",\"name\":\"\",\"type\":\"int24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"ticks\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"liquidityGross\",\"type\":\"uint128\"},{\"internalType\":\"int128\",\"name\":\"liquidityNet\",\"type\":\"int128\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthOutside0X128\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthOutside1X128\",\"type\":\"uint256\"},{\"internalType\":\"int56\",\"name\":\"tickCumulativeOutside\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityOutsideX128\",\"type\":\"uint160\"},{\"internalType\":\"uint32\",\"name\":\"secondsOutside\",\"type\":\"uint32\"},{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token0\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"The pool interface is broken up into many smaller pieces\",\"kind\":\"dev\",\"methods\":{\"burn(int24,int24,uint128)\":{\"details\":\"Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0Fees must be collected separately via a call to #collect\",\"params\":{\"amount\":\"How much liquidity to burn\",\"tickLower\":\"The lower tick of the position for which to burn liquidity\",\"tickUpper\":\"The upper tick of the position for which to burn liquidity\"},\"returns\":{\"amount0\":\"The amount of token0 sent to the recipient\",\"amount1\":\"The amount of token1 sent to the recipient\"}},\"collect(address,int24,int24,uint128,uint128)\":{\"details\":\"Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity. Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.\",\"params\":{\"amount0Requested\":\"How much token0 should be withdrawn from the fees owed\",\"amount1Requested\":\"How much token1 should be withdrawn from the fees owed\",\"recipient\":\"The address which should receive the fees collected\",\"tickLower\":\"The lower tick of the position for which to collect fees\",\"tickUpper\":\"The upper tick of the position for which to collect fees\"},\"returns\":{\"amount0\":\"The amount of fees collected in token0\",\"amount1\":\"The amount of fees collected in token1\"}},\"collectProtocol(address,uint128,uint128)\":{\"params\":{\"amount0Requested\":\"The maximum amount of token0 to send, can be 0 to collect fees in only token1\",\"amount1Requested\":\"The maximum amount of token1 to send, can be 0 to collect fees in only token0\",\"recipient\":\"The address to which collected protocol fees should be sent\"},\"returns\":{\"amount0\":\"The protocol fee collected in token0\",\"amount1\":\"The protocol fee collected in token1\"}},\"factory()\":{\"returns\":{\"_0\":\"The contract address\"}},\"fee()\":{\"returns\":{\"_0\":\"The fee\"}},\"feeGrowthGlobal0X128()\":{\"details\":\"This value can overflow the uint256\"},\"feeGrowthGlobal1X128()\":{\"details\":\"This value can overflow the uint256\"},\"flash(address,uint256,uint256,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallbackCan be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling with 0 amount{0,1} and sending the donation amount(s) from the callback\",\"params\":{\"amount0\":\"The amount of token0 to send\",\"amount1\":\"The amount of token1 to send\",\"data\":\"Any data to be passed through to the callback\",\"recipient\":\"The address which will receive the token0 and token1 amounts\"}},\"increaseObservationCardinalityNext(uint16)\":{\"details\":\"This method is no-op if the pool already has an observationCardinalityNext greater than or equal to the input observationCardinalityNext.\",\"params\":{\"observationCardinalityNext\":\"The desired minimum number of observations for the pool to store\"}},\"initialize(uint160)\":{\"details\":\"Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value\",\"params\":{\"sqrtPriceX96\":\"the initial sqrt price of the pool as a Q64.96\"}},\"liquidity()\":{\"details\":\"This value has no relationship to the total liquidity across all ticks\"},\"maxLiquidityPerTick()\":{\"details\":\"This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool\",\"returns\":{\"_0\":\"The max amount of liquidity per tick\"}},\"mint(address,int24,int24,uint128,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3MintCallback#uniswapV3MintCallback in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends on tickLower, tickUpper, the amount of liquidity, and the current price.\",\"params\":{\"amount\":\"The amount of liquidity to mint\",\"data\":\"Any data that should be passed through to the callback\",\"recipient\":\"The address for which the liquidity will be created\",\"tickLower\":\"The lower tick of the position in which to add liquidity\",\"tickUpper\":\"The upper tick of the position in which to add liquidity\"},\"returns\":{\"amount0\":\"The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback\",\"amount1\":\"The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback\"}},\"observations(uint256)\":{\"details\":\"You most likely want to use #observe() instead of this method to get an observation as of some amount of time ago, rather than at a specific index in the array.\",\"params\":{\"index\":\"The element of the observations array to fetch\"},\"returns\":{\"blockTimestamp\":\"The timestamp of the observation, Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp, Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp, Returns initialized whether the observation has been initialized and the values are safe to use\"}},\"observe(uint32[])\":{\"details\":\"To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick, you must call it with secondsAgos = [3600, 0].The time weighted average tick represents the geometric time weighted average price of the pool, in log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.\",\"params\":{\"secondsAgos\":\"From how long ago each cumulative tick and liquidity value should be returned\"},\"returns\":{\"secondsPerLiquidityCumulativeX128s\":\"Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block timestamp\",\"tickCumulatives\":\"Cumulative tick values as of each `secondsAgos` from the current block timestamp\"}},\"positions(bytes32)\":{\"params\":{\"key\":\"The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper\"},\"returns\":{\"_liquidity\":\"The amount of liquidity in the position, Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke, Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke, Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke, Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke\"}},\"protocolFees()\":{\"details\":\"Protocol fees will never exceed uint128 max in either token\"},\"setFeeProtocol(uint8,uint8)\":{\"params\":{\"feeProtocol0\":\"new protocol fee for token0 of the pool\",\"feeProtocol1\":\"new protocol fee for token1 of the pool\"}},\"slot0()\":{\"returns\":{\"sqrtPriceX96\":\"The current price of the pool as a sqrt(token1/token0) Q64.96 value tick The current tick of the pool, i.e. according to the last tick transition that was run. This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick boundary. observationIndex The index of the last oracle observation that was written, observationCardinality The current maximum number of observations stored in the pool, observationCardinalityNext The next maximum number of observations, to be updated when the observation. feeProtocol The protocol fee for both tokens of the pool. Encoded as two 4 bit values, where the protocol fee of token1 is shifted 4 bits and the protocol fee of token0 is the lower 4 bits. Used as the denominator of a fraction of the swap fee, e.g. 4 means 1/4th of the swap fee. unlocked Whether the pool is currently locked to reentrancy\"}},\"snapshotCumulativesInside(int24,int24)\":{\"details\":\"Snapshots must only be compared to other snapshots, taken over a period for which a position existed. I.e., snapshots cannot be compared if a position is not held for the entire period between when the first snapshot is taken and the second snapshot is taken.\",\"params\":{\"tickLower\":\"The lower tick of the range\",\"tickUpper\":\"The upper tick of the range\"},\"returns\":{\"secondsInside\":\"The snapshot of seconds per liquidity for the range\",\"secondsPerLiquidityInsideX128\":\"The snapshot of seconds per liquidity for the range\",\"tickCumulativeInside\":\"The snapshot of the tick accumulator for the range\"}},\"swap(address,bool,int256,uint160,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback\",\"params\":{\"amountSpecified\":\"The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)\",\"data\":\"Any data to be passed through to the callback\",\"recipient\":\"The address to receive the output of the swap\",\"sqrtPriceLimitX96\":\"The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this value after the swap. If one for zero, the price cannot be greater than this value after the swap\",\"zeroForOne\":\"The direction of the swap, true for token0 to token1, false for token1 to token0\"},\"returns\":{\"amount0\":\"The delta of the balance of token0 of the pool, exact when negative, minimum when positive\",\"amount1\":\"The delta of the balance of token1 of the pool, exact when negative, minimum when positive\"}},\"tickSpacing()\":{\"details\":\"Ticks can only be used at multiples of this value, minimum of 1 and always positive e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ... This value is an int24 to avoid casting even though it is always positive.\",\"returns\":{\"_0\":\"The tick spacing\"}},\"ticks(int24)\":{\"params\":{\"tick\":\"The tick to look up\"},\"returns\":{\"liquidityGross\":\"the total amount of position liquidity that uses the pool either as tick lower or tick upper, liquidityNet how much liquidity changes when the pool price crosses the tick, feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0, feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1, tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick, secondsOutside the seconds spent on the other side of the tick from the current tick, initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false. Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0. In addition, these values are only relative and must be used only in comparison to previous snapshots for a specific position.\"}},\"token0()\":{\"returns\":{\"_0\":\"The token contract address\"}},\"token1()\":{\"returns\":{\"_0\":\"The token contract address\"}}},\"title\":\"The interface for a Uniswap V3 Pool\",\"version\":1},\"userdoc\":{\"events\":{\"Burn(address,int24,int24,uint128,uint256,uint256)\":{\"notice\":\"Emitted when a position's liquidity is removed\"},\"Collect(address,address,int24,int24,uint128,uint128)\":{\"notice\":\"Emitted when fees are collected by the owner of a position\"},\"CollectProtocol(address,address,uint128,uint128)\":{\"notice\":\"Emitted when the collected protocol fees are withdrawn by the factory owner\"},\"Flash(address,address,uint256,uint256,uint256,uint256)\":{\"notice\":\"Emitted by the pool for any flashes of token0/token1\"},\"IncreaseObservationCardinalityNext(uint16,uint16)\":{\"notice\":\"Emitted by the pool for increases to the number of observations that can be stored\"},\"Initialize(uint160,int24)\":{\"notice\":\"Emitted exactly once by a pool when #initialize is first called on the pool\"},\"Mint(address,address,int24,int24,uint128,uint256,uint256)\":{\"notice\":\"Emitted when liquidity is minted for a given position\"},\"SetFeeProtocol(uint8,uint8,uint8,uint8)\":{\"notice\":\"Emitted when the protocol fee is changed by the pool\"},\"Swap(address,address,int256,int256,uint160,uint128,int24)\":{\"notice\":\"Emitted by the pool for any swaps between token0 and token1\"}},\"kind\":\"user\",\"methods\":{\"burn(int24,int24,uint128)\":{\"notice\":\"Burn liquidity from the sender and account tokens owed for the liquidity to the position\"},\"collect(address,int24,int24,uint128,uint128)\":{\"notice\":\"Collects tokens owed to a position\"},\"collectProtocol(address,uint128,uint128)\":{\"notice\":\"Collect the protocol fee accrued to the pool\"},\"factory()\":{\"notice\":\"The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface\"},\"fee()\":{\"notice\":\"The pool's fee in hundredths of a bip, i.e. 1e-6\"},\"feeGrowthGlobal0X128()\":{\"notice\":\"The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool\"},\"feeGrowthGlobal1X128()\":{\"notice\":\"The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool\"},\"flash(address,uint256,uint256,bytes)\":{\"notice\":\"Receive token0 and/or token1 and pay it back, plus a fee, in the callback\"},\"increaseObservationCardinalityNext(uint16)\":{\"notice\":\"Increase the maximum number of price and liquidity observations that this pool will store\"},\"initialize(uint160)\":{\"notice\":\"Sets the initial price for the pool\"},\"liquidity()\":{\"notice\":\"The currently in range liquidity available to the pool\"},\"maxLiquidityPerTick()\":{\"notice\":\"The maximum amount of position liquidity that can use any tick in the range\"},\"mint(address,int24,int24,uint128,bytes)\":{\"notice\":\"Adds liquidity for the given recipient/tickLower/tickUpper position\"},\"observations(uint256)\":{\"notice\":\"Returns data about a specific observation index\"},\"observe(uint32[])\":{\"notice\":\"Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp\"},\"positions(bytes32)\":{\"notice\":\"Returns the information about a position by the position's key\"},\"protocolFees()\":{\"notice\":\"The amounts of token0 and token1 that are owed to the protocol\"},\"setFeeProtocol(uint8,uint8)\":{\"notice\":\"Set the denominator of the protocol's % share of the fees\"},\"slot0()\":{\"notice\":\"The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas when accessed externally.\"},\"snapshotCumulativesInside(int24,int24)\":{\"notice\":\"Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range\"},\"swap(address,bool,int256,uint160,bytes)\":{\"notice\":\"Swap token0 for token1, or token1 for token0\"},\"tickBitmap(int16)\":{\"notice\":\"Returns 256 packed tick initialized boolean values. See TickBitmap for more information\"},\"tickSpacing()\":{\"notice\":\"The pool tick spacing\"},\"ticks(int24)\":{\"notice\":\"Look up information about a specific tick in the pool\"},\"token0()\":{\"notice\":\"The first of the two tokens of the pool, sorted by address\"},\"token1()\":{\"notice\":\"The second of the two tokens of the pool, sorted by address\"}},\"notice\":\"A Uniswap pool facilitates swapping and automated market making between any two assets that strictly conform to the ERC20 specification\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol\":\"IUniswapV3Pool\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol\":{\"keccak256\":\"0xfe6113d518466cd6652c85b111e01f33eb62157f49ae5ed7d5a3947a2044adb1\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://1c42b9e6f5902ac38dd43e25750939baa7e0c1425dc75afd717c4412731065d5\",\"dweb:/ipfs/QmWaoacnzsucTvBME2o7YgZBZMhaHv7fkj83htHMVWJKWh\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol\":{\"keccak256\":\"0x9453dd0e7442188667d01d9b65de3f1e14e9511ff3e303179a15f6fc267f7634\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://982f4328f956c3e60e67501e759eb292ac487f76460c774c50e9ae4fcc92aae5\",\"dweb:/ipfs/QmRnzEDsaqtd9PJEVcgQi7p5aV5pMSvRUoGZJAdwFUJxgZ\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol\":{\"keccak256\":\"0xe603ac5b17ecdee73ba2b27efdf386c257a19c14206e87eee77e2017b742d9e5\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://8febc9bdb399a4d94bb89f5377732652e2400e4a8dee808201ade6848f9004e7\",\"dweb:/ipfs/QmaKDqYYFU4d2W2iN77aDHptfbFmYZRrMYXHeGpJmM8C1c\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol\":{\"keccak256\":\"0x8071514d0fe5d17d6fbd31c191cdfb703031c24e0ece3621d88ab10e871375cd\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://d0b571930cc7488b1d546a7e9cea7c52d8b3c4e207da657ed0e0db7343b8cd03\",\"dweb:/ipfs/QmaGK6vVwB95QSTR1XMYvrh7ivYAYZxi3fD7v6VMA4jZ39\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol\":{\"keccak256\":\"0xf6e5d2cd1139c4c276bdbc8e1d2b256e456c866a91f1b868da265c6d2685c3f7\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b99c8c9ae8e27ee6559e5866bea82cbc9ffc8247f8d15b7422a4deb287d4d047\",\"dweb:/ipfs/QmfL8gaqt3ffAnm6nVj5ksuNpLygXuL3xq5VBqrkwC2JJ3\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol\":{\"keccak256\":\"0x759b78a2918af9e99e246dc3af084f654e48ef32bb4e4cb8a966aa3dcaece235\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://64144fb96e1c7fdba87305acadb98a198d26a3d46c097cb3a666e567f6f29735\",\"dweb:/ipfs/QmUnWVwN9FKB9uV5Pr8YfLpWZnYM2DENnRMaadZ492JS9u\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol\":{\"keccak256\":\"0x852dc1f5df7dcf7f11e7bb3eed79f0cea72ad4b25f6a9d2c35aafb48925fd49f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://ed63907c38ff36b0e22bc9ffc53e791ea74f0d4f0e7c257fdfb5aaf8825b1f0f\",\"dweb:/ipfs/QmSQrckghEjs6HVsA5GVgpNpZWvTXMY5eQLF7cN6deFeEg\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"events": {
							"Burn(address,int24,int24,uint128,uint256,uint256)": {
								"notice": "Emitted when a position's liquidity is removed"
							},
							"Collect(address,address,int24,int24,uint128,uint128)": {
								"notice": "Emitted when fees are collected by the owner of a position"
							},
							"CollectProtocol(address,address,uint128,uint128)": {
								"notice": "Emitted when the collected protocol fees are withdrawn by the factory owner"
							},
							"Flash(address,address,uint256,uint256,uint256,uint256)": {
								"notice": "Emitted by the pool for any flashes of token0/token1"
							},
							"IncreaseObservationCardinalityNext(uint16,uint16)": {
								"notice": "Emitted by the pool for increases to the number of observations that can be stored"
							},
							"Initialize(uint160,int24)": {
								"notice": "Emitted exactly once by a pool when #initialize is first called on the pool"
							},
							"Mint(address,address,int24,int24,uint128,uint256,uint256)": {
								"notice": "Emitted when liquidity is minted for a given position"
							},
							"SetFeeProtocol(uint8,uint8,uint8,uint8)": {
								"notice": "Emitted when the protocol fee is changed by the pool"
							},
							"Swap(address,address,int256,int256,uint160,uint128,int24)": {
								"notice": "Emitted by the pool for any swaps between token0 and token1"
							}
						},
						"kind": "user",
						"methods": {
							"burn(int24,int24,uint128)": {
								"notice": "Burn liquidity from the sender and account tokens owed for the liquidity to the position"
							},
							"collect(address,int24,int24,uint128,uint128)": {
								"notice": "Collects tokens owed to a position"
							},
							"collectProtocol(address,uint128,uint128)": {
								"notice": "Collect the protocol fee accrued to the pool"
							},
							"factory()": {
								"notice": "The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface"
							},
							"fee()": {
								"notice": "The pool's fee in hundredths of a bip, i.e. 1e-6"
							},
							"feeGrowthGlobal0X128()": {
								"notice": "The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool"
							},
							"feeGrowthGlobal1X128()": {
								"notice": "The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool"
							},
							"flash(address,uint256,uint256,bytes)": {
								"notice": "Receive token0 and/or token1 and pay it back, plus a fee, in the callback"
							},
							"increaseObservationCardinalityNext(uint16)": {
								"notice": "Increase the maximum number of price and liquidity observations that this pool will store"
							},
							"initialize(uint160)": {
								"notice": "Sets the initial price for the pool"
							},
							"liquidity()": {
								"notice": "The currently in range liquidity available to the pool"
							},
							"maxLiquidityPerTick()": {
								"notice": "The maximum amount of position liquidity that can use any tick in the range"
							},
							"mint(address,int24,int24,uint128,bytes)": {
								"notice": "Adds liquidity for the given recipient/tickLower/tickUpper position"
							},
							"observations(uint256)": {
								"notice": "Returns data about a specific observation index"
							},
							"observe(uint32[])": {
								"notice": "Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp"
							},
							"positions(bytes32)": {
								"notice": "Returns the information about a position by the position's key"
							},
							"protocolFees()": {
								"notice": "The amounts of token0 and token1 that are owed to the protocol"
							},
							"setFeeProtocol(uint8,uint8)": {
								"notice": "Set the denominator of the protocol's % share of the fees"
							},
							"slot0()": {
								"notice": "The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas when accessed externally."
							},
							"snapshotCumulativesInside(int24,int24)": {
								"notice": "Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range"
							},
							"swap(address,bool,int256,uint160,bytes)": {
								"notice": "Swap token0 for token1, or token1 for token0"
							},
							"tickBitmap(int16)": {
								"notice": "Returns 256 packed tick initialized boolean values. See TickBitmap for more information"
							},
							"tickSpacing()": {
								"notice": "The pool tick spacing"
							},
							"ticks(int24)": {
								"notice": "Look up information about a specific tick in the pool"
							},
							"token0()": {
								"notice": "The first of the two tokens of the pool, sorted by address"
							},
							"token1()": {
								"notice": "The second of the two tokens of the pool, sorted by address"
							}
						},
						"notice": "A Uniswap pool facilitates swapping and automated market making between any two assets that strictly conform to the ERC20 specification",
						"version": 1
					}
				}
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol": {
				"IUniswapV3PoolActions": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								}
							],
							"name": "burn",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"internalType": "uint128",
									"name": "amount0Requested",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1Requested",
									"type": "uint128"
								}
							],
							"name": "collect",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "flash",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "observationCardinalityNext",
									"type": "uint16"
								}
							],
							"name": "increaseObservationCardinalityNext",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "mint",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "zeroForOne",
									"type": "bool"
								},
								{
									"internalType": "int256",
									"name": "amountSpecified",
									"type": "int256"
								},
								{
									"internalType": "uint160",
									"name": "sqrtPriceLimitX96",
									"type": "uint160"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "swap",
							"outputs": [
								{
									"internalType": "int256",
									"name": "amount0",
									"type": "int256"
								},
								{
									"internalType": "int256",
									"name": "amount1",
									"type": "int256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"burn(int24,int24,uint128)": {
								"details": "Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0Fees must be collected separately via a call to #collect",
								"params": {
									"amount": "How much liquidity to burn",
									"tickLower": "The lower tick of the position for which to burn liquidity",
									"tickUpper": "The upper tick of the position for which to burn liquidity"
								},
								"returns": {
									"amount0": "The amount of token0 sent to the recipient",
									"amount1": "The amount of token1 sent to the recipient"
								}
							},
							"collect(address,int24,int24,uint128,uint128)": {
								"details": "Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity. Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.",
								"params": {
									"amount0Requested": "How much token0 should be withdrawn from the fees owed",
									"amount1Requested": "How much token1 should be withdrawn from the fees owed",
									"recipient": "The address which should receive the fees collected",
									"tickLower": "The lower tick of the position for which to collect fees",
									"tickUpper": "The upper tick of the position for which to collect fees"
								},
								"returns": {
									"amount0": "The amount of fees collected in token0",
									"amount1": "The amount of fees collected in token1"
								}
							},
							"flash(address,uint256,uint256,bytes)": {
								"details": "The caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallbackCan be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling with 0 amount{0,1} and sending the donation amount(s) from the callback",
								"params": {
									"amount0": "The amount of token0 to send",
									"amount1": "The amount of token1 to send",
									"data": "Any data to be passed through to the callback",
									"recipient": "The address which will receive the token0 and token1 amounts"
								}
							},
							"increaseObservationCardinalityNext(uint16)": {
								"details": "This method is no-op if the pool already has an observationCardinalityNext greater than or equal to the input observationCardinalityNext.",
								"params": {
									"observationCardinalityNext": "The desired minimum number of observations for the pool to store"
								}
							},
							"initialize(uint160)": {
								"details": "Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value",
								"params": {
									"sqrtPriceX96": "the initial sqrt price of the pool as a Q64.96"
								}
							},
							"mint(address,int24,int24,uint128,bytes)": {
								"details": "The caller of this method receives a callback in the form of IUniswapV3MintCallback#uniswapV3MintCallback in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends on tickLower, tickUpper, the amount of liquidity, and the current price.",
								"params": {
									"amount": "The amount of liquidity to mint",
									"data": "Any data that should be passed through to the callback",
									"recipient": "The address for which the liquidity will be created",
									"tickLower": "The lower tick of the position in which to add liquidity",
									"tickUpper": "The upper tick of the position in which to add liquidity"
								},
								"returns": {
									"amount0": "The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback",
									"amount1": "The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback"
								}
							},
							"swap(address,bool,int256,uint160,bytes)": {
								"details": "The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback",
								"params": {
									"amountSpecified": "The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)",
									"data": "Any data to be passed through to the callback",
									"recipient": "The address to receive the output of the swap",
									"sqrtPriceLimitX96": "The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this value after the swap. If one for zero, the price cannot be greater than this value after the swap",
									"zeroForOne": "The direction of the swap, true for token0 to token1, false for token1 to token0"
								},
								"returns": {
									"amount0": "The delta of the balance of token0 of the pool, exact when negative, minimum when positive",
									"amount1": "The delta of the balance of token1 of the pool, exact when negative, minimum when positive"
								}
							}
						},
						"title": "Permissionless pool actions",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"burn(int24,int24,uint128)": "a34123a7",
							"collect(address,int24,int24,uint128,uint128)": "4f1eb3d8",
							"flash(address,uint256,uint256,bytes)": "490e6cbc",
							"increaseObservationCardinalityNext(uint16)": "32148f67",
							"initialize(uint160)": "f637731d",
							"mint(address,int24,int24,uint128,bytes)": "3c8a7d8d",
							"swap(address,bool,int256,uint160,bytes)": "128acb08"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount0Requested\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1Requested\",\"type\":\"uint128\"}],\"name\":\"collect\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"flash\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"observationCardinalityNext\",\"type\":\"uint16\"}],\"name\":\"increaseObservationCardinalityNext\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"zeroForOne\",\"type\":\"bool\"},{\"internalType\":\"int256\",\"name\":\"amountSpecified\",\"type\":\"int256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"swap\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"amount0\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1\",\"type\":\"int256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"burn(int24,int24,uint128)\":{\"details\":\"Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0Fees must be collected separately via a call to #collect\",\"params\":{\"amount\":\"How much liquidity to burn\",\"tickLower\":\"The lower tick of the position for which to burn liquidity\",\"tickUpper\":\"The upper tick of the position for which to burn liquidity\"},\"returns\":{\"amount0\":\"The amount of token0 sent to the recipient\",\"amount1\":\"The amount of token1 sent to the recipient\"}},\"collect(address,int24,int24,uint128,uint128)\":{\"details\":\"Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity. Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.\",\"params\":{\"amount0Requested\":\"How much token0 should be withdrawn from the fees owed\",\"amount1Requested\":\"How much token1 should be withdrawn from the fees owed\",\"recipient\":\"The address which should receive the fees collected\",\"tickLower\":\"The lower tick of the position for which to collect fees\",\"tickUpper\":\"The upper tick of the position for which to collect fees\"},\"returns\":{\"amount0\":\"The amount of fees collected in token0\",\"amount1\":\"The amount of fees collected in token1\"}},\"flash(address,uint256,uint256,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallbackCan be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling with 0 amount{0,1} and sending the donation amount(s) from the callback\",\"params\":{\"amount0\":\"The amount of token0 to send\",\"amount1\":\"The amount of token1 to send\",\"data\":\"Any data to be passed through to the callback\",\"recipient\":\"The address which will receive the token0 and token1 amounts\"}},\"increaseObservationCardinalityNext(uint16)\":{\"details\":\"This method is no-op if the pool already has an observationCardinalityNext greater than or equal to the input observationCardinalityNext.\",\"params\":{\"observationCardinalityNext\":\"The desired minimum number of observations for the pool to store\"}},\"initialize(uint160)\":{\"details\":\"Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value\",\"params\":{\"sqrtPriceX96\":\"the initial sqrt price of the pool as a Q64.96\"}},\"mint(address,int24,int24,uint128,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3MintCallback#uniswapV3MintCallback in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends on tickLower, tickUpper, the amount of liquidity, and the current price.\",\"params\":{\"amount\":\"The amount of liquidity to mint\",\"data\":\"Any data that should be passed through to the callback\",\"recipient\":\"The address for which the liquidity will be created\",\"tickLower\":\"The lower tick of the position in which to add liquidity\",\"tickUpper\":\"The upper tick of the position in which to add liquidity\"},\"returns\":{\"amount0\":\"The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback\",\"amount1\":\"The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback\"}},\"swap(address,bool,int256,uint160,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback\",\"params\":{\"amountSpecified\":\"The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)\",\"data\":\"Any data to be passed through to the callback\",\"recipient\":\"The address to receive the output of the swap\",\"sqrtPriceLimitX96\":\"The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this value after the swap. If one for zero, the price cannot be greater than this value after the swap\",\"zeroForOne\":\"The direction of the swap, true for token0 to token1, false for token1 to token0\"},\"returns\":{\"amount0\":\"The delta of the balance of token0 of the pool, exact when negative, minimum when positive\",\"amount1\":\"The delta of the balance of token1 of the pool, exact when negative, minimum when positive\"}}},\"title\":\"Permissionless pool actions\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"burn(int24,int24,uint128)\":{\"notice\":\"Burn liquidity from the sender and account tokens owed for the liquidity to the position\"},\"collect(address,int24,int24,uint128,uint128)\":{\"notice\":\"Collects tokens owed to a position\"},\"flash(address,uint256,uint256,bytes)\":{\"notice\":\"Receive token0 and/or token1 and pay it back, plus a fee, in the callback\"},\"increaseObservationCardinalityNext(uint16)\":{\"notice\":\"Increase the maximum number of price and liquidity observations that this pool will store\"},\"initialize(uint160)\":{\"notice\":\"Sets the initial price for the pool\"},\"mint(address,int24,int24,uint128,bytes)\":{\"notice\":\"Adds liquidity for the given recipient/tickLower/tickUpper position\"},\"swap(address,bool,int256,uint160,bytes)\":{\"notice\":\"Swap token0 for token1, or token1 for token0\"}},\"notice\":\"Contains pool methods that can be called by anyone\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol\":\"IUniswapV3PoolActions\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol\":{\"keccak256\":\"0x9453dd0e7442188667d01d9b65de3f1e14e9511ff3e303179a15f6fc267f7634\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://982f4328f956c3e60e67501e759eb292ac487f76460c774c50e9ae4fcc92aae5\",\"dweb:/ipfs/QmRnzEDsaqtd9PJEVcgQi7p5aV5pMSvRUoGZJAdwFUJxgZ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"burn(int24,int24,uint128)": {
								"notice": "Burn liquidity from the sender and account tokens owed for the liquidity to the position"
							},
							"collect(address,int24,int24,uint128,uint128)": {
								"notice": "Collects tokens owed to a position"
							},
							"flash(address,uint256,uint256,bytes)": {
								"notice": "Receive token0 and/or token1 and pay it back, plus a fee, in the callback"
							},
							"increaseObservationCardinalityNext(uint16)": {
								"notice": "Increase the maximum number of price and liquidity observations that this pool will store"
							},
							"initialize(uint160)": {
								"notice": "Sets the initial price for the pool"
							},
							"mint(address,int24,int24,uint128,bytes)": {
								"notice": "Adds liquidity for the given recipient/tickLower/tickUpper position"
							},
							"swap(address,bool,int256,uint160,bytes)": {
								"notice": "Swap token0 for token1, or token1 for token0"
							}
						},
						"notice": "Contains pool methods that can be called by anyone",
						"version": 1
					}
				}
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol": {
				"IUniswapV3PoolDerivedState": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint32[]",
									"name": "secondsAgos",
									"type": "uint32[]"
								}
							],
							"name": "observe",
							"outputs": [
								{
									"internalType": "int56[]",
									"name": "tickCumulatives",
									"type": "int56[]"
								},
								{
									"internalType": "uint160[]",
									"name": "secondsPerLiquidityCumulativeX128s",
									"type": "uint160[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								}
							],
							"name": "snapshotCumulativesInside",
							"outputs": [
								{
									"internalType": "int56",
									"name": "tickCumulativeInside",
									"type": "int56"
								},
								{
									"internalType": "uint160",
									"name": "secondsPerLiquidityInsideX128",
									"type": "uint160"
								},
								{
									"internalType": "uint32",
									"name": "secondsInside",
									"type": "uint32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"observe(uint32[])": {
								"details": "To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick, you must call it with secondsAgos = [3600, 0].The time weighted average tick represents the geometric time weighted average price of the pool, in log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.",
								"params": {
									"secondsAgos": "From how long ago each cumulative tick and liquidity value should be returned"
								},
								"returns": {
									"secondsPerLiquidityCumulativeX128s": "Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block timestamp",
									"tickCumulatives": "Cumulative tick values as of each `secondsAgos` from the current block timestamp"
								}
							},
							"snapshotCumulativesInside(int24,int24)": {
								"details": "Snapshots must only be compared to other snapshots, taken over a period for which a position existed. I.e., snapshots cannot be compared if a position is not held for the entire period between when the first snapshot is taken and the second snapshot is taken.",
								"params": {
									"tickLower": "The lower tick of the range",
									"tickUpper": "The upper tick of the range"
								},
								"returns": {
									"secondsInside": "The snapshot of seconds per liquidity for the range",
									"secondsPerLiquidityInsideX128": "The snapshot of seconds per liquidity for the range",
									"tickCumulativeInside": "The snapshot of the tick accumulator for the range"
								}
							}
						},
						"title": "Pool state that is not stored",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"observe(uint32[])": "883bdbfd",
							"snapshotCumulativesInside(int24,int24)": "a38807f2"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint32[]\",\"name\":\"secondsAgos\",\"type\":\"uint32[]\"}],\"name\":\"observe\",\"outputs\":[{\"internalType\":\"int56[]\",\"name\":\"tickCumulatives\",\"type\":\"int56[]\"},{\"internalType\":\"uint160[]\",\"name\":\"secondsPerLiquidityCumulativeX128s\",\"type\":\"uint160[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"}],\"name\":\"snapshotCumulativesInside\",\"outputs\":[{\"internalType\":\"int56\",\"name\":\"tickCumulativeInside\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityInsideX128\",\"type\":\"uint160\"},{\"internalType\":\"uint32\",\"name\":\"secondsInside\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"observe(uint32[])\":{\"details\":\"To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick, you must call it with secondsAgos = [3600, 0].The time weighted average tick represents the geometric time weighted average price of the pool, in log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.\",\"params\":{\"secondsAgos\":\"From how long ago each cumulative tick and liquidity value should be returned\"},\"returns\":{\"secondsPerLiquidityCumulativeX128s\":\"Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block timestamp\",\"tickCumulatives\":\"Cumulative tick values as of each `secondsAgos` from the current block timestamp\"}},\"snapshotCumulativesInside(int24,int24)\":{\"details\":\"Snapshots must only be compared to other snapshots, taken over a period for which a position existed. I.e., snapshots cannot be compared if a position is not held for the entire period between when the first snapshot is taken and the second snapshot is taken.\",\"params\":{\"tickLower\":\"The lower tick of the range\",\"tickUpper\":\"The upper tick of the range\"},\"returns\":{\"secondsInside\":\"The snapshot of seconds per liquidity for the range\",\"secondsPerLiquidityInsideX128\":\"The snapshot of seconds per liquidity for the range\",\"tickCumulativeInside\":\"The snapshot of the tick accumulator for the range\"}}},\"title\":\"Pool state that is not stored\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"observe(uint32[])\":{\"notice\":\"Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp\"},\"snapshotCumulativesInside(int24,int24)\":{\"notice\":\"Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range\"}},\"notice\":\"Contains view functions to provide information about the pool that is computed rather than stored on the blockchain. The functions here may have variable gas costs.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol\":\"IUniswapV3PoolDerivedState\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol\":{\"keccak256\":\"0xe603ac5b17ecdee73ba2b27efdf386c257a19c14206e87eee77e2017b742d9e5\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://8febc9bdb399a4d94bb89f5377732652e2400e4a8dee808201ade6848f9004e7\",\"dweb:/ipfs/QmaKDqYYFU4d2W2iN77aDHptfbFmYZRrMYXHeGpJmM8C1c\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"observe(uint32[])": {
								"notice": "Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp"
							},
							"snapshotCumulativesInside(int24,int24)": {
								"notice": "Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range"
							}
						},
						"notice": "Contains view functions to provide information about the pool that is computed rather than stored on the blockchain. The functions here may have variable gas costs.",
						"version": 1
					}
				}
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol": {
				"IUniswapV3PoolEvents": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "Burn",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"name": "Collect",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"name": "CollectProtocol",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "paid0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "paid1",
									"type": "uint256"
								}
							],
							"name": "Flash",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint16",
									"name": "observationCardinalityNextOld",
									"type": "uint16"
								},
								{
									"indexed": false,
									"internalType": "uint16",
									"name": "observationCardinalityNextNew",
									"type": "uint16"
								}
							],
							"name": "IncreaseObservationCardinalityNext",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								},
								{
									"indexed": false,
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								}
							],
							"name": "Initialize",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "Mint",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol0Old",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol1Old",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol0New",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol1New",
									"type": "uint8"
								}
							],
							"name": "SetFeeProtocol",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "int256",
									"name": "amount0",
									"type": "int256"
								},
								{
									"indexed": false,
									"internalType": "int256",
									"name": "amount1",
									"type": "int256"
								},
								{
									"indexed": false,
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "liquidity",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								}
							],
							"name": "Swap",
							"type": "event"
						}
					],
					"devdoc": {
						"events": {
							"Burn(address,int24,int24,uint128,uint256,uint256)": {
								"details": "Does not withdraw any fees earned by the liquidity position, which must be withdrawn via #collect",
								"params": {
									"amount": "The amount of liquidity to remove",
									"amount0": "The amount of token0 withdrawn",
									"amount1": "The amount of token1 withdrawn",
									"owner": "The owner of the position for which liquidity is removed",
									"tickLower": "The lower tick of the position",
									"tickUpper": "The upper tick of the position"
								}
							},
							"Collect(address,address,int24,int24,uint128,uint128)": {
								"details": "Collect events may be emitted with zero amount0 and amount1 when the caller chooses not to collect fees",
								"params": {
									"amount0": "The amount of token0 fees collected",
									"amount1": "The amount of token1 fees collected",
									"owner": "The owner of the position for which fees are collected",
									"tickLower": "The lower tick of the position",
									"tickUpper": "The upper tick of the position"
								}
							},
							"CollectProtocol(address,address,uint128,uint128)": {
								"params": {
									"amount0": "The amount of token1 protocol fees that is withdrawn",
									"recipient": "The address that receives the collected protocol fees",
									"sender": "The address that collects the protocol fees"
								}
							},
							"Flash(address,address,uint256,uint256,uint256,uint256)": {
								"params": {
									"amount0": "The amount of token0 that was flashed",
									"amount1": "The amount of token1 that was flashed",
									"paid0": "The amount of token0 paid for the flash, which can exceed the amount0 plus the fee",
									"paid1": "The amount of token1 paid for the flash, which can exceed the amount1 plus the fee",
									"recipient": "The address that received the tokens from flash",
									"sender": "The address that initiated the swap call, and that received the callback"
								}
							},
							"IncreaseObservationCardinalityNext(uint16,uint16)": {
								"details": "observationCardinalityNext is not the observation cardinality until an observation is written at the index just before a mint/swap/burn.",
								"params": {
									"observationCardinalityNextNew": "The updated value of the next observation cardinality",
									"observationCardinalityNextOld": "The previous value of the next observation cardinality"
								}
							},
							"Initialize(uint160,int24)": {
								"details": "Mint/Burn/Swap cannot be emitted by the pool before Initialize",
								"params": {
									"sqrtPriceX96": "The initial sqrt price of the pool, as a Q64.96",
									"tick": "The initial tick of the pool, i.e. log base 1.0001 of the starting price of the pool"
								}
							},
							"Mint(address,address,int24,int24,uint128,uint256,uint256)": {
								"params": {
									"amount": "The amount of liquidity minted to the position range",
									"amount0": "How much token0 was required for the minted liquidity",
									"amount1": "How much token1 was required for the minted liquidity",
									"owner": "The owner of the position and recipient of any minted liquidity",
									"sender": "The address that minted the liquidity",
									"tickLower": "The lower tick of the position",
									"tickUpper": "The upper tick of the position"
								}
							},
							"SetFeeProtocol(uint8,uint8,uint8,uint8)": {
								"params": {
									"feeProtocol0New": "The updated value of the token0 protocol fee",
									"feeProtocol0Old": "The previous value of the token0 protocol fee",
									"feeProtocol1New": "The updated value of the token1 protocol fee",
									"feeProtocol1Old": "The previous value of the token1 protocol fee"
								}
							},
							"Swap(address,address,int256,int256,uint160,uint128,int24)": {
								"params": {
									"amount0": "The delta of the token0 balance of the pool",
									"amount1": "The delta of the token1 balance of the pool",
									"liquidity": "The liquidity of the pool after the swap",
									"recipient": "The address that received the output of the swap",
									"sender": "The address that initiated the swap call, and that received the callback",
									"sqrtPriceX96": "The sqrt(price) of the pool after the swap, as a Q64.96",
									"tick": "The log base 1.0001 of price of the pool after the swap"
								}
							}
						},
						"kind": "dev",
						"methods": {},
						"title": "Events emitted by a pool",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"name\":\"Collect\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"name\":\"CollectProtocol\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paid0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paid1\",\"type\":\"uint256\"}],\"name\":\"Flash\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"observationCardinalityNextOld\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"observationCardinalityNextNew\",\"type\":\"uint16\"}],\"name\":\"IncreaseObservationCardinalityNext\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"Initialize\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol0Old\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol1Old\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol0New\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol1New\",\"type\":\"uint8\"}],\"name\":\"SetFeeProtocol\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount0\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount1\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"Swap\",\"type\":\"event\"}],\"devdoc\":{\"events\":{\"Burn(address,int24,int24,uint128,uint256,uint256)\":{\"details\":\"Does not withdraw any fees earned by the liquidity position, which must be withdrawn via #collect\",\"params\":{\"amount\":\"The amount of liquidity to remove\",\"amount0\":\"The amount of token0 withdrawn\",\"amount1\":\"The amount of token1 withdrawn\",\"owner\":\"The owner of the position for which liquidity is removed\",\"tickLower\":\"The lower tick of the position\",\"tickUpper\":\"The upper tick of the position\"}},\"Collect(address,address,int24,int24,uint128,uint128)\":{\"details\":\"Collect events may be emitted with zero amount0 and amount1 when the caller chooses not to collect fees\",\"params\":{\"amount0\":\"The amount of token0 fees collected\",\"amount1\":\"The amount of token1 fees collected\",\"owner\":\"The owner of the position for which fees are collected\",\"tickLower\":\"The lower tick of the position\",\"tickUpper\":\"The upper tick of the position\"}},\"CollectProtocol(address,address,uint128,uint128)\":{\"params\":{\"amount0\":\"The amount of token1 protocol fees that is withdrawn\",\"recipient\":\"The address that receives the collected protocol fees\",\"sender\":\"The address that collects the protocol fees\"}},\"Flash(address,address,uint256,uint256,uint256,uint256)\":{\"params\":{\"amount0\":\"The amount of token0 that was flashed\",\"amount1\":\"The amount of token1 that was flashed\",\"paid0\":\"The amount of token0 paid for the flash, which can exceed the amount0 plus the fee\",\"paid1\":\"The amount of token1 paid for the flash, which can exceed the amount1 plus the fee\",\"recipient\":\"The address that received the tokens from flash\",\"sender\":\"The address that initiated the swap call, and that received the callback\"}},\"IncreaseObservationCardinalityNext(uint16,uint16)\":{\"details\":\"observationCardinalityNext is not the observation cardinality until an observation is written at the index just before a mint/swap/burn.\",\"params\":{\"observationCardinalityNextNew\":\"The updated value of the next observation cardinality\",\"observationCardinalityNextOld\":\"The previous value of the next observation cardinality\"}},\"Initialize(uint160,int24)\":{\"details\":\"Mint/Burn/Swap cannot be emitted by the pool before Initialize\",\"params\":{\"sqrtPriceX96\":\"The initial sqrt price of the pool, as a Q64.96\",\"tick\":\"The initial tick of the pool, i.e. log base 1.0001 of the starting price of the pool\"}},\"Mint(address,address,int24,int24,uint128,uint256,uint256)\":{\"params\":{\"amount\":\"The amount of liquidity minted to the position range\",\"amount0\":\"How much token0 was required for the minted liquidity\",\"amount1\":\"How much token1 was required for the minted liquidity\",\"owner\":\"The owner of the position and recipient of any minted liquidity\",\"sender\":\"The address that minted the liquidity\",\"tickLower\":\"The lower tick of the position\",\"tickUpper\":\"The upper tick of the position\"}},\"SetFeeProtocol(uint8,uint8,uint8,uint8)\":{\"params\":{\"feeProtocol0New\":\"The updated value of the token0 protocol fee\",\"feeProtocol0Old\":\"The previous value of the token0 protocol fee\",\"feeProtocol1New\":\"The updated value of the token1 protocol fee\",\"feeProtocol1Old\":\"The previous value of the token1 protocol fee\"}},\"Swap(address,address,int256,int256,uint160,uint128,int24)\":{\"params\":{\"amount0\":\"The delta of the token0 balance of the pool\",\"amount1\":\"The delta of the token1 balance of the pool\",\"liquidity\":\"The liquidity of the pool after the swap\",\"recipient\":\"The address that received the output of the swap\",\"sender\":\"The address that initiated the swap call, and that received the callback\",\"sqrtPriceX96\":\"The sqrt(price) of the pool after the swap, as a Q64.96\",\"tick\":\"The log base 1.0001 of price of the pool after the swap\"}}},\"kind\":\"dev\",\"methods\":{},\"title\":\"Events emitted by a pool\",\"version\":1},\"userdoc\":{\"events\":{\"Burn(address,int24,int24,uint128,uint256,uint256)\":{\"notice\":\"Emitted when a position's liquidity is removed\"},\"Collect(address,address,int24,int24,uint128,uint128)\":{\"notice\":\"Emitted when fees are collected by the owner of a position\"},\"CollectProtocol(address,address,uint128,uint128)\":{\"notice\":\"Emitted when the collected protocol fees are withdrawn by the factory owner\"},\"Flash(address,address,uint256,uint256,uint256,uint256)\":{\"notice\":\"Emitted by the pool for any flashes of token0/token1\"},\"IncreaseObservationCardinalityNext(uint16,uint16)\":{\"notice\":\"Emitted by the pool for increases to the number of observations that can be stored\"},\"Initialize(uint160,int24)\":{\"notice\":\"Emitted exactly once by a pool when #initialize is first called on the pool\"},\"Mint(address,address,int24,int24,uint128,uint256,uint256)\":{\"notice\":\"Emitted when liquidity is minted for a given position\"},\"SetFeeProtocol(uint8,uint8,uint8,uint8)\":{\"notice\":\"Emitted when the protocol fee is changed by the pool\"},\"Swap(address,address,int256,int256,uint160,uint128,int24)\":{\"notice\":\"Emitted by the pool for any swaps between token0 and token1\"}},\"kind\":\"user\",\"methods\":{},\"notice\":\"Contains all events emitted by the pool\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol\":\"IUniswapV3PoolEvents\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol\":{\"keccak256\":\"0x8071514d0fe5d17d6fbd31c191cdfb703031c24e0ece3621d88ab10e871375cd\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://d0b571930cc7488b1d546a7e9cea7c52d8b3c4e207da657ed0e0db7343b8cd03\",\"dweb:/ipfs/QmaGK6vVwB95QSTR1XMYvrh7ivYAYZxi3fD7v6VMA4jZ39\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"events": {
							"Burn(address,int24,int24,uint128,uint256,uint256)": {
								"notice": "Emitted when a position's liquidity is removed"
							},
							"Collect(address,address,int24,int24,uint128,uint128)": {
								"notice": "Emitted when fees are collected by the owner of a position"
							},
							"CollectProtocol(address,address,uint128,uint128)": {
								"notice": "Emitted when the collected protocol fees are withdrawn by the factory owner"
							},
							"Flash(address,address,uint256,uint256,uint256,uint256)": {
								"notice": "Emitted by the pool for any flashes of token0/token1"
							},
							"IncreaseObservationCardinalityNext(uint16,uint16)": {
								"notice": "Emitted by the pool for increases to the number of observations that can be stored"
							},
							"Initialize(uint160,int24)": {
								"notice": "Emitted exactly once by a pool when #initialize is first called on the pool"
							},
							"Mint(address,address,int24,int24,uint128,uint256,uint256)": {
								"notice": "Emitted when liquidity is minted for a given position"
							},
							"SetFeeProtocol(uint8,uint8,uint8,uint8)": {
								"notice": "Emitted when the protocol fee is changed by the pool"
							},
							"Swap(address,address,int256,int256,uint160,uint128,int24)": {
								"notice": "Emitted by the pool for any swaps between token0 and token1"
							}
						},
						"kind": "user",
						"methods": {},
						"notice": "Contains all events emitted by the pool",
						"version": 1
					}
				}
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol": {
				"IUniswapV3PoolImmutables": {
					"abi": [
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "fee",
							"outputs": [
								{
									"internalType": "uint24",
									"name": "",
									"type": "uint24"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "maxLiquidityPerTick",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tickSpacing",
							"outputs": [
								{
									"internalType": "int24",
									"name": "",
									"type": "int24"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token0",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token1",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"factory()": {
								"returns": {
									"_0": "The contract address"
								}
							},
							"fee()": {
								"returns": {
									"_0": "The fee"
								}
							},
							"maxLiquidityPerTick()": {
								"details": "This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool",
								"returns": {
									"_0": "The max amount of liquidity per tick"
								}
							},
							"tickSpacing()": {
								"details": "Ticks can only be used at multiples of this value, minimum of 1 and always positive e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ... This value is an int24 to avoid casting even though it is always positive.",
								"returns": {
									"_0": "The tick spacing"
								}
							},
							"token0()": {
								"returns": {
									"_0": "The token contract address"
								}
							},
							"token1()": {
								"returns": {
									"_0": "The token contract address"
								}
							}
						},
						"title": "Pool state that never changes",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"factory()": "c45a0155",
							"fee()": "ddca3f43",
							"maxLiquidityPerTick()": "70cf754a",
							"tickSpacing()": "d0c93a7c",
							"token0()": "0dfe1681",
							"token1()": "d21220a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fee\",\"outputs\":[{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxLiquidityPerTick\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tickSpacing\",\"outputs\":[{\"internalType\":\"int24\",\"name\":\"\",\"type\":\"int24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token0\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"factory()\":{\"returns\":{\"_0\":\"The contract address\"}},\"fee()\":{\"returns\":{\"_0\":\"The fee\"}},\"maxLiquidityPerTick()\":{\"details\":\"This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool\",\"returns\":{\"_0\":\"The max amount of liquidity per tick\"}},\"tickSpacing()\":{\"details\":\"Ticks can only be used at multiples of this value, minimum of 1 and always positive e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ... This value is an int24 to avoid casting even though it is always positive.\",\"returns\":{\"_0\":\"The tick spacing\"}},\"token0()\":{\"returns\":{\"_0\":\"The token contract address\"}},\"token1()\":{\"returns\":{\"_0\":\"The token contract address\"}}},\"title\":\"Pool state that never changes\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"factory()\":{\"notice\":\"The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface\"},\"fee()\":{\"notice\":\"The pool's fee in hundredths of a bip, i.e. 1e-6\"},\"maxLiquidityPerTick()\":{\"notice\":\"The maximum amount of position liquidity that can use any tick in the range\"},\"tickSpacing()\":{\"notice\":\"The pool tick spacing\"},\"token0()\":{\"notice\":\"The first of the two tokens of the pool, sorted by address\"},\"token1()\":{\"notice\":\"The second of the two tokens of the pool, sorted by address\"}},\"notice\":\"These parameters are fixed for a pool forever, i.e., the methods will always return the same values\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol\":\"IUniswapV3PoolImmutables\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol\":{\"keccak256\":\"0xf6e5d2cd1139c4c276bdbc8e1d2b256e456c866a91f1b868da265c6d2685c3f7\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b99c8c9ae8e27ee6559e5866bea82cbc9ffc8247f8d15b7422a4deb287d4d047\",\"dweb:/ipfs/QmfL8gaqt3ffAnm6nVj5ksuNpLygXuL3xq5VBqrkwC2JJ3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"factory()": {
								"notice": "The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface"
							},
							"fee()": {
								"notice": "The pool's fee in hundredths of a bip, i.e. 1e-6"
							},
							"maxLiquidityPerTick()": {
								"notice": "The maximum amount of position liquidity that can use any tick in the range"
							},
							"tickSpacing()": {
								"notice": "The pool tick spacing"
							},
							"token0()": {
								"notice": "The first of the two tokens of the pool, sorted by address"
							},
							"token1()": {
								"notice": "The second of the two tokens of the pool, sorted by address"
							}
						},
						"notice": "These parameters are fixed for a pool forever, i.e., the methods will always return the same values",
						"version": 1
					}
				}
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol": {
				"IUniswapV3PoolOwnerActions": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint128",
									"name": "amount0Requested",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1Requested",
									"type": "uint128"
								}
							],
							"name": "collectProtocol",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint8",
									"name": "feeProtocol0",
									"type": "uint8"
								},
								{
									"internalType": "uint8",
									"name": "feeProtocol1",
									"type": "uint8"
								}
							],
							"name": "setFeeProtocol",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"collectProtocol(address,uint128,uint128)": {
								"params": {
									"amount0Requested": "The maximum amount of token0 to send, can be 0 to collect fees in only token1",
									"amount1Requested": "The maximum amount of token1 to send, can be 0 to collect fees in only token0",
									"recipient": "The address to which collected protocol fees should be sent"
								},
								"returns": {
									"amount0": "The protocol fee collected in token0",
									"amount1": "The protocol fee collected in token1"
								}
							},
							"setFeeProtocol(uint8,uint8)": {
								"params": {
									"feeProtocol0": "new protocol fee for token0 of the pool",
									"feeProtocol1": "new protocol fee for token1 of the pool"
								}
							}
						},
						"title": "Permissioned pool actions",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"collectProtocol(address,uint128,uint128)": "85b66729",
							"setFeeProtocol(uint8,uint8)": "8206a4d1"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"amount0Requested\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1Requested\",\"type\":\"uint128\"}],\"name\":\"collectProtocol\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"feeProtocol0\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"feeProtocol1\",\"type\":\"uint8\"}],\"name\":\"setFeeProtocol\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"collectProtocol(address,uint128,uint128)\":{\"params\":{\"amount0Requested\":\"The maximum amount of token0 to send, can be 0 to collect fees in only token1\",\"amount1Requested\":\"The maximum amount of token1 to send, can be 0 to collect fees in only token0\",\"recipient\":\"The address to which collected protocol fees should be sent\"},\"returns\":{\"amount0\":\"The protocol fee collected in token0\",\"amount1\":\"The protocol fee collected in token1\"}},\"setFeeProtocol(uint8,uint8)\":{\"params\":{\"feeProtocol0\":\"new protocol fee for token0 of the pool\",\"feeProtocol1\":\"new protocol fee for token1 of the pool\"}}},\"title\":\"Permissioned pool actions\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"collectProtocol(address,uint128,uint128)\":{\"notice\":\"Collect the protocol fee accrued to the pool\"},\"setFeeProtocol(uint8,uint8)\":{\"notice\":\"Set the denominator of the protocol's % share of the fees\"}},\"notice\":\"Contains pool methods that may only be called by the factory owner\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol\":\"IUniswapV3PoolOwnerActions\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol\":{\"keccak256\":\"0x759b78a2918af9e99e246dc3af084f654e48ef32bb4e4cb8a966aa3dcaece235\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://64144fb96e1c7fdba87305acadb98a198d26a3d46c097cb3a666e567f6f29735\",\"dweb:/ipfs/QmUnWVwN9FKB9uV5Pr8YfLpWZnYM2DENnRMaadZ492JS9u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"collectProtocol(address,uint128,uint128)": {
								"notice": "Collect the protocol fee accrued to the pool"
							},
							"setFeeProtocol(uint8,uint8)": {
								"notice": "Set the denominator of the protocol's % share of the fees"
							}
						},
						"notice": "Contains pool methods that may only be called by the factory owner",
						"version": 1
					}
				}
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol": {
				"IUniswapV3PoolState": {
					"abi": [
						{
							"inputs": [],
							"name": "feeGrowthGlobal0X128",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "feeGrowthGlobal1X128",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "liquidity",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "observations",
							"outputs": [
								{
									"internalType": "uint32",
									"name": "blockTimestamp",
									"type": "uint32"
								},
								{
									"internalType": "int56",
									"name": "tickCumulative",
									"type": "int56"
								},
								{
									"internalType": "uint160",
									"name": "secondsPerLiquidityCumulativeX128",
									"type": "uint160"
								},
								{
									"internalType": "bool",
									"name": "initialized",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "key",
									"type": "bytes32"
								}
							],
							"name": "positions",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "_liquidity",
									"type": "uint128"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthInside0LastX128",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthInside1LastX128",
									"type": "uint256"
								},
								{
									"internalType": "uint128",
									"name": "tokensOwed0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "tokensOwed1",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "protocolFees",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "token0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "token1",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "slot0",
							"outputs": [
								{
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								},
								{
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								},
								{
									"internalType": "uint16",
									"name": "observationIndex",
									"type": "uint16"
								},
								{
									"internalType": "uint16",
									"name": "observationCardinality",
									"type": "uint16"
								},
								{
									"internalType": "uint16",
									"name": "observationCardinalityNext",
									"type": "uint16"
								},
								{
									"internalType": "uint8",
									"name": "feeProtocol",
									"type": "uint8"
								},
								{
									"internalType": "bool",
									"name": "unlocked",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int16",
									"name": "wordPosition",
									"type": "int16"
								}
							],
							"name": "tickBitmap",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								}
							],
							"name": "ticks",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "liquidityGross",
									"type": "uint128"
								},
								{
									"internalType": "int128",
									"name": "liquidityNet",
									"type": "int128"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthOutside0X128",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthOutside1X128",
									"type": "uint256"
								},
								{
									"internalType": "int56",
									"name": "tickCumulativeOutside",
									"type": "int56"
								},
								{
									"internalType": "uint160",
									"name": "secondsPerLiquidityOutsideX128",
									"type": "uint160"
								},
								{
									"internalType": "uint32",
									"name": "secondsOutside",
									"type": "uint32"
								},
								{
									"internalType": "bool",
									"name": "initialized",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"feeGrowthGlobal0X128()": {
								"details": "This value can overflow the uint256"
							},
							"feeGrowthGlobal1X128()": {
								"details": "This value can overflow the uint256"
							},
							"liquidity()": {
								"details": "This value has no relationship to the total liquidity across all ticks"
							},
							"observations(uint256)": {
								"details": "You most likely want to use #observe() instead of this method to get an observation as of some amount of time ago, rather than at a specific index in the array.",
								"params": {
									"index": "The element of the observations array to fetch"
								},
								"returns": {
									"blockTimestamp": "The timestamp of the observation, Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp, Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp, Returns initialized whether the observation has been initialized and the values are safe to use"
								}
							},
							"positions(bytes32)": {
								"params": {
									"key": "The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper"
								},
								"returns": {
									"_liquidity": "The amount of liquidity in the position, Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke, Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke, Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke, Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke"
								}
							},
							"protocolFees()": {
								"details": "Protocol fees will never exceed uint128 max in either token"
							},
							"slot0()": {
								"returns": {
									"sqrtPriceX96": "The current price of the pool as a sqrt(token1/token0) Q64.96 value tick The current tick of the pool, i.e. according to the last tick transition that was run. This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick boundary. observationIndex The index of the last oracle observation that was written, observationCardinality The current maximum number of observations stored in the pool, observationCardinalityNext The next maximum number of observations, to be updated when the observation. feeProtocol The protocol fee for both tokens of the pool. Encoded as two 4 bit values, where the protocol fee of token1 is shifted 4 bits and the protocol fee of token0 is the lower 4 bits. Used as the denominator of a fraction of the swap fee, e.g. 4 means 1/4th of the swap fee. unlocked Whether the pool is currently locked to reentrancy"
								}
							},
							"ticks(int24)": {
								"params": {
									"tick": "The tick to look up"
								},
								"returns": {
									"liquidityGross": "the total amount of position liquidity that uses the pool either as tick lower or tick upper, liquidityNet how much liquidity changes when the pool price crosses the tick, feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0, feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1, tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick, secondsOutside the seconds spent on the other side of the tick from the current tick, initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false. Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0. In addition, these values are only relative and must be used only in comparison to previous snapshots for a specific position."
								}
							}
						},
						"title": "Pool state that can change",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"feeGrowthGlobal0X128()": "f3058399",
							"feeGrowthGlobal1X128()": "46141319",
							"liquidity()": "1a686502",
							"observations(uint256)": "252c09d7",
							"positions(bytes32)": "514ea4bf",
							"protocolFees()": "1ad8b03b",
							"slot0()": "3850c7bd",
							"tickBitmap(int16)": "5339c296",
							"ticks(int24)": "f30dba93"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"feeGrowthGlobal0X128\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeGrowthGlobal1X128\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidity\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"observations\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"blockTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"int56\",\"name\":\"tickCumulative\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityCumulativeX128\",\"type\":\"uint160\"},{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"}],\"name\":\"positions\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"_liquidity\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside0LastX128\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside1LastX128\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"tokensOwed0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"tokensOwed1\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"protocolFees\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"token0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"token1\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"slot0\",\"outputs\":[{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"},{\"internalType\":\"uint16\",\"name\":\"observationIndex\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"observationCardinality\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"observationCardinalityNext\",\"type\":\"uint16\"},{\"internalType\":\"uint8\",\"name\":\"feeProtocol\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"unlocked\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int16\",\"name\":\"wordPosition\",\"type\":\"int16\"}],\"name\":\"tickBitmap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"ticks\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"liquidityGross\",\"type\":\"uint128\"},{\"internalType\":\"int128\",\"name\":\"liquidityNet\",\"type\":\"int128\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthOutside0X128\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthOutside1X128\",\"type\":\"uint256\"},{\"internalType\":\"int56\",\"name\":\"tickCumulativeOutside\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityOutsideX128\",\"type\":\"uint160\"},{\"internalType\":\"uint32\",\"name\":\"secondsOutside\",\"type\":\"uint32\"},{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"feeGrowthGlobal0X128()\":{\"details\":\"This value can overflow the uint256\"},\"feeGrowthGlobal1X128()\":{\"details\":\"This value can overflow the uint256\"},\"liquidity()\":{\"details\":\"This value has no relationship to the total liquidity across all ticks\"},\"observations(uint256)\":{\"details\":\"You most likely want to use #observe() instead of this method to get an observation as of some amount of time ago, rather than at a specific index in the array.\",\"params\":{\"index\":\"The element of the observations array to fetch\"},\"returns\":{\"blockTimestamp\":\"The timestamp of the observation, Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp, Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp, Returns initialized whether the observation has been initialized and the values are safe to use\"}},\"positions(bytes32)\":{\"params\":{\"key\":\"The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper\"},\"returns\":{\"_liquidity\":\"The amount of liquidity in the position, Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke, Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke, Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke, Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke\"}},\"protocolFees()\":{\"details\":\"Protocol fees will never exceed uint128 max in either token\"},\"slot0()\":{\"returns\":{\"sqrtPriceX96\":\"The current price of the pool as a sqrt(token1/token0) Q64.96 value tick The current tick of the pool, i.e. according to the last tick transition that was run. This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick boundary. observationIndex The index of the last oracle observation that was written, observationCardinality The current maximum number of observations stored in the pool, observationCardinalityNext The next maximum number of observations, to be updated when the observation. feeProtocol The protocol fee for both tokens of the pool. Encoded as two 4 bit values, where the protocol fee of token1 is shifted 4 bits and the protocol fee of token0 is the lower 4 bits. Used as the denominator of a fraction of the swap fee, e.g. 4 means 1/4th of the swap fee. unlocked Whether the pool is currently locked to reentrancy\"}},\"ticks(int24)\":{\"params\":{\"tick\":\"The tick to look up\"},\"returns\":{\"liquidityGross\":\"the total amount of position liquidity that uses the pool either as tick lower or tick upper, liquidityNet how much liquidity changes when the pool price crosses the tick, feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0, feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1, tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick, secondsOutside the seconds spent on the other side of the tick from the current tick, initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false. Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0. In addition, these values are only relative and must be used only in comparison to previous snapshots for a specific position.\"}}},\"title\":\"Pool state that can change\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"feeGrowthGlobal0X128()\":{\"notice\":\"The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool\"},\"feeGrowthGlobal1X128()\":{\"notice\":\"The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool\"},\"liquidity()\":{\"notice\":\"The currently in range liquidity available to the pool\"},\"observations(uint256)\":{\"notice\":\"Returns data about a specific observation index\"},\"positions(bytes32)\":{\"notice\":\"Returns the information about a position by the position's key\"},\"protocolFees()\":{\"notice\":\"The amounts of token0 and token1 that are owed to the protocol\"},\"slot0()\":{\"notice\":\"The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas when accessed externally.\"},\"tickBitmap(int16)\":{\"notice\":\"Returns 256 packed tick initialized boolean values. See TickBitmap for more information\"},\"ticks(int24)\":{\"notice\":\"Look up information about a specific tick in the pool\"}},\"notice\":\"These methods compose the pool's state, and can change with any frequency including multiple times per transaction\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol\":\"IUniswapV3PoolState\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol\":{\"keccak256\":\"0x852dc1f5df7dcf7f11e7bb3eed79f0cea72ad4b25f6a9d2c35aafb48925fd49f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://ed63907c38ff36b0e22bc9ffc53e791ea74f0d4f0e7c257fdfb5aaf8825b1f0f\",\"dweb:/ipfs/QmSQrckghEjs6HVsA5GVgpNpZWvTXMY5eQLF7cN6deFeEg\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"feeGrowthGlobal0X128()": {
								"notice": "The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool"
							},
							"feeGrowthGlobal1X128()": {
								"notice": "The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool"
							},
							"liquidity()": {
								"notice": "The currently in range liquidity available to the pool"
							},
							"observations(uint256)": {
								"notice": "Returns data about a specific observation index"
							},
							"positions(bytes32)": {
								"notice": "Returns the information about a position by the position's key"
							},
							"protocolFees()": {
								"notice": "The amounts of token0 and token1 that are owed to the protocol"
							},
							"slot0()": {
								"notice": "The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas when accessed externally."
							},
							"tickBitmap(int16)": {
								"notice": "Returns 256 packed tick initialized boolean values. See TickBitmap for more information"
							},
							"ticks(int24)": {
								"notice": "Look up information about a specific tick in the pool"
							}
						},
						"notice": "These methods compose the pool's state, and can change with any frequency including multiple times per transaction",
						"version": 1
					}
				}
			},
			"@uniswap/v3-core/contracts/libraries/FullMath.sol": {
				"FullMath": {
					"abi": [],
					"devdoc": {
						"details": "Handles \"phantom overflow\" i.e., allows multiplication and division where an intermediate value overflows 256 bits",
						"kind": "dev",
						"methods": {},
						"title": "Contains 512-bit math functions",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":362:5124  library FullMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":362:5124  library FullMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220f9c35d942826af63c46e2adc8357fe9661b937b7379149bc153b8b50b845489764736f6c63430007060033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f9c35d942826af63c46e2adc8357fe9661b937b7379149bc153b8b50b845489764736f6c63430007060033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF9 0xC3 0x5D SWAP5 0x28 0x26 0xAF PUSH4 0xC46E2ADC DUP4 JUMPI INVALID SWAP7 PUSH2 0xB937 0xB7 CALLDATACOPY SWAP2 0x49 0xBC ISZERO EXTCODESIZE DUP12 POP 0xB8 GASLIMIT 0x48 SWAP8 PUSH5 0x736F6C6343 STOP SMOD MOD STOP CALLER ",
							"sourceMap": "362:4762:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f9c35d942826af63c46e2adc8357fe9661b937b7379149bc153b8b50b845489764736f6c63430007060033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF9 0xC3 0x5D SWAP5 0x28 0x26 0xAF PUSH4 0xC46E2ADC DUP4 JUMPI INVALID SWAP7 PUSH2 0xB937 0xB7 CALLDATACOPY SWAP2 0x49 0xBC ISZERO EXTCODESIZE DUP12 POP 0xB8 GASLIMIT 0x48 SWAP8 PUSH5 0x736F6C6343 STOP SMOD MOD STOP CALLER ",
							"sourceMap": "362:4762:9:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDivRoundingUp(uint256,uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 362,
									"end": 5124,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 362,
									"end": 5124,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 362,
									"end": 5124,
									"name": "PUSH",
									"source": 9,
									"value": "B"
								},
								{
									"begin": 362,
									"end": 5124,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 362,
									"end": 5124,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 362,
									"end": 5124,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 362,
									"end": 5124,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 362,
									"end": 5124,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 362,
									"end": 5124,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 362,
									"end": 5124,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 362,
									"end": 5124,
									"name": "BYTE",
									"source": 9
								},
								{
									"begin": 362,
									"end": 5124,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 362,
									"end": 5124,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 362,
									"end": 5124,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 362,
									"end": 5124,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 362,
									"end": 5124,
									"name": "INVALID",
									"source": 9
								},
								{
									"begin": 362,
									"end": 5124,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 362,
									"end": 5124,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 362,
									"end": 5124,
									"name": "ADDRESS",
									"source": 9
								},
								{
									"begin": 362,
									"end": 5124,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 362,
									"end": 5124,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 362,
									"end": 5124,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 362,
									"end": 5124,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 362,
									"end": 5124,
									"name": "MSTORE8",
									"source": 9
								},
								{
									"begin": 362,
									"end": 5124,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 362,
									"end": 5124,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 362,
									"end": 5124,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f9c35d942826af63c46e2adc8357fe9661b937b7379149bc153b8b50b845489764736f6c63430007060033",
									".code": [
										{
											"begin": 362,
											"end": 5124,
											"name": "PUSHDEPLOYADDRESS",
											"source": 9
										},
										{
											"begin": 362,
											"end": 5124,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 362,
											"end": 5124,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 362,
											"end": 5124,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 362,
											"end": 5124,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 362,
											"end": 5124,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 362,
											"end": 5124,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 362,
											"end": 5124,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 362,
											"end": 5124,
											"name": "REVERT",
											"source": 9
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Handles \\\"phantom overflow\\\" i.e., allows multiplication and division where an intermediate value overflows 256 bits\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Contains 512-bit math functions\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Facilitates multiplication and division that can have overflow of an intermediate value without any loss of precision\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/libraries/FullMath.sol\":\"FullMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/libraries/FullMath.sol\":{\"keccak256\":\"0x50e87f7a3197525d1c6f7e04290060e848677c8a4e86c554bc6ace4a4d0d476d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3874093a6b37d8e68f9475a91f8eb0a1c808cb6153c84cfe6c37909505a4d24e\",\"dweb:/ipfs/QmUqGpQqvSHX4SwUvcBCs9g4ZhR9JPhgD3615oUigAhtjj\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Facilitates multiplication and division that can have overflow of an intermediate value without any loss of precision",
						"version": 1
					}
				}
			},
			"@uniswap/v3-core/contracts/libraries/TickMath.sol": {
				"TickMath": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"MAX_SQRT_RATIO": {
								"details": "The maximum value that can be returned from #getSqrtRatioAtTick. Equivalent to getSqrtRatioAtTick(MAX_TICK)"
							},
							"MAX_TICK": {
								"details": "The maximum tick that may be passed to #getSqrtRatioAtTick computed from log base 1.0001 of 2**128"
							},
							"MIN_SQRT_RATIO": {
								"details": "The minimum value that can be returned from #getSqrtRatioAtTick. Equivalent to getSqrtRatioAtTick(MIN_TICK)"
							},
							"MIN_TICK": {
								"details": "The minimum tick that may be passed to #getSqrtRatioAtTick computed from log base 1.0001 of 2**-128"
							}
						},
						"title": "Math library for computing sqrt prices from ticks and vice versa",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":313:8644  library TickMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":313:8644  library TickMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220088155d964d43a73867fb878ddd461135a55c36ccca22ac587972e02302871a164736f6c63430007060033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220088155d964d43a73867fb878ddd461135a55c36ccca22ac587972e02302871a164736f6c63430007060033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADDMOD DUP2 SSTORE 0xD9 PUSH5 0xD43A73867F 0xB8 PUSH25 0xDDD461135A55C36CCCA22AC587972E02302871A164736F6C63 NUMBER STOP SMOD MOD STOP CALLER ",
							"sourceMap": "313:8331:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220088155d964d43a73867fb878ddd461135a55c36ccca22ac587972e02302871a164736f6c63430007060033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADDMOD DUP2 SSTORE 0xD9 PUSH5 0xD43A73867F 0xB8 PUSH25 0xDDD461135A55C36CCCA22AC587972E02302871A164736F6C63 NUMBER STOP SMOD MOD STOP CALLER ",
							"sourceMap": "313:8331:10:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"getSqrtRatioAtTick(int24)": "infinite",
								"getTickAtSqrtRatio(uint160)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 313,
									"end": 8644,
									"name": "PUSH #[$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 313,
									"end": 8644,
									"name": "PUSH [$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 313,
									"end": 8644,
									"name": "PUSH",
									"source": 10,
									"value": "B"
								},
								{
									"begin": 313,
									"end": 8644,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 313,
									"end": 8644,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 313,
									"end": 8644,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 313,
									"end": 8644,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 313,
									"end": 8644,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 313,
									"end": 8644,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 313,
									"end": 8644,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 313,
									"end": 8644,
									"name": "BYTE",
									"source": 10
								},
								{
									"begin": 313,
									"end": 8644,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 313,
									"end": 8644,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 313,
									"end": 8644,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 313,
									"end": 8644,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 313,
									"end": 8644,
									"name": "INVALID",
									"source": 10
								},
								{
									"begin": 313,
									"end": 8644,
									"name": "tag",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 313,
									"end": 8644,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 313,
									"end": 8644,
									"name": "ADDRESS",
									"source": 10
								},
								{
									"begin": 313,
									"end": 8644,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 313,
									"end": 8644,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 313,
									"end": 8644,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 313,
									"end": 8644,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 313,
									"end": 8644,
									"name": "MSTORE8",
									"source": 10
								},
								{
									"begin": 313,
									"end": 8644,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 313,
									"end": 8644,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 313,
									"end": 8644,
									"name": "RETURN",
									"source": 10
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220088155d964d43a73867fb878ddd461135a55c36ccca22ac587972e02302871a164736f6c63430007060033",
									".code": [
										{
											"begin": 313,
											"end": 8644,
											"name": "PUSHDEPLOYADDRESS",
											"source": 10
										},
										{
											"begin": 313,
											"end": 8644,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 313,
											"end": 8644,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 313,
											"end": 8644,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 313,
											"end": 8644,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 313,
											"end": 8644,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 313,
											"end": 8644,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 313,
											"end": 8644,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 313,
											"end": 8644,
											"name": "REVERT",
											"source": 10
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"MAX_SQRT_RATIO\":{\"details\":\"The maximum value that can be returned from #getSqrtRatioAtTick. Equivalent to getSqrtRatioAtTick(MAX_TICK)\"},\"MAX_TICK\":{\"details\":\"The maximum tick that may be passed to #getSqrtRatioAtTick computed from log base 1.0001 of 2**128\"},\"MIN_SQRT_RATIO\":{\"details\":\"The minimum value that can be returned from #getSqrtRatioAtTick. Equivalent to getSqrtRatioAtTick(MIN_TICK)\"},\"MIN_TICK\":{\"details\":\"The minimum tick that may be passed to #getSqrtRatioAtTick computed from log base 1.0001 of 2**-128\"}},\"title\":\"Math library for computing sqrt prices from ticks and vice versa\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Computes sqrt price for ticks of size 1.0001, i.e. sqrt(1.0001^tick) as fixed point Q64.96 numbers. Supports prices between 2**-128 and 2**128\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/libraries/TickMath.sol\":\"TickMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/libraries/TickMath.sol\":{\"keccak256\":\"0xda8c2c0b12d2976acfd364453ba5f5bf0117ba3c91175ee9e1067d3fb26944d9\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://3f3d2d7c2723c91830c74d96292f28fc1cfe28d388cdb9c1a5ebadb4c2b96f81\",\"dweb:/ipfs/QmYU4wk8MEm33wVWR38LoncvR7b8PP1mLuGBKX3dUpYJVE\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Computes sqrt price for ticks of size 1.0001, i.e. sqrt(1.0001^tick) as fixed point Q64.96 numbers. Supports prices between 2**-128 and 2**128",
						"version": 1
					}
				}
			},
			"contracts/PriceAggregator.sol": {
				"PriceAggregator": {
					"abi": [
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "t1",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "t2",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "provider",
											"type": "address"
										},
										{
											"internalType": "uint8",
											"name": "providerVersion",
											"type": "uint8"
										}
									],
									"internalType": "struct IPriceAggregator.input[]",
									"name": "inputs",
									"type": "tuple[]"
								}
							],
							"name": "getPrices",
							"outputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "t1",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "t2",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "price",
											"type": "uint256"
										},
										{
											"internalType": "uint24",
											"name": "fee",
											"type": "uint24"
										}
									],
									"internalType": "struct IPriceAggregator.output[]",
									"name": "",
									"type": "tuple[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/PriceAggregator.sol\":441:1200  contract PriceAggregator is IPriceAggregator {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/PriceAggregator.sol\":441:1200  contract PriceAggregator is IPriceAggregator {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xff514fa3\n      eq\n      tag_3\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/PriceAggregator.sol\":493:1196  function getPrices(input[] memory inputs) public override view returns (output[] memory) {... */\n    tag_3:\n      tag_4\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_5\n      swap2\n      swap1\n      tag_6\n      jump\t// in\n    tag_5:\n      tag_7\n      jump\t// in\n    tag_4:\n      mload(0x40)\n      tag_8\n      swap2\n      swap1\n      tag_9\n      jump\t// in\n    tag_8:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n    tag_7:\n        /* \"contracts/PriceAggregator.sol\":565:580  output[] memory */\n      0x60\n        /* \"contracts/PriceAggregator.sol\":592:615  output[] memory outputs */\n      0x00\n        /* \"contracts/PriceAggregator.sol\":631:637  inputs */\n      dup3\n        /* \"contracts/PriceAggregator.sol\":631:644  inputs.length */\n      mload\n        /* \"contracts/PriceAggregator.sol\":618:645  new output[](inputs.length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      dup1\n      iszero\n      tag_11\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_11:\n      pop\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_12\n      jumpi\n      dup2\n      0x20\n      add\n    tag_13:\n      tag_14\n      tag_15\n      jump\t// in\n    tag_14:\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x01\n      swap1\n      sub\n      swap1\n      dup2\n      tag_13\n      jumpi\n      swap1\n      pop\n    tag_12:\n      pop\n        /* \"contracts/PriceAggregator.sol\":592:645  output[] memory outputs = new output[](inputs.length) */\n      swap1\n      pop\n        /* \"contracts/PriceAggregator.sol\":659:665  uint i */\n      0x00\n        /* \"contracts/PriceAggregator.sol\":654:1162  for (uint i=0;i<inputs.length;i++){... */\n    tag_16:\n        /* \"contracts/PriceAggregator.sol\":670:676  inputs */\n      dup4\n        /* \"contracts/PriceAggregator.sol\":670:683  inputs.length */\n      mload\n        /* \"contracts/PriceAggregator.sol\":668:669  i */\n      dup2\n        /* \"contracts/PriceAggregator.sol\":668:683  i<inputs.length */\n      lt\n        /* \"contracts/PriceAggregator.sol\":654:1162  for (uint i=0;i<inputs.length;i++){... */\n      iszero\n      tag_17\n      jumpi\n        /* \"contracts/PriceAggregator.sol\":731:732  2 */\n      0x02\n        /* \"contracts/PriceAggregator.sol\":702:708  inputs */\n      dup5\n        /* \"contracts/PriceAggregator.sol\":709:710  i */\n      dup3\n        /* \"contracts/PriceAggregator.sol\":702:711  inputs[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_19\n      jumpi\n      invalid\n    tag_19:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/PriceAggregator.sol\":702:727  inputs[i].providerVersion */\n      0x60\n      add\n      mload\n        /* \"contracts/PriceAggregator.sol\":702:732  inputs[i].providerVersion == 2 */\n      0xff\n      and\n      eq\n        /* \"contracts/PriceAggregator.sol\":698:1153  if (inputs[i].providerVersion == 2) {... */\n      iszero\n      tag_20\n      jumpi\n        /* \"contracts/PriceAggregator.sol\":748:761  uint256 price */\n      0x00\n        /* \"contracts/PriceAggregator.sol\":764:773  UniswapV2 */\n      linkerSymbol(\"66db80e837caed232b747c0dfa8ba195e80afd37d58afd4790f0bc06a2afa716\")\n        /* \"contracts/PriceAggregator.sol\":764:779  UniswapV2.Price */\n      0xc361e0b1\n        /* \"contracts/PriceAggregator.sol\":780:786  inputs */\n      dup7\n        /* \"contracts/PriceAggregator.sol\":787:788  i */\n      dup5\n        /* \"contracts/PriceAggregator.sol\":780:789  inputs[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_21\n      jumpi\n      invalid\n    tag_21:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/PriceAggregator.sol\":780:798  inputs[i].provider */\n      0x40\n      add\n      mload\n        /* \"contracts/PriceAggregator.sol\":799:805  inputs */\n      dup8\n        /* \"contracts/PriceAggregator.sol\":806:807  i */\n      dup6\n        /* \"contracts/PriceAggregator.sol\":799:808  inputs[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_22\n      jumpi\n      invalid\n    tag_22:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/PriceAggregator.sol\":799:811  inputs[i].t1 */\n      0x00\n      add\n      mload\n        /* \"contracts/PriceAggregator.sol\":812:818  inputs */\n      dup9\n        /* \"contracts/PriceAggregator.sol\":819:820  i */\n      dup7\n        /* \"contracts/PriceAggregator.sol\":812:821  inputs[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_23\n      jumpi\n      invalid\n    tag_23:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/PriceAggregator.sol\":812:824  inputs[i].t2 */\n      0x20\n      add\n      mload\n        /* \"contracts/PriceAggregator.sol\":764:825  UniswapV2.Price(inputs[i].provider,inputs[i].t1,inputs[i].t2) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_24\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_26\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_26:\n      pop\n      gas\n      delegatecall\n      iszero\n      dup1\n      iszero\n      tag_28\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_28:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_29\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_29:\n        /* \"contracts/PriceAggregator.sol\":748:825  uint256 price = UniswapV2.Price(inputs[i].provider,inputs[i].t1,inputs[i].t2) */\n      swap1\n      pop\n        /* \"contracts/PriceAggregator.sol\":852:893  output(inputs[i].t1,inputs[i].t2,price,0) */\n      mload(0x40)\n      dup1\n      0x80\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/PriceAggregator.sol\":859:865  inputs */\n      dup7\n        /* \"contracts/PriceAggregator.sol\":866:867  i */\n      dup5\n        /* \"contracts/PriceAggregator.sol\":859:868  inputs[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_31\n      jumpi\n      invalid\n    tag_31:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/PriceAggregator.sol\":859:871  inputs[i].t1 */\n      0x00\n      add\n      mload\n        /* \"contracts/PriceAggregator.sol\":852:893  output(inputs[i].t1,inputs[i].t2,price,0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/PriceAggregator.sol\":872:878  inputs */\n      dup7\n        /* \"contracts/PriceAggregator.sol\":879:880  i */\n      dup5\n        /* \"contracts/PriceAggregator.sol\":872:881  inputs[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_32\n      jumpi\n      invalid\n    tag_32:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/PriceAggregator.sol\":872:884  inputs[i].t2 */\n      0x20\n      add\n      mload\n        /* \"contracts/PriceAggregator.sol\":852:893  output(inputs[i].t1,inputs[i].t2,price,0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/PriceAggregator.sol\":885:890  price */\n      dup3\n        /* \"contracts/PriceAggregator.sol\":852:893  output(inputs[i].t1,inputs[i].t2,price,0) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/PriceAggregator.sol\":891:892  0 */\n      0x00\n        /* \"contracts/PriceAggregator.sol\":852:893  output(inputs[i].t1,inputs[i].t2,price,0) */\n      0xffffff\n      and\n      dup2\n      mstore\n      pop\n        /* \"contracts/PriceAggregator.sol\":839:846  outputs */\n      dup4\n        /* \"contracts/PriceAggregator.sol\":847:848  i */\n      dup4\n        /* \"contracts/PriceAggregator.sol\":839:849  outputs[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_33\n      jumpi\n      invalid\n    tag_33:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"contracts/PriceAggregator.sol\":839:893  outputs[i] = output(inputs[i].t1,inputs[i].t2,price,0) */\n      dup2\n      swap1\n      mstore\n      pop\n        /* \"contracts/PriceAggregator.sol\":698:1153  if (inputs[i].providerVersion == 2) {... */\n      pop\n      jump(tag_34)\n    tag_20:\n        /* \"contracts/PriceAggregator.sol\":953:954  3 */\n      0x03\n        /* \"contracts/PriceAggregator.sol\":924:930  inputs */\n      dup5\n        /* \"contracts/PriceAggregator.sol\":931:932  i */\n      dup3\n        /* \"contracts/PriceAggregator.sol\":924:933  inputs[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_35\n      jumpi\n      invalid\n    tag_35:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/PriceAggregator.sol\":924:949  inputs[i].providerVersion */\n      0x60\n      add\n      mload\n        /* \"contracts/PriceAggregator.sol\":924:954  inputs[i].providerVersion == 3 */\n      0xff\n      and\n      eq\n        /* \"contracts/PriceAggregator.sol\":920:1153  if (inputs[i].providerVersion == 3) {... */\n      iszero\n      tag_36\n      jumpi\n        /* \"contracts/PriceAggregator.sol\":971:984  uint256 price */\n      0x00\n        /* \"contracts/PriceAggregator.sol\":985:995  uint24 fee */\n      dup1\n        /* \"contracts/PriceAggregator.sol\":999:1008  UniswapV3 */\n      linkerSymbol(\"295ab41254e875e078eae9a73e9e2c34b169d6e6e61c89bb6c8551dc204f08c5\")\n        /* \"contracts/PriceAggregator.sol\":999:1014  UniswapV3.Price */\n      0xc361e0b1\n        /* \"contracts/PriceAggregator.sol\":1015:1021  inputs */\n      dup8\n        /* \"contracts/PriceAggregator.sol\":1022:1023  i */\n      dup6\n        /* \"contracts/PriceAggregator.sol\":1015:1024  inputs[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_37\n      jumpi\n      invalid\n    tag_37:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/PriceAggregator.sol\":1015:1033  inputs[i].provider */\n      0x40\n      add\n      mload\n        /* \"contracts/PriceAggregator.sol\":1034:1040  inputs */\n      dup9\n        /* \"contracts/PriceAggregator.sol\":1041:1042  i */\n      dup7\n        /* \"contracts/PriceAggregator.sol\":1034:1043  inputs[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_38\n      jumpi\n      invalid\n    tag_38:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/PriceAggregator.sol\":1034:1046  inputs[i].t1 */\n      0x00\n      add\n      mload\n        /* \"contracts/PriceAggregator.sol\":1047:1053  inputs */\n      dup10\n        /* \"contracts/PriceAggregator.sol\":1054:1055  i */\n      dup8\n        /* \"contracts/PriceAggregator.sol\":1047:1056  inputs[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_39\n      jumpi\n      invalid\n    tag_39:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/PriceAggregator.sol\":1047:1059  inputs[i].t2 */\n      0x20\n      add\n      mload\n        /* \"contracts/PriceAggregator.sol\":999:1060  UniswapV3.Price(inputs[i].provider,inputs[i].t1,inputs[i].t2) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_40\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_40:\n      0x40\n      dup1\n      mload\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_41\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_41:\n      pop\n      gas\n      delegatecall\n      iszero\n      dup1\n      iszero\n      tag_43\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_43:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_44\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_44:\n        /* \"contracts/PriceAggregator.sol\":970:1060  (uint256 price,uint24 fee) = UniswapV3.Price(inputs[i].provider,inputs[i].t1,inputs[i].t2) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"contracts/PriceAggregator.sol\":1087:1130  output(inputs[i].t1,inputs[i].t2,price,fee) */\n      mload(0x40)\n      dup1\n      0x80\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/PriceAggregator.sol\":1094:1100  inputs */\n      dup8\n        /* \"contracts/PriceAggregator.sol\":1101:1102  i */\n      dup6\n        /* \"contracts/PriceAggregator.sol\":1094:1103  inputs[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_46\n      jumpi\n      invalid\n    tag_46:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/PriceAggregator.sol\":1094:1106  inputs[i].t1 */\n      0x00\n      add\n      mload\n        /* \"contracts/PriceAggregator.sol\":1087:1130  output(inputs[i].t1,inputs[i].t2,price,fee) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/PriceAggregator.sol\":1107:1113  inputs */\n      dup8\n        /* \"contracts/PriceAggregator.sol\":1114:1115  i */\n      dup6\n        /* \"contracts/PriceAggregator.sol\":1107:1116  inputs[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_47\n      jumpi\n      invalid\n    tag_47:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/PriceAggregator.sol\":1107:1119  inputs[i].t2 */\n      0x20\n      add\n      mload\n        /* \"contracts/PriceAggregator.sol\":1087:1130  output(inputs[i].t1,inputs[i].t2,price,fee) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/PriceAggregator.sol\":1120:1125  price */\n      dup4\n        /* \"contracts/PriceAggregator.sol\":1087:1130  output(inputs[i].t1,inputs[i].t2,price,fee) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/PriceAggregator.sol\":1126:1129  fee */\n      dup3\n        /* \"contracts/PriceAggregator.sol\":1087:1130  output(inputs[i].t1,inputs[i].t2,price,fee) */\n      0xffffff\n      and\n      dup2\n      mstore\n      pop\n        /* \"contracts/PriceAggregator.sol\":1074:1081  outputs */\n      dup5\n        /* \"contracts/PriceAggregator.sol\":1082:1083  i */\n      dup5\n        /* \"contracts/PriceAggregator.sol\":1074:1084  outputs[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_48\n      jumpi\n      invalid\n    tag_48:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"contracts/PriceAggregator.sol\":1074:1130  outputs[i] = output(inputs[i].t1,inputs[i].t2,price,fee) */\n      dup2\n      swap1\n      mstore\n      pop\n        /* \"contracts/PriceAggregator.sol\":920:1153  if (inputs[i].providerVersion == 3) {... */\n      pop\n      pop\n    tag_36:\n        /* \"contracts/PriceAggregator.sol\":698:1153  if (inputs[i].providerVersion == 2) {... */\n    tag_34:\n        /* \"contracts/PriceAggregator.sol\":684:687  i++ */\n      dup1\n      dup1\n      0x01\n      add\n      swap2\n      pop\n      pop\n        /* \"contracts/PriceAggregator.sol\":654:1162  for (uint i=0;i<inputs.length;i++){... */\n      jump(tag_16)\n    tag_17:\n      pop\n        /* \"contracts/PriceAggregator.sol\":1182:1189  outputs */\n      dup1\n        /* \"contracts/PriceAggregator.sol\":1175:1189  return outputs */\n      swap2\n      pop\n      pop\n        /* \"contracts/PriceAggregator.sol\":493:1196  function getPrices(input[] memory inputs) public override view returns (output[] memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n    tag_15:\n      mload(0x40)\n      dup1\n      0x80\n      add\n      0x40\n      mstore\n      dup1\n      and(0xffffffffffffffffffffffffffffffffffffffff, 0x00)\n      dup2\n      mstore\n      0x20\n      add\n      and(0xffffffffffffffffffffffffffffffffffffffff, 0x00)\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      and(0xffffff, 0x00)\n      dup2\n      mstore\n      pop\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":46:737   */\n    tag_50:\n      0x00\n        /* \"#utility.yul\":190:293   */\n      tag_52\n        /* \"#utility.yul\":205:292   */\n      tag_53\n        /* \"#utility.yul\":285:291   */\n      dup5\n        /* \"#utility.yul\":205:292   */\n      tag_54\n      jump\t// in\n    tag_53:\n        /* \"#utility.yul\":190:293   */\n      tag_55\n      jump\t// in\n    tag_52:\n        /* \"#utility.yul\":181:293   */\n      swap1\n      pop\n        /* \"#utility.yul\":313:318   */\n      dup1\n        /* \"#utility.yul\":341:347   */\n      dup4\n        /* \"#utility.yul\":334:339   */\n      dup3\n        /* \"#utility.yul\":327:348   */\n      mstore\n        /* \"#utility.yul\":367:371   */\n      0x20\n        /* \"#utility.yul\":360:365   */\n      dup3\n        /* \"#utility.yul\":356:372   */\n      add\n        /* \"#utility.yul\":349:372   */\n      swap1\n      pop\n        /* \"#utility.yul\":392:398   */\n      dup3\n        /* \"#utility.yul\":442:445   */\n      dup6\n        /* \"#utility.yul\":434:438   */\n      0x80\n        /* \"#utility.yul\":426:432   */\n      dup7\n        /* \"#utility.yul\":422:439   */\n      mul\n        /* \"#utility.yul\":417:420   */\n      dup3\n        /* \"#utility.yul\":413:440   */\n      add\n        /* \"#utility.yul\":410:446   */\n      gt\n        /* \"#utility.yul\":407:409   */\n      iszero\n      tag_56\n      jumpi\n        /* \"#utility.yul\":459:460   */\n      0x00\n        /* \"#utility.yul\":456:457   */\n      dup1\n        /* \"#utility.yul\":449:461   */\n      revert\n        /* \"#utility.yul\":407:409   */\n    tag_56:\n        /* \"#utility.yul\":487:488   */\n      0x00\n        /* \"#utility.yul\":472:731   */\n    tag_57:\n        /* \"#utility.yul\":497:503   */\n      dup6\n        /* \"#utility.yul\":494:495   */\n      dup2\n        /* \"#utility.yul\":491:504   */\n      lt\n        /* \"#utility.yul\":472:731   */\n      iszero\n      tag_59\n      jumpi\n        /* \"#utility.yul\":564:567   */\n      dup2\n        /* \"#utility.yul\":592:652   */\n      tag_60\n        /* \"#utility.yul\":648:651   */\n      dup9\n        /* \"#utility.yul\":636:646   */\n      dup3\n        /* \"#utility.yul\":592:652   */\n      tag_61\n      jump\t// in\n    tag_60:\n        /* \"#utility.yul\":587:590   */\n      dup5\n        /* \"#utility.yul\":580:653   */\n      mstore\n        /* \"#utility.yul\":682:686   */\n      0x20\n        /* \"#utility.yul\":677:680   */\n      dup5\n        /* \"#utility.yul\":673:687   */\n      add\n        /* \"#utility.yul\":666:687   */\n      swap4\n      pop\n        /* \"#utility.yul\":716:720   */\n      0x80\n        /* \"#utility.yul\":711:714   */\n      dup4\n        /* \"#utility.yul\":707:721   */\n      add\n        /* \"#utility.yul\":700:721   */\n      swap3\n      pop\n        /* \"#utility.yul\":532:731   */\n      pop\n        /* \"#utility.yul\":519:520   */\n      0x01\n        /* \"#utility.yul\":516:517   */\n      dup2\n        /* \"#utility.yul\":512:521   */\n      add\n        /* \"#utility.yul\":507:521   */\n      swap1\n      pop\n        /* \"#utility.yul\":472:731   */\n      jump(tag_57)\n    tag_59:\n        /* \"#utility.yul\":476:490   */\n      pop\n        /* \"#utility.yul\":171:737   */\n      pop\n      pop\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":743:882   */\n    tag_62:\n      0x00\n        /* \"#utility.yul\":827:833   */\n      dup2\n        /* \"#utility.yul\":814:834   */\n      calldataload\n        /* \"#utility.yul\":805:834   */\n      swap1\n      pop\n        /* \"#utility.yul\":843:876   */\n      tag_64\n        /* \"#utility.yul\":870:875   */\n      dup2\n        /* \"#utility.yul\":843:876   */\n      tag_65\n      jump\t// in\n    tag_64:\n        /* \"#utility.yul\":795:882   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":927:1276   */\n    tag_66:\n      0x00\n        /* \"#utility.yul\":1070:1073   */\n      dup3\n        /* \"#utility.yul\":1063:1067   */\n      0x1f\n        /* \"#utility.yul\":1055:1061   */\n      dup4\n        /* \"#utility.yul\":1051:1068   */\n      add\n        /* \"#utility.yul\":1047:1074   */\n      slt\n        /* \"#utility.yul\":1037:1039   */\n      tag_68\n      jumpi\n        /* \"#utility.yul\":1088:1089   */\n      0x00\n        /* \"#utility.yul\":1085:1086   */\n      dup1\n        /* \"#utility.yul\":1078:1090   */\n      revert\n        /* \"#utility.yul\":1037:1039   */\n    tag_68:\n        /* \"#utility.yul\":1128:1134   */\n      dup2\n        /* \"#utility.yul\":1115:1135   */\n      calldataload\n        /* \"#utility.yul\":1153:1270   */\n      tag_69\n        /* \"#utility.yul\":1266:1269   */\n      dup5\n        /* \"#utility.yul\":1258:1264   */\n      dup3\n        /* \"#utility.yul\":1251:1255   */\n      0x20\n        /* \"#utility.yul\":1243:1249   */\n      dup7\n        /* \"#utility.yul\":1239:1256   */\n      add\n        /* \"#utility.yul\":1153:1270   */\n      tag_50\n      jump\t// in\n    tag_69:\n        /* \"#utility.yul\":1144:1270   */\n      swap2\n      pop\n        /* \"#utility.yul\":1027:1276   */\n      pop\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1319:2154   */\n    tag_61:\n      0x00\n        /* \"#utility.yul\":1435:1439   */\n      0x80\n        /* \"#utility.yul\":1423:1432   */\n      dup3\n        /* \"#utility.yul\":1418:1421   */\n      dup5\n        /* \"#utility.yul\":1414:1433   */\n      sub\n        /* \"#utility.yul\":1410:1440   */\n      slt\n        /* \"#utility.yul\":1407:1409   */\n      iszero\n      tag_71\n      jumpi\n        /* \"#utility.yul\":1453:1454   */\n      0x00\n        /* \"#utility.yul\":1450:1451   */\n      dup1\n        /* \"#utility.yul\":1443:1455   */\n      revert\n        /* \"#utility.yul\":1407:1409   */\n    tag_71:\n        /* \"#utility.yul\":1475:1495   */\n      tag_72\n        /* \"#utility.yul\":1490:1494   */\n      0x80\n        /* \"#utility.yul\":1475:1495   */\n      tag_55\n      jump\t// in\n    tag_72:\n        /* \"#utility.yul\":1466:1495   */\n      swap1\n      pop\n        /* \"#utility.yul\":1552:1553   */\n      0x00\n        /* \"#utility.yul\":1592:1641   */\n      tag_73\n        /* \"#utility.yul\":1637:1640   */\n      dup5\n        /* \"#utility.yul\":1628:1634   */\n      dup3\n        /* \"#utility.yul\":1617:1626   */\n      dup6\n        /* \"#utility.yul\":1613:1635   */\n      add\n        /* \"#utility.yul\":1592:1641   */\n      tag_62\n      jump\t// in\n    tag_73:\n        /* \"#utility.yul\":1585:1589   */\n      0x00\n        /* \"#utility.yul\":1578:1583   */\n      dup4\n        /* \"#utility.yul\":1574:1590   */\n      add\n        /* \"#utility.yul\":1567:1642   */\n      mstore\n        /* \"#utility.yul\":1505:1653   */\n      pop\n        /* \"#utility.yul\":1710:1712   */\n      0x20\n        /* \"#utility.yul\":1751:1800   */\n      tag_74\n        /* \"#utility.yul\":1796:1799   */\n      dup5\n        /* \"#utility.yul\":1787:1793   */\n      dup3\n        /* \"#utility.yul\":1776:1785   */\n      dup6\n        /* \"#utility.yul\":1772:1794   */\n      add\n        /* \"#utility.yul\":1751:1800   */\n      tag_62\n      jump\t// in\n    tag_74:\n        /* \"#utility.yul\":1744:1748   */\n      0x20\n        /* \"#utility.yul\":1737:1742   */\n      dup4\n        /* \"#utility.yul\":1733:1749   */\n      add\n        /* \"#utility.yul\":1726:1801   */\n      mstore\n        /* \"#utility.yul\":1663:1812   */\n      pop\n        /* \"#utility.yul\":1875:1877   */\n      0x40\n        /* \"#utility.yul\":1916:1965   */\n      tag_75\n        /* \"#utility.yul\":1961:1964   */\n      dup5\n        /* \"#utility.yul\":1952:1958   */\n      dup3\n        /* \"#utility.yul\":1941:1950   */\n      dup6\n        /* \"#utility.yul\":1937:1959   */\n      add\n        /* \"#utility.yul\":1916:1965   */\n      tag_62\n      jump\t// in\n    tag_75:\n        /* \"#utility.yul\":1909:1913   */\n      0x40\n        /* \"#utility.yul\":1902:1907   */\n      dup4\n        /* \"#utility.yul\":1898:1914   */\n      add\n        /* \"#utility.yul\":1891:1966   */\n      mstore\n        /* \"#utility.yul\":1822:1977   */\n      pop\n        /* \"#utility.yul\":2047:2049   */\n      0x60\n        /* \"#utility.yul\":2088:2135   */\n      tag_76\n        /* \"#utility.yul\":2131:2134   */\n      dup5\n        /* \"#utility.yul\":2122:2128   */\n      dup3\n        /* \"#utility.yul\":2111:2120   */\n      dup6\n        /* \"#utility.yul\":2107:2129   */\n      add\n        /* \"#utility.yul\":2088:2135   */\n      tag_77\n      jump\t// in\n    tag_76:\n        /* \"#utility.yul\":2081:2085   */\n      0x60\n        /* \"#utility.yul\":2074:2079   */\n      dup4\n        /* \"#utility.yul\":2070:2086   */\n      add\n        /* \"#utility.yul\":2063:2136   */\n      mstore\n        /* \"#utility.yul\":1987:2147   */\n      pop\n        /* \"#utility.yul\":1397:2154   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2160:2301   */\n    tag_78:\n      0x00\n        /* \"#utility.yul\":2247:2253   */\n      dup2\n        /* \"#utility.yul\":2241:2254   */\n      mload\n        /* \"#utility.yul\":2232:2254   */\n      swap1\n      pop\n        /* \"#utility.yul\":2263:2295   */\n      tag_80\n        /* \"#utility.yul\":2289:2294   */\n      dup2\n        /* \"#utility.yul\":2263:2295   */\n      tag_81\n      jump\t// in\n    tag_80:\n        /* \"#utility.yul\":2222:2301   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2307:2450   */\n    tag_82:\n      0x00\n        /* \"#utility.yul\":2395:2401   */\n      dup2\n        /* \"#utility.yul\":2389:2402   */\n      mload\n        /* \"#utility.yul\":2380:2402   */\n      swap1\n      pop\n        /* \"#utility.yul\":2411:2444   */\n      tag_84\n        /* \"#utility.yul\":2438:2443   */\n      dup2\n        /* \"#utility.yul\":2411:2444   */\n      tag_85\n      jump\t// in\n    tag_84:\n        /* \"#utility.yul\":2370:2450   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2456:2591   */\n    tag_77:\n      0x00\n        /* \"#utility.yul\":2538:2544   */\n      dup2\n        /* \"#utility.yul\":2525:2545   */\n      calldataload\n        /* \"#utility.yul\":2516:2545   */\n      swap1\n      pop\n        /* \"#utility.yul\":2554:2585   */\n      tag_87\n        /* \"#utility.yul\":2579:2584   */\n      dup2\n        /* \"#utility.yul\":2554:2585   */\n      tag_88\n      jump\t// in\n    tag_87:\n        /* \"#utility.yul\":2506:2591   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2597:3048   */\n    tag_6:\n      0x00\n        /* \"#utility.yul\":2753:2755   */\n      0x20\n        /* \"#utility.yul\":2741:2750   */\n      dup3\n        /* \"#utility.yul\":2732:2739   */\n      dup5\n        /* \"#utility.yul\":2728:2751   */\n      sub\n        /* \"#utility.yul\":2724:2756   */\n      slt\n        /* \"#utility.yul\":2721:2723   */\n      iszero\n      tag_90\n      jumpi\n        /* \"#utility.yul\":2769:2770   */\n      0x00\n        /* \"#utility.yul\":2766:2767   */\n      dup1\n        /* \"#utility.yul\":2759:2771   */\n      revert\n        /* \"#utility.yul\":2721:2723   */\n    tag_90:\n        /* \"#utility.yul\":2840:2841   */\n      0x00\n        /* \"#utility.yul\":2829:2838   */\n      dup3\n        /* \"#utility.yul\":2825:2842   */\n      add\n        /* \"#utility.yul\":2812:2843   */\n      calldataload\n        /* \"#utility.yul\":2870:2888   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2862:2868   */\n      dup2\n        /* \"#utility.yul\":2859:2889   */\n      gt\n        /* \"#utility.yul\":2856:2858   */\n      iszero\n      tag_91\n      jumpi\n        /* \"#utility.yul\":2902:2903   */\n      0x00\n        /* \"#utility.yul\":2899:2900   */\n      dup1\n        /* \"#utility.yul\":2892:2904   */\n      revert\n        /* \"#utility.yul\":2856:2858   */\n    tag_91:\n        /* \"#utility.yul\":2930:3031   */\n      tag_92\n        /* \"#utility.yul\":3023:3030   */\n      dup5\n        /* \"#utility.yul\":3014:3020   */\n      dup3\n        /* \"#utility.yul\":3003:3012   */\n      dup6\n        /* \"#utility.yul\":2999:3021   */\n      add\n        /* \"#utility.yul\":2930:3031   */\n      tag_66\n      jump\t// in\n    tag_92:\n        /* \"#utility.yul\":2920:3031   */\n      swap2\n      pop\n        /* \"#utility.yul\":2783:3041   */\n      pop\n        /* \"#utility.yul\":2711:3048   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3054:3338   */\n    tag_30:\n      0x00\n        /* \"#utility.yul\":3173:3175   */\n      0x20\n        /* \"#utility.yul\":3161:3170   */\n      dup3\n        /* \"#utility.yul\":3152:3159   */\n      dup5\n        /* \"#utility.yul\":3148:3171   */\n      sub\n        /* \"#utility.yul\":3144:3176   */\n      slt\n        /* \"#utility.yul\":3141:3143   */\n      iszero\n      tag_94\n      jumpi\n        /* \"#utility.yul\":3189:3190   */\n      0x00\n        /* \"#utility.yul\":3186:3187   */\n      dup1\n        /* \"#utility.yul\":3179:3191   */\n      revert\n        /* \"#utility.yul\":3141:3143   */\n    tag_94:\n        /* \"#utility.yul\":3232:3233   */\n      0x00\n        /* \"#utility.yul\":3257:3321   */\n      tag_95\n        /* \"#utility.yul\":3313:3320   */\n      dup5\n        /* \"#utility.yul\":3304:3310   */\n      dup3\n        /* \"#utility.yul\":3293:3302   */\n      dup6\n        /* \"#utility.yul\":3289:3311   */\n      add\n        /* \"#utility.yul\":3257:3321   */\n      tag_82\n      jump\t// in\n    tag_95:\n        /* \"#utility.yul\":3247:3321   */\n      swap2\n      pop\n        /* \"#utility.yul\":3203:3331   */\n      pop\n        /* \"#utility.yul\":3131:3338   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3344:3782   */\n    tag_45:\n      0x00\n      dup1\n        /* \"#utility.yul\":3479:3481   */\n      0x40\n        /* \"#utility.yul\":3467:3476   */\n      dup4\n        /* \"#utility.yul\":3458:3465   */\n      dup6\n        /* \"#utility.yul\":3454:3477   */\n      sub\n        /* \"#utility.yul\":3450:3482   */\n      slt\n        /* \"#utility.yul\":3447:3449   */\n      iszero\n      tag_97\n      jumpi\n        /* \"#utility.yul\":3495:3496   */\n      0x00\n        /* \"#utility.yul\":3492:3493   */\n      dup1\n        /* \"#utility.yul\":3485:3497   */\n      revert\n        /* \"#utility.yul\":3447:3449   */\n    tag_97:\n        /* \"#utility.yul\":3538:3539   */\n      0x00\n        /* \"#utility.yul\":3563:3627   */\n      tag_98\n        /* \"#utility.yul\":3619:3626   */\n      dup6\n        /* \"#utility.yul\":3610:3616   */\n      dup3\n        /* \"#utility.yul\":3599:3608   */\n      dup7\n        /* \"#utility.yul\":3595:3617   */\n      add\n        /* \"#utility.yul\":3563:3627   */\n      tag_82\n      jump\t// in\n    tag_98:\n        /* \"#utility.yul\":3553:3627   */\n      swap3\n      pop\n        /* \"#utility.yul\":3509:3637   */\n      pop\n        /* \"#utility.yul\":3676:3678   */\n      0x20\n        /* \"#utility.yul\":3702:3765   */\n      tag_99\n        /* \"#utility.yul\":3757:3764   */\n      dup6\n        /* \"#utility.yul\":3748:3754   */\n      dup3\n        /* \"#utility.yul\":3737:3746   */\n      dup7\n        /* \"#utility.yul\":3733:3755   */\n      add\n        /* \"#utility.yul\":3702:3765   */\n      tag_78\n      jump\t// in\n    tag_99:\n        /* \"#utility.yul\":3692:3765   */\n      swap2\n      pop\n        /* \"#utility.yul\":3647:3775   */\n      pop\n        /* \"#utility.yul\":3437:3782   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3788:4063   */\n    tag_100:\n      0x00\n        /* \"#utility.yul\":3926:4020   */\n      tag_102\n        /* \"#utility.yul\":4016:4019   */\n      dup4\n        /* \"#utility.yul\":4008:4014   */\n      dup4\n        /* \"#utility.yul\":3926:4020   */\n      tag_103\n      jump\t// in\n    tag_102:\n        /* \"#utility.yul\":4052:4056   */\n      0x80\n        /* \"#utility.yul\":4047:4050   */\n      dup4\n        /* \"#utility.yul\":4043:4057   */\n      add\n        /* \"#utility.yul\":4029:4057   */\n      swap1\n      pop\n        /* \"#utility.yul\":3916:4063   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4069:4177   */\n    tag_104:\n        /* \"#utility.yul\":4146:4170   */\n      tag_106\n        /* \"#utility.yul\":4164:4169   */\n      dup2\n        /* \"#utility.yul\":4146:4170   */\n      tag_107\n      jump\t// in\n    tag_106:\n        /* \"#utility.yul\":4141:4144   */\n      dup3\n        /* \"#utility.yul\":4134:4171   */\n      mstore\n        /* \"#utility.yul\":4124:4177   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4183:4309   */\n    tag_108:\n        /* \"#utility.yul\":4278:4302   */\n      tag_110\n        /* \"#utility.yul\":4296:4301   */\n      dup2\n        /* \"#utility.yul\":4278:4302   */\n      tag_107\n      jump\t// in\n    tag_110:\n        /* \"#utility.yul\":4273:4276   */\n      dup3\n        /* \"#utility.yul\":4266:4303   */\n      mstore\n        /* \"#utility.yul\":4256:4309   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4391:5315   */\n    tag_111:\n      0x00\n        /* \"#utility.yul\":4587:4665   */\n      tag_113\n        /* \"#utility.yul\":4659:4664   */\n      dup3\n        /* \"#utility.yul\":4587:4665   */\n      tag_114\n      jump\t// in\n    tag_113:\n        /* \"#utility.yul\":4681:4791   */\n      tag_115\n        /* \"#utility.yul\":4784:4790   */\n      dup2\n        /* \"#utility.yul\":4779:4782   */\n      dup6\n        /* \"#utility.yul\":4681:4791   */\n      tag_116\n      jump\t// in\n    tag_115:\n        /* \"#utility.yul\":4674:4791   */\n      swap4\n      pop\n        /* \"#utility.yul\":4815:4895   */\n      tag_117\n        /* \"#utility.yul\":4889:4894   */\n      dup4\n        /* \"#utility.yul\":4815:4895   */\n      tag_118\n      jump\t// in\n    tag_117:\n        /* \"#utility.yul\":4918:4925   */\n      dup1\n        /* \"#utility.yul\":4949:4950   */\n      0x00\n        /* \"#utility.yul\":4934:5290   */\n    tag_119:\n        /* \"#utility.yul\":4959:4965   */\n      dup4\n        /* \"#utility.yul\":4956:4957   */\n      dup2\n        /* \"#utility.yul\":4953:4966   */\n      lt\n        /* \"#utility.yul\":4934:5290   */\n      iszero\n      tag_121\n      jumpi\n        /* \"#utility.yul\":5035:5041   */\n      dup2\n        /* \"#utility.yul\":5029:5042   */\n      mload\n        /* \"#utility.yul\":5062:5173   */\n      tag_122\n        /* \"#utility.yul\":5169:5172   */\n      dup9\n        /* \"#utility.yul\":5154:5167   */\n      dup3\n        /* \"#utility.yul\":5062:5173   */\n      tag_100\n      jump\t// in\n    tag_122:\n        /* \"#utility.yul\":5055:5173   */\n      swap8\n      pop\n        /* \"#utility.yul\":5196:5280   */\n      tag_123\n        /* \"#utility.yul\":5273:5279   */\n      dup4\n        /* \"#utility.yul\":5196:5280   */\n      tag_124\n      jump\t// in\n    tag_123:\n        /* \"#utility.yul\":5186:5280   */\n      swap3\n      pop\n        /* \"#utility.yul\":4994:5290   */\n      pop\n        /* \"#utility.yul\":4981:4982   */\n      0x01\n        /* \"#utility.yul\":4978:4979   */\n      dup2\n        /* \"#utility.yul\":4974:4983   */\n      add\n        /* \"#utility.yul\":4969:4983   */\n      swap1\n      pop\n        /* \"#utility.yul\":4934:5290   */\n      jump(tag_119)\n    tag_121:\n        /* \"#utility.yul\":4938:4952   */\n      pop\n        /* \"#utility.yul\":5306:5309   */\n      dup6\n        /* \"#utility.yul\":5299:5309   */\n      swap4\n      pop\n        /* \"#utility.yul\":4563:5315   */\n      pop\n      pop\n      pop\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5393:6230   */\n    tag_103:\n        /* \"#utility.yul\":5528:5532   */\n      0x80\n        /* \"#utility.yul\":5523:5526   */\n      dup3\n        /* \"#utility.yul\":5519:5533   */\n      add\n        /* \"#utility.yul\":5613:5617   */\n      0x00\n        /* \"#utility.yul\":5606:5611   */\n      dup3\n        /* \"#utility.yul\":5602:5618   */\n      add\n        /* \"#utility.yul\":5596:5619   */\n      mload\n        /* \"#utility.yul\":5632:5695   */\n      tag_126\n        /* \"#utility.yul\":5689:5693   */\n      0x00\n        /* \"#utility.yul\":5684:5687   */\n      dup6\n        /* \"#utility.yul\":5680:5694   */\n      add\n        /* \"#utility.yul\":5666:5678   */\n      dup3\n        /* \"#utility.yul\":5632:5695   */\n      tag_104\n      jump\t// in\n    tag_126:\n        /* \"#utility.yul\":5543:5705   */\n      pop\n        /* \"#utility.yul\":5785:5789   */\n      0x20\n        /* \"#utility.yul\":5778:5783   */\n      dup3\n        /* \"#utility.yul\":5774:5790   */\n      add\n        /* \"#utility.yul\":5768:5791   */\n      mload\n        /* \"#utility.yul\":5804:5867   */\n      tag_127\n        /* \"#utility.yul\":5861:5865   */\n      0x20\n        /* \"#utility.yul\":5856:5859   */\n      dup6\n        /* \"#utility.yul\":5852:5866   */\n      add\n        /* \"#utility.yul\":5838:5850   */\n      dup3\n        /* \"#utility.yul\":5804:5867   */\n      tag_104\n      jump\t// in\n    tag_127:\n        /* \"#utility.yul\":5715:5877   */\n      pop\n        /* \"#utility.yul\":5960:5964   */\n      0x40\n        /* \"#utility.yul\":5953:5958   */\n      dup3\n        /* \"#utility.yul\":5949:5965   */\n      add\n        /* \"#utility.yul\":5943:5966   */\n      mload\n        /* \"#utility.yul\":5979:6042   */\n      tag_128\n        /* \"#utility.yul\":6036:6040   */\n      0x40\n        /* \"#utility.yul\":6031:6034   */\n      dup6\n        /* \"#utility.yul\":6027:6041   */\n      add\n        /* \"#utility.yul\":6013:6025   */\n      dup3\n        /* \"#utility.yul\":5979:6042   */\n      tag_129\n      jump\t// in\n    tag_128:\n        /* \"#utility.yul\":5887:6052   */\n      pop\n        /* \"#utility.yul\":6133:6137   */\n      0x60\n        /* \"#utility.yul\":6126:6131   */\n      dup3\n        /* \"#utility.yul\":6122:6138   */\n      add\n        /* \"#utility.yul\":6116:6139   */\n      mload\n        /* \"#utility.yul\":6152:6213   */\n      tag_130\n        /* \"#utility.yul\":6207:6211   */\n      0x60\n        /* \"#utility.yul\":6202:6205   */\n      dup6\n        /* \"#utility.yul\":6198:6212   */\n      add\n        /* \"#utility.yul\":6184:6196   */\n      dup3\n        /* \"#utility.yul\":6152:6213   */\n      tag_131\n      jump\t// in\n    tag_130:\n        /* \"#utility.yul\":6062:6223   */\n      pop\n        /* \"#utility.yul\":5497:6230   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6236:6341   */\n    tag_131:\n        /* \"#utility.yul\":6311:6334   */\n      tag_133\n        /* \"#utility.yul\":6328:6333   */\n      dup2\n        /* \"#utility.yul\":6311:6334   */\n      tag_134\n      jump\t// in\n    tag_133:\n        /* \"#utility.yul\":6306:6309   */\n      dup3\n        /* \"#utility.yul\":6299:6335   */\n      mstore\n        /* \"#utility.yul\":6289:6341   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6347:6455   */\n    tag_129:\n        /* \"#utility.yul\":6424:6448   */\n      tag_136\n        /* \"#utility.yul\":6442:6447   */\n      dup2\n        /* \"#utility.yul\":6424:6448   */\n      tag_137\n      jump\t// in\n    tag_136:\n        /* \"#utility.yul\":6419:6422   */\n      dup3\n        /* \"#utility.yul\":6412:6449   */\n      mstore\n        /* \"#utility.yul\":6402:6455   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6461:6935   */\n    tag_25:\n      0x00\n        /* \"#utility.yul\":6656:6658   */\n      0x60\n        /* \"#utility.yul\":6645:6654   */\n      dup3\n        /* \"#utility.yul\":6641:6659   */\n      add\n        /* \"#utility.yul\":6633:6659   */\n      swap1\n      pop\n        /* \"#utility.yul\":6669:6748   */\n      tag_139\n        /* \"#utility.yul\":6745:6746   */\n      0x00\n        /* \"#utility.yul\":6734:6743   */\n      dup4\n        /* \"#utility.yul\":6730:6747   */\n      add\n        /* \"#utility.yul\":6721:6727   */\n      dup7\n        /* \"#utility.yul\":6669:6748   */\n      tag_108\n      jump\t// in\n    tag_139:\n        /* \"#utility.yul\":6758:6838   */\n      tag_140\n        /* \"#utility.yul\":6834:6836   */\n      0x20\n        /* \"#utility.yul\":6823:6832   */\n      dup4\n        /* \"#utility.yul\":6819:6837   */\n      add\n        /* \"#utility.yul\":6810:6816   */\n      dup6\n        /* \"#utility.yul\":6758:6838   */\n      tag_108\n      jump\t// in\n    tag_140:\n        /* \"#utility.yul\":6848:6928   */\n      tag_141\n        /* \"#utility.yul\":6924:6926   */\n      0x40\n        /* \"#utility.yul\":6913:6922   */\n      dup4\n        /* \"#utility.yul\":6909:6927   */\n      add\n        /* \"#utility.yul\":6900:6906   */\n      dup5\n        /* \"#utility.yul\":6848:6928   */\n      tag_108\n      jump\t// in\n    tag_141:\n        /* \"#utility.yul\":6623:6935   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6941:7410   */\n    tag_9:\n      0x00\n        /* \"#utility.yul\":7170:7172   */\n      0x20\n        /* \"#utility.yul\":7159:7168   */\n      dup3\n        /* \"#utility.yul\":7155:7173   */\n      add\n        /* \"#utility.yul\":7147:7173   */\n      swap1\n      pop\n        /* \"#utility.yul\":7219:7228   */\n      dup2\n        /* \"#utility.yul\":7213:7217   */\n      dup2\n        /* \"#utility.yul\":7209:7229   */\n      sub\n        /* \"#utility.yul\":7205:7206   */\n      0x00\n        /* \"#utility.yul\":7194:7203   */\n      dup4\n        /* \"#utility.yul\":7190:7207   */\n      add\n        /* \"#utility.yul\":7183:7230   */\n      mstore\n        /* \"#utility.yul\":7247:7403   */\n      tag_143\n        /* \"#utility.yul\":7398:7402   */\n      dup2\n        /* \"#utility.yul\":7389:7395   */\n      dup5\n        /* \"#utility.yul\":7247:7403   */\n      tag_111\n      jump\t// in\n    tag_143:\n        /* \"#utility.yul\":7239:7403   */\n      swap1\n      pop\n        /* \"#utility.yul\":7137:7410   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7416:7694   */\n    tag_55:\n      0x00\n        /* \"#utility.yul\":7482:7484   */\n      0x40\n        /* \"#utility.yul\":7476:7485   */\n      mload\n        /* \"#utility.yul\":7466:7485   */\n      swap1\n      pop\n        /* \"#utility.yul\":7524:7528   */\n      dup2\n        /* \"#utility.yul\":7516:7522   */\n      dup2\n        /* \"#utility.yul\":7512:7529   */\n      add\n        /* \"#utility.yul\":7631:7637   */\n      dup2\n        /* \"#utility.yul\":7619:7629   */\n      dup2\n        /* \"#utility.yul\":7616:7638   */\n      lt\n        /* \"#utility.yul\":7595:7613   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7583:7593   */\n      dup3\n        /* \"#utility.yul\":7580:7614   */\n      gt\n        /* \"#utility.yul\":7577:7639   */\n      or\n        /* \"#utility.yul\":7574:7576   */\n      iszero\n      tag_145\n      jumpi\n        /* \"#utility.yul\":7642:7655   */\n      tag_146\n      tag_147\n      jump\t// in\n    tag_146:\n        /* \"#utility.yul\":7574:7576   */\n    tag_145:\n        /* \"#utility.yul\":7677:7687   */\n      dup1\n        /* \"#utility.yul\":7673:7675   */\n      0x40\n        /* \"#utility.yul\":7666:7688   */\n      mstore\n        /* \"#utility.yul\":7456:7694   */\n      pop\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7700:8029   */\n    tag_54:\n      0x00\n        /* \"#utility.yul\":7890:7908   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7882:7888   */\n      dup3\n        /* \"#utility.yul\":7879:7909   */\n      gt\n        /* \"#utility.yul\":7876:7878   */\n      iszero\n      tag_149\n      jumpi\n        /* \"#utility.yul\":7912:7925   */\n      tag_150\n      tag_147\n      jump\t// in\n    tag_150:\n        /* \"#utility.yul\":7876:7878   */\n    tag_149:\n        /* \"#utility.yul\":7957:7961   */\n      0x20\n        /* \"#utility.yul\":7949:7955   */\n      dup3\n        /* \"#utility.yul\":7945:7962   */\n      mul\n        /* \"#utility.yul\":7937:7962   */\n      swap1\n      pop\n        /* \"#utility.yul\":8017:8021   */\n      0x20\n        /* \"#utility.yul\":8011:8015   */\n      dup2\n        /* \"#utility.yul\":8007:8022   */\n      add\n        /* \"#utility.yul\":7999:8022   */\n      swap1\n      pop\n        /* \"#utility.yul\":7805:8029   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8035:8191   */\n    tag_118:\n      0x00\n        /* \"#utility.yul\":8149:8152   */\n      dup2\n        /* \"#utility.yul\":8141:8152   */\n      swap1\n      pop\n        /* \"#utility.yul\":8179:8183   */\n      0x20\n        /* \"#utility.yul\":8174:8177   */\n      dup3\n        /* \"#utility.yul\":8170:8184   */\n      add\n        /* \"#utility.yul\":8162:8184   */\n      swap1\n      pop\n        /* \"#utility.yul\":8131:8191   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8197:8335   */\n    tag_114:\n      0x00\n        /* \"#utility.yul\":8322:8327   */\n      dup2\n        /* \"#utility.yul\":8316:8328   */\n      mload\n        /* \"#utility.yul\":8306:8328   */\n      swap1\n      pop\n        /* \"#utility.yul\":8295:8335   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8341:8478   */\n    tag_124:\n      0x00\n        /* \"#utility.yul\":8467:8471   */\n      0x20\n        /* \"#utility.yul\":8462:8465   */\n      dup3\n        /* \"#utility.yul\":8458:8472   */\n      add\n        /* \"#utility.yul\":8450:8472   */\n      swap1\n      pop\n        /* \"#utility.yul\":8440:8478   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8484:8692   */\n    tag_116:\n      0x00\n        /* \"#utility.yul\":8641:8647   */\n      dup3\n        /* \"#utility.yul\":8636:8639   */\n      dup3\n        /* \"#utility.yul\":8629:8648   */\n      mstore\n        /* \"#utility.yul\":8681:8685   */\n      0x20\n        /* \"#utility.yul\":8676:8679   */\n      dup3\n        /* \"#utility.yul\":8672:8686   */\n      add\n        /* \"#utility.yul\":8657:8686   */\n      swap1\n      pop\n        /* \"#utility.yul\":8619:8692   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8698:8794   */\n    tag_107:\n      0x00\n        /* \"#utility.yul\":8764:8788   */\n      tag_156\n        /* \"#utility.yul\":8782:8787   */\n      dup3\n        /* \"#utility.yul\":8764:8788   */\n      tag_157\n      jump\t// in\n    tag_156:\n        /* \"#utility.yul\":8753:8788   */\n      swap1\n      pop\n        /* \"#utility.yul\":8743:8794   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8800:8926   */\n    tag_157:\n      0x00\n        /* \"#utility.yul\":8877:8919   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":8870:8875   */\n      dup3\n        /* \"#utility.yul\":8866:8920   */\n      and\n        /* \"#utility.yul\":8855:8920   */\n      swap1\n      pop\n        /* \"#utility.yul\":8845:8926   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8932:9023   */\n    tag_134:\n      0x00\n        /* \"#utility.yul\":9008:9016   */\n      0xffffff\n        /* \"#utility.yul\":9001:9006   */\n      dup3\n        /* \"#utility.yul\":8997:9017   */\n      and\n        /* \"#utility.yul\":8986:9017   */\n      swap1\n      pop\n        /* \"#utility.yul\":8976:9023   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9029:9106   */\n    tag_137:\n      0x00\n        /* \"#utility.yul\":9095:9100   */\n      dup2\n        /* \"#utility.yul\":9084:9100   */\n      swap1\n      pop\n        /* \"#utility.yul\":9074:9106   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9112:9198   */\n    tag_161:\n      0x00\n        /* \"#utility.yul\":9187:9191   */\n      0xff\n        /* \"#utility.yul\":9180:9185   */\n      dup3\n        /* \"#utility.yul\":9176:9192   */\n      and\n        /* \"#utility.yul\":9165:9192   */\n      swap1\n      pop\n        /* \"#utility.yul\":9155:9198   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9204:9252   */\n    tag_147:\n        /* \"#utility.yul\":9237:9246   */\n      invalid\n        /* \"#utility.yul\":9258:9380   */\n    tag_65:\n        /* \"#utility.yul\":9331:9355   */\n      tag_165\n        /* \"#utility.yul\":9349:9354   */\n      dup2\n        /* \"#utility.yul\":9331:9355   */\n      tag_107\n      jump\t// in\n    tag_165:\n        /* \"#utility.yul\":9324:9329   */\n      dup2\n        /* \"#utility.yul\":9321:9356   */\n      eq\n        /* \"#utility.yul\":9311:9313   */\n      tag_166\n      jumpi\n        /* \"#utility.yul\":9370:9371   */\n      0x00\n        /* \"#utility.yul\":9367:9368   */\n      dup1\n        /* \"#utility.yul\":9360:9372   */\n      revert\n        /* \"#utility.yul\":9311:9313   */\n    tag_166:\n        /* \"#utility.yul\":9301:9380   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9386:9506   */\n    tag_81:\n        /* \"#utility.yul\":9458:9481   */\n      tag_168\n        /* \"#utility.yul\":9475:9480   */\n      dup2\n        /* \"#utility.yul\":9458:9481   */\n      tag_134\n      jump\t// in\n    tag_168:\n        /* \"#utility.yul\":9451:9456   */\n      dup2\n        /* \"#utility.yul\":9448:9482   */\n      eq\n        /* \"#utility.yul\":9438:9440   */\n      tag_169\n      jumpi\n        /* \"#utility.yul\":9496:9497   */\n      0x00\n        /* \"#utility.yul\":9493:9494   */\n      dup1\n        /* \"#utility.yul\":9486:9498   */\n      revert\n        /* \"#utility.yul\":9438:9440   */\n    tag_169:\n        /* \"#utility.yul\":9428:9506   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9512:9634   */\n    tag_85:\n        /* \"#utility.yul\":9585:9609   */\n      tag_171\n        /* \"#utility.yul\":9603:9608   */\n      dup2\n        /* \"#utility.yul\":9585:9609   */\n      tag_137\n      jump\t// in\n    tag_171:\n        /* \"#utility.yul\":9578:9583   */\n      dup2\n        /* \"#utility.yul\":9575:9610   */\n      eq\n        /* \"#utility.yul\":9565:9567   */\n      tag_172\n      jumpi\n        /* \"#utility.yul\":9624:9625   */\n      0x00\n        /* \"#utility.yul\":9621:9622   */\n      dup1\n        /* \"#utility.yul\":9614:9626   */\n      revert\n        /* \"#utility.yul\":9565:9567   */\n    tag_172:\n        /* \"#utility.yul\":9555:9634   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9640:9758   */\n    tag_88:\n        /* \"#utility.yul\":9711:9733   */\n      tag_174\n        /* \"#utility.yul\":9727:9732   */\n      dup2\n        /* \"#utility.yul\":9711:9733   */\n      tag_161\n      jump\t// in\n    tag_174:\n        /* \"#utility.yul\":9704:9709   */\n      dup2\n        /* \"#utility.yul\":9701:9734   */\n      eq\n        /* \"#utility.yul\":9691:9693   */\n      tag_175\n      jumpi\n        /* \"#utility.yul\":9748:9749   */\n      0x00\n        /* \"#utility.yul\":9745:9746   */\n      dup1\n        /* \"#utility.yul\":9738:9750   */\n      revert\n        /* \"#utility.yul\":9691:9693   */\n    tag_175:\n        /* \"#utility.yul\":9681:9758   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122070292eaa1f0a942112aabea08e7f81c541f6e96809324a98a50037c20bd06fd764736f6c63430007060033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {
								"contracts/libraries/UniswapV2.sol": {
									"UniswapV2": [
										{
											"length": 20,
											"start": 268
										}
									]
								},
								"contracts/libraries/UniswapV3.sol": {
									"UniswapV3": [
										{
											"length": 20,
											"start": 674
										}
									]
								}
							},
							"object": "608060405234801561001057600080fd5b50610944806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063ff514fa314610030575b600080fd5b61004a600480360381019061004591906105bc565b610060565b60405161005791906107a0565b60405180910390f35b60606000825167ffffffffffffffff8111801561007c57600080fd5b506040519080825280602002602001820160405280156100b657816020015b6100a3610405565b81526020019060019003908161009b5790505b50905060005b83518110156103fb5760028482815181106100d357fe5b60200260200101516060015160ff16141561025a57600073__$66db80e837caed232b747c0dfa8ba195e8$__63c361e0b186848151811061011057fe5b60200260200101516040015187858151811061012857fe5b60200260200101516000015188868151811061014057fe5b6020026020010151602001516040518463ffffffff1660e01b815260040161016a93929190610769565b60206040518083038186803b15801561018257600080fd5b505af4158015610196573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101ba91906105fd565b905060405180608001604052808684815181106101d357fe5b60200260200101516000015173ffffffffffffffffffffffffffffffffffffffff16815260200186848151811061020657fe5b60200260200101516020015173ffffffffffffffffffffffffffffffffffffffff168152602001828152602001600062ffffff1681525083838151811061024957fe5b6020026020010181905250506103ee565b600384828151811061026857fe5b60200260200101516060015160ff1614156103ed5760008073__$295ab41254e875e078eae9a73e9e2c34b1$__63c361e0b18785815181106102a657fe5b6020026020010151604001518886815181106102be57fe5b6020026020010151600001518987815181106102d657fe5b6020026020010151602001516040518463ffffffff1660e01b815260040161030093929190610769565b604080518083038186803b15801561031757600080fd5b505af415801561032b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061034f9190610626565b91509150604051806080016040528087858151811061036a57fe5b60200260200101516000015173ffffffffffffffffffffffffffffffffffffffff16815260200187858151811061039d57fe5b60200260200101516020015173ffffffffffffffffffffffffffffffffffffffff1681526020018381526020018262ffffff168152508484815181106103df57fe5b602002602001018190525050505b5b80806001019150506100bc565b5080915050919050565b6040518060800160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001600062ffffff1681525090565b600061047161046c846107f3565b6107c2565b9050808382526020820190508285608086028201111561049057600080fd5b60005b858110156104c057816104a68882610509565b845260208401935060808301925050600181019050610493565b5050509392505050565b6000813590506104d9816108b2565b92915050565b600082601f8301126104f057600080fd5b813561050084826020860161045e565b91505092915050565b60006080828403121561051b57600080fd5b61052560806107c2565b90506000610535848285016104ca565b6000830152506020610549848285016104ca565b602083015250604061055d848285016104ca565b6040830152506060610571848285016105a7565b60608301525092915050565b60008151905061058c816108c9565b92915050565b6000815190506105a1816108e0565b92915050565b6000813590506105b6816108f7565b92915050565b6000602082840312156105ce57600080fd5b600082013567ffffffffffffffff8111156105e857600080fd5b6105f4848285016104df565b91505092915050565b60006020828403121561060f57600080fd5b600061061d84828501610592565b91505092915050565b6000806040838503121561063957600080fd5b600061064785828601610592565b92505060206106588582860161057d565b9150509250929050565b600061066e83836106f6565b60808301905092915050565b61068381610858565b82525050565b61069281610858565b82525050565b60006106a38261082f565b6106ad8185610847565b93506106b88361081f565b8060005b838110156106e95781516106d08882610662565b97506106db8361083a565b9250506001810190506106bc565b5085935050505092915050565b60808201600082015161070c600085018261067a565b50602082015161071f602085018261067a565b506040820151610732604085018261075a565b506060820151610745606085018261074b565b50505050565b6107548161088a565b82525050565b61076381610899565b82525050565b600060608201905061077e6000830186610689565b61078b6020830185610689565b6107986040830184610689565b949350505050565b600060208201905081810360008301526107ba8184610698565b905092915050565b6000604051905081810181811067ffffffffffffffff821117156107e9576107e86108b0565b5b8060405250919050565b600067ffffffffffffffff82111561080e5761080d6108b0565b5b602082029050602081019050919050565b6000819050602082019050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b60006108638261086a565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600062ffffff82169050919050565b6000819050919050565b600060ff82169050919050565bfe5b6108bb81610858565b81146108c657600080fd5b50565b6108d28161088a565b81146108dd57600080fd5b50565b6108e981610899565b81146108f457600080fd5b50565b610900816108a3565b811461090b57600080fd5b5056fea264697066735822122070292eaa1f0a942112aabea08e7f81c541f6e96809324a98a50037c20bd06fd764736f6c63430007060033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x944 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xFF514FA3 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x45 SWAP2 SWAP1 PUSH2 0x5BC JUMP JUMPDEST PUSH2 0x60 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x57 SWAP2 SWAP1 PUSH2 0x7A0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP3 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0x7C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xB6 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0xA3 PUSH2 0x405 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x9B JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x3FB JUMPI PUSH1 0x2 DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xD3 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x60 ADD MLOAD PUSH1 0xFF AND EQ ISZERO PUSH2 0x25A JUMPI PUSH1 0x0 PUSH20 0x0 PUSH4 0xC361E0B1 DUP7 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x110 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 ADD MLOAD DUP8 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x128 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD MLOAD DUP9 DUP7 DUP2 MLOAD DUP2 LT PUSH2 0x140 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16A SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x769 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x182 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x196 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1BA SWAP2 SWAP1 PUSH2 0x5FD JUMP JUMPDEST SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 DUP7 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x1D3 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x206 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH3 0xFFFFFF AND DUP2 MSTORE POP DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x249 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP POP PUSH2 0x3EE JUMP JUMPDEST PUSH1 0x3 DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x268 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x60 ADD MLOAD PUSH1 0xFF AND EQ ISZERO PUSH2 0x3ED JUMPI PUSH1 0x0 DUP1 PUSH20 0x0 PUSH4 0xC361E0B1 DUP8 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x2A6 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 ADD MLOAD DUP9 DUP7 DUP2 MLOAD DUP2 LT PUSH2 0x2BE JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD MLOAD DUP10 DUP8 DUP2 MLOAD DUP2 LT PUSH2 0x2D6 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x300 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x769 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x317 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x32B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x34F SWAP2 SWAP1 PUSH2 0x626 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 DUP8 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x36A JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x39D JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH3 0xFFFFFF AND DUP2 MSTORE POP DUP5 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x3DF JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP POP POP JUMPDEST JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0xBC JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH3 0xFFFFFF AND DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x471 PUSH2 0x46C DUP5 PUSH2 0x7F3 JUMP JUMPDEST PUSH2 0x7C2 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP DUP3 DUP6 PUSH1 0x80 DUP7 MUL DUP3 ADD GT ISZERO PUSH2 0x490 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x4C0 JUMPI DUP2 PUSH2 0x4A6 DUP9 DUP3 PUSH2 0x509 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH1 0x80 DUP4 ADD SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x493 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x4D9 DUP2 PUSH2 0x8B2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x4F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x500 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x45E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x51B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x525 PUSH1 0x80 PUSH2 0x7C2 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x535 DUP5 DUP3 DUP6 ADD PUSH2 0x4CA JUMP JUMPDEST PUSH1 0x0 DUP4 ADD MSTORE POP PUSH1 0x20 PUSH2 0x549 DUP5 DUP3 DUP6 ADD PUSH2 0x4CA JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP PUSH1 0x40 PUSH2 0x55D DUP5 DUP3 DUP6 ADD PUSH2 0x4CA JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MSTORE POP PUSH1 0x60 PUSH2 0x571 DUP5 DUP3 DUP6 ADD PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x60 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x58C DUP2 PUSH2 0x8C9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x5A1 DUP2 PUSH2 0x8E0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x5B6 DUP2 PUSH2 0x8F7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x5E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x5F4 DUP5 DUP3 DUP6 ADD PUSH2 0x4DF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x60F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x61D DUP5 DUP3 DUP6 ADD PUSH2 0x592 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x639 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x647 DUP6 DUP3 DUP7 ADD PUSH2 0x592 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x658 DUP6 DUP3 DUP7 ADD PUSH2 0x57D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x66E DUP4 DUP4 PUSH2 0x6F6 JUMP JUMPDEST PUSH1 0x80 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x683 DUP2 PUSH2 0x858 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x692 DUP2 PUSH2 0x858 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6A3 DUP3 PUSH2 0x82F JUMP JUMPDEST PUSH2 0x6AD DUP2 DUP6 PUSH2 0x847 JUMP JUMPDEST SWAP4 POP PUSH2 0x6B8 DUP4 PUSH2 0x81F JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x6E9 JUMPI DUP2 MLOAD PUSH2 0x6D0 DUP9 DUP3 PUSH2 0x662 JUMP JUMPDEST SWAP8 POP PUSH2 0x6DB DUP4 PUSH2 0x83A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x6BC JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x80 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x70C PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x67A JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x71F PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x67A JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x732 PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x75A JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x745 PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0x74B JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x754 DUP2 PUSH2 0x88A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x763 DUP2 PUSH2 0x899 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x77E PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x689 JUMP JUMPDEST PUSH2 0x78B PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x689 JUMP JUMPDEST PUSH2 0x798 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x689 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x7BA DUP2 DUP5 PUSH2 0x698 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP DUP2 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x7E9 JUMPI PUSH2 0x7E8 PUSH2 0x8B0 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x80E JUMPI PUSH2 0x80D PUSH2 0x8B0 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x863 DUP3 PUSH2 0x86A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST INVALID JUMPDEST PUSH2 0x8BB DUP2 PUSH2 0x858 JUMP JUMPDEST DUP2 EQ PUSH2 0x8C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x8D2 DUP2 PUSH2 0x88A JUMP JUMPDEST DUP2 EQ PUSH2 0x8DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x8E9 DUP2 PUSH2 0x899 JUMP JUMPDEST DUP2 EQ PUSH2 0x8F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x900 DUP2 PUSH2 0x8A3 JUMP JUMPDEST DUP2 EQ PUSH2 0x90B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH17 0x292EAA1F0A942112AABEA08E7F81C541F6 0xE9 PUSH9 0x9324A98A50037C20B 0xD0 PUSH16 0xD764736F6C6343000706003300000000 ",
							"sourceMap": "441:759:11:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:9761:17",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "171:566:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "181:112:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "285:6:17"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_array$_t_struct$_input_$1782_memory_ptr_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "205:79:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "205:87:17"
																	}
																],
																"functionName": {
																	"name": "allocateMemory",
																	"nodeType": "YulIdentifier",
																	"src": "190:14:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "190:103:17"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "181:5:17"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "302:16:17",
															"value": {
																"name": "array",
																"nodeType": "YulIdentifier",
																"src": "313:5:17"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "306:3:17",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "334:5:17"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "341:6:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "327:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "327:21:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "327:21:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "349:23:17",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "360:5:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "367:4:17",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "356:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "356:16:17"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "349:3:17"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "381:17:17",
															"value": {
																"name": "offset",
																"nodeType": "YulIdentifier",
																"src": "392:6:17"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "385:3:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "447:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "456:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "459:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "449:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "449:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "449:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "417:3:17"
																			},
																			{
																				"arguments": [
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "426:6:17"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "434:4:17",
																						"type": "",
																						"value": "0x80"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nodeType": "YulIdentifier",
																					"src": "422:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "422:17:17"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "413:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "413:27:17"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "442:3:17"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "410:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "410:36:17"
															},
															"nodeType": "YulIf",
															"src": "407:2:17"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "532:199:17",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "546:21:17",
																		"value": {
																			"name": "src",
																			"nodeType": "YulIdentifier",
																			"src": "564:3:17"
																		},
																		"variables": [
																			{
																				"name": "elementPos",
																				"nodeType": "YulTypedName",
																				"src": "550:10:17",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "587:3:17"
																				},
																				{
																					"arguments": [
																						{
																							"name": "elementPos",
																							"nodeType": "YulIdentifier",
																							"src": "636:10:17"
																						},
																						{
																							"name": "end",
																							"nodeType": "YulIdentifier",
																							"src": "648:3:17"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_t_struct$_input_$1782_memory_ptr",
																						"nodeType": "YulIdentifier",
																						"src": "592:43:17"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "592:60:17"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "580:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "580:73:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "580:73:17"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "666:21:17",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "677:3:17"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "682:4:17",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "673:3:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "673:14:17"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "666:3:17"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "700:21:17",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "711:3:17"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "716:4:17",
																					"type": "",
																					"value": "0x80"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "707:3:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "707:14:17"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "700:3:17"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "494:1:17"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "497:6:17"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "491:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "491:13:17"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "505:18:17",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "507:14:17",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "516:1:17"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "519:1:17",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "512:3:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "512:9:17"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "507:1:17"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "476:14:17",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "478:10:17",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "487:1:17",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nodeType": "YulTypedName",
																				"src": "482:1:17",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "472:259:17"
														}
													]
												},
												"name": "abi_decode_available_length_t_array$_t_struct$_input_$1782_memory_ptr_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "141:6:17",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "149:6:17",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "157:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "165:5:17",
														"type": ""
													}
												],
												"src": "46:691:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "795:87:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "805:29:17",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "827:6:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "814:12:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "814:20:17"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "805:5:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "870:5:17"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "843:26:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "843:33:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "843:33:17"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "773:6:17",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "781:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "789:5:17",
														"type": ""
													}
												],
												"src": "743:139:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1027:249:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1076:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1085:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1088:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1078:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1078:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1078:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1055:6:17"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1063:4:17",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1051:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1051:17:17"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "1070:3:17"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "1047:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1047:27:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1040:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1040:35:17"
															},
															"nodeType": "YulIf",
															"src": "1037:2:17"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1101:34:17",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1128:6:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1115:12:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1115:20:17"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "1105:6:17",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1144:126:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1243:6:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1251:4:17",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1239:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1239:17:17"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1258:6:17"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "1266:3:17"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_array$_t_struct$_input_$1782_memory_ptr_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "1153:85:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1153:117:17"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "1144:5:17"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_array$_t_struct$_input_$1782_memory_ptr_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1005:6:17",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1013:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "1021:5:17",
														"type": ""
													}
												],
												"src": "927:349:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1397:757:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1441:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1450:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1453:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1443:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1443:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1443:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "1418:3:17"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1423:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1414:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1414:19:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1435:4:17",
																		"type": "",
																		"value": "0x80"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1410:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1410:30:17"
															},
															"nodeType": "YulIf",
															"src": "1407:2:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1466:29:17",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1490:4:17",
																		"type": "",
																		"value": "0x80"
																	}
																],
																"functionName": {
																	"name": "allocateMemory",
																	"nodeType": "YulIdentifier",
																	"src": "1475:14:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "1475:20:17"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1466:5:17"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1505:148:17",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1538:15:17",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1552:1:17",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1542:6:17",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1578:5:17"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1585:4:17",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1574:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1574:16:17"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "headStart",
																								"nodeType": "YulIdentifier",
																								"src": "1617:9:17"
																							},
																							{
																								"name": "offset",
																								"nodeType": "YulIdentifier",
																								"src": "1628:6:17"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "1613:3:17"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1613:22:17"
																					},
																					{
																						"name": "end",
																						"nodeType": "YulIdentifier",
																						"src": "1637:3:17"
																					}
																				],
																				"functionName": {
																					"name": "abi_decode_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "1592:20:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1592:49:17"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nodeType": "YulIdentifier",
																			"src": "1567:6:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1567:75:17"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "1567:75:17"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1663:149:17",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1696:16:17",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1710:2:17",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1700:6:17",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1737:5:17"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1744:4:17",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1733:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1733:16:17"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "headStart",
																								"nodeType": "YulIdentifier",
																								"src": "1776:9:17"
																							},
																							{
																								"name": "offset",
																								"nodeType": "YulIdentifier",
																								"src": "1787:6:17"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "1772:3:17"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1772:22:17"
																					},
																					{
																						"name": "end",
																						"nodeType": "YulIdentifier",
																						"src": "1796:3:17"
																					}
																				],
																				"functionName": {
																					"name": "abi_decode_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "1751:20:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1751:49:17"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nodeType": "YulIdentifier",
																			"src": "1726:6:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1726:75:17"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "1726:75:17"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1822:155:17",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1861:16:17",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1875:2:17",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1865:6:17",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1902:5:17"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1909:4:17",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1898:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1898:16:17"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "headStart",
																								"nodeType": "YulIdentifier",
																								"src": "1941:9:17"
																							},
																							{
																								"name": "offset",
																								"nodeType": "YulIdentifier",
																								"src": "1952:6:17"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "1937:3:17"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1937:22:17"
																					},
																					{
																						"name": "end",
																						"nodeType": "YulIdentifier",
																						"src": "1961:3:17"
																					}
																				],
																				"functionName": {
																					"name": "abi_decode_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "1916:20:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1916:49:17"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nodeType": "YulIdentifier",
																			"src": "1891:6:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1891:75:17"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "1891:75:17"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1987:160:17",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2033:16:17",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2047:2:17",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2037:6:17",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2074:5:17"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2081:4:17",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2070:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2070:16:17"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "headStart",
																								"nodeType": "YulIdentifier",
																								"src": "2111:9:17"
																							},
																							{
																								"name": "offset",
																								"nodeType": "YulIdentifier",
																								"src": "2122:6:17"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "2107:3:17"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2107:22:17"
																					},
																					{
																						"name": "end",
																						"nodeType": "YulIdentifier",
																						"src": "2131:3:17"
																					}
																				],
																				"functionName": {
																					"name": "abi_decode_t_uint8",
																					"nodeType": "YulIdentifier",
																					"src": "2088:18:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2088:47:17"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nodeType": "YulIdentifier",
																			"src": "2063:6:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2063:73:17"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "2063:73:17"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_struct$_input_$1782_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1372:9:17",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1383:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1391:5:17",
														"type": ""
													}
												],
												"src": "1319:835:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2222:79:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2232:22:17",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2247:6:17"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2241:5:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "2241:13:17"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2232:5:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2289:5:17"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint24",
																	"nodeType": "YulIdentifier",
																	"src": "2263:25:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "2263:32:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2263:32:17"
														}
													]
												},
												"name": "abi_decode_t_uint24_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2200:6:17",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2208:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2216:5:17",
														"type": ""
													}
												],
												"src": "2160:141:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2370:80:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2380:22:17",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2395:6:17"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2389:5:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "2389:13:17"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2380:5:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2438:5:17"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2411:26:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "2411:33:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2411:33:17"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2348:6:17",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2356:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2364:5:17",
														"type": ""
													}
												],
												"src": "2307:143:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2506:85:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2516:29:17",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2538:6:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2525:12:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "2525:20:17"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2516:5:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2579:5:17"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint8",
																	"nodeType": "YulIdentifier",
																	"src": "2554:24:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "2554:31:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2554:31:17"
														}
													]
												},
												"name": "abi_decode_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2484:6:17",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2492:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2500:5:17",
														"type": ""
													}
												],
												"src": "2456:135:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2711:337:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2757:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2766:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2769:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2759:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2759:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2759:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2732:7:17"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2741:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2728:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2728:23:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2753:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2724:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "2724:32:17"
															},
															"nodeType": "YulIf",
															"src": "2721:2:17"
														},
														{
															"nodeType": "YulBlock",
															"src": "2783:258:17",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2798:45:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2829:9:17"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2840:1:17",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2825:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2825:17:17"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "2812:12:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2812:31:17"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2802:6:17",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "2890:16:17",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2899:1:17",
																							"type": "",
																							"value": "0"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2902:1:17",
																							"type": "",
																							"value": "0"
																						}
																					],
																					"functionName": {
																						"name": "revert",
																						"nodeType": "YulIdentifier",
																						"src": "2892:6:17"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2892:12:17"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "2892:12:17"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "2862:6:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2870:18:17",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "2859:2:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2859:30:17"
																	},
																	"nodeType": "YulIf",
																	"src": "2856:2:17"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2920:111:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3003:9:17"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3014:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2999:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2999:22:17"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3023:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_struct$_input_$1782_memory_ptr_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "2930:68:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2930:101:17"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2920:6:17"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_struct$_input_$1782_memory_ptr_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2681:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2692:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2704:6:17",
														"type": ""
													}
												],
												"src": "2597:451:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3131:207:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3177:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3186:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3189:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3179:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3179:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3179:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3152:7:17"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3161:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3148:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3148:23:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3173:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3144:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "3144:32:17"
															},
															"nodeType": "YulIf",
															"src": "3141:2:17"
														},
														{
															"nodeType": "YulBlock",
															"src": "3203:128:17",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3218:15:17",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3232:1:17",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3222:6:17",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3247:74:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3293:9:17"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3304:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3289:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3289:22:17"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3313:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "3257:31:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3257:64:17"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3247:6:17"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3101:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3112:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3124:6:17",
														"type": ""
													}
												],
												"src": "3054:284:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3437:345:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3483:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3492:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3495:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3485:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3485:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3485:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3458:7:17"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3467:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3454:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3454:23:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3479:2:17",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3450:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "3450:32:17"
															},
															"nodeType": "YulIf",
															"src": "3447:2:17"
														},
														{
															"nodeType": "YulBlock",
															"src": "3509:128:17",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3524:15:17",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3538:1:17",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3528:6:17",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3553:74:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3599:9:17"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3610:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3595:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3595:22:17"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3619:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "3563:31:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3563:64:17"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3553:6:17"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3647:128:17",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3662:16:17",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3676:2:17",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3666:6:17",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3692:73:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3737:9:17"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3748:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3733:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3733:22:17"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3757:7:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint24_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "3702:30:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3702:63:17"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "3692:6:17"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint24_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3399:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3410:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3422:6:17",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3430:6:17",
														"type": ""
													}
												],
												"src": "3344:438:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3916:147:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4008:6:17"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4016:3:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_struct$_output_$1791_memory_ptr_to_t_struct$_output_$1791_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "3926:81:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "3926:94:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3926:94:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4029:28:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4047:3:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4052:4:17",
																		"type": "",
																		"value": "0x80"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4043:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "4043:14:17"
															},
															"variableNames": [
																{
																	"name": "updatedPos",
																	"nodeType": "YulIdentifier",
																	"src": "4029:10:17"
																}
															]
														}
													]
												},
												"name": "abi_encodeUpdatedPos_t_struct$_output_$1791_memory_ptr_to_t_struct$_output_$1791_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3889:6:17",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3897:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updatedPos",
														"nodeType": "YulTypedName",
														"src": "3905:10:17",
														"type": ""
													}
												],
												"src": "3788:275:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4124:53:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4141:3:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4164:5:17"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4146:17:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4146:24:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4134:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "4134:37:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4134:37:17"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4112:5:17",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4119:3:17",
														"type": ""
													}
												],
												"src": "4069:108:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4256:53:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4273:3:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4296:5:17"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4278:17:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4278:24:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4266:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "4266:37:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4266:37:17"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack_library",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4244:5:17",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4251:3:17",
														"type": ""
													}
												],
												"src": "4183:126:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4563:752:17",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4573:92:17",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4659:5:17"
																	}
																],
																"functionName": {
																	"name": "array_length_t_array$_t_struct$_output_$1791_memory_ptr_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "4587:71:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "4587:78:17"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "4577:6:17",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4674:117:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4779:3:17"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4784:6:17"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_array$_t_struct$_output_$1791_memory_ptr_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4681:97:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "4681:110:17"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4674:3:17"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4800:95:17",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4889:5:17"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_t_array$_t_struct$_output_$1791_memory_ptr_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "4815:73:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "4815:80:17"
															},
															"variables": [
																{
																	"name": "baseRef",
																	"nodeType": "YulTypedName",
																	"src": "4804:7:17",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4904:21:17",
															"value": {
																"name": "baseRef",
																"nodeType": "YulIdentifier",
																"src": "4918:7:17"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "4908:6:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4994:296:17",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "5008:34:17",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "5035:6:17"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "5029:5:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5029:13:17"
																		},
																		"variables": [
																			{
																				"name": "elementValue0",
																				"nodeType": "YulTypedName",
																				"src": "5012:13:17",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "5055:118:17",
																		"value": {
																			"arguments": [
																				{
																					"name": "elementValue0",
																					"nodeType": "YulIdentifier",
																					"src": "5154:13:17"
																				},
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "5169:3:17"
																				}
																			],
																			"functionName": {
																				"name": "abi_encodeUpdatedPos_t_struct$_output_$1791_memory_ptr_to_t_struct$_output_$1791_memory_ptr",
																				"nodeType": "YulIdentifier",
																				"src": "5062:91:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5062:111:17"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "5055:3:17"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "5186:94:17",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "5273:6:17"
																				}
																			],
																			"functionName": {
																				"name": "array_nextElement_t_array$_t_struct$_output_$1791_memory_ptr_$dyn_memory_ptr",
																				"nodeType": "YulIdentifier",
																				"src": "5196:76:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5196:84:17"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "5186:6:17"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "4956:1:17"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4959:6:17"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "4953:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "4953:13:17"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "4967:18:17",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "4969:14:17",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "4978:1:17"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4981:1:17",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "4974:3:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4974:9:17"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "4969:1:17"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "4938:14:17",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "4940:10:17",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "4949:1:17",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nodeType": "YulTypedName",
																				"src": "4944:1:17",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "4934:356:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5299:10:17",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "5306:3:17"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5299:3:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_array$_t_struct$_output_$1791_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_output_$1791_memory_ptr_$dyn_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4542:5:17",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4549:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4558:3:17",
														"type": ""
													}
												],
												"src": "4391:924:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5497:733:17",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5507:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5523:3:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5528:4:17",
																		"type": "",
																		"value": "0x80"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5519:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "5519:14:17"
															},
															"variables": [
																{
																	"name": "tail",
																	"nodeType": "YulTypedName",
																	"src": "5511:4:17",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5543:162:17",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5576:43:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "5606:5:17"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5613:4:17",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5602:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5602:16:17"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "5596:5:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5596:23:17"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "5580:12:17",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "5666:12:17"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "5684:3:17"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5689:4:17",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5680:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5680:14:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_address_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5632:33:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5632:63:17"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "5632:63:17"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5715:162:17",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5748:43:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "5778:5:17"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5785:4:17",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5774:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5774:16:17"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "5768:5:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5768:23:17"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "5752:12:17",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "5838:12:17"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "5856:3:17"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5861:4:17",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5852:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5852:14:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_address_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5804:33:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5804:63:17"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "5804:63:17"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5887:165:17",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5923:43:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "5953:5:17"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5960:4:17",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5949:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5949:16:17"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "5943:5:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5943:23:17"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "5927:12:17",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "6013:12:17"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "6031:3:17"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6036:4:17",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6027:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6027:14:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "5979:33:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5979:63:17"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "5979:63:17"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "6062:161:17",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6096:43:17",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "6126:5:17"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6133:4:17",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6122:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6122:16:17"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "6116:5:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6116:23:17"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "6100:12:17",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "6184:12:17"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "6202:3:17"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6207:4:17",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6198:3:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6198:14:17"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint24_to_t_uint24",
																			"nodeType": "YulIdentifier",
																			"src": "6152:31:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6152:61:17"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "6152:61:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_struct$_output_$1791_memory_ptr_to_t_struct$_output_$1791_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5484:5:17",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5491:3:17",
														"type": ""
													}
												],
												"src": "5393:837:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6289:52:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6306:3:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6328:5:17"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint24",
																			"nodeType": "YulIdentifier",
																			"src": "6311:16:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6311:23:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6299:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "6299:36:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6299:36:17"
														}
													]
												},
												"name": "abi_encode_t_uint24_to_t_uint24",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6277:5:17",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6284:3:17",
														"type": ""
													}
												],
												"src": "6236:105:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6402:53:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6419:3:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6442:5:17"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "6424:17:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6424:24:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6412:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "6412:37:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6412:37:17"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6390:5:17",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6397:3:17",
														"type": ""
													}
												],
												"src": "6347:108:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6623:312:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6633:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6645:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6656:2:17",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6641:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "6641:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6633:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6721:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6734:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6745:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6730:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6730:17:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack_library",
																	"nodeType": "YulIdentifier",
																	"src": "6669:51:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "6669:79:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6669:79:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "6810:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6823:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6834:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6819:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6819:18:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack_library",
																	"nodeType": "YulIdentifier",
																	"src": "6758:51:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "6758:80:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6758:80:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "6900:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6913:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6924:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6909:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6909:18:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack_library",
																	"nodeType": "YulIdentifier",
																	"src": "6848:51:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "6848:80:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6848:80:17"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_address__to_t_address_t_address_t_address__fromStack_library_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6579:9:17",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "6591:6:17",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6599:6:17",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6607:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6618:4:17",
														"type": ""
													}
												],
												"src": "6461:474:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7137:273:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7147:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7159:9:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7170:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7155:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "7155:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7147:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7194:9:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7205:1:17",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7190:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7190:17:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "7213:4:17"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7219:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7209:3:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7209:20:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7183:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "7183:47:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7183:47:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7239:164:17",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7389:6:17"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "7398:4:17"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_struct$_output_$1791_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_output_$1791_memory_ptr_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7247:141:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "7247:156:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7239:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_struct$_output_$1791_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_output_$1791_memory_ptr_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7109:9:17",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7121:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7132:4:17",
														"type": ""
													}
												],
												"src": "6941:469:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7456:238:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7466:19:17",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7482:2:17",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "7476:5:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "7476:9:17"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "7466:6:17"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7494:35:17",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "7516:6:17"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "7524:4:17"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7512:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "7512:17:17"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "7498:10:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7640:17:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error",
																				"nodeType": "YulIdentifier",
																				"src": "7642:11:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7642:13:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7642:13:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "7583:10:17"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7595:18:17",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "7580:2:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7580:34:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "7619:10:17"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "7631:6:17"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "7616:2:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7616:22:17"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "7577:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "7577:62:17"
															},
															"nodeType": "YulIf",
															"src": "7574:2:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7673:2:17",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "7677:10:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7666:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "7666:22:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7666:22:17"
														}
													]
												},
												"name": "allocateMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "7440:4:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "7449:6:17",
														"type": ""
													}
												],
												"src": "7416:278:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7805:224:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7910:17:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error",
																				"nodeType": "YulIdentifier",
																				"src": "7912:11:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7912:13:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7912:13:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7882:6:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7890:18:17",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7879:2:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "7879:30:17"
															},
															"nodeType": "YulIf",
															"src": "7876:2:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7937:25:17",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7949:6:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7957:4:17",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "7945:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "7945:17:17"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "7937:4:17"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7999:23:17",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "8011:4:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8017:4:17",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8007:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "8007:15:17"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "7999:4:17"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_array$_t_struct$_input_$1782_memory_ptr_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "7789:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "7800:4:17",
														"type": ""
													}
												],
												"src": "7700:329:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8131:60:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8141:11:17",
															"value": {
																"name": "ptr",
																"nodeType": "YulIdentifier",
																"src": "8149:3:17"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "8141:4:17"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8162:22:17",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "8174:3:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8179:4:17",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8170:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "8170:14:17"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "8162:4:17"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_array$_t_struct$_output_$1791_memory_ptr_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "8118:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "8126:4:17",
														"type": ""
													}
												],
												"src": "8035:156:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8295:40:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8306:22:17",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "8322:5:17"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "8316:5:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "8316:12:17"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "8306:6:17"
																}
															]
														}
													]
												},
												"name": "array_length_t_array$_t_struct$_output_$1791_memory_ptr_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8278:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "8288:6:17",
														"type": ""
													}
												],
												"src": "8197:138:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8440:38:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8450:22:17",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "8462:3:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8467:4:17",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8458:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "8458:14:17"
															},
															"variableNames": [
																{
																	"name": "next",
																	"nodeType": "YulIdentifier",
																	"src": "8450:4:17"
																}
															]
														}
													]
												},
												"name": "array_nextElement_t_array$_t_struct$_output_$1791_memory_ptr_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "8427:3:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "next",
														"nodeType": "YulTypedName",
														"src": "8435:4:17",
														"type": ""
													}
												],
												"src": "8341:137:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8619:73:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8636:3:17"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8641:6:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8629:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "8629:19:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8629:19:17"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8657:29:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8676:3:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8681:4:17",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8672:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "8672:14:17"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "8657:11:17"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_array$_t_struct$_output_$1791_memory_ptr_$dyn_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8591:3:17",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "8596:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "8607:11:17",
														"type": ""
													}
												],
												"src": "8484:208:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8743:51:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8753:35:17",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "8782:5:17"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "8764:17:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "8764:24:17"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "8753:7:17"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8725:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "8735:7:17",
														"type": ""
													}
												],
												"src": "8698:96:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8845:81:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8855:65:17",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "8870:5:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8877:42:17",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "8866:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "8866:54:17"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "8855:7:17"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8827:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "8837:7:17",
														"type": ""
													}
												],
												"src": "8800:126:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8976:47:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8986:31:17",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "9001:5:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9008:8:17",
																		"type": "",
																		"value": "0xffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "8997:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "8997:20:17"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "8986:7:17"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint24",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8958:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "8968:7:17",
														"type": ""
													}
												],
												"src": "8932:91:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9074:32:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9084:16:17",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "9095:5:17"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "9084:7:17"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9056:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "9066:7:17",
														"type": ""
													}
												],
												"src": "9029:77:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9155:43:17",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9165:27:17",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "9180:5:17"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9187:4:17",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "9176:3:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "9176:16:17"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "9165:7:17"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9137:5:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "9147:7:17",
														"type": ""
													}
												],
												"src": "9112:86:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9227:25:17",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"functionName": {
																	"name": "invalid",
																	"nodeType": "YulIdentifier",
																	"src": "9237:7:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "9237:9:17"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9237:9:17"
														}
													]
												},
												"name": "panic_error",
												"nodeType": "YulFunctionDefinition",
												"src": "9204:48:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9301:79:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9358:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9367:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9370:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9360:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9360:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9360:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "9324:5:17"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "9349:5:17"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "9331:17:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9331:24:17"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "9321:2:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9321:35:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "9314:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "9314:43:17"
															},
															"nodeType": "YulIf",
															"src": "9311:2:17"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9294:5:17",
														"type": ""
													}
												],
												"src": "9258:122:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9428:78:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9484:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9493:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9496:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9486:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9486:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9486:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "9451:5:17"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "9475:5:17"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint24",
																					"nodeType": "YulIdentifier",
																					"src": "9458:16:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9458:23:17"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "9448:2:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9448:34:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "9441:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "9441:42:17"
															},
															"nodeType": "YulIf",
															"src": "9438:2:17"
														}
													]
												},
												"name": "validator_revert_t_uint24",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9421:5:17",
														"type": ""
													}
												],
												"src": "9386:120:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9555:79:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9612:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9621:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9624:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9614:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9614:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9614:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "9578:5:17"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "9603:5:17"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "9585:17:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9585:24:17"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "9575:2:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9575:35:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "9568:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "9568:43:17"
															},
															"nodeType": "YulIf",
															"src": "9565:2:17"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9548:5:17",
														"type": ""
													}
												],
												"src": "9512:122:17"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9681:77:17",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9736:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9745:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9748:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9738:6:17"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9738:12:17"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9738:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "9704:5:17"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "9727:5:17"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint8",
																					"nodeType": "YulIdentifier",
																					"src": "9711:15:17"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9711:22:17"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "9701:2:17"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9701:33:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "9694:6:17"
																},
																"nodeType": "YulFunctionCall",
																"src": "9694:41:17"
															},
															"nodeType": "YulIf",
															"src": "9691:2:17"
														}
													]
												},
												"name": "validator_revert_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9674:5:17",
														"type": ""
													}
												],
												"src": "9640:118:17"
											}
										]
									},
									"contents": "{\n\n    // struct IPriceAggregator.input[]\n    function abi_decode_available_length_t_array$_t_struct$_input_$1782_memory_ptr_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocateMemory(array_allocation_size_t_array$_t_struct$_input_$1782_memory_ptr_$dyn_memory_ptr(length))\n        let dst := array\n        mstore(array, length) dst := add(array, 0x20)\n        let src := offset\n        if gt(add(src, mul(length, 0x80)), end) { revert(0, 0) }\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementPos := src\n            mstore(dst, abi_decode_t_struct$_input_$1782_memory_ptr(elementPos, end))\n            dst := add(dst, 0x20)\n            src := add(src, 0x80)\n        }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    // struct IPriceAggregator.input[]\n    function abi_decode_t_array$_t_struct$_input_$1782_memory_ptr_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_struct$_input_$1782_memory_ptr_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    // struct IPriceAggregator.input\n    function abi_decode_t_struct$_input_$1782_memory_ptr(headStart, end) -> value {\n        if slt(sub(end, headStart), 0x80) { revert(0, 0) }\n        value := allocateMemory(0x80)\n\n        {\n            // t1\n\n            let offset := 0\n\n            mstore(add(value, 0x00), abi_decode_t_address(add(headStart, offset), end))\n\n        }\n\n        {\n            // t2\n\n            let offset := 32\n\n            mstore(add(value, 0x20), abi_decode_t_address(add(headStart, offset), end))\n\n        }\n\n        {\n            // provider\n\n            let offset := 64\n\n            mstore(add(value, 0x40), abi_decode_t_address(add(headStart, offset), end))\n\n        }\n\n        {\n            // providerVersion\n\n            let offset := 96\n\n            mstore(add(value, 0x60), abi_decode_t_uint8(add(headStart, offset), end))\n\n        }\n\n    }\n\n    function abi_decode_t_uint24_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint24(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_t_uint8(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint8(value)\n    }\n\n    function abi_decode_tuple_t_array$_t_struct$_input_$1782_memory_ptr_$dyn_memory_ptr(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n\n            value0 := abi_decode_t_array$_t_struct$_input_$1782_memory_ptr_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint24_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint24_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encodeUpdatedPos_t_struct$_output_$1791_memory_ptr_to_t_struct$_output_$1791_memory_ptr(value0, pos) -> updatedPos {\n        abi_encode_t_struct$_output_$1791_memory_ptr_to_t_struct$_output_$1791_memory_ptr(value0, pos)\n        updatedPos := add(pos, 0x80)\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack_library(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    // struct IPriceAggregator.output[] -> struct IPriceAggregator.output[]\n    function abi_encode_t_array$_t_struct$_output_$1791_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_output_$1791_memory_ptr_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_struct$_output_$1791_memory_ptr_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_struct$_output_$1791_memory_ptr_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_struct$_output_$1791_memory_ptr_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_struct$_output_$1791_memory_ptr_to_t_struct$_output_$1791_memory_ptr(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_struct$_output_$1791_memory_ptr_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    // struct IPriceAggregator.output -> struct IPriceAggregator.output\n    function abi_encode_t_struct$_output_$1791_memory_ptr_to_t_struct$_output_$1791_memory_ptr(value, pos)  {\n        let tail := add(pos, 0x80)\n\n        {\n            // t1\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // t2\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // price\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x40))\n        }\n\n        {\n            // fee\n\n            let memberValue0 := mload(add(value, 0x60))\n            abi_encode_t_uint24_to_t_uint24(memberValue0, add(pos, 0x60))\n        }\n\n    }\n\n    function abi_encode_t_uint24_to_t_uint24(value, pos) {\n        mstore(pos, cleanup_t_uint24(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_address__to_t_address_t_address_t_address__fromStack_library_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack_library(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack_library(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack_library(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_array$_t_struct$_output_$1791_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_output_$1791_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_struct$_output_$1791_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_output_$1791_memory_ptr_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocateMemory(size) -> memPtr {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, size)\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error() }\n        mstore(64, newFreePtr)\n    }\n\n    function array_allocation_size_t_array$_t_struct$_input_$1782_memory_ptr_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function array_dataslot_t_array$_t_struct$_output_$1791_memory_ptr_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function array_length_t_array$_t_struct$_output_$1791_memory_ptr_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_nextElement_t_array$_t_struct$_output_$1791_memory_ptr_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_struct$_output_$1791_memory_ptr_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint24(value) -> cleaned {\n        cleaned := and(value, 0xffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function panic_error() {\n        invalid()\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint24(value) {\n        if iszero(eq(value, cleanup_t_uint24(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint8(value) {\n        if iszero(eq(value, cleanup_t_uint8(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 17,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {
								"contracts/libraries/UniswapV2.sol": {
									"UniswapV2": [
										{
											"length": 20,
											"start": 236
										}
									]
								},
								"contracts/libraries/UniswapV3.sol": {
									"UniswapV3": [
										{
											"length": 20,
											"start": 642
										}
									]
								}
							},
							"object": "608060405234801561001057600080fd5b506004361061002b5760003560e01c8063ff514fa314610030575b600080fd5b61004a600480360381019061004591906105bc565b610060565b60405161005791906107a0565b60405180910390f35b60606000825167ffffffffffffffff8111801561007c57600080fd5b506040519080825280602002602001820160405280156100b657816020015b6100a3610405565b81526020019060019003908161009b5790505b50905060005b83518110156103fb5760028482815181106100d357fe5b60200260200101516060015160ff16141561025a57600073__$66db80e837caed232b747c0dfa8ba195e8$__63c361e0b186848151811061011057fe5b60200260200101516040015187858151811061012857fe5b60200260200101516000015188868151811061014057fe5b6020026020010151602001516040518463ffffffff1660e01b815260040161016a93929190610769565b60206040518083038186803b15801561018257600080fd5b505af4158015610196573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101ba91906105fd565b905060405180608001604052808684815181106101d357fe5b60200260200101516000015173ffffffffffffffffffffffffffffffffffffffff16815260200186848151811061020657fe5b60200260200101516020015173ffffffffffffffffffffffffffffffffffffffff168152602001828152602001600062ffffff1681525083838151811061024957fe5b6020026020010181905250506103ee565b600384828151811061026857fe5b60200260200101516060015160ff1614156103ed5760008073__$295ab41254e875e078eae9a73e9e2c34b1$__63c361e0b18785815181106102a657fe5b6020026020010151604001518886815181106102be57fe5b6020026020010151600001518987815181106102d657fe5b6020026020010151602001516040518463ffffffff1660e01b815260040161030093929190610769565b604080518083038186803b15801561031757600080fd5b505af415801561032b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061034f9190610626565b91509150604051806080016040528087858151811061036a57fe5b60200260200101516000015173ffffffffffffffffffffffffffffffffffffffff16815260200187858151811061039d57fe5b60200260200101516020015173ffffffffffffffffffffffffffffffffffffffff1681526020018381526020018262ffffff168152508484815181106103df57fe5b602002602001018190525050505b5b80806001019150506100bc565b5080915050919050565b6040518060800160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001600062ffffff1681525090565b600061047161046c846107f3565b6107c2565b9050808382526020820190508285608086028201111561049057600080fd5b60005b858110156104c057816104a68882610509565b845260208401935060808301925050600181019050610493565b5050509392505050565b6000813590506104d9816108b2565b92915050565b600082601f8301126104f057600080fd5b813561050084826020860161045e565b91505092915050565b60006080828403121561051b57600080fd5b61052560806107c2565b90506000610535848285016104ca565b6000830152506020610549848285016104ca565b602083015250604061055d848285016104ca565b6040830152506060610571848285016105a7565b60608301525092915050565b60008151905061058c816108c9565b92915050565b6000815190506105a1816108e0565b92915050565b6000813590506105b6816108f7565b92915050565b6000602082840312156105ce57600080fd5b600082013567ffffffffffffffff8111156105e857600080fd5b6105f4848285016104df565b91505092915050565b60006020828403121561060f57600080fd5b600061061d84828501610592565b91505092915050565b6000806040838503121561063957600080fd5b600061064785828601610592565b92505060206106588582860161057d565b9150509250929050565b600061066e83836106f6565b60808301905092915050565b61068381610858565b82525050565b61069281610858565b82525050565b60006106a38261082f565b6106ad8185610847565b93506106b88361081f565b8060005b838110156106e95781516106d08882610662565b97506106db8361083a565b9250506001810190506106bc565b5085935050505092915050565b60808201600082015161070c600085018261067a565b50602082015161071f602085018261067a565b506040820151610732604085018261075a565b506060820151610745606085018261074b565b50505050565b6107548161088a565b82525050565b61076381610899565b82525050565b600060608201905061077e6000830186610689565b61078b6020830185610689565b6107986040830184610689565b949350505050565b600060208201905081810360008301526107ba8184610698565b905092915050565b6000604051905081810181811067ffffffffffffffff821117156107e9576107e86108b0565b5b8060405250919050565b600067ffffffffffffffff82111561080e5761080d6108b0565b5b602082029050602081019050919050565b6000819050602082019050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b60006108638261086a565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600062ffffff82169050919050565b6000819050919050565b600060ff82169050919050565bfe5b6108bb81610858565b81146108c657600080fd5b50565b6108d28161088a565b81146108dd57600080fd5b50565b6108e981610899565b81146108f457600080fd5b50565b610900816108a3565b811461090b57600080fd5b5056fea264697066735822122070292eaa1f0a942112aabea08e7f81c541f6e96809324a98a50037c20bd06fd764736f6c63430007060033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xFF514FA3 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x45 SWAP2 SWAP1 PUSH2 0x5BC JUMP JUMPDEST PUSH2 0x60 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x57 SWAP2 SWAP1 PUSH2 0x7A0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP3 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0x7C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xB6 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0xA3 PUSH2 0x405 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x9B JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x3FB JUMPI PUSH1 0x2 DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xD3 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x60 ADD MLOAD PUSH1 0xFF AND EQ ISZERO PUSH2 0x25A JUMPI PUSH1 0x0 PUSH20 0x0 PUSH4 0xC361E0B1 DUP7 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x110 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 ADD MLOAD DUP8 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x128 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD MLOAD DUP9 DUP7 DUP2 MLOAD DUP2 LT PUSH2 0x140 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16A SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x769 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x182 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x196 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1BA SWAP2 SWAP1 PUSH2 0x5FD JUMP JUMPDEST SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 DUP7 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x1D3 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x206 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH3 0xFFFFFF AND DUP2 MSTORE POP DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x249 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP POP PUSH2 0x3EE JUMP JUMPDEST PUSH1 0x3 DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x268 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x60 ADD MLOAD PUSH1 0xFF AND EQ ISZERO PUSH2 0x3ED JUMPI PUSH1 0x0 DUP1 PUSH20 0x0 PUSH4 0xC361E0B1 DUP8 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x2A6 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 ADD MLOAD DUP9 DUP7 DUP2 MLOAD DUP2 LT PUSH2 0x2BE JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD MLOAD DUP10 DUP8 DUP2 MLOAD DUP2 LT PUSH2 0x2D6 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x300 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x769 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x317 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x32B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x34F SWAP2 SWAP1 PUSH2 0x626 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 DUP8 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x36A JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x39D JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH3 0xFFFFFF AND DUP2 MSTORE POP DUP5 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x3DF JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP POP POP JUMPDEST JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0xBC JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH3 0xFFFFFF AND DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x471 PUSH2 0x46C DUP5 PUSH2 0x7F3 JUMP JUMPDEST PUSH2 0x7C2 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP DUP3 DUP6 PUSH1 0x80 DUP7 MUL DUP3 ADD GT ISZERO PUSH2 0x490 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x4C0 JUMPI DUP2 PUSH2 0x4A6 DUP9 DUP3 PUSH2 0x509 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH1 0x80 DUP4 ADD SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x493 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x4D9 DUP2 PUSH2 0x8B2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x4F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x500 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x45E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x51B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x525 PUSH1 0x80 PUSH2 0x7C2 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x535 DUP5 DUP3 DUP6 ADD PUSH2 0x4CA JUMP JUMPDEST PUSH1 0x0 DUP4 ADD MSTORE POP PUSH1 0x20 PUSH2 0x549 DUP5 DUP3 DUP6 ADD PUSH2 0x4CA JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP PUSH1 0x40 PUSH2 0x55D DUP5 DUP3 DUP6 ADD PUSH2 0x4CA JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MSTORE POP PUSH1 0x60 PUSH2 0x571 DUP5 DUP3 DUP6 ADD PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x60 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x58C DUP2 PUSH2 0x8C9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x5A1 DUP2 PUSH2 0x8E0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x5B6 DUP2 PUSH2 0x8F7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x5E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x5F4 DUP5 DUP3 DUP6 ADD PUSH2 0x4DF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x60F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x61D DUP5 DUP3 DUP6 ADD PUSH2 0x592 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x639 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x647 DUP6 DUP3 DUP7 ADD PUSH2 0x592 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x658 DUP6 DUP3 DUP7 ADD PUSH2 0x57D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x66E DUP4 DUP4 PUSH2 0x6F6 JUMP JUMPDEST PUSH1 0x80 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x683 DUP2 PUSH2 0x858 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x692 DUP2 PUSH2 0x858 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6A3 DUP3 PUSH2 0x82F JUMP JUMPDEST PUSH2 0x6AD DUP2 DUP6 PUSH2 0x847 JUMP JUMPDEST SWAP4 POP PUSH2 0x6B8 DUP4 PUSH2 0x81F JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x6E9 JUMPI DUP2 MLOAD PUSH2 0x6D0 DUP9 DUP3 PUSH2 0x662 JUMP JUMPDEST SWAP8 POP PUSH2 0x6DB DUP4 PUSH2 0x83A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x6BC JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x80 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x70C PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x67A JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x71F PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x67A JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x732 PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x75A JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x745 PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0x74B JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x754 DUP2 PUSH2 0x88A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x763 DUP2 PUSH2 0x899 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x77E PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x689 JUMP JUMPDEST PUSH2 0x78B PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x689 JUMP JUMPDEST PUSH2 0x798 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x689 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x7BA DUP2 DUP5 PUSH2 0x698 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP DUP2 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x7E9 JUMPI PUSH2 0x7E8 PUSH2 0x8B0 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x80E JUMPI PUSH2 0x80D PUSH2 0x8B0 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x863 DUP3 PUSH2 0x86A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST INVALID JUMPDEST PUSH2 0x8BB DUP2 PUSH2 0x858 JUMP JUMPDEST DUP2 EQ PUSH2 0x8C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x8D2 DUP2 PUSH2 0x88A JUMP JUMPDEST DUP2 EQ PUSH2 0x8DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x8E9 DUP2 PUSH2 0x899 JUMP JUMPDEST DUP2 EQ PUSH2 0x8F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x900 DUP2 PUSH2 0x8A3 JUMP JUMPDEST DUP2 EQ PUSH2 0x90B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH17 0x292EAA1F0A942112AABEA08E7F81C541F6 0xE9 PUSH9 0x9324A98A50037C20B 0xD0 PUSH16 0xD764736F6C6343000706003300000000 ",
							"sourceMap": "441:759:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;493:703;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;565:15;592:23;631:6;:13;618:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;592:53;;659:6;654:508;670:6;:13;668:1;:15;654:508;;;731:1;702:6;709:1;702:9;;;;;;;;;;;;;;:25;;;:30;;;698:455;;;748:13;764:9;:15;780:6;787:1;780:9;;;;;;;;;;;;;;:18;;;799:6;806:1;799:9;;;;;;;;;;;;;;:12;;;812:6;819:1;812:9;;;;;;;;;;;;;;:12;;;764:61;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;748:77;;852:41;;;;;;;;859:6;866:1;859:9;;;;;;;;;;;;;;:12;;;852:41;;;;;;872:6;879:1;872:9;;;;;;;;;;;;;;:12;;;852:41;;;;;;885:5;852:41;;;;891:1;852:41;;;;;839:7;847:1;839:10;;;;;;;;;;;;;:54;;;;698:455;;;;953:1;924:6;931:1;924:9;;;;;;;;;;;;;;:25;;;:30;;;920:233;;;971:13;985:10;999:9;:15;1015:6;1022:1;1015:9;;;;;;;;;;;;;;:18;;;1034:6;1041:1;1034:9;;;;;;;;;;;;;;:12;;;1047:6;1054:1;1047:9;;;;;;;;;;;;;;:12;;;999:61;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;970:90;;;;1087:43;;;;;;;;1094:6;1101:1;1094:9;;;;;;;;;;;;;;:12;;;1087:43;;;;;;1107:6;1114:1;1107:9;;;;;;;;;;;;;;:12;;;1087:43;;;;;;1120:5;1087:43;;;;1126:3;1087:43;;;;;1074:7;1082:1;1074:10;;;;;;;;;;;;;:56;;;;920:233;;;698:455;684:3;;;;;;;654:508;;;;1182:7;1175:14;;;493:703;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;46:691:17:-;;190:103;205:87;285:6;205:87;:::i;:::-;190:103;:::i;:::-;181:112;;313:5;341:6;334:5;327:21;367:4;360:5;356:16;349:23;;392:6;442:3;434:4;426:6;422:17;417:3;413:27;410:36;407:2;;;459:1;456;449:12;407:2;487:1;472:259;497:6;494:1;491:13;472:259;;;564:3;592:60;648:3;636:10;592:60;:::i;:::-;587:3;580:73;682:4;677:3;673:14;666:21;;716:4;711:3;707:14;700:21;;532:199;519:1;516;512:9;507:14;;472:259;;;476:14;171:566;;;;;;;:::o;743:139::-;;827:6;814:20;805:29;;843:33;870:5;843:33;:::i;:::-;795:87;;;;:::o;927:349::-;;1070:3;1063:4;1055:6;1051:17;1047:27;1037:2;;1088:1;1085;1078:12;1037:2;1128:6;1115:20;1153:117;1266:3;1258:6;1251:4;1243:6;1239:17;1153:117;:::i;:::-;1144:126;;1027:249;;;;;:::o;1319:835::-;;1435:4;1423:9;1418:3;1414:19;1410:30;1407:2;;;1453:1;1450;1443:12;1407:2;1475:20;1490:4;1475:20;:::i;:::-;1466:29;;1552:1;1592:49;1637:3;1628:6;1617:9;1613:22;1592:49;:::i;:::-;1585:4;1578:5;1574:16;1567:75;1505:148;1710:2;1751:49;1796:3;1787:6;1776:9;1772:22;1751:49;:::i;:::-;1744:4;1737:5;1733:16;1726:75;1663:149;1875:2;1916:49;1961:3;1952:6;1941:9;1937:22;1916:49;:::i;:::-;1909:4;1902:5;1898:16;1891:75;1822:155;2047:2;2088:47;2131:3;2122:6;2111:9;2107:22;2088:47;:::i;:::-;2081:4;2074:5;2070:16;2063:73;1987:160;1397:757;;;;:::o;2160:141::-;;2247:6;2241:13;2232:22;;2263:32;2289:5;2263:32;:::i;:::-;2222:79;;;;:::o;2307:143::-;;2395:6;2389:13;2380:22;;2411:33;2438:5;2411:33;:::i;:::-;2370:80;;;;:::o;2456:135::-;;2538:6;2525:20;2516:29;;2554:31;2579:5;2554:31;:::i;:::-;2506:85;;;;:::o;2597:451::-;;2753:2;2741:9;2732:7;2728:23;2724:32;2721:2;;;2769:1;2766;2759:12;2721:2;2840:1;2829:9;2825:17;2812:31;2870:18;2862:6;2859:30;2856:2;;;2902:1;2899;2892:12;2856:2;2930:101;3023:7;3014:6;3003:9;2999:22;2930:101;:::i;:::-;2920:111;;2783:258;2711:337;;;;:::o;3054:284::-;;3173:2;3161:9;3152:7;3148:23;3144:32;3141:2;;;3189:1;3186;3179:12;3141:2;3232:1;3257:64;3313:7;3304:6;3293:9;3289:22;3257:64;:::i;:::-;3247:74;;3203:128;3131:207;;;;:::o;3344:438::-;;;3479:2;3467:9;3458:7;3454:23;3450:32;3447:2;;;3495:1;3492;3485:12;3447:2;3538:1;3563:64;3619:7;3610:6;3599:9;3595:22;3563:64;:::i;:::-;3553:74;;3509:128;3676:2;3702:63;3757:7;3748:6;3737:9;3733:22;3702:63;:::i;:::-;3692:73;;3647:128;3437:345;;;;;:::o;3788:275::-;;3926:94;4016:3;4008:6;3926:94;:::i;:::-;4052:4;4047:3;4043:14;4029:28;;3916:147;;;;:::o;4069:108::-;4146:24;4164:5;4146:24;:::i;:::-;4141:3;4134:37;4124:53;;:::o;4183:126::-;4278:24;4296:5;4278:24;:::i;:::-;4273:3;4266:37;4256:53;;:::o;4391:924::-;;4587:78;4659:5;4587:78;:::i;:::-;4681:110;4784:6;4779:3;4681:110;:::i;:::-;4674:117;;4815:80;4889:5;4815:80;:::i;:::-;4918:7;4949:1;4934:356;4959:6;4956:1;4953:13;4934:356;;;5035:6;5029:13;5062:111;5169:3;5154:13;5062:111;:::i;:::-;5055:118;;5196:84;5273:6;5196:84;:::i;:::-;5186:94;;4994:296;4981:1;4978;4974:9;4969:14;;4934:356;;;4938:14;5306:3;5299:10;;4563:752;;;;;;;:::o;5393:837::-;5528:4;5523:3;5519:14;5613:4;5606:5;5602:16;5596:23;5632:63;5689:4;5684:3;5680:14;5666:12;5632:63;:::i;:::-;5543:162;5785:4;5778:5;5774:16;5768:23;5804:63;5861:4;5856:3;5852:14;5838:12;5804:63;:::i;:::-;5715:162;5960:4;5953:5;5949:16;5943:23;5979:63;6036:4;6031:3;6027:14;6013:12;5979:63;:::i;:::-;5887:165;6133:4;6126:5;6122:16;6116:23;6152:61;6207:4;6202:3;6198:14;6184:12;6152:61;:::i;:::-;6062:161;5497:733;;;:::o;6236:105::-;6311:23;6328:5;6311:23;:::i;:::-;6306:3;6299:36;6289:52;;:::o;6347:108::-;6424:24;6442:5;6424:24;:::i;:::-;6419:3;6412:37;6402:53;;:::o;6461:474::-;;6656:2;6645:9;6641:18;6633:26;;6669:79;6745:1;6734:9;6730:17;6721:6;6669:79;:::i;:::-;6758:80;6834:2;6823:9;6819:18;6810:6;6758:80;:::i;:::-;6848;6924:2;6913:9;6909:18;6900:6;6848:80;:::i;:::-;6623:312;;;;;;:::o;6941:469::-;;7170:2;7159:9;7155:18;7147:26;;7219:9;7213:4;7209:20;7205:1;7194:9;7190:17;7183:47;7247:156;7398:4;7389:6;7247:156;:::i;:::-;7239:164;;7137:273;;;;:::o;7416:278::-;;7482:2;7476:9;7466:19;;7524:4;7516:6;7512:17;7631:6;7619:10;7616:22;7595:18;7583:10;7580:34;7577:62;7574:2;;;7642:13;;:::i;:::-;7574:2;7677:10;7673:2;7666:22;7456:238;;;;:::o;7700:329::-;;7890:18;7882:6;7879:30;7876:2;;;7912:13;;:::i;:::-;7876:2;7957:4;7949:6;7945:17;7937:25;;8017:4;8011;8007:15;7999:23;;7805:224;;;:::o;8035:156::-;;8149:3;8141:11;;8179:4;8174:3;8170:14;8162:22;;8131:60;;;:::o;8197:138::-;;8322:5;8316:12;8306:22;;8295:40;;;:::o;8341:137::-;;8467:4;8462:3;8458:14;8450:22;;8440:38;;;:::o;8484:208::-;;8641:6;8636:3;8629:19;8681:4;8676:3;8672:14;8657:29;;8619:73;;;;:::o;8698:96::-;;8764:24;8782:5;8764:24;:::i;:::-;8753:35;;8743:51;;;:::o;8800:126::-;;8877:42;8870:5;8866:54;8855:65;;8845:81;;;:::o;8932:91::-;;9008:8;9001:5;8997:20;8986:31;;8976:47;;;:::o;9029:77::-;;9095:5;9084:16;;9074:32;;;:::o;9112:86::-;;9187:4;9180:5;9176:16;9165:27;;9155:43;;;:::o;9204:48::-;9237:9;9258:122;9331:24;9349:5;9331:24;:::i;:::-;9324:5;9321:35;9311:2;;9370:1;9367;9360:12;9311:2;9301:79;:::o;9386:120::-;9458:23;9475:5;9458:23;:::i;:::-;9451:5;9448:34;9438:2;;9496:1;9493;9486:12;9438:2;9428:78;:::o;9512:122::-;9585:24;9603:5;9585:24;:::i;:::-;9578:5;9575:35;9565:2;;9624:1;9621;9614:12;9565:2;9555:79;:::o;9640:118::-;9711:22;9727:5;9711:22;:::i;:::-;9704:5;9701:33;9691:2;;9748:1;9745;9738:12;9691:2;9681:77;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "474400",
								"executionCost": "511",
								"totalCost": "474911"
							},
							"external": {
								"getPrices((address,address,address,uint8)[])": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 441,
									"end": 1200,
									"name": "PUSH",
									"source": 11,
									"value": "80"
								},
								{
									"begin": 441,
									"end": 1200,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 441,
									"end": 1200,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 441,
									"end": 1200,
									"name": "CALLVALUE",
									"source": 11
								},
								{
									"begin": 441,
									"end": 1200,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 441,
									"end": 1200,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 441,
									"end": 1200,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 441,
									"end": 1200,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 441,
									"end": 1200,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 441,
									"end": 1200,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 441,
									"end": 1200,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 441,
									"end": 1200,
									"name": "tag",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 441,
									"end": 1200,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 441,
									"end": 1200,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 441,
									"end": 1200,
									"name": "PUSH #[$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 441,
									"end": 1200,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 441,
									"end": 1200,
									"name": "PUSH [$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 441,
									"end": 1200,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 441,
									"end": 1200,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 441,
									"end": 1200,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 441,
									"end": 1200,
									"name": "RETURN",
									"source": 11
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122070292eaa1f0a942112aabea08e7f81c541f6e96809324a98a50037c20bd06fd764736f6c63430007060033",
									".code": [
										{
											"begin": 441,
											"end": 1200,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 441,
											"end": 1200,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 441,
											"end": 1200,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 441,
											"end": 1200,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 441,
											"end": 1200,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 441,
											"end": 1200,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 441,
											"end": 1200,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 441,
											"end": 1200,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 441,
											"end": 1200,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 441,
											"end": 1200,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 441,
											"end": 1200,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 441,
											"end": 1200,
											"name": "tag",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 441,
											"end": 1200,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 441,
											"end": 1200,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 441,
											"end": 1200,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 441,
											"end": 1200,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 441,
											"end": 1200,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 441,
											"end": 1200,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 441,
											"end": 1200,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 441,
											"end": 1200,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 441,
											"end": 1200,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 441,
											"end": 1200,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 441,
											"end": 1200,
											"name": "SHR",
											"source": 11
										},
										{
											"begin": 441,
											"end": 1200,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 441,
											"end": 1200,
											"name": "PUSH",
											"source": 11,
											"value": "FF514FA3"
										},
										{
											"begin": 441,
											"end": 1200,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 441,
											"end": 1200,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 441,
											"end": 1200,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 441,
											"end": 1200,
											"name": "tag",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 441,
											"end": 1200,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 441,
											"end": 1200,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 441,
											"end": 1200,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 441,
											"end": 1200,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 493,
											"end": 1196,
											"name": "tag",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 493,
											"end": 1196,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 493,
											"end": 1196,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 493,
											"end": 1196,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 493,
											"end": 1196,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 493,
											"end": 1196,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 493,
											"end": 1196,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 493,
											"end": 1196,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 493,
											"end": 1196,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 493,
											"end": 1196,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 493,
											"end": 1196,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 493,
											"end": 1196,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 493,
											"end": 1196,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 493,
											"end": 1196,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 493,
											"end": 1196,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 493,
											"end": 1196,
											"name": "tag",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 493,
											"end": 1196,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 493,
											"end": 1196,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 493,
											"end": 1196,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 493,
											"end": 1196,
											"name": "tag",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 493,
											"end": 1196,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 493,
											"end": 1196,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 493,
											"end": 1196,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 493,
											"end": 1196,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 493,
											"end": 1196,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 493,
											"end": 1196,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 493,
											"end": 1196,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "9"
										},
										{
											"begin": 493,
											"end": 1196,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 493,
											"end": 1196,
											"name": "tag",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 493,
											"end": 1196,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 493,
											"end": 1196,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 493,
											"end": 1196,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 493,
											"end": 1196,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 493,
											"end": 1196,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 493,
											"end": 1196,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 493,
											"end": 1196,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 493,
											"end": 1196,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 493,
											"end": 1196,
											"name": "tag",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 493,
											"end": 1196,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 565,
											"end": 580,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 592,
											"end": 615,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 631,
											"end": 637,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 631,
											"end": 644,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 618,
											"end": 645,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 618,
											"end": 645,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 618,
											"end": 645,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 618,
											"end": 645,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 618,
											"end": 645,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 618,
											"end": 645,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "11"
										},
										{
											"begin": 618,
											"end": 645,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 618,
											"end": 645,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 618,
											"end": 645,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 618,
											"end": 645,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 618,
											"end": 645,
											"name": "tag",
											"source": 11,
											"value": "11"
										},
										{
											"begin": 618,
											"end": 645,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 618,
											"end": 645,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 618,
											"end": 645,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 618,
											"end": 645,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 618,
											"end": 645,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 618,
											"end": 645,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 618,
											"end": 645,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 618,
											"end": 645,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 618,
											"end": 645,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 618,
											"end": 645,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 618,
											"end": 645,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 618,
											"end": 645,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 618,
											"end": 645,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 618,
											"end": 645,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 618,
											"end": 645,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 618,
											"end": 645,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 618,
											"end": 645,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 618,
											"end": 645,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 618,
											"end": 645,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 618,
											"end": 645,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "12"
										},
										{
											"begin": 618,
											"end": 645,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 618,
											"end": 645,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 618,
											"end": 645,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 618,
											"end": 645,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 618,
											"end": 645,
											"name": "tag",
											"source": 11,
											"value": "13"
										},
										{
											"begin": 618,
											"end": 645,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 618,
											"end": 645,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "14"
										},
										{
											"begin": 618,
											"end": 645,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "15"
										},
										{
											"begin": 618,
											"end": 645,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 618,
											"end": 645,
											"name": "tag",
											"source": 11,
											"value": "14"
										},
										{
											"begin": 618,
											"end": 645,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 618,
											"end": 645,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 618,
											"end": 645,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 618,
											"end": 645,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 618,
											"end": 645,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 618,
											"end": 645,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 618,
											"end": 645,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 618,
											"end": 645,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 618,
											"end": 645,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 618,
											"end": 645,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 618,
											"end": 645,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 618,
											"end": 645,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "13"
										},
										{
											"begin": 618,
											"end": 645,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 618,
											"end": 645,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 618,
											"end": 645,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 618,
											"end": 645,
											"name": "tag",
											"source": 11,
											"value": "12"
										},
										{
											"begin": 618,
											"end": 645,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 618,
											"end": 645,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 592,
											"end": 645,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 592,
											"end": 645,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 659,
											"end": 665,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 654,
											"end": 1162,
											"name": "tag",
											"source": 11,
											"value": "16"
										},
										{
											"begin": 654,
											"end": 1162,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 670,
											"end": 676,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 670,
											"end": 683,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 668,
											"end": 669,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 668,
											"end": 683,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 654,
											"end": 1162,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 654,
											"end": 1162,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "17"
										},
										{
											"begin": 654,
											"end": 1162,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 731,
											"end": 732,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 702,
											"end": 708,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 709,
											"end": 710,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 702,
											"end": 711,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 702,
											"end": 711,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 702,
											"end": 711,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 702,
											"end": 711,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 702,
											"end": 711,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "19"
										},
										{
											"begin": 702,
											"end": 711,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 702,
											"end": 711,
											"name": "INVALID",
											"source": 11
										},
										{
											"begin": 702,
											"end": 711,
											"name": "tag",
											"source": 11,
											"value": "19"
										},
										{
											"begin": 702,
											"end": 711,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 702,
											"end": 711,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 702,
											"end": 711,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 702,
											"end": 711,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 702,
											"end": 711,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 702,
											"end": 711,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 702,
											"end": 711,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 702,
											"end": 727,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 702,
											"end": 727,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 702,
											"end": 727,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 702,
											"end": 732,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 702,
											"end": 732,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 702,
											"end": 732,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 698,
											"end": 1153,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 698,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 698,
											"end": 1153,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 748,
											"end": 761,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 764,
											"end": 773,
											"name": "PUSHLIB",
											"source": 11,
											"value": "contracts/libraries/UniswapV2.sol:UniswapV2"
										},
										{
											"begin": 764,
											"end": 779,
											"name": "PUSH",
											"source": 11,
											"value": "C361E0B1"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 787,
											"end": 788,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 780,
											"end": 789,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 780,
											"end": 789,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 780,
											"end": 789,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 780,
											"end": 789,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 780,
											"end": 789,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "21"
										},
										{
											"begin": 780,
											"end": 789,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 780,
											"end": 789,
											"name": "INVALID",
											"source": 11
										},
										{
											"begin": 780,
											"end": 789,
											"name": "tag",
											"source": 11,
											"value": "21"
										},
										{
											"begin": 780,
											"end": 789,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 780,
											"end": 789,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 780,
											"end": 789,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 780,
											"end": 789,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 780,
											"end": 789,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 780,
											"end": 789,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 780,
											"end": 789,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 780,
											"end": 798,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 780,
											"end": 798,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 780,
											"end": 798,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 799,
											"end": 805,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 806,
											"end": 807,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 799,
											"end": 808,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 799,
											"end": 808,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 799,
											"end": 808,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 799,
											"end": 808,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 799,
											"end": 808,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "22"
										},
										{
											"begin": 799,
											"end": 808,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 799,
											"end": 808,
											"name": "INVALID",
											"source": 11
										},
										{
											"begin": 799,
											"end": 808,
											"name": "tag",
											"source": 11,
											"value": "22"
										},
										{
											"begin": 799,
											"end": 808,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 799,
											"end": 808,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 799,
											"end": 808,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 799,
											"end": 808,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 799,
											"end": 808,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 799,
											"end": 808,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 799,
											"end": 808,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 799,
											"end": 811,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 799,
											"end": 811,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 799,
											"end": 811,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 812,
											"end": 818,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 819,
											"end": 820,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 812,
											"end": 821,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 812,
											"end": 821,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 812,
											"end": 821,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 812,
											"end": 821,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 812,
											"end": 821,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "23"
										},
										{
											"begin": 812,
											"end": 821,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 812,
											"end": 821,
											"name": "INVALID",
											"source": 11
										},
										{
											"begin": 812,
											"end": 821,
											"name": "tag",
											"source": 11,
											"value": "23"
										},
										{
											"begin": 812,
											"end": 821,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 812,
											"end": 821,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 812,
											"end": 821,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 812,
											"end": 821,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 812,
											"end": 821,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 812,
											"end": 821,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 812,
											"end": 821,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 812,
											"end": 824,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 812,
											"end": 824,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 812,
											"end": 824,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 764,
											"end": 825,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 764,
											"end": 825,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 764,
											"end": 825,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 764,
											"end": 825,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 764,
											"end": 825,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 764,
											"end": 825,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 764,
											"end": 825,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 764,
											"end": 825,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 764,
											"end": 825,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 764,
											"end": 825,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 764,
											"end": 825,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 764,
											"end": 825,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 764,
											"end": 825,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 764,
											"end": 825,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 764,
											"end": 825,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 764,
											"end": 825,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 764,
											"end": 825,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "25"
										},
										{
											"begin": 764,
											"end": 825,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 764,
											"end": 825,
											"name": "tag",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 764,
											"end": 825,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 764,
											"end": 825,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 764,
											"end": 825,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 764,
											"end": 825,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 764,
											"end": 825,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 764,
											"end": 825,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 764,
											"end": 825,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 764,
											"end": 825,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 764,
											"end": 825,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 764,
											"end": 825,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 764,
											"end": 825,
											"name": "EXTCODESIZE",
											"source": 11
										},
										{
											"begin": 764,
											"end": 825,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 764,
											"end": 825,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 764,
											"end": 825,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 764,
											"end": 825,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "26"
										},
										{
											"begin": 764,
											"end": 825,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 764,
											"end": 825,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 764,
											"end": 825,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 764,
											"end": 825,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 764,
											"end": 825,
											"name": "tag",
											"source": 11,
											"value": "26"
										},
										{
											"begin": 764,
											"end": 825,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 764,
											"end": 825,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 764,
											"end": 825,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 764,
											"end": 825,
											"name": "DELEGATECALL",
											"source": 11
										},
										{
											"begin": 764,
											"end": 825,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 764,
											"end": 825,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 764,
											"end": 825,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 764,
											"end": 825,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "28"
										},
										{
											"begin": 764,
											"end": 825,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 764,
											"end": 825,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 764,
											"end": 825,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 764,
											"end": 825,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 764,
											"end": 825,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 764,
											"end": 825,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 764,
											"end": 825,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 764,
											"end": 825,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 764,
											"end": 825,
											"name": "tag",
											"source": 11,
											"value": "28"
										},
										{
											"begin": 764,
											"end": 825,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 764,
											"end": 825,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 764,
											"end": 825,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 764,
											"end": 825,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 764,
											"end": 825,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 764,
											"end": 825,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 764,
											"end": 825,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 764,
											"end": 825,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 764,
											"end": 825,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 764,
											"end": 825,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 764,
											"end": 825,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 764,
											"end": 825,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 764,
											"end": 825,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 764,
											"end": 825,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 764,
											"end": 825,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 764,
											"end": 825,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 764,
											"end": 825,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 764,
											"end": 825,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 764,
											"end": 825,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 764,
											"end": 825,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 764,
											"end": 825,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 764,
											"end": 825,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 764,
											"end": 825,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 764,
											"end": 825,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "29"
										},
										{
											"begin": 764,
											"end": 825,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 764,
											"end": 825,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 764,
											"end": 825,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "30"
										},
										{
											"begin": 764,
											"end": 825,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 764,
											"end": 825,
											"name": "tag",
											"source": 11,
											"value": "29"
										},
										{
											"begin": 764,
											"end": 825,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 748,
											"end": 825,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 748,
											"end": 825,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 852,
											"end": 893,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 852,
											"end": 893,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 852,
											"end": 893,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 852,
											"end": 893,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 852,
											"end": 893,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 852,
											"end": 893,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 852,
											"end": 893,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 852,
											"end": 893,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 859,
											"end": 865,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 866,
											"end": 867,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 859,
											"end": 868,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 859,
											"end": 868,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 859,
											"end": 868,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 859,
											"end": 868,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 859,
											"end": 868,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "31"
										},
										{
											"begin": 859,
											"end": 868,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 859,
											"end": 868,
											"name": "INVALID",
											"source": 11
										},
										{
											"begin": 859,
											"end": 868,
											"name": "tag",
											"source": 11,
											"value": "31"
										},
										{
											"begin": 859,
											"end": 868,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 859,
											"end": 868,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 859,
											"end": 868,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 859,
											"end": 868,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 859,
											"end": 868,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 859,
											"end": 868,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 859,
											"end": 868,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 859,
											"end": 871,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 859,
											"end": 871,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 859,
											"end": 871,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 852,
											"end": 893,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 852,
											"end": 893,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 852,
											"end": 893,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 852,
											"end": 893,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 852,
											"end": 893,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 852,
											"end": 893,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 872,
											"end": 878,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 879,
											"end": 880,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 872,
											"end": 881,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 872,
											"end": 881,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 872,
											"end": 881,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 872,
											"end": 881,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 872,
											"end": 881,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "32"
										},
										{
											"begin": 872,
											"end": 881,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 872,
											"end": 881,
											"name": "INVALID",
											"source": 11
										},
										{
											"begin": 872,
											"end": 881,
											"name": "tag",
											"source": 11,
											"value": "32"
										},
										{
											"begin": 872,
											"end": 881,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 872,
											"end": 881,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 872,
											"end": 881,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 872,
											"end": 881,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 872,
											"end": 881,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 872,
											"end": 881,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 872,
											"end": 881,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 872,
											"end": 884,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 872,
											"end": 884,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 872,
											"end": 884,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 852,
											"end": 893,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 852,
											"end": 893,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 852,
											"end": 893,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 852,
											"end": 893,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 852,
											"end": 893,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 852,
											"end": 893,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 885,
											"end": 890,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 852,
											"end": 893,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 852,
											"end": 893,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 852,
											"end": 893,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 852,
											"end": 893,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 891,
											"end": 892,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 852,
											"end": 893,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFF"
										},
										{
											"begin": 852,
											"end": 893,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 852,
											"end": 893,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 852,
											"end": 893,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 852,
											"end": 893,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 839,
											"end": 846,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 847,
											"end": 848,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 839,
											"end": 849,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 839,
											"end": 849,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 839,
											"end": 849,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 839,
											"end": 849,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 839,
											"end": 849,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "33"
										},
										{
											"begin": 839,
											"end": 849,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 839,
											"end": 849,
											"name": "INVALID",
											"source": 11
										},
										{
											"begin": 839,
											"end": 849,
											"name": "tag",
											"source": 11,
											"value": "33"
										},
										{
											"begin": 839,
											"end": 849,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 839,
											"end": 849,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 839,
											"end": 849,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 839,
											"end": 849,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 839,
											"end": 849,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 839,
											"end": 849,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 839,
											"end": 893,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 839,
											"end": 893,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 839,
											"end": 893,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 839,
											"end": 893,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 698,
											"end": 1153,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 698,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "34"
										},
										{
											"begin": 698,
											"end": 1153,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 698,
											"end": 1153,
											"name": "tag",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 698,
											"end": 1153,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 953,
											"end": 954,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 924,
											"end": 930,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 931,
											"end": 932,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 924,
											"end": 933,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 924,
											"end": 933,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 924,
											"end": 933,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 924,
											"end": 933,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 924,
											"end": 933,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "35"
										},
										{
											"begin": 924,
											"end": 933,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 924,
											"end": 933,
											"name": "INVALID",
											"source": 11
										},
										{
											"begin": 924,
											"end": 933,
											"name": "tag",
											"source": 11,
											"value": "35"
										},
										{
											"begin": 924,
											"end": 933,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 924,
											"end": 933,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 924,
											"end": 933,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 924,
											"end": 933,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 924,
											"end": 933,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 924,
											"end": 933,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 924,
											"end": 933,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 924,
											"end": 949,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 924,
											"end": 949,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 924,
											"end": 949,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 924,
											"end": 954,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 924,
											"end": 954,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 924,
											"end": 954,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 920,
											"end": 1153,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 920,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "36"
										},
										{
											"begin": 920,
											"end": 1153,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 971,
											"end": 984,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 985,
											"end": 995,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 999,
											"end": 1008,
											"name": "PUSHLIB",
											"source": 11,
											"value": "contracts/libraries/UniswapV3.sol:UniswapV3"
										},
										{
											"begin": 999,
											"end": 1014,
											"name": "PUSH",
											"source": 11,
											"value": "C361E0B1"
										},
										{
											"begin": 1015,
											"end": 1021,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 1022,
											"end": 1023,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 1015,
											"end": 1024,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1015,
											"end": 1024,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1015,
											"end": 1024,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1015,
											"end": 1024,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 1015,
											"end": 1024,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "37"
										},
										{
											"begin": 1015,
											"end": 1024,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1015,
											"end": 1024,
											"name": "INVALID",
											"source": 11
										},
										{
											"begin": 1015,
											"end": 1024,
											"name": "tag",
											"source": 11,
											"value": "37"
										},
										{
											"begin": 1015,
											"end": 1024,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1015,
											"end": 1024,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1015,
											"end": 1024,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 1015,
											"end": 1024,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1015,
											"end": 1024,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1015,
											"end": 1024,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1015,
											"end": 1024,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1015,
											"end": 1033,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1015,
											"end": 1033,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1015,
											"end": 1033,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1034,
											"end": 1040,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 1041,
											"end": 1042,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 1034,
											"end": 1043,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1034,
											"end": 1043,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1034,
											"end": 1043,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1034,
											"end": 1043,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 1034,
											"end": 1043,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "38"
										},
										{
											"begin": 1034,
											"end": 1043,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1034,
											"end": 1043,
											"name": "INVALID",
											"source": 11
										},
										{
											"begin": 1034,
											"end": 1043,
											"name": "tag",
											"source": 11,
											"value": "38"
										},
										{
											"begin": 1034,
											"end": 1043,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1034,
											"end": 1043,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1034,
											"end": 1043,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 1034,
											"end": 1043,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1034,
											"end": 1043,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1034,
											"end": 1043,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1034,
											"end": 1043,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1034,
											"end": 1046,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1034,
											"end": 1046,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1034,
											"end": 1046,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1047,
											"end": 1053,
											"name": "DUP10",
											"source": 11
										},
										{
											"begin": 1054,
											"end": 1055,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 1047,
											"end": 1056,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1047,
											"end": 1056,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1047,
											"end": 1056,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1047,
											"end": 1056,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 1047,
											"end": 1056,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "39"
										},
										{
											"begin": 1047,
											"end": 1056,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1047,
											"end": 1056,
											"name": "INVALID",
											"source": 11
										},
										{
											"begin": 1047,
											"end": 1056,
											"name": "tag",
											"source": 11,
											"value": "39"
										},
										{
											"begin": 1047,
											"end": 1056,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1047,
											"end": 1056,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1047,
											"end": 1056,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 1047,
											"end": 1056,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1047,
											"end": 1056,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1047,
											"end": 1056,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1047,
											"end": 1056,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1047,
											"end": 1059,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1047,
											"end": 1059,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1047,
											"end": 1059,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 999,
											"end": 1060,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 999,
											"end": 1060,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 999,
											"end": 1060,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 999,
											"end": 1060,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 999,
											"end": 1060,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 999,
											"end": 1060,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 999,
											"end": 1060,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 999,
											"end": 1060,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 999,
											"end": 1060,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 999,
											"end": 1060,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 999,
											"end": 1060,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 999,
											"end": 1060,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 999,
											"end": 1060,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 999,
											"end": 1060,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 999,
											"end": 1060,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 999,
											"end": 1060,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 999,
											"end": 1060,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "25"
										},
										{
											"begin": 999,
											"end": 1060,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 999,
											"end": 1060,
											"name": "tag",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 999,
											"end": 1060,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 999,
											"end": 1060,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 999,
											"end": 1060,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 999,
											"end": 1060,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 999,
											"end": 1060,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 999,
											"end": 1060,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 999,
											"end": 1060,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 999,
											"end": 1060,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 999,
											"end": 1060,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 999,
											"end": 1060,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 999,
											"end": 1060,
											"name": "EXTCODESIZE",
											"source": 11
										},
										{
											"begin": 999,
											"end": 1060,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 999,
											"end": 1060,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 999,
											"end": 1060,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 999,
											"end": 1060,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "41"
										},
										{
											"begin": 999,
											"end": 1060,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 999,
											"end": 1060,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 999,
											"end": 1060,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 999,
											"end": 1060,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 999,
											"end": 1060,
											"name": "tag",
											"source": 11,
											"value": "41"
										},
										{
											"begin": 999,
											"end": 1060,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 999,
											"end": 1060,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 999,
											"end": 1060,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 999,
											"end": 1060,
											"name": "DELEGATECALL",
											"source": 11
										},
										{
											"begin": 999,
											"end": 1060,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 999,
											"end": 1060,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 999,
											"end": 1060,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 999,
											"end": 1060,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "43"
										},
										{
											"begin": 999,
											"end": 1060,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 999,
											"end": 1060,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 999,
											"end": 1060,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 999,
											"end": 1060,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 999,
											"end": 1060,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 999,
											"end": 1060,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 999,
											"end": 1060,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 999,
											"end": 1060,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 999,
											"end": 1060,
											"name": "tag",
											"source": 11,
											"value": "43"
										},
										{
											"begin": 999,
											"end": 1060,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 999,
											"end": 1060,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 999,
											"end": 1060,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 999,
											"end": 1060,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 999,
											"end": 1060,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 999,
											"end": 1060,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 999,
											"end": 1060,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 999,
											"end": 1060,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 999,
											"end": 1060,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 999,
											"end": 1060,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 999,
											"end": 1060,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 999,
											"end": 1060,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 999,
											"end": 1060,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 999,
											"end": 1060,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 999,
											"end": 1060,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 999,
											"end": 1060,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 999,
											"end": 1060,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 999,
											"end": 1060,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 999,
											"end": 1060,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 999,
											"end": 1060,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 999,
											"end": 1060,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 999,
											"end": 1060,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 999,
											"end": 1060,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 999,
											"end": 1060,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 999,
											"end": 1060,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 999,
											"end": 1060,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 999,
											"end": 1060,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "45"
										},
										{
											"begin": 999,
											"end": 1060,
											"name": "JUMP",
											"source": 11,
											"value": "[in]"
										},
										{
											"begin": 999,
											"end": 1060,
											"name": "tag",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 999,
											"end": 1060,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 970,
											"end": 1060,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 970,
											"end": 1060,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 970,
											"end": 1060,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 970,
											"end": 1060,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1087,
											"end": 1130,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1087,
											"end": 1130,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1087,
											"end": 1130,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1087,
											"end": 1130,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 1087,
											"end": 1130,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1087,
											"end": 1130,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1087,
											"end": 1130,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1087,
											"end": 1130,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1094,
											"end": 1100,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 1101,
											"end": 1102,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 1094,
											"end": 1103,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1094,
											"end": 1103,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1094,
											"end": 1103,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1094,
											"end": 1103,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 1094,
											"end": 1103,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "46"
										},
										{
											"begin": 1094,
											"end": 1103,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1094,
											"end": 1103,
											"name": "INVALID",
											"source": 11
										},
										{
											"begin": 1094,
											"end": 1103,
											"name": "tag",
											"source": 11,
											"value": "46"
										},
										{
											"begin": 1094,
											"end": 1103,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1094,
											"end": 1103,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1094,
											"end": 1103,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 1094,
											"end": 1103,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1094,
											"end": 1103,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1094,
											"end": 1103,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1094,
											"end": 1103,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1094,
											"end": 1106,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1094,
											"end": 1106,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1094,
											"end": 1106,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1087,
											"end": 1130,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1087,
											"end": 1130,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1087,
											"end": 1130,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1087,
											"end": 1130,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1087,
											"end": 1130,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1087,
											"end": 1130,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1107,
											"end": 1113,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 1114,
											"end": 1115,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 1107,
											"end": 1116,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1107,
											"end": 1116,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1107,
											"end": 1116,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1107,
											"end": 1116,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 1107,
											"end": 1116,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "47"
										},
										{
											"begin": 1107,
											"end": 1116,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1107,
											"end": 1116,
											"name": "INVALID",
											"source": 11
										},
										{
											"begin": 1107,
											"end": 1116,
											"name": "tag",
											"source": 11,
											"value": "47"
										},
										{
											"begin": 1107,
											"end": 1116,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1107,
											"end": 1116,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1107,
											"end": 1116,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 1107,
											"end": 1116,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1107,
											"end": 1116,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1107,
											"end": 1116,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1107,
											"end": 1116,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1107,
											"end": 1119,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1107,
											"end": 1119,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1107,
											"end": 1119,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1087,
											"end": 1130,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1087,
											"end": 1130,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1087,
											"end": 1130,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1087,
											"end": 1130,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1087,
											"end": 1130,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1087,
											"end": 1130,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1120,
											"end": 1125,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1087,
											"end": 1130,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1087,
											"end": 1130,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1087,
											"end": 1130,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1087,
											"end": 1130,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1126,
											"end": 1129,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1087,
											"end": 1130,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFF"
										},
										{
											"begin": 1087,
											"end": 1130,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1087,
											"end": 1130,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1087,
											"end": 1130,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1087,
											"end": 1130,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1074,
											"end": 1081,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 1082,
											"end": 1083,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 1074,
											"end": 1084,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1074,
											"end": 1084,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1074,
											"end": 1084,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1074,
											"end": 1084,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 1074,
											"end": 1084,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "48"
										},
										{
											"begin": 1074,
											"end": 1084,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1074,
											"end": 1084,
											"name": "INVALID",
											"source": 11
										},
										{
											"begin": 1074,
											"end": 1084,
											"name": "tag",
											"source": 11,
											"value": "48"
										},
										{
											"begin": 1074,
											"end": 1084,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1074,
											"end": 1084,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1074,
											"end": 1084,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 1074,
											"end": 1084,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1074,
											"end": 1084,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1074,
											"end": 1084,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1074,
											"end": 1130,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1074,
											"end": 1130,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1074,
											"end": 1130,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1074,
											"end": 1130,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 920,
											"end": 1153,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 920,
											"end": 1153,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 920,
											"end": 1153,
											"name": "tag",
											"source": 11,
											"value": "36"
										},
										{
											"begin": 920,
											"end": 1153,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 698,
											"end": 1153,
											"name": "tag",
											"source": 11,
											"value": "34"
										},
										{
											"begin": 698,
											"end": 1153,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 684,
											"end": 687,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 684,
											"end": 687,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 684,
											"end": 687,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 684,
											"end": 687,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 684,
											"end": 687,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 684,
											"end": 687,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 684,
											"end": 687,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 654,
											"end": 1162,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "16"
										},
										{
											"begin": 654,
											"end": 1162,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 654,
											"end": 1162,
											"name": "tag",
											"source": 11,
											"value": "17"
										},
										{
											"begin": 654,
											"end": 1162,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 654,
											"end": 1162,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1182,
											"end": 1189,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1175,
											"end": 1189,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1175,
											"end": 1189,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1175,
											"end": 1189,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 493,
											"end": 1196,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 493,
											"end": 1196,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 493,
											"end": 1196,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 493,
											"end": 1196,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "15"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 46,
											"end": 737,
											"name": "tag",
											"source": 17,
											"value": "50"
										},
										{
											"begin": 46,
											"end": 737,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 46,
											"end": 737,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 190,
											"end": 293,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "52"
										},
										{
											"begin": 205,
											"end": 292,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "53"
										},
										{
											"begin": 285,
											"end": 291,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 205,
											"end": 292,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "54"
										},
										{
											"begin": 205,
											"end": 292,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 205,
											"end": 292,
											"name": "tag",
											"source": 17,
											"value": "53"
										},
										{
											"begin": 205,
											"end": 292,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 190,
											"end": 293,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "55"
										},
										{
											"begin": 190,
											"end": 293,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 190,
											"end": 293,
											"name": "tag",
											"source": 17,
											"value": "52"
										},
										{
											"begin": 190,
											"end": 293,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 181,
											"end": 293,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 181,
											"end": 293,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 313,
											"end": 318,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 341,
											"end": 347,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 334,
											"end": 339,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 327,
											"end": 348,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 367,
											"end": 371,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 360,
											"end": 365,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 356,
											"end": 372,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 349,
											"end": 372,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 349,
											"end": 372,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 392,
											"end": 398,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 442,
											"end": 445,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 434,
											"end": 438,
											"name": "PUSH",
											"source": 17,
											"value": "80"
										},
										{
											"begin": 426,
											"end": 432,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 422,
											"end": 439,
											"name": "MUL",
											"source": 17
										},
										{
											"begin": 417,
											"end": 420,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 413,
											"end": 440,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 410,
											"end": 446,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 407,
											"end": 409,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 407,
											"end": 409,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "56"
										},
										{
											"begin": 407,
											"end": 409,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 459,
											"end": 460,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 456,
											"end": 457,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 449,
											"end": 461,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 407,
											"end": 409,
											"name": "tag",
											"source": 17,
											"value": "56"
										},
										{
											"begin": 407,
											"end": 409,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 487,
											"end": 488,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 472,
											"end": 731,
											"name": "tag",
											"source": 17,
											"value": "57"
										},
										{
											"begin": 472,
											"end": 731,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 497,
											"end": 503,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 494,
											"end": 495,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 491,
											"end": 504,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 472,
											"end": 731,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 472,
											"end": 731,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "59"
										},
										{
											"begin": 472,
											"end": 731,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 564,
											"end": 567,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 592,
											"end": 652,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "60"
										},
										{
											"begin": 648,
											"end": 651,
											"name": "DUP9",
											"source": 17
										},
										{
											"begin": 636,
											"end": 646,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 592,
											"end": 652,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "61"
										},
										{
											"begin": 592,
											"end": 652,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 592,
											"end": 652,
											"name": "tag",
											"source": 17,
											"value": "60"
										},
										{
											"begin": 592,
											"end": 652,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 587,
											"end": 590,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 580,
											"end": 653,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 682,
											"end": 686,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 677,
											"end": 680,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 673,
											"end": 687,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 666,
											"end": 687,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 666,
											"end": 687,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 716,
											"end": 720,
											"name": "PUSH",
											"source": 17,
											"value": "80"
										},
										{
											"begin": 711,
											"end": 714,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 707,
											"end": 721,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 700,
											"end": 721,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 700,
											"end": 721,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 532,
											"end": 731,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 519,
											"end": 520,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 516,
											"end": 517,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 512,
											"end": 521,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 507,
											"end": 521,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 507,
											"end": 521,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 472,
											"end": 731,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "57"
										},
										{
											"begin": 472,
											"end": 731,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 472,
											"end": 731,
											"name": "tag",
											"source": 17,
											"value": "59"
										},
										{
											"begin": 472,
											"end": 731,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 476,
											"end": 490,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 171,
											"end": 737,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 171,
											"end": 737,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 171,
											"end": 737,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 171,
											"end": 737,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 171,
											"end": 737,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 171,
											"end": 737,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 171,
											"end": 737,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 171,
											"end": 737,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 743,
											"end": 882,
											"name": "tag",
											"source": 17,
											"value": "62"
										},
										{
											"begin": 743,
											"end": 882,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 743,
											"end": 882,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 827,
											"end": 833,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 814,
											"end": 834,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 805,
											"end": 834,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 805,
											"end": 834,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 843,
											"end": 876,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "64"
										},
										{
											"begin": 870,
											"end": 875,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 843,
											"end": 876,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "65"
										},
										{
											"begin": 843,
											"end": 876,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 843,
											"end": 876,
											"name": "tag",
											"source": 17,
											"value": "64"
										},
										{
											"begin": 843,
											"end": 876,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 795,
											"end": 882,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 795,
											"end": 882,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 795,
											"end": 882,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 795,
											"end": 882,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 795,
											"end": 882,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 927,
											"end": 1276,
											"name": "tag",
											"source": 17,
											"value": "66"
										},
										{
											"begin": 927,
											"end": 1276,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 927,
											"end": 1276,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1070,
											"end": 1073,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 1063,
											"end": 1067,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 1055,
											"end": 1061,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 1051,
											"end": 1068,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1047,
											"end": 1074,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 1037,
											"end": 1039,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "68"
										},
										{
											"begin": 1037,
											"end": 1039,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 1088,
											"end": 1089,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1085,
											"end": 1086,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1078,
											"end": 1090,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 1037,
											"end": 1039,
											"name": "tag",
											"source": 17,
											"value": "68"
										},
										{
											"begin": 1037,
											"end": 1039,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1128,
											"end": 1134,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1115,
											"end": 1135,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 1153,
											"end": 1270,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "69"
										},
										{
											"begin": 1266,
											"end": 1269,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 1258,
											"end": 1264,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 1251,
											"end": 1255,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1243,
											"end": 1249,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 1239,
											"end": 1256,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1153,
											"end": 1270,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "50"
										},
										{
											"begin": 1153,
											"end": 1270,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 1153,
											"end": 1270,
											"name": "tag",
											"source": 17,
											"value": "69"
										},
										{
											"begin": 1153,
											"end": 1270,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1144,
											"end": 1270,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1144,
											"end": 1270,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1027,
											"end": 1276,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1027,
											"end": 1276,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 1027,
											"end": 1276,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1027,
											"end": 1276,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1027,
											"end": 1276,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1027,
											"end": 1276,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 1319,
											"end": 2154,
											"name": "tag",
											"source": 17,
											"value": "61"
										},
										{
											"begin": 1319,
											"end": 2154,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1319,
											"end": 2154,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1435,
											"end": 1439,
											"name": "PUSH",
											"source": 17,
											"value": "80"
										},
										{
											"begin": 1423,
											"end": 1432,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 1418,
											"end": 1421,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 1414,
											"end": 1433,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 1410,
											"end": 1440,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 1407,
											"end": 1409,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 1407,
											"end": 1409,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "71"
										},
										{
											"begin": 1407,
											"end": 1409,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 1453,
											"end": 1454,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1450,
											"end": 1451,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1443,
											"end": 1455,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 1407,
											"end": 1409,
											"name": "tag",
											"source": 17,
											"value": "71"
										},
										{
											"begin": 1407,
											"end": 1409,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1475,
											"end": 1495,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "72"
										},
										{
											"begin": 1490,
											"end": 1494,
											"name": "PUSH",
											"source": 17,
											"value": "80"
										},
										{
											"begin": 1475,
											"end": 1495,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "55"
										},
										{
											"begin": 1475,
											"end": 1495,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 1475,
											"end": 1495,
											"name": "tag",
											"source": 17,
											"value": "72"
										},
										{
											"begin": 1475,
											"end": 1495,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1466,
											"end": 1495,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1466,
											"end": 1495,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1552,
											"end": 1553,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1592,
											"end": 1641,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "73"
										},
										{
											"begin": 1637,
											"end": 1640,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 1628,
											"end": 1634,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 1617,
											"end": 1626,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 1613,
											"end": 1635,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1592,
											"end": 1641,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "62"
										},
										{
											"begin": 1592,
											"end": 1641,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 1592,
											"end": 1641,
											"name": "tag",
											"source": 17,
											"value": "73"
										},
										{
											"begin": 1592,
											"end": 1641,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1585,
											"end": 1589,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1578,
											"end": 1583,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 1574,
											"end": 1590,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1567,
											"end": 1642,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1505,
											"end": 1653,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1710,
											"end": 1712,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1751,
											"end": 1800,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "74"
										},
										{
											"begin": 1796,
											"end": 1799,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 1787,
											"end": 1793,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 1776,
											"end": 1785,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 1772,
											"end": 1794,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1751,
											"end": 1800,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "62"
										},
										{
											"begin": 1751,
											"end": 1800,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 1751,
											"end": 1800,
											"name": "tag",
											"source": 17,
											"value": "74"
										},
										{
											"begin": 1751,
											"end": 1800,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1744,
											"end": 1748,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1737,
											"end": 1742,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 1733,
											"end": 1749,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1726,
											"end": 1801,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1663,
											"end": 1812,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1875,
											"end": 1877,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 1916,
											"end": 1965,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "75"
										},
										{
											"begin": 1961,
											"end": 1964,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 1952,
											"end": 1958,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 1941,
											"end": 1950,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 1937,
											"end": 1959,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1916,
											"end": 1965,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "62"
										},
										{
											"begin": 1916,
											"end": 1965,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 1916,
											"end": 1965,
											"name": "tag",
											"source": 17,
											"value": "75"
										},
										{
											"begin": 1916,
											"end": 1965,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1909,
											"end": 1913,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 1902,
											"end": 1907,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 1898,
											"end": 1914,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1891,
											"end": 1966,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1822,
											"end": 1977,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2047,
											"end": 2049,
											"name": "PUSH",
											"source": 17,
											"value": "60"
										},
										{
											"begin": 2088,
											"end": 2135,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "76"
										},
										{
											"begin": 2131,
											"end": 2134,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 2122,
											"end": 2128,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 2111,
											"end": 2120,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 2107,
											"end": 2129,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2088,
											"end": 2135,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "77"
										},
										{
											"begin": 2088,
											"end": 2135,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 2088,
											"end": 2135,
											"name": "tag",
											"source": 17,
											"value": "76"
										},
										{
											"begin": 2088,
											"end": 2135,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2081,
											"end": 2085,
											"name": "PUSH",
											"source": 17,
											"value": "60"
										},
										{
											"begin": 2074,
											"end": 2079,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 2070,
											"end": 2086,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2063,
											"end": 2136,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1987,
											"end": 2147,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1397,
											"end": 2154,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 1397,
											"end": 2154,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1397,
											"end": 2154,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1397,
											"end": 2154,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1397,
											"end": 2154,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 2160,
											"end": 2301,
											"name": "tag",
											"source": 17,
											"value": "78"
										},
										{
											"begin": 2160,
											"end": 2301,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2160,
											"end": 2301,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2247,
											"end": 2253,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2241,
											"end": 2254,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 2232,
											"end": 2254,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2232,
											"end": 2254,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2263,
											"end": 2295,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "80"
										},
										{
											"begin": 2289,
											"end": 2294,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2263,
											"end": 2295,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "81"
										},
										{
											"begin": 2263,
											"end": 2295,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 2263,
											"end": 2295,
											"name": "tag",
											"source": 17,
											"value": "80"
										},
										{
											"begin": 2263,
											"end": 2295,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2222,
											"end": 2301,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 2222,
											"end": 2301,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 2222,
											"end": 2301,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2222,
											"end": 2301,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2222,
											"end": 2301,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 2307,
											"end": 2450,
											"name": "tag",
											"source": 17,
											"value": "82"
										},
										{
											"begin": 2307,
											"end": 2450,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2307,
											"end": 2450,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2395,
											"end": 2401,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2389,
											"end": 2402,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 2380,
											"end": 2402,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2380,
											"end": 2402,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2411,
											"end": 2444,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "84"
										},
										{
											"begin": 2438,
											"end": 2443,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2411,
											"end": 2444,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "85"
										},
										{
											"begin": 2411,
											"end": 2444,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 2411,
											"end": 2444,
											"name": "tag",
											"source": 17,
											"value": "84"
										},
										{
											"begin": 2411,
											"end": 2444,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2370,
											"end": 2450,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 2370,
											"end": 2450,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 2370,
											"end": 2450,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2370,
											"end": 2450,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2370,
											"end": 2450,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 2456,
											"end": 2591,
											"name": "tag",
											"source": 17,
											"value": "77"
										},
										{
											"begin": 2456,
											"end": 2591,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2456,
											"end": 2591,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2538,
											"end": 2544,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2525,
											"end": 2545,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 2516,
											"end": 2545,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2516,
											"end": 2545,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2554,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "87"
										},
										{
											"begin": 2579,
											"end": 2584,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2554,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "88"
										},
										{
											"begin": 2554,
											"end": 2585,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 2554,
											"end": 2585,
											"name": "tag",
											"source": 17,
											"value": "87"
										},
										{
											"begin": 2554,
											"end": 2585,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2506,
											"end": 2591,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 2506,
											"end": 2591,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 2506,
											"end": 2591,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2506,
											"end": 2591,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2506,
											"end": 2591,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 2597,
											"end": 3048,
											"name": "tag",
											"source": 17,
											"value": "6"
										},
										{
											"begin": 2597,
											"end": 3048,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2597,
											"end": 3048,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2753,
											"end": 2755,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 2741,
											"end": 2750,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 2732,
											"end": 2739,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 2728,
											"end": 2751,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 2724,
											"end": 2756,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 2721,
											"end": 2723,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 2721,
											"end": 2723,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "90"
										},
										{
											"begin": 2721,
											"end": 2723,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 2769,
											"end": 2770,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2766,
											"end": 2767,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2759,
											"end": 2771,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 2721,
											"end": 2723,
											"name": "tag",
											"source": 17,
											"value": "90"
										},
										{
											"begin": 2721,
											"end": 2723,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2840,
											"end": 2841,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2829,
											"end": 2838,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 2825,
											"end": 2842,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2812,
											"end": 2843,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 2870,
											"end": 2888,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2862,
											"end": 2868,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2859,
											"end": 2889,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 2856,
											"end": 2858,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 2856,
											"end": 2858,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "91"
										},
										{
											"begin": 2856,
											"end": 2858,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 2902,
											"end": 2903,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2899,
											"end": 2900,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2892,
											"end": 2904,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 2856,
											"end": 2858,
											"name": "tag",
											"source": 17,
											"value": "91"
										},
										{
											"begin": 2856,
											"end": 2858,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2930,
											"end": 3031,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "92"
										},
										{
											"begin": 3023,
											"end": 3030,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 3014,
											"end": 3020,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 3003,
											"end": 3012,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 2999,
											"end": 3021,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2930,
											"end": 3031,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "66"
										},
										{
											"begin": 2930,
											"end": 3031,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 2930,
											"end": 3031,
											"name": "tag",
											"source": 17,
											"value": "92"
										},
										{
											"begin": 2930,
											"end": 3031,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2920,
											"end": 3031,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 2920,
											"end": 3031,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2783,
											"end": 3041,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2711,
											"end": 3048,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 2711,
											"end": 3048,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 2711,
											"end": 3048,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2711,
											"end": 3048,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2711,
											"end": 3048,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 3054,
											"end": 3338,
											"name": "tag",
											"source": 17,
											"value": "30"
										},
										{
											"begin": 3054,
											"end": 3338,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3054,
											"end": 3338,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3173,
											"end": 3175,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 3161,
											"end": 3170,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 3152,
											"end": 3159,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 3148,
											"end": 3171,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 3144,
											"end": 3176,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 3141,
											"end": 3143,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 3141,
											"end": 3143,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "94"
										},
										{
											"begin": 3141,
											"end": 3143,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 3189,
											"end": 3190,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3186,
											"end": 3187,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3179,
											"end": 3191,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 3141,
											"end": 3143,
											"name": "tag",
											"source": 17,
											"value": "94"
										},
										{
											"begin": 3141,
											"end": 3143,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3232,
											"end": 3233,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3257,
											"end": 3321,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "95"
										},
										{
											"begin": 3313,
											"end": 3320,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 3304,
											"end": 3310,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 3293,
											"end": 3302,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 3289,
											"end": 3311,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3257,
											"end": 3321,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "82"
										},
										{
											"begin": 3257,
											"end": 3321,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 3257,
											"end": 3321,
											"name": "tag",
											"source": 17,
											"value": "95"
										},
										{
											"begin": 3257,
											"end": 3321,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3247,
											"end": 3321,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 3247,
											"end": 3321,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3203,
											"end": 3331,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3131,
											"end": 3338,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 3131,
											"end": 3338,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 3131,
											"end": 3338,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3131,
											"end": 3338,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3131,
											"end": 3338,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 3344,
											"end": 3782,
											"name": "tag",
											"source": 17,
											"value": "45"
										},
										{
											"begin": 3344,
											"end": 3782,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3344,
											"end": 3782,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3344,
											"end": 3782,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3479,
											"end": 3481,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 3467,
											"end": 3476,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 3458,
											"end": 3465,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 3454,
											"end": 3477,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 3450,
											"end": 3482,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 3447,
											"end": 3449,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 3447,
											"end": 3449,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "97"
										},
										{
											"begin": 3447,
											"end": 3449,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 3495,
											"end": 3496,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3492,
											"end": 3493,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3485,
											"end": 3497,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 3447,
											"end": 3449,
											"name": "tag",
											"source": 17,
											"value": "97"
										},
										{
											"begin": 3447,
											"end": 3449,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3538,
											"end": 3539,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3563,
											"end": 3627,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "98"
										},
										{
											"begin": 3619,
											"end": 3626,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 3610,
											"end": 3616,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 3599,
											"end": 3608,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 3595,
											"end": 3617,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3563,
											"end": 3627,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "82"
										},
										{
											"begin": 3563,
											"end": 3627,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 3563,
											"end": 3627,
											"name": "tag",
											"source": 17,
											"value": "98"
										},
										{
											"begin": 3563,
											"end": 3627,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3553,
											"end": 3627,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 3553,
											"end": 3627,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3509,
											"end": 3637,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3676,
											"end": 3678,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 3702,
											"end": 3765,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "99"
										},
										{
											"begin": 3757,
											"end": 3764,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 3748,
											"end": 3754,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 3737,
											"end": 3746,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 3733,
											"end": 3755,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3702,
											"end": 3765,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "78"
										},
										{
											"begin": 3702,
											"end": 3765,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 3702,
											"end": 3765,
											"name": "tag",
											"source": 17,
											"value": "99"
										},
										{
											"begin": 3702,
											"end": 3765,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3692,
											"end": 3765,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 3692,
											"end": 3765,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3647,
											"end": 3775,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3437,
											"end": 3782,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 3437,
											"end": 3782,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3437,
											"end": 3782,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 3437,
											"end": 3782,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3437,
											"end": 3782,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3437,
											"end": 3782,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 3788,
											"end": 4063,
											"name": "tag",
											"source": 17,
											"value": "100"
										},
										{
											"begin": 3788,
											"end": 4063,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3788,
											"end": 4063,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3926,
											"end": 4020,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "102"
										},
										{
											"begin": 4016,
											"end": 4019,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 4008,
											"end": 4014,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 3926,
											"end": 4020,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "103"
										},
										{
											"begin": 3926,
											"end": 4020,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 3926,
											"end": 4020,
											"name": "tag",
											"source": 17,
											"value": "102"
										},
										{
											"begin": 3926,
											"end": 4020,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4052,
											"end": 4056,
											"name": "PUSH",
											"source": 17,
											"value": "80"
										},
										{
											"begin": 4047,
											"end": 4050,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 4043,
											"end": 4057,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4029,
											"end": 4057,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4029,
											"end": 4057,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3916,
											"end": 4063,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 3916,
											"end": 4063,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 3916,
											"end": 4063,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3916,
											"end": 4063,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3916,
											"end": 4063,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 4069,
											"end": 4177,
											"name": "tag",
											"source": 17,
											"value": "104"
										},
										{
											"begin": 4069,
											"end": 4177,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4146,
											"end": 4170,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "106"
										},
										{
											"begin": 4164,
											"end": 4169,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4146,
											"end": 4170,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "107"
										},
										{
											"begin": 4146,
											"end": 4170,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 4146,
											"end": 4170,
											"name": "tag",
											"source": 17,
											"value": "106"
										},
										{
											"begin": 4146,
											"end": 4170,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4141,
											"end": 4144,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 4134,
											"end": 4171,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 4124,
											"end": 4177,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4124,
											"end": 4177,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4124,
											"end": 4177,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 4183,
											"end": 4309,
											"name": "tag",
											"source": 17,
											"value": "108"
										},
										{
											"begin": 4183,
											"end": 4309,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4278,
											"end": 4302,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "110"
										},
										{
											"begin": 4296,
											"end": 4301,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4278,
											"end": 4302,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "107"
										},
										{
											"begin": 4278,
											"end": 4302,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 4278,
											"end": 4302,
											"name": "tag",
											"source": 17,
											"value": "110"
										},
										{
											"begin": 4278,
											"end": 4302,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4273,
											"end": 4276,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 4266,
											"end": 4303,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 4256,
											"end": 4309,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4256,
											"end": 4309,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4256,
											"end": 4309,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 4391,
											"end": 5315,
											"name": "tag",
											"source": 17,
											"value": "111"
										},
										{
											"begin": 4391,
											"end": 5315,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4391,
											"end": 5315,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4587,
											"end": 4665,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "113"
										},
										{
											"begin": 4659,
											"end": 4664,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 4587,
											"end": 4665,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "114"
										},
										{
											"begin": 4587,
											"end": 4665,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 4587,
											"end": 4665,
											"name": "tag",
											"source": 17,
											"value": "113"
										},
										{
											"begin": 4587,
											"end": 4665,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4681,
											"end": 4791,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "115"
										},
										{
											"begin": 4784,
											"end": 4790,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4779,
											"end": 4782,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 4681,
											"end": 4791,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "116"
										},
										{
											"begin": 4681,
											"end": 4791,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 4681,
											"end": 4791,
											"name": "tag",
											"source": 17,
											"value": "115"
										},
										{
											"begin": 4681,
											"end": 4791,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4674,
											"end": 4791,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 4674,
											"end": 4791,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4815,
											"end": 4895,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "117"
										},
										{
											"begin": 4889,
											"end": 4894,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 4815,
											"end": 4895,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "118"
										},
										{
											"begin": 4815,
											"end": 4895,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 4815,
											"end": 4895,
											"name": "tag",
											"source": 17,
											"value": "117"
										},
										{
											"begin": 4815,
											"end": 4895,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4918,
											"end": 4925,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4949,
											"end": 4950,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4934,
											"end": 5290,
											"name": "tag",
											"source": 17,
											"value": "119"
										},
										{
											"begin": 4934,
											"end": 5290,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4959,
											"end": 4965,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 4956,
											"end": 4957,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4953,
											"end": 4966,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 4934,
											"end": 5290,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 4934,
											"end": 5290,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "121"
										},
										{
											"begin": 4934,
											"end": 5290,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 5035,
											"end": 5041,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 5029,
											"end": 5042,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 5062,
											"end": 5173,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "122"
										},
										{
											"begin": 5169,
											"end": 5172,
											"name": "DUP9",
											"source": 17
										},
										{
											"begin": 5154,
											"end": 5167,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 5062,
											"end": 5173,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "100"
										},
										{
											"begin": 5062,
											"end": 5173,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 5062,
											"end": 5173,
											"name": "tag",
											"source": 17,
											"value": "122"
										},
										{
											"begin": 5062,
											"end": 5173,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5055,
											"end": 5173,
											"name": "SWAP8",
											"source": 17
										},
										{
											"begin": 5055,
											"end": 5173,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5196,
											"end": 5280,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "123"
										},
										{
											"begin": 5273,
											"end": 5279,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 5196,
											"end": 5280,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "124"
										},
										{
											"begin": 5196,
											"end": 5280,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 5196,
											"end": 5280,
											"name": "tag",
											"source": 17,
											"value": "123"
										},
										{
											"begin": 5196,
											"end": 5280,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5186,
											"end": 5280,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 5186,
											"end": 5280,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4994,
											"end": 5290,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4981,
											"end": 4982,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 4978,
											"end": 4979,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4974,
											"end": 4983,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4969,
											"end": 4983,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4969,
											"end": 4983,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4934,
											"end": 5290,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "119"
										},
										{
											"begin": 4934,
											"end": 5290,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4934,
											"end": 5290,
											"name": "tag",
											"source": 17,
											"value": "121"
										},
										{
											"begin": 4934,
											"end": 5290,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4938,
											"end": 4952,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5306,
											"end": 5309,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 5299,
											"end": 5309,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 5299,
											"end": 5309,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4563,
											"end": 5315,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4563,
											"end": 5315,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4563,
											"end": 5315,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4563,
											"end": 5315,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 4563,
											"end": 5315,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 4563,
											"end": 5315,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4563,
											"end": 5315,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4563,
											"end": 5315,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 5393,
											"end": 6230,
											"name": "tag",
											"source": 17,
											"value": "103"
										},
										{
											"begin": 5393,
											"end": 6230,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5528,
											"end": 5532,
											"name": "PUSH",
											"source": 17,
											"value": "80"
										},
										{
											"begin": 5523,
											"end": 5526,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 5519,
											"end": 5533,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5613,
											"end": 5617,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 5606,
											"end": 5611,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 5602,
											"end": 5618,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5596,
											"end": 5619,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 5632,
											"end": 5695,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "126"
										},
										{
											"begin": 5689,
											"end": 5693,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 5684,
											"end": 5687,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 5680,
											"end": 5694,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5666,
											"end": 5678,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 5632,
											"end": 5695,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "104"
										},
										{
											"begin": 5632,
											"end": 5695,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 5632,
											"end": 5695,
											"name": "tag",
											"source": 17,
											"value": "126"
										},
										{
											"begin": 5632,
											"end": 5695,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5543,
											"end": 5705,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5785,
											"end": 5789,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 5778,
											"end": 5783,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 5774,
											"end": 5790,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5768,
											"end": 5791,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 5804,
											"end": 5867,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "127"
										},
										{
											"begin": 5861,
											"end": 5865,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 5856,
											"end": 5859,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 5852,
											"end": 5866,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5838,
											"end": 5850,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 5804,
											"end": 5867,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "104"
										},
										{
											"begin": 5804,
											"end": 5867,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 5804,
											"end": 5867,
											"name": "tag",
											"source": 17,
											"value": "127"
										},
										{
											"begin": 5804,
											"end": 5867,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5715,
											"end": 5877,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5960,
											"end": 5964,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 5953,
											"end": 5958,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 5949,
											"end": 5965,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5943,
											"end": 5966,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 5979,
											"end": 6042,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "128"
										},
										{
											"begin": 6036,
											"end": 6040,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 6031,
											"end": 6034,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 6027,
											"end": 6041,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 6013,
											"end": 6025,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 5979,
											"end": 6042,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "129"
										},
										{
											"begin": 5979,
											"end": 6042,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 5979,
											"end": 6042,
											"name": "tag",
											"source": 17,
											"value": "128"
										},
										{
											"begin": 5979,
											"end": 6042,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5887,
											"end": 6052,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6133,
											"end": 6137,
											"name": "PUSH",
											"source": 17,
											"value": "60"
										},
										{
											"begin": 6126,
											"end": 6131,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 6122,
											"end": 6138,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 6116,
											"end": 6139,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 6152,
											"end": 6213,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "130"
										},
										{
											"begin": 6207,
											"end": 6211,
											"name": "PUSH",
											"source": 17,
											"value": "60"
										},
										{
											"begin": 6202,
											"end": 6205,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 6198,
											"end": 6212,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 6184,
											"end": 6196,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 6152,
											"end": 6213,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "131"
										},
										{
											"begin": 6152,
											"end": 6213,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 6152,
											"end": 6213,
											"name": "tag",
											"source": 17,
											"value": "130"
										},
										{
											"begin": 6152,
											"end": 6213,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6062,
											"end": 6223,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5497,
											"end": 6230,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5497,
											"end": 6230,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5497,
											"end": 6230,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5497,
											"end": 6230,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 6236,
											"end": 6341,
											"name": "tag",
											"source": 17,
											"value": "131"
										},
										{
											"begin": 6236,
											"end": 6341,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6311,
											"end": 6334,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "133"
										},
										{
											"begin": 6328,
											"end": 6333,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 6311,
											"end": 6334,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "134"
										},
										{
											"begin": 6311,
											"end": 6334,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 6311,
											"end": 6334,
											"name": "tag",
											"source": 17,
											"value": "133"
										},
										{
											"begin": 6311,
											"end": 6334,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6306,
											"end": 6309,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 6299,
											"end": 6335,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 6289,
											"end": 6341,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6289,
											"end": 6341,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6289,
											"end": 6341,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 6347,
											"end": 6455,
											"name": "tag",
											"source": 17,
											"value": "129"
										},
										{
											"begin": 6347,
											"end": 6455,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6424,
											"end": 6448,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "136"
										},
										{
											"begin": 6442,
											"end": 6447,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 6424,
											"end": 6448,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "137"
										},
										{
											"begin": 6424,
											"end": 6448,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 6424,
											"end": 6448,
											"name": "tag",
											"source": 17,
											"value": "136"
										},
										{
											"begin": 6424,
											"end": 6448,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6419,
											"end": 6422,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 6412,
											"end": 6449,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 6402,
											"end": 6455,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6402,
											"end": 6455,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6402,
											"end": 6455,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 6461,
											"end": 6935,
											"name": "tag",
											"source": 17,
											"value": "25"
										},
										{
											"begin": 6461,
											"end": 6935,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6461,
											"end": 6935,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 6656,
											"end": 6658,
											"name": "PUSH",
											"source": 17,
											"value": "60"
										},
										{
											"begin": 6645,
											"end": 6654,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 6641,
											"end": 6659,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 6633,
											"end": 6659,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 6633,
											"end": 6659,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6669,
											"end": 6748,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "139"
										},
										{
											"begin": 6745,
											"end": 6746,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 6734,
											"end": 6743,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 6730,
											"end": 6747,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 6721,
											"end": 6727,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 6669,
											"end": 6748,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "108"
										},
										{
											"begin": 6669,
											"end": 6748,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 6669,
											"end": 6748,
											"name": "tag",
											"source": 17,
											"value": "139"
										},
										{
											"begin": 6669,
											"end": 6748,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6758,
											"end": 6838,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "140"
										},
										{
											"begin": 6834,
											"end": 6836,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 6823,
											"end": 6832,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 6819,
											"end": 6837,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 6810,
											"end": 6816,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 6758,
											"end": 6838,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "108"
										},
										{
											"begin": 6758,
											"end": 6838,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 6758,
											"end": 6838,
											"name": "tag",
											"source": 17,
											"value": "140"
										},
										{
											"begin": 6758,
											"end": 6838,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6848,
											"end": 6928,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "141"
										},
										{
											"begin": 6924,
											"end": 6926,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 6913,
											"end": 6922,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 6909,
											"end": 6927,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 6900,
											"end": 6906,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 6848,
											"end": 6928,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "108"
										},
										{
											"begin": 6848,
											"end": 6928,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 6848,
											"end": 6928,
											"name": "tag",
											"source": 17,
											"value": "141"
										},
										{
											"begin": 6848,
											"end": 6928,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6623,
											"end": 6935,
											"name": "SWAP5",
											"source": 17
										},
										{
											"begin": 6623,
											"end": 6935,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 6623,
											"end": 6935,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6623,
											"end": 6935,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6623,
											"end": 6935,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6623,
											"end": 6935,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6623,
											"end": 6935,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 6941,
											"end": 7410,
											"name": "tag",
											"source": 17,
											"value": "9"
										},
										{
											"begin": 6941,
											"end": 7410,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6941,
											"end": 7410,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 7170,
											"end": 7172,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 7159,
											"end": 7168,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 7155,
											"end": 7173,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 7147,
											"end": 7173,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 7147,
											"end": 7173,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7219,
											"end": 7228,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 7213,
											"end": 7217,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 7209,
											"end": 7229,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 7205,
											"end": 7206,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 7194,
											"end": 7203,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 7190,
											"end": 7207,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 7183,
											"end": 7230,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 7247,
											"end": 7403,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "143"
										},
										{
											"begin": 7398,
											"end": 7402,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 7389,
											"end": 7395,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 7247,
											"end": 7403,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "111"
										},
										{
											"begin": 7247,
											"end": 7403,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 7247,
											"end": 7403,
											"name": "tag",
											"source": 17,
											"value": "143"
										},
										{
											"begin": 7247,
											"end": 7403,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7239,
											"end": 7403,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 7239,
											"end": 7403,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7137,
											"end": 7410,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 7137,
											"end": 7410,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 7137,
											"end": 7410,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7137,
											"end": 7410,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7137,
											"end": 7410,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 7416,
											"end": 7694,
											"name": "tag",
											"source": 17,
											"value": "55"
										},
										{
											"begin": 7416,
											"end": 7694,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7416,
											"end": 7694,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 7482,
											"end": 7484,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 7476,
											"end": 7485,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 7466,
											"end": 7485,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 7466,
											"end": 7485,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7524,
											"end": 7528,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 7516,
											"end": 7522,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 7512,
											"end": 7529,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 7631,
											"end": 7637,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 7619,
											"end": 7629,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 7616,
											"end": 7638,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 7595,
											"end": 7613,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7583,
											"end": 7593,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 7580,
											"end": 7614,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 7577,
											"end": 7639,
											"name": "OR",
											"source": 17
										},
										{
											"begin": 7574,
											"end": 7576,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 7574,
											"end": 7576,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "145"
										},
										{
											"begin": 7574,
											"end": 7576,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 7642,
											"end": 7655,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "146"
										},
										{
											"begin": 7642,
											"end": 7655,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "147"
										},
										{
											"begin": 7642,
											"end": 7655,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 7642,
											"end": 7655,
											"name": "tag",
											"source": 17,
											"value": "146"
										},
										{
											"begin": 7642,
											"end": 7655,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7574,
											"end": 7576,
											"name": "tag",
											"source": 17,
											"value": "145"
										},
										{
											"begin": 7574,
											"end": 7576,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7677,
											"end": 7687,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 7673,
											"end": 7675,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 7666,
											"end": 7688,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 7456,
											"end": 7694,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7456,
											"end": 7694,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 7456,
											"end": 7694,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 7456,
											"end": 7694,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7456,
											"end": 7694,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 7700,
											"end": 8029,
											"name": "tag",
											"source": 17,
											"value": "54"
										},
										{
											"begin": 7700,
											"end": 8029,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7700,
											"end": 8029,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 7890,
											"end": 7908,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7882,
											"end": 7888,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 7879,
											"end": 7909,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 7876,
											"end": 7878,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 7876,
											"end": 7878,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "149"
										},
										{
											"begin": 7876,
											"end": 7878,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 7912,
											"end": 7925,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "150"
										},
										{
											"begin": 7912,
											"end": 7925,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "147"
										},
										{
											"begin": 7912,
											"end": 7925,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 7912,
											"end": 7925,
											"name": "tag",
											"source": 17,
											"value": "150"
										},
										{
											"begin": 7912,
											"end": 7925,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7876,
											"end": 7878,
											"name": "tag",
											"source": 17,
											"value": "149"
										},
										{
											"begin": 7876,
											"end": 7878,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7957,
											"end": 7961,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 7949,
											"end": 7955,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 7945,
											"end": 7962,
											"name": "MUL",
											"source": 17
										},
										{
											"begin": 7937,
											"end": 7962,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 7937,
											"end": 7962,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8017,
											"end": 8021,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 8011,
											"end": 8015,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 8007,
											"end": 8022,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 7999,
											"end": 8022,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 7999,
											"end": 8022,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7805,
											"end": 8029,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 7805,
											"end": 8029,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 7805,
											"end": 8029,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 7805,
											"end": 8029,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 8035,
											"end": 8191,
											"name": "tag",
											"source": 17,
											"value": "118"
										},
										{
											"begin": 8035,
											"end": 8191,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 8035,
											"end": 8191,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 8149,
											"end": 8152,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 8141,
											"end": 8152,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 8141,
											"end": 8152,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8179,
											"end": 8183,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 8174,
											"end": 8177,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 8170,
											"end": 8184,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 8162,
											"end": 8184,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 8162,
											"end": 8184,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8131,
											"end": 8191,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 8131,
											"end": 8191,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 8131,
											"end": 8191,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8131,
											"end": 8191,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 8197,
											"end": 8335,
											"name": "tag",
											"source": 17,
											"value": "114"
										},
										{
											"begin": 8197,
											"end": 8335,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 8197,
											"end": 8335,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 8322,
											"end": 8327,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 8316,
											"end": 8328,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 8306,
											"end": 8328,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 8306,
											"end": 8328,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8295,
											"end": 8335,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 8295,
											"end": 8335,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 8295,
											"end": 8335,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8295,
											"end": 8335,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 8341,
											"end": 8478,
											"name": "tag",
											"source": 17,
											"value": "124"
										},
										{
											"begin": 8341,
											"end": 8478,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 8341,
											"end": 8478,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 8467,
											"end": 8471,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 8462,
											"end": 8465,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 8458,
											"end": 8472,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 8450,
											"end": 8472,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 8450,
											"end": 8472,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8440,
											"end": 8478,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 8440,
											"end": 8478,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 8440,
											"end": 8478,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8440,
											"end": 8478,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 8484,
											"end": 8692,
											"name": "tag",
											"source": 17,
											"value": "116"
										},
										{
											"begin": 8484,
											"end": 8692,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 8484,
											"end": 8692,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 8641,
											"end": 8647,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 8636,
											"end": 8639,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 8629,
											"end": 8648,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 8681,
											"end": 8685,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 8676,
											"end": 8679,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 8672,
											"end": 8686,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 8657,
											"end": 8686,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 8657,
											"end": 8686,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8619,
											"end": 8692,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 8619,
											"end": 8692,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 8619,
											"end": 8692,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8619,
											"end": 8692,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8619,
											"end": 8692,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 8698,
											"end": 8794,
											"name": "tag",
											"source": 17,
											"value": "107"
										},
										{
											"begin": 8698,
											"end": 8794,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 8698,
											"end": 8794,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 8764,
											"end": 8788,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "156"
										},
										{
											"begin": 8782,
											"end": 8787,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 8764,
											"end": 8788,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "157"
										},
										{
											"begin": 8764,
											"end": 8788,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 8764,
											"end": 8788,
											"name": "tag",
											"source": 17,
											"value": "156"
										},
										{
											"begin": 8764,
											"end": 8788,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 8753,
											"end": 8788,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 8753,
											"end": 8788,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8743,
											"end": 8794,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 8743,
											"end": 8794,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 8743,
											"end": 8794,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8743,
											"end": 8794,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 8800,
											"end": 8926,
											"name": "tag",
											"source": 17,
											"value": "157"
										},
										{
											"begin": 8800,
											"end": 8926,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 8800,
											"end": 8926,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 8877,
											"end": 8919,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8870,
											"end": 8875,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 8866,
											"end": 8920,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 8855,
											"end": 8920,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 8855,
											"end": 8920,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8845,
											"end": 8926,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 8845,
											"end": 8926,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 8845,
											"end": 8926,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8845,
											"end": 8926,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 8932,
											"end": 9023,
											"name": "tag",
											"source": 17,
											"value": "134"
										},
										{
											"begin": 8932,
											"end": 9023,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 8932,
											"end": 9023,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 9008,
											"end": 9016,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFF"
										},
										{
											"begin": 9001,
											"end": 9006,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 8997,
											"end": 9017,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 8986,
											"end": 9017,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 8986,
											"end": 9017,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8976,
											"end": 9023,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 8976,
											"end": 9023,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 8976,
											"end": 9023,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 8976,
											"end": 9023,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 9029,
											"end": 9106,
											"name": "tag",
											"source": 17,
											"value": "137"
										},
										{
											"begin": 9029,
											"end": 9106,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 9029,
											"end": 9106,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 9095,
											"end": 9100,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 9084,
											"end": 9100,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 9084,
											"end": 9100,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 9074,
											"end": 9106,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 9074,
											"end": 9106,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 9074,
											"end": 9106,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 9074,
											"end": 9106,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 9112,
											"end": 9198,
											"name": "tag",
											"source": 17,
											"value": "161"
										},
										{
											"begin": 9112,
											"end": 9198,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 9112,
											"end": 9198,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 9187,
											"end": 9191,
											"name": "PUSH",
											"source": 17,
											"value": "FF"
										},
										{
											"begin": 9180,
											"end": 9185,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 9176,
											"end": 9192,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 9165,
											"end": 9192,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 9165,
											"end": 9192,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 9155,
											"end": 9198,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 9155,
											"end": 9198,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 9155,
											"end": 9198,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 9155,
											"end": 9198,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 9204,
											"end": 9252,
											"name": "tag",
											"source": 17,
											"value": "147"
										},
										{
											"begin": 9204,
											"end": 9252,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 9237,
											"end": 9246,
											"name": "INVALID",
											"source": 17
										},
										{
											"begin": 9258,
											"end": 9380,
											"name": "tag",
											"source": 17,
											"value": "65"
										},
										{
											"begin": 9258,
											"end": 9380,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 9331,
											"end": 9355,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "165"
										},
										{
											"begin": 9349,
											"end": 9354,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 9331,
											"end": 9355,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "107"
										},
										{
											"begin": 9331,
											"end": 9355,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 9331,
											"end": 9355,
											"name": "tag",
											"source": 17,
											"value": "165"
										},
										{
											"begin": 9331,
											"end": 9355,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 9324,
											"end": 9329,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 9321,
											"end": 9356,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 9311,
											"end": 9313,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "166"
										},
										{
											"begin": 9311,
											"end": 9313,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 9370,
											"end": 9371,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 9367,
											"end": 9368,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 9360,
											"end": 9372,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 9311,
											"end": 9313,
											"name": "tag",
											"source": 17,
											"value": "166"
										},
										{
											"begin": 9311,
											"end": 9313,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 9301,
											"end": 9380,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 9301,
											"end": 9380,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 9386,
											"end": 9506,
											"name": "tag",
											"source": 17,
											"value": "81"
										},
										{
											"begin": 9386,
											"end": 9506,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 9458,
											"end": 9481,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "168"
										},
										{
											"begin": 9475,
											"end": 9480,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 9458,
											"end": 9481,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "134"
										},
										{
											"begin": 9458,
											"end": 9481,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 9458,
											"end": 9481,
											"name": "tag",
											"source": 17,
											"value": "168"
										},
										{
											"begin": 9458,
											"end": 9481,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 9451,
											"end": 9456,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 9448,
											"end": 9482,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 9438,
											"end": 9440,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "169"
										},
										{
											"begin": 9438,
											"end": 9440,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 9496,
											"end": 9497,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 9493,
											"end": 9494,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 9486,
											"end": 9498,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 9438,
											"end": 9440,
											"name": "tag",
											"source": 17,
											"value": "169"
										},
										{
											"begin": 9438,
											"end": 9440,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 9428,
											"end": 9506,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 9428,
											"end": 9506,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 9512,
											"end": 9634,
											"name": "tag",
											"source": 17,
											"value": "85"
										},
										{
											"begin": 9512,
											"end": 9634,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 9585,
											"end": 9609,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "171"
										},
										{
											"begin": 9603,
											"end": 9608,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 9585,
											"end": 9609,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "137"
										},
										{
											"begin": 9585,
											"end": 9609,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 9585,
											"end": 9609,
											"name": "tag",
											"source": 17,
											"value": "171"
										},
										{
											"begin": 9585,
											"end": 9609,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 9578,
											"end": 9583,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 9575,
											"end": 9610,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 9565,
											"end": 9567,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "172"
										},
										{
											"begin": 9565,
											"end": 9567,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 9624,
											"end": 9625,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 9621,
											"end": 9622,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 9614,
											"end": 9626,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 9565,
											"end": 9567,
											"name": "tag",
											"source": 17,
											"value": "172"
										},
										{
											"begin": 9565,
											"end": 9567,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 9555,
											"end": 9634,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 9555,
											"end": 9634,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 9640,
											"end": 9758,
											"name": "tag",
											"source": 17,
											"value": "88"
										},
										{
											"begin": 9640,
											"end": 9758,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 9711,
											"end": 9733,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "174"
										},
										{
											"begin": 9727,
											"end": 9732,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 9711,
											"end": 9733,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "161"
										},
										{
											"begin": 9711,
											"end": 9733,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 9711,
											"end": 9733,
											"name": "tag",
											"source": 17,
											"value": "174"
										},
										{
											"begin": 9711,
											"end": 9733,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 9704,
											"end": 9709,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 9701,
											"end": 9734,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 9691,
											"end": 9693,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "175"
										},
										{
											"begin": 9691,
											"end": 9693,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 9748,
											"end": 9749,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 9745,
											"end": 9746,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 9738,
											"end": 9750,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 9691,
											"end": 9693,
											"name": "tag",
											"source": 17,
											"value": "175"
										},
										{
											"begin": 9691,
											"end": 9693,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 9681,
											"end": 9758,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 9681,
											"end": 9758,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"getPrices((address,address,address,uint8)[])": "ff514fa3"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"t1\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"t2\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"providerVersion\",\"type\":\"uint8\"}],\"internalType\":\"struct IPriceAggregator.input[]\",\"name\":\"inputs\",\"type\":\"tuple[]\"}],\"name\":\"getPrices\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"t1\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"t2\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"}],\"internalType\":\"struct IPriceAggregator.output[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/PriceAggregator.sol\":\"PriceAggregator\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol\":{\"keccak256\":\"0x8a3c5c449d4b7cd76513ed6995f4b86e4a86f222c770f8442f5fc128ce29b4d2\",\"urls\":[\"bzz-raw://1df63ca373dafae3bd0ee7fe70f890a1dc7c45ed869c01de68413e0e97ff9deb\",\"dweb:/ipfs/QmefJgEYGUL8KX7kQKYTrDweF8GB7yjy3nw5Bmqzryg7PG\"]},\"@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol\":{\"keccak256\":\"0xcc3d0c93fc9ac0febbe09f941b465b57f750bcf3b48432da0b97dc289cfdc489\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b9379ad954680c44a0bc523b314ae4c4da735f9fe1d02aa56ea5bdba6f1136f2\",\"dweb:/ipfs/QmZXdgQNXKAckrXWz9R3mc47F1fvDvr28a2ewJrwNAw71B\"]},\"@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol\":{\"keccak256\":\"0xfe6113d518466cd6652c85b111e01f33eb62157f49ae5ed7d5a3947a2044adb1\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://1c42b9e6f5902ac38dd43e25750939baa7e0c1425dc75afd717c4412731065d5\",\"dweb:/ipfs/QmWaoacnzsucTvBME2o7YgZBZMhaHv7fkj83htHMVWJKWh\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol\":{\"keccak256\":\"0x9453dd0e7442188667d01d9b65de3f1e14e9511ff3e303179a15f6fc267f7634\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://982f4328f956c3e60e67501e759eb292ac487f76460c774c50e9ae4fcc92aae5\",\"dweb:/ipfs/QmRnzEDsaqtd9PJEVcgQi7p5aV5pMSvRUoGZJAdwFUJxgZ\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol\":{\"keccak256\":\"0xe603ac5b17ecdee73ba2b27efdf386c257a19c14206e87eee77e2017b742d9e5\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://8febc9bdb399a4d94bb89f5377732652e2400e4a8dee808201ade6848f9004e7\",\"dweb:/ipfs/QmaKDqYYFU4d2W2iN77aDHptfbFmYZRrMYXHeGpJmM8C1c\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol\":{\"keccak256\":\"0x8071514d0fe5d17d6fbd31c191cdfb703031c24e0ece3621d88ab10e871375cd\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://d0b571930cc7488b1d546a7e9cea7c52d8b3c4e207da657ed0e0db7343b8cd03\",\"dweb:/ipfs/QmaGK6vVwB95QSTR1XMYvrh7ivYAYZxi3fD7v6VMA4jZ39\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol\":{\"keccak256\":\"0xf6e5d2cd1139c4c276bdbc8e1d2b256e456c866a91f1b868da265c6d2685c3f7\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b99c8c9ae8e27ee6559e5866bea82cbc9ffc8247f8d15b7422a4deb287d4d047\",\"dweb:/ipfs/QmfL8gaqt3ffAnm6nVj5ksuNpLygXuL3xq5VBqrkwC2JJ3\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol\":{\"keccak256\":\"0x759b78a2918af9e99e246dc3af084f654e48ef32bb4e4cb8a966aa3dcaece235\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://64144fb96e1c7fdba87305acadb98a198d26a3d46c097cb3a666e567f6f29735\",\"dweb:/ipfs/QmUnWVwN9FKB9uV5Pr8YfLpWZnYM2DENnRMaadZ492JS9u\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol\":{\"keccak256\":\"0x852dc1f5df7dcf7f11e7bb3eed79f0cea72ad4b25f6a9d2c35aafb48925fd49f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://ed63907c38ff36b0e22bc9ffc53e791ea74f0d4f0e7c257fdfb5aaf8825b1f0f\",\"dweb:/ipfs/QmSQrckghEjs6HVsA5GVgpNpZWvTXMY5eQLF7cN6deFeEg\"]},\"@uniswap/v3-core/contracts/libraries/FullMath.sol\":{\"keccak256\":\"0x50e87f7a3197525d1c6f7e04290060e848677c8a4e86c554bc6ace4a4d0d476d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3874093a6b37d8e68f9475a91f8eb0a1c808cb6153c84cfe6c37909505a4d24e\",\"dweb:/ipfs/QmUqGpQqvSHX4SwUvcBCs9g4ZhR9JPhgD3615oUigAhtjj\"]},\"@uniswap/v3-core/contracts/libraries/TickMath.sol\":{\"keccak256\":\"0xda8c2c0b12d2976acfd364453ba5f5bf0117ba3c91175ee9e1067d3fb26944d9\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://3f3d2d7c2723c91830c74d96292f28fc1cfe28d388cdb9c1a5ebadb4c2b96f81\",\"dweb:/ipfs/QmYU4wk8MEm33wVWR38LoncvR7b8PP1mLuGBKX3dUpYJVE\"]},\"contracts/PriceAggregator.sol\":{\"keccak256\":\"0x413fd8e5ebc74d3f609c59bc9191b3be9da799b9ef8275d7a6bff20750768217\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2acd40179defbded94871083e61da6410a37d7a305ca68068599e3b434a1768\",\"dweb:/ipfs/QmPSmmwwZUtMa6MftzEy8rVefc5TAno4sHB6TkmgTsQyuJ\"]},\"contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x7df9d93243a890a6dc175905d65495ae5726330faa50409ab8460c4c00c672e1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3ff91fe9d915b97343e152f1a15a46e5ff9477e90e90a4431dca38f79eb2cdba\",\"dweb:/ipfs/QmcHUAJs2MfcdbAFTzdQE1eGevxCGHNDXECiuGLDaUs34S\"]},\"contracts/interfaces/IPriceAggregator.sol\":{\"keccak256\":\"0x92182a0f2368810b2d5dfcabfdeba15ac8572ab9eed8d48ca9daef6930f289b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33a2372faf1dc3b1327a7d4598dddf1894dcbe2ec7a053877bd159433dedb0f6\",\"dweb:/ipfs/QmVHfLZt7GKuJGVsqUjPAxJndHotpGk5LG2NutaELoq7Eb\"]},\"contracts/libraries/OracleLibrary.sol\":{\"keccak256\":\"0xfe374d779a9fdb16c102035c181002ffd393138a38acc916e9f4e98139f5b399\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://497ed18360c8fef9ca485f60669fa56247b2a46a464483b2d93fe24792d68d1f\",\"dweb:/ipfs/QmY6gSGfuAi5BQnJxhQKLHwqmo7ZG3WVqXqAmPRZRyapGv\"]},\"contracts/libraries/UniswapV2.sol\":{\"keccak256\":\"0x506bf6b88b1a3c19b7dadc6ba97d72bc64226e12132b5b98244fa7b1e68a7833\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e3efc6561aaea11219944ee3efb3cb4f128b4fa0061b5cffc1c08a9593a097f8\",\"dweb:/ipfs/QmSo3pYZptLVnK6Y51dtscLsmKa1QnvtFGvjMBAMDr1Qrz\"]},\"contracts/libraries/UniswapV3.sol\":{\"keccak256\":\"0x4aca088109a7faf4f220e0f3ec363e0a351804586a504031eecdae21ec926c27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9a31098a177c77e5cc62f5e4eabac00481ae78fc8f06d1ada877fc2c55e9ec3e\",\"dweb:/ipfs/QmVfWfvTPsxE3JsPmVkwF2sWpST235WQXSEukmVtMpz2dH\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/interfaces/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "deposit",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"deposit()": "d0e30db0",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"withdraw(uint256)": "2e1a7d4d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x7df9d93243a890a6dc175905d65495ae5726330faa50409ab8460c4c00c672e1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3ff91fe9d915b97343e152f1a15a46e5ff9477e90e90a4431dca38f79eb2cdba\",\"dweb:/ipfs/QmcHUAJs2MfcdbAFTzdQE1eGevxCGHNDXECiuGLDaUs34S\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/interfaces/IPriceAggregator.sol": {
				"IPriceAggregator": {
					"abi": [
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "t1",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "t2",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "provider",
											"type": "address"
										},
										{
											"internalType": "uint8",
											"name": "providerVersion",
											"type": "uint8"
										}
									],
									"internalType": "struct IPriceAggregator.input[]",
									"name": "inputs",
									"type": "tuple[]"
								}
							],
							"name": "getPrices",
							"outputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "t1",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "t2",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "price",
											"type": "uint256"
										},
										{
											"internalType": "uint24",
											"name": "fee",
											"type": "uint24"
										}
									],
									"internalType": "struct IPriceAggregator.output[]",
									"name": "",
									"type": "tuple[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getPrices((address,address,address,uint8)[])": "ff514fa3"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"t1\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"t2\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"providerVersion\",\"type\":\"uint8\"}],\"internalType\":\"struct IPriceAggregator.input[]\",\"name\":\"inputs\",\"type\":\"tuple[]\"}],\"name\":\"getPrices\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"t1\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"t2\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"}],\"internalType\":\"struct IPriceAggregator.output[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IPriceAggregator.sol\":\"IPriceAggregator\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IPriceAggregator.sol\":{\"keccak256\":\"0x92182a0f2368810b2d5dfcabfdeba15ac8572ab9eed8d48ca9daef6930f289b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33a2372faf1dc3b1327a7d4598dddf1894dcbe2ec7a053877bd159433dedb0f6\",\"dweb:/ipfs/QmVHfLZt7GKuJGVsqUjPAxJndHotpGk5LG2NutaELoq7Eb\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/libraries/OracleLibrary.sol": {
				"OracleLibrary": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/libraries/OracleLibrary.sol\":244:1891  library OracleLibrary {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/libraries/OracleLibrary.sol\":244:1891  library OracleLibrary {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212204cb18eca1a86f36ab91ff0a9f7641f0861759bc9f21ce31608dcdd6beba0020464736f6c63430007060033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212204cb18eca1a86f36ab91ff0a9f7641f0861759bc9f21ce31608dcdd6beba0020464736f6c63430007060033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4C 0xB1 DUP15 0xCA BYTE DUP7 RETURN PUSH11 0xB91FF0A9F7641F0861759B 0xC9 CALLCODE SHR 0xE3 AND ADDMOD 0xDC 0xDD PUSH12 0xEBA0020464736F6C63430007 MOD STOP CALLER ",
							"sourceMap": "244:1647:14:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212204cb18eca1a86f36ab91ff0a9f7641f0861759bc9f21ce31608dcdd6beba0020464736f6c63430007060033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4C 0xB1 DUP15 0xCA BYTE DUP7 RETURN PUSH11 0xB91FF0A9F7641F0861759B 0xC9 CALLCODE SHR 0xE3 AND ADDMOD 0xDC 0xDD PUSH12 0xEBA0020464736F6C63430007 MOD STOP CALLER ",
							"sourceMap": "244:1647:14:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"consult(address,uint32)": "infinite",
								"getQuoteAtTick(int24,uint128,address,address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 244,
									"end": 1891,
									"name": "PUSH #[$]",
									"source": 14,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 244,
									"end": 1891,
									"name": "PUSH [$]",
									"source": 14,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 244,
									"end": 1891,
									"name": "PUSH",
									"source": 14,
									"value": "B"
								},
								{
									"begin": 244,
									"end": 1891,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 244,
									"end": 1891,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 244,
									"end": 1891,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 244,
									"end": 1891,
									"name": "CODECOPY",
									"source": 14
								},
								{
									"begin": 244,
									"end": 1891,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 244,
									"end": 1891,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 244,
									"end": 1891,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 244,
									"end": 1891,
									"name": "BYTE",
									"source": 14
								},
								{
									"begin": 244,
									"end": 1891,
									"name": "PUSH",
									"source": 14,
									"value": "73"
								},
								{
									"begin": 244,
									"end": 1891,
									"name": "EQ",
									"source": 14
								},
								{
									"begin": 244,
									"end": 1891,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 244,
									"end": 1891,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 244,
									"end": 1891,
									"name": "INVALID",
									"source": 14
								},
								{
									"begin": 244,
									"end": 1891,
									"name": "tag",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 244,
									"end": 1891,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 244,
									"end": 1891,
									"name": "ADDRESS",
									"source": 14
								},
								{
									"begin": 244,
									"end": 1891,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 244,
									"end": 1891,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 244,
									"end": 1891,
									"name": "PUSH",
									"source": 14,
									"value": "73"
								},
								{
									"begin": 244,
									"end": 1891,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 244,
									"end": 1891,
									"name": "MSTORE8",
									"source": 14
								},
								{
									"begin": 244,
									"end": 1891,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 244,
									"end": 1891,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 244,
									"end": 1891,
									"name": "RETURN",
									"source": 14
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212204cb18eca1a86f36ab91ff0a9f7641f0861759bc9f21ce31608dcdd6beba0020464736f6c63430007060033",
									".code": [
										{
											"begin": 244,
											"end": 1891,
											"name": "PUSHDEPLOYADDRESS",
											"source": 14
										},
										{
											"begin": 244,
											"end": 1891,
											"name": "ADDRESS",
											"source": 14
										},
										{
											"begin": 244,
											"end": 1891,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 244,
											"end": 1891,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 244,
											"end": 1891,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 244,
											"end": 1891,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 244,
											"end": 1891,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 244,
											"end": 1891,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 244,
											"end": 1891,
											"name": "REVERT",
											"source": 14
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/libraries/OracleLibrary.sol\":\"OracleLibrary\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol\":{\"keccak256\":\"0xfe6113d518466cd6652c85b111e01f33eb62157f49ae5ed7d5a3947a2044adb1\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://1c42b9e6f5902ac38dd43e25750939baa7e0c1425dc75afd717c4412731065d5\",\"dweb:/ipfs/QmWaoacnzsucTvBME2o7YgZBZMhaHv7fkj83htHMVWJKWh\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol\":{\"keccak256\":\"0x9453dd0e7442188667d01d9b65de3f1e14e9511ff3e303179a15f6fc267f7634\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://982f4328f956c3e60e67501e759eb292ac487f76460c774c50e9ae4fcc92aae5\",\"dweb:/ipfs/QmRnzEDsaqtd9PJEVcgQi7p5aV5pMSvRUoGZJAdwFUJxgZ\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol\":{\"keccak256\":\"0xe603ac5b17ecdee73ba2b27efdf386c257a19c14206e87eee77e2017b742d9e5\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://8febc9bdb399a4d94bb89f5377732652e2400e4a8dee808201ade6848f9004e7\",\"dweb:/ipfs/QmaKDqYYFU4d2W2iN77aDHptfbFmYZRrMYXHeGpJmM8C1c\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol\":{\"keccak256\":\"0x8071514d0fe5d17d6fbd31c191cdfb703031c24e0ece3621d88ab10e871375cd\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://d0b571930cc7488b1d546a7e9cea7c52d8b3c4e207da657ed0e0db7343b8cd03\",\"dweb:/ipfs/QmaGK6vVwB95QSTR1XMYvrh7ivYAYZxi3fD7v6VMA4jZ39\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol\":{\"keccak256\":\"0xf6e5d2cd1139c4c276bdbc8e1d2b256e456c866a91f1b868da265c6d2685c3f7\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b99c8c9ae8e27ee6559e5866bea82cbc9ffc8247f8d15b7422a4deb287d4d047\",\"dweb:/ipfs/QmfL8gaqt3ffAnm6nVj5ksuNpLygXuL3xq5VBqrkwC2JJ3\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol\":{\"keccak256\":\"0x759b78a2918af9e99e246dc3af084f654e48ef32bb4e4cb8a966aa3dcaece235\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://64144fb96e1c7fdba87305acadb98a198d26a3d46c097cb3a666e567f6f29735\",\"dweb:/ipfs/QmUnWVwN9FKB9uV5Pr8YfLpWZnYM2DENnRMaadZ492JS9u\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol\":{\"keccak256\":\"0x852dc1f5df7dcf7f11e7bb3eed79f0cea72ad4b25f6a9d2c35aafb48925fd49f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://ed63907c38ff36b0e22bc9ffc53e791ea74f0d4f0e7c257fdfb5aaf8825b1f0f\",\"dweb:/ipfs/QmSQrckghEjs6HVsA5GVgpNpZWvTXMY5eQLF7cN6deFeEg\"]},\"@uniswap/v3-core/contracts/libraries/FullMath.sol\":{\"keccak256\":\"0x50e87f7a3197525d1c6f7e04290060e848677c8a4e86c554bc6ace4a4d0d476d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3874093a6b37d8e68f9475a91f8eb0a1c808cb6153c84cfe6c37909505a4d24e\",\"dweb:/ipfs/QmUqGpQqvSHX4SwUvcBCs9g4ZhR9JPhgD3615oUigAhtjj\"]},\"@uniswap/v3-core/contracts/libraries/TickMath.sol\":{\"keccak256\":\"0xda8c2c0b12d2976acfd364453ba5f5bf0117ba3c91175ee9e1067d3fb26944d9\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://3f3d2d7c2723c91830c74d96292f28fc1cfe28d388cdb9c1a5ebadb4c2b96f81\",\"dweb:/ipfs/QmYU4wk8MEm33wVWR38LoncvR7b8PP1mLuGBKX3dUpYJVE\"]},\"contracts/libraries/OracleLibrary.sol\":{\"keccak256\":\"0xfe374d779a9fdb16c102035c181002ffd393138a38acc916e9f4e98139f5b399\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://497ed18360c8fef9ca485f60669fa56247b2a46a464483b2d93fe24792d68d1f\",\"dweb:/ipfs/QmY6gSGfuAi5BQnJxhQKLHwqmo7ZG3WVqXqAmPRZRyapGv\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/libraries/UniswapV2.sol": {
				"UniswapV2": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "provider",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tIn",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tOut",
									"type": "address"
								}
							],
							"name": "Price",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/libraries/UniswapV2.sol\":168:524  library UniswapV2 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/libraries/UniswapV2.sol\":168:524  library UniswapV2 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xc361e0b1\n      eq\n      tag_2\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"contracts/libraries/UniswapV2.sol\":192:521  function Price(address provider, address tIn,address tOut) external view returns (uint256){... */\n    tag_2:\n      tag_3\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x60\n      dup2\n      lt\n      iszero\n      tag_4\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_4:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_5\n      jump\t// in\n    tag_3:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n    tag_5:\n        /* \"contracts/libraries/UniswapV2.sol\":274:281  uint256 */\n      0x00\n        /* \"contracts/libraries/UniswapV2.sol\":292:313  address[] memory path */\n      dup1\n        /* \"contracts/libraries/UniswapV2.sol\":330:331  2 */\n      0x02\n        /* \"contracts/libraries/UniswapV2.sol\":316:332  new address[](2) */\n      0xffffffffffffffff\n      dup2\n      gt\n      dup1\n      iszero\n      tag_7\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_7:\n      pop\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_8\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_8:\n      pop\n        /* \"contracts/libraries/UniswapV2.sol\":292:332  address[] memory path = new address[](2) */\n      swap1\n      pop\n        /* \"contracts/libraries/UniswapV2.sol\":352:355  tIn */\n      dup4\n        /* \"contracts/libraries/UniswapV2.sol\":342:346  path */\n      dup2\n        /* \"contracts/libraries/UniswapV2.sol\":347:348  0 */\n      0x00\n        /* \"contracts/libraries/UniswapV2.sol\":342:349  path[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_9\n      jumpi\n      invalid\n    tag_9:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"contracts/libraries/UniswapV2.sol\":342:355  path[0] = tIn */\n      swap1\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/libraries/UniswapV2.sol\":375:379  tOut */\n      dup3\n        /* \"contracts/libraries/UniswapV2.sol\":365:369  path */\n      dup2\n        /* \"contracts/libraries/UniswapV2.sol\":370:371  1 */\n      0x01\n        /* \"contracts/libraries/UniswapV2.sol\":365:372  path[1] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_10\n      jumpi\n      invalid\n    tag_10:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"contracts/libraries/UniswapV2.sol\":365:379  path[1] = tOut */\n      swap1\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/libraries/UniswapV2.sol\":389:410  uint[] memory amounts */\n      0x00\n        /* \"contracts/libraries/UniswapV2.sol\":432:440  provider */\n      dup6\n        /* \"contracts/libraries/UniswapV2.sol\":413:455  IUniswapV2Router01(provider).getAmountsOut */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xd06ca61f\n        /* \"contracts/libraries/UniswapV2.sol\":467:470  tIn */\n      dup7\n        /* \"contracts/libraries/UniswapV2.sol\":460:480  IERC20(tIn).decimals */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x313ce567\n        /* \"contracts/libraries/UniswapV2.sol\":460:482  IERC20(tIn).decimals() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_11\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_11:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_13\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_13:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_14\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_14:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"contracts/libraries/UniswapV2.sol\":456:482  10**IERC20(tIn).decimals() */\n      0xff\n      and\n        /* \"contracts/libraries/UniswapV2.sol\":456:458  10 */\n      0x0a\n        /* \"contracts/libraries/UniswapV2.sol\":456:482  10**IERC20(tIn).decimals() */\n      exp\n        /* \"contracts/libraries/UniswapV2.sol\":483:487  path */\n      dup5\n        /* \"contracts/libraries/UniswapV2.sol\":413:488  IUniswapV2Router01(provider).getAmountsOut(10**IERC20(tIn).decimals(),path) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      0x20\n      mul\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_15:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_17\n      jumpi\n      dup1\n      dup3\n      add\n      mload\n      dup2\n      dup5\n      add\n      mstore\n      0x20\n      dup2\n      add\n      swap1\n      pop\n      jump(tag_15)\n    tag_17:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      swap4\n      pop\n      pop\n      pop\n      pop\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_18\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_18:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_20\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_20:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x00\n      dup3\n      returndatacopy\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      0x20\n      dup2\n      lt\n      iszero\n      tag_21\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_21:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      mload(0x40)\n      swap4\n      swap3\n      swap2\n      swap1\n      dup5\n      0x0100000000\n      dup3\n      gt\n      iszero\n      tag_22\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_22:\n      dup4\n      dup3\n      add\n      swap2\n      pop\n      0x20\n      dup3\n      add\n      dup6\n      dup2\n      gt\n      iszero\n      tag_23\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_23:\n      dup3\n      mload\n      dup7\n      0x20\n      dup3\n      mul\n      dup4\n      add\n      gt\n      0x0100000000\n      dup3\n      gt\n      or\n      iszero\n      tag_24\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_24:\n      dup1\n      dup4\n      mstore\n      0x20\n      dup4\n      add\n      swap3\n      pop\n      pop\n      pop\n      swap1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      0x20\n      mul\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_25:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_27\n      jumpi\n      dup1\n      dup3\n      add\n      mload\n      dup2\n      dup5\n      add\n      mstore\n      0x20\n      dup2\n      add\n      swap1\n      pop\n      jump(tag_25)\n    tag_27:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      0x40\n      mstore\n      pop\n      pop\n      pop\n        /* \"contracts/libraries/UniswapV2.sol\":389:488  uint[] memory amounts = IUniswapV2Router01(provider).getAmountsOut(10**IERC20(tIn).decimals(),path) */\n      swap1\n      pop\n        /* \"contracts/libraries/UniswapV2.sol\":504:511  amounts */\n      dup1\n        /* \"contracts/libraries/UniswapV2.sol\":512:513  1 */\n      0x01\n        /* \"contracts/libraries/UniswapV2.sol\":504:514  amounts[1] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_28\n      jumpi\n      invalid\n    tag_28:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/libraries/UniswapV2.sol\":497:514  return amounts[1] */\n      swap3\n      pop\n      pop\n      pop\n        /* \"contracts/libraries/UniswapV2.sol\":192:521  function Price(address provider, address tIn,address tOut) external view returns (uint256){... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212208c7f000c36a33c0e118143dc473dd21d1734424eb2c04931f2aa3759cdba00c264736f6c63430007060033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "6103fe610026600b82828239805160001a60731461001957fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100355760003560e01c8063c361e0b11461003a575b600080fd5b6100bc6004803603606081101561005057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506100d2565b6040518082815260200191505060405180910390f35b600080600267ffffffffffffffff811180156100ed57600080fd5b5060405190808252806020026020018201604052801561011c5781602001602082028036833780820191505090505b509050838160008151811061012d57fe5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050828160018151811061017557fe5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505060008573ffffffffffffffffffffffffffffffffffffffff1663d06ca61f8673ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b15801561021357600080fd5b505afa158015610227573d6000803e3d6000fd5b505050506040513d602081101561023d57600080fd5b810190808051906020019092919050505060ff16600a0a846040518363ffffffff1660e01b81526004018083815260200180602001828103825283818151815260200191508051906020019060200280838360005b838110156102ad578082015181840152602081019050610292565b50505050905001935050505060006040518083038186803b1580156102d157600080fd5b505afa1580156102e5573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250602081101561030f57600080fd5b810190808051604051939291908464010000000082111561032f57600080fd5b8382019150602082018581111561034557600080fd5b825186602082028301116401000000008211171561036257600080fd5b8083526020830192505050908051906020019060200280838360005b8381101561039957808201518184015260208101905061037e565b505050509050016040525050509050806001815181106103b557fe5b602002602001015192505050939250505056fea26469706673582212208c7f000c36a33c0e118143dc473dd21d1734424eb2c04931f2aa3759cdba00c264736f6c63430007060033",
							"opcodes": "PUSH2 0x3FE PUSH2 0x26 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH2 0x19 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x35 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xC361E0B1 EQ PUSH2 0x3A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xBC PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x50 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xD2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0xED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x11C JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP DUP4 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x12D JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP3 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x175 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xD06CA61F DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x213 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x227 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x23D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH1 0xFF AND PUSH1 0xA EXP DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2AD JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x292 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP4 POP POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2E5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x30F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH5 0x100000000 DUP3 GT ISZERO PUSH2 0x32F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH2 0x345 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD DUP7 PUSH1 0x20 DUP3 MUL DUP4 ADD GT PUSH5 0x100000000 DUP3 GT OR ISZERO PUSH2 0x362 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP3 POP POP POP SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x399 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x37E JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD PUSH1 0x40 MSTORE POP POP POP SWAP1 POP DUP1 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x3B5 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP13 PUSH32 0xC36A33C0E118143DC473DD21D1734424EB2C04931F2AA3759CDBA00C26473 PUSH16 0x6C634300070600330000000000000000 ",
							"sourceMap": "168:356:15:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600436106100355760003560e01c8063c361e0b11461003a575b600080fd5b6100bc6004803603606081101561005057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506100d2565b6040518082815260200191505060405180910390f35b600080600267ffffffffffffffff811180156100ed57600080fd5b5060405190808252806020026020018201604052801561011c5781602001602082028036833780820191505090505b509050838160008151811061012d57fe5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050828160018151811061017557fe5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505060008573ffffffffffffffffffffffffffffffffffffffff1663d06ca61f8673ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b15801561021357600080fd5b505afa158015610227573d6000803e3d6000fd5b505050506040513d602081101561023d57600080fd5b810190808051906020019092919050505060ff16600a0a846040518363ffffffff1660e01b81526004018083815260200180602001828103825283818151815260200191508051906020019060200280838360005b838110156102ad578082015181840152602081019050610292565b50505050905001935050505060006040518083038186803b1580156102d157600080fd5b505afa1580156102e5573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250602081101561030f57600080fd5b810190808051604051939291908464010000000082111561032f57600080fd5b8382019150602082018581111561034557600080fd5b825186602082028301116401000000008211171561036257600080fd5b8083526020830192505050908051906020019060200280838360005b8381101561039957808201518184015260208101905061037e565b505050509050016040525050509050806001815181106103b557fe5b602002602001015192505050939250505056fea26469706673582212208c7f000c36a33c0e118143dc473dd21d1734424eb2c04931f2aa3759cdba00c264736f6c63430007060033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x35 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xC361E0B1 EQ PUSH2 0x3A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xBC PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x50 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xD2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0xED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x11C JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP DUP4 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x12D JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP3 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x175 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xD06CA61F DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x213 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x227 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x23D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH1 0xFF AND PUSH1 0xA EXP DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2AD JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x292 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP4 POP POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2E5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x30F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH5 0x100000000 DUP3 GT ISZERO PUSH2 0x32F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH2 0x345 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD DUP7 PUSH1 0x20 DUP3 MUL DUP4 ADD GT PUSH5 0x100000000 DUP3 GT OR ISZERO PUSH2 0x362 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP3 POP POP POP SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x399 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x37E JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD PUSH1 0x40 MSTORE POP POP POP SWAP1 POP DUP1 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x3B5 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP13 PUSH32 0xC36A33C0E118143DC473DD21D1734424EB2C04931F2AA3759CDBA00C26473 PUSH16 0x6C634300070600330000000000000000 ",
							"sourceMap": "168:356:15:-:0;;;;;;;;;;;;;;;;;;;;;;;;192:329;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;274:7;292:21;330:1;316:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;292:40;;352:3;342:4;347:1;342:7;;;;;;;;;;;;;:13;;;;;;;;;;;375:4;365;370:1;365:7;;;;;;;;;;;;;:14;;;;;;;;;;;389:21;432:8;413:42;;;467:3;460:20;;;:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;456:26;;:2;:26;483:4;413:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;389:99;;504:7;512:1;504:10;;;;;;;;;;;;;;497:17;;;;192:329;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "204400",
								"executionCost": "273",
								"totalCost": "204673"
							},
							"external": {
								"Price(address,address,address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 168,
									"end": 524,
									"name": "PUSH #[$]",
									"source": 15,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 168,
									"end": 524,
									"name": "PUSH [$]",
									"source": 15,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 168,
									"end": 524,
									"name": "PUSH",
									"source": 15,
									"value": "B"
								},
								{
									"begin": 168,
									"end": 524,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 168,
									"end": 524,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 168,
									"end": 524,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 168,
									"end": 524,
									"name": "CODECOPY",
									"source": 15
								},
								{
									"begin": 168,
									"end": 524,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 168,
									"end": 524,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": 168,
									"end": 524,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 168,
									"end": 524,
									"name": "BYTE",
									"source": 15
								},
								{
									"begin": 168,
									"end": 524,
									"name": "PUSH",
									"source": 15,
									"value": "73"
								},
								{
									"begin": 168,
									"end": 524,
									"name": "EQ",
									"source": 15
								},
								{
									"begin": 168,
									"end": 524,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 168,
									"end": 524,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 168,
									"end": 524,
									"name": "INVALID",
									"source": 15
								},
								{
									"begin": 168,
									"end": 524,
									"name": "tag",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 168,
									"end": 524,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 168,
									"end": 524,
									"name": "ADDRESS",
									"source": 15
								},
								{
									"begin": 168,
									"end": 524,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 168,
									"end": 524,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 168,
									"end": 524,
									"name": "PUSH",
									"source": 15,
									"value": "73"
								},
								{
									"begin": 168,
									"end": 524,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 168,
									"end": 524,
									"name": "MSTORE8",
									"source": 15
								},
								{
									"begin": 168,
									"end": 524,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 168,
									"end": 524,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 168,
									"end": 524,
									"name": "RETURN",
									"source": 15
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212208c7f000c36a33c0e118143dc473dd21d1734424eb2c04931f2aa3759cdba00c264736f6c63430007060033",
									".code": [
										{
											"begin": 168,
											"end": 524,
											"name": "PUSHDEPLOYADDRESS",
											"source": 15
										},
										{
											"begin": 168,
											"end": 524,
											"name": "ADDRESS",
											"source": 15
										},
										{
											"begin": 168,
											"end": 524,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 168,
											"end": 524,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 168,
											"end": 524,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 168,
											"end": 524,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 168,
											"end": 524,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 168,
											"end": 524,
											"name": "CALLDATASIZE",
											"source": 15
										},
										{
											"begin": 168,
											"end": 524,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 168,
											"end": 524,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 168,
											"end": 524,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 168,
											"end": 524,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 168,
											"end": 524,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 168,
											"end": 524,
											"name": "PUSH",
											"source": 15,
											"value": "E0"
										},
										{
											"begin": 168,
											"end": 524,
											"name": "SHR",
											"source": 15
										},
										{
											"begin": 168,
											"end": 524,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 168,
											"end": 524,
											"name": "PUSH",
											"source": 15,
											"value": "C361E0B1"
										},
										{
											"begin": 168,
											"end": 524,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 168,
											"end": 524,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "2"
										},
										{
											"begin": 168,
											"end": 524,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 168,
											"end": 524,
											"name": "tag",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 168,
											"end": 524,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 168,
											"end": 524,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 168,
											"end": 524,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 168,
											"end": 524,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 192,
											"end": 521,
											"name": "tag",
											"source": 15,
											"value": "2"
										},
										{
											"begin": 192,
											"end": 521,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 192,
											"end": 521,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "3"
										},
										{
											"begin": 192,
											"end": 521,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 192,
											"end": 521,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 192,
											"end": 521,
											"name": "CALLDATASIZE",
											"source": 15
										},
										{
											"begin": 192,
											"end": 521,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 192,
											"end": 521,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 192,
											"end": 521,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 192,
											"end": 521,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 192,
											"end": 521,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 192,
											"end": 521,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 192,
											"end": 521,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 192,
											"end": 521,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 192,
											"end": 521,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 192,
											"end": 521,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 192,
											"end": 521,
											"name": "tag",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 192,
											"end": 521,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 192,
											"end": 521,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 192,
											"end": 521,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 192,
											"end": 521,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 192,
											"end": 521,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 192,
											"end": 521,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 192,
											"end": 521,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 192,
											"end": 521,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 192,
											"end": 521,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 192,
											"end": 521,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 192,
											"end": 521,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 192,
											"end": 521,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 192,
											"end": 521,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 192,
											"end": 521,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 192,
											"end": 521,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 192,
											"end": 521,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 192,
											"end": 521,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 192,
											"end": 521,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 192,
											"end": 521,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 192,
											"end": 521,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 192,
											"end": 521,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 192,
											"end": 521,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 192,
											"end": 521,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 192,
											"end": 521,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 192,
											"end": 521,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 192,
											"end": 521,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 192,
											"end": 521,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 192,
											"end": 521,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 192,
											"end": 521,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 192,
											"end": 521,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 192,
											"end": 521,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 192,
											"end": 521,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 192,
											"end": 521,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 192,
											"end": 521,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 192,
											"end": 521,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 192,
											"end": 521,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 192,
											"end": 521,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 192,
											"end": 521,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 192,
											"end": 521,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 192,
											"end": 521,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 192,
											"end": 521,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 192,
											"end": 521,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "5"
										},
										{
											"begin": 192,
											"end": 521,
											"name": "JUMP",
											"source": 15,
											"value": "[in]"
										},
										{
											"begin": 192,
											"end": 521,
											"name": "tag",
											"source": 15,
											"value": "3"
										},
										{
											"begin": 192,
											"end": 521,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 192,
											"end": 521,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 192,
											"end": 521,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 192,
											"end": 521,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 192,
											"end": 521,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 192,
											"end": 521,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 192,
											"end": 521,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 192,
											"end": 521,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 192,
											"end": 521,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 192,
											"end": 521,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 192,
											"end": 521,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 192,
											"end": 521,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 192,
											"end": 521,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 192,
											"end": 521,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 192,
											"end": 521,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 192,
											"end": 521,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 192,
											"end": 521,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 192,
											"end": 521,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 192,
											"end": 521,
											"name": "RETURN",
											"source": 15
										},
										{
											"begin": 192,
											"end": 521,
											"name": "tag",
											"source": 15,
											"value": "5"
										},
										{
											"begin": 192,
											"end": 521,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 274,
											"end": 281,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 292,
											"end": 313,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 330,
											"end": 331,
											"name": "PUSH",
											"source": 15,
											"value": "2"
										},
										{
											"begin": 316,
											"end": 332,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 316,
											"end": 332,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 316,
											"end": 332,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 316,
											"end": 332,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 316,
											"end": 332,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 316,
											"end": 332,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "7"
										},
										{
											"begin": 316,
											"end": 332,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 316,
											"end": 332,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 316,
											"end": 332,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 316,
											"end": 332,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 316,
											"end": 332,
											"name": "tag",
											"source": 15,
											"value": "7"
										},
										{
											"begin": 316,
											"end": 332,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 316,
											"end": 332,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 316,
											"end": 332,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 316,
											"end": 332,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 316,
											"end": 332,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 316,
											"end": 332,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 316,
											"end": 332,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 316,
											"end": 332,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 316,
											"end": 332,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 316,
											"end": 332,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 316,
											"end": 332,
											"name": "MUL",
											"source": 15
										},
										{
											"begin": 316,
											"end": 332,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 316,
											"end": 332,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 316,
											"end": 332,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 316,
											"end": 332,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 316,
											"end": 332,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 316,
											"end": 332,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 316,
											"end": 332,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 316,
											"end": 332,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 316,
											"end": 332,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "8"
										},
										{
											"begin": 316,
											"end": 332,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 316,
											"end": 332,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 316,
											"end": 332,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 316,
											"end": 332,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 316,
											"end": 332,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 316,
											"end": 332,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 316,
											"end": 332,
											"name": "MUL",
											"source": 15
										},
										{
											"begin": 316,
											"end": 332,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 316,
											"end": 332,
											"name": "CALLDATASIZE",
											"source": 15
										},
										{
											"begin": 316,
											"end": 332,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 316,
											"end": 332,
											"name": "CALLDATACOPY",
											"source": 15
										},
										{
											"begin": 316,
											"end": 332,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 316,
											"end": 332,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 316,
											"end": 332,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 316,
											"end": 332,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 316,
											"end": 332,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 316,
											"end": 332,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 316,
											"end": 332,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 316,
											"end": 332,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 316,
											"end": 332,
											"name": "tag",
											"source": 15,
											"value": "8"
										},
										{
											"begin": 316,
											"end": 332,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 316,
											"end": 332,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 292,
											"end": 332,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 292,
											"end": 332,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 352,
											"end": 355,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 342,
											"end": 346,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 347,
											"end": 348,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 342,
											"end": 349,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 342,
											"end": 349,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 342,
											"end": 349,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 342,
											"end": 349,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 342,
											"end": 349,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "9"
										},
										{
											"begin": 342,
											"end": 349,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 342,
											"end": 349,
											"name": "INVALID",
											"source": 15
										},
										{
											"begin": 342,
											"end": 349,
											"name": "tag",
											"source": 15,
											"value": "9"
										},
										{
											"begin": 342,
											"end": 349,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 342,
											"end": 349,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 342,
											"end": 349,
											"name": "MUL",
											"source": 15
										},
										{
											"begin": 342,
											"end": 349,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 342,
											"end": 349,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 342,
											"end": 349,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 342,
											"end": 355,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 342,
											"end": 355,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 342,
											"end": 355,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 342,
											"end": 355,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 342,
											"end": 355,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 342,
											"end": 355,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 342,
											"end": 355,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 342,
											"end": 355,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 342,
											"end": 355,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 342,
											"end": 355,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 342,
											"end": 355,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 375,
											"end": 379,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 365,
											"end": 369,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 370,
											"end": 371,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 365,
											"end": 372,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 365,
											"end": 372,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 365,
											"end": 372,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 365,
											"end": 372,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 365,
											"end": 372,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "10"
										},
										{
											"begin": 365,
											"end": 372,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 365,
											"end": 372,
											"name": "INVALID",
											"source": 15
										},
										{
											"begin": 365,
											"end": 372,
											"name": "tag",
											"source": 15,
											"value": "10"
										},
										{
											"begin": 365,
											"end": 372,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 365,
											"end": 372,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 365,
											"end": 372,
											"name": "MUL",
											"source": 15
										},
										{
											"begin": 365,
											"end": 372,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 365,
											"end": 372,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 365,
											"end": 372,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 365,
											"end": 379,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 365,
											"end": 379,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 365,
											"end": 379,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 365,
											"end": 379,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 365,
											"end": 379,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 365,
											"end": 379,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 365,
											"end": 379,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 365,
											"end": 379,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 365,
											"end": 379,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 365,
											"end": 379,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 365,
											"end": 379,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 389,
											"end": 410,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 432,
											"end": 440,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 413,
											"end": 455,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 413,
											"end": 455,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 413,
											"end": 455,
											"name": "PUSH",
											"source": 15,
											"value": "D06CA61F"
										},
										{
											"begin": 467,
											"end": 470,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 460,
											"end": 480,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 460,
											"end": 480,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 460,
											"end": 480,
											"name": "PUSH",
											"source": 15,
											"value": "313CE567"
										},
										{
											"begin": 460,
											"end": 482,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 460,
											"end": 482,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 460,
											"end": 482,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 460,
											"end": 482,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFF"
										},
										{
											"begin": 460,
											"end": 482,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 460,
											"end": 482,
											"name": "PUSH",
											"source": 15,
											"value": "E0"
										},
										{
											"begin": 460,
											"end": 482,
											"name": "SHL",
											"source": 15
										},
										{
											"begin": 460,
											"end": 482,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 460,
											"end": 482,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 460,
											"end": 482,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 460,
											"end": 482,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 460,
											"end": 482,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 460,
											"end": 482,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 460,
											"end": 482,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 460,
											"end": 482,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 460,
											"end": 482,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 460,
											"end": 482,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 460,
											"end": 482,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 460,
											"end": 482,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 460,
											"end": 482,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 460,
											"end": 482,
											"name": "EXTCODESIZE",
											"source": 15
										},
										{
											"begin": 460,
											"end": 482,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 460,
											"end": 482,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 460,
											"end": 482,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 460,
											"end": 482,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "11"
										},
										{
											"begin": 460,
											"end": 482,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 460,
											"end": 482,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 460,
											"end": 482,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 460,
											"end": 482,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 460,
											"end": 482,
											"name": "tag",
											"source": 15,
											"value": "11"
										},
										{
											"begin": 460,
											"end": 482,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 460,
											"end": 482,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 460,
											"end": 482,
											"name": "GAS",
											"source": 15
										},
										{
											"begin": 460,
											"end": 482,
											"name": "STATICCALL",
											"source": 15
										},
										{
											"begin": 460,
											"end": 482,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 460,
											"end": 482,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 460,
											"end": 482,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 460,
											"end": 482,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "13"
										},
										{
											"begin": 460,
											"end": 482,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 460,
											"end": 482,
											"name": "RETURNDATASIZE",
											"source": 15
										},
										{
											"begin": 460,
											"end": 482,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 460,
											"end": 482,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 460,
											"end": 482,
											"name": "RETURNDATACOPY",
											"source": 15
										},
										{
											"begin": 460,
											"end": 482,
											"name": "RETURNDATASIZE",
											"source": 15
										},
										{
											"begin": 460,
											"end": 482,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 460,
											"end": 482,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 460,
											"end": 482,
											"name": "tag",
											"source": 15,
											"value": "13"
										},
										{
											"begin": 460,
											"end": 482,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 460,
											"end": 482,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 460,
											"end": 482,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 460,
											"end": 482,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 460,
											"end": 482,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 460,
											"end": 482,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 460,
											"end": 482,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 460,
											"end": 482,
											"name": "RETURNDATASIZE",
											"source": 15
										},
										{
											"begin": 460,
											"end": 482,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 460,
											"end": 482,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 460,
											"end": 482,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 460,
											"end": 482,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 460,
											"end": 482,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "14"
										},
										{
											"begin": 460,
											"end": 482,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 460,
											"end": 482,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 460,
											"end": 482,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 460,
											"end": 482,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 460,
											"end": 482,
											"name": "tag",
											"source": 15,
											"value": "14"
										},
										{
											"begin": 460,
											"end": 482,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 460,
											"end": 482,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 460,
											"end": 482,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 460,
											"end": 482,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 460,
											"end": 482,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 460,
											"end": 482,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 460,
											"end": 482,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 460,
											"end": 482,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 460,
											"end": 482,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 460,
											"end": 482,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 460,
											"end": 482,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 460,
											"end": 482,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 460,
											"end": 482,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 460,
											"end": 482,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 460,
											"end": 482,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 460,
											"end": 482,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 460,
											"end": 482,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 456,
											"end": 482,
											"name": "PUSH",
											"source": 15,
											"value": "FF"
										},
										{
											"begin": 456,
											"end": 482,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 456,
											"end": 458,
											"name": "PUSH",
											"source": 15,
											"value": "A"
										},
										{
											"begin": 456,
											"end": 482,
											"name": "EXP",
											"source": 15
										},
										{
											"begin": 483,
											"end": 487,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 413,
											"end": 488,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 413,
											"end": 488,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 413,
											"end": 488,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 413,
											"end": 488,
											"name": "PUSH",
											"source": 15,
											"value": "FFFFFFFF"
										},
										{
											"begin": 413,
											"end": 488,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 413,
											"end": 488,
											"name": "PUSH",
											"source": 15,
											"value": "E0"
										},
										{
											"begin": 413,
											"end": 488,
											"name": "SHL",
											"source": 15
										},
										{
											"begin": 413,
											"end": 488,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 413,
											"end": 488,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 413,
											"end": 488,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 413,
											"end": 488,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 413,
											"end": 488,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 413,
											"end": 488,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 413,
											"end": 488,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 413,
											"end": 488,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 413,
											"end": 488,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 413,
											"end": 488,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 413,
											"end": 488,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 413,
											"end": 488,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 413,
											"end": 488,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 413,
											"end": 488,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 413,
											"end": 488,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 413,
											"end": 488,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 413,
											"end": 488,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 413,
											"end": 488,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 413,
											"end": 488,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 413,
											"end": 488,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 413,
											"end": 488,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 413,
											"end": 488,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 413,
											"end": 488,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 413,
											"end": 488,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 413,
											"end": 488,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 413,
											"end": 488,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 413,
											"end": 488,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 413,
											"end": 488,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 413,
											"end": 488,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 413,
											"end": 488,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 413,
											"end": 488,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 413,
											"end": 488,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 413,
											"end": 488,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 413,
											"end": 488,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 413,
											"end": 488,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 413,
											"end": 488,
											"name": "MUL",
											"source": 15
										},
										{
											"begin": 413,
											"end": 488,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 413,
											"end": 488,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 413,
											"end": 488,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 413,
											"end": 488,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 413,
											"end": 488,
											"name": "tag",
											"source": 15,
											"value": "15"
										},
										{
											"begin": 413,
											"end": 488,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 413,
											"end": 488,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 413,
											"end": 488,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 413,
											"end": 488,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 413,
											"end": 488,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 413,
											"end": 488,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "17"
										},
										{
											"begin": 413,
											"end": 488,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 413,
											"end": 488,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 413,
											"end": 488,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 413,
											"end": 488,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 413,
											"end": 488,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 413,
											"end": 488,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 413,
											"end": 488,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 413,
											"end": 488,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 413,
											"end": 488,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 413,
											"end": 488,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 413,
											"end": 488,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 413,
											"end": 488,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 413,
											"end": 488,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 413,
											"end": 488,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 413,
											"end": 488,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "15"
										},
										{
											"begin": 413,
											"end": 488,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 413,
											"end": 488,
											"name": "tag",
											"source": 15,
											"value": "17"
										},
										{
											"begin": 413,
											"end": 488,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 413,
											"end": 488,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 413,
											"end": 488,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 413,
											"end": 488,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 413,
											"end": 488,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 413,
											"end": 488,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 413,
											"end": 488,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 413,
											"end": 488,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 413,
											"end": 488,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 413,
											"end": 488,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 413,
											"end": 488,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 413,
											"end": 488,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 413,
											"end": 488,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 413,
											"end": 488,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 413,
											"end": 488,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 413,
											"end": 488,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 413,
											"end": 488,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 413,
											"end": 488,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 413,
											"end": 488,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 413,
											"end": 488,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 413,
											"end": 488,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 413,
											"end": 488,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 413,
											"end": 488,
											"name": "EXTCODESIZE",
											"source": 15
										},
										{
											"begin": 413,
											"end": 488,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 413,
											"end": 488,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 413,
											"end": 488,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 413,
											"end": 488,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "18"
										},
										{
											"begin": 413,
											"end": 488,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 413,
											"end": 488,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 413,
											"end": 488,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 413,
											"end": 488,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 413,
											"end": 488,
											"name": "tag",
											"source": 15,
											"value": "18"
										},
										{
											"begin": 413,
											"end": 488,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 413,
											"end": 488,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 413,
											"end": 488,
											"name": "GAS",
											"source": 15
										},
										{
											"begin": 413,
											"end": 488,
											"name": "STATICCALL",
											"source": 15
										},
										{
											"begin": 413,
											"end": 488,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 413,
											"end": 488,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 413,
											"end": 488,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 413,
											"end": 488,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 413,
											"end": 488,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 413,
											"end": 488,
											"name": "RETURNDATASIZE",
											"source": 15
										},
										{
											"begin": 413,
											"end": 488,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 413,
											"end": 488,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 413,
											"end": 488,
											"name": "RETURNDATACOPY",
											"source": 15
										},
										{
											"begin": 413,
											"end": 488,
											"name": "RETURNDATASIZE",
											"source": 15
										},
										{
											"begin": 413,
											"end": 488,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 413,
											"end": 488,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 413,
											"end": 488,
											"name": "tag",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 413,
											"end": 488,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 413,
											"end": 488,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 413,
											"end": 488,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 413,
											"end": 488,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 413,
											"end": 488,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 413,
											"end": 488,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 413,
											"end": 488,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 413,
											"end": 488,
											"name": "RETURNDATASIZE",
											"source": 15
										},
										{
											"begin": 413,
											"end": 488,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 413,
											"end": 488,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 413,
											"end": 488,
											"name": "RETURNDATACOPY",
											"source": 15
										},
										{
											"begin": 413,
											"end": 488,
											"name": "RETURNDATASIZE",
											"source": 15
										},
										{
											"begin": 413,
											"end": 488,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 413,
											"end": 488,
											"name": "NOT",
											"source": 15
										},
										{
											"begin": 413,
											"end": 488,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 413,
											"end": 488,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 413,
											"end": 488,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 413,
											"end": 488,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 413,
											"end": 488,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 413,
											"end": 488,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 413,
											"end": 488,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 413,
											"end": 488,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 413,
											"end": 488,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 413,
											"end": 488,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 413,
											"end": 488,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 413,
											"end": 488,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 413,
											"end": 488,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 413,
											"end": 488,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 413,
											"end": 488,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "21"
										},
										{
											"begin": 413,
											"end": 488,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 413,
											"end": 488,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 413,
											"end": 488,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 413,
											"end": 488,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 413,
											"end": 488,
											"name": "tag",
											"source": 15,
											"value": "21"
										},
										{
											"begin": 413,
											"end": 488,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 413,
											"end": 488,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 413,
											"end": 488,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 413,
											"end": 488,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 413,
											"end": 488,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 413,
											"end": 488,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 413,
											"end": 488,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 413,
											"end": 488,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 413,
											"end": 488,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 413,
											"end": 488,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 413,
											"end": 488,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 413,
											"end": 488,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 413,
											"end": 488,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 413,
											"end": 488,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 413,
											"end": 488,
											"name": "PUSH",
											"source": 15,
											"value": "100000000"
										},
										{
											"begin": 413,
											"end": 488,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 413,
											"end": 488,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 413,
											"end": 488,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 413,
											"end": 488,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "22"
										},
										{
											"begin": 413,
											"end": 488,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 413,
											"end": 488,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 413,
											"end": 488,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 413,
											"end": 488,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 413,
											"end": 488,
											"name": "tag",
											"source": 15,
											"value": "22"
										},
										{
											"begin": 413,
											"end": 488,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 413,
											"end": 488,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 413,
											"end": 488,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 413,
											"end": 488,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 413,
											"end": 488,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 413,
											"end": 488,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 413,
											"end": 488,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 413,
											"end": 488,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 413,
											"end": 488,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 413,
											"end": 488,
											"name": "DUP6",
											"source": 15
										},
										{
											"begin": 413,
											"end": 488,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 413,
											"end": 488,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 413,
											"end": 488,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 413,
											"end": 488,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "23"
										},
										{
											"begin": 413,
											"end": 488,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 413,
											"end": 488,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 413,
											"end": 488,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 413,
											"end": 488,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 413,
											"end": 488,
											"name": "tag",
											"source": 15,
											"value": "23"
										},
										{
											"begin": 413,
											"end": 488,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 413,
											"end": 488,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 413,
											"end": 488,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 413,
											"end": 488,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 413,
											"end": 488,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 413,
											"end": 488,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 413,
											"end": 488,
											"name": "MUL",
											"source": 15
										},
										{
											"begin": 413,
											"end": 488,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 413,
											"end": 488,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 413,
											"end": 488,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 413,
											"end": 488,
											"name": "PUSH",
											"source": 15,
											"value": "100000000"
										},
										{
											"begin": 413,
											"end": 488,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 413,
											"end": 488,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 413,
											"end": 488,
											"name": "OR",
											"source": 15
										},
										{
											"begin": 413,
											"end": 488,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 413,
											"end": 488,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 413,
											"end": 488,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 413,
											"end": 488,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 413,
											"end": 488,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 413,
											"end": 488,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 413,
											"end": 488,
											"name": "tag",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 413,
											"end": 488,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 413,
											"end": 488,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 413,
											"end": 488,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 413,
											"end": 488,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 413,
											"end": 488,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 413,
											"end": 488,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 413,
											"end": 488,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 413,
											"end": 488,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 413,
											"end": 488,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 413,
											"end": 488,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 413,
											"end": 488,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 413,
											"end": 488,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 413,
											"end": 488,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 413,
											"end": 488,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 413,
											"end": 488,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 413,
											"end": 488,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 413,
											"end": 488,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 413,
											"end": 488,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 413,
											"end": 488,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 413,
											"end": 488,
											"name": "MUL",
											"source": 15
										},
										{
											"begin": 413,
											"end": 488,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 413,
											"end": 488,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 413,
											"end": 488,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 413,
											"end": 488,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 413,
											"end": 488,
											"name": "tag",
											"source": 15,
											"value": "25"
										},
										{
											"begin": 413,
											"end": 488,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 413,
											"end": 488,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 413,
											"end": 488,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 413,
											"end": 488,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 413,
											"end": 488,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 413,
											"end": 488,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "27"
										},
										{
											"begin": 413,
											"end": 488,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 413,
											"end": 488,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 413,
											"end": 488,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 413,
											"end": 488,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 413,
											"end": 488,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 413,
											"end": 488,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 413,
											"end": 488,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 413,
											"end": 488,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 413,
											"end": 488,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 413,
											"end": 488,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 413,
											"end": 488,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 413,
											"end": 488,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 413,
											"end": 488,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 413,
											"end": 488,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 413,
											"end": 488,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "25"
										},
										{
											"begin": 413,
											"end": 488,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 413,
											"end": 488,
											"name": "tag",
											"source": 15,
											"value": "27"
										},
										{
											"begin": 413,
											"end": 488,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 413,
											"end": 488,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 413,
											"end": 488,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 413,
											"end": 488,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 413,
											"end": 488,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 413,
											"end": 488,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 413,
											"end": 488,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 413,
											"end": 488,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 413,
											"end": 488,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 413,
											"end": 488,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 413,
											"end": 488,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 413,
											"end": 488,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 413,
											"end": 488,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 389,
											"end": 488,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 389,
											"end": 488,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 504,
											"end": 511,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 512,
											"end": 513,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 504,
											"end": 514,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 504,
											"end": 514,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 504,
											"end": 514,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 504,
											"end": 514,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 504,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "28"
										},
										{
											"begin": 504,
											"end": 514,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 504,
											"end": 514,
											"name": "INVALID",
											"source": 15
										},
										{
											"begin": 504,
											"end": 514,
											"name": "tag",
											"source": 15,
											"value": "28"
										},
										{
											"begin": 504,
											"end": 514,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 504,
											"end": 514,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 504,
											"end": 514,
											"name": "MUL",
											"source": 15
										},
										{
											"begin": 504,
											"end": 514,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 504,
											"end": 514,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 504,
											"end": 514,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 504,
											"end": 514,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 497,
											"end": 514,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 497,
											"end": 514,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 497,
											"end": 514,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 497,
											"end": 514,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 192,
											"end": 521,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 192,
											"end": 521,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 192,
											"end": 521,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 192,
											"end": 521,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 192,
											"end": 521,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 192,
											"end": 521,
											"name": "JUMP",
											"source": 15,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"Price(address,address,address)": "c361e0b1"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tOut\",\"type\":\"address\"}],\"name\":\"Price\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/libraries/UniswapV2.sol\":\"UniswapV2\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol\":{\"keccak256\":\"0x8a3c5c449d4b7cd76513ed6995f4b86e4a86f222c770f8442f5fc128ce29b4d2\",\"urls\":[\"bzz-raw://1df63ca373dafae3bd0ee7fe70f890a1dc7c45ed869c01de68413e0e97ff9deb\",\"dweb:/ipfs/QmefJgEYGUL8KX7kQKYTrDweF8GB7yjy3nw5Bmqzryg7PG\"]},\"contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x7df9d93243a890a6dc175905d65495ae5726330faa50409ab8460c4c00c672e1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3ff91fe9d915b97343e152f1a15a46e5ff9477e90e90a4431dca38f79eb2cdba\",\"dweb:/ipfs/QmcHUAJs2MfcdbAFTzdQE1eGevxCGHNDXECiuGLDaUs34S\"]},\"contracts/libraries/UniswapV2.sol\":{\"keccak256\":\"0x506bf6b88b1a3c19b7dadc6ba97d72bc64226e12132b5b98244fa7b1e68a7833\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e3efc6561aaea11219944ee3efb3cb4f128b4fa0061b5cffc1c08a9593a097f8\",\"dweb:/ipfs/QmSo3pYZptLVnK6Y51dtscLsmKa1QnvtFGvjMBAMDr1Qrz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/libraries/UniswapV3.sol": {
				"UniswapV3": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "provider",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tIn",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tOut",
									"type": "address"
								}
							],
							"name": "Price",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								},
								{
									"internalType": "uint24",
									"name": "fee",
									"type": "uint24"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/libraries/UniswapV3.sol\":260:959  library UniswapV3 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/libraries/UniswapV3.sol\":260:959  library UniswapV3 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xc361e0b1\n      eq\n      tag_2\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"contracts/libraries/UniswapV3.sol\":285:957  function Price(address provider,address tIn,address tOut) external view returns (uint256 price,uint24 fee){... */\n    tag_2:\n      tag_3\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x60\n      dup2\n      lt\n      iszero\n      tag_4\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_4:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_5\n      jump\t// in\n    tag_3:\n      mload(0x40)\n      dup1\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      0xffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n    tag_5:\n        /* \"contracts/libraries/UniswapV3.sol\":366:379  uint256 price */\n      0x00\n        /* \"contracts/libraries/UniswapV3.sol\":380:390  uint24 fee */\n      dup1\n        /* \"contracts/libraries/UniswapV3.sol\":401:422  uint16[4] memory fees */\n      0x00\n        /* \"contracts/libraries/UniswapV3.sol\":401:445  uint16[4] memory fees = [100,500,3000,10000] */\n      mload(0x40)\n      dup1\n      0x80\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/libraries/UniswapV3.sol\":426:429  100 */\n      0x64\n        /* \"contracts/libraries/UniswapV3.sol\":401:445  uint16[4] memory fees = [100,500,3000,10000] */\n      0xffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/libraries/UniswapV3.sol\":430:433  500 */\n      0x01f4\n        /* \"contracts/libraries/UniswapV3.sol\":401:445  uint16[4] memory fees = [100,500,3000,10000] */\n      0xffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/libraries/UniswapV3.sol\":434:438  3000 */\n      0x0bb8\n        /* \"contracts/libraries/UniswapV3.sol\":401:445  uint16[4] memory fees = [100,500,3000,10000] */\n      0xffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/libraries/UniswapV3.sol\":439:444  10000 */\n      0x2710\n        /* \"contracts/libraries/UniswapV3.sol\":401:445  uint16[4] memory fees = [100,500,3000,10000] */\n      0xffff\n      and\n      dup2\n      mstore\n      pop\n      swap1\n      pop\n        /* \"contracts/libraries/UniswapV3.sol\":459:466  uint8 i */\n      0x00\n        /* \"contracts/libraries/UniswapV3.sol\":455:923  for(uint8 i=0;i<4;i++){... */\n    tag_7:\n        /* \"contracts/libraries/UniswapV3.sol\":471:472  4 */\n      0x04\n        /* \"contracts/libraries/UniswapV3.sol\":469:470  i */\n      dup2\n        /* \"contracts/libraries/UniswapV3.sol\":469:472  i<4 */\n      0xff\n      and\n      lt\n        /* \"contracts/libraries/UniswapV3.sol\":455:923  for(uint8 i=0;i<4;i++){... */\n      iszero\n      tag_8\n      jumpi\n        /* \"contracts/libraries/UniswapV3.sol\":487:499  address pool */\n      0x00\n        /* \"contracts/libraries/UniswapV3.sol\":520:528  provider */\n      dup8\n        /* \"contracts/libraries/UniswapV3.sol\":502:537  IUniswapV3Factory(provider).getPool */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x1698ee82\n        /* \"contracts/libraries/UniswapV3.sol\":538:541  tIn */\n      dup9\n        /* \"contracts/libraries/UniswapV3.sol\":542:546  tOut */\n      dup9\n        /* \"contracts/libraries/UniswapV3.sol\":547:551  fees */\n      dup7\n        /* \"contracts/libraries/UniswapV3.sol\":552:553  i */\n      dup7\n        /* \"contracts/libraries/UniswapV3.sol\":547:554  fees[i] */\n      0xff\n      and\n      0x04\n      dup2\n      lt\n      tag_10\n      jumpi\n      invalid\n    tag_10:\n      0x20\n      mul\n      add\n      mload\n        /* \"contracts/libraries/UniswapV3.sol\":502:555  IUniswapV3Factory(provider).getPool(tIn,tOut,fees[i]) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup5\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      0xffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap4\n      pop\n      pop\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_11\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_11:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_13\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_13:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_14\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_14:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"contracts/libraries/UniswapV3.sol\":487:555  address pool = IUniswapV3Factory(provider).getPool(tIn,tOut,fees[i]) */\n      swap1\n      pop\n        /* \"contracts/libraries/UniswapV3.sol\":585:586  0 */\n      0x00\n        /* \"contracts/libraries/UniswapV3.sol\":569:587  pool == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/libraries/UniswapV3.sol\":569:573  pool */\n      dup2\n        /* \"contracts/libraries/UniswapV3.sol\":569:587  pool == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/libraries/UniswapV3.sol\":565:597  if (pool == address(0)) continue */\n      iszero\n      tag_15\n      jumpi\n        /* \"contracts/libraries/UniswapV3.sol\":589:597  continue */\n      pop\n      jump(tag_9)\n        /* \"contracts/libraries/UniswapV3.sol\":565:597  if (pool == address(0)) continue */\n    tag_15:\n        /* \"contracts/libraries/UniswapV3.sol\":608:618  int24 tick */\n      0x00\n        /* \"contracts/libraries/UniswapV3.sol\":621:650  OracleLibrary.consult(pool,5) */\n      tag_16\n        /* \"contracts/libraries/UniswapV3.sol\":643:647  pool */\n      dup3\n        /* \"contracts/libraries/UniswapV3.sol\":648:649  5 */\n      0x05\n        /* \"contracts/libraries/UniswapV3.sol\":621:642  OracleLibrary.consult */\n      tag_17\n        /* \"contracts/libraries/UniswapV3.sol\":621:650  OracleLibrary.consult(pool,5) */\n      jump\t// in\n    tag_16:\n        /* \"contracts/libraries/UniswapV3.sol\":608:650  int24 tick = OracleLibrary.consult(pool,5) */\n      swap1\n      pop\n        /* \"contracts/libraries/UniswapV3.sol\":660:677  uint256 amountOut */\n      0x00\n        /* \"contracts/libraries/UniswapV3.sol\":680:759  OracleLibrary.getQuoteAtTick(tick,uint128(10**IERC20(tIn).decimals()),tIn,tOut) */\n      tag_18\n        /* \"contracts/libraries/UniswapV3.sol\":709:713  tick */\n      dup3\n        /* \"contracts/libraries/UniswapV3.sol\":733:736  tIn */\n      dup11\n        /* \"contracts/libraries/UniswapV3.sol\":726:746  IERC20(tIn).decimals */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x313ce567\n        /* \"contracts/libraries/UniswapV3.sol\":726:748  IERC20(tIn).decimals() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_19\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_19:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_21\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_21:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_22\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_22:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"contracts/libraries/UniswapV3.sol\":722:748  10**IERC20(tIn).decimals() */\n      0xff\n      and\n        /* \"contracts/libraries/UniswapV3.sol\":722:724  10 */\n      0x0a\n        /* \"contracts/libraries/UniswapV3.sol\":722:748  10**IERC20(tIn).decimals() */\n      exp\n        /* \"contracts/libraries/UniswapV3.sol\":750:753  tIn */\n      dup12\n        /* \"contracts/libraries/UniswapV3.sol\":754:758  tOut */\n      dup12\n        /* \"contracts/libraries/UniswapV3.sol\":680:708  OracleLibrary.getQuoteAtTick */\n      tag_23\n        /* \"contracts/libraries/UniswapV3.sol\":680:759  OracleLibrary.getQuoteAtTick(tick,uint128(10**IERC20(tIn).decimals()),tIn,tOut) */\n      jump\t// in\n    tag_18:\n        /* \"contracts/libraries/UniswapV3.sol\":660:759  uint256 amountOut = OracleLibrary.getQuoteAtTick(tick,uint128(10**IERC20(tIn).decimals()),tIn,tOut) */\n      swap1\n      pop\n        /* \"contracts/libraries/UniswapV3.sol\":778:779  0 */\n      0x00\n        /* \"contracts/libraries/UniswapV3.sol\":773:774  i */\n      dup5\n        /* \"contracts/libraries/UniswapV3.sol\":773:779  i == 0 */\n      0xff\n      and\n      eq\n        /* \"contracts/libraries/UniswapV3.sol\":769:798  if (i == 0) price = amountOut */\n      iszero\n      tag_24\n      jumpi\n        /* \"contracts/libraries/UniswapV3.sol\":789:798  amountOut */\n      dup1\n        /* \"contracts/libraries/UniswapV3.sol\":781:798  price = amountOut */\n      swap7\n      pop\n        /* \"contracts/libraries/UniswapV3.sol\":769:798  if (i == 0) price = amountOut */\n    tag_24:\n        /* \"contracts/libraries/UniswapV3.sol\":816:817  0 */\n      0x00\n        /* \"contracts/libraries/UniswapV3.sol\":812:813  i */\n      dup5\n        /* \"contracts/libraries/UniswapV3.sol\":812:817  i > 0 */\n      0xff\n      and\n      gt\n        /* \"contracts/libraries/UniswapV3.sol\":812:838  i > 0 && amountOut < price */\n      dup1\n      iszero\n      tag_25\n      jumpi\n      pop\n        /* \"contracts/libraries/UniswapV3.sol\":833:838  price */\n      dup7\n        /* \"contracts/libraries/UniswapV3.sol\":821:830  amountOut */\n      dup2\n        /* \"contracts/libraries/UniswapV3.sol\":821:838  amountOut < price */\n      lt\n        /* \"contracts/libraries/UniswapV3.sol\":812:838  i > 0 && amountOut < price */\n    tag_25:\n        /* \"contracts/libraries/UniswapV3.sol\":808:913  if (i > 0 && amountOut < price) {... */\n      iszero\n      tag_26\n      jumpi\n        /* \"contracts/libraries/UniswapV3.sol\":862:871  amountOut */\n      dup1\n        /* \"contracts/libraries/UniswapV3.sol\":854:871  price = amountOut */\n      swap7\n      pop\n        /* \"contracts/libraries/UniswapV3.sol\":891:895  fees */\n      dup5\n        /* \"contracts/libraries/UniswapV3.sol\":896:897  i */\n      dup5\n        /* \"contracts/libraries/UniswapV3.sol\":891:898  fees[i] */\n      0xff\n      and\n      0x04\n      dup2\n      lt\n      tag_27\n      jumpi\n      invalid\n    tag_27:\n      0x20\n      mul\n      add\n      mload\n        /* \"contracts/libraries/UniswapV3.sol\":885:898  fee = fees[i] */\n      0xffff\n      and\n      swap6\n      pop\n        /* \"contracts/libraries/UniswapV3.sol\":808:913  if (i > 0 && amountOut < price) {... */\n    tag_26:\n        /* \"contracts/libraries/UniswapV3.sol\":455:923  for(uint8 i=0;i<4;i++){... */\n      pop\n      pop\n      pop\n    tag_9:\n        /* \"contracts/libraries/UniswapV3.sol\":473:476  i++ */\n      dup1\n      dup1\n      0x01\n      add\n      swap2\n      pop\n      pop\n        /* \"contracts/libraries/UniswapV3.sol\":455:923  for(uint8 i=0;i<4;i++){... */\n      jump(tag_7)\n    tag_8:\n      pop\n        /* \"contracts/libraries/UniswapV3.sol\":932:950  return (price,fee) */\n      pop\n        /* \"contracts/libraries/UniswapV3.sol\":285:957  function Price(address provider,address tIn,address tOut) external view returns (uint256 price,uint24 fee){... */\n      swap4\n      pop\n      swap4\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/libraries/OracleLibrary.sol\":270:927  function consult(address pool, uint32 secondsAgo)... */\n    tag_17:\n        /* \"contracts/libraries/OracleLibrary.sol\":367:377  int24 tick */\n      0x00\n        /* \"contracts/libraries/OracleLibrary.sol\":415:416  0 */\n      dup1\n        /* \"contracts/libraries/OracleLibrary.sol\":401:411  secondsAgo */\n      dup3\n        /* \"contracts/libraries/OracleLibrary.sol\":401:416  secondsAgo != 0 */\n      0xffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/libraries/OracleLibrary.sol\":393:423  require(secondsAgo != 0, 'BP') */\n      tag_29\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x02\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4250000000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_29:\n        /* \"contracts/libraries/OracleLibrary.sol\":434:461  uint32[] memory secondsAgos */\n      0x00\n        /* \"contracts/libraries/OracleLibrary.sol\":477:478  2 */\n      0x02\n        /* \"contracts/libraries/OracleLibrary.sol\":464:479  new uint32[](2) */\n      0xffffffffffffffff\n      dup2\n      gt\n      dup1\n      iszero\n      tag_30\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_30:\n      pop\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_31\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_31:\n      pop\n        /* \"contracts/libraries/OracleLibrary.sol\":434:479  uint32[] memory secondsAgos = new uint32[](2) */\n      swap1\n      pop\n        /* \"contracts/libraries/OracleLibrary.sol\":506:516  secondsAgo */\n      dup3\n        /* \"contracts/libraries/OracleLibrary.sol\":489:500  secondsAgos */\n      dup2\n        /* \"contracts/libraries/OracleLibrary.sol\":501:502  0 */\n      0x00\n        /* \"contracts/libraries/OracleLibrary.sol\":489:503  secondsAgos[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_32\n      jumpi\n      invalid\n    tag_32:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"contracts/libraries/OracleLibrary.sol\":489:516  secondsAgos[0] = secondsAgo */\n      swap1\n      0xffffffff\n      and\n      swap1\n      dup2\n      0xffffffff\n      and\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/libraries/OracleLibrary.sol\":543:544  0 */\n      0x00\n        /* \"contracts/libraries/OracleLibrary.sol\":526:537  secondsAgos */\n      dup2\n        /* \"contracts/libraries/OracleLibrary.sol\":538:539  1 */\n      0x01\n        /* \"contracts/libraries/OracleLibrary.sol\":526:540  secondsAgos[1] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_33\n      jumpi\n      invalid\n    tag_33:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"contracts/libraries/OracleLibrary.sol\":526:544  secondsAgos[1] = 0 */\n      swap1\n      0xffffffff\n      and\n      swap1\n      dup2\n      0xffffffff\n      and\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/libraries/OracleLibrary.sol\":556:586  int56[] memory tickCumulatives */\n      0x00\n        /* \"contracts/libraries/OracleLibrary.sol\":619:623  pool */\n      dup5\n        /* \"contracts/libraries/OracleLibrary.sol\":604:632  IUniswapV3Pool(pool).observe */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x883bdbfd\n        /* \"contracts/libraries/OracleLibrary.sol\":633:644  secondsAgos */\n      dup4\n        /* \"contracts/libraries/OracleLibrary.sol\":604:645  IUniswapV3Pool(pool).observe(secondsAgos) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      0x20\n      mul\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_34:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_36\n      jumpi\n      dup1\n      dup3\n      add\n      mload\n      dup2\n      dup5\n      add\n      mstore\n      0x20\n      dup2\n      add\n      swap1\n      pop\n      jump(tag_34)\n    tag_36:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      swap3\n      pop\n      pop\n      pop\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_37\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_37:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_39\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_39:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x00\n      dup3\n      returndatacopy\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      0x40\n      dup2\n      lt\n      iszero\n      tag_40\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_40:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      mload(0x40)\n      swap4\n      swap3\n      swap2\n      swap1\n      dup5\n      0x0100000000\n      dup3\n      gt\n      iszero\n      tag_41\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_41:\n      dup4\n      dup3\n      add\n      swap2\n      pop\n      0x20\n      dup3\n      add\n      dup6\n      dup2\n      gt\n      iszero\n      tag_42\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_42:\n      dup3\n      mload\n      dup7\n      0x20\n      dup3\n      mul\n      dup4\n      add\n      gt\n      0x0100000000\n      dup3\n      gt\n      or\n      iszero\n      tag_43\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_43:\n      dup1\n      dup4\n      mstore\n      0x20\n      dup4\n      add\n      swap3\n      pop\n      pop\n      pop\n      swap1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      0x20\n      mul\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_44:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_46\n      jumpi\n      dup1\n      dup3\n      add\n      mload\n      dup2\n      dup5\n      add\n      mstore\n      0x20\n      dup2\n      add\n      swap1\n      pop\n      jump(tag_44)\n    tag_46:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      0x40\n      mstore\n      0x20\n      add\n      dup1\n      mload\n      mload(0x40)\n      swap4\n      swap3\n      swap2\n      swap1\n      dup5\n      0x0100000000\n      dup3\n      gt\n      iszero\n      tag_47\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_47:\n      dup4\n      dup3\n      add\n      swap2\n      pop\n      0x20\n      dup3\n      add\n      dup6\n      dup2\n      gt\n      iszero\n      tag_48\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_48:\n      dup3\n      mload\n      dup7\n      0x20\n      dup3\n      mul\n      dup4\n      add\n      gt\n      0x0100000000\n      dup3\n      gt\n      or\n      iszero\n      tag_49\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_49:\n      dup1\n      dup4\n      mstore\n      0x20\n      dup4\n      add\n      swap3\n      pop\n      pop\n      pop\n      swap1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      0x20\n      mul\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_50:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_52\n      jumpi\n      dup1\n      dup3\n      add\n      mload\n      dup2\n      dup5\n      add\n      mstore\n      0x20\n      dup2\n      add\n      swap1\n      pop\n      jump(tag_50)\n    tag_52:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      0x40\n      mstore\n      pop\n      pop\n      pop\n        /* \"contracts/libraries/OracleLibrary.sol\":555:645  (int56[] memory tickCumulatives, ) =... */\n      pop\n      swap1\n      pop\n        /* \"contracts/libraries/OracleLibrary.sol\":656:682  int56 tickCumulativesDelta */\n      0x00\n        /* \"contracts/libraries/OracleLibrary.sol\":706:721  tickCumulatives */\n      dup2\n        /* \"contracts/libraries/OracleLibrary.sol\":722:723  0 */\n      0x00\n        /* \"contracts/libraries/OracleLibrary.sol\":706:724  tickCumulatives[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_53\n      jumpi\n      invalid\n    tag_53:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/libraries/OracleLibrary.sol\":685:700  tickCumulatives */\n      dup3\n        /* \"contracts/libraries/OracleLibrary.sol\":701:702  1 */\n      0x01\n        /* \"contracts/libraries/OracleLibrary.sol\":685:703  tickCumulatives[1] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_54\n      jumpi\n      invalid\n    tag_54:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/libraries/OracleLibrary.sol\":685:724  tickCumulatives[1] - tickCumulatives[0] */\n      sub\n        /* \"contracts/libraries/OracleLibrary.sol\":656:724  int56 tickCumulativesDelta = tickCumulatives[1] - tickCumulatives[0] */\n      swap1\n      pop\n        /* \"contracts/libraries/OracleLibrary.sol\":773:783  secondsAgo */\n      dup5\n        /* \"contracts/libraries/OracleLibrary.sol\":750:783  tickCumulativesDelta / secondsAgo */\n      0xffffffff\n      and\n        /* \"contracts/libraries/OracleLibrary.sol\":750:770  tickCumulativesDelta */\n      dup2\n        /* \"contracts/libraries/OracleLibrary.sol\":750:783  tickCumulativesDelta / secondsAgo */\n      0x06\n      signextend\n      dup2\n      tag_55\n      jumpi\n      invalid\n    tag_55:\n      sdiv\n        /* \"contracts/libraries/OracleLibrary.sol\":737:784  tick = int24(tickCumulativesDelta / secondsAgo) */\n      swap4\n      pop\n        /* \"contracts/libraries/OracleLibrary.sol\":866:867  0 */\n      0x00\n        /* \"contracts/libraries/OracleLibrary.sol\":843:863  tickCumulativesDelta */\n      dup2\n        /* \"contracts/libraries/OracleLibrary.sol\":843:867  tickCumulativesDelta < 0 */\n      0x06\n      signextend\n      slt\n        /* \"contracts/libraries/OracleLibrary.sol\":843:911  tickCumulativesDelta < 0 && (tickCumulativesDelta % secondsAgo != 0) */\n      dup1\n      iszero\n      tag_56\n      jumpi\n      pop\n        /* \"contracts/libraries/OracleLibrary.sol\":909:910  0 */\n      0x00\n        /* \"contracts/libraries/OracleLibrary.sol\":895:905  secondsAgo */\n      dup6\n        /* \"contracts/libraries/OracleLibrary.sol\":872:905  tickCumulativesDelta % secondsAgo */\n      0xffffffff\n      and\n        /* \"contracts/libraries/OracleLibrary.sol\":872:892  tickCumulativesDelta */\n      dup3\n        /* \"contracts/libraries/OracleLibrary.sol\":872:905  tickCumulativesDelta % secondsAgo */\n      0x06\n      signextend\n      dup2\n      tag_57\n      jumpi\n      invalid\n    tag_57:\n      smod\n        /* \"contracts/libraries/OracleLibrary.sol\":872:910  tickCumulativesDelta % secondsAgo != 0 */\n      0x06\n      signextend\n      eq\n      iszero\n        /* \"contracts/libraries/OracleLibrary.sol\":843:911  tickCumulativesDelta < 0 && (tickCumulativesDelta % secondsAgo != 0) */\n    tag_56:\n        /* \"contracts/libraries/OracleLibrary.sol\":839:919  if (tickCumulativesDelta < 0 && (tickCumulativesDelta % secondsAgo != 0)) tick-- */\n      iszero\n      tag_58\n      jumpi\n        /* \"contracts/libraries/OracleLibrary.sol\":913:919  tick-- */\n      dup4\n      dup1\n      0x01\n      swap1\n      sub\n      swap5\n      pop\n      pop\n        /* \"contracts/libraries/OracleLibrary.sol\":839:919  if (tickCumulativesDelta < 0 && (tickCumulativesDelta % secondsAgo != 0)) tick-- */\n    tag_58:\n        /* \"contracts/libraries/OracleLibrary.sol\":270:927  function consult(address pool, uint32 secondsAgo)... */\n      pop\n      pop\n      pop\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/libraries/OracleLibrary.sol\":934:1889  function getQuoteAtTick(... */\n    tag_23:\n        /* \"contracts/libraries/OracleLibrary.sol\":1090:1109  uint256 quoteAmount */\n      0x00\n        /* \"contracts/libraries/OracleLibrary.sol\":1121:1141  uint160 sqrtRatioX96 */\n      dup1\n        /* \"contracts/libraries/OracleLibrary.sol\":1144:1177  TickMath.getSqrtRatioAtTick(tick) */\n      tag_60\n        /* \"contracts/libraries/OracleLibrary.sol\":1172:1176  tick */\n      dup7\n        /* \"contracts/libraries/OracleLibrary.sol\":1144:1171  TickMath.getSqrtRatioAtTick */\n      tag_61\n        /* \"contracts/libraries/OracleLibrary.sol\":1144:1177  TickMath.getSqrtRatioAtTick(tick) */\n      jump\t// in\n    tag_60:\n        /* \"contracts/libraries/OracleLibrary.sol\":1121:1177  uint160 sqrtRatioX96 = TickMath.getSqrtRatioAtTick(tick) */\n      swap1\n      pop\n        /* \"contracts/libraries/OracleLibrary.sol\":1312:1329  type(uint128).max */\n      0xffffffffffffffffffffffffffffffff\n        /* \"contracts/libraries/OracleLibrary.sol\":1296:1329  sqrtRatioX96 <= type(uint128).max */\n      dup1\n      and\n        /* \"contracts/libraries/OracleLibrary.sol\":1296:1308  sqrtRatioX96 */\n      dup2\n        /* \"contracts/libraries/OracleLibrary.sol\":1296:1329  sqrtRatioX96 <= type(uint128).max */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      gt\n        /* \"contracts/libraries/OracleLibrary.sol\":1292:1883  if (sqrtRatioX96 <= type(uint128).max) {... */\n      tag_62\n      jumpi\n        /* \"contracts/libraries/OracleLibrary.sol\":1345:1362  uint256 ratioX192 */\n      0x00\n        /* \"contracts/libraries/OracleLibrary.sol\":1389:1401  sqrtRatioX96 */\n      dup2\n        /* \"contracts/libraries/OracleLibrary.sol\":1365:1401  uint256(sqrtRatioX96) * sqrtRatioX96 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/libraries/OracleLibrary.sol\":1373:1385  sqrtRatioX96 */\n      dup3\n        /* \"contracts/libraries/OracleLibrary.sol\":1365:1386  uint256(sqrtRatioX96) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/libraries/OracleLibrary.sol\":1365:1401  uint256(sqrtRatioX96) * sqrtRatioX96 */\n      mul\n        /* \"contracts/libraries/OracleLibrary.sol\":1345:1401  uint256 ratioX192 = uint256(sqrtRatioX96) * sqrtRatioX96 */\n      swap1\n      pop\n        /* \"contracts/libraries/OracleLibrary.sol\":1441:1451  quoteToken */\n      dup4\n        /* \"contracts/libraries/OracleLibrary.sol\":1429:1451  baseToken < quoteToken */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/libraries/OracleLibrary.sol\":1429:1438  baseToken */\n      dup6\n        /* \"contracts/libraries/OracleLibrary.sol\":1429:1451  baseToken < quoteToken */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      lt\n        /* \"contracts/libraries/OracleLibrary.sol\":1429:1585  baseToken < quoteToken... */\n      tag_63\n      jumpi\n        /* \"contracts/libraries/OracleLibrary.sol\":1537:1585  FullMath.mulDiv(1 << 192, baseAmount, ratioX192) */\n      tag_64\n        /* \"contracts/libraries/OracleLibrary.sol\":1553:1561  1 << 192 */\n      0x01000000000000000000000000000000000000000000000000\n        /* \"contracts/libraries/OracleLibrary.sol\":1563:1573  baseAmount */\n      dup8\n        /* \"contracts/libraries/OracleLibrary.sol\":1537:1585  FullMath.mulDiv(1 << 192, baseAmount, ratioX192) */\n      0xffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/libraries/OracleLibrary.sol\":1575:1584  ratioX192 */\n      dup4\n        /* \"contracts/libraries/OracleLibrary.sol\":1537:1552  FullMath.mulDiv */\n      tag_65\n        /* \"contracts/libraries/OracleLibrary.sol\":1537:1585  FullMath.mulDiv(1 << 192, baseAmount, ratioX192) */\n      jump\t// in\n    tag_64:\n        /* \"contracts/libraries/OracleLibrary.sol\":1429:1585  baseToken < quoteToken... */\n      jump(tag_66)\n    tag_63:\n        /* \"contracts/libraries/OracleLibrary.sol\":1470:1518  FullMath.mulDiv(ratioX192, baseAmount, 1 << 192) */\n      tag_67\n        /* \"contracts/libraries/OracleLibrary.sol\":1486:1495  ratioX192 */\n      dup2\n        /* \"contracts/libraries/OracleLibrary.sol\":1497:1507  baseAmount */\n      dup8\n        /* \"contracts/libraries/OracleLibrary.sol\":1470:1518  FullMath.mulDiv(ratioX192, baseAmount, 1 << 192) */\n      0xffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/libraries/OracleLibrary.sol\":1509:1517  1 << 192 */\n      0x01000000000000000000000000000000000000000000000000\n        /* \"contracts/libraries/OracleLibrary.sol\":1470:1485  FullMath.mulDiv */\n      tag_65\n        /* \"contracts/libraries/OracleLibrary.sol\":1470:1518  FullMath.mulDiv(ratioX192, baseAmount, 1 << 192) */\n      jump\t// in\n    tag_67:\n        /* \"contracts/libraries/OracleLibrary.sol\":1429:1585  baseToken < quoteToken... */\n    tag_66:\n        /* \"contracts/libraries/OracleLibrary.sol\":1415:1585  quoteAmount = baseToken < quoteToken... */\n      swap3\n      pop\n        /* \"contracts/libraries/OracleLibrary.sol\":1292:1883  if (sqrtRatioX96 <= type(uint128).max) {... */\n      pop\n      jump(tag_68)\n    tag_62:\n        /* \"contracts/libraries/OracleLibrary.sol\":1616:1633  uint256 ratioX128 */\n      0x00\n        /* \"contracts/libraries/OracleLibrary.sol\":1636:1688  FullMath.mulDiv(sqrtRatioX96, sqrtRatioX96, 1 << 64) */\n      tag_69\n        /* \"contracts/libraries/OracleLibrary.sol\":1652:1664  sqrtRatioX96 */\n      dup3\n        /* \"contracts/libraries/OracleLibrary.sol\":1636:1688  FullMath.mulDiv(sqrtRatioX96, sqrtRatioX96, 1 << 64) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/libraries/OracleLibrary.sol\":1666:1678  sqrtRatioX96 */\n      dup4\n        /* \"contracts/libraries/OracleLibrary.sol\":1636:1688  FullMath.mulDiv(sqrtRatioX96, sqrtRatioX96, 1 << 64) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/libraries/OracleLibrary.sol\":1680:1687  1 << 64 */\n      0x010000000000000000\n        /* \"contracts/libraries/OracleLibrary.sol\":1636:1651  FullMath.mulDiv */\n      tag_65\n        /* \"contracts/libraries/OracleLibrary.sol\":1636:1688  FullMath.mulDiv(sqrtRatioX96, sqrtRatioX96, 1 << 64) */\n      jump\t// in\n    tag_69:\n        /* \"contracts/libraries/OracleLibrary.sol\":1616:1688  uint256 ratioX128 = FullMath.mulDiv(sqrtRatioX96, sqrtRatioX96, 1 << 64) */\n      swap1\n      pop\n        /* \"contracts/libraries/OracleLibrary.sol\":1728:1738  quoteToken */\n      dup4\n        /* \"contracts/libraries/OracleLibrary.sol\":1716:1738  baseToken < quoteToken */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/libraries/OracleLibrary.sol\":1716:1725  baseToken */\n      dup6\n        /* \"contracts/libraries/OracleLibrary.sol\":1716:1738  baseToken < quoteToken */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      lt\n        /* \"contracts/libraries/OracleLibrary.sol\":1716:1872  baseToken < quoteToken... */\n      tag_70\n      jumpi\n        /* \"contracts/libraries/OracleLibrary.sol\":1824:1872  FullMath.mulDiv(1 << 128, baseAmount, ratioX128) */\n      tag_71\n        /* \"contracts/libraries/OracleLibrary.sol\":1840:1848  1 << 128 */\n      0x0100000000000000000000000000000000\n        /* \"contracts/libraries/OracleLibrary.sol\":1850:1860  baseAmount */\n      dup8\n        /* \"contracts/libraries/OracleLibrary.sol\":1824:1872  FullMath.mulDiv(1 << 128, baseAmount, ratioX128) */\n      0xffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/libraries/OracleLibrary.sol\":1862:1871  ratioX128 */\n      dup4\n        /* \"contracts/libraries/OracleLibrary.sol\":1824:1839  FullMath.mulDiv */\n      tag_65\n        /* \"contracts/libraries/OracleLibrary.sol\":1824:1872  FullMath.mulDiv(1 << 128, baseAmount, ratioX128) */\n      jump\t// in\n    tag_71:\n        /* \"contracts/libraries/OracleLibrary.sol\":1716:1872  baseToken < quoteToken... */\n      jump(tag_72)\n    tag_70:\n        /* \"contracts/libraries/OracleLibrary.sol\":1757:1805  FullMath.mulDiv(ratioX128, baseAmount, 1 << 128) */\n      tag_73\n        /* \"contracts/libraries/OracleLibrary.sol\":1773:1782  ratioX128 */\n      dup2\n        /* \"contracts/libraries/OracleLibrary.sol\":1784:1794  baseAmount */\n      dup8\n        /* \"contracts/libraries/OracleLibrary.sol\":1757:1805  FullMath.mulDiv(ratioX128, baseAmount, 1 << 128) */\n      0xffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/libraries/OracleLibrary.sol\":1796:1804  1 << 128 */\n      0x0100000000000000000000000000000000\n        /* \"contracts/libraries/OracleLibrary.sol\":1757:1772  FullMath.mulDiv */\n      tag_65\n        /* \"contracts/libraries/OracleLibrary.sol\":1757:1805  FullMath.mulDiv(ratioX128, baseAmount, 1 << 128) */\n      jump\t// in\n    tag_73:\n        /* \"contracts/libraries/OracleLibrary.sol\":1716:1872  baseToken < quoteToken... */\n    tag_72:\n        /* \"contracts/libraries/OracleLibrary.sol\":1702:1872  quoteAmount = baseToken < quoteToken... */\n      swap3\n      pop\n        /* \"contracts/libraries/OracleLibrary.sol\":1292:1883  if (sqrtRatioX96 <= type(uint128).max) {... */\n      pop\n    tag_68:\n        /* \"contracts/libraries/OracleLibrary.sol\":934:1889  function getQuoteAtTick(... */\n      pop\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":1362:3942  function getSqrtRatioAtTick(int24 tick) internal pure returns (uint160 sqrtPriceX96) {... */\n    tag_61:\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":1425:1445  uint160 sqrtPriceX96 */\n      0x00\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":1457:1472  uint256 absTick */\n      dup1\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":1482:1483  0 */\n      0x00\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":1475:1479  tick */\n      dup4\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":1475:1483  tick < 0 */\n      0x02\n      signextend\n      slt\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":1475:1532  tick < 0 ? uint256(-int256(tick)) : uint256(int256(tick)) */\n      tag_75\n      jumpi\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":1526:1530  tick */\n      dup3\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":1519:1531  int256(tick) */\n      0x02\n      signextend\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":1475:1532  tick < 0 ? uint256(-int256(tick)) : uint256(int256(tick)) */\n      jump(tag_76)\n    tag_75:\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":1502:1506  tick */\n      dup3\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":1495:1507  int256(tick) */\n      0x02\n      signextend\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":1494:1507  -int256(tick) */\n      0x00\n      sub\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":1475:1532  tick < 0 ? uint256(-int256(tick)) : uint256(int256(tick)) */\n    tag_76:\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":1457:1532  uint256 absTick = tick < 0 ? uint256(-int256(tick)) : uint256(int256(tick)) */\n      swap1\n      pop\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":484:491  -887272 */\n      0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffff27618\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":644:653  -MIN_TICK */\n      0x00\n      sub\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":1561:1578  uint256(MAX_TICK) */\n      0x02\n      signextend\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":1550:1557  absTick */\n      dup2\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":1550:1578  absTick <= uint256(MAX_TICK) */\n      gt\n      iszero\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":1542:1584  require(absTick <= uint256(MAX_TICK), 'T') */\n      tag_77\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x01\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x5400000000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_77:\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":1595:1608  uint256 ratio */\n      0x00\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":1628:1629  0 */\n      dup1\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":1621:1624  0x1 */\n      0x01\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":1611:1618  absTick */\n      dup4\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":1611:1624  absTick & 0x1 */\n      and\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":1611:1629  absTick & 0x1 != 0 */\n      eq\n      iszero\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":1611:1704  absTick & 0x1 != 0 ? 0xfffcb933bd6fad37aa2d162d1a594001 : 0x100000000000000000000000000000000 */\n      tag_78\n      jumpi\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":1669:1704  0x100000000000000000000000000000000 */\n      0x0100000000000000000000000000000000\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":1611:1704  absTick & 0x1 != 0 ? 0xfffcb933bd6fad37aa2d162d1a594001 : 0x100000000000000000000000000000000 */\n      jump(tag_79)\n    tag_78:\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":1632:1666  0xfffcb933bd6fad37aa2d162d1a594001 */\n      0xfffcb933bd6fad37aa2d162d1a594001\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":1611:1704  absTick & 0x1 != 0 ? 0xfffcb933bd6fad37aa2d162d1a594001 : 0x100000000000000000000000000000000 */\n    tag_79:\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":1595:1704  uint256 ratio = absTick & 0x1 != 0 ? 0xfffcb933bd6fad37aa2d162d1a594001 : 0x100000000000000000000000000000000 */\n      0xffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      pop\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":1735:1736  0 */\n      0x00\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":1728:1731  0x2 */\n      0x02\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":1718:1725  absTick */\n      dup4\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":1718:1731  absTick & 0x2 */\n      and\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":1718:1736  absTick & 0x2 != 0 */\n      eq\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":1714:1797  if (absTick & 0x2 != 0) ratio = (ratio * 0xfff97272373d413259a46990580e213a) >> 128 */\n      tag_80\n      jumpi\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":1794:1797  128 */\n      0x80\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":1755:1789  0xfff97272373d413259a46990580e213a */\n      0xfff97272373d413259a46990580e213a\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":1747:1752  ratio */\n      dup3\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":1747:1789  ratio * 0xfff97272373d413259a46990580e213a */\n      mul\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":1746:1797  (ratio * 0xfff97272373d413259a46990580e213a) >> 128 */\n      swap1\n      shr\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":1738:1797  ratio = (ratio * 0xfff97272373d413259a46990580e213a) >> 128 */\n      swap1\n      pop\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":1714:1797  if (absTick & 0x2 != 0) ratio = (ratio * 0xfff97272373d413259a46990580e213a) >> 128 */\n    tag_80:\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":1828:1829  0 */\n      0x00\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":1821:1824  0x4 */\n      0x04\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":1811:1818  absTick */\n      dup4\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":1811:1824  absTick & 0x4 */\n      and\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":1811:1829  absTick & 0x4 != 0 */\n      eq\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":1807:1890  if (absTick & 0x4 != 0) ratio = (ratio * 0xfff2e50f5f656932ef12357cf3c7fdcc) >> 128 */\n      tag_81\n      jumpi\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":1887:1890  128 */\n      0x80\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":1848:1882  0xfff2e50f5f656932ef12357cf3c7fdcc */\n      0xfff2e50f5f656932ef12357cf3c7fdcc\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":1840:1845  ratio */\n      dup3\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":1840:1882  ratio * 0xfff2e50f5f656932ef12357cf3c7fdcc */\n      mul\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":1839:1890  (ratio * 0xfff2e50f5f656932ef12357cf3c7fdcc) >> 128 */\n      swap1\n      shr\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":1831:1890  ratio = (ratio * 0xfff2e50f5f656932ef12357cf3c7fdcc) >> 128 */\n      swap1\n      pop\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":1807:1890  if (absTick & 0x4 != 0) ratio = (ratio * 0xfff2e50f5f656932ef12357cf3c7fdcc) >> 128 */\n    tag_81:\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":1921:1922  0 */\n      0x00\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":1914:1917  0x8 */\n      0x08\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":1904:1911  absTick */\n      dup4\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":1904:1917  absTick & 0x8 */\n      and\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":1904:1922  absTick & 0x8 != 0 */\n      eq\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":1900:1983  if (absTick & 0x8 != 0) ratio = (ratio * 0xffe5caca7e10e4e61c3624eaa0941cd0) >> 128 */\n      tag_82\n      jumpi\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":1980:1983  128 */\n      0x80\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":1941:1975  0xffe5caca7e10e4e61c3624eaa0941cd0 */\n      0xffe5caca7e10e4e61c3624eaa0941cd0\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":1933:1938  ratio */\n      dup3\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":1933:1975  ratio * 0xffe5caca7e10e4e61c3624eaa0941cd0 */\n      mul\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":1932:1983  (ratio * 0xffe5caca7e10e4e61c3624eaa0941cd0) >> 128 */\n      swap1\n      shr\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":1924:1983  ratio = (ratio * 0xffe5caca7e10e4e61c3624eaa0941cd0) >> 128 */\n      swap1\n      pop\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":1900:1983  if (absTick & 0x8 != 0) ratio = (ratio * 0xffe5caca7e10e4e61c3624eaa0941cd0) >> 128 */\n    tag_82:\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2015:2016  0 */\n      0x00\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2007:2011  0x10 */\n      0x10\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":1997:2004  absTick */\n      dup4\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":1997:2011  absTick & 0x10 */\n      and\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":1997:2016  absTick & 0x10 != 0 */\n      eq\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":1993:2077  if (absTick & 0x10 != 0) ratio = (ratio * 0xffcb9843d60f6159c9db58835c926644) >> 128 */\n      tag_83\n      jumpi\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2074:2077  128 */\n      0x80\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2035:2069  0xffcb9843d60f6159c9db58835c926644 */\n      0xffcb9843d60f6159c9db58835c926644\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2027:2032  ratio */\n      dup3\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2027:2069  ratio * 0xffcb9843d60f6159c9db58835c926644 */\n      mul\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2026:2077  (ratio * 0xffcb9843d60f6159c9db58835c926644) >> 128 */\n      swap1\n      shr\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2018:2077  ratio = (ratio * 0xffcb9843d60f6159c9db58835c926644) >> 128 */\n      swap1\n      pop\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":1993:2077  if (absTick & 0x10 != 0) ratio = (ratio * 0xffcb9843d60f6159c9db58835c926644) >> 128 */\n    tag_83:\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2109:2110  0 */\n      0x00\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2101:2105  0x20 */\n      0x20\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2091:2098  absTick */\n      dup4\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2091:2105  absTick & 0x20 */\n      and\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2091:2110  absTick & 0x20 != 0 */\n      eq\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2087:2171  if (absTick & 0x20 != 0) ratio = (ratio * 0xff973b41fa98c081472e6896dfb254c0) >> 128 */\n      tag_84\n      jumpi\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2168:2171  128 */\n      0x80\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2129:2163  0xff973b41fa98c081472e6896dfb254c0 */\n      0xff973b41fa98c081472e6896dfb254c0\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2121:2126  ratio */\n      dup3\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2121:2163  ratio * 0xff973b41fa98c081472e6896dfb254c0 */\n      mul\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2120:2171  (ratio * 0xff973b41fa98c081472e6896dfb254c0) >> 128 */\n      swap1\n      shr\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2112:2171  ratio = (ratio * 0xff973b41fa98c081472e6896dfb254c0) >> 128 */\n      swap1\n      pop\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2087:2171  if (absTick & 0x20 != 0) ratio = (ratio * 0xff973b41fa98c081472e6896dfb254c0) >> 128 */\n    tag_84:\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2203:2204  0 */\n      0x00\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2195:2199  0x40 */\n      0x40\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2185:2192  absTick */\n      dup4\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2185:2199  absTick & 0x40 */\n      and\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2185:2204  absTick & 0x40 != 0 */\n      eq\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2181:2265  if (absTick & 0x40 != 0) ratio = (ratio * 0xff2ea16466c96a3843ec78b326b52861) >> 128 */\n      tag_85\n      jumpi\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2262:2265  128 */\n      0x80\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2223:2257  0xff2ea16466c96a3843ec78b326b52861 */\n      0xff2ea16466c96a3843ec78b326b52861\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2215:2220  ratio */\n      dup3\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2215:2257  ratio * 0xff2ea16466c96a3843ec78b326b52861 */\n      mul\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2214:2265  (ratio * 0xff2ea16466c96a3843ec78b326b52861) >> 128 */\n      swap1\n      shr\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2206:2265  ratio = (ratio * 0xff2ea16466c96a3843ec78b326b52861) >> 128 */\n      swap1\n      pop\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2181:2265  if (absTick & 0x40 != 0) ratio = (ratio * 0xff2ea16466c96a3843ec78b326b52861) >> 128 */\n    tag_85:\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2297:2298  0 */\n      0x00\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2289:2293  0x80 */\n      0x80\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2279:2286  absTick */\n      dup4\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2279:2293  absTick & 0x80 */\n      and\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2279:2298  absTick & 0x80 != 0 */\n      eq\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2275:2359  if (absTick & 0x80 != 0) ratio = (ratio * 0xfe5dee046a99a2a811c461f1969c3053) >> 128 */\n      tag_86\n      jumpi\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2356:2359  128 */\n      0x80\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2317:2351  0xfe5dee046a99a2a811c461f1969c3053 */\n      0xfe5dee046a99a2a811c461f1969c3053\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2309:2314  ratio */\n      dup3\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2309:2351  ratio * 0xfe5dee046a99a2a811c461f1969c3053 */\n      mul\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2308:2359  (ratio * 0xfe5dee046a99a2a811c461f1969c3053) >> 128 */\n      swap1\n      shr\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2300:2359  ratio = (ratio * 0xfe5dee046a99a2a811c461f1969c3053) >> 128 */\n      swap1\n      pop\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2275:2359  if (absTick & 0x80 != 0) ratio = (ratio * 0xfe5dee046a99a2a811c461f1969c3053) >> 128 */\n    tag_86:\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2392:2393  0 */\n      0x00\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2383:2388  0x100 */\n      0x0100\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2373:2380  absTick */\n      dup4\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2373:2388  absTick & 0x100 */\n      and\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2373:2393  absTick & 0x100 != 0 */\n      eq\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2369:2454  if (absTick & 0x100 != 0) ratio = (ratio * 0xfcbe86c7900a88aedcffc83b479aa3a4) >> 128 */\n      tag_87\n      jumpi\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2451:2454  128 */\n      0x80\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2412:2446  0xfcbe86c7900a88aedcffc83b479aa3a4 */\n      0xfcbe86c7900a88aedcffc83b479aa3a4\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2404:2409  ratio */\n      dup3\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2404:2446  ratio * 0xfcbe86c7900a88aedcffc83b479aa3a4 */\n      mul\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2403:2454  (ratio * 0xfcbe86c7900a88aedcffc83b479aa3a4) >> 128 */\n      swap1\n      shr\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2395:2454  ratio = (ratio * 0xfcbe86c7900a88aedcffc83b479aa3a4) >> 128 */\n      swap1\n      pop\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2369:2454  if (absTick & 0x100 != 0) ratio = (ratio * 0xfcbe86c7900a88aedcffc83b479aa3a4) >> 128 */\n    tag_87:\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2487:2488  0 */\n      0x00\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2478:2483  0x200 */\n      0x0200\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2468:2475  absTick */\n      dup4\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2468:2483  absTick & 0x200 */\n      and\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2468:2488  absTick & 0x200 != 0 */\n      eq\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2464:2549  if (absTick & 0x200 != 0) ratio = (ratio * 0xf987a7253ac413176f2b074cf7815e54) >> 128 */\n      tag_88\n      jumpi\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2546:2549  128 */\n      0x80\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2507:2541  0xf987a7253ac413176f2b074cf7815e54 */\n      0xf987a7253ac413176f2b074cf7815e54\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2499:2504  ratio */\n      dup3\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2499:2541  ratio * 0xf987a7253ac413176f2b074cf7815e54 */\n      mul\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2498:2549  (ratio * 0xf987a7253ac413176f2b074cf7815e54) >> 128 */\n      swap1\n      shr\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2490:2549  ratio = (ratio * 0xf987a7253ac413176f2b074cf7815e54) >> 128 */\n      swap1\n      pop\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2464:2549  if (absTick & 0x200 != 0) ratio = (ratio * 0xf987a7253ac413176f2b074cf7815e54) >> 128 */\n    tag_88:\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2582:2583  0 */\n      0x00\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2573:2578  0x400 */\n      0x0400\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2563:2570  absTick */\n      dup4\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2563:2578  absTick & 0x400 */\n      and\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2563:2583  absTick & 0x400 != 0 */\n      eq\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2559:2644  if (absTick & 0x400 != 0) ratio = (ratio * 0xf3392b0822b70005940c7a398e4b70f3) >> 128 */\n      tag_89\n      jumpi\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2641:2644  128 */\n      0x80\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2602:2636  0xf3392b0822b70005940c7a398e4b70f3 */\n      0xf3392b0822b70005940c7a398e4b70f3\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2594:2599  ratio */\n      dup3\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2594:2636  ratio * 0xf3392b0822b70005940c7a398e4b70f3 */\n      mul\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2593:2644  (ratio * 0xf3392b0822b70005940c7a398e4b70f3) >> 128 */\n      swap1\n      shr\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2585:2644  ratio = (ratio * 0xf3392b0822b70005940c7a398e4b70f3) >> 128 */\n      swap1\n      pop\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2559:2644  if (absTick & 0x400 != 0) ratio = (ratio * 0xf3392b0822b70005940c7a398e4b70f3) >> 128 */\n    tag_89:\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2677:2678  0 */\n      0x00\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2668:2673  0x800 */\n      0x0800\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2658:2665  absTick */\n      dup4\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2658:2673  absTick & 0x800 */\n      and\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2658:2678  absTick & 0x800 != 0 */\n      eq\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2654:2739  if (absTick & 0x800 != 0) ratio = (ratio * 0xe7159475a2c29b7443b29c7fa6e889d9) >> 128 */\n      tag_90\n      jumpi\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2736:2739  128 */\n      0x80\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2697:2731  0xe7159475a2c29b7443b29c7fa6e889d9 */\n      0xe7159475a2c29b7443b29c7fa6e889d9\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2689:2694  ratio */\n      dup3\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2689:2731  ratio * 0xe7159475a2c29b7443b29c7fa6e889d9 */\n      mul\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2688:2739  (ratio * 0xe7159475a2c29b7443b29c7fa6e889d9) >> 128 */\n      swap1\n      shr\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2680:2739  ratio = (ratio * 0xe7159475a2c29b7443b29c7fa6e889d9) >> 128 */\n      swap1\n      pop\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2654:2739  if (absTick & 0x800 != 0) ratio = (ratio * 0xe7159475a2c29b7443b29c7fa6e889d9) >> 128 */\n    tag_90:\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2773:2774  0 */\n      0x00\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2763:2769  0x1000 */\n      0x1000\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2753:2760  absTick */\n      dup4\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2753:2769  absTick & 0x1000 */\n      and\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2753:2774  absTick & 0x1000 != 0 */\n      eq\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2749:2835  if (absTick & 0x1000 != 0) ratio = (ratio * 0xd097f3bdfd2022b8845ad8f792aa5825) >> 128 */\n      tag_91\n      jumpi\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2832:2835  128 */\n      0x80\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2793:2827  0xd097f3bdfd2022b8845ad8f792aa5825 */\n      0xd097f3bdfd2022b8845ad8f792aa5825\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2785:2790  ratio */\n      dup3\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2785:2827  ratio * 0xd097f3bdfd2022b8845ad8f792aa5825 */\n      mul\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2784:2835  (ratio * 0xd097f3bdfd2022b8845ad8f792aa5825) >> 128 */\n      swap1\n      shr\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2776:2835  ratio = (ratio * 0xd097f3bdfd2022b8845ad8f792aa5825) >> 128 */\n      swap1\n      pop\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2749:2835  if (absTick & 0x1000 != 0) ratio = (ratio * 0xd097f3bdfd2022b8845ad8f792aa5825) >> 128 */\n    tag_91:\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2869:2870  0 */\n      0x00\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2859:2865  0x2000 */\n      0x2000\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2849:2856  absTick */\n      dup4\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2849:2865  absTick & 0x2000 */\n      and\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2849:2870  absTick & 0x2000 != 0 */\n      eq\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2845:2931  if (absTick & 0x2000 != 0) ratio = (ratio * 0xa9f746462d870fdf8a65dc1f90e061e5) >> 128 */\n      tag_92\n      jumpi\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2928:2931  128 */\n      0x80\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2889:2923  0xa9f746462d870fdf8a65dc1f90e061e5 */\n      0xa9f746462d870fdf8a65dc1f90e061e5\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2881:2886  ratio */\n      dup3\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2881:2923  ratio * 0xa9f746462d870fdf8a65dc1f90e061e5 */\n      mul\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2880:2931  (ratio * 0xa9f746462d870fdf8a65dc1f90e061e5) >> 128 */\n      swap1\n      shr\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2872:2931  ratio = (ratio * 0xa9f746462d870fdf8a65dc1f90e061e5) >> 128 */\n      swap1\n      pop\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2845:2931  if (absTick & 0x2000 != 0) ratio = (ratio * 0xa9f746462d870fdf8a65dc1f90e061e5) >> 128 */\n    tag_92:\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2965:2966  0 */\n      0x00\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2955:2961  0x4000 */\n      0x4000\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2945:2952  absTick */\n      dup4\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2945:2961  absTick & 0x4000 */\n      and\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2945:2966  absTick & 0x4000 != 0 */\n      eq\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2941:3027  if (absTick & 0x4000 != 0) ratio = (ratio * 0x70d869a156d2a1b890bb3df62baf32f7) >> 128 */\n      tag_93\n      jumpi\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":3024:3027  128 */\n      0x80\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2985:3019  0x70d869a156d2a1b890bb3df62baf32f7 */\n      0x70d869a156d2a1b890bb3df62baf32f7\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2977:2982  ratio */\n      dup3\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2977:3019  ratio * 0x70d869a156d2a1b890bb3df62baf32f7 */\n      mul\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2976:3027  (ratio * 0x70d869a156d2a1b890bb3df62baf32f7) >> 128 */\n      swap1\n      shr\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2968:3027  ratio = (ratio * 0x70d869a156d2a1b890bb3df62baf32f7) >> 128 */\n      swap1\n      pop\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2941:3027  if (absTick & 0x4000 != 0) ratio = (ratio * 0x70d869a156d2a1b890bb3df62baf32f7) >> 128 */\n    tag_93:\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":3061:3062  0 */\n      0x00\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":3051:3057  0x8000 */\n      0x8000\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":3041:3048  absTick */\n      dup4\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":3041:3057  absTick & 0x8000 */\n      and\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":3041:3062  absTick & 0x8000 != 0 */\n      eq\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":3037:3123  if (absTick & 0x8000 != 0) ratio = (ratio * 0x31be135f97d08fd981231505542fcfa6) >> 128 */\n      tag_94\n      jumpi\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":3120:3123  128 */\n      0x80\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":3081:3115  0x31be135f97d08fd981231505542fcfa6 */\n      0x31be135f97d08fd981231505542fcfa6\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":3073:3078  ratio */\n      dup3\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":3073:3115  ratio * 0x31be135f97d08fd981231505542fcfa6 */\n      mul\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":3072:3123  (ratio * 0x31be135f97d08fd981231505542fcfa6) >> 128 */\n      swap1\n      shr\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":3064:3123  ratio = (ratio * 0x31be135f97d08fd981231505542fcfa6) >> 128 */\n      swap1\n      pop\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":3037:3123  if (absTick & 0x8000 != 0) ratio = (ratio * 0x31be135f97d08fd981231505542fcfa6) >> 128 */\n    tag_94:\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":3158:3159  0 */\n      0x00\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":3147:3154  0x10000 */\n      0x010000\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":3137:3144  absTick */\n      dup4\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":3137:3154  absTick & 0x10000 */\n      and\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":3137:3159  absTick & 0x10000 != 0 */\n      eq\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":3133:3219  if (absTick & 0x10000 != 0) ratio = (ratio * 0x9aa508b5b7a84e1c677de54f3e99bc9) >> 128 */\n      tag_95\n      jumpi\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":3216:3219  128 */\n      0x80\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":3178:3211  0x9aa508b5b7a84e1c677de54f3e99bc9 */\n      0x09aa508b5b7a84e1c677de54f3e99bc9\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":3170:3175  ratio */\n      dup3\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":3170:3211  ratio * 0x9aa508b5b7a84e1c677de54f3e99bc9 */\n      mul\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":3169:3219  (ratio * 0x9aa508b5b7a84e1c677de54f3e99bc9) >> 128 */\n      swap1\n      shr\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":3161:3219  ratio = (ratio * 0x9aa508b5b7a84e1c677de54f3e99bc9) >> 128 */\n      swap1\n      pop\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":3133:3219  if (absTick & 0x10000 != 0) ratio = (ratio * 0x9aa508b5b7a84e1c677de54f3e99bc9) >> 128 */\n    tag_95:\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":3254:3255  0 */\n      0x00\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":3243:3250  0x20000 */\n      0x020000\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":3233:3240  absTick */\n      dup4\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":3233:3250  absTick & 0x20000 */\n      and\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":3233:3255  absTick & 0x20000 != 0 */\n      eq\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":3229:3314  if (absTick & 0x20000 != 0) ratio = (ratio * 0x5d6af8dedb81196699c329225ee604) >> 128 */\n      tag_96\n      jumpi\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":3311:3314  128 */\n      0x80\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":3274:3306  0x5d6af8dedb81196699c329225ee604 */\n      0x5d6af8dedb81196699c329225ee604\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":3266:3271  ratio */\n      dup3\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":3266:3306  ratio * 0x5d6af8dedb81196699c329225ee604 */\n      mul\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":3265:3314  (ratio * 0x5d6af8dedb81196699c329225ee604) >> 128 */\n      swap1\n      shr\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":3257:3314  ratio = (ratio * 0x5d6af8dedb81196699c329225ee604) >> 128 */\n      swap1\n      pop\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":3229:3314  if (absTick & 0x20000 != 0) ratio = (ratio * 0x5d6af8dedb81196699c329225ee604) >> 128 */\n    tag_96:\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":3349:3350  0 */\n      0x00\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":3338:3345  0x40000 */\n      0x040000\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":3328:3335  absTick */\n      dup4\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":3328:3345  absTick & 0x40000 */\n      and\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":3328:3350  absTick & 0x40000 != 0 */\n      eq\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":3324:3407  if (absTick & 0x40000 != 0) ratio = (ratio * 0x2216e584f5fa1ea926041bedfe98) >> 128 */\n      tag_97\n      jumpi\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":3404:3407  128 */\n      0x80\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":3369:3399  0x2216e584f5fa1ea926041bedfe98 */\n      0x2216e584f5fa1ea926041bedfe98\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":3361:3366  ratio */\n      dup3\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":3361:3399  ratio * 0x2216e584f5fa1ea926041bedfe98 */\n      mul\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":3360:3407  (ratio * 0x2216e584f5fa1ea926041bedfe98) >> 128 */\n      swap1\n      shr\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":3352:3407  ratio = (ratio * 0x2216e584f5fa1ea926041bedfe98) >> 128 */\n      swap1\n      pop\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":3324:3407  if (absTick & 0x40000 != 0) ratio = (ratio * 0x2216e584f5fa1ea926041bedfe98) >> 128 */\n    tag_97:\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":3442:3443  0 */\n      0x00\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":3431:3438  0x80000 */\n      0x080000\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":3421:3428  absTick */\n      dup4\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":3421:3438  absTick & 0x80000 */\n      and\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":3421:3443  absTick & 0x80000 != 0 */\n      eq\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":3417:3495  if (absTick & 0x80000 != 0) ratio = (ratio * 0x48a170391f7dc42444e8fa2) >> 128 */\n      tag_98\n      jumpi\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":3492:3495  128 */\n      0x80\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":3462:3487  0x48a170391f7dc42444e8fa2 */\n      0x048a170391f7dc42444e8fa2\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":3454:3459  ratio */\n      dup3\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":3454:3487  ratio * 0x48a170391f7dc42444e8fa2 */\n      mul\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":3453:3495  (ratio * 0x48a170391f7dc42444e8fa2) >> 128 */\n      swap1\n      shr\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":3445:3495  ratio = (ratio * 0x48a170391f7dc42444e8fa2) >> 128 */\n      swap1\n      pop\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":3417:3495  if (absTick & 0x80000 != 0) ratio = (ratio * 0x48a170391f7dc42444e8fa2) >> 128 */\n    tag_98:\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":3517:3518  0 */\n      0x00\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":3510:3514  tick */\n      dup5\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":3510:3518  tick > 0 */\n      0x02\n      signextend\n      sgt\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":3506:3553  if (tick > 0) ratio = type(uint256).max / ratio */\n      iszero\n      tag_99\n      jumpi\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":3548:3553  ratio */\n      dup1\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":3528:3545  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":3528:3553  type(uint256).max / ratio */\n      dup2\n      tag_100\n      jumpi\n      invalid\n    tag_100:\n      div\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":3520:3553  ratio = type(uint256).max / ratio */\n      swap1\n      pop\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":3506:3553  if (tick > 0) ratio = type(uint256).max / ratio */\n    tag_99:\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":3924:3925  0 */\n      0x00\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":3912:3919  1 << 32 */\n      0x0100000000\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":3903:3908  ratio */\n      dup3\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":3903:3920  ratio % (1 << 32) */\n      dup2\n      tag_101\n      jumpi\n      invalid\n    tag_101:\n      mod\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":3903:3925  ratio % (1 << 32) == 0 */\n      eq\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":3903:3933  ratio % (1 << 32) == 0 ? 0 : 1 */\n      tag_102\n      jumpi\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":3932:3933  1 */\n      0x01\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":3903:3933  ratio % (1 << 32) == 0 ? 0 : 1 */\n      jump(tag_103)\n    tag_102:\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":3928:3929  0 */\n      0x00\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":3903:3933  ratio % (1 << 32) == 0 ? 0 : 1 */\n    tag_103:\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":3886:3934  (ratio >> 32) + (ratio % (1 << 32) == 0 ? 0 : 1) */\n      0xff\n      and\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":3896:3898  32 */\n      0x20\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":3887:3892  ratio */\n      dup3\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":3887:3898  ratio >> 32 */\n      swap1\n      shr\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":3886:3934  (ratio >> 32) + (ratio % (1 << 32) == 0 ? 0 : 1) */\n      add\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":3863:3935  sqrtPriceX96 = uint160((ratio >> 32) + (ratio % (1 << 32) == 0 ? 0 : 1)) */\n      swap3\n      pop\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":1362:3942  function getSqrtRatioAtTick(int24 tick) internal pure returns (uint160 sqrtPriceX96) {... */\n      pop\n      pop\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":749:4525  function mulDiv(... */\n    tag_65:\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":861:875  uint256 result */\n      0x00\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":1190:1203  uint256 prod0 */\n      dup1\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":1258:1271  uint256 prod1 */\n      0x00\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":1375:1376  0 */\n      dup1\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":1371:1377  not(0) */\n      not\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":1368:1369  b */\n      dup6\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":1365:1366  a */\n      dup8\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":1358:1378  mulmod(a, b, not(0)) */\n      mulmod\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":1407:1408  b */\n      dup6\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":1404:1405  a */\n      dup8\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":1400:1409  mul(a, b) */\n      mul\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":1391:1409  prod0 := mul(a, b) */\n      swap3\n      pop\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":1458:1463  prod0 */\n      dup3\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":1454:1456  mm */\n      dup2\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":1451:1464  lt(mm, prod0) */\n      lt\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":1443:1448  prod0 */\n      dup4\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":1439:1441  mm */\n      dup3\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":1435:1449  sub(mm, prod0) */\n      sub\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":1431:1465  sub(sub(mm, prod0), lt(mm, prod0)) */\n      sub\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":1422:1465  prod1 := sub(sub(mm, prod0), lt(mm, prod0)) */\n      swap2\n      pop\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":1334:1475  {... */\n      pop\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":1556:1557  0 */\n      0x00\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":1547:1552  prod1 */\n      dup2\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":1547:1557  prod1 == 0 */\n      eq\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":1543:1722  if (prod1 == 0) {... */\n      iszero\n      tag_105\n      jumpi\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":1595:1596  0 */\n      0x00\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":1581:1592  denominator */\n      dup5\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":1581:1596  denominator > 0 */\n      gt\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":1573:1597  require(denominator > 0) */\n      tag_106\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_106:\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":1659:1670  denominator */\n      dup4\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":1652:1657  prod0 */\n      dup3\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":1648:1671  div(prod0, denominator) */\n      div\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":1638:1671  result := div(prod0, denominator) */\n      swap3\n      pop\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":1698:1711  return result */\n      pop\n      pop\n      jump(tag_104)\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":1543:1722  if (prod1 == 0) {... */\n    tag_105:\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":1849:1854  prod1 */\n      dup1\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":1835:1846  denominator */\n      dup5\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":1835:1854  denominator > prod1 */\n      gt\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":1827:1855  require(denominator > prod1) */\n      tag_107\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_107:\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":2132:2149  uint256 remainder */\n      0x00\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":2208:2219  denominator */\n      dup5\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":2205:2206  b */\n      dup7\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":2202:2203  a */\n      dup9\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":2195:2220  mulmod(a, b, denominator) */\n      mulmod\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":2182:2220  remainder := mulmod(a, b, denominator) */\n      swap1\n      pop\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":2351:2356  prod0 */\n      dup3\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":2340:2349  remainder */\n      dup2\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":2337:2357  gt(remainder, prod0) */\n      gt\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":2330:2335  prod1 */\n      dup3\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":2326:2358  sub(prod1, gt(remainder, prod0)) */\n      sub\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":2317:2358  prod1 := sub(prod1, gt(remainder, prod0)) */\n      swap2\n      pop\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":2391:2400  remainder */\n      dup1\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":2384:2389  prod0 */\n      dup4\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":2380:2401  sub(prod0, remainder) */\n      sub\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":2371:2401  prod0 := sub(prod0, remainder) */\n      swap3\n      pop\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":2560:2572  uint256 twos */\n      0x00\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":2590:2601  denominator */\n      dup6\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":2576:2587  denominator */\n      dup7\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":2575:2587  -denominator */\n      0x00\n      sub\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":2575:2601  -denominator & denominator */\n      and\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":2560:2601  uint256 twos = -denominator & denominator */\n      swap1\n      pop\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":2712:2716  twos */\n      dup1\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":2699:2710  denominator */\n      dup7\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":2695:2717  div(denominator, twos) */\n      div\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":2680:2717  denominator := div(denominator, twos) */\n      swap6\n      pop\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":2834:2838  twos */\n      dup1\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":2827:2832  prod0 */\n      dup5\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":2823:2839  div(prod0, twos) */\n      div\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":2814:2839  prod0 := div(prod0, twos) */\n      swap4\n      pop\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":3088:3089  1 */\n      0x01\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":3081:3085  twos */\n      dup2\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":3074:3078  twos */\n      dup3\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":3071:3072  0 */\n      0x00\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":3067:3079  sub(0, twos) */\n      sub\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":3063:3086  div(sub(0, twos), twos) */\n      div\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":3059:3090  add(div(sub(0, twos), twos), 1) */\n      add\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":3051:3090  twos := add(div(sub(0, twos), twos), 1) */\n      swap1\n      pop\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":3126:3130  twos */\n      dup1\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":3118:3123  prod1 */\n      dup4\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":3118:3130  prod1 * twos */\n      mul\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":3109:3130  prod0 |= prod1 * twos */\n      dup5\n      or\n      swap4\n      pop\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":3464:3475  uint256 inv */\n      0x00\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":3498:3499  2 */\n      0x02\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":3483:3494  denominator */\n      dup8\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":3479:3480  3 */\n      0x03\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":3479:3494  3 * denominator */\n      mul\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":3478:3499  (3 * denominator) ^ 2 */\n      xor\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":3464:3499  uint256 inv = (3 * denominator) ^ 2 */\n      swap1\n      pop\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":3739:3742  inv */\n      dup1\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":3725:3736  denominator */\n      dup8\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":3725:3742  denominator * inv */\n      mul\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":3721:3722  2 */\n      0x02\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":3721:3742  2 - denominator * inv */\n      sub\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":3714:3742  inv *= 2 - denominator * inv */\n      dup2\n      mul\n      swap1\n      pop\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":3797:3800  inv */\n      dup1\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":3783:3794  denominator */\n      dup8\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":3783:3800  denominator * inv */\n      mul\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":3779:3780  2 */\n      0x02\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":3779:3800  2 - denominator * inv */\n      sub\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":3772:3800  inv *= 2 - denominator * inv */\n      dup2\n      mul\n      swap1\n      pop\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":3856:3859  inv */\n      dup1\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":3842:3853  denominator */\n      dup8\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":3842:3859  denominator * inv */\n      mul\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":3838:3839  2 */\n      0x02\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":3838:3859  2 - denominator * inv */\n      sub\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":3831:3859  inv *= 2 - denominator * inv */\n      dup2\n      mul\n      swap1\n      pop\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":3915:3918  inv */\n      dup1\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":3901:3912  denominator */\n      dup8\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":3901:3918  denominator * inv */\n      mul\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":3897:3898  2 */\n      0x02\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":3897:3918  2 - denominator * inv */\n      sub\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":3890:3918  inv *= 2 - denominator * inv */\n      dup2\n      mul\n      swap1\n      pop\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":3974:3977  inv */\n      dup1\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":3960:3971  denominator */\n      dup8\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":3960:3977  denominator * inv */\n      mul\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":3956:3957  2 */\n      0x02\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":3956:3977  2 - denominator * inv */\n      sub\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":3949:3977  inv *= 2 - denominator * inv */\n      dup2\n      mul\n      swap1\n      pop\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":4034:4037  inv */\n      dup1\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":4020:4031  denominator */\n      dup8\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":4020:4037  denominator * inv */\n      mul\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":4016:4017  2 */\n      0x02\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":4016:4037  2 - denominator * inv */\n      sub\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":4009:4037  inv *= 2 - denominator * inv */\n      dup2\n      mul\n      swap1\n      pop\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":4492:4495  inv */\n      dup1\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":4484:4489  prod0 */\n      dup6\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":4484:4495  prod0 * inv */\n      mul\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":4475:4495  result = prod0 * inv */\n      swap6\n      pop\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":4505:4518  return result */\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":749:4525  function mulDiv(... */\n    tag_104:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220d6f8f6ad2d8e2a7afe17267ac3bfc0fd1489cc7423b3311401ed810028be296664736f6c63430007060033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "610e3c610026600b82828239805160001a60731461001957fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100355760003560e01c8063c361e0b11461003a575b600080fd5b6100bc6004803603606081101561005057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506100de565b604051808381526020018262ffffff1681526020019250505060405180910390f35b60008060006040518060800160405280606461ffff1681526020016101f461ffff168152602001610bb861ffff16815260200161271061ffff16815250905060005b60048160ff1610156103455760008773ffffffffffffffffffffffffffffffffffffffff16631698ee828888868660ff166004811061015b57fe5b60200201516040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1681526020018261ffff168152602001935050505060206040518083038186803b1580156101d257600080fd5b505afa1580156101e6573d6000803e3d6000fd5b505050506040513d60208110156101fc57600080fd5b81019080805190602001909291905050509050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561024a5750610338565b600061025782600561034f565b905060006102ed828a73ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b1580156102a557600080fd5b505afa1580156102b9573d6000803e3d6000fd5b505050506040513d60208110156102cf57600080fd5b810190808051906020019092919050505060ff16600a0a8b8b6106ee565b905060008460ff1614156102ff578096505b60008460ff1611801561031157508681105b1561033457809650848460ff166004811061032857fe5b602002015161ffff1695505b5050505b8080600101915050610120565b5050935093915050565b6000808263ffffffff1614156103cd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260028152602001807f425000000000000000000000000000000000000000000000000000000000000081525060200191505060405180910390fd5b6000600267ffffffffffffffff811180156103e757600080fd5b506040519080825280602002602001820160405280156104165781602001602082028036833780820191505090505b509050828160008151811061042757fe5b602002602001019063ffffffff16908163ffffffff168152505060008160018151811061045057fe5b602002602001019063ffffffff16908163ffffffff168152505060008473ffffffffffffffffffffffffffffffffffffffff1663883bdbfd836040518263ffffffff1660e01b81526004018080602001828103825283818151815260200191508051906020019060200280838360005b838110156104db5780820151818401526020810190506104c0565b505050509050019250505060006040518083038186803b1580156104fe57600080fd5b505afa158015610512573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250604081101561053c57600080fd5b810190808051604051939291908464010000000082111561055c57600080fd5b8382019150602082018581111561057257600080fd5b825186602082028301116401000000008211171561058f57600080fd5b8083526020830192505050908051906020019060200280838360005b838110156105c65780820151818401526020810190506105ab565b50505050905001604052602001805160405193929190846401000000008211156105ef57600080fd5b8382019150602082018581111561060557600080fd5b825186602082028301116401000000008211171561062257600080fd5b8083526020830192505050908051906020019060200280838360005b8381101561065957808201518184015260208101905061063e565b5050505090500160405250505050905060008160008151811061067857fe5b60200260200101518260018151811061068d57fe5b60200260200101510390508463ffffffff168160060b816106aa57fe5b05935060008160060b1280156106d6575060008563ffffffff168260060b816106cf57fe5b0760060b14155b156106e5578380600190039450505b50505092915050565b6000806106fa866108f1565b90506fffffffffffffffffffffffffffffffff80168173ffffffffffffffffffffffffffffffffffffffff161161080b5760008173ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160290508373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16106107cc576107c77801000000000000000000000000000000000000000000000000876fffffffffffffffffffffffffffffffff1683610d2c565b610803565b61080281876fffffffffffffffffffffffffffffffff167801000000000000000000000000000000000000000000000000610d2c565b5b9250506108e8565b600061084d8273ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1668010000000000000000610d2c565b90508373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16106108b5576108b0700100000000000000000000000000000000876fffffffffffffffffffffffffffffffff1683610d2c565b6108e4565b6108e381876fffffffffffffffffffffffffffffffff16700100000000000000000000000000000000610d2c565b5b9250505b50949350505050565b60008060008360020b12610908578260020b610910565b8260020b6000035b90507ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff2761860000360020b8111156109ae576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260018152602001807f540000000000000000000000000000000000000000000000000000000000000081525060200191505060405180910390fd5b6000806001831614156109d2577001000000000000000000000000000000006109e4565b6ffffcb933bd6fad37aa2d162d1a5940015b70ffffffffffffffffffffffffffffffffff16905060006002831614610a1e5760806ffff97272373d413259a46990580e213a8202901c90505b60006004831614610a435760806ffff2e50f5f656932ef12357cf3c7fdcc8202901c90505b60006008831614610a685760806fffe5caca7e10e4e61c3624eaa0941cd08202901c90505b60006010831614610a8d5760806fffcb9843d60f6159c9db58835c9266448202901c90505b60006020831614610ab25760806fff973b41fa98c081472e6896dfb254c08202901c90505b60006040831614610ad75760806fff2ea16466c96a3843ec78b326b528618202901c90505b60006080831614610afc5760806ffe5dee046a99a2a811c461f1969c30538202901c90505b6000610100831614610b225760806ffcbe86c7900a88aedcffc83b479aa3a48202901c90505b6000610200831614610b485760806ff987a7253ac413176f2b074cf7815e548202901c90505b6000610400831614610b6e5760806ff3392b0822b70005940c7a398e4b70f38202901c90505b6000610800831614610b945760806fe7159475a2c29b7443b29c7fa6e889d98202901c90505b6000611000831614610bba5760806fd097f3bdfd2022b8845ad8f792aa58258202901c90505b6000612000831614610be05760806fa9f746462d870fdf8a65dc1f90e061e58202901c90505b6000614000831614610c065760806f70d869a156d2a1b890bb3df62baf32f78202901c90505b6000618000831614610c2c5760806f31be135f97d08fd981231505542fcfa68202901c90505b600062010000831614610c535760806f09aa508b5b7a84e1c677de54f3e99bc98202901c90505b600062020000831614610c795760806e5d6af8dedb81196699c329225ee6048202901c90505b600062040000831614610c9e5760806d2216e584f5fa1ea926041bedfe988202901c90505b600062080000831614610cc15760806b048a170391f7dc42444e8fa28202901c90505b60008460020b1315610cfa57807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81610cf657fe5b0490505b60006401000000008281610d0a57fe5b0614610d17576001610d1a565b60005b60ff16602082901c0192505050919050565b600080600080198587098587029250828110838203039150506000811415610d675760008411610d5b57600080fd5b83820492505050610dff565b808411610d7357600080fd5b600084868809905082811182039150808303925060008586600003169050808604955080840493506001818260000304019050808302841793506000600287600302189050808702600203810290508087026002038102905080870260020381029050808702600203810290508087026002038102905080870260020381029050808502955050505050505b939250505056fea2646970667358221220d6f8f6ad2d8e2a7afe17267ac3bfc0fd1489cc7423b3311401ed810028be296664736f6c63430007060033",
							"opcodes": "PUSH2 0xE3C PUSH2 0x26 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH2 0x19 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x35 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xC361E0B1 EQ PUSH2 0x3A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xBC PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x50 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xDE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH3 0xFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x64 PUSH2 0xFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1F4 PUSH2 0xFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBB8 PUSH2 0xFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2710 PUSH2 0xFFFF AND DUP2 MSTORE POP SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x4 DUP2 PUSH1 0xFF AND LT ISZERO PUSH2 0x345 JUMPI PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x1698EE82 DUP9 DUP9 DUP7 DUP7 PUSH1 0xFF AND PUSH1 0x4 DUP2 LT PUSH2 0x15B JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH2 0xFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1E6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x24A JUMPI POP PUSH2 0x338 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x257 DUP3 PUSH1 0x5 PUSH2 0x34F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2ED DUP3 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2B9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH1 0xFF AND PUSH1 0xA EXP DUP12 DUP12 PUSH2 0x6EE JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP5 PUSH1 0xFF AND EQ ISZERO PUSH2 0x2FF JUMPI DUP1 SWAP7 POP JUMPDEST PUSH1 0x0 DUP5 PUSH1 0xFF AND GT DUP1 ISZERO PUSH2 0x311 JUMPI POP DUP7 DUP2 LT JUMPDEST ISZERO PUSH2 0x334 JUMPI DUP1 SWAP7 POP DUP5 DUP5 PUSH1 0xFF AND PUSH1 0x4 DUP2 LT PUSH2 0x328 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH2 0xFFFF AND SWAP6 POP JUMPDEST POP POP POP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x120 JUMP JUMPDEST POP POP SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH4 0xFFFFFFFF AND EQ ISZERO PUSH2 0x3CD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4250000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0x3E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x416 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP DUP3 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x427 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH4 0xFFFFFFFF AND SWAP1 DUP2 PUSH4 0xFFFFFFFF AND DUP2 MSTORE POP POP PUSH1 0x0 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x450 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH4 0xFFFFFFFF AND SWAP1 DUP2 PUSH4 0xFFFFFFFF AND DUP2 MSTORE POP POP PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x883BDBFD DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x4DB JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x4C0 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP3 POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x4FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x512 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x53C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH5 0x100000000 DUP3 GT ISZERO PUSH2 0x55C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH2 0x572 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD DUP7 PUSH1 0x20 DUP3 MUL DUP4 ADD GT PUSH5 0x100000000 DUP3 GT OR ISZERO PUSH2 0x58F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP3 POP POP POP SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x5C6 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x5AB JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD PUSH1 0x40 MSTORE PUSH1 0x20 ADD DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH5 0x100000000 DUP3 GT ISZERO PUSH2 0x5EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH2 0x605 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD DUP7 PUSH1 0x20 DUP3 MUL DUP4 ADD GT PUSH5 0x100000000 DUP3 GT OR ISZERO PUSH2 0x622 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP3 POP POP POP SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x659 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x63E JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD PUSH1 0x40 MSTORE POP POP POP POP SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x678 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP3 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x68D JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SUB SWAP1 POP DUP5 PUSH4 0xFFFFFFFF AND DUP2 PUSH1 0x6 SIGNEXTEND DUP2 PUSH2 0x6AA JUMPI INVALID JUMPDEST SDIV SWAP4 POP PUSH1 0x0 DUP2 PUSH1 0x6 SIGNEXTEND SLT DUP1 ISZERO PUSH2 0x6D6 JUMPI POP PUSH1 0x0 DUP6 PUSH4 0xFFFFFFFF AND DUP3 PUSH1 0x6 SIGNEXTEND DUP2 PUSH2 0x6CF JUMPI INVALID JUMPDEST SMOD PUSH1 0x6 SIGNEXTEND EQ ISZERO JUMPDEST ISZERO PUSH2 0x6E5 JUMPI DUP4 DUP1 PUSH1 0x1 SWAP1 SUB SWAP5 POP POP JUMPDEST POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x6FA DUP7 PUSH2 0x8F1 JUMP JUMPDEST SWAP1 POP PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND GT PUSH2 0x80B JUMPI PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL SWAP1 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND LT PUSH2 0x7CC JUMPI PUSH2 0x7C7 PUSH25 0x1000000000000000000000000000000000000000000000000 DUP8 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH2 0xD2C JUMP JUMPDEST PUSH2 0x803 JUMP JUMPDEST PUSH2 0x802 DUP2 DUP8 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH25 0x1000000000000000000000000000000000000000000000000 PUSH2 0xD2C JUMP JUMPDEST JUMPDEST SWAP3 POP POP PUSH2 0x8E8 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x84D DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH9 0x10000000000000000 PUSH2 0xD2C JUMP JUMPDEST SWAP1 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND LT PUSH2 0x8B5 JUMPI PUSH2 0x8B0 PUSH17 0x100000000000000000000000000000000 DUP8 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH2 0xD2C JUMP JUMPDEST PUSH2 0x8E4 JUMP JUMPDEST PUSH2 0x8E3 DUP2 DUP8 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH17 0x100000000000000000000000000000000 PUSH2 0xD2C JUMP JUMPDEST JUMPDEST SWAP3 POP POP JUMPDEST POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH1 0x2 SIGNEXTEND SLT PUSH2 0x908 JUMPI DUP3 PUSH1 0x2 SIGNEXTEND PUSH2 0x910 JUMP JUMPDEST DUP3 PUSH1 0x2 SIGNEXTEND PUSH1 0x0 SUB JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF27618 PUSH1 0x0 SUB PUSH1 0x2 SIGNEXTEND DUP2 GT ISZERO PUSH2 0x9AE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x5400000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 DUP4 AND EQ ISZERO PUSH2 0x9D2 JUMPI PUSH17 0x100000000000000000000000000000000 PUSH2 0x9E4 JUMP JUMPDEST PUSH16 0xFFFCB933BD6FAD37AA2D162D1A594001 JUMPDEST PUSH17 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH1 0x2 DUP4 AND EQ PUSH2 0xA1E JUMPI PUSH1 0x80 PUSH16 0xFFF97272373D413259A46990580E213A DUP3 MUL SWAP1 SHR SWAP1 POP JUMPDEST PUSH1 0x0 PUSH1 0x4 DUP4 AND EQ PUSH2 0xA43 JUMPI PUSH1 0x80 PUSH16 0xFFF2E50F5F656932EF12357CF3C7FDCC DUP3 MUL SWAP1 SHR SWAP1 POP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 AND EQ PUSH2 0xA68 JUMPI PUSH1 0x80 PUSH16 0xFFE5CACA7E10E4E61C3624EAA0941CD0 DUP3 MUL SWAP1 SHR SWAP1 POP JUMPDEST PUSH1 0x0 PUSH1 0x10 DUP4 AND EQ PUSH2 0xA8D JUMPI PUSH1 0x80 PUSH16 0xFFCB9843D60F6159C9DB58835C926644 DUP3 MUL SWAP1 SHR SWAP1 POP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP4 AND EQ PUSH2 0xAB2 JUMPI PUSH1 0x80 PUSH16 0xFF973B41FA98C081472E6896DFB254C0 DUP3 MUL SWAP1 SHR SWAP1 POP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP4 AND EQ PUSH2 0xAD7 JUMPI PUSH1 0x80 PUSH16 0xFF2EA16466C96A3843EC78B326B52861 DUP3 MUL SWAP1 SHR SWAP1 POP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP4 AND EQ PUSH2 0xAFC JUMPI PUSH1 0x80 PUSH16 0xFE5DEE046A99A2A811C461F1969C3053 DUP3 MUL SWAP1 SHR SWAP1 POP JUMPDEST PUSH1 0x0 PUSH2 0x100 DUP4 AND EQ PUSH2 0xB22 JUMPI PUSH1 0x80 PUSH16 0xFCBE86C7900A88AEDCFFC83B479AA3A4 DUP3 MUL SWAP1 SHR SWAP1 POP JUMPDEST PUSH1 0x0 PUSH2 0x200 DUP4 AND EQ PUSH2 0xB48 JUMPI PUSH1 0x80 PUSH16 0xF987A7253AC413176F2B074CF7815E54 DUP3 MUL SWAP1 SHR SWAP1 POP JUMPDEST PUSH1 0x0 PUSH2 0x400 DUP4 AND EQ PUSH2 0xB6E JUMPI PUSH1 0x80 PUSH16 0xF3392B0822B70005940C7A398E4B70F3 DUP3 MUL SWAP1 SHR SWAP1 POP JUMPDEST PUSH1 0x0 PUSH2 0x800 DUP4 AND EQ PUSH2 0xB94 JUMPI PUSH1 0x80 PUSH16 0xE7159475A2C29B7443B29C7FA6E889D9 DUP3 MUL SWAP1 SHR SWAP1 POP JUMPDEST PUSH1 0x0 PUSH2 0x1000 DUP4 AND EQ PUSH2 0xBBA JUMPI PUSH1 0x80 PUSH16 0xD097F3BDFD2022B8845AD8F792AA5825 DUP3 MUL SWAP1 SHR SWAP1 POP JUMPDEST PUSH1 0x0 PUSH2 0x2000 DUP4 AND EQ PUSH2 0xBE0 JUMPI PUSH1 0x80 PUSH16 0xA9F746462D870FDF8A65DC1F90E061E5 DUP3 MUL SWAP1 SHR SWAP1 POP JUMPDEST PUSH1 0x0 PUSH2 0x4000 DUP4 AND EQ PUSH2 0xC06 JUMPI PUSH1 0x80 PUSH16 0x70D869A156D2A1B890BB3DF62BAF32F7 DUP3 MUL SWAP1 SHR SWAP1 POP JUMPDEST PUSH1 0x0 PUSH2 0x8000 DUP4 AND EQ PUSH2 0xC2C JUMPI PUSH1 0x80 PUSH16 0x31BE135F97D08FD981231505542FCFA6 DUP3 MUL SWAP1 SHR SWAP1 POP JUMPDEST PUSH1 0x0 PUSH3 0x10000 DUP4 AND EQ PUSH2 0xC53 JUMPI PUSH1 0x80 PUSH16 0x9AA508B5B7A84E1C677DE54F3E99BC9 DUP3 MUL SWAP1 SHR SWAP1 POP JUMPDEST PUSH1 0x0 PUSH3 0x20000 DUP4 AND EQ PUSH2 0xC79 JUMPI PUSH1 0x80 PUSH15 0x5D6AF8DEDB81196699C329225EE604 DUP3 MUL SWAP1 SHR SWAP1 POP JUMPDEST PUSH1 0x0 PUSH3 0x40000 DUP4 AND EQ PUSH2 0xC9E JUMPI PUSH1 0x80 PUSH14 0x2216E584F5FA1EA926041BEDFE98 DUP3 MUL SWAP1 SHR SWAP1 POP JUMPDEST PUSH1 0x0 PUSH3 0x80000 DUP4 AND EQ PUSH2 0xCC1 JUMPI PUSH1 0x80 PUSH12 0x48A170391F7DC42444E8FA2 DUP3 MUL SWAP1 SHR SWAP1 POP JUMPDEST PUSH1 0x0 DUP5 PUSH1 0x2 SIGNEXTEND SGT ISZERO PUSH2 0xCFA JUMPI DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 PUSH2 0xCF6 JUMPI INVALID JUMPDEST DIV SWAP1 POP JUMPDEST PUSH1 0x0 PUSH5 0x100000000 DUP3 DUP2 PUSH2 0xD0A JUMPI INVALID JUMPDEST MOD EQ PUSH2 0xD17 JUMPI PUSH1 0x1 PUSH2 0xD1A JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0xFF AND PUSH1 0x20 DUP3 SWAP1 SHR ADD SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 NOT DUP6 DUP8 MULMOD DUP6 DUP8 MUL SWAP3 POP DUP3 DUP2 LT DUP4 DUP3 SUB SUB SWAP2 POP POP PUSH1 0x0 DUP2 EQ ISZERO PUSH2 0xD67 JUMPI PUSH1 0x0 DUP5 GT PUSH2 0xD5B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP3 DIV SWAP3 POP POP POP PUSH2 0xDFF JUMP JUMPDEST DUP1 DUP5 GT PUSH2 0xD73 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP5 DUP7 DUP9 MULMOD SWAP1 POP DUP3 DUP2 GT DUP3 SUB SWAP2 POP DUP1 DUP4 SUB SWAP3 POP PUSH1 0x0 DUP6 DUP7 PUSH1 0x0 SUB AND SWAP1 POP DUP1 DUP7 DIV SWAP6 POP DUP1 DUP5 DIV SWAP4 POP PUSH1 0x1 DUP2 DUP3 PUSH1 0x0 SUB DIV ADD SWAP1 POP DUP1 DUP4 MUL DUP5 OR SWAP4 POP PUSH1 0x0 PUSH1 0x2 DUP8 PUSH1 0x3 MUL XOR SWAP1 POP DUP1 DUP8 MUL PUSH1 0x2 SUB DUP2 MUL SWAP1 POP DUP1 DUP8 MUL PUSH1 0x2 SUB DUP2 MUL SWAP1 POP DUP1 DUP8 MUL PUSH1 0x2 SUB DUP2 MUL SWAP1 POP DUP1 DUP8 MUL PUSH1 0x2 SUB DUP2 MUL SWAP1 POP DUP1 DUP8 MUL PUSH1 0x2 SUB DUP2 MUL SWAP1 POP DUP1 DUP8 MUL PUSH1 0x2 SUB DUP2 MUL SWAP1 POP DUP1 DUP6 MUL SWAP6 POP POP POP POP POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD6 0xF8 0xF6 0xAD 0x2D DUP15 0x2A PUSH27 0xFE17267AC3BFC0FD1489CC7423B3311401ED810028BE296664736F PUSH13 0x63430007060033000000000000 ",
							"sourceMap": "260:699:16:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600436106100355760003560e01c8063c361e0b11461003a575b600080fd5b6100bc6004803603606081101561005057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506100de565b604051808381526020018262ffffff1681526020019250505060405180910390f35b60008060006040518060800160405280606461ffff1681526020016101f461ffff168152602001610bb861ffff16815260200161271061ffff16815250905060005b60048160ff1610156103455760008773ffffffffffffffffffffffffffffffffffffffff16631698ee828888868660ff166004811061015b57fe5b60200201516040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1681526020018261ffff168152602001935050505060206040518083038186803b1580156101d257600080fd5b505afa1580156101e6573d6000803e3d6000fd5b505050506040513d60208110156101fc57600080fd5b81019080805190602001909291905050509050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561024a5750610338565b600061025782600561034f565b905060006102ed828a73ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b1580156102a557600080fd5b505afa1580156102b9573d6000803e3d6000fd5b505050506040513d60208110156102cf57600080fd5b810190808051906020019092919050505060ff16600a0a8b8b6106ee565b905060008460ff1614156102ff578096505b60008460ff1611801561031157508681105b1561033457809650848460ff166004811061032857fe5b602002015161ffff1695505b5050505b8080600101915050610120565b5050935093915050565b6000808263ffffffff1614156103cd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260028152602001807f425000000000000000000000000000000000000000000000000000000000000081525060200191505060405180910390fd5b6000600267ffffffffffffffff811180156103e757600080fd5b506040519080825280602002602001820160405280156104165781602001602082028036833780820191505090505b509050828160008151811061042757fe5b602002602001019063ffffffff16908163ffffffff168152505060008160018151811061045057fe5b602002602001019063ffffffff16908163ffffffff168152505060008473ffffffffffffffffffffffffffffffffffffffff1663883bdbfd836040518263ffffffff1660e01b81526004018080602001828103825283818151815260200191508051906020019060200280838360005b838110156104db5780820151818401526020810190506104c0565b505050509050019250505060006040518083038186803b1580156104fe57600080fd5b505afa158015610512573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250604081101561053c57600080fd5b810190808051604051939291908464010000000082111561055c57600080fd5b8382019150602082018581111561057257600080fd5b825186602082028301116401000000008211171561058f57600080fd5b8083526020830192505050908051906020019060200280838360005b838110156105c65780820151818401526020810190506105ab565b50505050905001604052602001805160405193929190846401000000008211156105ef57600080fd5b8382019150602082018581111561060557600080fd5b825186602082028301116401000000008211171561062257600080fd5b8083526020830192505050908051906020019060200280838360005b8381101561065957808201518184015260208101905061063e565b5050505090500160405250505050905060008160008151811061067857fe5b60200260200101518260018151811061068d57fe5b60200260200101510390508463ffffffff168160060b816106aa57fe5b05935060008160060b1280156106d6575060008563ffffffff168260060b816106cf57fe5b0760060b14155b156106e5578380600190039450505b50505092915050565b6000806106fa866108f1565b90506fffffffffffffffffffffffffffffffff80168173ffffffffffffffffffffffffffffffffffffffff161161080b5760008173ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160290508373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16106107cc576107c77801000000000000000000000000000000000000000000000000876fffffffffffffffffffffffffffffffff1683610d2c565b610803565b61080281876fffffffffffffffffffffffffffffffff167801000000000000000000000000000000000000000000000000610d2c565b5b9250506108e8565b600061084d8273ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1668010000000000000000610d2c565b90508373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16106108b5576108b0700100000000000000000000000000000000876fffffffffffffffffffffffffffffffff1683610d2c565b6108e4565b6108e381876fffffffffffffffffffffffffffffffff16700100000000000000000000000000000000610d2c565b5b9250505b50949350505050565b60008060008360020b12610908578260020b610910565b8260020b6000035b90507ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff2761860000360020b8111156109ae576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260018152602001807f540000000000000000000000000000000000000000000000000000000000000081525060200191505060405180910390fd5b6000806001831614156109d2577001000000000000000000000000000000006109e4565b6ffffcb933bd6fad37aa2d162d1a5940015b70ffffffffffffffffffffffffffffffffff16905060006002831614610a1e5760806ffff97272373d413259a46990580e213a8202901c90505b60006004831614610a435760806ffff2e50f5f656932ef12357cf3c7fdcc8202901c90505b60006008831614610a685760806fffe5caca7e10e4e61c3624eaa0941cd08202901c90505b60006010831614610a8d5760806fffcb9843d60f6159c9db58835c9266448202901c90505b60006020831614610ab25760806fff973b41fa98c081472e6896dfb254c08202901c90505b60006040831614610ad75760806fff2ea16466c96a3843ec78b326b528618202901c90505b60006080831614610afc5760806ffe5dee046a99a2a811c461f1969c30538202901c90505b6000610100831614610b225760806ffcbe86c7900a88aedcffc83b479aa3a48202901c90505b6000610200831614610b485760806ff987a7253ac413176f2b074cf7815e548202901c90505b6000610400831614610b6e5760806ff3392b0822b70005940c7a398e4b70f38202901c90505b6000610800831614610b945760806fe7159475a2c29b7443b29c7fa6e889d98202901c90505b6000611000831614610bba5760806fd097f3bdfd2022b8845ad8f792aa58258202901c90505b6000612000831614610be05760806fa9f746462d870fdf8a65dc1f90e061e58202901c90505b6000614000831614610c065760806f70d869a156d2a1b890bb3df62baf32f78202901c90505b6000618000831614610c2c5760806f31be135f97d08fd981231505542fcfa68202901c90505b600062010000831614610c535760806f09aa508b5b7a84e1c677de54f3e99bc98202901c90505b600062020000831614610c795760806e5d6af8dedb81196699c329225ee6048202901c90505b600062040000831614610c9e5760806d2216e584f5fa1ea926041bedfe988202901c90505b600062080000831614610cc15760806b048a170391f7dc42444e8fa28202901c90505b60008460020b1315610cfa57807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81610cf657fe5b0490505b60006401000000008281610d0a57fe5b0614610d17576001610d1a565b60005b60ff16602082901c0192505050919050565b600080600080198587098587029250828110838203039150506000811415610d675760008411610d5b57600080fd5b83820492505050610dff565b808411610d7357600080fd5b600084868809905082811182039150808303925060008586600003169050808604955080840493506001818260000304019050808302841793506000600287600302189050808702600203810290508087026002038102905080870260020381029050808702600203810290508087026002038102905080870260020381029050808502955050505050505b939250505056fea2646970667358221220d6f8f6ad2d8e2a7afe17267ac3bfc0fd1489cc7423b3311401ed810028be296664736f6c63430007060033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x35 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xC361E0B1 EQ PUSH2 0x3A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xBC PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x50 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xDE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH3 0xFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x64 PUSH2 0xFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1F4 PUSH2 0xFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBB8 PUSH2 0xFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2710 PUSH2 0xFFFF AND DUP2 MSTORE POP SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x4 DUP2 PUSH1 0xFF AND LT ISZERO PUSH2 0x345 JUMPI PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x1698EE82 DUP9 DUP9 DUP7 DUP7 PUSH1 0xFF AND PUSH1 0x4 DUP2 LT PUSH2 0x15B JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH2 0xFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1E6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1FC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x24A JUMPI POP PUSH2 0x338 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x257 DUP3 PUSH1 0x5 PUSH2 0x34F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x2ED DUP3 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2B9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH1 0xFF AND PUSH1 0xA EXP DUP12 DUP12 PUSH2 0x6EE JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP5 PUSH1 0xFF AND EQ ISZERO PUSH2 0x2FF JUMPI DUP1 SWAP7 POP JUMPDEST PUSH1 0x0 DUP5 PUSH1 0xFF AND GT DUP1 ISZERO PUSH2 0x311 JUMPI POP DUP7 DUP2 LT JUMPDEST ISZERO PUSH2 0x334 JUMPI DUP1 SWAP7 POP DUP5 DUP5 PUSH1 0xFF AND PUSH1 0x4 DUP2 LT PUSH2 0x328 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH2 0xFFFF AND SWAP6 POP JUMPDEST POP POP POP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x120 JUMP JUMPDEST POP POP SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH4 0xFFFFFFFF AND EQ ISZERO PUSH2 0x3CD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4250000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0x3E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x416 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP DUP3 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x427 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH4 0xFFFFFFFF AND SWAP1 DUP2 PUSH4 0xFFFFFFFF AND DUP2 MSTORE POP POP PUSH1 0x0 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x450 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH4 0xFFFFFFFF AND SWAP1 DUP2 PUSH4 0xFFFFFFFF AND DUP2 MSTORE POP POP PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x883BDBFD DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x4DB JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x4C0 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP3 POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x4FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x512 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x53C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH5 0x100000000 DUP3 GT ISZERO PUSH2 0x55C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH2 0x572 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD DUP7 PUSH1 0x20 DUP3 MUL DUP4 ADD GT PUSH5 0x100000000 DUP3 GT OR ISZERO PUSH2 0x58F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP3 POP POP POP SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x5C6 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x5AB JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD PUSH1 0x40 MSTORE PUSH1 0x20 ADD DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH5 0x100000000 DUP3 GT ISZERO PUSH2 0x5EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH2 0x605 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD DUP7 PUSH1 0x20 DUP3 MUL DUP4 ADD GT PUSH5 0x100000000 DUP3 GT OR ISZERO PUSH2 0x622 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP3 POP POP POP SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x659 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x63E JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD PUSH1 0x40 MSTORE POP POP POP POP SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x678 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP3 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x68D JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SUB SWAP1 POP DUP5 PUSH4 0xFFFFFFFF AND DUP2 PUSH1 0x6 SIGNEXTEND DUP2 PUSH2 0x6AA JUMPI INVALID JUMPDEST SDIV SWAP4 POP PUSH1 0x0 DUP2 PUSH1 0x6 SIGNEXTEND SLT DUP1 ISZERO PUSH2 0x6D6 JUMPI POP PUSH1 0x0 DUP6 PUSH4 0xFFFFFFFF AND DUP3 PUSH1 0x6 SIGNEXTEND DUP2 PUSH2 0x6CF JUMPI INVALID JUMPDEST SMOD PUSH1 0x6 SIGNEXTEND EQ ISZERO JUMPDEST ISZERO PUSH2 0x6E5 JUMPI DUP4 DUP1 PUSH1 0x1 SWAP1 SUB SWAP5 POP POP JUMPDEST POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x6FA DUP7 PUSH2 0x8F1 JUMP JUMPDEST SWAP1 POP PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND GT PUSH2 0x80B JUMPI PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL SWAP1 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND LT PUSH2 0x7CC JUMPI PUSH2 0x7C7 PUSH25 0x1000000000000000000000000000000000000000000000000 DUP8 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH2 0xD2C JUMP JUMPDEST PUSH2 0x803 JUMP JUMPDEST PUSH2 0x802 DUP2 DUP8 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH25 0x1000000000000000000000000000000000000000000000000 PUSH2 0xD2C JUMP JUMPDEST JUMPDEST SWAP3 POP POP PUSH2 0x8E8 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x84D DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH9 0x10000000000000000 PUSH2 0xD2C JUMP JUMPDEST SWAP1 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND LT PUSH2 0x8B5 JUMPI PUSH2 0x8B0 PUSH17 0x100000000000000000000000000000000 DUP8 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH2 0xD2C JUMP JUMPDEST PUSH2 0x8E4 JUMP JUMPDEST PUSH2 0x8E3 DUP2 DUP8 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH17 0x100000000000000000000000000000000 PUSH2 0xD2C JUMP JUMPDEST JUMPDEST SWAP3 POP POP JUMPDEST POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH1 0x2 SIGNEXTEND SLT PUSH2 0x908 JUMPI DUP3 PUSH1 0x2 SIGNEXTEND PUSH2 0x910 JUMP JUMPDEST DUP3 PUSH1 0x2 SIGNEXTEND PUSH1 0x0 SUB JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF27618 PUSH1 0x0 SUB PUSH1 0x2 SIGNEXTEND DUP2 GT ISZERO PUSH2 0x9AE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x5400000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 DUP4 AND EQ ISZERO PUSH2 0x9D2 JUMPI PUSH17 0x100000000000000000000000000000000 PUSH2 0x9E4 JUMP JUMPDEST PUSH16 0xFFFCB933BD6FAD37AA2D162D1A594001 JUMPDEST PUSH17 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH1 0x2 DUP4 AND EQ PUSH2 0xA1E JUMPI PUSH1 0x80 PUSH16 0xFFF97272373D413259A46990580E213A DUP3 MUL SWAP1 SHR SWAP1 POP JUMPDEST PUSH1 0x0 PUSH1 0x4 DUP4 AND EQ PUSH2 0xA43 JUMPI PUSH1 0x80 PUSH16 0xFFF2E50F5F656932EF12357CF3C7FDCC DUP3 MUL SWAP1 SHR SWAP1 POP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 AND EQ PUSH2 0xA68 JUMPI PUSH1 0x80 PUSH16 0xFFE5CACA7E10E4E61C3624EAA0941CD0 DUP3 MUL SWAP1 SHR SWAP1 POP JUMPDEST PUSH1 0x0 PUSH1 0x10 DUP4 AND EQ PUSH2 0xA8D JUMPI PUSH1 0x80 PUSH16 0xFFCB9843D60F6159C9DB58835C926644 DUP3 MUL SWAP1 SHR SWAP1 POP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP4 AND EQ PUSH2 0xAB2 JUMPI PUSH1 0x80 PUSH16 0xFF973B41FA98C081472E6896DFB254C0 DUP3 MUL SWAP1 SHR SWAP1 POP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP4 AND EQ PUSH2 0xAD7 JUMPI PUSH1 0x80 PUSH16 0xFF2EA16466C96A3843EC78B326B52861 DUP3 MUL SWAP1 SHR SWAP1 POP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP4 AND EQ PUSH2 0xAFC JUMPI PUSH1 0x80 PUSH16 0xFE5DEE046A99A2A811C461F1969C3053 DUP3 MUL SWAP1 SHR SWAP1 POP JUMPDEST PUSH1 0x0 PUSH2 0x100 DUP4 AND EQ PUSH2 0xB22 JUMPI PUSH1 0x80 PUSH16 0xFCBE86C7900A88AEDCFFC83B479AA3A4 DUP3 MUL SWAP1 SHR SWAP1 POP JUMPDEST PUSH1 0x0 PUSH2 0x200 DUP4 AND EQ PUSH2 0xB48 JUMPI PUSH1 0x80 PUSH16 0xF987A7253AC413176F2B074CF7815E54 DUP3 MUL SWAP1 SHR SWAP1 POP JUMPDEST PUSH1 0x0 PUSH2 0x400 DUP4 AND EQ PUSH2 0xB6E JUMPI PUSH1 0x80 PUSH16 0xF3392B0822B70005940C7A398E4B70F3 DUP3 MUL SWAP1 SHR SWAP1 POP JUMPDEST PUSH1 0x0 PUSH2 0x800 DUP4 AND EQ PUSH2 0xB94 JUMPI PUSH1 0x80 PUSH16 0xE7159475A2C29B7443B29C7FA6E889D9 DUP3 MUL SWAP1 SHR SWAP1 POP JUMPDEST PUSH1 0x0 PUSH2 0x1000 DUP4 AND EQ PUSH2 0xBBA JUMPI PUSH1 0x80 PUSH16 0xD097F3BDFD2022B8845AD8F792AA5825 DUP3 MUL SWAP1 SHR SWAP1 POP JUMPDEST PUSH1 0x0 PUSH2 0x2000 DUP4 AND EQ PUSH2 0xBE0 JUMPI PUSH1 0x80 PUSH16 0xA9F746462D870FDF8A65DC1F90E061E5 DUP3 MUL SWAP1 SHR SWAP1 POP JUMPDEST PUSH1 0x0 PUSH2 0x4000 DUP4 AND EQ PUSH2 0xC06 JUMPI PUSH1 0x80 PUSH16 0x70D869A156D2A1B890BB3DF62BAF32F7 DUP3 MUL SWAP1 SHR SWAP1 POP JUMPDEST PUSH1 0x0 PUSH2 0x8000 DUP4 AND EQ PUSH2 0xC2C JUMPI PUSH1 0x80 PUSH16 0x31BE135F97D08FD981231505542FCFA6 DUP3 MUL SWAP1 SHR SWAP1 POP JUMPDEST PUSH1 0x0 PUSH3 0x10000 DUP4 AND EQ PUSH2 0xC53 JUMPI PUSH1 0x80 PUSH16 0x9AA508B5B7A84E1C677DE54F3E99BC9 DUP3 MUL SWAP1 SHR SWAP1 POP JUMPDEST PUSH1 0x0 PUSH3 0x20000 DUP4 AND EQ PUSH2 0xC79 JUMPI PUSH1 0x80 PUSH15 0x5D6AF8DEDB81196699C329225EE604 DUP3 MUL SWAP1 SHR SWAP1 POP JUMPDEST PUSH1 0x0 PUSH3 0x40000 DUP4 AND EQ PUSH2 0xC9E JUMPI PUSH1 0x80 PUSH14 0x2216E584F5FA1EA926041BEDFE98 DUP3 MUL SWAP1 SHR SWAP1 POP JUMPDEST PUSH1 0x0 PUSH3 0x80000 DUP4 AND EQ PUSH2 0xCC1 JUMPI PUSH1 0x80 PUSH12 0x48A170391F7DC42444E8FA2 DUP3 MUL SWAP1 SHR SWAP1 POP JUMPDEST PUSH1 0x0 DUP5 PUSH1 0x2 SIGNEXTEND SGT ISZERO PUSH2 0xCFA JUMPI DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 PUSH2 0xCF6 JUMPI INVALID JUMPDEST DIV SWAP1 POP JUMPDEST PUSH1 0x0 PUSH5 0x100000000 DUP3 DUP2 PUSH2 0xD0A JUMPI INVALID JUMPDEST MOD EQ PUSH2 0xD17 JUMPI PUSH1 0x1 PUSH2 0xD1A JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0xFF AND PUSH1 0x20 DUP3 SWAP1 SHR ADD SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 NOT DUP6 DUP8 MULMOD DUP6 DUP8 MUL SWAP3 POP DUP3 DUP2 LT DUP4 DUP3 SUB SUB SWAP2 POP POP PUSH1 0x0 DUP2 EQ ISZERO PUSH2 0xD67 JUMPI PUSH1 0x0 DUP5 GT PUSH2 0xD5B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP3 DIV SWAP3 POP POP POP PUSH2 0xDFF JUMP JUMPDEST DUP1 DUP5 GT PUSH2 0xD73 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP5 DUP7 DUP9 MULMOD SWAP1 POP DUP3 DUP2 GT DUP3 SUB SWAP2 POP DUP1 DUP4 SUB SWAP3 POP PUSH1 0x0 DUP6 DUP7 PUSH1 0x0 SUB AND SWAP1 POP DUP1 DUP7 DIV SWAP6 POP DUP1 DUP5 DIV SWAP4 POP PUSH1 0x1 DUP2 DUP3 PUSH1 0x0 SUB DIV ADD SWAP1 POP DUP1 DUP4 MUL DUP5 OR SWAP4 POP PUSH1 0x0 PUSH1 0x2 DUP8 PUSH1 0x3 MUL XOR SWAP1 POP DUP1 DUP8 MUL PUSH1 0x2 SUB DUP2 MUL SWAP1 POP DUP1 DUP8 MUL PUSH1 0x2 SUB DUP2 MUL SWAP1 POP DUP1 DUP8 MUL PUSH1 0x2 SUB DUP2 MUL SWAP1 POP DUP1 DUP8 MUL PUSH1 0x2 SUB DUP2 MUL SWAP1 POP DUP1 DUP8 MUL PUSH1 0x2 SUB DUP2 MUL SWAP1 POP DUP1 DUP8 MUL PUSH1 0x2 SUB DUP2 MUL SWAP1 POP DUP1 DUP6 MUL SWAP6 POP POP POP POP POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD6 0xF8 0xF6 0xAD 0x2D DUP15 0x2A PUSH27 0xFE17267AC3BFC0FD1489CC7423B3311401ED810028BE296664736F PUSH13 0x63430007060033000000000000 ",
							"sourceMap": "260:699:16:-:0;;;;;;;;;;;;;;;;;;;;;;;;285:672;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;366:13;380:10;401:21;:44;;;;;;;;426:3;401:44;;;;;;430:3;401:44;;;;;;434:4;401:44;;;;;;439:5;401:44;;;;;;;459:7;455:468;471:1;469;:3;;;455:468;;;487:12;520:8;502:35;;;538:3;542:4;547;552:1;547:7;;;;;;;;;;;;;502:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;487:68;;585:1;569:18;;:4;:18;;;565:32;;;589:8;;;565:32;608:10;621:29;643:4;648:1;621:21;:29::i;:::-;608:42;;660:17;680:79;709:4;733:3;726:20;;;:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;722:26;;:2;:26;750:3;754:4;680:28;:79::i;:::-;660:99;;778:1;773;:6;;;769:29;;;789:9;781:17;;769:29;816:1;812;:5;;;:26;;;;;833:5;821:9;:17;812:26;808:105;;;862:9;854:17;;891:4;896:1;891:7;;;;;;;;;;;;;885:13;;;;808:105;455:468;;;;473:3;;;;;;;455:468;;;;932:18;285:672;;;;;;:::o;270:657:14:-;367:10;415:1;401:10;:15;;;;393:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;434:27;477:1;464:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;434:45;;506:10;489:11;501:1;489:14;;;;;;;;;;;;;:27;;;;;;;;;;;543:1;526:11;538:1;526:14;;;;;;;;;;;;;:18;;;;;;;;;;;556:30;619:4;604:28;;;633:11;604:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;555:90;;;656:26;706:15;722:1;706:18;;;;;;;;;;;;;;685:15;701:1;685:18;;;;;;;;;;;;;;:39;656:68;;773:10;750:33;;:20;:33;;;;;;;;737:47;;866:1;843:20;:24;;;:68;;;;;909:1;895:10;872:33;;:20;:33;;;;;;;;:38;;;;843:68;839:80;;;913:6;;;;;;;;839:80;270:657;;;;;;;:::o;934:955::-;1090:19;1121:20;1144:33;1172:4;1144:27;:33::i;:::-;1121:56;;1312:17;1296:33;;:12;:33;;;1292:591;;1345:17;1389:12;1365:36;;1373:12;1365:21;;:36;1345:56;;1441:10;1429:22;;:9;:22;;;:156;;1537:48;1553:8;1563:10;1537:48;;1575:9;1537:15;:48::i;:::-;1429:156;;;1470:48;1486:9;1497:10;1470:48;;1509:8;1470:15;:48::i;:::-;1429:156;1415:170;;1292:591;;;;1616:17;1636:52;1652:12;1636:52;;1666:12;1636:52;;1680:7;1636:15;:52::i;:::-;1616:72;;1728:10;1716:22;;:9;:22;;;:156;;1824:48;1840:8;1850:10;1824:48;;1862:9;1824:15;:48::i;:::-;1716:156;;;1757:48;1773:9;1784:10;1757:48;;1796:8;1757:15;:48::i;:::-;1716:156;1702:170;;1292:591;;934:955;;;;;;;:::o;1362:2580:10:-;1425:20;1457:15;1482:1;1475:4;:8;;;:57;;1526:4;1519:12;;1475:57;;;1502:4;1495:12;;1494:13;;1475:57;1457:75;;484:7;644:9;;1561:17;;1550:7;:28;;1542:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1595:13;1628:1;1621:3;1611:7;:13;:18;;:93;;1669:35;1611:93;;;1632:34;1611:93;1595:109;;;;1735:1;1728:3;1718:7;:13;:18;1714:83;;1794:3;1755:34;1747:5;:42;1746:51;;1738:59;;1714:83;1828:1;1821:3;1811:7;:13;:18;1807:83;;1887:3;1848:34;1840:5;:42;1839:51;;1831:59;;1807:83;1921:1;1914:3;1904:7;:13;:18;1900:83;;1980:3;1941:34;1933:5;:42;1932:51;;1924:59;;1900:83;2015:1;2007:4;1997:7;:14;:19;1993:84;;2074:3;2035:34;2027:5;:42;2026:51;;2018:59;;1993:84;2109:1;2101:4;2091:7;:14;:19;2087:84;;2168:3;2129:34;2121:5;:42;2120:51;;2112:59;;2087:84;2203:1;2195:4;2185:7;:14;:19;2181:84;;2262:3;2223:34;2215:5;:42;2214:51;;2206:59;;2181:84;2297:1;2289:4;2279:7;:14;:19;2275:84;;2356:3;2317:34;2309:5;:42;2308:51;;2300:59;;2275:84;2392:1;2383:5;2373:7;:15;:20;2369:85;;2451:3;2412:34;2404:5;:42;2403:51;;2395:59;;2369:85;2487:1;2478:5;2468:7;:15;:20;2464:85;;2546:3;2507:34;2499:5;:42;2498:51;;2490:59;;2464:85;2582:1;2573:5;2563:7;:15;:20;2559:85;;2641:3;2602:34;2594:5;:42;2593:51;;2585:59;;2559:85;2677:1;2668:5;2658:7;:15;:20;2654:85;;2736:3;2697:34;2689:5;:42;2688:51;;2680:59;;2654:85;2773:1;2763:6;2753:7;:16;:21;2749:86;;2832:3;2793:34;2785:5;:42;2784:51;;2776:59;;2749:86;2869:1;2859:6;2849:7;:16;:21;2845:86;;2928:3;2889:34;2881:5;:42;2880:51;;2872:59;;2845:86;2965:1;2955:6;2945:7;:16;:21;2941:86;;3024:3;2985:34;2977:5;:42;2976:51;;2968:59;;2941:86;3061:1;3051:6;3041:7;:16;:21;3037:86;;3120:3;3081:34;3073:5;:42;3072:51;;3064:59;;3037:86;3158:1;3147:7;3137;:17;:22;3133:86;;3216:3;3178:33;3170:5;:41;3169:50;;3161:58;;3133:86;3254:1;3243:7;3233;:17;:22;3229:85;;3311:3;3274:32;3266:5;:40;3265:49;;3257:57;;3229:85;3349:1;3338:7;3328;:17;:22;3324:83;;3404:3;3369:30;3361:5;:38;3360:47;;3352:55;;3324:83;3442:1;3431:7;3421;:17;:22;3417:78;;3492:3;3462:25;3454:5;:33;3453:42;;3445:50;;3417:78;3517:1;3510:4;:8;;;3506:47;;;3548:5;3528:17;:25;;;;;;3520:33;;3506:47;3924:1;3912:7;3903:5;:17;;;;;;:22;:30;;3932:1;3903:30;;;3928:1;3903:30;3886:48;;3896:2;3887:5;:11;;3886:48;3863:72;;1362:2580;;;;;:::o;749:3776:9:-;861:14;1190:13;1258;1375:1;1371:6;1368:1;1365;1358:20;1407:1;1404;1400:9;1391:18;;1458:5;1454:2;1451:13;1443:5;1439:2;1435:14;1431:34;1422:43;;1334:141;1556:1;1547:5;:10;1543:179;;;1595:1;1581:11;:15;1573:24;;;;;;1659:11;1652:5;1648:23;1638:33;;1698:13;;;;1543:179;1849:5;1835:11;:19;1827:28;;;;;;2132:17;2208:11;2205:1;2202;2195:25;2182:38;;2351:5;2340:9;2337:20;2330:5;2326:32;2317:41;;2391:9;2384:5;2380:21;2371:30;;2560:12;2590:11;2576;2575:12;;:26;2560:41;;2712:4;2699:11;2695:22;2680:37;;2834:4;2827:5;2823:16;2814:25;;3088:1;3081:4;3074;3071:1;3067:12;3063:23;3059:31;3051:39;;3126:4;3118:5;:12;3109:21;;;;3464:11;3498:1;3483:11;3479:1;:15;3478:21;3464:35;;3739:3;3725:11;:17;3721:1;:21;3714:28;;;;3797:3;3783:11;:17;3779:1;:21;3772:28;;;;3856:3;3842:11;:17;3838:1;:21;3831:28;;;;3915:3;3901:11;:17;3897:1;:21;3890:28;;;;3974:3;3960:11;:17;3956:1;:21;3949:28;;;;4034:3;4020:11;:17;4016:1;:21;4009:28;;;;4492:3;4484:5;:11;4475:20;;4505:13;;;;;749:3776;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "728800",
								"executionCost": "788",
								"totalCost": "729588"
							},
							"external": {
								"Price(address,address,address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 260,
									"end": 959,
									"name": "PUSH #[$]",
									"source": 16,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 260,
									"end": 959,
									"name": "PUSH [$]",
									"source": 16,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 260,
									"end": 959,
									"name": "PUSH",
									"source": 16,
									"value": "B"
								},
								{
									"begin": 260,
									"end": 959,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 260,
									"end": 959,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 260,
									"end": 959,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 260,
									"end": 959,
									"name": "CODECOPY",
									"source": 16
								},
								{
									"begin": 260,
									"end": 959,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 260,
									"end": 959,
									"name": "MLOAD",
									"source": 16
								},
								{
									"begin": 260,
									"end": 959,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 260,
									"end": 959,
									"name": "BYTE",
									"source": 16
								},
								{
									"begin": 260,
									"end": 959,
									"name": "PUSH",
									"source": 16,
									"value": "73"
								},
								{
									"begin": 260,
									"end": 959,
									"name": "EQ",
									"source": 16
								},
								{
									"begin": 260,
									"end": 959,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "1"
								},
								{
									"begin": 260,
									"end": 959,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 260,
									"end": 959,
									"name": "INVALID",
									"source": 16
								},
								{
									"begin": 260,
									"end": 959,
									"name": "tag",
									"source": 16,
									"value": "1"
								},
								{
									"begin": 260,
									"end": 959,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 260,
									"end": 959,
									"name": "ADDRESS",
									"source": 16
								},
								{
									"begin": 260,
									"end": 959,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 260,
									"end": 959,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 260,
									"end": 959,
									"name": "PUSH",
									"source": 16,
									"value": "73"
								},
								{
									"begin": 260,
									"end": 959,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 260,
									"end": 959,
									"name": "MSTORE8",
									"source": 16
								},
								{
									"begin": 260,
									"end": 959,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 260,
									"end": 959,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 260,
									"end": 959,
									"name": "RETURN",
									"source": 16
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220d6f8f6ad2d8e2a7afe17267ac3bfc0fd1489cc7423b3311401ed810028be296664736f6c63430007060033",
									".code": [
										{
											"begin": 260,
											"end": 959,
											"name": "PUSHDEPLOYADDRESS",
											"source": 16
										},
										{
											"begin": 260,
											"end": 959,
											"name": "ADDRESS",
											"source": 16
										},
										{
											"begin": 260,
											"end": 959,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 260,
											"end": 959,
											"name": "PUSH",
											"source": 16,
											"value": "80"
										},
										{
											"begin": 260,
											"end": 959,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 260,
											"end": 959,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 260,
											"end": 959,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 260,
											"end": 959,
											"name": "CALLDATASIZE",
											"source": 16
										},
										{
											"begin": 260,
											"end": 959,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 260,
											"end": 959,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 260,
											"end": 959,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 260,
											"end": 959,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 260,
											"end": 959,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": 260,
											"end": 959,
											"name": "PUSH",
											"source": 16,
											"value": "E0"
										},
										{
											"begin": 260,
											"end": 959,
											"name": "SHR",
											"source": 16
										},
										{
											"begin": 260,
											"end": 959,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 260,
											"end": 959,
											"name": "PUSH",
											"source": 16,
											"value": "C361E0B1"
										},
										{
											"begin": 260,
											"end": 959,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 260,
											"end": 959,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "2"
										},
										{
											"begin": 260,
											"end": 959,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 260,
											"end": 959,
											"name": "tag",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 260,
											"end": 959,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 260,
											"end": 959,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 260,
											"end": 959,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 260,
											"end": 959,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 285,
											"end": 957,
											"name": "tag",
											"source": 16,
											"value": "2"
										},
										{
											"begin": 285,
											"end": 957,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 285,
											"end": 957,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "3"
										},
										{
											"begin": 285,
											"end": 957,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 285,
											"end": 957,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 285,
											"end": 957,
											"name": "CALLDATASIZE",
											"source": 16
										},
										{
											"begin": 285,
											"end": 957,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 285,
											"end": 957,
											"name": "PUSH",
											"source": 16,
											"value": "60"
										},
										{
											"begin": 285,
											"end": 957,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 285,
											"end": 957,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 285,
											"end": 957,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 285,
											"end": 957,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 285,
											"end": 957,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 285,
											"end": 957,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 285,
											"end": 957,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 285,
											"end": 957,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 285,
											"end": 957,
											"name": "tag",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 285,
											"end": 957,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 285,
											"end": 957,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 285,
											"end": 957,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 285,
											"end": 957,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 285,
											"end": 957,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 285,
											"end": 957,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 285,
											"end": 957,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": 285,
											"end": 957,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 285,
											"end": 957,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 285,
											"end": 957,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 285,
											"end": 957,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 285,
											"end": 957,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 285,
											"end": 957,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 285,
											"end": 957,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 285,
											"end": 957,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 285,
											"end": 957,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 285,
											"end": 957,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 285,
											"end": 957,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": 285,
											"end": 957,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 285,
											"end": 957,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 285,
											"end": 957,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 285,
											"end": 957,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 285,
											"end": 957,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 285,
											"end": 957,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 285,
											"end": 957,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 285,
											"end": 957,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 285,
											"end": 957,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 285,
											"end": 957,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 285,
											"end": 957,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": 285,
											"end": 957,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 285,
											"end": 957,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 285,
											"end": 957,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 285,
											"end": 957,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 285,
											"end": 957,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 285,
											"end": 957,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 285,
											"end": 957,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 285,
											"end": 957,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 285,
											"end": 957,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 285,
											"end": 957,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 285,
											"end": 957,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 285,
											"end": 957,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 285,
											"end": 957,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "5"
										},
										{
											"begin": 285,
											"end": 957,
											"name": "JUMP",
											"source": 16,
											"value": "[in]"
										},
										{
											"begin": 285,
											"end": 957,
											"name": "tag",
											"source": 16,
											"value": "3"
										},
										{
											"begin": 285,
											"end": 957,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 285,
											"end": 957,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 285,
											"end": 957,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 285,
											"end": 957,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 285,
											"end": 957,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 285,
											"end": 957,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 285,
											"end": 957,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 285,
											"end": 957,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 285,
											"end": 957,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 285,
											"end": 957,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 285,
											"end": 957,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFF"
										},
										{
											"begin": 285,
											"end": 957,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 285,
											"end": 957,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 285,
											"end": 957,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 285,
											"end": 957,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 285,
											"end": 957,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 285,
											"end": 957,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 285,
											"end": 957,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 285,
											"end": 957,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 285,
											"end": 957,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 285,
											"end": 957,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 285,
											"end": 957,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 285,
											"end": 957,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 285,
											"end": 957,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 285,
											"end": 957,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 285,
											"end": 957,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 285,
											"end": 957,
											"name": "RETURN",
											"source": 16
										},
										{
											"begin": 285,
											"end": 957,
											"name": "tag",
											"source": 16,
											"value": "5"
										},
										{
											"begin": 285,
											"end": 957,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 366,
											"end": 379,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 380,
											"end": 390,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 401,
											"end": 422,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 401,
											"end": 445,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 401,
											"end": 445,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 401,
											"end": 445,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 401,
											"end": 445,
											"name": "PUSH",
											"source": 16,
											"value": "80"
										},
										{
											"begin": 401,
											"end": 445,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 401,
											"end": 445,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 401,
											"end": 445,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 401,
											"end": 445,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 426,
											"end": 429,
											"name": "PUSH",
											"source": 16,
											"value": "64"
										},
										{
											"begin": 401,
											"end": 445,
											"name": "PUSH",
											"source": 16,
											"value": "FFFF"
										},
										{
											"begin": 401,
											"end": 445,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 401,
											"end": 445,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 401,
											"end": 445,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 401,
											"end": 445,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 401,
											"end": 445,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 430,
											"end": 433,
											"name": "PUSH",
											"source": 16,
											"value": "1F4"
										},
										{
											"begin": 401,
											"end": 445,
											"name": "PUSH",
											"source": 16,
											"value": "FFFF"
										},
										{
											"begin": 401,
											"end": 445,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 401,
											"end": 445,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 401,
											"end": 445,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 401,
											"end": 445,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 401,
											"end": 445,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 434,
											"end": 438,
											"name": "PUSH",
											"source": 16,
											"value": "BB8"
										},
										{
											"begin": 401,
											"end": 445,
											"name": "PUSH",
											"source": 16,
											"value": "FFFF"
										},
										{
											"begin": 401,
											"end": 445,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 401,
											"end": 445,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 401,
											"end": 445,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 401,
											"end": 445,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 401,
											"end": 445,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 439,
											"end": 444,
											"name": "PUSH",
											"source": 16,
											"value": "2710"
										},
										{
											"begin": 401,
											"end": 445,
											"name": "PUSH",
											"source": 16,
											"value": "FFFF"
										},
										{
											"begin": 401,
											"end": 445,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 401,
											"end": 445,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 401,
											"end": 445,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 401,
											"end": 445,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 401,
											"end": 445,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 401,
											"end": 445,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 459,
											"end": 466,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 455,
											"end": 923,
											"name": "tag",
											"source": 16,
											"value": "7"
										},
										{
											"begin": 455,
											"end": 923,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 471,
											"end": 472,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 469,
											"end": 470,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 469,
											"end": 472,
											"name": "PUSH",
											"source": 16,
											"value": "FF"
										},
										{
											"begin": 469,
											"end": 472,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 469,
											"end": 472,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 455,
											"end": 923,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 455,
											"end": 923,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "8"
										},
										{
											"begin": 455,
											"end": 923,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 487,
											"end": 499,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 520,
											"end": 528,
											"name": "DUP8",
											"source": 16
										},
										{
											"begin": 502,
											"end": 537,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 502,
											"end": 537,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 502,
											"end": 537,
											"name": "PUSH",
											"source": 16,
											"value": "1698EE82"
										},
										{
											"begin": 538,
											"end": 541,
											"name": "DUP9",
											"source": 16
										},
										{
											"begin": 542,
											"end": 546,
											"name": "DUP9",
											"source": 16
										},
										{
											"begin": 547,
											"end": 551,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 552,
											"end": 553,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 547,
											"end": 554,
											"name": "PUSH",
											"source": 16,
											"value": "FF"
										},
										{
											"begin": 547,
											"end": 554,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 547,
											"end": 554,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 547,
											"end": 554,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 547,
											"end": 554,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 547,
											"end": 554,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "10"
										},
										{
											"begin": 547,
											"end": 554,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 547,
											"end": 554,
											"name": "INVALID",
											"source": 16
										},
										{
											"begin": 547,
											"end": 554,
											"name": "tag",
											"source": 16,
											"value": "10"
										},
										{
											"begin": 547,
											"end": 554,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 547,
											"end": 554,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 547,
											"end": 554,
											"name": "MUL",
											"source": 16
										},
										{
											"begin": 547,
											"end": 554,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 547,
											"end": 554,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 502,
											"end": 555,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 502,
											"end": 555,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 502,
											"end": 555,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 502,
											"end": 555,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFF"
										},
										{
											"begin": 502,
											"end": 555,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 502,
											"end": 555,
											"name": "PUSH",
											"source": 16,
											"value": "E0"
										},
										{
											"begin": 502,
											"end": 555,
											"name": "SHL",
											"source": 16
										},
										{
											"begin": 502,
											"end": 555,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 502,
											"end": 555,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 502,
											"end": 555,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 502,
											"end": 555,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 502,
											"end": 555,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 502,
											"end": 555,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 502,
											"end": 555,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 502,
											"end": 555,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 502,
											"end": 555,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 502,
											"end": 555,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 502,
											"end": 555,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 502,
											"end": 555,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 502,
											"end": 555,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 502,
											"end": 555,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 502,
											"end": 555,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 502,
											"end": 555,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 502,
											"end": 555,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 502,
											"end": 555,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 502,
											"end": 555,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 502,
											"end": 555,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 502,
											"end": 555,
											"name": "PUSH",
											"source": 16,
											"value": "FFFF"
										},
										{
											"begin": 502,
											"end": 555,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 502,
											"end": 555,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 502,
											"end": 555,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 502,
											"end": 555,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 502,
											"end": 555,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 502,
											"end": 555,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 502,
											"end": 555,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 502,
											"end": 555,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 502,
											"end": 555,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 502,
											"end": 555,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 502,
											"end": 555,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 502,
											"end": 555,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 502,
											"end": 555,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 502,
											"end": 555,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 502,
											"end": 555,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 502,
											"end": 555,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 502,
											"end": 555,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 502,
											"end": 555,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 502,
											"end": 555,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 502,
											"end": 555,
											"name": "EXTCODESIZE",
											"source": 16
										},
										{
											"begin": 502,
											"end": 555,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 502,
											"end": 555,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 502,
											"end": 555,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 502,
											"end": 555,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "11"
										},
										{
											"begin": 502,
											"end": 555,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 502,
											"end": 555,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 502,
											"end": 555,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 502,
											"end": 555,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 502,
											"end": 555,
											"name": "tag",
											"source": 16,
											"value": "11"
										},
										{
											"begin": 502,
											"end": 555,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 502,
											"end": 555,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 502,
											"end": 555,
											"name": "GAS",
											"source": 16
										},
										{
											"begin": 502,
											"end": 555,
											"name": "STATICCALL",
											"source": 16
										},
										{
											"begin": 502,
											"end": 555,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 502,
											"end": 555,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 502,
											"end": 555,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 502,
											"end": 555,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "13"
										},
										{
											"begin": 502,
											"end": 555,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 502,
											"end": 555,
											"name": "RETURNDATASIZE",
											"source": 16
										},
										{
											"begin": 502,
											"end": 555,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 502,
											"end": 555,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 502,
											"end": 555,
											"name": "RETURNDATACOPY",
											"source": 16
										},
										{
											"begin": 502,
											"end": 555,
											"name": "RETURNDATASIZE",
											"source": 16
										},
										{
											"begin": 502,
											"end": 555,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 502,
											"end": 555,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 502,
											"end": 555,
											"name": "tag",
											"source": 16,
											"value": "13"
										},
										{
											"begin": 502,
											"end": 555,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 502,
											"end": 555,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 502,
											"end": 555,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 502,
											"end": 555,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 502,
											"end": 555,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 502,
											"end": 555,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 502,
											"end": 555,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 502,
											"end": 555,
											"name": "RETURNDATASIZE",
											"source": 16
										},
										{
											"begin": 502,
											"end": 555,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 502,
											"end": 555,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 502,
											"end": 555,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 502,
											"end": 555,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 502,
											"end": 555,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "14"
										},
										{
											"begin": 502,
											"end": 555,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 502,
											"end": 555,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 502,
											"end": 555,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 502,
											"end": 555,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 502,
											"end": 555,
											"name": "tag",
											"source": 16,
											"value": "14"
										},
										{
											"begin": 502,
											"end": 555,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 502,
											"end": 555,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 502,
											"end": 555,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 502,
											"end": 555,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 502,
											"end": 555,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 502,
											"end": 555,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 502,
											"end": 555,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 502,
											"end": 555,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 502,
											"end": 555,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 502,
											"end": 555,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 502,
											"end": 555,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 502,
											"end": 555,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 502,
											"end": 555,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 502,
											"end": 555,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 502,
											"end": 555,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 502,
											"end": 555,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 502,
											"end": 555,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 487,
											"end": 555,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 487,
											"end": 555,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 585,
											"end": 586,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 569,
											"end": 587,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 569,
											"end": 587,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 569,
											"end": 573,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 569,
											"end": 587,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 569,
											"end": 587,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 569,
											"end": 587,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 565,
											"end": 597,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 565,
											"end": 597,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "15"
										},
										{
											"begin": 565,
											"end": 597,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 589,
											"end": 597,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 589,
											"end": 597,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "9"
										},
										{
											"begin": 589,
											"end": 597,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 565,
											"end": 597,
											"name": "tag",
											"source": 16,
											"value": "15"
										},
										{
											"begin": 565,
											"end": 597,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 608,
											"end": 618,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 621,
											"end": 650,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "16"
										},
										{
											"begin": 643,
											"end": 647,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 648,
											"end": 649,
											"name": "PUSH",
											"source": 16,
											"value": "5"
										},
										{
											"begin": 621,
											"end": 642,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "17"
										},
										{
											"begin": 621,
											"end": 650,
											"name": "JUMP",
											"source": 16,
											"value": "[in]"
										},
										{
											"begin": 621,
											"end": 650,
											"name": "tag",
											"source": 16,
											"value": "16"
										},
										{
											"begin": 621,
											"end": 650,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 608,
											"end": 650,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 608,
											"end": 650,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 660,
											"end": 677,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 680,
											"end": 759,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "18"
										},
										{
											"begin": 709,
											"end": 713,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 733,
											"end": 736,
											"name": "DUP11",
											"source": 16
										},
										{
											"begin": 726,
											"end": 746,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 726,
											"end": 746,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 726,
											"end": 746,
											"name": "PUSH",
											"source": 16,
											"value": "313CE567"
										},
										{
											"begin": 726,
											"end": 748,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 726,
											"end": 748,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 726,
											"end": 748,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 726,
											"end": 748,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFF"
										},
										{
											"begin": 726,
											"end": 748,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 726,
											"end": 748,
											"name": "PUSH",
											"source": 16,
											"value": "E0"
										},
										{
											"begin": 726,
											"end": 748,
											"name": "SHL",
											"source": 16
										},
										{
											"begin": 726,
											"end": 748,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 726,
											"end": 748,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 726,
											"end": 748,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 726,
											"end": 748,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 726,
											"end": 748,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 726,
											"end": 748,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 726,
											"end": 748,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 726,
											"end": 748,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 726,
											"end": 748,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 726,
											"end": 748,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 726,
											"end": 748,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 726,
											"end": 748,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 726,
											"end": 748,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 726,
											"end": 748,
											"name": "EXTCODESIZE",
											"source": 16
										},
										{
											"begin": 726,
											"end": 748,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 726,
											"end": 748,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 726,
											"end": 748,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 726,
											"end": 748,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "19"
										},
										{
											"begin": 726,
											"end": 748,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 726,
											"end": 748,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 726,
											"end": 748,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 726,
											"end": 748,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 726,
											"end": 748,
											"name": "tag",
											"source": 16,
											"value": "19"
										},
										{
											"begin": 726,
											"end": 748,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 726,
											"end": 748,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 726,
											"end": 748,
											"name": "GAS",
											"source": 16
										},
										{
											"begin": 726,
											"end": 748,
											"name": "STATICCALL",
											"source": 16
										},
										{
											"begin": 726,
											"end": 748,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 726,
											"end": 748,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 726,
											"end": 748,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 726,
											"end": 748,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "21"
										},
										{
											"begin": 726,
											"end": 748,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 726,
											"end": 748,
											"name": "RETURNDATASIZE",
											"source": 16
										},
										{
											"begin": 726,
											"end": 748,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 726,
											"end": 748,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 726,
											"end": 748,
											"name": "RETURNDATACOPY",
											"source": 16
										},
										{
											"begin": 726,
											"end": 748,
											"name": "RETURNDATASIZE",
											"source": 16
										},
										{
											"begin": 726,
											"end": 748,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 726,
											"end": 748,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 726,
											"end": 748,
											"name": "tag",
											"source": 16,
											"value": "21"
										},
										{
											"begin": 726,
											"end": 748,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 726,
											"end": 748,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 726,
											"end": 748,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 726,
											"end": 748,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 726,
											"end": 748,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 726,
											"end": 748,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 726,
											"end": 748,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 726,
											"end": 748,
											"name": "RETURNDATASIZE",
											"source": 16
										},
										{
											"begin": 726,
											"end": 748,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 726,
											"end": 748,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 726,
											"end": 748,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 726,
											"end": 748,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 726,
											"end": 748,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "22"
										},
										{
											"begin": 726,
											"end": 748,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 726,
											"end": 748,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 726,
											"end": 748,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 726,
											"end": 748,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 726,
											"end": 748,
											"name": "tag",
											"source": 16,
											"value": "22"
										},
										{
											"begin": 726,
											"end": 748,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 726,
											"end": 748,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 726,
											"end": 748,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 726,
											"end": 748,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 726,
											"end": 748,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 726,
											"end": 748,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 726,
											"end": 748,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 726,
											"end": 748,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 726,
											"end": 748,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 726,
											"end": 748,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 726,
											"end": 748,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 726,
											"end": 748,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 726,
											"end": 748,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 726,
											"end": 748,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 726,
											"end": 748,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 726,
											"end": 748,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 726,
											"end": 748,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 722,
											"end": 748,
											"name": "PUSH",
											"source": 16,
											"value": "FF"
										},
										{
											"begin": 722,
											"end": 748,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 722,
											"end": 724,
											"name": "PUSH",
											"source": 16,
											"value": "A"
										},
										{
											"begin": 722,
											"end": 748,
											"name": "EXP",
											"source": 16
										},
										{
											"begin": 750,
											"end": 753,
											"name": "DUP12",
											"source": 16
										},
										{
											"begin": 754,
											"end": 758,
											"name": "DUP12",
											"source": 16
										},
										{
											"begin": 680,
											"end": 708,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "23"
										},
										{
											"begin": 680,
											"end": 759,
											"name": "JUMP",
											"source": 16,
											"value": "[in]"
										},
										{
											"begin": 680,
											"end": 759,
											"name": "tag",
											"source": 16,
											"value": "18"
										},
										{
											"begin": 680,
											"end": 759,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 660,
											"end": 759,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 660,
											"end": 759,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 778,
											"end": 779,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 773,
											"end": 774,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 773,
											"end": 779,
											"name": "PUSH",
											"source": 16,
											"value": "FF"
										},
										{
											"begin": 773,
											"end": 779,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 773,
											"end": 779,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 769,
											"end": 798,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 769,
											"end": 798,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 769,
											"end": 798,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 789,
											"end": 798,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 781,
											"end": 798,
											"name": "SWAP7",
											"source": 16
										},
										{
											"begin": 781,
											"end": 798,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 769,
											"end": 798,
											"name": "tag",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 769,
											"end": 798,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 816,
											"end": 817,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 812,
											"end": 813,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 812,
											"end": 817,
											"name": "PUSH",
											"source": 16,
											"value": "FF"
										},
										{
											"begin": 812,
											"end": 817,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 812,
											"end": 817,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 812,
											"end": 838,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 812,
											"end": 838,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 812,
											"end": 838,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "25"
										},
										{
											"begin": 812,
											"end": 838,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 812,
											"end": 838,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 833,
											"end": 838,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 821,
											"end": 830,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 821,
											"end": 838,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 812,
											"end": 838,
											"name": "tag",
											"source": 16,
											"value": "25"
										},
										{
											"begin": 812,
											"end": 838,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 808,
											"end": 913,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 808,
											"end": 913,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "26"
										},
										{
											"begin": 808,
											"end": 913,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 862,
											"end": 871,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 854,
											"end": 871,
											"name": "SWAP7",
											"source": 16
										},
										{
											"begin": 854,
											"end": 871,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 891,
											"end": 895,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 896,
											"end": 897,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 891,
											"end": 898,
											"name": "PUSH",
											"source": 16,
											"value": "FF"
										},
										{
											"begin": 891,
											"end": 898,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 891,
											"end": 898,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 891,
											"end": 898,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 891,
											"end": 898,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 891,
											"end": 898,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "27"
										},
										{
											"begin": 891,
											"end": 898,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 891,
											"end": 898,
											"name": "INVALID",
											"source": 16
										},
										{
											"begin": 891,
											"end": 898,
											"name": "tag",
											"source": 16,
											"value": "27"
										},
										{
											"begin": 891,
											"end": 898,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 891,
											"end": 898,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 891,
											"end": 898,
											"name": "MUL",
											"source": 16
										},
										{
											"begin": 891,
											"end": 898,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 891,
											"end": 898,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 885,
											"end": 898,
											"name": "PUSH",
											"source": 16,
											"value": "FFFF"
										},
										{
											"begin": 885,
											"end": 898,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 885,
											"end": 898,
											"name": "SWAP6",
											"source": 16
										},
										{
											"begin": 885,
											"end": 898,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 808,
											"end": 913,
											"name": "tag",
											"source": 16,
											"value": "26"
										},
										{
											"begin": 808,
											"end": 913,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 455,
											"end": 923,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 455,
											"end": 923,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 455,
											"end": 923,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 455,
											"end": 923,
											"name": "tag",
											"source": 16,
											"value": "9"
										},
										{
											"begin": 455,
											"end": 923,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 473,
											"end": 476,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 473,
											"end": 476,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 473,
											"end": 476,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 473,
											"end": 476,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 473,
											"end": 476,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 473,
											"end": 476,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 473,
											"end": 476,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 455,
											"end": 923,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "7"
										},
										{
											"begin": 455,
											"end": 923,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 455,
											"end": 923,
											"name": "tag",
											"source": 16,
											"value": "8"
										},
										{
											"begin": 455,
											"end": 923,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 455,
											"end": 923,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 932,
											"end": 950,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 285,
											"end": 957,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 285,
											"end": 957,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 285,
											"end": 957,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 285,
											"end": 957,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 285,
											"end": 957,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 285,
											"end": 957,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 285,
											"end": 957,
											"name": "JUMP",
											"source": 16,
											"value": "[out]"
										},
										{
											"begin": 270,
											"end": 927,
											"name": "tag",
											"source": 14,
											"value": "17"
										},
										{
											"begin": 270,
											"end": 927,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 367,
											"end": 377,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 415,
											"end": 416,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 401,
											"end": 411,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 401,
											"end": 416,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFF"
										},
										{
											"begin": 401,
											"end": 416,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 401,
											"end": 416,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 401,
											"end": 416,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 393,
											"end": 423,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "29"
										},
										{
											"begin": 393,
											"end": 423,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 393,
											"end": 423,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 393,
											"end": 423,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 393,
											"end": 423,
											"name": "PUSH",
											"source": 14,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 393,
											"end": 423,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 393,
											"end": 423,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 393,
											"end": 423,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 393,
											"end": 423,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 393,
											"end": 423,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 393,
											"end": 423,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 393,
											"end": 423,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 393,
											"end": 423,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 393,
											"end": 423,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 393,
											"end": 423,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 393,
											"end": 423,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 393,
											"end": 423,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 393,
											"end": 423,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 393,
											"end": 423,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 393,
											"end": 423,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 393,
											"end": 423,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 393,
											"end": 423,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 393,
											"end": 423,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 393,
											"end": 423,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 393,
											"end": 423,
											"name": "PUSH",
											"source": 14,
											"value": "4250000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 393,
											"end": 423,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 393,
											"end": 423,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 393,
											"end": 423,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 393,
											"end": 423,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 393,
											"end": 423,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 393,
											"end": 423,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 393,
											"end": 423,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 393,
											"end": 423,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 393,
											"end": 423,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 393,
											"end": 423,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 393,
											"end": 423,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 393,
											"end": 423,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 393,
											"end": 423,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 393,
											"end": 423,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 393,
											"end": 423,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 393,
											"end": 423,
											"name": "tag",
											"source": 14,
											"value": "29"
										},
										{
											"begin": 393,
											"end": 423,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 434,
											"end": 461,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 477,
											"end": 478,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 464,
											"end": 479,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 464,
											"end": 479,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 464,
											"end": 479,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 464,
											"end": 479,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 464,
											"end": 479,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 464,
											"end": 479,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "30"
										},
										{
											"begin": 464,
											"end": 479,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 464,
											"end": 479,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 464,
											"end": 479,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 464,
											"end": 479,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 464,
											"end": 479,
											"name": "tag",
											"source": 14,
											"value": "30"
										},
										{
											"begin": 464,
											"end": 479,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 464,
											"end": 479,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 464,
											"end": 479,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 464,
											"end": 479,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 464,
											"end": 479,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 464,
											"end": 479,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 464,
											"end": 479,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 464,
											"end": 479,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 464,
											"end": 479,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 464,
											"end": 479,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 464,
											"end": 479,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 464,
											"end": 479,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 464,
											"end": 479,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 464,
											"end": 479,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 464,
											"end": 479,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 464,
											"end": 479,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 464,
											"end": 479,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 464,
											"end": 479,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 464,
											"end": 479,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 464,
											"end": 479,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "31"
										},
										{
											"begin": 464,
											"end": 479,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 464,
											"end": 479,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 464,
											"end": 479,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 464,
											"end": 479,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 464,
											"end": 479,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 464,
											"end": 479,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 464,
											"end": 479,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 464,
											"end": 479,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 464,
											"end": 479,
											"name": "CALLDATASIZE",
											"source": 14
										},
										{
											"begin": 464,
											"end": 479,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 464,
											"end": 479,
											"name": "CALLDATACOPY",
											"source": 14
										},
										{
											"begin": 464,
											"end": 479,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 464,
											"end": 479,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 464,
											"end": 479,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 464,
											"end": 479,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 464,
											"end": 479,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 464,
											"end": 479,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 464,
											"end": 479,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 464,
											"end": 479,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 464,
											"end": 479,
											"name": "tag",
											"source": 14,
											"value": "31"
										},
										{
											"begin": 464,
											"end": 479,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 464,
											"end": 479,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 434,
											"end": 479,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 434,
											"end": 479,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 506,
											"end": 516,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 489,
											"end": 500,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 501,
											"end": 502,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 489,
											"end": 503,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 489,
											"end": 503,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 489,
											"end": 503,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 489,
											"end": 503,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 489,
											"end": 503,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "32"
										},
										{
											"begin": 489,
											"end": 503,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 489,
											"end": 503,
											"name": "INVALID",
											"source": 14
										},
										{
											"begin": 489,
											"end": 503,
											"name": "tag",
											"source": 14,
											"value": "32"
										},
										{
											"begin": 489,
											"end": 503,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 489,
											"end": 503,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 489,
											"end": 503,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 489,
											"end": 503,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 489,
											"end": 503,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 489,
											"end": 503,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 489,
											"end": 516,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 489,
											"end": 516,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFF"
										},
										{
											"begin": 489,
											"end": 516,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 489,
											"end": 516,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 489,
											"end": 516,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 489,
											"end": 516,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFF"
										},
										{
											"begin": 489,
											"end": 516,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 489,
											"end": 516,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 489,
											"end": 516,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 489,
											"end": 516,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 489,
											"end": 516,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 543,
											"end": 544,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 526,
											"end": 537,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 538,
											"end": 539,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 526,
											"end": 540,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 526,
											"end": 540,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 526,
											"end": 540,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 526,
											"end": 540,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 526,
											"end": 540,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "33"
										},
										{
											"begin": 526,
											"end": 540,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 526,
											"end": 540,
											"name": "INVALID",
											"source": 14
										},
										{
											"begin": 526,
											"end": 540,
											"name": "tag",
											"source": 14,
											"value": "33"
										},
										{
											"begin": 526,
											"end": 540,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 526,
											"end": 540,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 526,
											"end": 540,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 526,
											"end": 540,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 526,
											"end": 540,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 526,
											"end": 540,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 526,
											"end": 544,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 526,
											"end": 544,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFF"
										},
										{
											"begin": 526,
											"end": 544,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 526,
											"end": 544,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 526,
											"end": 544,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 526,
											"end": 544,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFF"
										},
										{
											"begin": 526,
											"end": 544,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 526,
											"end": 544,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 526,
											"end": 544,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 526,
											"end": 544,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 526,
											"end": 544,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 556,
											"end": 586,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 619,
											"end": 623,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 604,
											"end": 632,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 604,
											"end": 632,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 604,
											"end": 632,
											"name": "PUSH",
											"source": 14,
											"value": "883BDBFD"
										},
										{
											"begin": 633,
											"end": 644,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 604,
											"end": 645,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFF"
										},
										{
											"begin": 604,
											"end": 645,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "PUSH",
											"source": 14,
											"value": "E0"
										},
										{
											"begin": 604,
											"end": 645,
											"name": "SHL",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 604,
											"end": 645,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 604,
											"end": 645,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 604,
											"end": 645,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 604,
											"end": 645,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 604,
											"end": 645,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 604,
											"end": 645,
											"name": "tag",
											"source": 14,
											"value": "34"
										},
										{
											"begin": 604,
											"end": 645,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "36"
										},
										{
											"begin": 604,
											"end": 645,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 604,
											"end": 645,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "34"
										},
										{
											"begin": 604,
											"end": 645,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "tag",
											"source": 14,
											"value": "36"
										},
										{
											"begin": 604,
											"end": 645,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 604,
											"end": 645,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 604,
											"end": 645,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "EXTCODESIZE",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "37"
										},
										{
											"begin": 604,
											"end": 645,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 604,
											"end": 645,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "tag",
											"source": 14,
											"value": "37"
										},
										{
											"begin": 604,
											"end": 645,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "GAS",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "STATICCALL",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "39"
										},
										{
											"begin": 604,
											"end": 645,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 604,
											"end": 645,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "RETURNDATACOPY",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 604,
											"end": 645,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "tag",
											"source": 14,
											"value": "39"
										},
										{
											"begin": 604,
											"end": 645,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 604,
											"end": 645,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 604,
											"end": 645,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "RETURNDATACOPY",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 604,
											"end": 645,
											"name": "NOT",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 604,
											"end": 645,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 604,
											"end": 645,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 604,
											"end": 645,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 604,
											"end": 645,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 604,
											"end": 645,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "tag",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 604,
											"end": 645,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 604,
											"end": 645,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "PUSH",
											"source": 14,
											"value": "100000000"
										},
										{
											"begin": 604,
											"end": 645,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "41"
										},
										{
											"begin": 604,
											"end": 645,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 604,
											"end": 645,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "tag",
											"source": 14,
											"value": "41"
										},
										{
											"begin": 604,
											"end": 645,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 604,
											"end": 645,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "42"
										},
										{
											"begin": 604,
											"end": 645,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 604,
											"end": 645,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "tag",
											"source": 14,
											"value": "42"
										},
										{
											"begin": 604,
											"end": 645,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 604,
											"end": 645,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "PUSH",
											"source": 14,
											"value": "100000000"
										},
										{
											"begin": 604,
											"end": 645,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "OR",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "43"
										},
										{
											"begin": 604,
											"end": 645,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 604,
											"end": 645,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "tag",
											"source": 14,
											"value": "43"
										},
										{
											"begin": 604,
											"end": 645,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 604,
											"end": 645,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 604,
											"end": 645,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 604,
											"end": 645,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 604,
											"end": 645,
											"name": "tag",
											"source": 14,
											"value": "44"
										},
										{
											"begin": 604,
											"end": 645,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "46"
										},
										{
											"begin": 604,
											"end": 645,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 604,
											"end": 645,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "44"
										},
										{
											"begin": 604,
											"end": 645,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "tag",
											"source": 14,
											"value": "46"
										},
										{
											"begin": 604,
											"end": 645,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 604,
											"end": 645,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 604,
											"end": 645,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 604,
											"end": 645,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "PUSH",
											"source": 14,
											"value": "100000000"
										},
										{
											"begin": 604,
											"end": 645,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "47"
										},
										{
											"begin": 604,
											"end": 645,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 604,
											"end": 645,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "tag",
											"source": 14,
											"value": "47"
										},
										{
											"begin": 604,
											"end": 645,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 604,
											"end": 645,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "48"
										},
										{
											"begin": 604,
											"end": 645,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 604,
											"end": 645,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "tag",
											"source": 14,
											"value": "48"
										},
										{
											"begin": 604,
											"end": 645,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 604,
											"end": 645,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "PUSH",
											"source": 14,
											"value": "100000000"
										},
										{
											"begin": 604,
											"end": 645,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "OR",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "49"
										},
										{
											"begin": 604,
											"end": 645,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 604,
											"end": 645,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "tag",
											"source": 14,
											"value": "49"
										},
										{
											"begin": 604,
											"end": 645,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 604,
											"end": 645,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 604,
											"end": 645,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 604,
											"end": 645,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 604,
											"end": 645,
											"name": "tag",
											"source": 14,
											"value": "50"
										},
										{
											"begin": 604,
											"end": 645,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "52"
										},
										{
											"begin": 604,
											"end": 645,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 604,
											"end": 645,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "50"
										},
										{
											"begin": 604,
											"end": 645,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "tag",
											"source": 14,
											"value": "52"
										},
										{
											"begin": 604,
											"end": 645,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 604,
											"end": 645,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 604,
											"end": 645,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 555,
											"end": 645,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 555,
											"end": 645,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 555,
											"end": 645,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 656,
											"end": 682,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 706,
											"end": 721,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 722,
											"end": 723,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 706,
											"end": 724,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 706,
											"end": 724,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 706,
											"end": 724,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 706,
											"end": 724,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 706,
											"end": 724,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "53"
										},
										{
											"begin": 706,
											"end": 724,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 706,
											"end": 724,
											"name": "INVALID",
											"source": 14
										},
										{
											"begin": 706,
											"end": 724,
											"name": "tag",
											"source": 14,
											"value": "53"
										},
										{
											"begin": 706,
											"end": 724,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 706,
											"end": 724,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 706,
											"end": 724,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 706,
											"end": 724,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 706,
											"end": 724,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 706,
											"end": 724,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 706,
											"end": 724,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 685,
											"end": 700,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 701,
											"end": 702,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 685,
											"end": 703,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 685,
											"end": 703,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 685,
											"end": 703,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 685,
											"end": 703,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 685,
											"end": 703,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "54"
										},
										{
											"begin": 685,
											"end": 703,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 685,
											"end": 703,
											"name": "INVALID",
											"source": 14
										},
										{
											"begin": 685,
											"end": 703,
											"name": "tag",
											"source": 14,
											"value": "54"
										},
										{
											"begin": 685,
											"end": 703,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 685,
											"end": 703,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 685,
											"end": 703,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 685,
											"end": 703,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 685,
											"end": 703,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 685,
											"end": 703,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 685,
											"end": 703,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 685,
											"end": 724,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 656,
											"end": 724,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 656,
											"end": 724,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 773,
											"end": 783,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 750,
											"end": 783,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFF"
										},
										{
											"begin": 750,
											"end": 783,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 750,
											"end": 770,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 750,
											"end": 783,
											"name": "PUSH",
											"source": 14,
											"value": "6"
										},
										{
											"begin": 750,
											"end": 783,
											"name": "SIGNEXTEND",
											"source": 14
										},
										{
											"begin": 750,
											"end": 783,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 750,
											"end": 783,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "55"
										},
										{
											"begin": 750,
											"end": 783,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 750,
											"end": 783,
											"name": "INVALID",
											"source": 14
										},
										{
											"begin": 750,
											"end": 783,
											"name": "tag",
											"source": 14,
											"value": "55"
										},
										{
											"begin": 750,
											"end": 783,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 750,
											"end": 783,
											"name": "SDIV",
											"source": 14
										},
										{
											"begin": 737,
											"end": 784,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 737,
											"end": 784,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 866,
											"end": 867,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 843,
											"end": 863,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 843,
											"end": 867,
											"name": "PUSH",
											"source": 14,
											"value": "6"
										},
										{
											"begin": 843,
											"end": 867,
											"name": "SIGNEXTEND",
											"source": 14
										},
										{
											"begin": 843,
											"end": 867,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 843,
											"end": 911,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 843,
											"end": 911,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 843,
											"end": 911,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "56"
										},
										{
											"begin": 843,
											"end": 911,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 843,
											"end": 911,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 909,
											"end": 910,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 895,
											"end": 905,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 872,
											"end": 905,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFF"
										},
										{
											"begin": 872,
											"end": 905,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 872,
											"end": 892,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 872,
											"end": 905,
											"name": "PUSH",
											"source": 14,
											"value": "6"
										},
										{
											"begin": 872,
											"end": 905,
											"name": "SIGNEXTEND",
											"source": 14
										},
										{
											"begin": 872,
											"end": 905,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 872,
											"end": 905,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "57"
										},
										{
											"begin": 872,
											"end": 905,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 872,
											"end": 905,
											"name": "INVALID",
											"source": 14
										},
										{
											"begin": 872,
											"end": 905,
											"name": "tag",
											"source": 14,
											"value": "57"
										},
										{
											"begin": 872,
											"end": 905,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 872,
											"end": 905,
											"name": "SMOD",
											"source": 14
										},
										{
											"begin": 872,
											"end": 910,
											"name": "PUSH",
											"source": 14,
											"value": "6"
										},
										{
											"begin": 872,
											"end": 910,
											"name": "SIGNEXTEND",
											"source": 14
										},
										{
											"begin": 872,
											"end": 910,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 872,
											"end": 910,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 843,
											"end": 911,
											"name": "tag",
											"source": 14,
											"value": "56"
										},
										{
											"begin": 843,
											"end": 911,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 839,
											"end": 919,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 839,
											"end": 919,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "58"
										},
										{
											"begin": 839,
											"end": 919,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 913,
											"end": 919,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 913,
											"end": 919,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 913,
											"end": 919,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 913,
											"end": 919,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 913,
											"end": 919,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 913,
											"end": 919,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 913,
											"end": 919,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 913,
											"end": 919,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 839,
											"end": 919,
											"name": "tag",
											"source": 14,
											"value": "58"
										},
										{
											"begin": 839,
											"end": 919,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 270,
											"end": 927,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 270,
											"end": 927,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 270,
											"end": 927,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 270,
											"end": 927,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 270,
											"end": 927,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 270,
											"end": 927,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 270,
											"end": 927,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 270,
											"end": 927,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 934,
											"end": 1889,
											"name": "tag",
											"source": 14,
											"value": "23"
										},
										{
											"begin": 934,
											"end": 1889,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1090,
											"end": 1109,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1121,
											"end": 1141,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1144,
											"end": 1177,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 1172,
											"end": 1176,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 1144,
											"end": 1171,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "61"
										},
										{
											"begin": 1144,
											"end": 1177,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 1144,
											"end": 1177,
											"name": "tag",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 1144,
											"end": 1177,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1121,
											"end": 1177,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1121,
											"end": 1177,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1312,
											"end": 1329,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1296,
											"end": 1329,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1296,
											"end": 1329,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 1296,
											"end": 1308,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1296,
											"end": 1329,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1296,
											"end": 1329,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 1296,
											"end": 1329,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 1292,
											"end": 1883,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "62"
										},
										{
											"begin": 1292,
											"end": 1883,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 1345,
											"end": 1362,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1389,
											"end": 1401,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1365,
											"end": 1401,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1365,
											"end": 1401,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 1373,
											"end": 1385,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1365,
											"end": 1386,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1365,
											"end": 1386,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 1365,
											"end": 1401,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 1345,
											"end": 1401,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1345,
											"end": 1401,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1441,
											"end": 1451,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 1429,
											"end": 1451,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1429,
											"end": 1451,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 1429,
											"end": 1438,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 1429,
											"end": 1451,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1429,
											"end": 1451,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 1429,
											"end": 1451,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 1429,
											"end": 1585,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "63"
										},
										{
											"begin": 1429,
											"end": 1585,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 1537,
											"end": 1585,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "64"
										},
										{
											"begin": 1553,
											"end": 1561,
											"name": "PUSH",
											"source": 14,
											"value": "1000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1563,
											"end": 1573,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 1537,
											"end": 1585,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1537,
											"end": 1585,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 1575,
											"end": 1584,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 1537,
											"end": 1552,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "65"
										},
										{
											"begin": 1537,
											"end": 1585,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 1537,
											"end": 1585,
											"name": "tag",
											"source": 14,
											"value": "64"
										},
										{
											"begin": 1537,
											"end": 1585,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1429,
											"end": 1585,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "66"
										},
										{
											"begin": 1429,
											"end": 1585,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1429,
											"end": 1585,
											"name": "tag",
											"source": 14,
											"value": "63"
										},
										{
											"begin": 1429,
											"end": 1585,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1470,
											"end": 1518,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "67"
										},
										{
											"begin": 1486,
											"end": 1495,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1497,
											"end": 1507,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 1470,
											"end": 1518,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1470,
											"end": 1518,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 1509,
											"end": 1517,
											"name": "PUSH",
											"source": 14,
											"value": "1000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1470,
											"end": 1485,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "65"
										},
										{
											"begin": 1470,
											"end": 1518,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 1470,
											"end": 1518,
											"name": "tag",
											"source": 14,
											"value": "67"
										},
										{
											"begin": 1470,
											"end": 1518,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1429,
											"end": 1585,
											"name": "tag",
											"source": 14,
											"value": "66"
										},
										{
											"begin": 1429,
											"end": 1585,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1415,
											"end": 1585,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 1415,
											"end": 1585,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1292,
											"end": 1883,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1292,
											"end": 1883,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "68"
										},
										{
											"begin": 1292,
											"end": 1883,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1292,
											"end": 1883,
											"name": "tag",
											"source": 14,
											"value": "62"
										},
										{
											"begin": 1292,
											"end": 1883,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1616,
											"end": 1633,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1636,
											"end": 1688,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "69"
										},
										{
											"begin": 1652,
											"end": 1664,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1636,
											"end": 1688,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1636,
											"end": 1688,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 1666,
											"end": 1678,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 1636,
											"end": 1688,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1636,
											"end": 1688,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 1680,
											"end": 1687,
											"name": "PUSH",
											"source": 14,
											"value": "10000000000000000"
										},
										{
											"begin": 1636,
											"end": 1651,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "65"
										},
										{
											"begin": 1636,
											"end": 1688,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 1636,
											"end": 1688,
											"name": "tag",
											"source": 14,
											"value": "69"
										},
										{
											"begin": 1636,
											"end": 1688,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1616,
											"end": 1688,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1616,
											"end": 1688,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1728,
											"end": 1738,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 1716,
											"end": 1738,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1716,
											"end": 1738,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 1716,
											"end": 1725,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 1716,
											"end": 1738,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1716,
											"end": 1738,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 1716,
											"end": 1738,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 1716,
											"end": 1872,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "70"
										},
										{
											"begin": 1716,
											"end": 1872,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 1824,
											"end": 1872,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "71"
										},
										{
											"begin": 1840,
											"end": 1848,
											"name": "PUSH",
											"source": 14,
											"value": "100000000000000000000000000000000"
										},
										{
											"begin": 1850,
											"end": 1860,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 1824,
											"end": 1872,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1824,
											"end": 1872,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 1862,
											"end": 1871,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 1824,
											"end": 1839,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "65"
										},
										{
											"begin": 1824,
											"end": 1872,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 1824,
											"end": 1872,
											"name": "tag",
											"source": 14,
											"value": "71"
										},
										{
											"begin": 1824,
											"end": 1872,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1716,
											"end": 1872,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "72"
										},
										{
											"begin": 1716,
											"end": 1872,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1716,
											"end": 1872,
											"name": "tag",
											"source": 14,
											"value": "70"
										},
										{
											"begin": 1716,
											"end": 1872,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1757,
											"end": 1805,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "73"
										},
										{
											"begin": 1773,
											"end": 1782,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1784,
											"end": 1794,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 1757,
											"end": 1805,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1757,
											"end": 1805,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 1796,
											"end": 1804,
											"name": "PUSH",
											"source": 14,
											"value": "100000000000000000000000000000000"
										},
										{
											"begin": 1757,
											"end": 1772,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "65"
										},
										{
											"begin": 1757,
											"end": 1805,
											"name": "JUMP",
											"source": 14,
											"value": "[in]"
										},
										{
											"begin": 1757,
											"end": 1805,
											"name": "tag",
											"source": 14,
											"value": "73"
										},
										{
											"begin": 1757,
											"end": 1805,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1716,
											"end": 1872,
											"name": "tag",
											"source": 14,
											"value": "72"
										},
										{
											"begin": 1716,
											"end": 1872,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1702,
											"end": 1872,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 1702,
											"end": 1872,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1292,
											"end": 1883,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1292,
											"end": 1883,
											"name": "tag",
											"source": 14,
											"value": "68"
										},
										{
											"begin": 1292,
											"end": 1883,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 934,
											"end": 1889,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 934,
											"end": 1889,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 934,
											"end": 1889,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 934,
											"end": 1889,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 934,
											"end": 1889,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 934,
											"end": 1889,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 934,
											"end": 1889,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 934,
											"end": 1889,
											"name": "JUMP",
											"source": 14,
											"value": "[out]"
										},
										{
											"begin": 1362,
											"end": 3942,
											"name": "tag",
											"source": 10,
											"value": "61"
										},
										{
											"begin": 1362,
											"end": 3942,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1425,
											"end": 1445,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1457,
											"end": 1472,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1482,
											"end": 1483,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1475,
											"end": 1479,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1475,
											"end": 1483,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 1475,
											"end": 1483,
											"name": "SIGNEXTEND",
											"source": 10
										},
										{
											"begin": 1475,
											"end": 1483,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 1475,
											"end": 1532,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "75"
										},
										{
											"begin": 1475,
											"end": 1532,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1526,
											"end": 1530,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1519,
											"end": 1531,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 1519,
											"end": 1531,
											"name": "SIGNEXTEND",
											"source": 10
										},
										{
											"begin": 1475,
											"end": 1532,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "76"
										},
										{
											"begin": 1475,
											"end": 1532,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1475,
											"end": 1532,
											"name": "tag",
											"source": 10,
											"value": "75"
										},
										{
											"begin": 1475,
											"end": 1532,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1502,
											"end": 1506,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1495,
											"end": 1507,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 1495,
											"end": 1507,
											"name": "SIGNEXTEND",
											"source": 10
										},
										{
											"begin": 1494,
											"end": 1507,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1494,
											"end": 1507,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1475,
											"end": 1532,
											"name": "tag",
											"source": 10,
											"value": "76"
										},
										{
											"begin": 1475,
											"end": 1532,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1457,
											"end": 1532,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1457,
											"end": 1532,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 484,
											"end": 491,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF27618"
										},
										{
											"begin": 644,
											"end": 653,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 644,
											"end": 653,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1561,
											"end": 1578,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 1561,
											"end": 1578,
											"name": "SIGNEXTEND",
											"source": 10
										},
										{
											"begin": 1550,
											"end": 1557,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1550,
											"end": 1578,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 1550,
											"end": 1578,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1542,
											"end": 1584,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "77"
										},
										{
											"begin": 1542,
											"end": 1584,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1542,
											"end": 1584,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1542,
											"end": 1584,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1542,
											"end": 1584,
											"name": "PUSH",
											"source": 10,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1542,
											"end": 1584,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1542,
											"end": 1584,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1542,
											"end": 1584,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1542,
											"end": 1584,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1542,
											"end": 1584,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1542,
											"end": 1584,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1542,
											"end": 1584,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1542,
											"end": 1584,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1542,
											"end": 1584,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1542,
											"end": 1584,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1542,
											"end": 1584,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1542,
											"end": 1584,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1542,
											"end": 1584,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1542,
											"end": 1584,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 1542,
											"end": 1584,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1542,
											"end": 1584,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1542,
											"end": 1584,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1542,
											"end": 1584,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1542,
											"end": 1584,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1542,
											"end": 1584,
											"name": "PUSH",
											"source": 10,
											"value": "5400000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1542,
											"end": 1584,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1542,
											"end": 1584,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1542,
											"end": 1584,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1542,
											"end": 1584,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1542,
											"end": 1584,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1542,
											"end": 1584,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1542,
											"end": 1584,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1542,
											"end": 1584,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1542,
											"end": 1584,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1542,
											"end": 1584,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1542,
											"end": 1584,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1542,
											"end": 1584,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1542,
											"end": 1584,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1542,
											"end": 1584,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1542,
											"end": 1584,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1542,
											"end": 1584,
											"name": "tag",
											"source": 10,
											"value": "77"
										},
										{
											"begin": 1542,
											"end": 1584,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1595,
											"end": 1608,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1628,
											"end": 1629,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1621,
											"end": 1624,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 1611,
											"end": 1618,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1611,
											"end": 1624,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1611,
											"end": 1629,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1611,
											"end": 1629,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1611,
											"end": 1704,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "78"
										},
										{
											"begin": 1611,
											"end": 1704,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1669,
											"end": 1704,
											"name": "PUSH",
											"source": 10,
											"value": "100000000000000000000000000000000"
										},
										{
											"begin": 1611,
											"end": 1704,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "79"
										},
										{
											"begin": 1611,
											"end": 1704,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1611,
											"end": 1704,
											"name": "tag",
											"source": 10,
											"value": "78"
										},
										{
											"begin": 1611,
											"end": 1704,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1632,
											"end": 1666,
											"name": "PUSH",
											"source": 10,
											"value": "FFFCB933BD6FAD37AA2D162D1A594001"
										},
										{
											"begin": 1611,
											"end": 1704,
											"name": "tag",
											"source": 10,
											"value": "79"
										},
										{
											"begin": 1611,
											"end": 1704,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1595,
											"end": 1704,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1595,
											"end": 1704,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1595,
											"end": 1704,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1595,
											"end": 1704,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1735,
											"end": 1736,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1728,
											"end": 1731,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 1718,
											"end": 1725,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1718,
											"end": 1731,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1718,
											"end": 1736,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1714,
											"end": 1797,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 1714,
											"end": 1797,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1794,
											"end": 1797,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 1755,
											"end": 1789,
											"name": "PUSH",
											"source": 10,
											"value": "FFF97272373D413259A46990580E213A"
										},
										{
											"begin": 1747,
											"end": 1752,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1747,
											"end": 1789,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 1746,
											"end": 1797,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1746,
											"end": 1797,
											"name": "SHR",
											"source": 10
										},
										{
											"begin": 1738,
											"end": 1797,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1738,
											"end": 1797,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1714,
											"end": 1797,
											"name": "tag",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 1714,
											"end": 1797,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1828,
											"end": 1829,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1821,
											"end": 1824,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1811,
											"end": 1818,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1811,
											"end": 1824,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1811,
											"end": 1829,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1807,
											"end": 1890,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "81"
										},
										{
											"begin": 1807,
											"end": 1890,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1887,
											"end": 1890,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 1848,
											"end": 1882,
											"name": "PUSH",
											"source": 10,
											"value": "FFF2E50F5F656932EF12357CF3C7FDCC"
										},
										{
											"begin": 1840,
											"end": 1845,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1840,
											"end": 1882,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 1839,
											"end": 1890,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1839,
											"end": 1890,
											"name": "SHR",
											"source": 10
										},
										{
											"begin": 1831,
											"end": 1890,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1831,
											"end": 1890,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1807,
											"end": 1890,
											"name": "tag",
											"source": 10,
											"value": "81"
										},
										{
											"begin": 1807,
											"end": 1890,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1921,
											"end": 1922,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1914,
											"end": 1917,
											"name": "PUSH",
											"source": 10,
											"value": "8"
										},
										{
											"begin": 1904,
											"end": 1911,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1904,
											"end": 1917,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1904,
											"end": 1922,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1900,
											"end": 1983,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "82"
										},
										{
											"begin": 1900,
											"end": 1983,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1980,
											"end": 1983,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 1941,
											"end": 1975,
											"name": "PUSH",
											"source": 10,
											"value": "FFE5CACA7E10E4E61C3624EAA0941CD0"
										},
										{
											"begin": 1933,
											"end": 1938,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1933,
											"end": 1975,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 1932,
											"end": 1983,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1932,
											"end": 1983,
											"name": "SHR",
											"source": 10
										},
										{
											"begin": 1924,
											"end": 1983,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1924,
											"end": 1983,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1900,
											"end": 1983,
											"name": "tag",
											"source": 10,
											"value": "82"
										},
										{
											"begin": 1900,
											"end": 1983,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2015,
											"end": 2016,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2007,
											"end": 2011,
											"name": "PUSH",
											"source": 10,
											"value": "10"
										},
										{
											"begin": 1997,
											"end": 2004,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1997,
											"end": 2011,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1997,
											"end": 2016,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1993,
											"end": 2077,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "83"
										},
										{
											"begin": 1993,
											"end": 2077,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2074,
											"end": 2077,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 2035,
											"end": 2069,
											"name": "PUSH",
											"source": 10,
											"value": "FFCB9843D60F6159C9DB58835C926644"
										},
										{
											"begin": 2027,
											"end": 2032,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2027,
											"end": 2069,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 2026,
											"end": 2077,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2026,
											"end": 2077,
											"name": "SHR",
											"source": 10
										},
										{
											"begin": 2018,
											"end": 2077,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2018,
											"end": 2077,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1993,
											"end": 2077,
											"name": "tag",
											"source": 10,
											"value": "83"
										},
										{
											"begin": 1993,
											"end": 2077,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2109,
											"end": 2110,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2101,
											"end": 2105,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2091,
											"end": 2098,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2091,
											"end": 2105,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2091,
											"end": 2110,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 2087,
											"end": 2171,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 2087,
											"end": 2171,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2168,
											"end": 2171,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 2129,
											"end": 2163,
											"name": "PUSH",
											"source": 10,
											"value": "FF973B41FA98C081472E6896DFB254C0"
										},
										{
											"begin": 2121,
											"end": 2126,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2121,
											"end": 2163,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 2120,
											"end": 2171,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2120,
											"end": 2171,
											"name": "SHR",
											"source": 10
										},
										{
											"begin": 2112,
											"end": 2171,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2112,
											"end": 2171,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2087,
											"end": 2171,
											"name": "tag",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 2087,
											"end": 2171,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2203,
											"end": 2204,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2195,
											"end": 2199,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2185,
											"end": 2192,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2185,
											"end": 2199,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2185,
											"end": 2204,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 2181,
											"end": 2265,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "85"
										},
										{
											"begin": 2181,
											"end": 2265,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2262,
											"end": 2265,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 2223,
											"end": 2257,
											"name": "PUSH",
											"source": 10,
											"value": "FF2EA16466C96A3843EC78B326B52861"
										},
										{
											"begin": 2215,
											"end": 2220,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2215,
											"end": 2257,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 2214,
											"end": 2265,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2214,
											"end": 2265,
											"name": "SHR",
											"source": 10
										},
										{
											"begin": 2206,
											"end": 2265,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2206,
											"end": 2265,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2181,
											"end": 2265,
											"name": "tag",
											"source": 10,
											"value": "85"
										},
										{
											"begin": 2181,
											"end": 2265,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2297,
											"end": 2298,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2289,
											"end": 2293,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 2279,
											"end": 2286,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2279,
											"end": 2293,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2279,
											"end": 2298,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 2275,
											"end": 2359,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "86"
										},
										{
											"begin": 2275,
											"end": 2359,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2356,
											"end": 2359,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 2317,
											"end": 2351,
											"name": "PUSH",
											"source": 10,
											"value": "FE5DEE046A99A2A811C461F1969C3053"
										},
										{
											"begin": 2309,
											"end": 2314,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2309,
											"end": 2351,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 2308,
											"end": 2359,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2308,
											"end": 2359,
											"name": "SHR",
											"source": 10
										},
										{
											"begin": 2300,
											"end": 2359,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2300,
											"end": 2359,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2275,
											"end": 2359,
											"name": "tag",
											"source": 10,
											"value": "86"
										},
										{
											"begin": 2275,
											"end": 2359,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2392,
											"end": 2393,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2383,
											"end": 2388,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 2373,
											"end": 2380,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2373,
											"end": 2388,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2373,
											"end": 2393,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 2369,
											"end": 2454,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "87"
										},
										{
											"begin": 2369,
											"end": 2454,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2451,
											"end": 2454,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 2412,
											"end": 2446,
											"name": "PUSH",
											"source": 10,
											"value": "FCBE86C7900A88AEDCFFC83B479AA3A4"
										},
										{
											"begin": 2404,
											"end": 2409,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2404,
											"end": 2446,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 2403,
											"end": 2454,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2403,
											"end": 2454,
											"name": "SHR",
											"source": 10
										},
										{
											"begin": 2395,
											"end": 2454,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2395,
											"end": 2454,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2369,
											"end": 2454,
											"name": "tag",
											"source": 10,
											"value": "87"
										},
										{
											"begin": 2369,
											"end": 2454,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2487,
											"end": 2488,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2478,
											"end": 2483,
											"name": "PUSH",
											"source": 10,
											"value": "200"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2468,
											"end": 2483,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2468,
											"end": 2488,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 2464,
											"end": 2549,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "88"
										},
										{
											"begin": 2464,
											"end": 2549,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2546,
											"end": 2549,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 2507,
											"end": 2541,
											"name": "PUSH",
											"source": 10,
											"value": "F987A7253AC413176F2B074CF7815E54"
										},
										{
											"begin": 2499,
											"end": 2504,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2499,
											"end": 2541,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 2498,
											"end": 2549,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2498,
											"end": 2549,
											"name": "SHR",
											"source": 10
										},
										{
											"begin": 2490,
											"end": 2549,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2490,
											"end": 2549,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2464,
											"end": 2549,
											"name": "tag",
											"source": 10,
											"value": "88"
										},
										{
											"begin": 2464,
											"end": 2549,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2582,
											"end": 2583,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2573,
											"end": 2578,
											"name": "PUSH",
											"source": 10,
											"value": "400"
										},
										{
											"begin": 2563,
											"end": 2570,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2563,
											"end": 2578,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2563,
											"end": 2583,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 2559,
											"end": 2644,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "89"
										},
										{
											"begin": 2559,
											"end": 2644,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2641,
											"end": 2644,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 2602,
											"end": 2636,
											"name": "PUSH",
											"source": 10,
											"value": "F3392B0822B70005940C7A398E4B70F3"
										},
										{
											"begin": 2594,
											"end": 2599,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2594,
											"end": 2636,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 2593,
											"end": 2644,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2593,
											"end": 2644,
											"name": "SHR",
											"source": 10
										},
										{
											"begin": 2585,
											"end": 2644,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2585,
											"end": 2644,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2559,
											"end": 2644,
											"name": "tag",
											"source": 10,
											"value": "89"
										},
										{
											"begin": 2559,
											"end": 2644,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2677,
											"end": 2678,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2668,
											"end": 2673,
											"name": "PUSH",
											"source": 10,
											"value": "800"
										},
										{
											"begin": 2658,
											"end": 2665,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2658,
											"end": 2673,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2658,
											"end": 2678,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 2654,
											"end": 2739,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "90"
										},
										{
											"begin": 2654,
											"end": 2739,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2736,
											"end": 2739,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 2697,
											"end": 2731,
											"name": "PUSH",
											"source": 10,
											"value": "E7159475A2C29B7443B29C7FA6E889D9"
										},
										{
											"begin": 2689,
											"end": 2694,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2689,
											"end": 2731,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 2688,
											"end": 2739,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2688,
											"end": 2739,
											"name": "SHR",
											"source": 10
										},
										{
											"begin": 2680,
											"end": 2739,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2680,
											"end": 2739,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2654,
											"end": 2739,
											"name": "tag",
											"source": 10,
											"value": "90"
										},
										{
											"begin": 2654,
											"end": 2739,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2773,
											"end": 2774,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2763,
											"end": 2769,
											"name": "PUSH",
											"source": 10,
											"value": "1000"
										},
										{
											"begin": 2753,
											"end": 2760,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2753,
											"end": 2769,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2753,
											"end": 2774,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 2749,
											"end": 2835,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "91"
										},
										{
											"begin": 2749,
											"end": 2835,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2832,
											"end": 2835,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 2793,
											"end": 2827,
											"name": "PUSH",
											"source": 10,
											"value": "D097F3BDFD2022B8845AD8F792AA5825"
										},
										{
											"begin": 2785,
											"end": 2790,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2785,
											"end": 2827,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 2784,
											"end": 2835,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2784,
											"end": 2835,
											"name": "SHR",
											"source": 10
										},
										{
											"begin": 2776,
											"end": 2835,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2776,
											"end": 2835,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2749,
											"end": 2835,
											"name": "tag",
											"source": 10,
											"value": "91"
										},
										{
											"begin": 2749,
											"end": 2835,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2869,
											"end": 2870,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2859,
											"end": 2865,
											"name": "PUSH",
											"source": 10,
											"value": "2000"
										},
										{
											"begin": 2849,
											"end": 2856,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2849,
											"end": 2865,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2849,
											"end": 2870,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 2845,
											"end": 2931,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "92"
										},
										{
											"begin": 2845,
											"end": 2931,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2928,
											"end": 2931,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 2889,
											"end": 2923,
											"name": "PUSH",
											"source": 10,
											"value": "A9F746462D870FDF8A65DC1F90E061E5"
										},
										{
											"begin": 2881,
											"end": 2886,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2881,
											"end": 2923,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 2880,
											"end": 2931,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2880,
											"end": 2931,
											"name": "SHR",
											"source": 10
										},
										{
											"begin": 2872,
											"end": 2931,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2872,
											"end": 2931,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2845,
											"end": 2931,
											"name": "tag",
											"source": 10,
											"value": "92"
										},
										{
											"begin": 2845,
											"end": 2931,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2965,
											"end": 2966,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2955,
											"end": 2961,
											"name": "PUSH",
											"source": 10,
											"value": "4000"
										},
										{
											"begin": 2945,
											"end": 2952,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2945,
											"end": 2961,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2945,
											"end": 2966,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 2941,
											"end": 3027,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "93"
										},
										{
											"begin": 2941,
											"end": 3027,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3024,
											"end": 3027,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 2985,
											"end": 3019,
											"name": "PUSH",
											"source": 10,
											"value": "70D869A156D2A1B890BB3DF62BAF32F7"
										},
										{
											"begin": 2977,
											"end": 2982,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2977,
											"end": 3019,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 2976,
											"end": 3027,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2976,
											"end": 3027,
											"name": "SHR",
											"source": 10
										},
										{
											"begin": 2968,
											"end": 3027,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2968,
											"end": 3027,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2941,
											"end": 3027,
											"name": "tag",
											"source": 10,
											"value": "93"
										},
										{
											"begin": 2941,
											"end": 3027,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3061,
											"end": 3062,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3051,
											"end": 3057,
											"name": "PUSH",
											"source": 10,
											"value": "8000"
										},
										{
											"begin": 3041,
											"end": 3048,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3041,
											"end": 3057,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3041,
											"end": 3062,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 3037,
											"end": 3123,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "94"
										},
										{
											"begin": 3037,
											"end": 3123,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3120,
											"end": 3123,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 3081,
											"end": 3115,
											"name": "PUSH",
											"source": 10,
											"value": "31BE135F97D08FD981231505542FCFA6"
										},
										{
											"begin": 3073,
											"end": 3078,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3073,
											"end": 3115,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 3072,
											"end": 3123,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3072,
											"end": 3123,
											"name": "SHR",
											"source": 10
										},
										{
											"begin": 3064,
											"end": 3123,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3064,
											"end": 3123,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3037,
											"end": 3123,
											"name": "tag",
											"source": 10,
											"value": "94"
										},
										{
											"begin": 3037,
											"end": 3123,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3158,
											"end": 3159,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3147,
											"end": 3154,
											"name": "PUSH",
											"source": 10,
											"value": "10000"
										},
										{
											"begin": 3137,
											"end": 3144,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3137,
											"end": 3154,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3137,
											"end": 3159,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 3133,
											"end": 3219,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "95"
										},
										{
											"begin": 3133,
											"end": 3219,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3216,
											"end": 3219,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 3178,
											"end": 3211,
											"name": "PUSH",
											"source": 10,
											"value": "9AA508B5B7A84E1C677DE54F3E99BC9"
										},
										{
											"begin": 3170,
											"end": 3175,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3170,
											"end": 3211,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 3169,
											"end": 3219,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3169,
											"end": 3219,
											"name": "SHR",
											"source": 10
										},
										{
											"begin": 3161,
											"end": 3219,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3161,
											"end": 3219,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3133,
											"end": 3219,
											"name": "tag",
											"source": 10,
											"value": "95"
										},
										{
											"begin": 3133,
											"end": 3219,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3254,
											"end": 3255,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3243,
											"end": 3250,
											"name": "PUSH",
											"source": 10,
											"value": "20000"
										},
										{
											"begin": 3233,
											"end": 3240,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3233,
											"end": 3250,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3233,
											"end": 3255,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 3229,
											"end": 3314,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "96"
										},
										{
											"begin": 3229,
											"end": 3314,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3311,
											"end": 3314,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 3274,
											"end": 3306,
											"name": "PUSH",
											"source": 10,
											"value": "5D6AF8DEDB81196699C329225EE604"
										},
										{
											"begin": 3266,
											"end": 3271,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3266,
											"end": 3306,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 3265,
											"end": 3314,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3265,
											"end": 3314,
											"name": "SHR",
											"source": 10
										},
										{
											"begin": 3257,
											"end": 3314,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3257,
											"end": 3314,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3229,
											"end": 3314,
											"name": "tag",
											"source": 10,
											"value": "96"
										},
										{
											"begin": 3229,
											"end": 3314,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3349,
											"end": 3350,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3338,
											"end": 3345,
											"name": "PUSH",
											"source": 10,
											"value": "40000"
										},
										{
											"begin": 3328,
											"end": 3335,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3328,
											"end": 3345,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3328,
											"end": 3350,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 3324,
											"end": 3407,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "97"
										},
										{
											"begin": 3324,
											"end": 3407,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3404,
											"end": 3407,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 3369,
											"end": 3399,
											"name": "PUSH",
											"source": 10,
											"value": "2216E584F5FA1EA926041BEDFE98"
										},
										{
											"begin": 3361,
											"end": 3366,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3361,
											"end": 3399,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 3360,
											"end": 3407,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3360,
											"end": 3407,
											"name": "SHR",
											"source": 10
										},
										{
											"begin": 3352,
											"end": 3407,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3352,
											"end": 3407,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3324,
											"end": 3407,
											"name": "tag",
											"source": 10,
											"value": "97"
										},
										{
											"begin": 3324,
											"end": 3407,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3442,
											"end": 3443,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3431,
											"end": 3438,
											"name": "PUSH",
											"source": 10,
											"value": "80000"
										},
										{
											"begin": 3421,
											"end": 3428,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3421,
											"end": 3438,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3421,
											"end": 3443,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 3417,
											"end": 3495,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "98"
										},
										{
											"begin": 3417,
											"end": 3495,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3492,
											"end": 3495,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 3462,
											"end": 3487,
											"name": "PUSH",
											"source": 10,
											"value": "48A170391F7DC42444E8FA2"
										},
										{
											"begin": 3454,
											"end": 3459,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3454,
											"end": 3487,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 3453,
											"end": 3495,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3453,
											"end": 3495,
											"name": "SHR",
											"source": 10
										},
										{
											"begin": 3445,
											"end": 3495,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3445,
											"end": 3495,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3417,
											"end": 3495,
											"name": "tag",
											"source": 10,
											"value": "98"
										},
										{
											"begin": 3417,
											"end": 3495,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3517,
											"end": 3518,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3510,
											"end": 3514,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3510,
											"end": 3518,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 3510,
											"end": 3518,
											"name": "SIGNEXTEND",
											"source": 10
										},
										{
											"begin": 3510,
											"end": 3518,
											"name": "SGT",
											"source": 10
										},
										{
											"begin": 3506,
											"end": 3553,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3506,
											"end": 3553,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "99"
										},
										{
											"begin": 3506,
											"end": 3553,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3548,
											"end": 3553,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3528,
											"end": 3545,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3528,
											"end": 3553,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3528,
											"end": 3553,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 3528,
											"end": 3553,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3528,
											"end": 3553,
											"name": "INVALID",
											"source": 10
										},
										{
											"begin": 3528,
											"end": 3553,
											"name": "tag",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 3528,
											"end": 3553,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3528,
											"end": 3553,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 3520,
											"end": 3553,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3520,
											"end": 3553,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3506,
											"end": 3553,
											"name": "tag",
											"source": 10,
											"value": "99"
										},
										{
											"begin": 3506,
											"end": 3553,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3924,
											"end": 3925,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3912,
											"end": 3919,
											"name": "PUSH",
											"source": 10,
											"value": "100000000"
										},
										{
											"begin": 3903,
											"end": 3908,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3903,
											"end": 3920,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3903,
											"end": 3920,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "101"
										},
										{
											"begin": 3903,
											"end": 3920,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3903,
											"end": 3920,
											"name": "INVALID",
											"source": 10
										},
										{
											"begin": 3903,
											"end": 3920,
											"name": "tag",
											"source": 10,
											"value": "101"
										},
										{
											"begin": 3903,
											"end": 3920,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3903,
											"end": 3920,
											"name": "MOD",
											"source": 10
										},
										{
											"begin": 3903,
											"end": 3925,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 3903,
											"end": 3933,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "102"
										},
										{
											"begin": 3903,
											"end": 3933,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3932,
											"end": 3933,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 3903,
											"end": 3933,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "103"
										},
										{
											"begin": 3903,
											"end": 3933,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3903,
											"end": 3933,
											"name": "tag",
											"source": 10,
											"value": "102"
										},
										{
											"begin": 3903,
											"end": 3933,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3928,
											"end": 3929,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3903,
											"end": 3933,
											"name": "tag",
											"source": 10,
											"value": "103"
										},
										{
											"begin": 3903,
											"end": 3933,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3886,
											"end": 3934,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 3886,
											"end": 3934,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3896,
											"end": 3898,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3887,
											"end": 3892,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3887,
											"end": 3898,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3887,
											"end": 3898,
											"name": "SHR",
											"source": 10
										},
										{
											"begin": 3886,
											"end": 3934,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3863,
											"end": 3935,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3863,
											"end": 3935,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1362,
											"end": 3942,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1362,
											"end": 3942,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1362,
											"end": 3942,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1362,
											"end": 3942,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1362,
											"end": 3942,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1362,
											"end": 3942,
											"name": "JUMP",
											"source": 10,
											"value": "[out]"
										},
										{
											"begin": 749,
											"end": 4525,
											"name": "tag",
											"source": 9,
											"value": "65"
										},
										{
											"begin": 749,
											"end": 4525,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 861,
											"end": 875,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1190,
											"end": 1203,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1258,
											"end": 1271,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1375,
											"end": 1376,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1371,
											"end": 1377,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 1368,
											"end": 1369,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1365,
											"end": 1366,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 1358,
											"end": 1378,
											"name": "MULMOD",
											"source": 9
										},
										{
											"begin": 1407,
											"end": 1408,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1404,
											"end": 1405,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 1400,
											"end": 1409,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 1391,
											"end": 1409,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1391,
											"end": 1409,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1458,
											"end": 1463,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1454,
											"end": 1456,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1451,
											"end": 1464,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 1443,
											"end": 1448,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1439,
											"end": 1441,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1435,
											"end": 1449,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1431,
											"end": 1465,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1422,
											"end": 1465,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1422,
											"end": 1465,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1334,
											"end": 1475,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1556,
											"end": 1557,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1547,
											"end": 1552,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1547,
											"end": 1557,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1543,
											"end": 1722,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1543,
											"end": 1722,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "105"
										},
										{
											"begin": 1543,
											"end": 1722,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1595,
											"end": 1596,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1581,
											"end": 1592,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1581,
											"end": 1596,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 1573,
											"end": 1597,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "106"
										},
										{
											"begin": 1573,
											"end": 1597,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1573,
											"end": 1597,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1573,
											"end": 1597,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1573,
											"end": 1597,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1573,
											"end": 1597,
											"name": "tag",
											"source": 9,
											"value": "106"
										},
										{
											"begin": 1573,
											"end": 1597,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1659,
											"end": 1670,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1652,
											"end": 1657,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1648,
											"end": 1671,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 1638,
											"end": 1671,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1638,
											"end": 1671,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1698,
											"end": 1711,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1698,
											"end": 1711,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1698,
											"end": 1711,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "104"
										},
										{
											"begin": 1698,
											"end": 1711,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1543,
											"end": 1722,
											"name": "tag",
											"source": 9,
											"value": "105"
										},
										{
											"begin": 1543,
											"end": 1722,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1849,
											"end": 1854,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1835,
											"end": 1846,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1835,
											"end": 1854,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 1827,
											"end": 1855,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "107"
										},
										{
											"begin": 1827,
											"end": 1855,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1827,
											"end": 1855,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1827,
											"end": 1855,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1827,
											"end": 1855,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1827,
											"end": 1855,
											"name": "tag",
											"source": 9,
											"value": "107"
										},
										{
											"begin": 1827,
											"end": 1855,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2132,
											"end": 2149,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2208,
											"end": 2219,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2205,
											"end": 2206,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 2202,
											"end": 2203,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 2195,
											"end": 2220,
											"name": "MULMOD",
											"source": 9
										},
										{
											"begin": 2182,
											"end": 2220,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2182,
											"end": 2220,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2351,
											"end": 2356,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2340,
											"end": 2349,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2337,
											"end": 2357,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 2330,
											"end": 2335,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2326,
											"end": 2358,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2317,
											"end": 2358,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2317,
											"end": 2358,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2391,
											"end": 2400,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2384,
											"end": 2389,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2380,
											"end": 2401,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2371,
											"end": 2401,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2371,
											"end": 2401,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2560,
											"end": 2572,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2590,
											"end": 2601,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2576,
											"end": 2587,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 2575,
											"end": 2587,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2575,
											"end": 2587,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2575,
											"end": 2601,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2560,
											"end": 2601,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2560,
											"end": 2601,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2712,
											"end": 2716,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2699,
											"end": 2710,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 2695,
											"end": 2717,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 2680,
											"end": 2717,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 2680,
											"end": 2717,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2834,
											"end": 2838,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2827,
											"end": 2832,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2823,
											"end": 2839,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 2814,
											"end": 2839,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 2814,
											"end": 2839,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3088,
											"end": 3089,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 3081,
											"end": 3085,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3074,
											"end": 3078,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3071,
											"end": 3072,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3067,
											"end": 3079,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3063,
											"end": 3086,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 3059,
											"end": 3090,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3051,
											"end": 3090,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3051,
											"end": 3090,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3126,
											"end": 3130,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3118,
											"end": 3123,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3118,
											"end": 3130,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 3109,
											"end": 3130,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3109,
											"end": 3130,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 3109,
											"end": 3130,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 3109,
											"end": 3130,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3464,
											"end": 3475,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3498,
											"end": 3499,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 3483,
											"end": 3494,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 3479,
											"end": 3480,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 3479,
											"end": 3494,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 3478,
											"end": 3499,
											"name": "XOR",
											"source": 9
										},
										{
											"begin": 3464,
											"end": 3499,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3464,
											"end": 3499,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3739,
											"end": 3742,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3725,
											"end": 3736,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 3725,
											"end": 3742,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 3721,
											"end": 3722,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 3721,
											"end": 3742,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3714,
											"end": 3742,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3714,
											"end": 3742,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 3714,
											"end": 3742,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3714,
											"end": 3742,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3797,
											"end": 3800,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3783,
											"end": 3794,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 3783,
											"end": 3800,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 3779,
											"end": 3780,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 3779,
											"end": 3800,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3772,
											"end": 3800,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3772,
											"end": 3800,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 3772,
											"end": 3800,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3772,
											"end": 3800,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3856,
											"end": 3859,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3842,
											"end": 3853,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 3842,
											"end": 3859,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 3838,
											"end": 3839,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 3838,
											"end": 3859,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3831,
											"end": 3859,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3831,
											"end": 3859,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 3831,
											"end": 3859,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3831,
											"end": 3859,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3915,
											"end": 3918,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3901,
											"end": 3912,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 3901,
											"end": 3918,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 3897,
											"end": 3898,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 3897,
											"end": 3918,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3890,
											"end": 3918,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3890,
											"end": 3918,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 3890,
											"end": 3918,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3890,
											"end": 3918,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3974,
											"end": 3977,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3960,
											"end": 3971,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 3960,
											"end": 3977,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 3956,
											"end": 3957,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 3956,
											"end": 3977,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3949,
											"end": 3977,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3949,
											"end": 3977,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 3949,
											"end": 3977,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3949,
											"end": 3977,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4034,
											"end": 4037,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4020,
											"end": 4031,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 4020,
											"end": 4037,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 4016,
											"end": 4017,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 4016,
											"end": 4037,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4009,
											"end": 4037,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4009,
											"end": 4037,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 4009,
											"end": 4037,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4009,
											"end": 4037,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4492,
											"end": 4495,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4484,
											"end": 4489,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 4484,
											"end": 4495,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 4475,
											"end": 4495,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 4475,
											"end": 4495,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4505,
											"end": 4518,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4505,
											"end": 4518,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4505,
											"end": 4518,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4505,
											"end": 4518,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4505,
											"end": 4518,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 749,
											"end": 4525,
											"name": "tag",
											"source": 9,
											"value": "104"
										},
										{
											"begin": 749,
											"end": 4525,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 749,
											"end": 4525,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 749,
											"end": 4525,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 749,
											"end": 4525,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 749,
											"end": 4525,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 749,
											"end": 4525,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 749,
											"end": 4525,
											"name": "JUMP",
											"source": 9,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"Price(address,address,address)": "c361e0b1"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tOut\",\"type\":\"address\"}],\"name\":\"Price\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/libraries/UniswapV3.sol\":\"UniswapV3\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol\":{\"keccak256\":\"0xcc3d0c93fc9ac0febbe09f941b465b57f750bcf3b48432da0b97dc289cfdc489\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b9379ad954680c44a0bc523b314ae4c4da735f9fe1d02aa56ea5bdba6f1136f2\",\"dweb:/ipfs/QmZXdgQNXKAckrXWz9R3mc47F1fvDvr28a2ewJrwNAw71B\"]},\"@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol\":{\"keccak256\":\"0xfe6113d518466cd6652c85b111e01f33eb62157f49ae5ed7d5a3947a2044adb1\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://1c42b9e6f5902ac38dd43e25750939baa7e0c1425dc75afd717c4412731065d5\",\"dweb:/ipfs/QmWaoacnzsucTvBME2o7YgZBZMhaHv7fkj83htHMVWJKWh\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol\":{\"keccak256\":\"0x9453dd0e7442188667d01d9b65de3f1e14e9511ff3e303179a15f6fc267f7634\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://982f4328f956c3e60e67501e759eb292ac487f76460c774c50e9ae4fcc92aae5\",\"dweb:/ipfs/QmRnzEDsaqtd9PJEVcgQi7p5aV5pMSvRUoGZJAdwFUJxgZ\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol\":{\"keccak256\":\"0xe603ac5b17ecdee73ba2b27efdf386c257a19c14206e87eee77e2017b742d9e5\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://8febc9bdb399a4d94bb89f5377732652e2400e4a8dee808201ade6848f9004e7\",\"dweb:/ipfs/QmaKDqYYFU4d2W2iN77aDHptfbFmYZRrMYXHeGpJmM8C1c\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol\":{\"keccak256\":\"0x8071514d0fe5d17d6fbd31c191cdfb703031c24e0ece3621d88ab10e871375cd\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://d0b571930cc7488b1d546a7e9cea7c52d8b3c4e207da657ed0e0db7343b8cd03\",\"dweb:/ipfs/QmaGK6vVwB95QSTR1XMYvrh7ivYAYZxi3fD7v6VMA4jZ39\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol\":{\"keccak256\":\"0xf6e5d2cd1139c4c276bdbc8e1d2b256e456c866a91f1b868da265c6d2685c3f7\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b99c8c9ae8e27ee6559e5866bea82cbc9ffc8247f8d15b7422a4deb287d4d047\",\"dweb:/ipfs/QmfL8gaqt3ffAnm6nVj5ksuNpLygXuL3xq5VBqrkwC2JJ3\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol\":{\"keccak256\":\"0x759b78a2918af9e99e246dc3af084f654e48ef32bb4e4cb8a966aa3dcaece235\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://64144fb96e1c7fdba87305acadb98a198d26a3d46c097cb3a666e567f6f29735\",\"dweb:/ipfs/QmUnWVwN9FKB9uV5Pr8YfLpWZnYM2DENnRMaadZ492JS9u\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol\":{\"keccak256\":\"0x852dc1f5df7dcf7f11e7bb3eed79f0cea72ad4b25f6a9d2c35aafb48925fd49f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://ed63907c38ff36b0e22bc9ffc53e791ea74f0d4f0e7c257fdfb5aaf8825b1f0f\",\"dweb:/ipfs/QmSQrckghEjs6HVsA5GVgpNpZWvTXMY5eQLF7cN6deFeEg\"]},\"@uniswap/v3-core/contracts/libraries/FullMath.sol\":{\"keccak256\":\"0x50e87f7a3197525d1c6f7e04290060e848677c8a4e86c554bc6ace4a4d0d476d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3874093a6b37d8e68f9475a91f8eb0a1c808cb6153c84cfe6c37909505a4d24e\",\"dweb:/ipfs/QmUqGpQqvSHX4SwUvcBCs9g4ZhR9JPhgD3615oUigAhtjj\"]},\"@uniswap/v3-core/contracts/libraries/TickMath.sol\":{\"keccak256\":\"0xda8c2c0b12d2976acfd364453ba5f5bf0117ba3c91175ee9e1067d3fb26944d9\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://3f3d2d7c2723c91830c74d96292f28fc1cfe28d388cdb9c1a5ebadb4c2b96f81\",\"dweb:/ipfs/QmYU4wk8MEm33wVWR38LoncvR7b8PP1mLuGBKX3dUpYJVE\"]},\"contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x7df9d93243a890a6dc175905d65495ae5726330faa50409ab8460c4c00c672e1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3ff91fe9d915b97343e152f1a15a46e5ff9477e90e90a4431dca38f79eb2cdba\",\"dweb:/ipfs/QmcHUAJs2MfcdbAFTzdQE1eGevxCGHNDXECiuGLDaUs34S\"]},\"contracts/libraries/OracleLibrary.sol\":{\"keccak256\":\"0xfe374d779a9fdb16c102035c181002ffd393138a38acc916e9f4e98139f5b399\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://497ed18360c8fef9ca485f60669fa56247b2a46a464483b2d93fe24792d68d1f\",\"dweb:/ipfs/QmY6gSGfuAi5BQnJxhQKLHwqmo7ZG3WVqXqAmPRZRyapGv\"]},\"contracts/libraries/UniswapV3.sol\":{\"keccak256\":\"0x4aca088109a7faf4f220e0f3ec363e0a351804586a504031eecdae21ec926c27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9a31098a177c77e5cc62f5e4eabac00481ae78fc8f06d1ada877fc2c55e9ec3e\",\"dweb:/ipfs/QmVfWfvTPsxE3JsPmVkwF2sWpST235WQXSEukmVtMpz2dH\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol": {
				"ast": {
					"absolutePath": "@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol",
					"exportedSymbols": {
						"IUniswapV2Router01": [
							307
						]
					},
					"id": 308,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 307,
							"linearizedBaseContracts": [
								307
							],
							"name": "IUniswapV2Router01",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "c45a0155",
									"id": 6,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "factory",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "77:2:0"
									},
									"returnParameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 6,
												"src": "103:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "103:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "102:9:0"
									},
									"scope": 307,
									"src": "61:51:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "ad5c4648",
									"id": 11,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "WETH",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "130:2:0"
									},
									"returnParameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "156:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "156:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "155:9:0"
									},
									"scope": 307,
									"src": "117:48:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "e8e33700",
									"id": 36,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "addLiquidity",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 13,
												"mutability": "mutable",
												"name": "tokenA",
												"nodeType": "VariableDeclaration",
												"scope": 36,
												"src": "202:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 12,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "202:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 15,
												"mutability": "mutable",
												"name": "tokenB",
												"nodeType": "VariableDeclaration",
												"scope": 36,
												"src": "226:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 14,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "226:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 17,
												"mutability": "mutable",
												"name": "amountADesired",
												"nodeType": "VariableDeclaration",
												"scope": 36,
												"src": "250:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 16,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "250:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 19,
												"mutability": "mutable",
												"name": "amountBDesired",
												"nodeType": "VariableDeclaration",
												"scope": 36,
												"src": "279:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 18,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "279:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 21,
												"mutability": "mutable",
												"name": "amountAMin",
												"nodeType": "VariableDeclaration",
												"scope": 36,
												"src": "308:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 20,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "308:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 23,
												"mutability": "mutable",
												"name": "amountBMin",
												"nodeType": "VariableDeclaration",
												"scope": 36,
												"src": "333:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 22,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "333:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 25,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 36,
												"src": "358:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 24,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "358:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 36,
												"src": "378:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 26,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "378:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "192:205:0"
									},
									"returnParameters": {
										"id": 35,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 30,
												"mutability": "mutable",
												"name": "amountA",
												"nodeType": "VariableDeclaration",
												"scope": 36,
												"src": "416:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 29,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "416:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "amountB",
												"nodeType": "VariableDeclaration",
												"scope": 36,
												"src": "430:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 31,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "430:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 34,
												"mutability": "mutable",
												"name": "liquidity",
												"nodeType": "VariableDeclaration",
												"scope": 36,
												"src": "444:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 33,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "444:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "415:44:0"
									},
									"scope": 307,
									"src": "171:289:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "f305d719",
									"id": 57,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "addLiquidityETH",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 49,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 57,
												"src": "499:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 37,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "499:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 40,
												"mutability": "mutable",
												"name": "amountTokenDesired",
												"nodeType": "VariableDeclaration",
												"scope": 57,
												"src": "522:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 39,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "522:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "amountTokenMin",
												"nodeType": "VariableDeclaration",
												"scope": 57,
												"src": "555:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 41,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "555:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 44,
												"mutability": "mutable",
												"name": "amountETHMin",
												"nodeType": "VariableDeclaration",
												"scope": 57,
												"src": "584:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 43,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "584:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 46,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 57,
												"src": "611:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 45,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "611:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 48,
												"mutability": "mutable",
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 57,
												"src": "631:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 47,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "631:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "489:161:0"
									},
									"returnParameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 51,
												"mutability": "mutable",
												"name": "amountToken",
												"nodeType": "VariableDeclaration",
												"scope": 57,
												"src": "677:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 50,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "677:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 53,
												"mutability": "mutable",
												"name": "amountETH",
												"nodeType": "VariableDeclaration",
												"scope": 57,
												"src": "695:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 52,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "695:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 55,
												"mutability": "mutable",
												"name": "liquidity",
												"nodeType": "VariableDeclaration",
												"scope": 57,
												"src": "711:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 54,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "711:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "676:50:0"
									},
									"scope": 307,
									"src": "465:262:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "baa2abde",
									"id": 78,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeLiquidity",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "tokenA",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "766:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 58,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "766:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 61,
												"mutability": "mutable",
												"name": "tokenB",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "790:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 60,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "790:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "liquidity",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "814:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 62,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "814:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 65,
												"mutability": "mutable",
												"name": "amountAMin",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "838:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 64,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "838:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "amountBMin",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "863:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 66,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "863:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "888:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "888:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "908:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 70,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "908:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "756:171:0"
									},
									"returnParameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "amountA",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "946:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 73,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "946:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 76,
												"mutability": "mutable",
												"name": "amountB",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "960:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 75,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "960:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "945:28:0"
									},
									"scope": 307,
									"src": "732:242:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "02751cec",
									"id": 97,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeLiquidityETH",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 91,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 80,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 97,
												"src": "1016:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 79,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1016:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 82,
												"mutability": "mutable",
												"name": "liquidity",
												"nodeType": "VariableDeclaration",
												"scope": 97,
												"src": "1039:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 81,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1039:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 84,
												"mutability": "mutable",
												"name": "amountTokenMin",
												"nodeType": "VariableDeclaration",
												"scope": 97,
												"src": "1063:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 83,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1063:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "amountETHMin",
												"nodeType": "VariableDeclaration",
												"scope": 97,
												"src": "1092:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 85,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1092:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 88,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 97,
												"src": "1119:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 87,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1119:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 90,
												"mutability": "mutable",
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 97,
												"src": "1139:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 89,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1139:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1006:152:0"
									},
									"returnParameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "amountToken",
												"nodeType": "VariableDeclaration",
												"scope": 97,
												"src": "1177:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 92,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1177:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "amountETH",
												"nodeType": "VariableDeclaration",
												"scope": 97,
												"src": "1195:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 94,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1195:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1176:34:0"
									},
									"scope": 307,
									"src": "979:232:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "2195995c",
									"id": 126,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeLiquidityWithPermit",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "tokenA",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "1260:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 98,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1260:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "tokenB",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "1284:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1284:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 103,
												"mutability": "mutable",
												"name": "liquidity",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "1308:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 102,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1308:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 105,
												"mutability": "mutable",
												"name": "amountAMin",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "1332:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 104,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1332:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 107,
												"mutability": "mutable",
												"name": "amountBMin",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "1357:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 106,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1357:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "1382:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 108,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1382:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 111,
												"mutability": "mutable",
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "1402:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 110,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1402:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 113,
												"mutability": "mutable",
												"name": "approveMax",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "1425:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 112,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1425:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 115,
												"mutability": "mutable",
												"name": "v",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "1442:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 114,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1442:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 117,
												"mutability": "mutable",
												"name": "r",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "1451:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 116,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1451:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 119,
												"mutability": "mutable",
												"name": "s",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "1462:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 118,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1462:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1250:227:0"
									},
									"returnParameters": {
										"id": 125,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 122,
												"mutability": "mutable",
												"name": "amountA",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "1496:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 121,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1496:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 124,
												"mutability": "mutable",
												"name": "amountB",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "1510:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 123,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1510:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1495:28:0"
									},
									"scope": 307,
									"src": "1216:308:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "ded9382a",
									"id": 153,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeLiquidityETHWithPermit",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 147,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 128,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 153,
												"src": "1576:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 127,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1576:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 130,
												"mutability": "mutable",
												"name": "liquidity",
												"nodeType": "VariableDeclaration",
												"scope": 153,
												"src": "1599:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 129,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1599:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 132,
												"mutability": "mutable",
												"name": "amountTokenMin",
												"nodeType": "VariableDeclaration",
												"scope": 153,
												"src": "1623:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 131,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1623:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 134,
												"mutability": "mutable",
												"name": "amountETHMin",
												"nodeType": "VariableDeclaration",
												"scope": 153,
												"src": "1652:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 133,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1652:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 136,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 153,
												"src": "1679:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 135,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1679:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 138,
												"mutability": "mutable",
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 153,
												"src": "1699:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 137,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1699:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 140,
												"mutability": "mutable",
												"name": "approveMax",
												"nodeType": "VariableDeclaration",
												"scope": 153,
												"src": "1722:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 139,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1722:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 142,
												"mutability": "mutable",
												"name": "v",
												"nodeType": "VariableDeclaration",
												"scope": 153,
												"src": "1739:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 141,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1739:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 144,
												"mutability": "mutable",
												"name": "r",
												"nodeType": "VariableDeclaration",
												"scope": 153,
												"src": "1748:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 143,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1748:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 146,
												"mutability": "mutable",
												"name": "s",
												"nodeType": "VariableDeclaration",
												"scope": 153,
												"src": "1759:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 145,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1759:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:208:0"
									},
									"returnParameters": {
										"id": 152,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 149,
												"mutability": "mutable",
												"name": "amountToken",
												"nodeType": "VariableDeclaration",
												"scope": 153,
												"src": "1793:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 148,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1793:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 151,
												"mutability": "mutable",
												"name": "amountETH",
												"nodeType": "VariableDeclaration",
												"scope": 153,
												"src": "1811:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 150,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1811:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1792:34:0"
									},
									"scope": 307,
									"src": "1529:298:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "38ed1739",
									"id": 170,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactTokensForTokens",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 165,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "amountIn",
												"nodeType": "VariableDeclaration",
												"scope": 170,
												"src": "1875:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1875:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nodeType": "VariableDeclaration",
												"scope": 170,
												"src": "1898:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1898:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 160,
												"mutability": "mutable",
												"name": "path",
												"nodeType": "VariableDeclaration",
												"scope": 170,
												"src": "1925:23:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 158,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1925:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 159,
													"nodeType": "ArrayTypeName",
													"src": "1925:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 170,
												"src": "1958:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1958:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 164,
												"mutability": "mutable",
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 170,
												"src": "1978:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 163,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1978:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1865:132:0"
									},
									"returnParameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 168,
												"mutability": "mutable",
												"name": "amounts",
												"nodeType": "VariableDeclaration",
												"scope": 170,
												"src": "2016:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 166,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "2016:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 167,
													"nodeType": "ArrayTypeName",
													"src": "2016:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2015:23:0"
									},
									"scope": 307,
									"src": "1832:207:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "8803dbee",
									"id": 187,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapTokensForExactTokens",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "amountOut",
												"nodeType": "VariableDeclaration",
												"scope": 187,
												"src": "2087:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 171,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2087:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "amountInMax",
												"nodeType": "VariableDeclaration",
												"scope": 187,
												"src": "2111:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 173,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2111:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "path",
												"nodeType": "VariableDeclaration",
												"scope": 187,
												"src": "2137:23:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 175,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2137:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 176,
													"nodeType": "ArrayTypeName",
													"src": "2137:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 179,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 187,
												"src": "2170:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 178,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2170:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 187,
												"src": "2190:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 180,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2190:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2077:132:0"
									},
									"returnParameters": {
										"id": 186,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "amounts",
												"nodeType": "VariableDeclaration",
												"scope": 187,
												"src": "2228:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 183,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "2228:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 184,
													"nodeType": "ArrayTypeName",
													"src": "2228:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2227:23:0"
									},
									"scope": 307,
									"src": "2044:207:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "7ff36ab5",
									"id": 202,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactETHForTokens",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 197,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 189,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nodeType": "VariableDeclaration",
												"scope": 202,
												"src": "2287:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 188,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2287:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "path",
												"nodeType": "VariableDeclaration",
												"scope": 202,
												"src": "2306:23:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 190,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2306:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 191,
													"nodeType": "ArrayTypeName",
													"src": "2306:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 194,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 202,
												"src": "2331:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 193,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2331:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 196,
												"mutability": "mutable",
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 202,
												"src": "2343:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 195,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2343:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2286:71:0"
									},
									"returnParameters": {
										"id": 201,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 200,
												"mutability": "mutable",
												"name": "amounts",
												"nodeType": "VariableDeclaration",
												"scope": 202,
												"src": "2408:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 198,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "2408:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 199,
													"nodeType": "ArrayTypeName",
													"src": "2408:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2407:23:0"
									},
									"scope": 307,
									"src": "2256:175:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "4a25d94a",
									"id": 219,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapTokensForExactETH",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "amountOut",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "2467:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 203,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2467:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 206,
												"mutability": "mutable",
												"name": "amountInMax",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "2483:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 205,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2483:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 209,
												"mutability": "mutable",
												"name": "path",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "2501:23:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 207,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2501:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 208,
													"nodeType": "ArrayTypeName",
													"src": "2501:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 211,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "2526:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 210,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2526:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 213,
												"mutability": "mutable",
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "2538:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 212,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2538:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2466:86:0"
									},
									"returnParameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "amounts",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "2587:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 215,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "2587:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 216,
													"nodeType": "ArrayTypeName",
													"src": "2587:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2586:23:0"
									},
									"scope": 307,
									"src": "2436:174:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "18cbafe5",
									"id": 236,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactTokensForETH",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 221,
												"mutability": "mutable",
												"name": "amountIn",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "2646:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 220,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2646:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "2661:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 222,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2661:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "path",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "2680:23:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 224,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2680:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 225,
													"nodeType": "ArrayTypeName",
													"src": "2680:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 228,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "2705:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 227,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2705:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 230,
												"mutability": "mutable",
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "2717:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 229,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2717:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2645:86:0"
									},
									"returnParameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "amounts",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "2766:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 232,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "2766:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 233,
													"nodeType": "ArrayTypeName",
													"src": "2766:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2765:23:0"
									},
									"scope": 307,
									"src": "2615:174:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "fb3bdb41",
									"id": 251,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapETHForExactTokens",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 238,
												"mutability": "mutable",
												"name": "amountOut",
												"nodeType": "VariableDeclaration",
												"scope": 251,
												"src": "2825:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 237,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2825:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "path",
												"nodeType": "VariableDeclaration",
												"scope": 251,
												"src": "2841:23:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 239,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2841:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 240,
													"nodeType": "ArrayTypeName",
													"src": "2841:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 251,
												"src": "2866:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 242,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2866:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 251,
												"src": "2878:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2878:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2824:68:0"
									},
									"returnParameters": {
										"id": 250,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 249,
												"mutability": "mutable",
												"name": "amounts",
												"nodeType": "VariableDeclaration",
												"scope": 251,
												"src": "2943:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 247,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "2943:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 248,
													"nodeType": "ArrayTypeName",
													"src": "2943:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2942:23:0"
									},
									"scope": 307,
									"src": "2794:172:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "ad615dec",
									"id": 262,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "quote",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 253,
												"mutability": "mutable",
												"name": "amountA",
												"nodeType": "VariableDeclaration",
												"scope": 262,
												"src": "2987:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 252,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2987:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 255,
												"mutability": "mutable",
												"name": "reserveA",
												"nodeType": "VariableDeclaration",
												"scope": 262,
												"src": "3001:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 254,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3001:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "reserveB",
												"nodeType": "VariableDeclaration",
												"scope": 262,
												"src": "3016:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 256,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3016:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2986:44:0"
									},
									"returnParameters": {
										"id": 261,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 260,
												"mutability": "mutable",
												"name": "amountB",
												"nodeType": "VariableDeclaration",
												"scope": 262,
												"src": "3054:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 259,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3054:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3053:14:0"
									},
									"scope": 307,
									"src": "2972:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "054d50d4",
									"id": 273,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountOut",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 269,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "amountIn",
												"nodeType": "VariableDeclaration",
												"scope": 273,
												"src": "3095:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 263,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3095:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 266,
												"mutability": "mutable",
												"name": "reserveIn",
												"nodeType": "VariableDeclaration",
												"scope": 273,
												"src": "3110:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 265,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3110:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 268,
												"mutability": "mutable",
												"name": "reserveOut",
												"nodeType": "VariableDeclaration",
												"scope": 273,
												"src": "3126:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 267,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3126:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3094:48:0"
									},
									"returnParameters": {
										"id": 272,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 271,
												"mutability": "mutable",
												"name": "amountOut",
												"nodeType": "VariableDeclaration",
												"scope": 273,
												"src": "3166:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 270,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3166:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3165:16:0"
									},
									"scope": 307,
									"src": "3073:109:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "85f8c259",
									"id": 284,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountIn",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 280,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 275,
												"mutability": "mutable",
												"name": "amountOut",
												"nodeType": "VariableDeclaration",
												"scope": 284,
												"src": "3208:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 274,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3208:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 277,
												"mutability": "mutable",
												"name": "reserveIn",
												"nodeType": "VariableDeclaration",
												"scope": 284,
												"src": "3224:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 276,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3224:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "reserveOut",
												"nodeType": "VariableDeclaration",
												"scope": 284,
												"src": "3240:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 278,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3240:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3207:49:0"
									},
									"returnParameters": {
										"id": 283,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 282,
												"mutability": "mutable",
												"name": "amountIn",
												"nodeType": "VariableDeclaration",
												"scope": 284,
												"src": "3280:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 281,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3280:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3279:15:0"
									},
									"scope": 307,
									"src": "3187:108:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "d06ca61f",
									"id": 295,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountsOut",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 290,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 286,
												"mutability": "mutable",
												"name": "amountIn",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "3323:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 285,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3323:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 289,
												"mutability": "mutable",
												"name": "path",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "3338:23:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 287,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "3338:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 288,
													"nodeType": "ArrayTypeName",
													"src": "3338:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3322:40:0"
									},
									"returnParameters": {
										"id": 294,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 293,
												"mutability": "mutable",
												"name": "amounts",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "3386:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 291,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "3386:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 292,
													"nodeType": "ArrayTypeName",
													"src": "3386:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3385:23:0"
									},
									"scope": 307,
									"src": "3300:109:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "1f00ca74",
									"id": 306,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountsIn",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 301,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 297,
												"mutability": "mutable",
												"name": "amountOut",
												"nodeType": "VariableDeclaration",
												"scope": 306,
												"src": "3436:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 296,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3436:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 300,
												"mutability": "mutable",
												"name": "path",
												"nodeType": "VariableDeclaration",
												"scope": 306,
												"src": "3452:23:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 298,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "3452:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 299,
													"nodeType": "ArrayTypeName",
													"src": "3452:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3435:41:0"
									},
									"returnParameters": {
										"id": 305,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 304,
												"mutability": "mutable",
												"name": "amounts",
												"nodeType": "VariableDeclaration",
												"scope": 306,
												"src": "3500:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 302,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "3500:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 303,
													"nodeType": "ArrayTypeName",
													"src": "3500:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3499:23:0"
									},
									"scope": 307,
									"src": "3414:109:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 308,
							"src": "26:3499:0"
						}
					],
					"src": "0:3526:0"
				},
				"id": 0
			},
			"@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol": {
				"ast": {
					"absolutePath": "@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol",
					"exportedSymbols": {
						"IUniswapV3Factory": [
							390
						]
					},
					"id": 391,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 309,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 310,
								"nodeType": "StructuredDocumentation",
								"src": "71:163:1",
								"text": "@title The interface for the Uniswap V3 Factory\n @notice The Uniswap V3 Factory facilitates creation of Uniswap V3 pools and control over the protocol fees"
							},
							"fullyImplemented": false,
							"id": 390,
							"linearizedBaseContracts": [
								390
							],
							"name": "IUniswapV3Factory",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 311,
										"nodeType": "StructuredDocumentation",
										"src": "268:185:1",
										"text": "@notice Emitted when the owner of the factory is changed\n @param oldOwner The owner before the owner was changed\n @param newOwner The owner after the owner was changed"
									},
									"id": 317,
									"name": "OwnerChanged",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 313,
												"indexed": true,
												"mutability": "mutable",
												"name": "oldOwner",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "477:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 312,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "477:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 315,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "503:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 314,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "503:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "476:52:1"
									},
									"src": "458:71:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 318,
										"nodeType": "StructuredDocumentation",
										"src": "535:421:1",
										"text": "@notice Emitted when a pool is created\n @param token0 The first token of the pool by address sort order\n @param token1 The second token of the pool by address sort order\n @param fee The fee collected upon every swap in the pool, denominated in hundredths of a bip\n @param tickSpacing The minimum number of ticks between initialized ticks\n @param pool The address of the created pool"
									},
									"id": 330,
									"name": "PoolCreated",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 329,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 320,
												"indexed": true,
												"mutability": "mutable",
												"name": "token0",
												"nodeType": "VariableDeclaration",
												"scope": 330,
												"src": "988:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 319,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "988:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 322,
												"indexed": true,
												"mutability": "mutable",
												"name": "token1",
												"nodeType": "VariableDeclaration",
												"scope": 330,
												"src": "1020:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 321,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1020:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 324,
												"indexed": true,
												"mutability": "mutable",
												"name": "fee",
												"nodeType": "VariableDeclaration",
												"scope": 330,
												"src": "1052:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 323,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "1052:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 326,
												"indexed": false,
												"mutability": "mutable",
												"name": "tickSpacing",
												"nodeType": "VariableDeclaration",
												"scope": 330,
												"src": "1080:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 325,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1080:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 328,
												"indexed": false,
												"mutability": "mutable",
												"name": "pool",
												"nodeType": "VariableDeclaration",
												"scope": 330,
												"src": "1107:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 327,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1107:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "978:147:1"
									},
									"src": "961:165:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 331,
										"nodeType": "StructuredDocumentation",
										"src": "1132:275:1",
										"text": "@notice Emitted when a new fee amount is enabled for pool creation via the factory\n @param fee The enabled fee, denominated in hundredths of a bip\n @param tickSpacing The minimum number of ticks between initialized ticks for pools created with the given fee"
									},
									"id": 337,
									"name": "FeeAmountEnabled",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 336,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 333,
												"indexed": true,
												"mutability": "mutable",
												"name": "fee",
												"nodeType": "VariableDeclaration",
												"scope": 337,
												"src": "1435:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 332,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "1435:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 335,
												"indexed": true,
												"mutability": "mutable",
												"name": "tickSpacing",
												"nodeType": "VariableDeclaration",
												"scope": 337,
												"src": "1455:25:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 334,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1455:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1434:47:1"
									},
									"src": "1412:70:1"
								},
								{
									"documentation": {
										"id": 338,
										"nodeType": "StructuredDocumentation",
										"src": "1488:163:1",
										"text": "@notice Returns the current owner of the factory\n @dev Can be changed by the current owner via setOwner\n @return The address of the factory owner"
									},
									"functionSelector": "8da5cb5b",
									"id": 343,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 339,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1670:2:1"
									},
									"returnParameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 343,
												"src": "1696:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 340,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1696:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1695:9:1"
									},
									"scope": 390,
									"src": "1656:49:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 344,
										"nodeType": "StructuredDocumentation",
										"src": "1711:348:1",
										"text": "@notice Returns the tick spacing for a given fee amount, if enabled, or 0 if not enabled\n @dev A fee amount can never be removed, so this value should be hard coded or cached in the calling context\n @param fee The enabled fee, denominated in hundredths of a bip. Returns 0 in case of unenabled fee\n @return The tick spacing"
									},
									"functionSelector": "22afcccb",
									"id": 351,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "feeAmountTickSpacing",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 346,
												"mutability": "mutable",
												"name": "fee",
												"nodeType": "VariableDeclaration",
												"scope": 351,
												"src": "2094:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 345,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "2094:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2093:12:1"
									},
									"returnParameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 351,
												"src": "2129:5:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 348,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "2129:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2128:7:1"
									},
									"scope": 390,
									"src": "2064:72:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 352,
										"nodeType": "StructuredDocumentation",
										"src": "2142:471:1",
										"text": "@notice Returns the pool address for a given pair of tokens and a fee, or address 0 if it does not exist\n @dev tokenA and tokenB may be passed in either token0/token1 or token1/token0 order\n @param tokenA The contract address of either token0 or token1\n @param tokenB The contract address of the other token\n @param fee The fee collected upon every swap in the pool, denominated in hundredths of a bip\n @return pool The pool address"
									},
									"functionSelector": "1698ee82",
									"id": 363,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getPool",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 354,
												"mutability": "mutable",
												"name": "tokenA",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "2644:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 353,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2644:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 356,
												"mutability": "mutable",
												"name": "tokenB",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "2668:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 355,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2668:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "fee",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "2692:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 357,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "2692:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2634:74:1"
									},
									"returnParameters": {
										"id": 362,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 361,
												"mutability": "mutable",
												"name": "pool",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "2732:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 360,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2732:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2731:14:1"
									},
									"scope": 390,
									"src": "2618:128:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 364,
										"nodeType": "StructuredDocumentation",
										"src": "2752:554:1",
										"text": "@notice Creates a pool for the given two tokens and fee\n @param tokenA One of the two tokens in the desired pool\n @param tokenB The other of the two tokens in the desired pool\n @param fee The desired fee for the pool\n @dev tokenA and tokenB may be passed in either order: token0/token1 or token1/token0. tickSpacing is retrieved\n from the fee. The call will revert if the pool already exists, the fee is invalid, or the token arguments\n are invalid.\n @return pool The address of the newly created pool"
									},
									"functionSelector": "a1671295",
									"id": 375,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "createPool",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 371,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 366,
												"mutability": "mutable",
												"name": "tokenA",
												"nodeType": "VariableDeclaration",
												"scope": 375,
												"src": "3340:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 365,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3340:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 368,
												"mutability": "mutable",
												"name": "tokenB",
												"nodeType": "VariableDeclaration",
												"scope": 375,
												"src": "3364:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 367,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3364:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 370,
												"mutability": "mutable",
												"name": "fee",
												"nodeType": "VariableDeclaration",
												"scope": 375,
												"src": "3388:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 369,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "3388:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3330:74:1"
									},
									"returnParameters": {
										"id": 374,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 373,
												"mutability": "mutable",
												"name": "pool",
												"nodeType": "VariableDeclaration",
												"scope": 375,
												"src": "3423:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 372,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3423:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3422:14:1"
									},
									"scope": 390,
									"src": "3311:126:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 376,
										"nodeType": "StructuredDocumentation",
										"src": "3443:144:1",
										"text": "@notice Updates the owner of the factory\n @dev Must be called by the current owner\n @param _owner The new owner of the factory"
									},
									"functionSelector": "13af4035",
									"id": 381,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setOwner",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 378,
												"mutability": "mutable",
												"name": "_owner",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "3610:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 377,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3610:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3609:16:1"
									},
									"returnParameters": {
										"id": 380,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3634:0:1"
									},
									"scope": 390,
									"src": "3592:43:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 382,
										"nodeType": "StructuredDocumentation",
										"src": "3641:326:1",
										"text": "@notice Enables a fee amount with the given tickSpacing\n @dev Fee amounts may never be removed once enabled\n @param fee The fee amount to enable, denominated in hundredths of a bip (i.e. 1e-6)\n @param tickSpacing The spacing between ticks to be enforced for all pools created with the given fee amount"
									},
									"functionSelector": "8a7c195f",
									"id": 389,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "enableFeeAmount",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 387,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "fee",
												"nodeType": "VariableDeclaration",
												"scope": 389,
												"src": "3997:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 383,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "3997:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "tickSpacing",
												"nodeType": "VariableDeclaration",
												"scope": 389,
												"src": "4009:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 385,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "4009:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3996:31:1"
									},
									"returnParameters": {
										"id": 388,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4036:0:1"
									},
									"scope": 390,
									"src": "3972:65:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 391,
							"src": "234:3805:1"
						}
					],
					"src": "45:3995:1"
				},
				"id": 1
			},
			"@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol": {
				"ast": {
					"absolutePath": "@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol",
					"exportedSymbols": {
						"IUniswapV3Pool": [
							412
						],
						"IUniswapV3PoolActions": [
							508
						],
						"IUniswapV3PoolDerivedState": [
							539
						],
						"IUniswapV3PoolEvents": [
							658
						],
						"IUniswapV3PoolImmutables": [
							698
						],
						"IUniswapV3PoolOwnerActions": [
							724
						],
						"IUniswapV3PoolState": [
							832
						]
					},
					"id": 413,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 392,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:2"
						},
						{
							"absolutePath": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol",
							"file": "./pool/IUniswapV3PoolImmutables.sol",
							"id": 393,
							"nodeType": "ImportDirective",
							"scope": 413,
							"sourceUnit": 699,
							"src": "71:45:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol",
							"file": "./pool/IUniswapV3PoolState.sol",
							"id": 394,
							"nodeType": "ImportDirective",
							"scope": 413,
							"sourceUnit": 833,
							"src": "117:40:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol",
							"file": "./pool/IUniswapV3PoolDerivedState.sol",
							"id": 395,
							"nodeType": "ImportDirective",
							"scope": 413,
							"sourceUnit": 540,
							"src": "158:47:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol",
							"file": "./pool/IUniswapV3PoolActions.sol",
							"id": 396,
							"nodeType": "ImportDirective",
							"scope": 413,
							"sourceUnit": 509,
							"src": "206:42:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol",
							"file": "./pool/IUniswapV3PoolOwnerActions.sol",
							"id": 397,
							"nodeType": "ImportDirective",
							"scope": 413,
							"sourceUnit": 725,
							"src": "249:47:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol",
							"file": "./pool/IUniswapV3PoolEvents.sol",
							"id": 398,
							"nodeType": "ImportDirective",
							"scope": 413,
							"sourceUnit": 659,
							"src": "297:41:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 400,
										"name": "IUniswapV3PoolImmutables",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 698,
										"src": "637:24:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IUniswapV3PoolImmutables_$698",
											"typeString": "contract IUniswapV3PoolImmutables"
										}
									},
									"id": 401,
									"nodeType": "InheritanceSpecifier",
									"src": "637:24:2"
								},
								{
									"baseName": {
										"id": 402,
										"name": "IUniswapV3PoolState",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 832,
										"src": "667:19:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IUniswapV3PoolState_$832",
											"typeString": "contract IUniswapV3PoolState"
										}
									},
									"id": 403,
									"nodeType": "InheritanceSpecifier",
									"src": "667:19:2"
								},
								{
									"baseName": {
										"id": 404,
										"name": "IUniswapV3PoolDerivedState",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 539,
										"src": "692:26:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IUniswapV3PoolDerivedState_$539",
											"typeString": "contract IUniswapV3PoolDerivedState"
										}
									},
									"id": 405,
									"nodeType": "InheritanceSpecifier",
									"src": "692:26:2"
								},
								{
									"baseName": {
										"id": 406,
										"name": "IUniswapV3PoolActions",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 508,
										"src": "724:21:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IUniswapV3PoolActions_$508",
											"typeString": "contract IUniswapV3PoolActions"
										}
									},
									"id": 407,
									"nodeType": "InheritanceSpecifier",
									"src": "724:21:2"
								},
								{
									"baseName": {
										"id": 408,
										"name": "IUniswapV3PoolOwnerActions",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 724,
										"src": "751:26:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IUniswapV3PoolOwnerActions_$724",
											"typeString": "contract IUniswapV3PoolOwnerActions"
										}
									},
									"id": 409,
									"nodeType": "InheritanceSpecifier",
									"src": "751:26:2"
								},
								{
									"baseName": {
										"id": 410,
										"name": "IUniswapV3PoolEvents",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 658,
										"src": "783:20:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IUniswapV3PoolEvents_$658",
											"typeString": "contract IUniswapV3PoolEvents"
										}
									},
									"id": 411,
									"nodeType": "InheritanceSpecifier",
									"src": "783:20:2"
								}
							],
							"contractDependencies": [
								508,
								539,
								658,
								698,
								724,
								832
							],
							"contractKind": "interface",
							"documentation": {
								"id": 399,
								"nodeType": "StructuredDocumentation",
								"src": "340:265:2",
								"text": "@title The interface for a Uniswap V3 Pool\n @notice A Uniswap pool facilitates swapping and automated market making between any two assets that strictly conform\n to the ERC20 specification\n @dev The pool interface is broken up into many smaller pieces"
							},
							"fullyImplemented": false,
							"id": 412,
							"linearizedBaseContracts": [
								412,
								658,
								724,
								508,
								539,
								832,
								698
							],
							"name": "IUniswapV3Pool",
							"nodeType": "ContractDefinition",
							"nodes": [],
							"scope": 413,
							"src": "605:203:2"
						}
					],
					"src": "45:764:2"
				},
				"id": 2
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol": {
				"ast": {
					"absolutePath": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol",
					"exportedSymbols": {
						"IUniswapV3PoolActions": [
							508
						]
					},
					"id": 509,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 414,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 415,
								"nodeType": "StructuredDocumentation",
								"src": "71:102:3",
								"text": "@title Permissionless pool actions\n @notice Contains pool methods that can be called by anyone"
							},
							"fullyImplemented": false,
							"id": 508,
							"linearizedBaseContracts": [
								508
							],
							"name": "IUniswapV3PoolActions",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 416,
										"nodeType": "StructuredDocumentation",
										"src": "211:206:3",
										"text": "@notice Sets the initial price for the pool\n @dev Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value\n @param sqrtPriceX96 the initial sqrt price of the pool as a Q64.96"
									},
									"functionSelector": "f637731d",
									"id": 421,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "initialize",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 419,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 418,
												"mutability": "mutable",
												"name": "sqrtPriceX96",
												"nodeType": "VariableDeclaration",
												"scope": 421,
												"src": "442:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 417,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "442:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "441:22:3"
									},
									"returnParameters": {
										"id": 420,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "472:0:3"
									},
									"scope": 508,
									"src": "422:51:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 422,
										"nodeType": "StructuredDocumentation",
										"src": "479:1029:3",
										"text": "@notice Adds liquidity for the given recipient/tickLower/tickUpper position\n @dev The caller of this method receives a callback in the form of IUniswapV3MintCallback#uniswapV3MintCallback\n in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends\n on tickLower, tickUpper, the amount of liquidity, and the current price.\n @param recipient The address for which the liquidity will be created\n @param tickLower The lower tick of the position in which to add liquidity\n @param tickUpper The upper tick of the position in which to add liquidity\n @param amount The amount of liquidity to mint\n @param data Any data that should be passed through to the callback\n @return amount0 The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback\n @return amount1 The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback"
									},
									"functionSelector": "3c8a7d8d",
									"id": 439,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 433,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 424,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 439,
												"src": "1536:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 423,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1536:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 426,
												"mutability": "mutable",
												"name": "tickLower",
												"nodeType": "VariableDeclaration",
												"scope": 439,
												"src": "1563:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 425,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1563:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 428,
												"mutability": "mutable",
												"name": "tickUpper",
												"nodeType": "VariableDeclaration",
												"scope": 439,
												"src": "1588:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 427,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1588:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 430,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 439,
												"src": "1613:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 429,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1613:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 432,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 439,
												"src": "1637:19:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 431,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1637:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1526:136:3"
									},
									"returnParameters": {
										"id": 438,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 435,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 439,
												"src": "1681:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 434,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1681:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 437,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 439,
												"src": "1698:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 436,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1698:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1680:34:3"
									},
									"scope": 508,
									"src": "1513:202:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 440,
										"nodeType": "StructuredDocumentation",
										"src": "1721:1053:3",
										"text": "@notice Collects tokens owed to a position\n @dev Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity.\n Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or\n amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the\n actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.\n @param recipient The address which should receive the fees collected\n @param tickLower The lower tick of the position for which to collect fees\n @param tickUpper The upper tick of the position for which to collect fees\n @param amount0Requested How much token0 should be withdrawn from the fees owed\n @param amount1Requested How much token1 should be withdrawn from the fees owed\n @return amount0 The amount of fees collected in token0\n @return amount1 The amount of fees collected in token1"
									},
									"functionSelector": "4f1eb3d8",
									"id": 457,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "collect",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 451,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 442,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 457,
												"src": "2805:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 441,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2805:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 444,
												"mutability": "mutable",
												"name": "tickLower",
												"nodeType": "VariableDeclaration",
												"scope": 457,
												"src": "2832:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 443,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "2832:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 446,
												"mutability": "mutable",
												"name": "tickUpper",
												"nodeType": "VariableDeclaration",
												"scope": 457,
												"src": "2857:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 445,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "2857:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 448,
												"mutability": "mutable",
												"name": "amount0Requested",
												"nodeType": "VariableDeclaration",
												"scope": 457,
												"src": "2882:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 447,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2882:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 450,
												"mutability": "mutable",
												"name": "amount1Requested",
												"nodeType": "VariableDeclaration",
												"scope": 457,
												"src": "2916:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 449,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2916:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2795:151:3"
									},
									"returnParameters": {
										"id": 456,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 457,
												"src": "2965:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 452,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2965:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 457,
												"src": "2982:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 454,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2982:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2964:34:3"
									},
									"scope": 508,
									"src": "2779:220:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 458,
										"nodeType": "StructuredDocumentation",
										"src": "3005:631:3",
										"text": "@notice Burn liquidity from the sender and account tokens owed for the liquidity to the position\n @dev Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0\n @dev Fees must be collected separately via a call to #collect\n @param tickLower The lower tick of the position for which to burn liquidity\n @param tickUpper The upper tick of the position for which to burn liquidity\n @param amount How much liquidity to burn\n @return amount0 The amount of token0 sent to the recipient\n @return amount1 The amount of token1 sent to the recipient"
									},
									"functionSelector": "a34123a7",
									"id": 471,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 465,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "tickLower",
												"nodeType": "VariableDeclaration",
												"scope": 471,
												"src": "3664:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 459,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "3664:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 462,
												"mutability": "mutable",
												"name": "tickUpper",
												"nodeType": "VariableDeclaration",
												"scope": 471,
												"src": "3689:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 461,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "3689:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 464,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 471,
												"src": "3714:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 463,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "3714:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3654:80:3"
									},
									"returnParameters": {
										"id": 470,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 467,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 471,
												"src": "3753:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 466,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3753:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 469,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 471,
												"src": "3770:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 468,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3770:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3752:34:3"
									},
									"scope": 508,
									"src": "3641:146:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 472,
										"nodeType": "StructuredDocumentation",
										"src": "3793:1015:3",
										"text": "@notice Swap token0 for token1, or token1 for token0\n @dev The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback\n @param recipient The address to receive the output of the swap\n @param zeroForOne The direction of the swap, true for token0 to token1, false for token1 to token0\n @param amountSpecified The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)\n @param sqrtPriceLimitX96 The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this\n value after the swap. If one for zero, the price cannot be greater than this value after the swap\n @param data Any data to be passed through to the callback\n @return amount0 The delta of the balance of token0 of the pool, exact when negative, minimum when positive\n @return amount1 The delta of the balance of token1 of the pool, exact when negative, minimum when positive"
									},
									"functionSelector": "128acb08",
									"id": 489,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swap",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 483,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 474,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 489,
												"src": "4836:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 473,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4836:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 476,
												"mutability": "mutable",
												"name": "zeroForOne",
												"nodeType": "VariableDeclaration",
												"scope": 489,
												"src": "4863:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 475,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4863:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 478,
												"mutability": "mutable",
												"name": "amountSpecified",
												"nodeType": "VariableDeclaration",
												"scope": 489,
												"src": "4888:22:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 477,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "4888:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 480,
												"mutability": "mutable",
												"name": "sqrtPriceLimitX96",
												"nodeType": "VariableDeclaration",
												"scope": 489,
												"src": "4920:25:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 479,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "4920:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 482,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 489,
												"src": "4955:19:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 481,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4955:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4826:154:3"
									},
									"returnParameters": {
										"id": 488,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 485,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 489,
												"src": "4999:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 484,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "4999:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 489,
												"src": "5015:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 486,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "5015:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4998:32:3"
									},
									"scope": 508,
									"src": "4813:218:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 490,
										"nodeType": "StructuredDocumentation",
										"src": "5037:657:3",
										"text": "@notice Receive token0 and/or token1 and pay it back, plus a fee, in the callback\n @dev The caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallback\n @dev Can be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling\n with 0 amount{0,1} and sending the donation amount(s) from the callback\n @param recipient The address which will receive the token0 and token1 amounts\n @param amount0 The amount of token0 to send\n @param amount1 The amount of token1 to send\n @param data Any data to be passed through to the callback"
									},
									"functionSelector": "490e6cbc",
									"id": 501,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "flash",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 499,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 492,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 501,
												"src": "5723:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 491,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5723:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 494,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 501,
												"src": "5750:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 493,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5750:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 496,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 501,
												"src": "5775:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 495,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5775:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 498,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 501,
												"src": "5800:19:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 497,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5800:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5713:112:3"
									},
									"returnParameters": {
										"id": 500,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5834:0:3"
									},
									"scope": 508,
									"src": "5699:136:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 502,
										"nodeType": "StructuredDocumentation",
										"src": "5841:367:3",
										"text": "@notice Increase the maximum number of price and liquidity observations that this pool will store\n @dev This method is no-op if the pool already has an observationCardinalityNext greater than or equal to\n the input observationCardinalityNext.\n @param observationCardinalityNext The desired minimum number of observations for the pool to store"
									},
									"functionSelector": "32148f67",
									"id": 507,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "increaseObservationCardinalityNext",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 505,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 504,
												"mutability": "mutable",
												"name": "observationCardinalityNext",
												"nodeType": "VariableDeclaration",
												"scope": 507,
												"src": "6257:33:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 503,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "6257:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6256:35:3"
									},
									"returnParameters": {
										"id": 506,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6300:0:3"
									},
									"scope": 508,
									"src": "6213:88:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 509,
							"src": "173:6130:3"
						}
					],
					"src": "45:6259:3"
				},
				"id": 3
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol": {
				"ast": {
					"absolutePath": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol",
					"exportedSymbols": {
						"IUniswapV3PoolDerivedState": [
							539
						]
					},
					"id": 540,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 510,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 511,
								"nodeType": "StructuredDocumentation",
								"src": "71:222:4",
								"text": "@title Pool state that is not stored\n @notice Contains view functions to provide information about the pool that is computed rather than stored on the\n blockchain. The functions here may have variable gas costs."
							},
							"fullyImplemented": false,
							"id": 539,
							"linearizedBaseContracts": [
								539
							],
							"name": "IUniswapV3PoolDerivedState",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 512,
										"nodeType": "StructuredDocumentation",
										"src": "336:1045:4",
										"text": "@notice Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp\n @dev To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing\n the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick,\n you must call it with secondsAgos = [3600, 0].\n @dev The time weighted average tick represents the geometric time weighted average price of the pool, in\n log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.\n @param secondsAgos From how long ago each cumulative tick and liquidity value should be returned\n @return tickCumulatives Cumulative tick values as of each `secondsAgos` from the current block timestamp\n @return secondsPerLiquidityCumulativeX128s Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block\n timestamp"
									},
									"functionSelector": "883bdbfd",
									"id": 524,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "observe",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 516,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 515,
												"mutability": "mutable",
												"name": "secondsAgos",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "1403:29:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint32_$dyn_calldata_ptr",
													"typeString": "uint32[]"
												},
												"typeName": {
													"baseType": {
														"id": 513,
														"name": "uint32",
														"nodeType": "ElementaryTypeName",
														"src": "1403:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"id": 514,
													"nodeType": "ArrayTypeName",
													"src": "1403:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint32_$dyn_storage_ptr",
														"typeString": "uint32[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1402:31:4"
									},
									"returnParameters": {
										"id": 523,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 519,
												"mutability": "mutable",
												"name": "tickCumulatives",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "1481:30:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_int56_$dyn_memory_ptr",
													"typeString": "int56[]"
												},
												"typeName": {
													"baseType": {
														"id": 517,
														"name": "int56",
														"nodeType": "ElementaryTypeName",
														"src": "1481:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_int56",
															"typeString": "int56"
														}
													},
													"id": 518,
													"nodeType": "ArrayTypeName",
													"src": "1481:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_int56_$dyn_storage_ptr",
														"typeString": "int56[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 522,
												"mutability": "mutable",
												"name": "secondsPerLiquidityCumulativeX128s",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "1513:51:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint160_$dyn_memory_ptr",
													"typeString": "uint160[]"
												},
												"typeName": {
													"baseType": {
														"id": 520,
														"name": "uint160",
														"nodeType": "ElementaryTypeName",
														"src": "1513:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"id": 521,
													"nodeType": "ArrayTypeName",
													"src": "1513:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint160_$dyn_storage_ptr",
														"typeString": "uint160[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1480:85:4"
									},
									"scope": 539,
									"src": "1386:180:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 525,
										"nodeType": "StructuredDocumentation",
										"src": "1572:771:4",
										"text": "@notice Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range\n @dev Snapshots must only be compared to other snapshots, taken over a period for which a position existed.\n I.e., snapshots cannot be compared if a position is not held for the entire period between when the first\n snapshot is taken and the second snapshot is taken.\n @param tickLower The lower tick of the range\n @param tickUpper The upper tick of the range\n @return tickCumulativeInside The snapshot of the tick accumulator for the range\n @return secondsPerLiquidityInsideX128 The snapshot of seconds per liquidity for the range\n @return secondsInside The snapshot of seconds per liquidity for the range"
									},
									"functionSelector": "a38807f2",
									"id": 538,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "snapshotCumulativesInside",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 530,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 527,
												"mutability": "mutable",
												"name": "tickLower",
												"nodeType": "VariableDeclaration",
												"scope": 538,
												"src": "2383:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 526,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "2383:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 529,
												"mutability": "mutable",
												"name": "tickUpper",
												"nodeType": "VariableDeclaration",
												"scope": 538,
												"src": "2400:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 528,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "2400:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2382:34:4"
									},
									"returnParameters": {
										"id": 537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 532,
												"mutability": "mutable",
												"name": "tickCumulativeInside",
												"nodeType": "VariableDeclaration",
												"scope": 538,
												"src": "2477:26:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int56",
													"typeString": "int56"
												},
												"typeName": {
													"id": 531,
													"name": "int56",
													"nodeType": "ElementaryTypeName",
													"src": "2477:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_int56",
														"typeString": "int56"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 534,
												"mutability": "mutable",
												"name": "secondsPerLiquidityInsideX128",
												"nodeType": "VariableDeclaration",
												"scope": 538,
												"src": "2517:37:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 533,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "2517:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 536,
												"mutability": "mutable",
												"name": "secondsInside",
												"nodeType": "VariableDeclaration",
												"scope": 538,
												"src": "2568:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 535,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "2568:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2463:135:4"
									},
									"scope": 539,
									"src": "2348:251:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 540,
							"src": "293:2308:4"
						}
					],
					"src": "45:2557:4"
				},
				"id": 4
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol": {
				"ast": {
					"absolutePath": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol",
					"exportedSymbols": {
						"IUniswapV3PoolEvents": [
							658
						]
					},
					"id": 659,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 541,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 542,
								"nodeType": "StructuredDocumentation",
								"src": "71:88:5",
								"text": "@title Events emitted by a pool\n @notice Contains all events emitted by the pool"
							},
							"fullyImplemented": true,
							"id": 658,
							"linearizedBaseContracts": [
								658
							],
							"name": "IUniswapV3PoolEvents",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 543,
										"nodeType": "StructuredDocumentation",
										"src": "196:344:5",
										"text": "@notice Emitted exactly once by a pool when #initialize is first called on the pool\n @dev Mint/Burn/Swap cannot be emitted by the pool before Initialize\n @param sqrtPriceX96 The initial sqrt price of the pool, as a Q64.96\n @param tick The initial tick of the pool, i.e. log base 1.0001 of the starting price of the pool"
									},
									"id": 549,
									"name": "Initialize",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 548,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 545,
												"indexed": false,
												"mutability": "mutable",
												"name": "sqrtPriceX96",
												"nodeType": "VariableDeclaration",
												"scope": 549,
												"src": "562:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 544,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "562:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 547,
												"indexed": false,
												"mutability": "mutable",
												"name": "tick",
												"nodeType": "VariableDeclaration",
												"scope": 549,
												"src": "584:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 546,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "584:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "561:34:5"
									},
									"src": "545:51:5"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 550,
										"nodeType": "StructuredDocumentation",
										"src": "602:551:5",
										"text": "@notice Emitted when liquidity is minted for a given position\n @param sender The address that minted the liquidity\n @param owner The owner of the position and recipient of any minted liquidity\n @param tickLower The lower tick of the position\n @param tickUpper The upper tick of the position\n @param amount The amount of liquidity minted to the position range\n @param amount0 How much token0 was required for the minted liquidity\n @param amount1 How much token1 was required for the minted liquidity"
									},
									"id": 566,
									"name": "Mint",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 565,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 552,
												"indexed": false,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 566,
												"src": "1178:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 551,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1178:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 554,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 566,
												"src": "1202:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 553,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1202:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 556,
												"indexed": true,
												"mutability": "mutable",
												"name": "tickLower",
												"nodeType": "VariableDeclaration",
												"scope": 566,
												"src": "1233:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 555,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1233:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 558,
												"indexed": true,
												"mutability": "mutable",
												"name": "tickUpper",
												"nodeType": "VariableDeclaration",
												"scope": 566,
												"src": "1266:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 557,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1266:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 560,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 566,
												"src": "1299:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 559,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1299:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 562,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 566,
												"src": "1323:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 561,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1323:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 564,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 566,
												"src": "1348:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 563,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1348:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1168:201:5"
									},
									"src": "1158:212:5"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 567,
										"nodeType": "StructuredDocumentation",
										"src": "1376:493:5",
										"text": "@notice Emitted when fees are collected by the owner of a position\n @dev Collect events may be emitted with zero amount0 and amount1 when the caller chooses not to collect fees\n @param owner The owner of the position for which fees are collected\n @param tickLower The lower tick of the position\n @param tickUpper The upper tick of the position\n @param amount0 The amount of token0 fees collected\n @param amount1 The amount of token1 fees collected"
									},
									"id": 581,
									"name": "Collect",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 580,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 569,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 581,
												"src": "1897:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 568,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1897:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 571,
												"indexed": false,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 581,
												"src": "1928:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 570,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1928:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 573,
												"indexed": true,
												"mutability": "mutable",
												"name": "tickLower",
												"nodeType": "VariableDeclaration",
												"scope": 581,
												"src": "1955:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 572,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1955:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 575,
												"indexed": true,
												"mutability": "mutable",
												"name": "tickUpper",
												"nodeType": "VariableDeclaration",
												"scope": 581,
												"src": "1988:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 574,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1988:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 577,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 581,
												"src": "2021:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 576,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2021:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 579,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 581,
												"src": "2046:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 578,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2046:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1887:180:5"
									},
									"src": "1874:194:5"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 582,
										"nodeType": "StructuredDocumentation",
										"src": "2074:523:5",
										"text": "@notice Emitted when a position's liquidity is removed\n @dev Does not withdraw any fees earned by the liquidity position, which must be withdrawn via #collect\n @param owner The owner of the position for which liquidity is removed\n @param tickLower The lower tick of the position\n @param tickUpper The upper tick of the position\n @param amount The amount of liquidity to remove\n @param amount0 The amount of token0 withdrawn\n @param amount1 The amount of token1 withdrawn"
									},
									"id": 596,
									"name": "Burn",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 595,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 584,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 596,
												"src": "2622:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 583,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2622:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 586,
												"indexed": true,
												"mutability": "mutable",
												"name": "tickLower",
												"nodeType": "VariableDeclaration",
												"scope": 596,
												"src": "2653:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 585,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "2653:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 588,
												"indexed": true,
												"mutability": "mutable",
												"name": "tickUpper",
												"nodeType": "VariableDeclaration",
												"scope": 596,
												"src": "2686:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 587,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "2686:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 590,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 596,
												"src": "2719:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 589,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2719:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 592,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 596,
												"src": "2743:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 591,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2743:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 594,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 596,
												"src": "2768:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 593,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2768:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2612:177:5"
									},
									"src": "2602:188:5"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 597,
										"nodeType": "StructuredDocumentation",
										"src": "2796:600:5",
										"text": "@notice Emitted by the pool for any swaps between token0 and token1\n @param sender The address that initiated the swap call, and that received the callback\n @param recipient The address that received the output of the swap\n @param amount0 The delta of the token0 balance of the pool\n @param amount1 The delta of the token1 balance of the pool\n @param sqrtPriceX96 The sqrt(price) of the pool after the swap, as a Q64.96\n @param liquidity The liquidity of the pool after the swap\n @param tick The log base 1.0001 of price of the pool after the swap"
									},
									"id": 613,
									"name": "Swap",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 599,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 613,
												"src": "3421:22:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 598,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3421:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 601,
												"indexed": true,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 613,
												"src": "3453:25:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 600,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3453:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 603,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 613,
												"src": "3488:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 602,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "3488:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 605,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 613,
												"src": "3512:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 604,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "3512:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 607,
												"indexed": false,
												"mutability": "mutable",
												"name": "sqrtPriceX96",
												"nodeType": "VariableDeclaration",
												"scope": 613,
												"src": "3536:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 606,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "3536:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 609,
												"indexed": false,
												"mutability": "mutable",
												"name": "liquidity",
												"nodeType": "VariableDeclaration",
												"scope": 613,
												"src": "3566:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 608,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "3566:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 611,
												"indexed": false,
												"mutability": "mutable",
												"name": "tick",
												"nodeType": "VariableDeclaration",
												"scope": 613,
												"src": "3593:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 610,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "3593:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3411:198:5"
									},
									"src": "3401:209:5"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 614,
										"nodeType": "StructuredDocumentation",
										"src": "3616:562:5",
										"text": "@notice Emitted by the pool for any flashes of token0/token1\n @param sender The address that initiated the swap call, and that received the callback\n @param recipient The address that received the tokens from flash\n @param amount0 The amount of token0 that was flashed\n @param amount1 The amount of token1 that was flashed\n @param paid0 The amount of token0 paid for the flash, which can exceed the amount0 plus the fee\n @param paid1 The amount of token1 paid for the flash, which can exceed the amount1 plus the fee"
									},
									"id": 628,
									"name": "Flash",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 627,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 616,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 628,
												"src": "4204:22:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 615,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4204:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 618,
												"indexed": true,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 628,
												"src": "4236:25:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 617,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4236:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 620,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 628,
												"src": "4271:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 619,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4271:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 622,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 628,
												"src": "4296:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 621,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4296:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 624,
												"indexed": false,
												"mutability": "mutable",
												"name": "paid0",
												"nodeType": "VariableDeclaration",
												"scope": 628,
												"src": "4321:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 623,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4321:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 626,
												"indexed": false,
												"mutability": "mutable",
												"name": "paid1",
												"nodeType": "VariableDeclaration",
												"scope": 628,
												"src": "4344:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 625,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4344:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4194:169:5"
									},
									"src": "4183:181:5"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 629,
										"nodeType": "StructuredDocumentation",
										"src": "4370:451:5",
										"text": "@notice Emitted by the pool for increases to the number of observations that can be stored\n @dev observationCardinalityNext is not the observation cardinality until an observation is written at the index\n just before a mint/swap/burn.\n @param observationCardinalityNextOld The previous value of the next observation cardinality\n @param observationCardinalityNextNew The updated value of the next observation cardinality"
									},
									"id": 635,
									"name": "IncreaseObservationCardinalityNext",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 634,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 631,
												"indexed": false,
												"mutability": "mutable",
												"name": "observationCardinalityNextOld",
												"nodeType": "VariableDeclaration",
												"scope": 635,
												"src": "4876:36:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 630,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "4876:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 633,
												"indexed": false,
												"mutability": "mutable",
												"name": "observationCardinalityNextNew",
												"nodeType": "VariableDeclaration",
												"scope": 635,
												"src": "4922:36:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 632,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "4922:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4866:98:5"
									},
									"src": "4826:139:5"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 636,
										"nodeType": "StructuredDocumentation",
										"src": "4971:370:5",
										"text": "@notice Emitted when the protocol fee is changed by the pool\n @param feeProtocol0Old The previous value of the token0 protocol fee\n @param feeProtocol1Old The previous value of the token1 protocol fee\n @param feeProtocol0New The updated value of the token0 protocol fee\n @param feeProtocol1New The updated value of the token1 protocol fee"
									},
									"id": 646,
									"name": "SetFeeProtocol",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 638,
												"indexed": false,
												"mutability": "mutable",
												"name": "feeProtocol0Old",
												"nodeType": "VariableDeclaration",
												"scope": 646,
												"src": "5367:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 637,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "5367:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 640,
												"indexed": false,
												"mutability": "mutable",
												"name": "feeProtocol1Old",
												"nodeType": "VariableDeclaration",
												"scope": 646,
												"src": "5390:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 639,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "5390:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 642,
												"indexed": false,
												"mutability": "mutable",
												"name": "feeProtocol0New",
												"nodeType": "VariableDeclaration",
												"scope": 646,
												"src": "5413:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 641,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "5413:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 644,
												"indexed": false,
												"mutability": "mutable",
												"name": "feeProtocol1New",
												"nodeType": "VariableDeclaration",
												"scope": 646,
												"src": "5436:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 643,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "5436:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5366:92:5"
									},
									"src": "5346:113:5"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 647,
										"nodeType": "StructuredDocumentation",
										"src": "5465:384:5",
										"text": "@notice Emitted when the collected protocol fees are withdrawn by the factory owner\n @param sender The address that collects the protocol fees\n @param recipient The address that receives the collected protocol fees\n @param amount0 The amount of token0 protocol fees that is withdrawn\n @param amount0 The amount of token1 protocol fees that is withdrawn"
									},
									"id": 657,
									"name": "CollectProtocol",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 656,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 649,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 657,
												"src": "5876:22:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 648,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5876:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 651,
												"indexed": true,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 657,
												"src": "5900:25:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 650,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5900:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 653,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 657,
												"src": "5927:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 652,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "5927:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 655,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 657,
												"src": "5944:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 654,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "5944:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5875:85:5"
									},
									"src": "5854:107:5"
								}
							],
							"scope": 659,
							"src": "159:5804:5"
						}
					],
					"src": "45:5919:5"
				},
				"id": 5
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol": {
				"ast": {
					"absolutePath": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol",
					"exportedSymbols": {
						"IUniswapV3PoolImmutables": [
							698
						]
					},
					"id": 699,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 660,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 661,
								"nodeType": "StructuredDocumentation",
								"src": "71:153:6",
								"text": "@title Pool state that never changes\n @notice These parameters are fixed for a pool forever, i.e., the methods will always return the same values"
							},
							"fullyImplemented": false,
							"id": 698,
							"linearizedBaseContracts": [
								698
							],
							"name": "IUniswapV3PoolImmutables",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 662,
										"nodeType": "StructuredDocumentation",
										"src": "265:138:6",
										"text": "@notice The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface\n @return The contract address"
									},
									"functionSelector": "c45a0155",
									"id": 667,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "factory",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 663,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "424:2:6"
									},
									"returnParameters": {
										"id": 666,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 665,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 667,
												"src": "450:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 664,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "450:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "449:9:6"
									},
									"scope": 698,
									"src": "408:51:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 668,
										"nodeType": "StructuredDocumentation",
										"src": "465:113:6",
										"text": "@notice The first of the two tokens of the pool, sorted by address\n @return The token contract address"
									},
									"functionSelector": "0dfe1681",
									"id": 673,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "token0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 669,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "598:2:6"
									},
									"returnParameters": {
										"id": 672,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 671,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 673,
												"src": "624:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 670,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "624:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "623:9:6"
									},
									"scope": 698,
									"src": "583:50:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 674,
										"nodeType": "StructuredDocumentation",
										"src": "639:114:6",
										"text": "@notice The second of the two tokens of the pool, sorted by address\n @return The token contract address"
									},
									"functionSelector": "d21220a7",
									"id": 679,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "token1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 675,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "773:2:6"
									},
									"returnParameters": {
										"id": 678,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 677,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 679,
												"src": "799:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 676,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "799:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "798:9:6"
									},
									"scope": 698,
									"src": "758:50:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 680,
										"nodeType": "StructuredDocumentation",
										"src": "814:84:6",
										"text": "@notice The pool's fee in hundredths of a bip, i.e. 1e-6\n @return The fee"
									},
									"functionSelector": "ddca3f43",
									"id": 685,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "fee",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 681,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "915:2:6"
									},
									"returnParameters": {
										"id": 684,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 683,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 685,
												"src": "941:6:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 682,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "941:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "940:8:6"
									},
									"scope": 698,
									"src": "903:46:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 686,
										"nodeType": "StructuredDocumentation",
										"src": "955:358:6",
										"text": "@notice The pool tick spacing\n @dev Ticks can only be used at multiples of this value, minimum of 1 and always positive\n e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ...\n This value is an int24 to avoid casting even though it is always positive.\n @return The tick spacing"
									},
									"functionSelector": "d0c93a7c",
									"id": 691,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tickSpacing",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 687,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1338:2:6"
									},
									"returnParameters": {
										"id": 690,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 689,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 691,
												"src": "1364:5:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 688,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1364:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1363:7:6"
									},
									"scope": 698,
									"src": "1318:53:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 692,
										"nodeType": "StructuredDocumentation",
										"src": "1377:363:6",
										"text": "@notice The maximum amount of position liquidity that can use any tick in the range\n @dev This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and\n also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool\n @return The max amount of liquidity per tick"
									},
									"functionSelector": "70cf754a",
									"id": 697,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "maxLiquidityPerTick",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 693,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1773:2:6"
									},
									"returnParameters": {
										"id": 696,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 695,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 697,
												"src": "1799:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 694,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1799:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1798:9:6"
									},
									"scope": 698,
									"src": "1745:63:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 699,
							"src": "224:1586:6"
						}
					],
					"src": "45:1766:6"
				},
				"id": 6
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol": {
				"ast": {
					"absolutePath": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol",
					"exportedSymbols": {
						"IUniswapV3PoolOwnerActions": [
							724
						]
					},
					"id": 725,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 700,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 701,
								"nodeType": "StructuredDocumentation",
								"src": "71:116:7",
								"text": "@title Permissioned pool actions\n @notice Contains pool methods that may only be called by the factory owner"
							},
							"fullyImplemented": false,
							"id": 724,
							"linearizedBaseContracts": [
								724
							],
							"name": "IUniswapV3PoolOwnerActions",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 702,
										"nodeType": "StructuredDocumentation",
										"src": "230:205:7",
										"text": "@notice Set the denominator of the protocol's % share of the fees\n @param feeProtocol0 new protocol fee for token0 of the pool\n @param feeProtocol1 new protocol fee for token1 of the pool"
									},
									"functionSelector": "8206a4d1",
									"id": 709,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setFeeProtocol",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 707,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 704,
												"mutability": "mutable",
												"name": "feeProtocol0",
												"nodeType": "VariableDeclaration",
												"scope": 709,
												"src": "464:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 703,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "464:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 706,
												"mutability": "mutable",
												"name": "feeProtocol1",
												"nodeType": "VariableDeclaration",
												"scope": 709,
												"src": "484:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 705,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "484:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "463:40:7"
									},
									"returnParameters": {
										"id": 708,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "512:0:7"
									},
									"scope": 724,
									"src": "440:73:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 710,
										"nodeType": "StructuredDocumentation",
										"src": "519:483:7",
										"text": "@notice Collect the protocol fee accrued to the pool\n @param recipient The address to which collected protocol fees should be sent\n @param amount0Requested The maximum amount of token0 to send, can be 0 to collect fees in only token1\n @param amount1Requested The maximum amount of token1 to send, can be 0 to collect fees in only token0\n @return amount0 The protocol fee collected in token0\n @return amount1 The protocol fee collected in token1"
									},
									"functionSelector": "85b66729",
									"id": 723,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "collectProtocol",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 717,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 712,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 723,
												"src": "1041:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 711,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1041:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 714,
												"mutability": "mutable",
												"name": "amount0Requested",
												"nodeType": "VariableDeclaration",
												"scope": 723,
												"src": "1068:24:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 713,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1068:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 716,
												"mutability": "mutable",
												"name": "amount1Requested",
												"nodeType": "VariableDeclaration",
												"scope": 723,
												"src": "1102:24:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 715,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1102:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1031:101:7"
									},
									"returnParameters": {
										"id": 722,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 719,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 723,
												"src": "1151:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 718,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1151:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 721,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 723,
												"src": "1168:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 720,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1168:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1150:34:7"
									},
									"scope": 724,
									"src": "1007:178:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 725,
							"src": "187:1000:7"
						}
					],
					"src": "45:1143:7"
				},
				"id": 7
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol": {
				"ast": {
					"absolutePath": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol",
					"exportedSymbols": {
						"IUniswapV3PoolState": [
							832
						]
					},
					"id": 833,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 726,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 727,
								"nodeType": "StructuredDocumentation",
								"src": "71:169:8",
								"text": "@title Pool state that can change\n @notice These methods compose the pool's state, and can change with any frequency including multiple times\n per transaction"
							},
							"fullyImplemented": false,
							"id": 832,
							"linearizedBaseContracts": [
								832
							],
							"name": "IUniswapV3PoolState",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 728,
										"nodeType": "StructuredDocumentation",
										"src": "276:1140:8",
										"text": "@notice The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas\n when accessed externally.\n @return sqrtPriceX96 The current price of the pool as a sqrt(token1/token0) Q64.96 value\n tick The current tick of the pool, i.e. according to the last tick transition that was run.\n This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick\n boundary.\n observationIndex The index of the last oracle observation that was written,\n observationCardinality The current maximum number of observations stored in the pool,\n observationCardinalityNext The next maximum number of observations, to be updated when the observation.\n feeProtocol The protocol fee for both tokens of the pool.\n Encoded as two 4 bit values, where the protocol fee of token1 is shifted 4 bits and the protocol fee of token0\n is the lower 4 bits. Used as the denominator of a fraction of the swap fee, e.g. 4 means 1/4th of the swap fee.\n unlocked Whether the pool is currently locked to reentrancy"
									},
									"functionSelector": "3850c7bd",
									"id": 745,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "slot0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 729,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1435:2:8"
									},
									"returnParameters": {
										"id": 744,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 731,
												"mutability": "mutable",
												"name": "sqrtPriceX96",
												"nodeType": "VariableDeclaration",
												"scope": 745,
												"src": "1498:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 730,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "1498:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 733,
												"mutability": "mutable",
												"name": "tick",
												"nodeType": "VariableDeclaration",
												"scope": 745,
												"src": "1532:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 732,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1532:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 735,
												"mutability": "mutable",
												"name": "observationIndex",
												"nodeType": "VariableDeclaration",
												"scope": 745,
												"src": "1556:23:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 734,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "1556:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 737,
												"mutability": "mutable",
												"name": "observationCardinality",
												"nodeType": "VariableDeclaration",
												"scope": 745,
												"src": "1593:29:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 736,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "1593:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 739,
												"mutability": "mutable",
												"name": "observationCardinalityNext",
												"nodeType": "VariableDeclaration",
												"scope": 745,
												"src": "1636:33:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 738,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "1636:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 741,
												"mutability": "mutable",
												"name": "feeProtocol",
												"nodeType": "VariableDeclaration",
												"scope": 745,
												"src": "1683:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 740,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1683:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 743,
												"mutability": "mutable",
												"name": "unlocked",
												"nodeType": "VariableDeclaration",
												"scope": 745,
												"src": "1714:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 742,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1714:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1484:253:8"
									},
									"scope": 832,
									"src": "1421:317:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 746,
										"nodeType": "StructuredDocumentation",
										"src": "1744:168:8",
										"text": "@notice The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool\n @dev This value can overflow the uint256"
									},
									"functionSelector": "f3058399",
									"id": 751,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "feeGrowthGlobal0X128",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 747,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1946:2:8"
									},
									"returnParameters": {
										"id": 750,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 749,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 751,
												"src": "1972:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 748,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1972:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1971:9:8"
									},
									"scope": 832,
									"src": "1917:64:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 752,
										"nodeType": "StructuredDocumentation",
										"src": "1987:168:8",
										"text": "@notice The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool\n @dev This value can overflow the uint256"
									},
									"functionSelector": "46141319",
									"id": 757,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "feeGrowthGlobal1X128",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 753,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2189:2:8"
									},
									"returnParameters": {
										"id": 756,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 755,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 757,
												"src": "2215:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 754,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2215:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2214:9:8"
									},
									"scope": 832,
									"src": "2160:64:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 758,
										"nodeType": "StructuredDocumentation",
										"src": "2230:147:8",
										"text": "@notice The amounts of token0 and token1 that are owed to the protocol\n @dev Protocol fees will never exceed uint128 max in either token"
									},
									"functionSelector": "1ad8b03b",
									"id": 765,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "protocolFees",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2403:2:8"
									},
									"returnParameters": {
										"id": 764,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 761,
												"mutability": "mutable",
												"name": "token0",
												"nodeType": "VariableDeclaration",
												"scope": 765,
												"src": "2429:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 760,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2429:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 763,
												"mutability": "mutable",
												"name": "token1",
												"nodeType": "VariableDeclaration",
												"scope": 765,
												"src": "2445:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 762,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2445:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2428:32:8"
									},
									"scope": 832,
									"src": "2382:79:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 766,
										"nodeType": "StructuredDocumentation",
										"src": "2467:150:8",
										"text": "@notice The currently in range liquidity available to the pool\n @dev This value has no relationship to the total liquidity across all ticks"
									},
									"functionSelector": "1a686502",
									"id": 771,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "liquidity",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 767,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2640:2:8"
									},
									"returnParameters": {
										"id": 770,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 769,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 771,
												"src": "2666:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 768,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2666:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2665:9:8"
									},
									"scope": 832,
									"src": "2622:53:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 772,
										"nodeType": "StructuredDocumentation",
										"src": "2681:1244:8",
										"text": "@notice Look up information about a specific tick in the pool\n @param tick The tick to look up\n @return liquidityGross the total amount of position liquidity that uses the pool either as tick lower or\n tick upper,\n liquidityNet how much liquidity changes when the pool price crosses the tick,\n feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0,\n feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1,\n tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick\n secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick,\n secondsOutside the seconds spent on the other side of the tick from the current tick,\n initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false.\n Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0.\n In addition, these values are only relative and must be used only in comparison to previous snapshots for\n a specific position."
									},
									"functionSelector": "f30dba93",
									"id": 793,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ticks",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 775,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 774,
												"mutability": "mutable",
												"name": "tick",
												"nodeType": "VariableDeclaration",
												"scope": 793,
												"src": "3945:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 773,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "3945:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3944:12:8"
									},
									"returnParameters": {
										"id": 792,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 777,
												"mutability": "mutable",
												"name": "liquidityGross",
												"nodeType": "VariableDeclaration",
												"scope": 793,
												"src": "4017:22:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 776,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "4017:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 779,
												"mutability": "mutable",
												"name": "liquidityNet",
												"nodeType": "VariableDeclaration",
												"scope": 793,
												"src": "4053:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int128",
													"typeString": "int128"
												},
												"typeName": {
													"id": 778,
													"name": "int128",
													"nodeType": "ElementaryTypeName",
													"src": "4053:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 781,
												"mutability": "mutable",
												"name": "feeGrowthOutside0X128",
												"nodeType": "VariableDeclaration",
												"scope": 793,
												"src": "4086:29:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 780,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4086:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 783,
												"mutability": "mutable",
												"name": "feeGrowthOutside1X128",
												"nodeType": "VariableDeclaration",
												"scope": 793,
												"src": "4129:29:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 782,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4129:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 785,
												"mutability": "mutable",
												"name": "tickCumulativeOutside",
												"nodeType": "VariableDeclaration",
												"scope": 793,
												"src": "4172:27:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int56",
													"typeString": "int56"
												},
												"typeName": {
													"id": 784,
													"name": "int56",
													"nodeType": "ElementaryTypeName",
													"src": "4172:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int56",
														"typeString": "int56"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 787,
												"mutability": "mutable",
												"name": "secondsPerLiquidityOutsideX128",
												"nodeType": "VariableDeclaration",
												"scope": 793,
												"src": "4213:38:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 786,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "4213:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 789,
												"mutability": "mutable",
												"name": "secondsOutside",
												"nodeType": "VariableDeclaration",
												"scope": 793,
												"src": "4265:21:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 788,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "4265:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 791,
												"mutability": "mutable",
												"name": "initialized",
												"nodeType": "VariableDeclaration",
												"scope": 793,
												"src": "4300:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 790,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4300:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4003:323:8"
									},
									"scope": 832,
									"src": "3930:397:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 794,
										"nodeType": "StructuredDocumentation",
										"src": "4333:99:8",
										"text": "@notice Returns 256 packed tick initialized boolean values. See TickBitmap for more information"
									},
									"functionSelector": "5339c296",
									"id": 801,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tickBitmap",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 797,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 796,
												"mutability": "mutable",
												"name": "wordPosition",
												"nodeType": "VariableDeclaration",
												"scope": 801,
												"src": "4457:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int16",
													"typeString": "int16"
												},
												"typeName": {
													"id": 795,
													"name": "int16",
													"nodeType": "ElementaryTypeName",
													"src": "4457:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int16",
														"typeString": "int16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4456:20:8"
									},
									"returnParameters": {
										"id": 800,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 799,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 801,
												"src": "4500:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 798,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4500:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4499:9:8"
									},
									"scope": 832,
									"src": "4437:72:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 802,
										"nodeType": "StructuredDocumentation",
										"src": "4515:700:8",
										"text": "@notice Returns the information about a position by the position's key\n @param key The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper\n @return _liquidity The amount of liquidity in the position,\n Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke,\n Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke,\n Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke,\n Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke"
									},
									"functionSelector": "514ea4bf",
									"id": 817,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "positions",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 805,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 804,
												"mutability": "mutable",
												"name": "key",
												"nodeType": "VariableDeclaration",
												"scope": 817,
												"src": "5239:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 803,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5239:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5238:13:8"
									},
									"returnParameters": {
										"id": 816,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 807,
												"mutability": "mutable",
												"name": "_liquidity",
												"nodeType": "VariableDeclaration",
												"scope": 817,
												"src": "5312:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 806,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "5312:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 809,
												"mutability": "mutable",
												"name": "feeGrowthInside0LastX128",
												"nodeType": "VariableDeclaration",
												"scope": 817,
												"src": "5344:32:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 808,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5344:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 811,
												"mutability": "mutable",
												"name": "feeGrowthInside1LastX128",
												"nodeType": "VariableDeclaration",
												"scope": 817,
												"src": "5390:32:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 810,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5390:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 813,
												"mutability": "mutable",
												"name": "tokensOwed0",
												"nodeType": "VariableDeclaration",
												"scope": 817,
												"src": "5436:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 812,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "5436:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 815,
												"mutability": "mutable",
												"name": "tokensOwed1",
												"nodeType": "VariableDeclaration",
												"scope": 817,
												"src": "5469:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 814,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "5469:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5298:200:8"
									},
									"scope": 832,
									"src": "5220:279:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 818,
										"nodeType": "StructuredDocumentation",
										"src": "5505:749:8",
										"text": "@notice Returns data about a specific observation index\n @param index The element of the observations array to fetch\n @dev You most likely want to use #observe() instead of this method to get an observation as of some amount of time\n ago, rather than at a specific index in the array.\n @return blockTimestamp The timestamp of the observation,\n Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp,\n Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp,\n Returns initialized whether the observation has been initialized and the values are safe to use"
									},
									"functionSelector": "252c09d7",
									"id": 831,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "observations",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 821,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 820,
												"mutability": "mutable",
												"name": "index",
												"nodeType": "VariableDeclaration",
												"scope": 831,
												"src": "6281:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 819,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6281:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6280:15:8"
									},
									"returnParameters": {
										"id": 830,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 823,
												"mutability": "mutable",
												"name": "blockTimestamp",
												"nodeType": "VariableDeclaration",
												"scope": 831,
												"src": "6356:21:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 822,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "6356:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 825,
												"mutability": "mutable",
												"name": "tickCumulative",
												"nodeType": "VariableDeclaration",
												"scope": 831,
												"src": "6391:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int56",
													"typeString": "int56"
												},
												"typeName": {
													"id": 824,
													"name": "int56",
													"nodeType": "ElementaryTypeName",
													"src": "6391:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int56",
														"typeString": "int56"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 827,
												"mutability": "mutable",
												"name": "secondsPerLiquidityCumulativeX128",
												"nodeType": "VariableDeclaration",
												"scope": 831,
												"src": "6425:41:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 826,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "6425:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 829,
												"mutability": "mutable",
												"name": "initialized",
												"nodeType": "VariableDeclaration",
												"scope": 831,
												"src": "6480:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 828,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6480:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6342:164:8"
									},
									"scope": 832,
									"src": "6259:248:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 833,
							"src": "240:6269:8"
						}
					],
					"src": "45:6465:8"
				},
				"id": 8
			},
			"@uniswap/v3-core/contracts/libraries/FullMath.sol": {
				"ast": {
					"absolutePath": "@uniswap/v3-core/contracts/libraries/FullMath.sol",
					"exportedSymbols": {
						"FullMath": [
							1005
						]
					},
					"id": 1006,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 834,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:31:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 835,
								"nodeType": "StructuredDocumentation",
								"src": "65:297:9",
								"text": "@title Contains 512-bit math functions\n @notice Facilitates multiplication and division that can have overflow of an intermediate value without any loss of precision\n @dev Handles \"phantom overflow\" i.e., allows multiplication and division where an intermediate value overflows 256 bits"
							},
							"fullyImplemented": true,
							"id": 1005,
							"linearizedBaseContracts": [
								1005
							],
							"name": "FullMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 960,
										"nodeType": "Block",
										"src": "877:3648:9",
										"statements": [
											{
												"assignments": [
													848
												],
												"declarations": [
													{
														"constant": false,
														"id": 848,
														"mutability": "mutable",
														"name": "prod0",
														"nodeType": "VariableDeclaration",
														"scope": 960,
														"src": "1190:13:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 847,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1190:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 849,
												"nodeType": "VariableDeclarationStatement",
												"src": "1190:13:9"
											},
											{
												"assignments": [
													851
												],
												"declarations": [
													{
														"constant": false,
														"id": 851,
														"mutability": "mutable",
														"name": "prod1",
														"nodeType": "VariableDeclaration",
														"scope": 960,
														"src": "1258:13:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 850,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1258:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 852,
												"nodeType": "VariableDeclarationStatement",
												"src": "1258:13:9"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1334:141:9",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1348:30:9",
															"value": {
																"arguments": [
																	{
																		"name": "a",
																		"nodeType": "YulIdentifier",
																		"src": "1365:1:9"
																	},
																	{
																		"name": "b",
																		"nodeType": "YulIdentifier",
																		"src": "1368:1:9"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1375:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "1371:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1371:6:9"
																	}
																],
																"functionName": {
																	"name": "mulmod",
																	"nodeType": "YulIdentifier",
																	"src": "1358:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1358:20:9"
															},
															"variables": [
																{
																	"name": "mm",
																	"nodeType": "YulTypedName",
																	"src": "1352:2:9",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1391:18:9",
															"value": {
																"arguments": [
																	{
																		"name": "a",
																		"nodeType": "YulIdentifier",
																		"src": "1404:1:9"
																	},
																	{
																		"name": "b",
																		"nodeType": "YulIdentifier",
																		"src": "1407:1:9"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "1400:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1400:9:9"
															},
															"variableNames": [
																{
																	"name": "prod0",
																	"nodeType": "YulIdentifier",
																	"src": "1391:5:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1422:43:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "mm",
																				"nodeType": "YulIdentifier",
																				"src": "1439:2:9"
																			},
																			{
																				"name": "prod0",
																				"nodeType": "YulIdentifier",
																				"src": "1443:5:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1435:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1435:14:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mm",
																				"nodeType": "YulIdentifier",
																				"src": "1454:2:9"
																			},
																			{
																				"name": "prod0",
																				"nodeType": "YulIdentifier",
																				"src": "1458:5:9"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1451:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1451:13:9"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "1431:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "1431:34:9"
															},
															"variableNames": [
																{
																	"name": "prod1",
																	"nodeType": "YulIdentifier",
																	"src": "1422:5:9"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 838,
														"isOffset": false,
														"isSlot": false,
														"src": "1365:1:9",
														"valueSize": 1
													},
													{
														"declaration": 838,
														"isOffset": false,
														"isSlot": false,
														"src": "1404:1:9",
														"valueSize": 1
													},
													{
														"declaration": 840,
														"isOffset": false,
														"isSlot": false,
														"src": "1368:1:9",
														"valueSize": 1
													},
													{
														"declaration": 840,
														"isOffset": false,
														"isSlot": false,
														"src": "1407:1:9",
														"valueSize": 1
													},
													{
														"declaration": 848,
														"isOffset": false,
														"isSlot": false,
														"src": "1391:5:9",
														"valueSize": 1
													},
													{
														"declaration": 848,
														"isOffset": false,
														"isSlot": false,
														"src": "1443:5:9",
														"valueSize": 1
													},
													{
														"declaration": 848,
														"isOffset": false,
														"isSlot": false,
														"src": "1458:5:9",
														"valueSize": 1
													},
													{
														"declaration": 851,
														"isOffset": false,
														"isSlot": false,
														"src": "1422:5:9",
														"valueSize": 1
													}
												],
												"id": 853,
												"nodeType": "InlineAssembly",
												"src": "1325:150:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 856,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 854,
														"name": "prod1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 851,
														"src": "1547:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 855,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1556:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1547:10:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 867,
												"nodeType": "IfStatement",
												"src": "1543:179:9",
												"trueBody": {
													"id": 866,
													"nodeType": "Block",
													"src": "1559:163:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 860,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 858,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 842,
																			"src": "1581:11:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 859,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1595:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1581:15:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 857,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "1573:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
																		"typeString": "function (bool) pure"
																	}
																},
																"id": 861,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1573:24:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 862,
															"nodeType": "ExpressionStatement",
															"src": "1573:24:9"
														},
														{
															"AST": {
																"nodeType": "YulBlock",
																"src": "1620:65:9",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1638:33:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "prod0",
																					"nodeType": "YulIdentifier",
																					"src": "1652:5:9"
																				},
																				{
																					"name": "denominator",
																					"nodeType": "YulIdentifier",
																					"src": "1659:11:9"
																				}
																			],
																			"functionName": {
																				"name": "div",
																				"nodeType": "YulIdentifier",
																				"src": "1648:3:9"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1648:23:9"
																		},
																		"variableNames": [
																			{
																				"name": "result",
																				"nodeType": "YulIdentifier",
																				"src": "1638:6:9"
																			}
																		]
																	}
																]
															},
															"evmVersion": "istanbul",
															"externalReferences": [
																{
																	"declaration": 842,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "1659:11:9",
																	"valueSize": 1
																},
																{
																	"declaration": 848,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "1652:5:9",
																	"valueSize": 1
																},
																{
																	"declaration": 845,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "1638:6:9",
																	"valueSize": 1
																}
															],
															"id": 863,
															"nodeType": "InlineAssembly",
															"src": "1611:74:9"
														},
														{
															"expression": {
																"id": 864,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 845,
																"src": "1705:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 846,
															"id": 865,
															"nodeType": "Return",
															"src": "1698:13:9"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 871,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 869,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 842,
																"src": "1835:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 870,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 851,
																"src": "1849:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1835:19:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 868,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1827:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 872,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1827:28:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 873,
												"nodeType": "ExpressionStatement",
												"src": "1827:28:9"
											},
											{
												"assignments": [
													875
												],
												"declarations": [
													{
														"constant": false,
														"id": 875,
														"mutability": "mutable",
														"name": "remainder",
														"nodeType": "VariableDeclaration",
														"scope": 960,
														"src": "2132:17:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 874,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2132:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 876,
												"nodeType": "VariableDeclarationStatement",
												"src": "2132:17:9"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "2168:62:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2182:38:9",
															"value": {
																"arguments": [
																	{
																		"name": "a",
																		"nodeType": "YulIdentifier",
																		"src": "2202:1:9"
																	},
																	{
																		"name": "b",
																		"nodeType": "YulIdentifier",
																		"src": "2205:1:9"
																	},
																	{
																		"name": "denominator",
																		"nodeType": "YulIdentifier",
																		"src": "2208:11:9"
																	}
																],
																"functionName": {
																	"name": "mulmod",
																	"nodeType": "YulIdentifier",
																	"src": "2195:6:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2195:25:9"
															},
															"variableNames": [
																{
																	"name": "remainder",
																	"nodeType": "YulIdentifier",
																	"src": "2182:9:9"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 838,
														"isOffset": false,
														"isSlot": false,
														"src": "2202:1:9",
														"valueSize": 1
													},
													{
														"declaration": 840,
														"isOffset": false,
														"isSlot": false,
														"src": "2205:1:9",
														"valueSize": 1
													},
													{
														"declaration": 842,
														"isOffset": false,
														"isSlot": false,
														"src": "2208:11:9",
														"valueSize": 1
													},
													{
														"declaration": 875,
														"isOffset": false,
														"isSlot": false,
														"src": "2182:9:9",
														"valueSize": 1
													}
												],
												"id": 877,
												"nodeType": "InlineAssembly",
												"src": "2159:71:9"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "2303:108:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2317:41:9",
															"value": {
																"arguments": [
																	{
																		"name": "prod1",
																		"nodeType": "YulIdentifier",
																		"src": "2330:5:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "remainder",
																				"nodeType": "YulIdentifier",
																				"src": "2340:9:9"
																			},
																			{
																				"name": "prod0",
																				"nodeType": "YulIdentifier",
																				"src": "2351:5:9"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "2337:2:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2337:20:9"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "2326:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2326:32:9"
															},
															"variableNames": [
																{
																	"name": "prod1",
																	"nodeType": "YulIdentifier",
																	"src": "2317:5:9"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2371:30:9",
															"value": {
																"arguments": [
																	{
																		"name": "prod0",
																		"nodeType": "YulIdentifier",
																		"src": "2384:5:9"
																	},
																	{
																		"name": "remainder",
																		"nodeType": "YulIdentifier",
																		"src": "2391:9:9"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "2380:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2380:21:9"
															},
															"variableNames": [
																{
																	"name": "prod0",
																	"nodeType": "YulIdentifier",
																	"src": "2371:5:9"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 848,
														"isOffset": false,
														"isSlot": false,
														"src": "2351:5:9",
														"valueSize": 1
													},
													{
														"declaration": 848,
														"isOffset": false,
														"isSlot": false,
														"src": "2371:5:9",
														"valueSize": 1
													},
													{
														"declaration": 848,
														"isOffset": false,
														"isSlot": false,
														"src": "2384:5:9",
														"valueSize": 1
													},
													{
														"declaration": 851,
														"isOffset": false,
														"isSlot": false,
														"src": "2317:5:9",
														"valueSize": 1
													},
													{
														"declaration": 851,
														"isOffset": false,
														"isSlot": false,
														"src": "2330:5:9",
														"valueSize": 1
													},
													{
														"declaration": 875,
														"isOffset": false,
														"isSlot": false,
														"src": "2340:9:9",
														"valueSize": 1
													},
													{
														"declaration": 875,
														"isOffset": false,
														"isSlot": false,
														"src": "2391:9:9",
														"valueSize": 1
													}
												],
												"id": 878,
												"nodeType": "InlineAssembly",
												"src": "2294:117:9"
											},
											{
												"assignments": [
													880
												],
												"declarations": [
													{
														"constant": false,
														"id": 880,
														"mutability": "mutable",
														"name": "twos",
														"nodeType": "VariableDeclaration",
														"scope": 960,
														"src": "2560:12:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 879,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2560:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 885,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 884,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 882,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "-",
														"prefix": true,
														"src": "2575:12:9",
														"subExpression": {
															"id": 881,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 842,
															"src": "2576:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&",
													"rightExpression": {
														"id": 883,
														"name": "denominator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 842,
														"src": "2590:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2575:26:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2560:41:9"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "2666:61:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2680:37:9",
															"value": {
																"arguments": [
																	{
																		"name": "denominator",
																		"nodeType": "YulIdentifier",
																		"src": "2699:11:9"
																	},
																	{
																		"name": "twos",
																		"nodeType": "YulIdentifier",
																		"src": "2712:4:9"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "2695:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2695:22:9"
															},
															"variableNames": [
																{
																	"name": "denominator",
																	"nodeType": "YulIdentifier",
																	"src": "2680:11:9"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 842,
														"isOffset": false,
														"isSlot": false,
														"src": "2680:11:9",
														"valueSize": 1
													},
													{
														"declaration": 842,
														"isOffset": false,
														"isSlot": false,
														"src": "2699:11:9",
														"valueSize": 1
													},
													{
														"declaration": 880,
														"isOffset": false,
														"isSlot": false,
														"src": "2712:4:9",
														"valueSize": 1
													}
												],
												"id": 886,
												"nodeType": "InlineAssembly",
												"src": "2657:70:9"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "2800:49:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2814:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "prod0",
																		"nodeType": "YulIdentifier",
																		"src": "2827:5:9"
																	},
																	{
																		"name": "twos",
																		"nodeType": "YulIdentifier",
																		"src": "2834:4:9"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "2823:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "2823:16:9"
															},
															"variableNames": [
																{
																	"name": "prod0",
																	"nodeType": "YulIdentifier",
																	"src": "2814:5:9"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 848,
														"isOffset": false,
														"isSlot": false,
														"src": "2814:5:9",
														"valueSize": 1
													},
													{
														"declaration": 848,
														"isOffset": false,
														"isSlot": false,
														"src": "2827:5:9",
														"valueSize": 1
													},
													{
														"declaration": 880,
														"isOffset": false,
														"isSlot": false,
														"src": "2834:4:9",
														"valueSize": 1
													}
												],
												"id": 887,
												"nodeType": "InlineAssembly",
												"src": "2791:58:9"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "3037:63:9",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3051:39:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3071:1:9",
																						"type": "",
																						"value": "0"
																					},
																					{
																						"name": "twos",
																						"nodeType": "YulIdentifier",
																						"src": "3074:4:9"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "3067:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3067:12:9"
																			},
																			{
																				"name": "twos",
																				"nodeType": "YulIdentifier",
																				"src": "3081:4:9"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "3063:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3063:23:9"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3088:1:9",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3059:3:9"
																},
																"nodeType": "YulFunctionCall",
																"src": "3059:31:9"
															},
															"variableNames": [
																{
																	"name": "twos",
																	"nodeType": "YulIdentifier",
																	"src": "3051:4:9"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 880,
														"isOffset": false,
														"isSlot": false,
														"src": "3051:4:9",
														"valueSize": 1
													},
													{
														"declaration": 880,
														"isOffset": false,
														"isSlot": false,
														"src": "3074:4:9",
														"valueSize": 1
													},
													{
														"declaration": 880,
														"isOffset": false,
														"isSlot": false,
														"src": "3081:4:9",
														"valueSize": 1
													}
												],
												"id": 888,
												"nodeType": "InlineAssembly",
												"src": "3028:72:9"
											},
											{
												"expression": {
													"id": 893,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 889,
														"name": "prod0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 848,
														"src": "3109:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "|=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 892,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 890,
															"name": "prod1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 851,
															"src": "3118:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"id": 891,
															"name": "twos",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 880,
															"src": "3126:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3118:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3109:21:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 894,
												"nodeType": "ExpressionStatement",
												"src": "3109:21:9"
											},
											{
												"assignments": [
													896
												],
												"declarations": [
													{
														"constant": false,
														"id": 896,
														"mutability": "mutable",
														"name": "inv",
														"nodeType": "VariableDeclaration",
														"scope": 960,
														"src": "3464:11:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 895,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3464:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 903,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 902,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 899,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "33",
																	"id": 897,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3479:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_3_by_1",
																		"typeString": "int_const 3"
																	},
																	"value": "3"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 898,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 842,
																	"src": "3483:11:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3479:15:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 900,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "3478:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "^",
													"rightExpression": {
														"hexValue": "32",
														"id": 901,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3498:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "2"
													},
													"src": "3478:21:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3464:35:9"
											},
											{
												"expression": {
													"id": 910,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 904,
														"name": "inv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 896,
														"src": "3714:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "*=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 909,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "32",
															"id": 905,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3721:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 908,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 906,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 842,
																"src": "3725:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 907,
																"name": "inv",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 896,
																"src": "3739:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3725:17:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3721:21:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3714:28:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 911,
												"nodeType": "ExpressionStatement",
												"src": "3714:28:9"
											},
											{
												"expression": {
													"id": 918,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 912,
														"name": "inv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 896,
														"src": "3772:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "*=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 917,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "32",
															"id": 913,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3779:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 916,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 914,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 842,
																"src": "3783:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 915,
																"name": "inv",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 896,
																"src": "3797:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3783:17:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3779:21:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3772:28:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 919,
												"nodeType": "ExpressionStatement",
												"src": "3772:28:9"
											},
											{
												"expression": {
													"id": 926,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 920,
														"name": "inv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 896,
														"src": "3831:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "*=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 925,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "32",
															"id": 921,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3838:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 924,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 922,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 842,
																"src": "3842:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 923,
																"name": "inv",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 896,
																"src": "3856:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3842:17:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3838:21:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3831:28:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 927,
												"nodeType": "ExpressionStatement",
												"src": "3831:28:9"
											},
											{
												"expression": {
													"id": 934,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 928,
														"name": "inv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 896,
														"src": "3890:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "*=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 933,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "32",
															"id": 929,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3897:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 932,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 930,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 842,
																"src": "3901:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 931,
																"name": "inv",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 896,
																"src": "3915:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3901:17:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3897:21:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3890:28:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 935,
												"nodeType": "ExpressionStatement",
												"src": "3890:28:9"
											},
											{
												"expression": {
													"id": 942,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 936,
														"name": "inv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 896,
														"src": "3949:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "*=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 941,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "32",
															"id": 937,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3956:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 940,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 938,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 842,
																"src": "3960:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 939,
																"name": "inv",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 896,
																"src": "3974:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3960:17:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3956:21:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3949:28:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 943,
												"nodeType": "ExpressionStatement",
												"src": "3949:28:9"
											},
											{
												"expression": {
													"id": 950,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 944,
														"name": "inv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 896,
														"src": "4009:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "*=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 949,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "32",
															"id": 945,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4016:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 948,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 946,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 842,
																"src": "4020:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 947,
																"name": "inv",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 896,
																"src": "4034:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4020:17:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "4016:21:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4009:28:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 951,
												"nodeType": "ExpressionStatement",
												"src": "4009:28:9"
											},
											{
												"expression": {
													"id": 956,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 952,
														"name": "result",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 845,
														"src": "4475:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 955,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 953,
															"name": "prod0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 848,
															"src": "4484:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"id": 954,
															"name": "inv",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 896,
															"src": "4492:3:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "4484:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4475:20:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 957,
												"nodeType": "ExpressionStatement",
												"src": "4475:20:9"
											},
											{
												"expression": {
													"id": 958,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 845,
													"src": "4512:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 846,
												"id": 959,
												"nodeType": "Return",
												"src": "4505:13:9"
											}
										]
									},
									"documentation": {
										"id": 836,
										"nodeType": "StructuredDocumentation",
										"src": "385:359:9",
										"text": "@notice Calculates floor(a×b÷denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n @param a The multiplicand\n @param b The multiplier\n @param denominator The divisor\n @return result The 256-bit result\n @dev Credit to Remco Bloemen under MIT license https://xn--2-umb.com/21/muldiv"
									},
									"id": 961,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 843,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 838,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 961,
												"src": "774:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 837,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "774:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 840,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 961,
												"src": "793:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 839,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "793:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 842,
												"mutability": "mutable",
												"name": "denominator",
												"nodeType": "VariableDeclaration",
												"scope": 961,
												"src": "812:19:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 841,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "812:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "764:73:9"
									},
									"returnParameters": {
										"id": 846,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 845,
												"mutability": "mutable",
												"name": "result",
												"nodeType": "VariableDeclaration",
												"scope": 961,
												"src": "861:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 844,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "861:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "860:16:9"
									},
									"scope": 1005,
									"src": "749:3776:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1003,
										"nodeType": "Block",
										"src": "4945:177:9",
										"statements": [
											{
												"expression": {
													"id": 979,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 973,
														"name": "result",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 971,
														"src": "4955:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 975,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 964,
																"src": "4971:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 976,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 966,
																"src": "4974:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 977,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 968,
																"src": "4977:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 974,
															"name": "mulDiv",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 961,
															"src": "4964:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 978,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4964:25:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4955:34:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 980,
												"nodeType": "ExpressionStatement",
												"src": "4955:34:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 987,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 982,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 964,
																"src": "5010:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 983,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 966,
																"src": "5013:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 984,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 968,
																"src": "5016:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 981,
															"name": "mulmod",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967280,
															"src": "5003:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 985,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5003:25:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 986,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5031:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5003:29:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1002,
												"nodeType": "IfStatement",
												"src": "4999:117:9",
												"trueBody": {
													"id": 1001,
													"nodeType": "Block",
													"src": "5034:82:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 995,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 989,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 971,
																			"src": "5056:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<",
																		"rightExpression": {
																			"expression": {
																				"arguments": [
																					{
																						"id": 992,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "5070:7:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_uint256_$",
																							"typeString": "type(uint256)"
																						},
																						"typeName": {
																							"id": 991,
																							"name": "uint256",
																							"nodeType": "ElementaryTypeName",
																							"src": "5070:7:9",
																							"typeDescriptions": {}
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_type$_t_uint256_$",
																							"typeString": "type(uint256)"
																						}
																					],
																					"id": 990,
																					"name": "type",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967269,
																					"src": "5065:4:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																						"typeString": "function () pure"
																					}
																				},
																				"id": 993,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "5065:13:9",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_meta_type_t_uint256",
																					"typeString": "type(uint256)"
																				}
																			},
																			"id": 994,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberName": "max",
																			"nodeType": "MemberAccess",
																			"src": "5065:17:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "5056:26:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 988,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "5048:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
																		"typeString": "function (bool) pure"
																	}
																},
																"id": 996,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5048:35:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 997,
															"nodeType": "ExpressionStatement",
															"src": "5048:35:9"
														},
														{
															"expression": {
																"id": 999,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "5097:8:9",
																"subExpression": {
																	"id": 998,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 971,
																	"src": "5097:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1000,
															"nodeType": "ExpressionStatement",
															"src": "5097:8:9"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 962,
										"nodeType": "StructuredDocumentation",
										"src": "4531:271:9",
										"text": "@notice Calculates ceil(a×b÷denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n @param a The multiplicand\n @param b The multiplier\n @param denominator The divisor\n @return result The 256-bit result"
									},
									"id": 1004,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDivRoundingUp",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 969,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 964,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 1004,
												"src": "4842:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 963,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4842:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 966,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 1004,
												"src": "4861:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 965,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4861:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 968,
												"mutability": "mutable",
												"name": "denominator",
												"nodeType": "VariableDeclaration",
												"scope": 1004,
												"src": "4880:19:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 967,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4880:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4832:73:9"
									},
									"returnParameters": {
										"id": 972,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 971,
												"mutability": "mutable",
												"name": "result",
												"nodeType": "VariableDeclaration",
												"scope": 1004,
												"src": "4929:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 970,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4929:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4928:16:9"
									},
									"scope": 1005,
									"src": "4807:315:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1006,
							"src": "362:4762:9"
						}
					],
					"src": "32:5093:9"
				},
				"id": 9
			},
			"@uniswap/v3-core/contracts/libraries/TickMath.sol": {
				"ast": {
					"absolutePath": "@uniswap/v3-core/contracts/libraries/TickMath.sol",
					"exportedSymbols": {
						"TickMath": [
							1540
						]
					},
					"id": 1541,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1007,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:31:10"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1008,
								"nodeType": "StructuredDocumentation",
								"src": "78:235:10",
								"text": "@title Math library for computing sqrt prices from ticks and vice versa\n @notice Computes sqrt price for ticks of size 1.0001, i.e. sqrt(1.0001^tick) as fixed point Q64.96 numbers. Supports\n prices between 2**-128 and 2**128"
							},
							"fullyImplemented": true,
							"id": 1540,
							"linearizedBaseContracts": [
								1540
							],
							"name": "TickMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"documentation": {
										"id": 1009,
										"nodeType": "StructuredDocumentation",
										"src": "336:108:10",
										"text": "@dev The minimum tick that may be passed to #getSqrtRatioAtTick computed from log base 1.0001 of 2**-128"
									},
									"id": 1013,
									"mutability": "constant",
									"name": "MIN_TICK",
									"nodeType": "VariableDeclaration",
									"scope": 1540,
									"src": "449:42:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int24",
										"typeString": "int24"
									},
									"typeName": {
										"id": 1010,
										"name": "int24",
										"nodeType": "ElementaryTypeName",
										"src": "449:5:10",
										"typeDescriptions": {
											"typeIdentifier": "t_int24",
											"typeString": "int24"
										}
									},
									"value": {
										"id": 1012,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"nodeType": "UnaryOperation",
										"operator": "-",
										"prefix": true,
										"src": "484:7:10",
										"subExpression": {
											"hexValue": "383837323732",
											"id": 1011,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "485:6:10",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_887272_by_1",
												"typeString": "int_const 887272"
											},
											"value": "887272"
										},
										"typeDescriptions": {
											"typeIdentifier": "t_rational_minus_887272_by_1",
											"typeString": "int_const -887272"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 1014,
										"nodeType": "StructuredDocumentation",
										"src": "497:107:10",
										"text": "@dev The maximum tick that may be passed to #getSqrtRatioAtTick computed from log base 1.0001 of 2**128"
									},
									"id": 1018,
									"mutability": "constant",
									"name": "MAX_TICK",
									"nodeType": "VariableDeclaration",
									"scope": 1540,
									"src": "609:44:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int24",
										"typeString": "int24"
									},
									"typeName": {
										"id": 1015,
										"name": "int24",
										"nodeType": "ElementaryTypeName",
										"src": "609:5:10",
										"typeDescriptions": {
											"typeIdentifier": "t_int24",
											"typeString": "int24"
										}
									},
									"value": {
										"id": 1017,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"nodeType": "UnaryOperation",
										"operator": "-",
										"prefix": true,
										"src": "644:9:10",
										"subExpression": {
											"id": 1016,
											"name": "MIN_TICK",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 1013,
											"src": "645:8:10",
											"typeDescriptions": {
												"typeIdentifier": "t_int24",
												"typeString": "int24"
											}
										},
										"typeDescriptions": {
											"typeIdentifier": "t_int24",
											"typeString": "int24"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 1019,
										"nodeType": "StructuredDocumentation",
										"src": "660:116:10",
										"text": "@dev The minimum value that can be returned from #getSqrtRatioAtTick. Equivalent to getSqrtRatioAtTick(MIN_TICK)"
									},
									"id": 1022,
									"mutability": "constant",
									"name": "MIN_SQRT_RATIO",
									"nodeType": "VariableDeclaration",
									"scope": 1540,
									"src": "781:53:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint160",
										"typeString": "uint160"
									},
									"typeName": {
										"id": 1020,
										"name": "uint160",
										"nodeType": "ElementaryTypeName",
										"src": "781:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint160",
											"typeString": "uint160"
										}
									},
									"value": {
										"hexValue": "34323935313238373339",
										"id": 1021,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "824:10:10",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_4295128739_by_1",
											"typeString": "int_const 4295128739"
										},
										"value": "4295128739"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 1023,
										"nodeType": "StructuredDocumentation",
										"src": "840:116:10",
										"text": "@dev The maximum value that can be returned from #getSqrtRatioAtTick. Equivalent to getSqrtRatioAtTick(MAX_TICK)"
									},
									"id": 1026,
									"mutability": "constant",
									"name": "MAX_SQRT_RATIO",
									"nodeType": "VariableDeclaration",
									"scope": 1540,
									"src": "961:92:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint160",
										"typeString": "uint160"
									},
									"typeName": {
										"id": 1024,
										"name": "uint160",
										"nodeType": "ElementaryTypeName",
										"src": "961:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint160",
											"typeString": "uint160"
										}
									},
									"value": {
										"hexValue": "31343631343436373033343835323130313033323837323733303532323033393838383232333738373233393730333432",
										"id": 1025,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1004:49:10",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1461446703485210103287273052203988822378723970342_by_1",
											"typeString": "int_const 1461...(41 digits omitted)...0342"
										},
										"value": "1461446703485210103287273052203988822378723970342"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1399,
										"nodeType": "Block",
										"src": "1447:2495:10",
										"statements": [
											{
												"assignments": [
													1035
												],
												"declarations": [
													{
														"constant": false,
														"id": 1035,
														"mutability": "mutable",
														"name": "absTick",
														"nodeType": "VariableDeclaration",
														"scope": 1399,
														"src": "1457:15:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1034,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1457:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1055,
												"initialValue": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														},
														"id": 1038,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1036,
															"name": "tick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1029,
															"src": "1475:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"hexValue": "30",
															"id": 1037,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1482:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "1475:8:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1051,
																		"name": "tick",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1029,
																		"src": "1526:4:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		}
																	],
																	"id": 1050,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1519:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_int256_$",
																		"typeString": "type(int256)"
																	},
																	"typeName": {
																		"id": 1049,
																		"name": "int256",
																		"nodeType": "ElementaryTypeName",
																		"src": "1519:6:10",
																		"typeDescriptions": {}
																	}
																},
																"id": 1052,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1519:12:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 1048,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1511:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 1047,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1511:7:10",
																"typeDescriptions": {}
															}
														},
														"id": 1053,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1511:21:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1054,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "1475:57:10",
													"trueExpression": {
														"arguments": [
															{
																"id": 1045,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "-",
																"prefix": true,
																"src": "1494:13:10",
																"subExpression": {
																	"arguments": [
																		{
																			"id": 1043,
																			"name": "tick",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1029,
																			"src": "1502:4:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int24",
																				"typeString": "int24"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_int24",
																				"typeString": "int24"
																			}
																		],
																		"id": 1042,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1495:6:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int256_$",
																			"typeString": "type(int256)"
																		},
																		"typeName": {
																			"id": 1041,
																			"name": "int256",
																			"nodeType": "ElementaryTypeName",
																			"src": "1495:6:10",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1044,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1495:12:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 1040,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1486:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 1039,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1486:7:10",
																"typeDescriptions": {}
															}
														},
														"id": 1046,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1486:22:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1457:75:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1062,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1057,
																"name": "absTick",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1035,
																"src": "1550:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 1060,
																		"name": "MAX_TICK",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1018,
																		"src": "1569:8:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		}
																	],
																	"id": 1059,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1561:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 1058,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "1561:7:10",
																		"typeDescriptions": {}
																	}
																},
																"id": 1061,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1561:17:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1550:28:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "54",
															"id": 1063,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1580:3:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_846b7b6deb1cfa110d0ea7ec6162a7123b761785528db70cceed5143183b11fc",
																"typeString": "literal_string \"T\""
															},
															"value": "T"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_846b7b6deb1cfa110d0ea7ec6162a7123b761785528db70cceed5143183b11fc",
																"typeString": "literal_string \"T\""
															}
														],
														"id": 1056,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1542:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1064,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1542:42:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1065,
												"nodeType": "ExpressionStatement",
												"src": "1542:42:10"
											},
											{
												"assignments": [
													1067
												],
												"declarations": [
													{
														"constant": false,
														"id": 1067,
														"mutability": "mutable",
														"name": "ratio",
														"nodeType": "VariableDeclaration",
														"scope": 1399,
														"src": "1595:13:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1066,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1595:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1076,
												"initialValue": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1072,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1070,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1068,
																"name": "absTick",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1035,
																"src": "1611:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"hexValue": "307831",
																"id": 1069,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1621:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "0x1"
															},
															"src": "1611:13:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "30",
															"id": 1071,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1628:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "1611:18:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "3078313030303030303030303030303030303030303030303030303030303030303030",
														"id": 1074,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1669:35:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_340282366920938463463374607431768211456_by_1",
															"typeString": "int_const 3402...(31 digits omitted)...1456"
														},
														"value": "0x100000000000000000000000000000000"
													},
													"id": 1075,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "1611:93:10",
													"trueExpression": {
														"hexValue": "30786666666362393333626436666164333761613264313632643161353934303031",
														"id": 1073,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1632:34:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_340265354078544963557816517032075149313_by_1",
															"typeString": "int_const 3402...(31 digits omitted)...9313"
														},
														"value": "0xfffcb933bd6fad37aa2d162d1a594001"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint136",
														"typeString": "uint136"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1595:109:10"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1081,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1079,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1077,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1035,
															"src": "1718:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "307832",
															"id": 1078,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1728:3:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "0x2"
														},
														"src": "1718:13:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1080,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1735:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1718:18:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1091,
												"nodeType": "IfStatement",
												"src": "1714:83:10",
												"trueBody": {
													"expression": {
														"id": 1089,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 1082,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1067,
															"src": "1738:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1088,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1085,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1083,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1067,
																			"src": "1747:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30786666663937323732333733643431333235396134363939303538306532313361",
																			"id": 1084,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1755:34:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_340248342086729790484326174814286782778_by_1",
																				"typeString": "int_const 3402...(31 digits omitted)...2778"
																			},
																			"value": "0xfff97272373d413259a46990580e213a"
																		},
																		"src": "1747:42:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1086,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1746:44:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 1087,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1794:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "1746:51:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1738:59:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1090,
													"nodeType": "ExpressionStatement",
													"src": "1738:59:10"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1096,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1094,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1092,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1035,
															"src": "1811:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "307834",
															"id": 1093,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1821:3:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_4_by_1",
																"typeString": "int_const 4"
															},
															"value": "0x4"
														},
														"src": "1811:13:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1095,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1828:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1811:18:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1106,
												"nodeType": "IfStatement",
												"src": "1807:83:10",
												"trueBody": {
													"expression": {
														"id": 1104,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 1097,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1067,
															"src": "1831:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1103,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1100,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1098,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1067,
																			"src": "1840:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30786666663265353066356636353639333265663132333537636633633766646363",
																			"id": 1099,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1848:34:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_340214320654664324051920982716015181260_by_1",
																				"typeString": "int_const 3402...(31 digits omitted)...1260"
																			},
																			"value": "0xfff2e50f5f656932ef12357cf3c7fdcc"
																		},
																		"src": "1840:42:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1101,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1839:44:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 1102,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1887:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "1839:51:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1831:59:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1105,
													"nodeType": "ExpressionStatement",
													"src": "1831:59:10"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1109,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1107,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1035,
															"src": "1904:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "307838",
															"id": 1108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1914:3:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_8_by_1",
																"typeString": "int_const 8"
															},
															"value": "0x8"
														},
														"src": "1904:13:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1921:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1904:18:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1121,
												"nodeType": "IfStatement",
												"src": "1900:83:10",
												"trueBody": {
													"expression": {
														"id": 1119,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 1112,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1067,
															"src": "1924:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1118,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1115,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1113,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1067,
																			"src": "1933:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30786666653563616361376531306534653631633336323465616130393431636430",
																			"id": 1114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1941:34:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_340146287995602323631171512101879684304_by_1",
																				"typeString": "int_const 3401...(31 digits omitted)...4304"
																			},
																			"value": "0xffe5caca7e10e4e61c3624eaa0941cd0"
																		},
																		"src": "1933:42:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1116,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1932:44:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 1117,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1980:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "1932:51:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1924:59:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1120,
													"nodeType": "ExpressionStatement",
													"src": "1924:59:10"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1126,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1124,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1122,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1035,
															"src": "1997:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "30783130",
															"id": 1123,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2007:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_16_by_1",
																"typeString": "int_const 16"
															},
															"value": "0x10"
														},
														"src": "1997:14:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1125,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2015:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1997:19:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1136,
												"nodeType": "IfStatement",
												"src": "1993:84:10",
												"trueBody": {
													"expression": {
														"id": 1134,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 1127,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1067,
															"src": "2018:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1133,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1130,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1128,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1067,
																			"src": "2027:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30786666636239383433643630663631353963396462353838333563393236363434",
																			"id": 1129,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2035:34:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_340010263488231146823593991679159461444_by_1",
																				"typeString": "int_const 3400...(31 digits omitted)...1444"
																			},
																			"value": "0xffcb9843d60f6159c9db58835c926644"
																		},
																		"src": "2027:42:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1131,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2026:44:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 1132,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2074:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "2026:51:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2018:59:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1135,
													"nodeType": "ExpressionStatement",
													"src": "2018:59:10"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1141,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1139,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1137,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1035,
															"src": "2091:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "30783230",
															"id": 1138,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2101:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_32_by_1",
																"typeString": "int_const 32"
															},
															"value": "0x20"
														},
														"src": "2091:14:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1140,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2109:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2091:19:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1151,
												"nodeType": "IfStatement",
												"src": "2087:84:10",
												"trueBody": {
													"expression": {
														"id": 1149,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 1142,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1067,
															"src": "2112:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1148,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1145,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1143,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1067,
																			"src": "2121:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30786666393733623431666139386330383134373265363839366466623235346330",
																			"id": 1144,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2129:34:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_339738377640345403697157401104375502016_by_1",
																				"typeString": "int_const 3397...(31 digits omitted)...2016"
																			},
																			"value": "0xff973b41fa98c081472e6896dfb254c0"
																		},
																		"src": "2121:42:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1146,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2120:44:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 1147,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2168:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "2120:51:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2112:59:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1150,
													"nodeType": "ExpressionStatement",
													"src": "2112:59:10"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1156,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1154,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1152,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1035,
															"src": "2185:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "30783430",
															"id": 1153,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2195:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_64_by_1",
																"typeString": "int_const 64"
															},
															"value": "0x40"
														},
														"src": "2185:14:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1155,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2203:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2185:19:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1166,
												"nodeType": "IfStatement",
												"src": "2181:84:10",
												"trueBody": {
													"expression": {
														"id": 1164,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 1157,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1067,
															"src": "2206:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1163,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1160,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1158,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1067,
																			"src": "2215:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30786666326561313634363663393661333834336563373862333236623532383631",
																			"id": 1159,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2223:34:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_339195258003219555707034227454543997025_by_1",
																				"typeString": "int_const 3391...(31 digits omitted)...7025"
																			},
																			"value": "0xff2ea16466c96a3843ec78b326b52861"
																		},
																		"src": "2215:42:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1161,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2214:44:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 1162,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2262:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "2214:51:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2206:59:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1165,
													"nodeType": "ExpressionStatement",
													"src": "2206:59:10"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1171,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1169,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1167,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1035,
															"src": "2279:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "30783830",
															"id": 1168,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2289:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_128_by_1",
																"typeString": "int_const 128"
															},
															"value": "0x80"
														},
														"src": "2279:14:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1170,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2297:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2279:19:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1181,
												"nodeType": "IfStatement",
												"src": "2275:84:10",
												"trueBody": {
													"expression": {
														"id": 1179,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 1172,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1067,
															"src": "2300:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1178,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1175,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1173,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1067,
																			"src": "2309:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30786665356465653034366139396132613831316334363166313936396333303533",
																			"id": 1174,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2317:34:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_338111622100601834656805679988414885971_by_1",
																				"typeString": "int_const 3381...(31 digits omitted)...5971"
																			},
																			"value": "0xfe5dee046a99a2a811c461f1969c3053"
																		},
																		"src": "2309:42:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1176,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2308:44:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 1177,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2356:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "2308:51:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2300:59:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1180,
													"nodeType": "ExpressionStatement",
													"src": "2300:59:10"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1186,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1184,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1182,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1035,
															"src": "2373:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "3078313030",
															"id": 1183,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2383:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_256_by_1",
																"typeString": "int_const 256"
															},
															"value": "0x100"
														},
														"src": "2373:15:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1185,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2392:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2373:20:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1196,
												"nodeType": "IfStatement",
												"src": "2369:85:10",
												"trueBody": {
													"expression": {
														"id": 1194,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 1187,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1067,
															"src": "2395:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1193,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1190,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1188,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1067,
																			"src": "2404:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30786663626538366337393030613838616564636666633833623437396161336134",
																			"id": 1189,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2412:34:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_335954724994790223023589805789778977700_by_1",
																				"typeString": "int_const 3359...(31 digits omitted)...7700"
																			},
																			"value": "0xfcbe86c7900a88aedcffc83b479aa3a4"
																		},
																		"src": "2404:42:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1191,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2403:44:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 1192,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2451:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "2403:51:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2395:59:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1195,
													"nodeType": "ExpressionStatement",
													"src": "2395:59:10"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1201,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1199,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1197,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1035,
															"src": "2468:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "3078323030",
															"id": 1198,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2478:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_512_by_1",
																"typeString": "int_const 512"
															},
															"value": "0x200"
														},
														"src": "2468:15:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1200,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2487:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2468:20:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1211,
												"nodeType": "IfStatement",
												"src": "2464:85:10",
												"trueBody": {
													"expression": {
														"id": 1209,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 1202,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1067,
															"src": "2490:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1208,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1205,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1203,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1067,
																			"src": "2499:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30786639383761373235336163343133313736663262303734636637383135653534",
																			"id": 1204,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2507:34:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_331682121138379247127172139078559817300_by_1",
																				"typeString": "int_const 3316...(31 digits omitted)...7300"
																			},
																			"value": "0xf987a7253ac413176f2b074cf7815e54"
																		},
																		"src": "2499:42:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1206,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2498:44:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 1207,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2546:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "2498:51:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2490:59:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1210,
													"nodeType": "ExpressionStatement",
													"src": "2490:59:10"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1216,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1214,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1212,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1035,
															"src": "2563:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "3078343030",
															"id": 1213,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2573:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1024_by_1",
																"typeString": "int_const 1024"
															},
															"value": "0x400"
														},
														"src": "2563:15:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1215,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2582:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2563:20:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1226,
												"nodeType": "IfStatement",
												"src": "2559:85:10",
												"trueBody": {
													"expression": {
														"id": 1224,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 1217,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1067,
															"src": "2585:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1223,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1220,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1218,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1067,
																			"src": "2594:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30786633333932623038323262373030303539343063376133393865346237306633",
																			"id": 1219,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2602:34:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_323299236684853023288211250268160618739_by_1",
																				"typeString": "int_const 3232...(31 digits omitted)...8739"
																			},
																			"value": "0xf3392b0822b70005940c7a398e4b70f3"
																		},
																		"src": "2594:42:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1221,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2593:44:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 1222,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2641:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "2593:51:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2585:59:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1225,
													"nodeType": "ExpressionStatement",
													"src": "2585:59:10"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1231,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1229,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1227,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1035,
															"src": "2658:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "3078383030",
															"id": 1228,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2668:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2048_by_1",
																"typeString": "int_const 2048"
															},
															"value": "0x800"
														},
														"src": "2658:15:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1230,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2677:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2658:20:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1241,
												"nodeType": "IfStatement",
												"src": "2654:85:10",
												"trueBody": {
													"expression": {
														"id": 1239,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 1232,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1067,
															"src": "2680:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1238,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1235,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1233,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1067,
																			"src": "2689:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30786537313539343735613263323962373434336232396337666136653838396439",
																			"id": 1234,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2697:34:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_307163716377032989948697243942600083929_by_1",
																				"typeString": "int_const 3071...(31 digits omitted)...3929"
																			},
																			"value": "0xe7159475a2c29b7443b29c7fa6e889d9"
																		},
																		"src": "2689:42:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1236,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2688:44:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 1237,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2736:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "2688:51:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2680:59:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1240,
													"nodeType": "ExpressionStatement",
													"src": "2680:59:10"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1246,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1244,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1242,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1035,
															"src": "2753:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "307831303030",
															"id": 1243,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2763:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_4096_by_1",
																"typeString": "int_const 4096"
															},
															"value": "0x1000"
														},
														"src": "2753:16:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1245,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2773:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2753:21:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1256,
												"nodeType": "IfStatement",
												"src": "2749:86:10",
												"trueBody": {
													"expression": {
														"id": 1254,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 1247,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1067,
															"src": "2776:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1253,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1250,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1248,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1067,
																			"src": "2785:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30786430393766336264666432303232623838343561643866373932616135383235",
																			"id": 1249,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2793:34:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_277268403626896220162999269216087595045_by_1",
																				"typeString": "int_const 2772...(31 digits omitted)...5045"
																			},
																			"value": "0xd097f3bdfd2022b8845ad8f792aa5825"
																		},
																		"src": "2785:42:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1251,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2784:44:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 1252,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2832:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "2784:51:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2776:59:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1255,
													"nodeType": "ExpressionStatement",
													"src": "2776:59:10"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1261,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1259,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1257,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1035,
															"src": "2849:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "307832303030",
															"id": 1258,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2859:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_8192_by_1",
																"typeString": "int_const 8192"
															},
															"value": "0x2000"
														},
														"src": "2849:16:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1260,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2869:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2849:21:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1271,
												"nodeType": "IfStatement",
												"src": "2845:86:10",
												"trueBody": {
													"expression": {
														"id": 1269,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 1262,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1067,
															"src": "2872:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1268,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1265,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1263,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1067,
																			"src": "2881:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30786139663734363436326438373066646638613635646331663930653036316535",
																			"id": 1264,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2889:34:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_225923453940442621947126027127485391333_by_1",
																				"typeString": "int_const 2259...(31 digits omitted)...1333"
																			},
																			"value": "0xa9f746462d870fdf8a65dc1f90e061e5"
																		},
																		"src": "2881:42:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1266,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2880:44:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 1267,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2928:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "2880:51:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2872:59:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1270,
													"nodeType": "ExpressionStatement",
													"src": "2872:59:10"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1276,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1274,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1272,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1035,
															"src": "2945:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "307834303030",
															"id": 1273,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2955:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_16384_by_1",
																"typeString": "int_const 16384"
															},
															"value": "0x4000"
														},
														"src": "2945:16:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1275,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2965:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2945:21:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1286,
												"nodeType": "IfStatement",
												"src": "2941:86:10",
												"trueBody": {
													"expression": {
														"id": 1284,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 1277,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1067,
															"src": "2968:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1283,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1280,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1278,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1067,
																			"src": "2977:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30783730643836396131353664326131623839306262336466363262616633326637",
																			"id": 1279,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2985:34:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_149997214084966997727330242082538205943_by_1",
																				"typeString": "int_const 1499...(31 digits omitted)...5943"
																			},
																			"value": "0x70d869a156d2a1b890bb3df62baf32f7"
																		},
																		"src": "2977:42:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1281,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2976:44:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 1282,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3024:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "2976:51:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2968:59:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1285,
													"nodeType": "ExpressionStatement",
													"src": "2968:59:10"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1291,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1289,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1287,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1035,
															"src": "3041:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "307838303030",
															"id": 1288,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3051:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_32768_by_1",
																"typeString": "int_const 32768"
															},
															"value": "0x8000"
														},
														"src": "3041:16:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1290,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3061:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3041:21:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1301,
												"nodeType": "IfStatement",
												"src": "3037:86:10",
												"trueBody": {
													"expression": {
														"id": 1299,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 1292,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1067,
															"src": "3064:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1298,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1295,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1293,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1067,
																			"src": "3073:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30783331626531333566393764303866643938313233313530353534326663666136",
																			"id": 1294,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3081:34:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_66119101136024775622716233608466517926_by_1",
																				"typeString": "int_const 6611...(30 digits omitted)...7926"
																			},
																			"value": "0x31be135f97d08fd981231505542fcfa6"
																		},
																		"src": "3073:42:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1296,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3072:44:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 1297,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3120:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "3072:51:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3064:59:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1300,
													"nodeType": "ExpressionStatement",
													"src": "3064:59:10"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1306,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1304,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1302,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1035,
															"src": "3137:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "30783130303030",
															"id": 1303,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3147:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_65536_by_1",
																"typeString": "int_const 65536"
															},
															"value": "0x10000"
														},
														"src": "3137:17:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1305,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3158:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3137:22:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1316,
												"nodeType": "IfStatement",
												"src": "3133:86:10",
												"trueBody": {
													"expression": {
														"id": 1314,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 1307,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1067,
															"src": "3161:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1313,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1310,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1308,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1067,
																			"src": "3170:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "307839616135303862356237613834653163363737646535346633653939626339",
																			"id": 1309,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3178:33:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_12847376061809297530290974190478138313_by_1",
																				"typeString": "int_const 1284...(30 digits omitted)...8313"
																			},
																			"value": "0x9aa508b5b7a84e1c677de54f3e99bc9"
																		},
																		"src": "3170:41:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1311,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3169:43:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 1312,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3216:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "3169:50:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3161:58:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1315,
													"nodeType": "ExpressionStatement",
													"src": "3161:58:10"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1321,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1319,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1317,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1035,
															"src": "3233:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "30783230303030",
															"id": 1318,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3243:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_131072_by_1",
																"typeString": "int_const 131072"
															},
															"value": "0x20000"
														},
														"src": "3233:17:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1320,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3254:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3233:22:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1331,
												"nodeType": "IfStatement",
												"src": "3229:85:10",
												"trueBody": {
													"expression": {
														"id": 1329,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 1322,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1067,
															"src": "3257:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1328,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1325,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1323,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1067,
																			"src": "3266:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "3078356436616638646564623831313936363939633332393232356565363034",
																			"id": 1324,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3274:32:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_485053260817066172746253684029974020_by_1",
																				"typeString": "int_const 4850...(28 digits omitted)...4020"
																			},
																			"value": "0x5d6af8dedb81196699c329225ee604"
																		},
																		"src": "3266:40:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1326,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3265:42:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 1327,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3311:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "3265:49:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3257:57:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1330,
													"nodeType": "ExpressionStatement",
													"src": "3257:57:10"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1336,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1334,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1332,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1035,
															"src": "3328:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "30783430303030",
															"id": 1333,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3338:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_262144_by_1",
																"typeString": "int_const 262144"
															},
															"value": "0x40000"
														},
														"src": "3328:17:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1335,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3349:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3328:22:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1346,
												"nodeType": "IfStatement",
												"src": "3324:83:10",
												"trueBody": {
													"expression": {
														"id": 1344,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 1337,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1067,
															"src": "3352:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1343,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1340,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1338,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1067,
																			"src": "3361:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "307832323136653538346635666131656139323630343162656466653938",
																			"id": 1339,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3369:30:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_691415978906521570653435304214168_by_1",
																				"typeString": "int_const 6914...(25 digits omitted)...4168"
																			},
																			"value": "0x2216e584f5fa1ea926041bedfe98"
																		},
																		"src": "3361:38:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1341,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3360:40:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 1342,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3404:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "3360:47:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3352:55:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1345,
													"nodeType": "ExpressionStatement",
													"src": "3352:55:10"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1351,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1349,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1347,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1035,
															"src": "3421:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "30783830303030",
															"id": 1348,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3431:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_524288_by_1",
																"typeString": "int_const 524288"
															},
															"value": "0x80000"
														},
														"src": "3421:17:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1350,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3442:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3421:22:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1361,
												"nodeType": "IfStatement",
												"src": "3417:78:10",
												"trueBody": {
													"expression": {
														"id": 1359,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 1352,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1067,
															"src": "3445:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1358,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1355,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1353,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1067,
																			"src": "3454:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30783438613137303339316637646334323434346538666132",
																			"id": 1354,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3462:25:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1404880482679654955896180642_by_1",
																				"typeString": "int_const 1404880482679654955896180642"
																			},
																			"value": "0x48a170391f7dc42444e8fa2"
																		},
																		"src": "3454:33:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1356,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3453:35:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 1357,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3492:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "3453:42:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3445:50:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1360,
													"nodeType": "ExpressionStatement",
													"src": "3445:50:10"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													},
													"id": 1364,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1362,
														"name": "tick",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1029,
														"src": "3510:4:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1363,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3517:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3510:8:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1375,
												"nodeType": "IfStatement",
												"src": "3506:47:10",
												"trueBody": {
													"expression": {
														"id": 1373,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 1365,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1067,
															"src": "3520:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1372,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1368,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3533:7:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint256_$",
																				"typeString": "type(uint256)"
																			},
																			"typeName": {
																				"id": 1367,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "3533:7:10",
																				"typeDescriptions": {}
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_uint256_$",
																				"typeString": "type(uint256)"
																			}
																		],
																		"id": 1366,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "3528:4:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 1369,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3528:13:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_uint256",
																		"typeString": "type(uint256)"
																	}
																},
																"id": 1370,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "max",
																"nodeType": "MemberAccess",
																"src": "3528:17:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 1371,
																"name": "ratio",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1067,
																"src": "3548:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3528:25:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3520:33:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1374,
													"nodeType": "ExpressionStatement",
													"src": "3520:33:10"
												}
											},
											{
												"expression": {
													"id": 1397,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1376,
														"name": "sqrtPriceX96",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1032,
														"src": "3863:12:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1395,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1381,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1379,
																				"name": "ratio",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1067,
																				"src": "3887:5:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">>",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 1380,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3896:2:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "3887:11:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1382,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "3886:13:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"components": [
																		{
																			"condition": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1390,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1388,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1383,
																						"name": "ratio",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1067,
																						"src": "3903:5:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "%",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_rational_4294967296_by_1",
																									"typeString": "int_const 4294967296"
																								},
																								"id": 1386,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"lValueRequested": false,
																								"leftExpression": {
																									"hexValue": "31",
																									"id": 1384,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "3912:1:10",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_1_by_1",
																										"typeString": "int_const 1"
																									},
																									"value": "1"
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "<<",
																								"rightExpression": {
																									"hexValue": "3332",
																									"id": 1385,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "3917:2:10",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_32_by_1",
																										"typeString": "int_const 32"
																									},
																									"value": "32"
																								},
																								"src": "3912:7:10",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_4294967296_by_1",
																									"typeString": "int_const 4294967296"
																								}
																							}
																						],
																						"id": 1387,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "3911:9:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_4294967296_by_1",
																							"typeString": "int_const 4294967296"
																						}
																					},
																					"src": "3903:17:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"hexValue": "30",
																					"id": 1389,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "3924:1:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				},
																				"src": "3903:22:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"falseExpression": {
																				"hexValue": "31",
																				"id": 1392,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3932:1:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"id": 1393,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "Conditional",
																			"src": "3903:30:10",
																			"trueExpression": {
																				"hexValue": "30",
																				"id": 1391,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3928:1:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		}
																	],
																	"id": 1394,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "3902:32:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "3886:48:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1378,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3878:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint160_$",
																"typeString": "type(uint160)"
															},
															"typeName": {
																"id": 1377,
																"name": "uint160",
																"nodeType": "ElementaryTypeName",
																"src": "3878:7:10",
																"typeDescriptions": {}
															}
														},
														"id": 1396,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3878:57:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"src": "3863:72:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"id": 1398,
												"nodeType": "ExpressionStatement",
												"src": "3863:72:10"
											}
										]
									},
									"documentation": {
										"id": 1027,
										"nodeType": "StructuredDocumentation",
										"src": "1060:297:10",
										"text": "@notice Calculates sqrt(1.0001^tick) * 2^96\n @dev Throws if |tick| > max tick\n @param tick The input tick for the above formula\n @return sqrtPriceX96 A Fixed point Q64.96 number representing the sqrt of the ratio of the two assets (token1/token0)\n at the given tick"
									},
									"id": 1400,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getSqrtRatioAtTick",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1030,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1029,
												"mutability": "mutable",
												"name": "tick",
												"nodeType": "VariableDeclaration",
												"scope": 1400,
												"src": "1390:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1028,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1390:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1389:12:10"
									},
									"returnParameters": {
										"id": 1033,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1032,
												"mutability": "mutable",
												"name": "sqrtPriceX96",
												"nodeType": "VariableDeclaration",
												"scope": 1400,
												"src": "1425:20:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 1031,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "1425:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1424:22:10"
									},
									"scope": 1540,
									"src": "1362:2580:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1538,
										"nodeType": "Block",
										"src": "4446:4196:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1415,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																},
																"id": 1411,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1409,
																	"name": "sqrtPriceX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1403,
																	"src": "4563:12:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"id": 1410,
																	"name": "MIN_SQRT_RATIO",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1022,
																	"src": "4579:14:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																"src": "4563:30:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																},
																"id": 1414,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1412,
																	"name": "sqrtPriceX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1403,
																	"src": "4597:12:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 1413,
																	"name": "MAX_SQRT_RATIO",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1026,
																	"src": "4612:14:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																"src": "4597:29:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "4563:63:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "52",
															"id": 1416,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4628:3:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ef22bddd350b943170a67d35191c27e310709a28c38b5762a152ff640108f5b2",
																"typeString": "literal_string \"R\""
															},
															"value": "R"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ef22bddd350b943170a67d35191c27e310709a28c38b5762a152ff640108f5b2",
																"typeString": "literal_string \"R\""
															}
														],
														"id": 1408,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4555:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1417,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4555:77:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1418,
												"nodeType": "ExpressionStatement",
												"src": "4555:77:10"
											},
											{
												"assignments": [
													1420
												],
												"declarations": [
													{
														"constant": false,
														"id": 1420,
														"mutability": "mutable",
														"name": "ratio",
														"nodeType": "VariableDeclaration",
														"scope": 1538,
														"src": "4642:13:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1419,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4642:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1427,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1426,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 1423,
																"name": "sqrtPriceX96",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1403,
																"src": "4666:12:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															],
															"id": 1422,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4658:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 1421,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "4658:7:10",
																"typeDescriptions": {}
															}
														},
														"id": 1424,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4658:21:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"hexValue": "3332",
														"id": 1425,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4683:2:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_32_by_1",
															"typeString": "int_const 32"
														},
														"value": "32"
													},
													"src": "4658:27:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4642:43:10"
											},
											{
												"assignments": [
													1429
												],
												"declarations": [
													{
														"constant": false,
														"id": 1429,
														"mutability": "mutable",
														"name": "r",
														"nodeType": "VariableDeclaration",
														"scope": 1538,
														"src": "4696:9:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1428,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4696:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1431,
												"initialValue": {
													"id": 1430,
													"name": "ratio",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1420,
													"src": "4708:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4696:17:10"
											},
											{
												"assignments": [
													1433
												],
												"declarations": [
													{
														"constant": false,
														"id": 1433,
														"mutability": "mutable",
														"name": "msb",
														"nodeType": "VariableDeclaration",
														"scope": 1538,
														"src": "4723:11:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1432,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4723:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1435,
												"initialValue": {
													"hexValue": "30",
													"id": 1434,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4737:1:10",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4723:15:10"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "4758:139:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4772:58:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4785:1:10",
																		"type": "",
																		"value": "7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "4791:1:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4794:34:10",
																				"type": "",
																				"value": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "4788:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4788:41:10"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "4781:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4781:49:10"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "4776:1:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4843:17:10",
															"value": {
																"arguments": [
																	{
																		"name": "msb",
																		"nodeType": "YulIdentifier",
																		"src": "4853:3:10"
																	},
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "4858:1:10"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "4850:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4850:10:10"
															},
															"variableNames": [
																{
																	"name": "msb",
																	"nodeType": "YulIdentifier",
																	"src": "4843:3:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4873:14:10",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "4882:1:10"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "4885:1:10"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "4878:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4878:9:10"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "4873:1:10"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 1433,
														"isOffset": false,
														"isSlot": false,
														"src": "4843:3:10",
														"valueSize": 1
													},
													{
														"declaration": 1433,
														"isOffset": false,
														"isSlot": false,
														"src": "4853:3:10",
														"valueSize": 1
													},
													{
														"declaration": 1429,
														"isOffset": false,
														"isSlot": false,
														"src": "4791:1:10",
														"valueSize": 1
													},
													{
														"declaration": 1429,
														"isOffset": false,
														"isSlot": false,
														"src": "4873:1:10",
														"valueSize": 1
													},
													{
														"declaration": 1429,
														"isOffset": false,
														"isSlot": false,
														"src": "4885:1:10",
														"valueSize": 1
													}
												],
												"id": 1436,
												"nodeType": "InlineAssembly",
												"src": "4749:148:10"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "4915:123:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4929:42:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4942:1:10",
																		"type": "",
																		"value": "6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "4948:1:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4951:18:10",
																				"type": "",
																				"value": "0xFFFFFFFFFFFFFFFF"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "4945:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4945:25:10"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "4938:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4938:33:10"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "4933:1:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4984:17:10",
															"value": {
																"arguments": [
																	{
																		"name": "msb",
																		"nodeType": "YulIdentifier",
																		"src": "4994:3:10"
																	},
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "4999:1:10"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "4991:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4991:10:10"
															},
															"variableNames": [
																{
																	"name": "msb",
																	"nodeType": "YulIdentifier",
																	"src": "4984:3:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5014:14:10",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "5023:1:10"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "5026:1:10"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "5019:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5019:9:10"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "5014:1:10"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 1433,
														"isOffset": false,
														"isSlot": false,
														"src": "4984:3:10",
														"valueSize": 1
													},
													{
														"declaration": 1433,
														"isOffset": false,
														"isSlot": false,
														"src": "4994:3:10",
														"valueSize": 1
													},
													{
														"declaration": 1429,
														"isOffset": false,
														"isSlot": false,
														"src": "4948:1:10",
														"valueSize": 1
													},
													{
														"declaration": 1429,
														"isOffset": false,
														"isSlot": false,
														"src": "5014:1:10",
														"valueSize": 1
													},
													{
														"declaration": 1429,
														"isOffset": false,
														"isSlot": false,
														"src": "5026:1:10",
														"valueSize": 1
													}
												],
												"id": 1437,
												"nodeType": "InlineAssembly",
												"src": "4906:132:10"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "5056:115:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5070:34:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5083:1:10",
																		"type": "",
																		"value": "5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "5089:1:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5092:10:10",
																				"type": "",
																				"value": "0xFFFFFFFF"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "5086:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5086:17:10"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "5079:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5079:25:10"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "5074:1:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5117:17:10",
															"value": {
																"arguments": [
																	{
																		"name": "msb",
																		"nodeType": "YulIdentifier",
																		"src": "5127:3:10"
																	},
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "5132:1:10"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "5124:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5124:10:10"
															},
															"variableNames": [
																{
																	"name": "msb",
																	"nodeType": "YulIdentifier",
																	"src": "5117:3:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5147:14:10",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "5156:1:10"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "5159:1:10"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "5152:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5152:9:10"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "5147:1:10"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 1433,
														"isOffset": false,
														"isSlot": false,
														"src": "5117:3:10",
														"valueSize": 1
													},
													{
														"declaration": 1433,
														"isOffset": false,
														"isSlot": false,
														"src": "5127:3:10",
														"valueSize": 1
													},
													{
														"declaration": 1429,
														"isOffset": false,
														"isSlot": false,
														"src": "5089:1:10",
														"valueSize": 1
													},
													{
														"declaration": 1429,
														"isOffset": false,
														"isSlot": false,
														"src": "5147:1:10",
														"valueSize": 1
													},
													{
														"declaration": 1429,
														"isOffset": false,
														"isSlot": false,
														"src": "5159:1:10",
														"valueSize": 1
													}
												],
												"id": 1438,
												"nodeType": "InlineAssembly",
												"src": "5047:124:10"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "5189:111:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5203:30:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5216:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "5222:1:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5225:6:10",
																				"type": "",
																				"value": "0xFFFF"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "5219:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5219:13:10"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "5212:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5212:21:10"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "5207:1:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5246:17:10",
															"value": {
																"arguments": [
																	{
																		"name": "msb",
																		"nodeType": "YulIdentifier",
																		"src": "5256:3:10"
																	},
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "5261:1:10"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "5253:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5253:10:10"
															},
															"variableNames": [
																{
																	"name": "msb",
																	"nodeType": "YulIdentifier",
																	"src": "5246:3:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5276:14:10",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "5285:1:10"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "5288:1:10"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "5281:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5281:9:10"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "5276:1:10"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 1433,
														"isOffset": false,
														"isSlot": false,
														"src": "5246:3:10",
														"valueSize": 1
													},
													{
														"declaration": 1433,
														"isOffset": false,
														"isSlot": false,
														"src": "5256:3:10",
														"valueSize": 1
													},
													{
														"declaration": 1429,
														"isOffset": false,
														"isSlot": false,
														"src": "5222:1:10",
														"valueSize": 1
													},
													{
														"declaration": 1429,
														"isOffset": false,
														"isSlot": false,
														"src": "5276:1:10",
														"valueSize": 1
													},
													{
														"declaration": 1429,
														"isOffset": false,
														"isSlot": false,
														"src": "5288:1:10",
														"valueSize": 1
													}
												],
												"id": 1439,
												"nodeType": "InlineAssembly",
												"src": "5180:120:10"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "5318:109:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5332:28:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5345:1:10",
																		"type": "",
																		"value": "3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "5351:1:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5354:4:10",
																				"type": "",
																				"value": "0xFF"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "5348:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5348:11:10"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "5341:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5341:19:10"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "5336:1:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5373:17:10",
															"value": {
																"arguments": [
																	{
																		"name": "msb",
																		"nodeType": "YulIdentifier",
																		"src": "5383:3:10"
																	},
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "5388:1:10"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "5380:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5380:10:10"
															},
															"variableNames": [
																{
																	"name": "msb",
																	"nodeType": "YulIdentifier",
																	"src": "5373:3:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5403:14:10",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "5412:1:10"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "5415:1:10"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "5408:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5408:9:10"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "5403:1:10"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 1433,
														"isOffset": false,
														"isSlot": false,
														"src": "5373:3:10",
														"valueSize": 1
													},
													{
														"declaration": 1433,
														"isOffset": false,
														"isSlot": false,
														"src": "5383:3:10",
														"valueSize": 1
													},
													{
														"declaration": 1429,
														"isOffset": false,
														"isSlot": false,
														"src": "5351:1:10",
														"valueSize": 1
													},
													{
														"declaration": 1429,
														"isOffset": false,
														"isSlot": false,
														"src": "5403:1:10",
														"valueSize": 1
													},
													{
														"declaration": 1429,
														"isOffset": false,
														"isSlot": false,
														"src": "5415:1:10",
														"valueSize": 1
													}
												],
												"id": 1440,
												"nodeType": "InlineAssembly",
												"src": "5309:118:10"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "5445:108:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5459:27:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5472:1:10",
																		"type": "",
																		"value": "2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "5478:1:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5481:3:10",
																				"type": "",
																				"value": "0xF"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "5475:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5475:10:10"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "5468:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5468:18:10"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "5463:1:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5499:17:10",
															"value": {
																"arguments": [
																	{
																		"name": "msb",
																		"nodeType": "YulIdentifier",
																		"src": "5509:3:10"
																	},
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "5514:1:10"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "5506:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5506:10:10"
															},
															"variableNames": [
																{
																	"name": "msb",
																	"nodeType": "YulIdentifier",
																	"src": "5499:3:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5529:14:10",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "5538:1:10"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "5541:1:10"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "5534:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5534:9:10"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "5529:1:10"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 1433,
														"isOffset": false,
														"isSlot": false,
														"src": "5499:3:10",
														"valueSize": 1
													},
													{
														"declaration": 1433,
														"isOffset": false,
														"isSlot": false,
														"src": "5509:3:10",
														"valueSize": 1
													},
													{
														"declaration": 1429,
														"isOffset": false,
														"isSlot": false,
														"src": "5478:1:10",
														"valueSize": 1
													},
													{
														"declaration": 1429,
														"isOffset": false,
														"isSlot": false,
														"src": "5529:1:10",
														"valueSize": 1
													},
													{
														"declaration": 1429,
														"isOffset": false,
														"isSlot": false,
														"src": "5541:1:10",
														"valueSize": 1
													}
												],
												"id": 1441,
												"nodeType": "InlineAssembly",
												"src": "5436:117:10"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "5571:108:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5585:27:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5598:1:10",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "5604:1:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5607:3:10",
																				"type": "",
																				"value": "0x3"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "5601:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5601:10:10"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "5594:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5594:18:10"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "5589:1:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5625:17:10",
															"value": {
																"arguments": [
																	{
																		"name": "msb",
																		"nodeType": "YulIdentifier",
																		"src": "5635:3:10"
																	},
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "5640:1:10"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "5632:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5632:10:10"
															},
															"variableNames": [
																{
																	"name": "msb",
																	"nodeType": "YulIdentifier",
																	"src": "5625:3:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5655:14:10",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "5664:1:10"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "5667:1:10"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "5660:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5660:9:10"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "5655:1:10"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 1433,
														"isOffset": false,
														"isSlot": false,
														"src": "5625:3:10",
														"valueSize": 1
													},
													{
														"declaration": 1433,
														"isOffset": false,
														"isSlot": false,
														"src": "5635:3:10",
														"valueSize": 1
													},
													{
														"declaration": 1429,
														"isOffset": false,
														"isSlot": false,
														"src": "5604:1:10",
														"valueSize": 1
													},
													{
														"declaration": 1429,
														"isOffset": false,
														"isSlot": false,
														"src": "5655:1:10",
														"valueSize": 1
													},
													{
														"declaration": 1429,
														"isOffset": false,
														"isSlot": false,
														"src": "5667:1:10",
														"valueSize": 1
													}
												],
												"id": 1442,
												"nodeType": "InlineAssembly",
												"src": "5562:117:10"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "5697:73:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5711:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "5723:1:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5726:3:10",
																		"type": "",
																		"value": "0x1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5720:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5720:10:10"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "5715:1:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5743:17:10",
															"value": {
																"arguments": [
																	{
																		"name": "msb",
																		"nodeType": "YulIdentifier",
																		"src": "5753:3:10"
																	},
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "5758:1:10"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "5750:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5750:10:10"
															},
															"variableNames": [
																{
																	"name": "msb",
																	"nodeType": "YulIdentifier",
																	"src": "5743:3:10"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 1433,
														"isOffset": false,
														"isSlot": false,
														"src": "5743:3:10",
														"valueSize": 1
													},
													{
														"declaration": 1433,
														"isOffset": false,
														"isSlot": false,
														"src": "5753:3:10",
														"valueSize": 1
													},
													{
														"declaration": 1429,
														"isOffset": false,
														"isSlot": false,
														"src": "5723:1:10",
														"valueSize": 1
													}
												],
												"id": 1443,
												"nodeType": "InlineAssembly",
												"src": "5688:82:10"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1446,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1444,
														"name": "msb",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1433,
														"src": "5784:3:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"hexValue": "313238",
														"id": 1445,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5791:3:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_128_by_1",
															"typeString": "int_const 128"
														},
														"value": "128"
													},
													"src": "5784:10:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"expression": {
														"id": 1463,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 1456,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1429,
															"src": "5835:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1462,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1457,
																"name": "ratio",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1420,
																"src": "5839:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<<",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1460,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "313237",
																			"id": 1458,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5849:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_127_by_1",
																				"typeString": "int_const 127"
																			},
																			"value": "127"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 1459,
																			"name": "msb",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1433,
																			"src": "5855:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "5849:9:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1461,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "5848:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5839:20:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "5835:24:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1464,
													"nodeType": "ExpressionStatement",
													"src": "5835:24:10"
												},
												"id": 1465,
												"nodeType": "IfStatement",
												"src": "5780:79:10",
												"trueBody": {
													"expression": {
														"id": 1454,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 1447,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1429,
															"src": "5796:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1453,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1448,
																"name": "ratio",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1420,
																"src": "5800:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1451,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1449,
																			"name": "msb",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1433,
																			"src": "5810:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "313237",
																			"id": 1450,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5816:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_127_by_1",
																				"typeString": "int_const 127"
																			},
																			"value": "127"
																		},
																		"src": "5810:9:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1452,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "5809:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5800:20:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "5796:24:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1455,
													"nodeType": "ExpressionStatement",
													"src": "5796:24:10"
												}
											},
											{
												"assignments": [
													1467
												],
												"declarations": [
													{
														"constant": false,
														"id": 1467,
														"mutability": "mutable",
														"name": "log_2",
														"nodeType": "VariableDeclaration",
														"scope": 1538,
														"src": "5870:12:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 1466,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "5870:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1477,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 1476,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 1473,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 1470,
																			"name": "msb",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1433,
																			"src": "5893:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1469,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5886:6:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int256_$",
																			"typeString": "type(int256)"
																		},
																		"typeName": {
																			"id": 1468,
																			"name": "int256",
																			"nodeType": "ElementaryTypeName",
																			"src": "5886:6:10",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1471,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5886:11:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 1472,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5900:3:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "5886:17:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 1474,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "5885:19:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"hexValue": "3634",
														"id": 1475,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5908:2:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_64_by_1",
															"typeString": "int_const 64"
														},
														"value": "64"
													},
													"src": "5885:25:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5870:40:10"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "5930:151:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5944:24:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5953:3:10",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "5962:1:10"
																			},
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "5965:1:10"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "5958:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5958:9:10"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "5949:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5949:19:10"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "5944:1:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5981:20:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5994:3:10",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "5999:1:10"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "5990:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5990:11:10"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "5985:1:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6014:30:10",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nodeType": "YulIdentifier",
																		"src": "6026:5:10"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6037:2:10",
																				"type": "",
																				"value": "63"
																			},
																			{
																				"name": "f",
																				"nodeType": "YulIdentifier",
																				"src": "6041:1:10"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "6033:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6033:10:10"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "6023:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6023:21:10"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nodeType": "YulIdentifier",
																	"src": "6014:5:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6057:14:10",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "6066:1:10"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "6069:1:10"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6062:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6062:9:10"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "6057:1:10"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 1467,
														"isOffset": false,
														"isSlot": false,
														"src": "6014:5:10",
														"valueSize": 1
													},
													{
														"declaration": 1467,
														"isOffset": false,
														"isSlot": false,
														"src": "6026:5:10",
														"valueSize": 1
													},
													{
														"declaration": 1429,
														"isOffset": false,
														"isSlot": false,
														"src": "5944:1:10",
														"valueSize": 1
													},
													{
														"declaration": 1429,
														"isOffset": false,
														"isSlot": false,
														"src": "5962:1:10",
														"valueSize": 1
													},
													{
														"declaration": 1429,
														"isOffset": false,
														"isSlot": false,
														"src": "5965:1:10",
														"valueSize": 1
													},
													{
														"declaration": 1429,
														"isOffset": false,
														"isSlot": false,
														"src": "5999:1:10",
														"valueSize": 1
													},
													{
														"declaration": 1429,
														"isOffset": false,
														"isSlot": false,
														"src": "6057:1:10",
														"valueSize": 1
													},
													{
														"declaration": 1429,
														"isOffset": false,
														"isSlot": false,
														"src": "6069:1:10",
														"valueSize": 1
													}
												],
												"id": 1478,
												"nodeType": "InlineAssembly",
												"src": "5921:160:10"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "6099:151:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6113:24:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6122:3:10",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "6131:1:10"
																			},
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "6134:1:10"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "6127:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6127:9:10"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6118:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6118:19:10"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "6113:1:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6150:20:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6163:3:10",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "6168:1:10"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6159:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6159:11:10"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "6154:1:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6183:30:10",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nodeType": "YulIdentifier",
																		"src": "6195:5:10"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6206:2:10",
																				"type": "",
																				"value": "62"
																			},
																			{
																				"name": "f",
																				"nodeType": "YulIdentifier",
																				"src": "6210:1:10"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "6202:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6202:10:10"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "6192:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6192:21:10"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nodeType": "YulIdentifier",
																	"src": "6183:5:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6226:14:10",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "6235:1:10"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "6238:1:10"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6231:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6231:9:10"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "6226:1:10"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 1467,
														"isOffset": false,
														"isSlot": false,
														"src": "6183:5:10",
														"valueSize": 1
													},
													{
														"declaration": 1467,
														"isOffset": false,
														"isSlot": false,
														"src": "6195:5:10",
														"valueSize": 1
													},
													{
														"declaration": 1429,
														"isOffset": false,
														"isSlot": false,
														"src": "6113:1:10",
														"valueSize": 1
													},
													{
														"declaration": 1429,
														"isOffset": false,
														"isSlot": false,
														"src": "6131:1:10",
														"valueSize": 1
													},
													{
														"declaration": 1429,
														"isOffset": false,
														"isSlot": false,
														"src": "6134:1:10",
														"valueSize": 1
													},
													{
														"declaration": 1429,
														"isOffset": false,
														"isSlot": false,
														"src": "6168:1:10",
														"valueSize": 1
													},
													{
														"declaration": 1429,
														"isOffset": false,
														"isSlot": false,
														"src": "6226:1:10",
														"valueSize": 1
													},
													{
														"declaration": 1429,
														"isOffset": false,
														"isSlot": false,
														"src": "6238:1:10",
														"valueSize": 1
													}
												],
												"id": 1479,
												"nodeType": "InlineAssembly",
												"src": "6090:160:10"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "6268:151:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6282:24:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6291:3:10",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "6300:1:10"
																			},
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "6303:1:10"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "6296:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6296:9:10"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6287:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6287:19:10"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "6282:1:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6319:20:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6332:3:10",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "6337:1:10"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6328:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6328:11:10"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "6323:1:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6352:30:10",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nodeType": "YulIdentifier",
																		"src": "6364:5:10"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6375:2:10",
																				"type": "",
																				"value": "61"
																			},
																			{
																				"name": "f",
																				"nodeType": "YulIdentifier",
																				"src": "6379:1:10"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "6371:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6371:10:10"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "6361:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6361:21:10"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nodeType": "YulIdentifier",
																	"src": "6352:5:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6395:14:10",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "6404:1:10"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "6407:1:10"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6400:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6400:9:10"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "6395:1:10"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 1467,
														"isOffset": false,
														"isSlot": false,
														"src": "6352:5:10",
														"valueSize": 1
													},
													{
														"declaration": 1467,
														"isOffset": false,
														"isSlot": false,
														"src": "6364:5:10",
														"valueSize": 1
													},
													{
														"declaration": 1429,
														"isOffset": false,
														"isSlot": false,
														"src": "6282:1:10",
														"valueSize": 1
													},
													{
														"declaration": 1429,
														"isOffset": false,
														"isSlot": false,
														"src": "6300:1:10",
														"valueSize": 1
													},
													{
														"declaration": 1429,
														"isOffset": false,
														"isSlot": false,
														"src": "6303:1:10",
														"valueSize": 1
													},
													{
														"declaration": 1429,
														"isOffset": false,
														"isSlot": false,
														"src": "6337:1:10",
														"valueSize": 1
													},
													{
														"declaration": 1429,
														"isOffset": false,
														"isSlot": false,
														"src": "6395:1:10",
														"valueSize": 1
													},
													{
														"declaration": 1429,
														"isOffset": false,
														"isSlot": false,
														"src": "6407:1:10",
														"valueSize": 1
													}
												],
												"id": 1480,
												"nodeType": "InlineAssembly",
												"src": "6259:160:10"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "6437:151:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6451:24:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6460:3:10",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "6469:1:10"
																			},
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "6472:1:10"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "6465:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6465:9:10"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6456:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6456:19:10"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "6451:1:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6488:20:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6501:3:10",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "6506:1:10"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6497:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6497:11:10"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "6492:1:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6521:30:10",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nodeType": "YulIdentifier",
																		"src": "6533:5:10"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6544:2:10",
																				"type": "",
																				"value": "60"
																			},
																			{
																				"name": "f",
																				"nodeType": "YulIdentifier",
																				"src": "6548:1:10"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "6540:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6540:10:10"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "6530:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6530:21:10"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nodeType": "YulIdentifier",
																	"src": "6521:5:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6564:14:10",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "6573:1:10"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "6576:1:10"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6569:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6569:9:10"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "6564:1:10"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 1467,
														"isOffset": false,
														"isSlot": false,
														"src": "6521:5:10",
														"valueSize": 1
													},
													{
														"declaration": 1467,
														"isOffset": false,
														"isSlot": false,
														"src": "6533:5:10",
														"valueSize": 1
													},
													{
														"declaration": 1429,
														"isOffset": false,
														"isSlot": false,
														"src": "6451:1:10",
														"valueSize": 1
													},
													{
														"declaration": 1429,
														"isOffset": false,
														"isSlot": false,
														"src": "6469:1:10",
														"valueSize": 1
													},
													{
														"declaration": 1429,
														"isOffset": false,
														"isSlot": false,
														"src": "6472:1:10",
														"valueSize": 1
													},
													{
														"declaration": 1429,
														"isOffset": false,
														"isSlot": false,
														"src": "6506:1:10",
														"valueSize": 1
													},
													{
														"declaration": 1429,
														"isOffset": false,
														"isSlot": false,
														"src": "6564:1:10",
														"valueSize": 1
													},
													{
														"declaration": 1429,
														"isOffset": false,
														"isSlot": false,
														"src": "6576:1:10",
														"valueSize": 1
													}
												],
												"id": 1481,
												"nodeType": "InlineAssembly",
												"src": "6428:160:10"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "6606:151:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6620:24:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6629:3:10",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "6638:1:10"
																			},
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "6641:1:10"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "6634:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6634:9:10"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6625:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6625:19:10"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "6620:1:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6657:20:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6670:3:10",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "6675:1:10"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6666:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6666:11:10"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "6661:1:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6690:30:10",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nodeType": "YulIdentifier",
																		"src": "6702:5:10"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6713:2:10",
																				"type": "",
																				"value": "59"
																			},
																			{
																				"name": "f",
																				"nodeType": "YulIdentifier",
																				"src": "6717:1:10"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "6709:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6709:10:10"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "6699:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6699:21:10"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nodeType": "YulIdentifier",
																	"src": "6690:5:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6733:14:10",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "6742:1:10"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "6745:1:10"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6738:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6738:9:10"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "6733:1:10"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 1467,
														"isOffset": false,
														"isSlot": false,
														"src": "6690:5:10",
														"valueSize": 1
													},
													{
														"declaration": 1467,
														"isOffset": false,
														"isSlot": false,
														"src": "6702:5:10",
														"valueSize": 1
													},
													{
														"declaration": 1429,
														"isOffset": false,
														"isSlot": false,
														"src": "6620:1:10",
														"valueSize": 1
													},
													{
														"declaration": 1429,
														"isOffset": false,
														"isSlot": false,
														"src": "6638:1:10",
														"valueSize": 1
													},
													{
														"declaration": 1429,
														"isOffset": false,
														"isSlot": false,
														"src": "6641:1:10",
														"valueSize": 1
													},
													{
														"declaration": 1429,
														"isOffset": false,
														"isSlot": false,
														"src": "6675:1:10",
														"valueSize": 1
													},
													{
														"declaration": 1429,
														"isOffset": false,
														"isSlot": false,
														"src": "6733:1:10",
														"valueSize": 1
													},
													{
														"declaration": 1429,
														"isOffset": false,
														"isSlot": false,
														"src": "6745:1:10",
														"valueSize": 1
													}
												],
												"id": 1482,
												"nodeType": "InlineAssembly",
												"src": "6597:160:10"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "6775:151:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6789:24:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6798:3:10",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "6807:1:10"
																			},
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "6810:1:10"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "6803:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6803:9:10"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6794:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6794:19:10"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "6789:1:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6826:20:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6839:3:10",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "6844:1:10"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6835:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6835:11:10"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "6830:1:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6859:30:10",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nodeType": "YulIdentifier",
																		"src": "6871:5:10"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6882:2:10",
																				"type": "",
																				"value": "58"
																			},
																			{
																				"name": "f",
																				"nodeType": "YulIdentifier",
																				"src": "6886:1:10"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "6878:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6878:10:10"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "6868:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6868:21:10"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nodeType": "YulIdentifier",
																	"src": "6859:5:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6902:14:10",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "6911:1:10"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "6914:1:10"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6907:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6907:9:10"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "6902:1:10"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 1467,
														"isOffset": false,
														"isSlot": false,
														"src": "6859:5:10",
														"valueSize": 1
													},
													{
														"declaration": 1467,
														"isOffset": false,
														"isSlot": false,
														"src": "6871:5:10",
														"valueSize": 1
													},
													{
														"declaration": 1429,
														"isOffset": false,
														"isSlot": false,
														"src": "6789:1:10",
														"valueSize": 1
													},
													{
														"declaration": 1429,
														"isOffset": false,
														"isSlot": false,
														"src": "6807:1:10",
														"valueSize": 1
													},
													{
														"declaration": 1429,
														"isOffset": false,
														"isSlot": false,
														"src": "6810:1:10",
														"valueSize": 1
													},
													{
														"declaration": 1429,
														"isOffset": false,
														"isSlot": false,
														"src": "6844:1:10",
														"valueSize": 1
													},
													{
														"declaration": 1429,
														"isOffset": false,
														"isSlot": false,
														"src": "6902:1:10",
														"valueSize": 1
													},
													{
														"declaration": 1429,
														"isOffset": false,
														"isSlot": false,
														"src": "6914:1:10",
														"valueSize": 1
													}
												],
												"id": 1483,
												"nodeType": "InlineAssembly",
												"src": "6766:160:10"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "6944:151:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6958:24:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6967:3:10",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "6976:1:10"
																			},
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "6979:1:10"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "6972:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6972:9:10"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6963:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6963:19:10"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "6958:1:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6995:20:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7008:3:10",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "7013:1:10"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7004:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7004:11:10"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "6999:1:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7028:30:10",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nodeType": "YulIdentifier",
																		"src": "7040:5:10"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7051:2:10",
																				"type": "",
																				"value": "57"
																			},
																			{
																				"name": "f",
																				"nodeType": "YulIdentifier",
																				"src": "7055:1:10"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "7047:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7047:10:10"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "7037:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7037:21:10"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nodeType": "YulIdentifier",
																	"src": "7028:5:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7071:14:10",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "7080:1:10"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "7083:1:10"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7076:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7076:9:10"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "7071:1:10"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 1467,
														"isOffset": false,
														"isSlot": false,
														"src": "7028:5:10",
														"valueSize": 1
													},
													{
														"declaration": 1467,
														"isOffset": false,
														"isSlot": false,
														"src": "7040:5:10",
														"valueSize": 1
													},
													{
														"declaration": 1429,
														"isOffset": false,
														"isSlot": false,
														"src": "6958:1:10",
														"valueSize": 1
													},
													{
														"declaration": 1429,
														"isOffset": false,
														"isSlot": false,
														"src": "6976:1:10",
														"valueSize": 1
													},
													{
														"declaration": 1429,
														"isOffset": false,
														"isSlot": false,
														"src": "6979:1:10",
														"valueSize": 1
													},
													{
														"declaration": 1429,
														"isOffset": false,
														"isSlot": false,
														"src": "7013:1:10",
														"valueSize": 1
													},
													{
														"declaration": 1429,
														"isOffset": false,
														"isSlot": false,
														"src": "7071:1:10",
														"valueSize": 1
													},
													{
														"declaration": 1429,
														"isOffset": false,
														"isSlot": false,
														"src": "7083:1:10",
														"valueSize": 1
													}
												],
												"id": 1484,
												"nodeType": "InlineAssembly",
												"src": "6935:160:10"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "7113:151:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7127:24:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7136:3:10",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "7145:1:10"
																			},
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "7148:1:10"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "7141:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7141:9:10"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7132:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7132:19:10"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "7127:1:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7164:20:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7177:3:10",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "7182:1:10"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7173:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7173:11:10"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "7168:1:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7197:30:10",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nodeType": "YulIdentifier",
																		"src": "7209:5:10"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7220:2:10",
																				"type": "",
																				"value": "56"
																			},
																			{
																				"name": "f",
																				"nodeType": "YulIdentifier",
																				"src": "7224:1:10"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "7216:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7216:10:10"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "7206:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7206:21:10"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nodeType": "YulIdentifier",
																	"src": "7197:5:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7240:14:10",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "7249:1:10"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "7252:1:10"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7245:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7245:9:10"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "7240:1:10"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 1467,
														"isOffset": false,
														"isSlot": false,
														"src": "7197:5:10",
														"valueSize": 1
													},
													{
														"declaration": 1467,
														"isOffset": false,
														"isSlot": false,
														"src": "7209:5:10",
														"valueSize": 1
													},
													{
														"declaration": 1429,
														"isOffset": false,
														"isSlot": false,
														"src": "7127:1:10",
														"valueSize": 1
													},
													{
														"declaration": 1429,
														"isOffset": false,
														"isSlot": false,
														"src": "7145:1:10",
														"valueSize": 1
													},
													{
														"declaration": 1429,
														"isOffset": false,
														"isSlot": false,
														"src": "7148:1:10",
														"valueSize": 1
													},
													{
														"declaration": 1429,
														"isOffset": false,
														"isSlot": false,
														"src": "7182:1:10",
														"valueSize": 1
													},
													{
														"declaration": 1429,
														"isOffset": false,
														"isSlot": false,
														"src": "7240:1:10",
														"valueSize": 1
													},
													{
														"declaration": 1429,
														"isOffset": false,
														"isSlot": false,
														"src": "7252:1:10",
														"valueSize": 1
													}
												],
												"id": 1485,
												"nodeType": "InlineAssembly",
												"src": "7104:160:10"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "7282:151:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7296:24:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7305:3:10",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "7314:1:10"
																			},
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "7317:1:10"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "7310:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7310:9:10"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7301:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7301:19:10"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "7296:1:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7333:20:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7346:3:10",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "7351:1:10"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7342:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7342:11:10"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "7337:1:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7366:30:10",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nodeType": "YulIdentifier",
																		"src": "7378:5:10"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7389:2:10",
																				"type": "",
																				"value": "55"
																			},
																			{
																				"name": "f",
																				"nodeType": "YulIdentifier",
																				"src": "7393:1:10"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "7385:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7385:10:10"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "7375:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7375:21:10"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nodeType": "YulIdentifier",
																	"src": "7366:5:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7409:14:10",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "7418:1:10"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "7421:1:10"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7414:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7414:9:10"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "7409:1:10"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 1467,
														"isOffset": false,
														"isSlot": false,
														"src": "7366:5:10",
														"valueSize": 1
													},
													{
														"declaration": 1467,
														"isOffset": false,
														"isSlot": false,
														"src": "7378:5:10",
														"valueSize": 1
													},
													{
														"declaration": 1429,
														"isOffset": false,
														"isSlot": false,
														"src": "7296:1:10",
														"valueSize": 1
													},
													{
														"declaration": 1429,
														"isOffset": false,
														"isSlot": false,
														"src": "7314:1:10",
														"valueSize": 1
													},
													{
														"declaration": 1429,
														"isOffset": false,
														"isSlot": false,
														"src": "7317:1:10",
														"valueSize": 1
													},
													{
														"declaration": 1429,
														"isOffset": false,
														"isSlot": false,
														"src": "7351:1:10",
														"valueSize": 1
													},
													{
														"declaration": 1429,
														"isOffset": false,
														"isSlot": false,
														"src": "7409:1:10",
														"valueSize": 1
													},
													{
														"declaration": 1429,
														"isOffset": false,
														"isSlot": false,
														"src": "7421:1:10",
														"valueSize": 1
													}
												],
												"id": 1486,
												"nodeType": "InlineAssembly",
												"src": "7273:160:10"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "7451:151:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7465:24:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7474:3:10",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "7483:1:10"
																			},
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "7486:1:10"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "7479:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7479:9:10"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7470:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7470:19:10"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "7465:1:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7502:20:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7515:3:10",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "7520:1:10"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7511:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7511:11:10"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "7506:1:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7535:30:10",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nodeType": "YulIdentifier",
																		"src": "7547:5:10"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7558:2:10",
																				"type": "",
																				"value": "54"
																			},
																			{
																				"name": "f",
																				"nodeType": "YulIdentifier",
																				"src": "7562:1:10"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "7554:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7554:10:10"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "7544:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7544:21:10"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nodeType": "YulIdentifier",
																	"src": "7535:5:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7578:14:10",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "7587:1:10"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "7590:1:10"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7583:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7583:9:10"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "7578:1:10"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 1467,
														"isOffset": false,
														"isSlot": false,
														"src": "7535:5:10",
														"valueSize": 1
													},
													{
														"declaration": 1467,
														"isOffset": false,
														"isSlot": false,
														"src": "7547:5:10",
														"valueSize": 1
													},
													{
														"declaration": 1429,
														"isOffset": false,
														"isSlot": false,
														"src": "7465:1:10",
														"valueSize": 1
													},
													{
														"declaration": 1429,
														"isOffset": false,
														"isSlot": false,
														"src": "7483:1:10",
														"valueSize": 1
													},
													{
														"declaration": 1429,
														"isOffset": false,
														"isSlot": false,
														"src": "7486:1:10",
														"valueSize": 1
													},
													{
														"declaration": 1429,
														"isOffset": false,
														"isSlot": false,
														"src": "7520:1:10",
														"valueSize": 1
													},
													{
														"declaration": 1429,
														"isOffset": false,
														"isSlot": false,
														"src": "7578:1:10",
														"valueSize": 1
													},
													{
														"declaration": 1429,
														"isOffset": false,
														"isSlot": false,
														"src": "7590:1:10",
														"valueSize": 1
													}
												],
												"id": 1487,
												"nodeType": "InlineAssembly",
												"src": "7442:160:10"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "7620:151:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7634:24:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7643:3:10",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "7652:1:10"
																			},
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "7655:1:10"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "7648:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7648:9:10"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7639:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7639:19:10"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "7634:1:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7671:20:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7684:3:10",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "7689:1:10"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7680:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7680:11:10"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "7675:1:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7704:30:10",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nodeType": "YulIdentifier",
																		"src": "7716:5:10"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7727:2:10",
																				"type": "",
																				"value": "53"
																			},
																			{
																				"name": "f",
																				"nodeType": "YulIdentifier",
																				"src": "7731:1:10"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "7723:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7723:10:10"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "7713:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7713:21:10"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nodeType": "YulIdentifier",
																	"src": "7704:5:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7747:14:10",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "7756:1:10"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "7759:1:10"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7752:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7752:9:10"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "7747:1:10"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 1467,
														"isOffset": false,
														"isSlot": false,
														"src": "7704:5:10",
														"valueSize": 1
													},
													{
														"declaration": 1467,
														"isOffset": false,
														"isSlot": false,
														"src": "7716:5:10",
														"valueSize": 1
													},
													{
														"declaration": 1429,
														"isOffset": false,
														"isSlot": false,
														"src": "7634:1:10",
														"valueSize": 1
													},
													{
														"declaration": 1429,
														"isOffset": false,
														"isSlot": false,
														"src": "7652:1:10",
														"valueSize": 1
													},
													{
														"declaration": 1429,
														"isOffset": false,
														"isSlot": false,
														"src": "7655:1:10",
														"valueSize": 1
													},
													{
														"declaration": 1429,
														"isOffset": false,
														"isSlot": false,
														"src": "7689:1:10",
														"valueSize": 1
													},
													{
														"declaration": 1429,
														"isOffset": false,
														"isSlot": false,
														"src": "7747:1:10",
														"valueSize": 1
													},
													{
														"declaration": 1429,
														"isOffset": false,
														"isSlot": false,
														"src": "7759:1:10",
														"valueSize": 1
													}
												],
												"id": 1488,
												"nodeType": "InlineAssembly",
												"src": "7611:160:10"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "7789:151:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7803:24:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7812:3:10",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "7821:1:10"
																			},
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "7824:1:10"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "7817:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7817:9:10"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7808:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7808:19:10"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "7803:1:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7840:20:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7853:3:10",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "7858:1:10"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7849:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7849:11:10"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "7844:1:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7873:30:10",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nodeType": "YulIdentifier",
																		"src": "7885:5:10"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7896:2:10",
																				"type": "",
																				"value": "52"
																			},
																			{
																				"name": "f",
																				"nodeType": "YulIdentifier",
																				"src": "7900:1:10"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "7892:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7892:10:10"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "7882:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7882:21:10"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nodeType": "YulIdentifier",
																	"src": "7873:5:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7916:14:10",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "7925:1:10"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "7928:1:10"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7921:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7921:9:10"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "7916:1:10"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 1467,
														"isOffset": false,
														"isSlot": false,
														"src": "7873:5:10",
														"valueSize": 1
													},
													{
														"declaration": 1467,
														"isOffset": false,
														"isSlot": false,
														"src": "7885:5:10",
														"valueSize": 1
													},
													{
														"declaration": 1429,
														"isOffset": false,
														"isSlot": false,
														"src": "7803:1:10",
														"valueSize": 1
													},
													{
														"declaration": 1429,
														"isOffset": false,
														"isSlot": false,
														"src": "7821:1:10",
														"valueSize": 1
													},
													{
														"declaration": 1429,
														"isOffset": false,
														"isSlot": false,
														"src": "7824:1:10",
														"valueSize": 1
													},
													{
														"declaration": 1429,
														"isOffset": false,
														"isSlot": false,
														"src": "7858:1:10",
														"valueSize": 1
													},
													{
														"declaration": 1429,
														"isOffset": false,
														"isSlot": false,
														"src": "7916:1:10",
														"valueSize": 1
													},
													{
														"declaration": 1429,
														"isOffset": false,
														"isSlot": false,
														"src": "7928:1:10",
														"valueSize": 1
													}
												],
												"id": 1489,
												"nodeType": "InlineAssembly",
												"src": "7780:160:10"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "7958:151:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7972:24:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7981:3:10",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "7990:1:10"
																			},
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "7993:1:10"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "7986:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7986:9:10"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7977:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7977:19:10"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "7972:1:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8009:20:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8022:3:10",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "8027:1:10"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "8018:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8018:11:10"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "8013:1:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8042:30:10",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nodeType": "YulIdentifier",
																		"src": "8054:5:10"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8065:2:10",
																				"type": "",
																				"value": "51"
																			},
																			{
																				"name": "f",
																				"nodeType": "YulIdentifier",
																				"src": "8069:1:10"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "8061:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8061:10:10"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "8051:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8051:21:10"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nodeType": "YulIdentifier",
																	"src": "8042:5:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8085:14:10",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "8094:1:10"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "8097:1:10"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "8090:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8090:9:10"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "8085:1:10"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 1467,
														"isOffset": false,
														"isSlot": false,
														"src": "8042:5:10",
														"valueSize": 1
													},
													{
														"declaration": 1467,
														"isOffset": false,
														"isSlot": false,
														"src": "8054:5:10",
														"valueSize": 1
													},
													{
														"declaration": 1429,
														"isOffset": false,
														"isSlot": false,
														"src": "7972:1:10",
														"valueSize": 1
													},
													{
														"declaration": 1429,
														"isOffset": false,
														"isSlot": false,
														"src": "7990:1:10",
														"valueSize": 1
													},
													{
														"declaration": 1429,
														"isOffset": false,
														"isSlot": false,
														"src": "7993:1:10",
														"valueSize": 1
													},
													{
														"declaration": 1429,
														"isOffset": false,
														"isSlot": false,
														"src": "8027:1:10",
														"valueSize": 1
													},
													{
														"declaration": 1429,
														"isOffset": false,
														"isSlot": false,
														"src": "8085:1:10",
														"valueSize": 1
													},
													{
														"declaration": 1429,
														"isOffset": false,
														"isSlot": false,
														"src": "8097:1:10",
														"valueSize": 1
													}
												],
												"id": 1490,
												"nodeType": "InlineAssembly",
												"src": "7949:160:10"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "8127:124:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8141:24:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8150:3:10",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "8159:1:10"
																			},
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "8162:1:10"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "8155:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8155:9:10"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "8146:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8146:19:10"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "8141:1:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8178:20:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8191:3:10",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "8196:1:10"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "8187:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8187:11:10"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "8182:1:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8211:30:10",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nodeType": "YulIdentifier",
																		"src": "8223:5:10"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8234:2:10",
																				"type": "",
																				"value": "50"
																			},
																			{
																				"name": "f",
																				"nodeType": "YulIdentifier",
																				"src": "8238:1:10"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "8230:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8230:10:10"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "8220:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8220:21:10"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nodeType": "YulIdentifier",
																	"src": "8211:5:10"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 1467,
														"isOffset": false,
														"isSlot": false,
														"src": "8211:5:10",
														"valueSize": 1
													},
													{
														"declaration": 1467,
														"isOffset": false,
														"isSlot": false,
														"src": "8223:5:10",
														"valueSize": 1
													},
													{
														"declaration": 1429,
														"isOffset": false,
														"isSlot": false,
														"src": "8141:1:10",
														"valueSize": 1
													},
													{
														"declaration": 1429,
														"isOffset": false,
														"isSlot": false,
														"src": "8159:1:10",
														"valueSize": 1
													},
													{
														"declaration": 1429,
														"isOffset": false,
														"isSlot": false,
														"src": "8162:1:10",
														"valueSize": 1
													},
													{
														"declaration": 1429,
														"isOffset": false,
														"isSlot": false,
														"src": "8196:1:10",
														"valueSize": 1
													}
												],
												"id": 1491,
												"nodeType": "InlineAssembly",
												"src": "8118:133:10"
											},
											{
												"assignments": [
													1493
												],
												"declarations": [
													{
														"constant": false,
														"id": 1493,
														"mutability": "mutable",
														"name": "log_sqrt10001",
														"nodeType": "VariableDeclaration",
														"scope": 1538,
														"src": "8261:20:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 1492,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "8261:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1497,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 1496,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1494,
														"name": "log_2",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1467,
														"src": "8284:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"hexValue": "323535373338393538393939363033383236333437313431",
														"id": 1495,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8292:24:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_255738958999603826347141_by_1",
															"typeString": "int_const 255738958999603826347141"
														},
														"value": "255738958999603826347141"
													},
													"src": "8284:32:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8261:55:10"
											},
											{
												"assignments": [
													1499
												],
												"declarations": [
													{
														"constant": false,
														"id": 1499,
														"mutability": "mutable",
														"name": "tickLow",
														"nodeType": "VariableDeclaration",
														"scope": 1538,
														"src": "8345:13:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														},
														"typeName": {
															"id": 1498,
															"name": "int24",
															"nodeType": "ElementaryTypeName",
															"src": "8345:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1509,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 1507,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 1504,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1502,
																			"name": "log_sqrt10001",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1493,
																			"src": "8368:13:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "33343032393932393536383039313332343138353936313430313030363630323437323130",
																			"id": 1503,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8384:37:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3402992956809132418596140100660247210_by_1",
																				"typeString": "int_const 3402...(29 digits omitted)...7210"
																			},
																			"value": "3402992956809132418596140100660247210"
																		},
																		"src": "8368:53:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"id": 1505,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "8367:55:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 1506,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8426:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "8367:62:10",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														],
														"id": 1501,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "8361:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_int24_$",
															"typeString": "type(int24)"
														},
														"typeName": {
															"id": 1500,
															"name": "int24",
															"nodeType": "ElementaryTypeName",
															"src": "8361:5:10",
															"typeDescriptions": {}
														}
													},
													"id": 1508,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8361:69:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8345:85:10"
											},
											{
												"assignments": [
													1511
												],
												"declarations": [
													{
														"constant": false,
														"id": 1511,
														"mutability": "mutable",
														"name": "tickHi",
														"nodeType": "VariableDeclaration",
														"scope": 1538,
														"src": "8440:12:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														},
														"typeName": {
															"id": 1510,
															"name": "int24",
															"nodeType": "ElementaryTypeName",
															"src": "8440:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1521,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 1519,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 1516,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1514,
																			"name": "log_sqrt10001",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1493,
																			"src": "8462:13:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"hexValue": "323931333339343634373731393839363232393037303237363231313533333938303838343935",
																			"id": 1515,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8478:39:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_291339464771989622907027621153398088495_by_1",
																				"typeString": "int_const 2913...(31 digits omitted)...8495"
																			},
																			"value": "291339464771989622907027621153398088495"
																		},
																		"src": "8462:55:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"id": 1517,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "8461:57:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 1518,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8522:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "8461:64:10",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														],
														"id": 1513,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "8455:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_int24_$",
															"typeString": "type(int24)"
														},
														"typeName": {
															"id": 1512,
															"name": "int24",
															"nodeType": "ElementaryTypeName",
															"src": "8455:5:10",
															"typeDescriptions": {}
														}
													},
													"id": 1520,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8455:71:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8440:86:10"
											},
											{
												"expression": {
													"id": 1536,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1522,
														"name": "tick",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1406,
														"src": "8537:4:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"condition": {
															"commonType": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															},
															"id": 1525,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1523,
																"name": "tickLow",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1499,
																"src": "8544:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 1524,
																"name": "tickHi",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1511,
																"src": "8555:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																}
															},
															"src": "8544:17:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseExpression": {
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																},
																"id": 1531,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 1528,
																			"name": "tickHi",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1511,
																			"src": "8593:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int24",
																				"typeString": "int24"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_int24",
																				"typeString": "int24"
																			}
																		],
																		"id": 1527,
																		"name": "getSqrtRatioAtTick",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1400,
																		"src": "8574:18:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_int24_$returns$_t_uint160_$",
																			"typeString": "function (int24) pure returns (uint160)"
																		}
																	},
																	"id": 1529,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8574:26:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"id": 1530,
																	"name": "sqrtPriceX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1403,
																	"src": "8604:12:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																"src": "8574:42:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseExpression": {
																"id": 1533,
																"name": "tickLow",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1499,
																"src": "8628:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																}
															},
															"id": 1534,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "Conditional",
															"src": "8574:61:10",
															"trueExpression": {
																"id": 1532,
																"name": "tickHi",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1511,
																"src": "8619:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														},
														"id": 1535,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "Conditional",
														"src": "8544:91:10",
														"trueExpression": {
															"id": 1526,
															"name": "tickLow",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1499,
															"src": "8564:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"src": "8537:98:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"id": 1537,
												"nodeType": "ExpressionStatement",
												"src": "8537:98:10"
											}
										]
									},
									"documentation": {
										"id": 1401,
										"nodeType": "StructuredDocumentation",
										"src": "3948:408:10",
										"text": "@notice Calculates the greatest tick value such that getRatioAtTick(tick) <= ratio\n @dev Throws in case sqrtPriceX96 < MIN_SQRT_RATIO, as MIN_SQRT_RATIO is the lowest value getRatioAtTick may\n ever return.\n @param sqrtPriceX96 The sqrt ratio for which to compute the tick as a Q64.96\n @return tick The greatest tick for which the ratio is less than or equal to the input ratio"
									},
									"id": 1539,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTickAtSqrtRatio",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1404,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1403,
												"mutability": "mutable",
												"name": "sqrtPriceX96",
												"nodeType": "VariableDeclaration",
												"scope": 1539,
												"src": "4389:20:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 1402,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "4389:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4388:22:10"
									},
									"returnParameters": {
										"id": 1407,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1406,
												"mutability": "mutable",
												"name": "tick",
												"nodeType": "VariableDeclaration",
												"scope": 1539,
												"src": "4434:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1405,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "4434:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4433:12:10"
									},
									"scope": 1540,
									"src": "4361:4281:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1541,
							"src": "313:8331:10"
						}
					],
					"src": "45:8600:10"
				},
				"id": 10
			},
			"contracts/PriceAggregator.sol": {
				"ast": {
					"absolutePath": "contracts/PriceAggregator.sol",
					"exportedSymbols": {
						"FullMath": [
							1005
						],
						"IERC20": [
							1770
						],
						"IPriceAggregator": [
							1801
						],
						"IUniswapV2Router01": [
							307
						],
						"IUniswapV3Factory": [
							390
						],
						"IUniswapV3Pool": [
							412
						],
						"IUniswapV3PoolActions": [
							508
						],
						"IUniswapV3PoolDerivedState": [
							539
						],
						"IUniswapV3PoolEvents": [
							658
						],
						"IUniswapV3PoolImmutables": [
							698
						],
						"IUniswapV3PoolOwnerActions": [
							724
						],
						"IUniswapV3PoolState": [
							832
						],
						"OracleLibrary": [
							1989
						],
						"PriceAggregator": [
							1678
						],
						"TickMath": [
							1540
						],
						"UniswapV2": [
							2052
						],
						"UniswapV3": [
							2176
						]
					},
					"id": 1679,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1542,
							"literals": [
								"solidity",
								"0.7",
								".6"
							],
							"nodeType": "PragmaDirective",
							"src": "32:22:11"
						},
						{
							"id": 1543,
							"literals": [
								"abicoder",
								"v2"
							],
							"nodeType": "PragmaDirective",
							"src": "55:19:11"
						},
						{
							"absolutePath": "@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol",
							"file": "@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol",
							"id": 1544,
							"nodeType": "ImportDirective",
							"scope": 1679,
							"sourceUnit": 308,
							"src": "76:75:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol",
							"file": "@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol",
							"id": 1545,
							"nodeType": "ImportDirective",
							"scope": 1679,
							"sourceUnit": 391,
							"src": "152:69:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol",
							"file": "@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol",
							"id": 1546,
							"nodeType": "ImportDirective",
							"scope": 1679,
							"sourceUnit": 413,
							"src": "222:66:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/interfaces/IPriceAggregator.sol",
							"file": "./interfaces/IPriceAggregator.sol",
							"id": 1547,
							"nodeType": "ImportDirective",
							"scope": 1679,
							"sourceUnit": 1802,
							"src": "289:43:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/interfaces/IERC20.sol",
							"file": "./interfaces/IERC20.sol",
							"id": 1548,
							"nodeType": "ImportDirective",
							"scope": 1679,
							"sourceUnit": 1771,
							"src": "333:33:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/libraries/UniswapV2.sol",
							"file": "./libraries/UniswapV2.sol",
							"id": 1549,
							"nodeType": "ImportDirective",
							"scope": 1679,
							"sourceUnit": 2053,
							"src": "367:35:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/libraries/UniswapV3.sol",
							"file": "./libraries/UniswapV3.sol",
							"id": 1550,
							"nodeType": "ImportDirective",
							"scope": 1679,
							"sourceUnit": 2177,
							"src": "403:35:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1551,
										"name": "IPriceAggregator",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1801,
										"src": "469:16:11",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IPriceAggregator_$1801",
											"typeString": "contract IPriceAggregator"
										}
									},
									"id": 1552,
									"nodeType": "InheritanceSpecifier",
									"src": "469:16:11"
								}
							],
							"contractDependencies": [
								1801
							],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1678,
							"linearizedBaseContracts": [
								1678,
								1801
							],
							"name": "PriceAggregator",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										1800
									],
									"body": {
										"id": 1676,
										"nodeType": "Block",
										"src": "582:614:11",
										"statements": [
											{
												"assignments": [
													1565
												],
												"declarations": [
													{
														"constant": false,
														"id": 1565,
														"mutability": "mutable",
														"name": "outputs",
														"nodeType": "VariableDeclaration",
														"scope": 1676,
														"src": "592:23:11",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_output_$1791_memory_ptr_$dyn_memory_ptr",
															"typeString": "struct IPriceAggregator.output[]"
														},
														"typeName": {
															"baseType": {
																"id": 1563,
																"name": "output",
																"nodeType": "UserDefinedTypeName",
																"referencedDeclaration": 1791,
																"src": "592:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_output_$1791_storage_ptr",
																	"typeString": "struct IPriceAggregator.output"
																}
															},
															"id": 1564,
															"nodeType": "ArrayTypeName",
															"src": "592:8:11",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_output_$1791_storage_$dyn_storage_ptr",
																"typeString": "struct IPriceAggregator.output[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1572,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1569,
																"name": "inputs",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1555,
																"src": "631:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_input_$1782_memory_ptr_$dyn_memory_ptr",
																	"typeString": "struct IPriceAggregator.input memory[] memory"
																}
															},
															"id": 1570,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "631:13:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1568,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "618:12:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_output_$1791_memory_ptr_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (struct IPriceAggregator.output memory[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 1566,
																"name": "output",
																"nodeType": "UserDefinedTypeName",
																"referencedDeclaration": 1791,
																"src": "622:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_output_$1791_storage_ptr",
																	"typeString": "struct IPriceAggregator.output"
																}
															},
															"id": 1567,
															"nodeType": "ArrayTypeName",
															"src": "622:8:11",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_output_$1791_storage_$dyn_storage_ptr",
																"typeString": "struct IPriceAggregator.output[]"
															}
														}
													},
													"id": 1571,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "618:27:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_output_$1791_memory_ptr_$dyn_memory_ptr",
														"typeString": "struct IPriceAggregator.output memory[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "592:53:11"
											},
											{
												"body": {
													"id": 1672,
													"nodeType": "Block",
													"src": "688:474:11",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																},
																"id": 1589,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"baseExpression": {
																			"id": 1584,
																			"name": "inputs",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1555,
																			"src": "702:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_struct$_input_$1782_memory_ptr_$dyn_memory_ptr",
																				"typeString": "struct IPriceAggregator.input memory[] memory"
																			}
																		},
																		"id": 1586,
																		"indexExpression": {
																			"id": 1585,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1574,
																			"src": "709:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "702:9:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_input_$1782_memory_ptr",
																			"typeString": "struct IPriceAggregator.input memory"
																		}
																	},
																	"id": 1587,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "providerVersion",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1781,
																	"src": "702:25:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 1588,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "731:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "702:30:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	},
																	"id": 1631,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 1626,
																				"name": "inputs",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1555,
																				"src": "924:6:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_struct$_input_$1782_memory_ptr_$dyn_memory_ptr",
																					"typeString": "struct IPriceAggregator.input memory[] memory"
																				}
																			},
																			"id": 1628,
																			"indexExpression": {
																				"id": 1627,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1574,
																				"src": "931:1:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "924:9:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_input_$1782_memory_ptr",
																				"typeString": "struct IPriceAggregator.input memory"
																			}
																		},
																		"id": 1629,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "providerVersion",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1781,
																		"src": "924:25:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "33",
																		"id": 1630,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "953:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_3_by_1",
																			"typeString": "int_const 3"
																		},
																		"value": "3"
																	},
																	"src": "924:30:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"id": 1670,
																"nodeType": "IfStatement",
																"src": "920:233:11",
																"trueBody": {
																	"id": 1669,
																	"nodeType": "Block",
																	"src": "956:197:11",
																	"statements": [
																		{
																			"assignments": [
																				1633,
																				1635
																			],
																			"declarations": [
																				{
																					"constant": false,
																					"id": 1633,
																					"mutability": "mutable",
																					"name": "price",
																					"nodeType": "VariableDeclaration",
																					"scope": 1669,
																					"src": "971:13:11",
																					"stateVariable": false,
																					"storageLocation": "default",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"typeName": {
																						"id": 1632,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "971:7:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"visibility": "internal"
																				},
																				{
																					"constant": false,
																					"id": 1635,
																					"mutability": "mutable",
																					"name": "fee",
																					"nodeType": "VariableDeclaration",
																					"scope": 1669,
																					"src": "985:10:11",
																					"stateVariable": false,
																					"storageLocation": "default",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint24",
																						"typeString": "uint24"
																					},
																					"typeName": {
																						"id": 1634,
																						"name": "uint24",
																						"nodeType": "ElementaryTypeName",
																						"src": "985:6:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint24",
																							"typeString": "uint24"
																						}
																					},
																					"visibility": "internal"
																				}
																			],
																			"id": 1651,
																			"initialValue": {
																				"arguments": [
																					{
																						"expression": {
																							"baseExpression": {
																								"id": 1638,
																								"name": "inputs",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1555,
																								"src": "1015:6:11",
																								"typeDescriptions": {
																									"typeIdentifier": "t_array$_t_struct$_input_$1782_memory_ptr_$dyn_memory_ptr",
																									"typeString": "struct IPriceAggregator.input memory[] memory"
																								}
																							},
																							"id": 1640,
																							"indexExpression": {
																								"id": 1639,
																								"name": "i",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1574,
																								"src": "1022:1:11",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "1015:9:11",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_input_$1782_memory_ptr",
																								"typeString": "struct IPriceAggregator.input memory"
																							}
																						},
																						"id": 1641,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "provider",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1779,
																						"src": "1015:18:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"expression": {
																							"baseExpression": {
																								"id": 1642,
																								"name": "inputs",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1555,
																								"src": "1034:6:11",
																								"typeDescriptions": {
																									"typeIdentifier": "t_array$_t_struct$_input_$1782_memory_ptr_$dyn_memory_ptr",
																									"typeString": "struct IPriceAggregator.input memory[] memory"
																								}
																							},
																							"id": 1644,
																							"indexExpression": {
																								"id": 1643,
																								"name": "i",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1574,
																								"src": "1041:1:11",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "1034:9:11",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_input_$1782_memory_ptr",
																								"typeString": "struct IPriceAggregator.input memory"
																							}
																						},
																						"id": 1645,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "t1",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1775,
																						"src": "1034:12:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"expression": {
																							"baseExpression": {
																								"id": 1646,
																								"name": "inputs",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1555,
																								"src": "1047:6:11",
																								"typeDescriptions": {
																									"typeIdentifier": "t_array$_t_struct$_input_$1782_memory_ptr_$dyn_memory_ptr",
																									"typeString": "struct IPriceAggregator.input memory[] memory"
																								}
																							},
																							"id": 1648,
																							"indexExpression": {
																								"id": 1647,
																								"name": "i",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1574,
																								"src": "1054:1:11",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "1047:9:11",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_input_$1782_memory_ptr",
																								"typeString": "struct IPriceAggregator.input memory"
																							}
																						},
																						"id": 1649,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "t2",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1777,
																						"src": "1047:12:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						},
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						},
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					],
																					"expression": {
																						"id": 1636,
																						"name": "UniswapV3",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2176,
																						"src": "999:9:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_contract$_UniswapV3_$2176_$",
																							"typeString": "type(library UniswapV3)"
																						}
																					},
																					"id": 1637,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "Price",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2175,
																					"src": "999:15:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_delegatecall_view$_t_address_$_t_address_$_t_address_$returns$_t_uint256_$_t_uint24_$",
																						"typeString": "function (address,address,address) view returns (uint256,uint24)"
																					}
																				},
																				"id": 1650,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "999:61:11",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$_t_uint256_$_t_uint24_$",
																					"typeString": "tuple(uint256,uint24)"
																				}
																			},
																			"nodeType": "VariableDeclarationStatement",
																			"src": "970:90:11"
																		},
																		{
																			"expression": {
																				"id": 1667,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftHandSide": {
																					"baseExpression": {
																						"id": 1652,
																						"name": "outputs",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1565,
																						"src": "1074:7:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_struct$_output_$1791_memory_ptr_$dyn_memory_ptr",
																							"typeString": "struct IPriceAggregator.output memory[] memory"
																						}
																					},
																					"id": 1654,
																					"indexExpression": {
																						"id": 1653,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1574,
																						"src": "1082:1:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": true,
																					"nodeType": "IndexAccess",
																					"src": "1074:10:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_output_$1791_memory_ptr",
																						"typeString": "struct IPriceAggregator.output memory"
																					}
																				},
																				"nodeType": "Assignment",
																				"operator": "=",
																				"rightHandSide": {
																					"arguments": [
																						{
																							"expression": {
																								"baseExpression": {
																									"id": 1656,
																									"name": "inputs",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1555,
																									"src": "1094:6:11",
																									"typeDescriptions": {
																										"typeIdentifier": "t_array$_t_struct$_input_$1782_memory_ptr_$dyn_memory_ptr",
																										"typeString": "struct IPriceAggregator.input memory[] memory"
																									}
																								},
																								"id": 1658,
																								"indexExpression": {
																									"id": 1657,
																									"name": "i",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1574,
																									"src": "1101:1:11",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "IndexAccess",
																								"src": "1094:9:11",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_input_$1782_memory_ptr",
																									"typeString": "struct IPriceAggregator.input memory"
																								}
																							},
																							"id": 1659,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "t1",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1775,
																							"src": "1094:12:11",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						{
																							"expression": {
																								"baseExpression": {
																									"id": 1660,
																									"name": "inputs",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1555,
																									"src": "1107:6:11",
																									"typeDescriptions": {
																										"typeIdentifier": "t_array$_t_struct$_input_$1782_memory_ptr_$dyn_memory_ptr",
																										"typeString": "struct IPriceAggregator.input memory[] memory"
																									}
																								},
																								"id": 1662,
																								"indexExpression": {
																									"id": 1661,
																									"name": "i",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1574,
																									"src": "1114:1:11",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "IndexAccess",
																								"src": "1107:9:11",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_input_$1782_memory_ptr",
																									"typeString": "struct IPriceAggregator.input memory"
																								}
																							},
																							"id": 1663,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "t2",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1777,
																							"src": "1107:12:11",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						{
																							"id": 1664,
																							"name": "price",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1633,
																							"src": "1120:5:11",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						{
																							"id": 1665,
																							"name": "fee",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1635,
																							"src": "1126:3:11",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint24",
																								"typeString": "uint24"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							},
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							},
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							{
																								"typeIdentifier": "t_uint24",
																								"typeString": "uint24"
																							}
																						],
																						"id": 1655,
																						"name": "output",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1791,
																						"src": "1087:6:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_struct$_output_$1791_storage_ptr_$",
																							"typeString": "type(struct IPriceAggregator.output storage pointer)"
																						}
																					},
																					"id": 1666,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "structConstructorCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "1087:43:11",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_output_$1791_memory_ptr",
																						"typeString": "struct IPriceAggregator.output memory"
																					}
																				},
																				"src": "1074:56:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_output_$1791_memory_ptr",
																					"typeString": "struct IPriceAggregator.output memory"
																				}
																			},
																			"id": 1668,
																			"nodeType": "ExpressionStatement",
																			"src": "1074:56:11"
																		}
																	]
																}
															},
															"id": 1671,
															"nodeType": "IfStatement",
															"src": "698:455:11",
															"trueBody": {
																"id": 1625,
																"nodeType": "Block",
																"src": "734:180:11",
																"statements": [
																	{
																		"assignments": [
																			1591
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1591,
																				"mutability": "mutable",
																				"name": "price",
																				"nodeType": "VariableDeclaration",
																				"scope": 1625,
																				"src": "748:13:11",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 1590,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "748:7:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 1607,
																		"initialValue": {
																			"arguments": [
																				{
																					"expression": {
																						"baseExpression": {
																							"id": 1594,
																							"name": "inputs",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1555,
																							"src": "780:6:11",
																							"typeDescriptions": {
																								"typeIdentifier": "t_array$_t_struct$_input_$1782_memory_ptr_$dyn_memory_ptr",
																								"typeString": "struct IPriceAggregator.input memory[] memory"
																							}
																						},
																						"id": 1596,
																						"indexExpression": {
																							"id": 1595,
																							"name": "i",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1574,
																							"src": "787:1:11",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "780:9:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_input_$1782_memory_ptr",
																							"typeString": "struct IPriceAggregator.input memory"
																						}
																					},
																					"id": 1597,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "provider",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1779,
																					"src": "780:18:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"expression": {
																						"baseExpression": {
																							"id": 1598,
																							"name": "inputs",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1555,
																							"src": "799:6:11",
																							"typeDescriptions": {
																								"typeIdentifier": "t_array$_t_struct$_input_$1782_memory_ptr_$dyn_memory_ptr",
																								"typeString": "struct IPriceAggregator.input memory[] memory"
																							}
																						},
																						"id": 1600,
																						"indexExpression": {
																							"id": 1599,
																							"name": "i",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1574,
																							"src": "806:1:11",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "799:9:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_input_$1782_memory_ptr",
																							"typeString": "struct IPriceAggregator.input memory"
																						}
																					},
																					"id": 1601,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "t1",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1775,
																					"src": "799:12:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"expression": {
																						"baseExpression": {
																							"id": 1602,
																							"name": "inputs",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1555,
																							"src": "812:6:11",
																							"typeDescriptions": {
																								"typeIdentifier": "t_array$_t_struct$_input_$1782_memory_ptr_$dyn_memory_ptr",
																								"typeString": "struct IPriceAggregator.input memory[] memory"
																							}
																						},
																						"id": 1604,
																						"indexExpression": {
																							"id": 1603,
																							"name": "i",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1574,
																							"src": "819:1:11",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "812:9:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_input_$1782_memory_ptr",
																							"typeString": "struct IPriceAggregator.input memory"
																						}
																					},
																					"id": 1605,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "t2",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1777,
																					"src": "812:12:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"id": 1592,
																					"name": "UniswapV2",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2052,
																					"src": "764:9:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_UniswapV2_$2052_$",
																						"typeString": "type(library UniswapV2)"
																					}
																				},
																				"id": 1593,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "Price",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2051,
																				"src": "764:15:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_delegatecall_view$_t_address_$_t_address_$_t_address_$returns$_t_uint256_$",
																					"typeString": "function (address,address,address) view returns (uint256)"
																				}
																			},
																			"id": 1606,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "764:61:11",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "748:77:11"
																	},
																	{
																		"expression": {
																			"id": 1623,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"id": 1608,
																					"name": "outputs",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1565,
																					"src": "839:7:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_struct$_output_$1791_memory_ptr_$dyn_memory_ptr",
																						"typeString": "struct IPriceAggregator.output memory[] memory"
																					}
																				},
																				"id": 1610,
																				"indexExpression": {
																					"id": 1609,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1574,
																					"src": "847:1:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "839:10:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_output_$1791_memory_ptr",
																					"typeString": "struct IPriceAggregator.output memory"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"arguments": [
																					{
																						"expression": {
																							"baseExpression": {
																								"id": 1612,
																								"name": "inputs",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1555,
																								"src": "859:6:11",
																								"typeDescriptions": {
																									"typeIdentifier": "t_array$_t_struct$_input_$1782_memory_ptr_$dyn_memory_ptr",
																									"typeString": "struct IPriceAggregator.input memory[] memory"
																								}
																							},
																							"id": 1614,
																							"indexExpression": {
																								"id": 1613,
																								"name": "i",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1574,
																								"src": "866:1:11",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "859:9:11",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_input_$1782_memory_ptr",
																								"typeString": "struct IPriceAggregator.input memory"
																							}
																						},
																						"id": 1615,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "t1",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1775,
																						"src": "859:12:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"expression": {
																							"baseExpression": {
																								"id": 1616,
																								"name": "inputs",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1555,
																								"src": "872:6:11",
																								"typeDescriptions": {
																									"typeIdentifier": "t_array$_t_struct$_input_$1782_memory_ptr_$dyn_memory_ptr",
																									"typeString": "struct IPriceAggregator.input memory[] memory"
																								}
																							},
																							"id": 1618,
																							"indexExpression": {
																								"id": 1617,
																								"name": "i",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1574,
																								"src": "879:1:11",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "872:9:11",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_input_$1782_memory_ptr",
																								"typeString": "struct IPriceAggregator.input memory"
																							}
																						},
																						"id": 1619,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "t2",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1777,
																						"src": "872:12:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"id": 1620,
																						"name": "price",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1591,
																						"src": "885:5:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					{
																						"hexValue": "30",
																						"id": 1621,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "891:1:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						},
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						},
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						{
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						}
																					],
																					"id": 1611,
																					"name": "output",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1791,
																					"src": "852:6:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_struct$_output_$1791_storage_ptr_$",
																						"typeString": "type(struct IPriceAggregator.output storage pointer)"
																					}
																				},
																				"id": 1622,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "structConstructorCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "852:41:11",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_output_$1791_memory_ptr",
																					"typeString": "struct IPriceAggregator.output memory"
																				}
																			},
																			"src": "839:54:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_output_$1791_memory_ptr",
																				"typeString": "struct IPriceAggregator.output memory"
																			}
																		},
																		"id": 1624,
																		"nodeType": "ExpressionStatement",
																		"src": "839:54:11"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1580,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1577,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1574,
														"src": "668:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1578,
															"name": "inputs",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1555,
															"src": "670:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_input_$1782_memory_ptr_$dyn_memory_ptr",
																"typeString": "struct IPriceAggregator.input memory[] memory"
															}
														},
														"id": 1579,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "670:13:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "668:15:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1673,
												"initializationExpression": {
													"assignments": [
														1574
													],
													"declarations": [
														{
															"constant": false,
															"id": 1574,
															"mutability": "mutable",
															"name": "i",
															"nodeType": "VariableDeclaration",
															"scope": 1673,
															"src": "659:6:11",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1573,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "659:4:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1576,
													"initialValue": {
														"hexValue": "30",
														"id": 1575,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "666:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "659:8:11"
												},
												"loopExpression": {
													"expression": {
														"id": 1582,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "684:3:11",
														"subExpression": {
															"id": 1581,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1574,
															"src": "684:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1583,
													"nodeType": "ExpressionStatement",
													"src": "684:3:11"
												},
												"nodeType": "ForStatement",
												"src": "654:508:11"
											},
											{
												"expression": {
													"id": 1674,
													"name": "outputs",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1565,
													"src": "1182:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_output_$1791_memory_ptr_$dyn_memory_ptr",
														"typeString": "struct IPriceAggregator.output memory[] memory"
													}
												},
												"functionReturnParameters": 1561,
												"id": 1675,
												"nodeType": "Return",
												"src": "1175:14:11"
											}
										]
									},
									"functionSelector": "ff514fa3",
									"id": 1677,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getPrices",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1557,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "542:8:11"
									},
									"parameters": {
										"id": 1556,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1555,
												"mutability": "mutable",
												"name": "inputs",
												"nodeType": "VariableDeclaration",
												"scope": 1677,
												"src": "512:21:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_input_$1782_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct IPriceAggregator.input[]"
												},
												"typeName": {
													"baseType": {
														"id": 1553,
														"name": "input",
														"nodeType": "UserDefinedTypeName",
														"referencedDeclaration": 1782,
														"src": "512:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_input_$1782_storage_ptr",
															"typeString": "struct IPriceAggregator.input"
														}
													},
													"id": 1554,
													"nodeType": "ArrayTypeName",
													"src": "512:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_input_$1782_storage_$dyn_storage_ptr",
														"typeString": "struct IPriceAggregator.input[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "511:23:11"
									},
									"returnParameters": {
										"id": 1561,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1560,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1677,
												"src": "565:15:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_output_$1791_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct IPriceAggregator.output[]"
												},
												"typeName": {
													"baseType": {
														"id": 1558,
														"name": "output",
														"nodeType": "UserDefinedTypeName",
														"referencedDeclaration": 1791,
														"src": "565:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_output_$1791_storage_ptr",
															"typeString": "struct IPriceAggregator.output"
														}
													},
													"id": 1559,
													"nodeType": "ArrayTypeName",
													"src": "565:8:11",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_output_$1791_storage_$dyn_storage_ptr",
														"typeString": "struct IPriceAggregator.output[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "564:17:11"
									},
									"scope": 1678,
									"src": "493:703:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1679,
							"src": "441:759:11"
						}
					],
					"src": "32:1168:11"
				},
				"id": 11
			},
			"contracts/interfaces/IERC20.sol": {
				"ast": {
					"absolutePath": "contracts/interfaces/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							1770
						]
					},
					"id": 1771,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1680,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".6"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:12"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1770,
							"linearizedBaseContracts": [
								1770
							],
							"name": "IERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"id": 1688,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1687,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1682,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 1688,
												"src": "96:21:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1681,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "96:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1684,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 1688,
												"src": "119:23:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1683,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "119:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1686,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1688,
												"src": "144:10:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1685,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "144:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "95:60:12"
									},
									"src": "81:75:12"
								},
								{
									"anonymous": false,
									"id": 1696,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1695,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1690,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 1696,
												"src": "176:20:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1689,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "176:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1692,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1696,
												"src": "198:18:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1691,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "198:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1694,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1696,
												"src": "218:10:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1693,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "218:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "175:54:12"
									},
									"src": "161:69:12"
								},
								{
									"functionSelector": "06fdde03",
									"id": 1701,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1697,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "249:2:12"
									},
									"returnParameters": {
										"id": 1700,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1699,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1701,
												"src": "275:13:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1698,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "275:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "274:15:12"
									},
									"scope": 1770,
									"src": "236:54:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "95d89b41",
									"id": 1706,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1702,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "310:2:12"
									},
									"returnParameters": {
										"id": 1705,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1704,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1706,
												"src": "336:13:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1703,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "336:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "335:15:12"
									},
									"scope": 1770,
									"src": "295:56:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "313ce567",
									"id": 1711,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1707,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "373:2:12"
									},
									"returnParameters": {
										"id": 1710,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1709,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1711,
												"src": "399:5:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1708,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "399:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "398:7:12"
									},
									"scope": 1770,
									"src": "356:50:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "18160ddd",
									"id": 1716,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1712,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "431:2:12"
									},
									"returnParameters": {
										"id": 1715,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1714,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1716,
												"src": "457:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1713,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "457:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "456:6:12"
									},
									"scope": 1770,
									"src": "411:52:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "70a08231",
									"id": 1723,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1719,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1718,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 1723,
												"src": "487:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1717,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "487:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "486:15:12"
									},
									"returnParameters": {
										"id": 1722,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1721,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1723,
												"src": "525:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1720,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "525:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "524:6:12"
									},
									"scope": 1770,
									"src": "468:63:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "dd62ed3e",
									"id": 1732,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1728,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1725,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 1732,
												"src": "555:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1724,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "555:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1727,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 1732,
												"src": "570:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1726,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "570:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "554:32:12"
									},
									"returnParameters": {
										"id": 1731,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1730,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1732,
												"src": "610:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1729,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "610:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "609:6:12"
									},
									"scope": 1770,
									"src": "536:80:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "095ea7b3",
									"id": 1741,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1737,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1734,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 1741,
												"src": "639:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1733,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "639:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1736,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1741,
												"src": "656:10:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1735,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "656:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "638:29:12"
									},
									"returnParameters": {
										"id": 1740,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1739,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1741,
												"src": "686:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1738,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "686:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "685:6:12"
									},
									"scope": 1770,
									"src": "622:70:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a9059cbb",
									"id": 1750,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1746,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1743,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1750,
												"src": "715:10:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1742,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "715:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1745,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1750,
												"src": "727:10:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1744,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "727:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "714:24:12"
									},
									"returnParameters": {
										"id": 1749,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1748,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1750,
												"src": "757:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1747,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "757:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "756:6:12"
									},
									"scope": 1770,
									"src": "697:66:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "23b872dd",
									"id": 1761,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1757,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1752,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 1761,
												"src": "790:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1751,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "790:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1754,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1761,
												"src": "804:10:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1753,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "804:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1756,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1761,
												"src": "816:10:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1755,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "816:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "789:38:12"
									},
									"returnParameters": {
										"id": 1760,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1759,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1761,
												"src": "846:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1758,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "846:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "845:6:12"
									},
									"scope": 1770,
									"src": "768:84:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "d0e30db0",
									"id": 1764,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "deposit",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1762,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "873:2:12"
									},
									"returnParameters": {
										"id": 1763,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:0:12"
									},
									"scope": 1770,
									"src": "857:36:12",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "2e1a7d4d",
									"id": 1769,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1767,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1766,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1769,
												"src": "916:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1765,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "916:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "915:6:12"
									},
									"returnParameters": {
										"id": 1768,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "930:0:12"
									},
									"scope": 1770,
									"src": "898:33:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1771,
							"src": "58:875:12"
						}
					],
					"src": "32:901:12"
				},
				"id": 12
			},
			"contracts/interfaces/IPriceAggregator.sol": {
				"ast": {
					"absolutePath": "contracts/interfaces/IPriceAggregator.sol",
					"exportedSymbols": {
						"IPriceAggregator": [
							1801
						]
					},
					"id": 1802,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1772,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".6"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:13"
						},
						{
							"id": 1773,
							"literals": [
								"abicoder",
								"v2"
							],
							"nodeType": "PragmaDirective",
							"src": "57:19:13"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1801,
							"linearizedBaseContracts": [
								1801
							],
							"name": "IPriceAggregator",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "IPriceAggregator.input",
									"id": 1782,
									"members": [
										{
											"constant": false,
											"id": 1775,
											"mutability": "mutable",
											"name": "t1",
											"nodeType": "VariableDeclaration",
											"scope": 1782,
											"src": "137:10:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1774,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "137:7:13",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1777,
											"mutability": "mutable",
											"name": "t2",
											"nodeType": "VariableDeclaration",
											"scope": 1782,
											"src": "157:10:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1776,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "157:7:13",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1779,
											"mutability": "mutable",
											"name": "provider",
											"nodeType": "VariableDeclaration",
											"scope": 1782,
											"src": "177:16:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1778,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "177:7:13",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1781,
											"mutability": "mutable",
											"name": "providerVersion",
											"nodeType": "VariableDeclaration",
											"scope": 1782,
											"src": "203:21:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 1780,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "203:5:13",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "input",
									"nodeType": "StructDefinition",
									"scope": 1801,
									"src": "114:117:13",
									"visibility": "public"
								},
								{
									"canonicalName": "IPriceAggregator.output",
									"id": 1791,
									"members": [
										{
											"constant": false,
											"id": 1784,
											"mutability": "mutable",
											"name": "t1",
											"nodeType": "VariableDeclaration",
											"scope": 1791,
											"src": "261:10:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1783,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "261:7:13",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1786,
											"mutability": "mutable",
											"name": "t2",
											"nodeType": "VariableDeclaration",
											"scope": 1791,
											"src": "281:10:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1785,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "281:7:13",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1788,
											"mutability": "mutable",
											"name": "price",
											"nodeType": "VariableDeclaration",
											"scope": 1791,
											"src": "301:13:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1787,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "301:7:13",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1790,
											"mutability": "mutable",
											"name": "fee",
											"nodeType": "VariableDeclaration",
											"scope": 1791,
											"src": "324:10:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint24",
												"typeString": "uint24"
											},
											"typeName": {
												"id": 1789,
												"name": "uint24",
												"nodeType": "ElementaryTypeName",
												"src": "324:6:13",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "output",
									"nodeType": "StructDefinition",
									"scope": 1801,
									"src": "237:104:13",
									"visibility": "public"
								},
								{
									"functionSelector": "ff514fa3",
									"id": 1800,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getPrices",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1795,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1794,
												"mutability": "mutable",
												"name": "inputs",
												"nodeType": "VariableDeclaration",
												"scope": 1800,
												"src": "367:21:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_input_$1782_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct IPriceAggregator.input[]"
												},
												"typeName": {
													"baseType": {
														"id": 1792,
														"name": "input",
														"nodeType": "UserDefinedTypeName",
														"referencedDeclaration": 1782,
														"src": "367:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_input_$1782_storage_ptr",
															"typeString": "struct IPriceAggregator.input"
														}
													},
													"id": 1793,
													"nodeType": "ArrayTypeName",
													"src": "367:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_input_$1782_storage_$dyn_storage_ptr",
														"typeString": "struct IPriceAggregator.input[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "366:23:13"
									},
									"returnParameters": {
										"id": 1799,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1798,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1800,
												"src": "413:15:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_output_$1791_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct IPriceAggregator.output[]"
												},
												"typeName": {
													"baseType": {
														"id": 1796,
														"name": "output",
														"nodeType": "UserDefinedTypeName",
														"referencedDeclaration": 1791,
														"src": "413:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_output_$1791_storage_ptr",
															"typeString": "struct IPriceAggregator.output"
														}
													},
													"id": 1797,
													"nodeType": "ArrayTypeName",
													"src": "413:8:13",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_output_$1791_storage_$dyn_storage_ptr",
														"typeString": "struct IPriceAggregator.output[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "412:17:13"
									},
									"scope": 1801,
									"src": "348:82:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1802,
							"src": "78:354:13"
						}
					],
					"src": "32:400:13"
				},
				"id": 13
			},
			"contracts/libraries/OracleLibrary.sol": {
				"ast": {
					"absolutePath": "contracts/libraries/OracleLibrary.sol",
					"exportedSymbols": {
						"FullMath": [
							1005
						],
						"IUniswapV3Pool": [
							412
						],
						"IUniswapV3PoolActions": [
							508
						],
						"IUniswapV3PoolDerivedState": [
							539
						],
						"IUniswapV3PoolEvents": [
							658
						],
						"IUniswapV3PoolImmutables": [
							698
						],
						"IUniswapV3PoolOwnerActions": [
							724
						],
						"IUniswapV3PoolState": [
							832
						],
						"OracleLibrary": [
							1989
						],
						"TickMath": [
							1540
						]
					},
					"id": 1990,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1803,
							"literals": [
								"solidity",
								"0.7",
								".6"
							],
							"nodeType": "PragmaDirective",
							"src": "32:22:14"
						},
						{
							"absolutePath": "@uniswap/v3-core/contracts/libraries/FullMath.sol",
							"file": "@uniswap/v3-core/contracts/libraries/FullMath.sol",
							"id": 1804,
							"nodeType": "ImportDirective",
							"scope": 1990,
							"sourceUnit": 1006,
							"src": "56:59:14",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@uniswap/v3-core/contracts/libraries/TickMath.sol",
							"file": "@uniswap/v3-core/contracts/libraries/TickMath.sol",
							"id": 1805,
							"nodeType": "ImportDirective",
							"scope": 1990,
							"sourceUnit": 1541,
							"src": "116:59:14",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol",
							"file": "@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol",
							"id": 1806,
							"nodeType": "ImportDirective",
							"scope": 1990,
							"sourceUnit": 413,
							"src": "176:66:14",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 1989,
							"linearizedBaseContracts": [
								1989
							],
							"name": "OracleLibrary",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1890,
										"nodeType": "Block",
										"src": "383:544:14",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															},
															"id": 1818,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1816,
																"name": "secondsAgo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1810,
																"src": "401:10:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 1817,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "415:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "401:15:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4250",
															"id": 1819,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "418:4:14",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6f8c752f16a50d13ae873620fdefd90c2c58e0d13a068366e5a1b685076b71bb",
																"typeString": "literal_string \"BP\""
															},
															"value": "BP"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6f8c752f16a50d13ae873620fdefd90c2c58e0d13a068366e5a1b685076b71bb",
																"typeString": "literal_string \"BP\""
															}
														],
														"id": 1815,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "393:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1820,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "393:30:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1821,
												"nodeType": "ExpressionStatement",
												"src": "393:30:14"
											},
											{
												"assignments": [
													1826
												],
												"declarations": [
													{
														"constant": false,
														"id": 1826,
														"mutability": "mutable",
														"name": "secondsAgos",
														"nodeType": "VariableDeclaration",
														"scope": 1890,
														"src": "434:27:14",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint32_$dyn_memory_ptr",
															"typeString": "uint32[]"
														},
														"typeName": {
															"baseType": {
																"id": 1824,
																"name": "uint32",
																"nodeType": "ElementaryTypeName",
																"src": "434:6:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															},
															"id": 1825,
															"nodeType": "ArrayTypeName",
															"src": "434:8:14",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint32_$dyn_storage_ptr",
																"typeString": "uint32[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1832,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "32",
															"id": 1830,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "477:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															}
														],
														"id": 1829,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "464:12:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint32_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint32[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 1827,
																"name": "uint32",
																"nodeType": "ElementaryTypeName",
																"src": "468:6:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															},
															"id": 1828,
															"nodeType": "ArrayTypeName",
															"src": "468:8:14",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint32_$dyn_storage_ptr",
																"typeString": "uint32[]"
															}
														}
													},
													"id": 1831,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "464:15:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint32_$dyn_memory_ptr",
														"typeString": "uint32[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "434:45:14"
											},
											{
												"expression": {
													"id": 1837,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1833,
															"name": "secondsAgos",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1826,
															"src": "489:11:14",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint32_$dyn_memory_ptr",
																"typeString": "uint32[] memory"
															}
														},
														"id": 1835,
														"indexExpression": {
															"hexValue": "30",
															"id": 1834,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "501:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "489:14:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1836,
														"name": "secondsAgo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1810,
														"src": "506:10:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"src": "489:27:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"id": 1838,
												"nodeType": "ExpressionStatement",
												"src": "489:27:14"
											},
											{
												"expression": {
													"id": 1843,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1839,
															"name": "secondsAgos",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1826,
															"src": "526:11:14",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint32_$dyn_memory_ptr",
																"typeString": "uint32[] memory"
															}
														},
														"id": 1841,
														"indexExpression": {
															"hexValue": "31",
															"id": 1840,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "538:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "526:14:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1842,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "543:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "526:18:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"id": 1844,
												"nodeType": "ExpressionStatement",
												"src": "526:18:14"
											},
											{
												"assignments": [
													1849,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1849,
														"mutability": "mutable",
														"name": "tickCumulatives",
														"nodeType": "VariableDeclaration",
														"scope": 1890,
														"src": "556:30:14",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_int56_$dyn_memory_ptr",
															"typeString": "int56[]"
														},
														"typeName": {
															"baseType": {
																"id": 1847,
																"name": "int56",
																"nodeType": "ElementaryTypeName",
																"src": "556:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_int56",
																	"typeString": "int56"
																}
															},
															"id": 1848,
															"nodeType": "ArrayTypeName",
															"src": "556:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_int56_$dyn_storage_ptr",
																"typeString": "int56[]"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1856,
												"initialValue": {
													"arguments": [
														{
															"id": 1854,
															"name": "secondsAgos",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1826,
															"src": "633:11:14",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint32_$dyn_memory_ptr",
																"typeString": "uint32[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_array$_t_uint32_$dyn_memory_ptr",
																"typeString": "uint32[] memory"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1851,
																	"name": "pool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1808,
																	"src": "619:4:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1850,
																"name": "IUniswapV3Pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 412,
																"src": "604:14:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IUniswapV3Pool_$412_$",
																	"typeString": "type(contract IUniswapV3Pool)"
																}
															},
															"id": 1852,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "604:20:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IUniswapV3Pool_$412",
																"typeString": "contract IUniswapV3Pool"
															}
														},
														"id": 1853,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "observe",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 524,
														"src": "604:28:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_array$_t_uint32_$dyn_memory_ptr_$returns$_t_array$_t_int56_$dyn_memory_ptr_$_t_array$_t_uint160_$dyn_memory_ptr_$",
															"typeString": "function (uint32[] memory) view external returns (int56[] memory,uint160[] memory)"
														}
													},
													"id": 1855,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "604:41:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_array$_t_int56_$dyn_memory_ptr_$_t_array$_t_uint160_$dyn_memory_ptr_$",
														"typeString": "tuple(int56[] memory,uint160[] memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "555:90:14"
											},
											{
												"assignments": [
													1858
												],
												"declarations": [
													{
														"constant": false,
														"id": 1858,
														"mutability": "mutable",
														"name": "tickCumulativesDelta",
														"nodeType": "VariableDeclaration",
														"scope": 1890,
														"src": "656:26:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int56",
															"typeString": "int56"
														},
														"typeName": {
															"id": 1857,
															"name": "int56",
															"nodeType": "ElementaryTypeName",
															"src": "656:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_int56",
																"typeString": "int56"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1866,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int56",
														"typeString": "int56"
													},
													"id": 1865,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 1859,
															"name": "tickCumulatives",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1849,
															"src": "685:15:14",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_int56_$dyn_memory_ptr",
																"typeString": "int56[] memory"
															}
														},
														"id": 1861,
														"indexExpression": {
															"hexValue": "31",
															"id": 1860,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "701:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "685:18:14",
														"typeDescriptions": {
															"typeIdentifier": "t_int56",
															"typeString": "int56"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"baseExpression": {
															"id": 1862,
															"name": "tickCumulatives",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1849,
															"src": "706:15:14",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_int56_$dyn_memory_ptr",
																"typeString": "int56[] memory"
															}
														},
														"id": 1864,
														"indexExpression": {
															"hexValue": "30",
															"id": 1863,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "722:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "706:18:14",
														"typeDescriptions": {
															"typeIdentifier": "t_int56",
															"typeString": "int56"
														}
													},
													"src": "685:39:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int56",
														"typeString": "int56"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "656:68:14"
											},
											{
												"expression": {
													"id": 1874,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1867,
														"name": "tick",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1813,
														"src": "737:4:14",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"commonType": {
																	"typeIdentifier": "t_int56",
																	"typeString": "int56"
																},
																"id": 1872,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1870,
																	"name": "tickCumulativesDelta",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1858,
																	"src": "750:20:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int56",
																		"typeString": "int56"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 1871,
																	"name": "secondsAgo",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1810,
																	"src": "773:10:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"src": "750:33:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_int56",
																	"typeString": "int56"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int56",
																	"typeString": "int56"
																}
															],
															"id": 1869,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "744:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int24_$",
																"typeString": "type(int24)"
															},
															"typeName": {
																"id": 1868,
																"name": "int24",
																"nodeType": "ElementaryTypeName",
																"src": "744:5:14",
																"typeDescriptions": {}
															}
														},
														"id": 1873,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "744:40:14",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"src": "737:47:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"id": 1875,
												"nodeType": "ExpressionStatement",
												"src": "737:47:14"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1885,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_int56",
															"typeString": "int56"
														},
														"id": 1878,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1876,
															"name": "tickCumulativesDelta",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1858,
															"src": "843:20:14",
															"typeDescriptions": {
																"typeIdentifier": "t_int56",
																"typeString": "int56"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"hexValue": "30",
															"id": 1877,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "866:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "843:24:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int56",
																	"typeString": "int56"
																},
																"id": 1883,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_int56",
																		"typeString": "int56"
																	},
																	"id": 1881,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1879,
																		"name": "tickCumulativesDelta",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1858,
																		"src": "872:20:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int56",
																			"typeString": "int56"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 1880,
																		"name": "secondsAgo",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1810,
																		"src": "895:10:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	},
																	"src": "872:33:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int56",
																		"typeString": "int56"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1882,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "909:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "872:38:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 1884,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "871:40:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "843:68:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1889,
												"nodeType": "IfStatement",
												"src": "839:80:14",
												"trueBody": {
													"expression": {
														"id": 1887,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": false,
														"src": "913:6:14",
														"subExpression": {
															"id": 1886,
															"name": "tick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1813,
															"src": "913:4:14",
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"id": 1888,
													"nodeType": "ExpressionStatement",
													"src": "913:6:14"
												}
											}
										]
									},
									"id": 1891,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "consult",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1811,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1808,
												"mutability": "mutable",
												"name": "pool",
												"nodeType": "VariableDeclaration",
												"scope": 1891,
												"src": "287:12:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1807,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "287:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1810,
												"mutability": "mutable",
												"name": "secondsAgo",
												"nodeType": "VariableDeclaration",
												"scope": 1891,
												"src": "301:17:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 1809,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "301:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "286:33:14"
									},
									"returnParameters": {
										"id": 1814,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1813,
												"mutability": "mutable",
												"name": "tick",
												"nodeType": "VariableDeclaration",
												"scope": 1891,
												"src": "367:10:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1812,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "367:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "366:12:14"
									},
									"scope": 1989,
									"src": "270:657:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1987,
										"nodeType": "Block",
										"src": "1111:778:14",
										"statements": [
											{
												"assignments": [
													1905
												],
												"declarations": [
													{
														"constant": false,
														"id": 1905,
														"mutability": "mutable",
														"name": "sqrtRatioX96",
														"nodeType": "VariableDeclaration",
														"scope": 1987,
														"src": "1121:20:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														},
														"typeName": {
															"id": 1904,
															"name": "uint160",
															"nodeType": "ElementaryTypeName",
															"src": "1121:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1910,
												"initialValue": {
													"arguments": [
														{
															"id": 1908,
															"name": "tick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1893,
															"src": "1172:4:14",
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														],
														"expression": {
															"id": 1906,
															"name": "TickMath",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1540,
															"src": "1144:8:14",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_TickMath_$1540_$",
																"typeString": "type(library TickMath)"
															}
														},
														"id": 1907,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "getSqrtRatioAtTick",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1400,
														"src": "1144:27:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_int24_$returns$_t_uint160_$",
															"typeString": "function (int24) pure returns (uint160)"
														}
													},
													"id": 1909,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1144:33:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1121:56:14"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													},
													"id": 1917,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1911,
														"name": "sqrtRatioX96",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1905,
														"src": "1296:12:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1914,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1317:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint128_$",
																		"typeString": "type(uint128)"
																	},
																	"typeName": {
																		"id": 1913,
																		"name": "uint128",
																		"nodeType": "ElementaryTypeName",
																		"src": "1317:7:14",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint128_$",
																		"typeString": "type(uint128)"
																	}
																],
																"id": 1912,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "1312:4:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1915,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1312:13:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint128",
																"typeString": "type(uint128)"
															}
														},
														"id": 1916,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "1312:17:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														}
													},
													"src": "1296:33:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1985,
													"nodeType": "Block",
													"src": "1602:281:14",
													"statements": [
														{
															"assignments": [
																1952
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1952,
																	"mutability": "mutable",
																	"name": "ratioX128",
																	"nodeType": "VariableDeclaration",
																	"scope": 1985,
																	"src": "1616:17:14",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1951,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "1616:7:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1961,
															"initialValue": {
																"arguments": [
																	{
																		"id": 1955,
																		"name": "sqrtRatioX96",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1905,
																		"src": "1652:12:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint160",
																			"typeString": "uint160"
																		}
																	},
																	{
																		"id": 1956,
																		"name": "sqrtRatioX96",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1905,
																		"src": "1666:12:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint160",
																			"typeString": "uint160"
																		}
																	},
																	{
																		"commonType": {
																			"typeIdentifier": "t_rational_18446744073709551616_by_1",
																			"typeString": "int_const 18446744073709551616"
																		},
																		"id": 1959,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "31",
																			"id": 1957,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1680:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<<",
																		"rightExpression": {
																			"hexValue": "3634",
																			"id": 1958,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1685:2:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "1680:7:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_18446744073709551616_by_1",
																			"typeString": "int_const 18446744073709551616"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint160",
																			"typeString": "uint160"
																		},
																		{
																			"typeIdentifier": "t_uint160",
																			"typeString": "uint160"
																		},
																		{
																			"typeIdentifier": "t_rational_18446744073709551616_by_1",
																			"typeString": "int_const 18446744073709551616"
																		}
																	],
																	"expression": {
																		"id": 1953,
																		"name": "FullMath",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1005,
																		"src": "1636:8:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_FullMath_$1005_$",
																			"typeString": "type(library FullMath)"
																		}
																	},
																	"id": 1954,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "mulDiv",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 961,
																	"src": "1636:15:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1960,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1636:52:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "1616:72:14"
														},
														{
															"expression": {
																"id": 1983,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1962,
																	"name": "quoteAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1902,
																	"src": "1702:11:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 1965,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1963,
																			"name": "baseToken",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1897,
																			"src": "1716:9:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<",
																		"rightExpression": {
																			"id": 1964,
																			"name": "quoteToken",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1899,
																			"src": "1728:10:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "1716:22:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"arguments": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_rational_340282366920938463463374607431768211456_by_1",
																					"typeString": "int_const 3402...(31 digits omitted)...1456"
																				},
																				"id": 1978,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"leftExpression": {
																					"hexValue": "31",
																					"id": 1976,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "1840:1:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<<",
																				"rightExpression": {
																					"hexValue": "313238",
																					"id": 1977,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "1845:3:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_128_by_1",
																						"typeString": "int_const 128"
																					},
																					"value": "128"
																				},
																				"src": "1840:8:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_340282366920938463463374607431768211456_by_1",
																					"typeString": "int_const 3402...(31 digits omitted)...1456"
																				}
																			},
																			{
																				"id": 1979,
																				"name": "baseAmount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1895,
																				"src": "1850:10:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint128",
																					"typeString": "uint128"
																				}
																			},
																			{
																				"id": 1980,
																				"name": "ratioX128",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1952,
																				"src": "1862:9:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_340282366920938463463374607431768211456_by_1",
																					"typeString": "int_const 3402...(31 digits omitted)...1456"
																				},
																				{
																					"typeIdentifier": "t_uint128",
																					"typeString": "uint128"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 1974,
																				"name": "FullMath",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1005,
																				"src": "1824:8:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_FullMath_$1005_$",
																					"typeString": "type(library FullMath)"
																				}
																			},
																			"id": 1975,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "mulDiv",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 961,
																			"src": "1824:15:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1981,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1824:48:14",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1982,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "1716:156:14",
																	"trueExpression": {
																		"arguments": [
																			{
																				"id": 1968,
																				"name": "ratioX128",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1952,
																				"src": "1773:9:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 1969,
																				"name": "baseAmount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1895,
																				"src": "1784:10:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint128",
																					"typeString": "uint128"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_rational_340282366920938463463374607431768211456_by_1",
																					"typeString": "int_const 3402...(31 digits omitted)...1456"
																				},
																				"id": 1972,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"leftExpression": {
																					"hexValue": "31",
																					"id": 1970,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "1796:1:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<<",
																				"rightExpression": {
																					"hexValue": "313238",
																					"id": 1971,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "1801:3:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_128_by_1",
																						"typeString": "int_const 128"
																					},
																					"value": "128"
																				},
																				"src": "1796:8:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_340282366920938463463374607431768211456_by_1",
																					"typeString": "int_const 3402...(31 digits omitted)...1456"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint128",
																					"typeString": "uint128"
																				},
																				{
																					"typeIdentifier": "t_rational_340282366920938463463374607431768211456_by_1",
																					"typeString": "int_const 3402...(31 digits omitted)...1456"
																				}
																			],
																			"expression": {
																				"id": 1966,
																				"name": "FullMath",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1005,
																				"src": "1757:8:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_FullMath_$1005_$",
																					"typeString": "type(library FullMath)"
																				}
																			},
																			"id": 1967,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "mulDiv",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 961,
																			"src": "1757:15:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1973,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1757:48:14",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1702:170:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1984,
															"nodeType": "ExpressionStatement",
															"src": "1702:170:14"
														}
													]
												},
												"id": 1986,
												"nodeType": "IfStatement",
												"src": "1292:591:14",
												"trueBody": {
													"id": 1950,
													"nodeType": "Block",
													"src": "1331:265:14",
													"statements": [
														{
															"assignments": [
																1919
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1919,
																	"mutability": "mutable",
																	"name": "ratioX192",
																	"nodeType": "VariableDeclaration",
																	"scope": 1950,
																	"src": "1345:17:14",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1918,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "1345:7:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1926,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1925,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 1922,
																			"name": "sqrtRatioX96",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1905,
																			"src": "1373:12:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		],
																		"id": 1921,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1365:7:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 1920,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "1365:7:14",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1923,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1365:21:14",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1924,
																	"name": "sqrtRatioX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1905,
																	"src": "1389:12:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																"src": "1365:36:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "1345:56:14"
														},
														{
															"expression": {
																"id": 1948,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1927,
																	"name": "quoteAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1902,
																	"src": "1415:11:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 1930,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1928,
																			"name": "baseToken",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1897,
																			"src": "1429:9:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<",
																		"rightExpression": {
																			"id": 1929,
																			"name": "quoteToken",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1899,
																			"src": "1441:10:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "1429:22:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"arguments": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_rational_6277101735386680763835789423207666416102355444464034512896_by_1",
																					"typeString": "int_const 6277...(50 digits omitted)...2896"
																				},
																				"id": 1943,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"leftExpression": {
																					"hexValue": "31",
																					"id": 1941,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "1553:1:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<<",
																				"rightExpression": {
																					"hexValue": "313932",
																					"id": 1942,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "1558:3:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_192_by_1",
																						"typeString": "int_const 192"
																					},
																					"value": "192"
																				},
																				"src": "1553:8:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_6277101735386680763835789423207666416102355444464034512896_by_1",
																					"typeString": "int_const 6277...(50 digits omitted)...2896"
																				}
																			},
																			{
																				"id": 1944,
																				"name": "baseAmount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1895,
																				"src": "1563:10:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint128",
																					"typeString": "uint128"
																				}
																			},
																			{
																				"id": 1945,
																				"name": "ratioX192",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1919,
																				"src": "1575:9:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_6277101735386680763835789423207666416102355444464034512896_by_1",
																					"typeString": "int_const 6277...(50 digits omitted)...2896"
																				},
																				{
																					"typeIdentifier": "t_uint128",
																					"typeString": "uint128"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 1939,
																				"name": "FullMath",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1005,
																				"src": "1537:8:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_FullMath_$1005_$",
																					"typeString": "type(library FullMath)"
																				}
																			},
																			"id": 1940,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "mulDiv",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 961,
																			"src": "1537:15:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1946,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1537:48:14",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1947,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "1429:156:14",
																	"trueExpression": {
																		"arguments": [
																			{
																				"id": 1933,
																				"name": "ratioX192",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1919,
																				"src": "1486:9:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 1934,
																				"name": "baseAmount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1895,
																				"src": "1497:10:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint128",
																					"typeString": "uint128"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_rational_6277101735386680763835789423207666416102355444464034512896_by_1",
																					"typeString": "int_const 6277...(50 digits omitted)...2896"
																				},
																				"id": 1937,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"leftExpression": {
																					"hexValue": "31",
																					"id": 1935,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "1509:1:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<<",
																				"rightExpression": {
																					"hexValue": "313932",
																					"id": 1936,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "1514:3:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_192_by_1",
																						"typeString": "int_const 192"
																					},
																					"value": "192"
																				},
																				"src": "1509:8:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_6277101735386680763835789423207666416102355444464034512896_by_1",
																					"typeString": "int_const 6277...(50 digits omitted)...2896"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint128",
																					"typeString": "uint128"
																				},
																				{
																					"typeIdentifier": "t_rational_6277101735386680763835789423207666416102355444464034512896_by_1",
																					"typeString": "int_const 6277...(50 digits omitted)...2896"
																				}
																			],
																			"expression": {
																				"id": 1931,
																				"name": "FullMath",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1005,
																				"src": "1470:8:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_FullMath_$1005_$",
																					"typeString": "type(library FullMath)"
																				}
																			},
																			"id": 1932,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "mulDiv",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 961,
																			"src": "1470:15:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1938,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1470:48:14",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1415:170:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1949,
															"nodeType": "ExpressionStatement",
															"src": "1415:170:14"
														}
													]
												}
											}
										]
									},
									"id": 1988,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getQuoteAtTick",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1900,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1893,
												"mutability": "mutable",
												"name": "tick",
												"nodeType": "VariableDeclaration",
												"scope": 1988,
												"src": "967:10:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1892,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "967:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1895,
												"mutability": "mutable",
												"name": "baseAmount",
												"nodeType": "VariableDeclaration",
												"scope": 1988,
												"src": "987:18:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1894,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "987:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1897,
												"mutability": "mutable",
												"name": "baseToken",
												"nodeType": "VariableDeclaration",
												"scope": 1988,
												"src": "1015:17:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1896,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1015:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1899,
												"mutability": "mutable",
												"name": "quoteToken",
												"nodeType": "VariableDeclaration",
												"scope": 1988,
												"src": "1042:18:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1898,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "957:109:14"
									},
									"returnParameters": {
										"id": 1903,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1902,
												"mutability": "mutable",
												"name": "quoteAmount",
												"nodeType": "VariableDeclaration",
												"scope": 1988,
												"src": "1090:19:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1901,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1090:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1089:21:14"
									},
									"scope": 1989,
									"src": "934:955:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1990,
							"src": "244:1647:14"
						}
					],
					"src": "32:1860:14"
				},
				"id": 14
			},
			"contracts/libraries/UniswapV2.sol": {
				"ast": {
					"absolutePath": "contracts/libraries/UniswapV2.sol",
					"exportedSymbols": {
						"IERC20": [
							1770
						],
						"IUniswapV2Router01": [
							307
						],
						"UniswapV2": [
							2052
						]
					},
					"id": 2053,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1991,
							"literals": [
								"solidity",
								"0.7",
								".6"
							],
							"nodeType": "PragmaDirective",
							"src": "32:22:15"
						},
						{
							"absolutePath": "contracts/interfaces/IERC20.sol",
							"file": "../interfaces/IERC20.sol",
							"id": 1992,
							"nodeType": "ImportDirective",
							"scope": 2053,
							"sourceUnit": 1771,
							"src": "56:34:15",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol",
							"file": "@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol",
							"id": 1993,
							"nodeType": "ImportDirective",
							"scope": 2053,
							"sourceUnit": 308,
							"src": "91:75:15",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 2052,
							"linearizedBaseContracts": [
								2052
							],
							"name": "UniswapV2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2050,
										"nodeType": "Block",
										"src": "282:239:15",
										"statements": [
											{
												"assignments": [
													2008
												],
												"declarations": [
													{
														"constant": false,
														"id": 2008,
														"mutability": "mutable",
														"name": "path",
														"nodeType": "VariableDeclaration",
														"scope": 2050,
														"src": "292:21:15",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
															"typeString": "address[]"
														},
														"typeName": {
															"baseType": {
																"id": 2006,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "292:7:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 2007,
															"nodeType": "ArrayTypeName",
															"src": "292:9:15",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																"typeString": "address[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2014,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "32",
															"id": 2012,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "330:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															}
														],
														"id": 2011,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "316:13:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (address[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 2009,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "320:7:15",
																"stateMutability": "nonpayable",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 2010,
															"nodeType": "ArrayTypeName",
															"src": "320:9:15",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																"typeString": "address[]"
															}
														}
													},
													"id": 2013,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "316:16:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
														"typeString": "address[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "292:40:15"
											},
											{
												"expression": {
													"id": 2019,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2015,
															"name": "path",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2008,
															"src": "342:4:15",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 2017,
														"indexExpression": {
															"hexValue": "30",
															"id": 2016,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "347:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "342:7:15",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2018,
														"name": "tIn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1997,
														"src": "352:3:15",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "342:13:15",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2020,
												"nodeType": "ExpressionStatement",
												"src": "342:13:15"
											},
											{
												"expression": {
													"id": 2025,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2021,
															"name": "path",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2008,
															"src": "365:4:15",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 2023,
														"indexExpression": {
															"hexValue": "31",
															"id": 2022,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "370:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "365:7:15",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2024,
														"name": "tOut",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1999,
														"src": "375:4:15",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "365:14:15",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2026,
												"nodeType": "ExpressionStatement",
												"src": "365:14:15"
											},
											{
												"assignments": [
													2031
												],
												"declarations": [
													{
														"constant": false,
														"id": 2031,
														"mutability": "mutable",
														"name": "amounts",
														"nodeType": "VariableDeclaration",
														"scope": 2050,
														"src": "389:21:15",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 2029,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "389:4:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2030,
															"nodeType": "ArrayTypeName",
															"src": "389:6:15",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2045,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2042,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "3130",
																"id": 2036,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "456:2:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"value": "10"
															},
															"nodeType": "BinaryOperation",
															"operator": "**",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"arguments": [
																			{
																				"id": 2038,
																				"name": "tIn",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1997,
																				"src": "467:3:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 2037,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1770,
																			"src": "460:6:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$1770_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 2039,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "460:11:15",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$1770",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 2040,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "decimals",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1711,
																	"src": "460:20:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
																		"typeString": "function () view external returns (uint8)"
																	}
																},
																"id": 2041,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "460:22:15",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "456:26:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2043,
															"name": "path",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2008,
															"src": "483:4:15",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 2033,
																	"name": "provider",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1995,
																	"src": "432:8:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2032,
																"name": "IUniswapV2Router01",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 307,
																"src": "413:18:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IUniswapV2Router01_$307_$",
																	"typeString": "type(contract IUniswapV2Router01)"
																}
															},
															"id": 2034,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "413:28:15",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IUniswapV2Router01_$307",
																"typeString": "contract IUniswapV2Router01"
															}
														},
														"id": 2035,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "getAmountsOut",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 295,
														"src": "413:42:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256,address[] memory) view external returns (uint256[] memory)"
														}
													},
													"id": 2044,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "413:75:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "389:99:15"
											},
											{
												"expression": {
													"baseExpression": {
														"id": 2046,
														"name": "amounts",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2031,
														"src": "504:7:15",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[] memory"
														}
													},
													"id": 2048,
													"indexExpression": {
														"hexValue": "31",
														"id": 2047,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "512:1:15",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "504:10:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2003,
												"id": 2049,
												"nodeType": "Return",
												"src": "497:17:15"
											}
										]
									},
									"functionSelector": "c361e0b1",
									"id": 2051,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "Price",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2000,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1995,
												"mutability": "mutable",
												"name": "provider",
												"nodeType": "VariableDeclaration",
												"scope": 2051,
												"src": "207:16:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1994,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "207:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1997,
												"mutability": "mutable",
												"name": "tIn",
												"nodeType": "VariableDeclaration",
												"scope": 2051,
												"src": "225:11:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1996,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "225:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1999,
												"mutability": "mutable",
												"name": "tOut",
												"nodeType": "VariableDeclaration",
												"scope": 2051,
												"src": "237:12:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1998,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "237:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "206:44:15"
									},
									"returnParameters": {
										"id": 2003,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2002,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2051,
												"src": "274:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2001,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "274:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "273:9:15"
									},
									"scope": 2052,
									"src": "192:329:15",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2053,
							"src": "168:356:15"
						}
					],
					"src": "32:492:15"
				},
				"id": 15
			},
			"contracts/libraries/UniswapV3.sol": {
				"ast": {
					"absolutePath": "contracts/libraries/UniswapV3.sol",
					"exportedSymbols": {
						"FullMath": [
							1005
						],
						"IERC20": [
							1770
						],
						"IUniswapV3Factory": [
							390
						],
						"IUniswapV3Pool": [
							412
						],
						"IUniswapV3PoolActions": [
							508
						],
						"IUniswapV3PoolDerivedState": [
							539
						],
						"IUniswapV3PoolEvents": [
							658
						],
						"IUniswapV3PoolImmutables": [
							698
						],
						"IUniswapV3PoolOwnerActions": [
							724
						],
						"IUniswapV3PoolState": [
							832
						],
						"OracleLibrary": [
							1989
						],
						"TickMath": [
							1540
						],
						"UniswapV3": [
							2176
						]
					},
					"id": 2177,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2054,
							"literals": [
								"solidity",
								"0.7",
								".6"
							],
							"nodeType": "PragmaDirective",
							"src": "32:22:16"
						},
						{
							"absolutePath": "@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol",
							"file": "@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol",
							"id": 2055,
							"nodeType": "ImportDirective",
							"scope": 2177,
							"sourceUnit": 413,
							"src": "56:66:16",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol",
							"file": "@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol",
							"id": 2056,
							"nodeType": "ImportDirective",
							"scope": 2177,
							"sourceUnit": 391,
							"src": "123:69:16",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/libraries/OracleLibrary.sol",
							"file": "./OracleLibrary.sol",
							"id": 2057,
							"nodeType": "ImportDirective",
							"scope": 2177,
							"sourceUnit": 1990,
							"src": "193:29:16",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/interfaces/IERC20.sol",
							"file": "../interfaces/IERC20.sol",
							"id": 2058,
							"nodeType": "ImportDirective",
							"scope": 2177,
							"sourceUnit": 1771,
							"src": "224:34:16",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 2176,
							"linearizedBaseContracts": [
								2176
							],
							"name": "UniswapV3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2174,
										"nodeType": "Block",
										"src": "391:566:16",
										"statements": [
											{
												"assignments": [
													2076
												],
												"declarations": [
													{
														"constant": false,
														"id": 2076,
														"mutability": "mutable",
														"name": "fees",
														"nodeType": "VariableDeclaration",
														"scope": 2174,
														"src": "401:21:16",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint16_$4_memory_ptr",
															"typeString": "uint16[4]"
														},
														"typeName": {
															"baseType": {
																"id": 2074,
																"name": "uint16",
																"nodeType": "ElementaryTypeName",
																"src": "401:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																}
															},
															"id": 2075,
															"length": {
																"hexValue": "34",
																"id": 2073,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "408:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_4_by_1",
																	"typeString": "int_const 4"
																},
																"value": "4"
															},
															"nodeType": "ArrayTypeName",
															"src": "401:9:16",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint16_$4_storage_ptr",
																"typeString": "uint16[4]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2082,
												"initialValue": {
													"components": [
														{
															"hexValue": "313030",
															"id": 2077,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "426:3:16",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_100_by_1",
																"typeString": "int_const 100"
															},
															"value": "100"
														},
														{
															"hexValue": "353030",
															"id": 2078,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "430:3:16",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_500_by_1",
																"typeString": "int_const 500"
															},
															"value": "500"
														},
														{
															"hexValue": "33303030",
															"id": 2079,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "434:4:16",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_3000_by_1",
																"typeString": "int_const 3000"
															},
															"value": "3000"
														},
														{
															"hexValue": "3130303030",
															"id": 2080,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "439:5:16",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_10000_by_1",
																"typeString": "int_const 10000"
															},
															"value": "10000"
														}
													],
													"id": 2081,
													"isConstant": false,
													"isInlineArray": true,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "425:20:16",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint16_$4_memory_ptr",
														"typeString": "uint16[4] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "401:44:16"
											},
											{
												"body": {
													"id": 2168,
													"nodeType": "Block",
													"src": "477:446:16",
													"statements": [
														{
															"assignments": [
																2094
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2094,
																	"mutability": "mutable",
																	"name": "pool",
																	"nodeType": "VariableDeclaration",
																	"scope": 2168,
																	"src": "487:12:16",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"typeName": {
																		"id": 2093,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "487:7:16",
																		"stateMutability": "nonpayable",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2105,
															"initialValue": {
																"arguments": [
																	{
																		"id": 2099,
																		"name": "tIn",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2062,
																		"src": "538:3:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2100,
																		"name": "tOut",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2064,
																		"src": "542:4:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"baseExpression": {
																			"id": 2101,
																			"name": "fees",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2076,
																			"src": "547:4:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint16_$4_memory_ptr",
																				"typeString": "uint16[4] memory"
																			}
																		},
																		"id": 2103,
																		"indexExpression": {
																			"id": 2102,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2084,
																			"src": "552:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "547:7:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint16",
																			"typeString": "uint16"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint16",
																			"typeString": "uint16"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 2096,
																				"name": "provider",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2060,
																				"src": "520:8:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 2095,
																			"name": "IUniswapV3Factory",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 390,
																			"src": "502:17:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IUniswapV3Factory_$390_$",
																				"typeString": "type(contract IUniswapV3Factory)"
																			}
																		},
																		"id": 2097,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "502:27:16",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IUniswapV3Factory_$390",
																			"typeString": "contract IUniswapV3Factory"
																		}
																	},
																	"id": 2098,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "getPool",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 363,
																	"src": "502:35:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$_t_uint24_$returns$_t_address_$",
																		"typeString": "function (address,address,uint24) view external returns (address)"
																	}
																},
																"id": 2104,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "502:53:16",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "487:68:16"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 2111,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2106,
																	"name": "pool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2094,
																	"src": "569:4:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 2109,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "585:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 2108,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "577:7:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 2107,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "577:7:16",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2110,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "577:10:16",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"src": "569:18:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2113,
															"nodeType": "IfStatement",
															"src": "565:32:16",
															"trueBody": {
																"id": 2112,
																"nodeType": "Continue",
																"src": "589:8:16"
															}
														},
														{
															"assignments": [
																2115
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2115,
																	"mutability": "mutable",
																	"name": "tick",
																	"nodeType": "VariableDeclaration",
																	"scope": 2168,
																	"src": "608:10:16",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int24",
																		"typeString": "int24"
																	},
																	"typeName": {
																		"id": 2114,
																		"name": "int24",
																		"nodeType": "ElementaryTypeName",
																		"src": "608:5:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2121,
															"initialValue": {
																"arguments": [
																	{
																		"id": 2118,
																		"name": "pool",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2094,
																		"src": "643:4:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"hexValue": "35",
																		"id": 2119,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "648:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_5_by_1",
																			"typeString": "int_const 5"
																		},
																		"value": "5"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_rational_5_by_1",
																			"typeString": "int_const 5"
																		}
																	],
																	"expression": {
																		"id": 2116,
																		"name": "OracleLibrary",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1989,
																		"src": "621:13:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_OracleLibrary_$1989_$",
																			"typeString": "type(library OracleLibrary)"
																		}
																	},
																	"id": 2117,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "consult",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1891,
																	"src": "621:21:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint32_$returns$_t_int24_$",
																		"typeString": "function (address,uint32) view returns (int24)"
																	}
																},
																"id": 2120,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "621:29:16",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "608:42:16"
														},
														{
															"assignments": [
																2123
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2123,
																	"mutability": "mutable",
																	"name": "amountOut",
																	"nodeType": "VariableDeclaration",
																	"scope": 2168,
																	"src": "660:17:16",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2122,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "660:7:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2140,
															"initialValue": {
																"arguments": [
																	{
																		"id": 2126,
																		"name": "tick",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2115,
																		"src": "709:4:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2135,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"hexValue": "3130",
																					"id": 2129,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "722:2:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_10_by_1",
																						"typeString": "int_const 10"
																					},
																					"value": "10"
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "**",
																				"rightExpression": {
																					"arguments": [],
																					"expression": {
																						"argumentTypes": [],
																						"expression": {
																							"arguments": [
																								{
																									"id": 2131,
																									"name": "tIn",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2062,
																									"src": "733:3:16",
																									"typeDescriptions": {
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									}
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									}
																								],
																								"id": 2130,
																								"name": "IERC20",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1770,
																								"src": "726:6:16",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IERC20_$1770_$",
																									"typeString": "type(contract IERC20)"
																								}
																							},
																							"id": 2132,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "typeConversion",
																							"lValueRequested": false,
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "726:11:16",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_IERC20_$1770",
																								"typeString": "contract IERC20"
																							}
																						},
																						"id": 2133,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "decimals",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1711,
																						"src": "726:20:16",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
																							"typeString": "function () view external returns (uint8)"
																						}
																					},
																					"id": 2134,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "726:22:16",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint8",
																						"typeString": "uint8"
																					}
																				},
																				"src": "722:26:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 2128,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "714:7:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint128_$",
																				"typeString": "type(uint128)"
																			},
																			"typeName": {
																				"id": 2127,
																				"name": "uint128",
																				"nodeType": "ElementaryTypeName",
																				"src": "714:7:16",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2136,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "714:35:16",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint128",
																			"typeString": "uint128"
																		}
																	},
																	{
																		"id": 2137,
																		"name": "tIn",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2062,
																		"src": "750:3:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2138,
																		"name": "tOut",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2064,
																		"src": "754:4:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		},
																		{
																			"typeIdentifier": "t_uint128",
																			"typeString": "uint128"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 2124,
																		"name": "OracleLibrary",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1989,
																		"src": "680:13:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_OracleLibrary_$1989_$",
																			"typeString": "type(library OracleLibrary)"
																		}
																	},
																	"id": 2125,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "getQuoteAtTick",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1988,
																	"src": "680:28:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_int24_$_t_uint128_$_t_address_$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (int24,uint128,address,address) pure returns (uint256)"
																	}
																},
																"id": 2139,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "680:79:16",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "660:99:16"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																},
																"id": 2143,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2141,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2084,
																	"src": "773:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 2142,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "778:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "773:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2148,
															"nodeType": "IfStatement",
															"src": "769:29:16",
															"trueBody": {
																"expression": {
																	"id": 2146,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 2144,
																		"name": "price",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2067,
																		"src": "781:5:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"id": 2145,
																		"name": "amountOut",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2123,
																		"src": "789:9:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "781:17:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 2147,
																"nodeType": "ExpressionStatement",
																"src": "781:17:16"
															}
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 2155,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	},
																	"id": 2151,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2149,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2084,
																		"src": "812:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 2150,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "816:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "812:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2154,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2152,
																		"name": "amountOut",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2123,
																		"src": "821:9:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<",
																	"rightExpression": {
																		"id": 2153,
																		"name": "price",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2067,
																		"src": "833:5:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "821:17:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "812:26:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2167,
															"nodeType": "IfStatement",
															"src": "808:105:16",
															"trueBody": {
																"id": 2166,
																"nodeType": "Block",
																"src": "840:73:16",
																"statements": [
																	{
																		"expression": {
																			"id": 2158,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 2156,
																				"name": "price",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2067,
																				"src": "854:5:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 2157,
																				"name": "amountOut",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2123,
																				"src": "862:9:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "854:17:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2159,
																		"nodeType": "ExpressionStatement",
																		"src": "854:17:16"
																	},
																	{
																		"expression": {
																			"id": 2164,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 2160,
																				"name": "fee",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2069,
																				"src": "885:3:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint24",
																					"typeString": "uint24"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"baseExpression": {
																					"id": 2161,
																					"name": "fees",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2076,
																					"src": "891:4:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint16_$4_memory_ptr",
																						"typeString": "uint16[4] memory"
																					}
																				},
																				"id": 2163,
																				"indexExpression": {
																					"id": 2162,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2084,
																					"src": "896:1:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint8",
																						"typeString": "uint8"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "891:7:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint16",
																					"typeString": "uint16"
																				}
																			},
																			"src": "885:13:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint24",
																				"typeString": "uint24"
																			}
																		},
																		"id": 2165,
																		"nodeType": "ExpressionStatement",
																		"src": "885:13:16"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 2089,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2087,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2084,
														"src": "469:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"hexValue": "34",
														"id": 2088,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "471:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_4_by_1",
															"typeString": "int_const 4"
														},
														"value": "4"
													},
													"src": "469:3:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2169,
												"initializationExpression": {
													"assignments": [
														2084
													],
													"declarations": [
														{
															"constant": false,
															"id": 2084,
															"mutability": "mutable",
															"name": "i",
															"nodeType": "VariableDeclaration",
															"scope": 2169,
															"src": "459:7:16",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															"typeName": {
																"id": 2083,
																"name": "uint8",
																"nodeType": "ElementaryTypeName",
																"src": "459:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 2086,
													"initialValue": {
														"hexValue": "30",
														"id": 2085,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "467:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "459:9:16"
												},
												"loopExpression": {
													"expression": {
														"id": 2091,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "473:3:16",
														"subExpression": {
															"id": 2090,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2084,
															"src": "473:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"id": 2092,
													"nodeType": "ExpressionStatement",
													"src": "473:3:16"
												},
												"nodeType": "ForStatement",
												"src": "455:468:16"
											},
											{
												"expression": {
													"components": [
														{
															"id": 2170,
															"name": "price",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2067,
															"src": "940:5:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2171,
															"name": "fee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2069,
															"src": "946:3:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint24",
																"typeString": "uint24"
															}
														}
													],
													"id": 2172,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "939:11:16",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint24_$",
														"typeString": "tuple(uint256,uint24)"
													}
												},
												"functionReturnParameters": 2070,
												"id": 2173,
												"nodeType": "Return",
												"src": "932:18:16"
											}
										]
									},
									"functionSelector": "c361e0b1",
									"id": 2175,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "Price",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2065,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2060,
												"mutability": "mutable",
												"name": "provider",
												"nodeType": "VariableDeclaration",
												"scope": 2175,
												"src": "300:16:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2059,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "300:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2062,
												"mutability": "mutable",
												"name": "tIn",
												"nodeType": "VariableDeclaration",
												"scope": 2175,
												"src": "317:11:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2061,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "317:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2064,
												"mutability": "mutable",
												"name": "tOut",
												"nodeType": "VariableDeclaration",
												"scope": 2175,
												"src": "329:12:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2063,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "329:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "299:43:16"
									},
									"returnParameters": {
										"id": 2070,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2067,
												"mutability": "mutable",
												"name": "price",
												"nodeType": "VariableDeclaration",
												"scope": 2175,
												"src": "366:13:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2066,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "366:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2069,
												"mutability": "mutable",
												"name": "fee",
												"nodeType": "VariableDeclaration",
												"scope": 2175,
												"src": "380:10:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 2068,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "380:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "365:26:16"
									},
									"scope": 2176,
									"src": "285:672:16",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2177,
							"src": "260:699:16"
						}
					],
					"src": "32:929:16"
				},
				"id": 16
			}
		}
	}
}
{
	"id": "e7e157bb1ff8e5a23dee85a39eca7594",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.7.6",
	"solcLongVersion": "0.7.6+commit.7338295f",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/getpool.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity >=0.7.6;\n\nimport '@uniswap/v3-periphery/contracts/libraries/Path.sol';\n\n\ncontract test {\n    using Path for bytes;\n\n    function decode(bytes memory pool) public view returns (\n            address tokenA,\n            address tokenB,\n            uint24 fee\n        ) {\n        return pool.decodeFirstPool();\n    }\n}"
			},
			"@uniswap/v3-periphery/contracts/libraries/Path.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.6.0;\n\nimport './BytesLib.sol';\n\n/// @title Functions for manipulating path data for multihop swaps\nlibrary Path {\n    using BytesLib for bytes;\n\n    /// @dev The length of the bytes encoded address\n    uint256 private constant ADDR_SIZE = 20;\n    /// @dev The length of the bytes encoded fee\n    uint256 private constant FEE_SIZE = 3;\n\n    /// @dev The offset of a single token address and pool fee\n    uint256 private constant NEXT_OFFSET = ADDR_SIZE + FEE_SIZE;\n    /// @dev The offset of an encoded pool key\n    uint256 private constant POP_OFFSET = NEXT_OFFSET + ADDR_SIZE;\n    /// @dev The minimum length of an encoding that contains 2 or more pools\n    uint256 private constant MULTIPLE_POOLS_MIN_LENGTH = POP_OFFSET + NEXT_OFFSET;\n\n    /// @notice Returns true iff the path contains two or more pools\n    /// @param path The encoded swap path\n    /// @return True if path contains two or more pools, otherwise false\n    function hasMultiplePools(bytes memory path) internal pure returns (bool) {\n        return path.length >= MULTIPLE_POOLS_MIN_LENGTH;\n    }\n\n    /// @notice Returns the number of pools in the path\n    /// @param path The encoded swap path\n    /// @return The number of pools in the path\n    function numPools(bytes memory path) internal pure returns (uint256) {\n        // Ignore the first token address. From then on every fee and token offset indicates a pool.\n        return ((path.length - ADDR_SIZE) / NEXT_OFFSET);\n    }\n\n    /// @notice Decodes the first pool in path\n    /// @param path The bytes encoded swap path\n    /// @return tokenA The first token of the given pool\n    /// @return tokenB The second token of the given pool\n    /// @return fee The fee level of the pool\n    function decodeFirstPool(bytes memory path)\n        internal\n        pure\n        returns (\n            address tokenA,\n            address tokenB,\n            uint24 fee\n        )\n    {\n        tokenA = path.toAddress(0);\n        fee = path.toUint24(ADDR_SIZE);\n        tokenB = path.toAddress(NEXT_OFFSET);\n    }\n\n    /// @notice Gets the segment corresponding to the first pool in the path\n    /// @param path The bytes encoded swap path\n    /// @return The segment containing all data necessary to target the first pool in the path\n    function getFirstPool(bytes memory path) internal pure returns (bytes memory) {\n        return path.slice(0, POP_OFFSET);\n    }\n\n    /// @notice Skips a token + fee element from the buffer and returns the remainder\n    /// @param path The swap path\n    /// @return The remaining token + fee elements in the path\n    function skipToken(bytes memory path) internal pure returns (bytes memory) {\n        return path.slice(NEXT_OFFSET, path.length - NEXT_OFFSET);\n    }\n}\n"
			},
			"@uniswap/v3-periphery/contracts/libraries/BytesLib.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\n/*\n * @title Solidity Bytes Arrays Utils\n * @author Gonçalo Sá <goncalo.sa@consensys.net>\n *\n * @dev Bytes tightly packed arrays utility library for ethereum contracts written in Solidity.\n *      The library lets you concatenate, slice and type cast bytes arrays both in memory and storage.\n */\npragma solidity >=0.5.0 <0.8.0;\n\nlibrary BytesLib {\n    function slice(\n        bytes memory _bytes,\n        uint256 _start,\n        uint256 _length\n    ) internal pure returns (bytes memory) {\n        require(_length + 31 >= _length, 'slice_overflow');\n        require(_start + _length >= _start, 'slice_overflow');\n        require(_bytes.length >= _start + _length, 'slice_outOfBounds');\n\n        bytes memory tempBytes;\n\n        assembly {\n            switch iszero(_length)\n                case 0 {\n                    // Get a location of some free memory and store it in tempBytes as\n                    // Solidity does for memory variables.\n                    tempBytes := mload(0x40)\n\n                    // The first word of the slice result is potentially a partial\n                    // word read from the original array. To read it, we calculate\n                    // the length of that partial word and start copying that many\n                    // bytes into the array. The first word we copy will start with\n                    // data we don't care about, but the last `lengthmod` bytes will\n                    // land at the beginning of the contents of the new array. When\n                    // we're done copying, we overwrite the full first word with\n                    // the actual length of the slice.\n                    let lengthmod := and(_length, 31)\n\n                    // The multiplication in the next line is necessary\n                    // because when slicing multiples of 32 bytes (lengthmod == 0)\n                    // the following copy loop was copying the origin's length\n                    // and then ending prematurely not copying everything it should.\n                    let mc := add(add(tempBytes, lengthmod), mul(0x20, iszero(lengthmod)))\n                    let end := add(mc, _length)\n\n                    for {\n                        // The multiplication in the next line has the same exact purpose\n                        // as the one above.\n                        let cc := add(add(add(_bytes, lengthmod), mul(0x20, iszero(lengthmod))), _start)\n                    } lt(mc, end) {\n                        mc := add(mc, 0x20)\n                        cc := add(cc, 0x20)\n                    } {\n                        mstore(mc, mload(cc))\n                    }\n\n                    mstore(tempBytes, _length)\n\n                    //update free-memory pointer\n                    //allocating the array padded to 32 bytes like the compiler does now\n                    mstore(0x40, and(add(mc, 31), not(31)))\n                }\n                //if we want a zero-length slice let's just return a zero-length array\n                default {\n                    tempBytes := mload(0x40)\n                    //zero out the 32 bytes slice we are about to return\n                    //we need to do it because Solidity does not garbage collect\n                    mstore(tempBytes, 0)\n\n                    mstore(0x40, add(tempBytes, 0x20))\n                }\n        }\n\n        return tempBytes;\n    }\n\n    function toAddress(bytes memory _bytes, uint256 _start) internal pure returns (address) {\n        require(_start + 20 >= _start, 'toAddress_overflow');\n        require(_bytes.length >= _start + 20, 'toAddress_outOfBounds');\n        address tempAddress;\n\n        assembly {\n            tempAddress := div(mload(add(add(_bytes, 0x20), _start)), 0x1000000000000000000000000)\n        }\n\n        return tempAddress;\n    }\n\n    function toUint24(bytes memory _bytes, uint256 _start) internal pure returns (uint24) {\n        require(_start + 3 >= _start, 'toUint24_overflow');\n        require(_bytes.length >= _start + 3, 'toUint24_outOfBounds');\n        uint24 tempUint;\n\n        assembly {\n            tempUint := mload(add(add(_bytes, 0x3), _start))\n        }\n\n        return tempUint;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@uniswap/v3-periphery/contracts/libraries/BytesLib.sol": {
				"BytesLib": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@uniswap/v3-periphery/contracts/libraries/BytesLib.sol\":376:4201  library BytesLib {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@uniswap/v3-periphery/contracts/libraries/BytesLib.sol\":376:4201  library BytesLib {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122010163ce9ac3e81ad9f41df1b8a34c2f640d282a22f841ca2c5502f56d13bd53764736f6c63430007060033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122010163ce9ac3e81ad9f41df1b8a34c2f640d282a22f841ca2c5502f56d13bd53764736f6c63430007060033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LT AND EXTCODECOPY 0xE9 0xAC RETURNDATACOPY DUP2 0xAD SWAP16 COINBASE 0xDF SHL DUP11 CALLVALUE 0xC2 0xF6 BLOCKHASH 0xD2 DUP3 LOG2 0x2F DUP5 SHR LOG2 0xC5 POP 0x2F JUMP 0xD1 EXTCODESIZE 0xD5 CALLDATACOPY PUSH5 0x736F6C6343 STOP SMOD MOD STOP CALLER ",
							"sourceMap": "376:3825:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122010163ce9ac3e81ad9f41df1b8a34c2f640d282a22f841ca2c5502f56d13bd53764736f6c63430007060033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LT AND EXTCODECOPY 0xE9 0xAC RETURNDATACOPY DUP2 0xAD SWAP16 COINBASE 0xDF SHL DUP11 CALLVALUE 0xC2 0xF6 BLOCKHASH 0xD2 DUP3 LOG2 0x2F DUP5 SHR LOG2 0xC5 POP 0x2F JUMP 0xD1 EXTCODESIZE 0xD5 CALLDATACOPY PUSH5 0x736F6C6343 STOP SMOD MOD STOP CALLER ",
							"sourceMap": "376:3825:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"slice(bytes memory,uint256,uint256)": "infinite",
								"toAddress(bytes memory,uint256)": "infinite",
								"toUint24(bytes memory,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 376,
									"end": 4201,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 376,
									"end": 4201,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 376,
									"end": 4201,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 376,
									"end": 4201,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 376,
									"end": 4201,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 376,
									"end": 4201,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 376,
									"end": 4201,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 376,
									"end": 4201,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 376,
									"end": 4201,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 376,
									"end": 4201,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 376,
									"end": 4201,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 376,
									"end": 4201,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 376,
									"end": 4201,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 376,
									"end": 4201,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 376,
									"end": 4201,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 376,
									"end": 4201,
									"name": "INVALID",
									"source": 0
								},
								{
									"begin": 376,
									"end": 4201,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 376,
									"end": 4201,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 376,
									"end": 4201,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 376,
									"end": 4201,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 376,
									"end": 4201,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 376,
									"end": 4201,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 376,
									"end": 4201,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 376,
									"end": 4201,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 376,
									"end": 4201,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 376,
									"end": 4201,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 376,
									"end": 4201,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122010163ce9ac3e81ad9f41df1b8a34c2f640d282a22f841ca2c5502f56d13bd53764736f6c63430007060033",
									".code": [
										{
											"begin": 376,
											"end": 4201,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 376,
											"end": 4201,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 376,
											"end": 4201,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 376,
											"end": 4201,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 376,
											"end": 4201,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 376,
											"end": 4201,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 376,
											"end": 4201,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 376,
											"end": 4201,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 376,
											"end": 4201,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-periphery/contracts/libraries/BytesLib.sol\":\"BytesLib\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-periphery/contracts/libraries/BytesLib.sol\":{\"keccak256\":\"0x68629e5b1a30b6490c6ae721c28117f6f963745462b007da0769758eb67f10d4\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://370e31ceab1a7504f98dec122f65d9b8c6fc6420fd8cdd171b3dd57c4d5d21fc\",\"dweb:/ipfs/QmcquKATbnopgs92RdM5bKewt7GdCpgGhVY4hxmv1KjnnH\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@uniswap/v3-periphery/contracts/libraries/Path.sol": {
				"Path": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"ADDR_SIZE": {
								"details": "The length of the bytes encoded address"
							},
							"FEE_SIZE": {
								"details": "The length of the bytes encoded fee"
							},
							"MULTIPLE_POOLS_MIN_LENGTH": {
								"details": "The minimum length of an encoding that contains 2 or more pools"
							},
							"NEXT_OFFSET": {
								"details": "The offset of a single token address and pool fee"
							},
							"POP_OFFSET": {
								"details": "The offset of an encoded pool key"
							}
						},
						"title": "Functions for manipulating path data for multihop swaps",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@uniswap/v3-periphery/contracts/libraries/Path.sol\":164:2786  library Path {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@uniswap/v3-periphery/contracts/libraries/Path.sol\":164:2786  library Path {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212208e38d01db6efc4a5c36c64e753cdb990d40e89e1edc540e85e9ef039b9b01a7264736f6c63430007060033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208e38d01db6efc4a5c36c64e753cdb990d40e89e1edc540e85e9ef039b9b01a7264736f6c63430007060033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP15 CODESIZE 0xD0 SAR 0xB6 0xEF 0xC4 0xA5 0xC3 PUSH13 0x64E753CDB990D40E89E1EDC540 0xE8 0x5E SWAP15 CREATE CODECOPY 0xB9 0xB0 BYTE PUSH19 0x64736F6C634300070600330000000000000000 ",
							"sourceMap": "164:2622:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208e38d01db6efc4a5c36c64e753cdb990d40e89e1edc540e85e9ef039b9b01a7264736f6c63430007060033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP15 CODESIZE 0xD0 SAR 0xB6 0xEF 0xC4 0xA5 0xC3 PUSH13 0x64E753CDB990D40E89E1EDC540 0xE8 0x5E SWAP15 CREATE CODECOPY 0xB9 0xB0 BYTE PUSH19 0x64736F6C634300070600330000000000000000 ",
							"sourceMap": "164:2622:1:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"decodeFirstPool(bytes memory)": "infinite",
								"getFirstPool(bytes memory)": "infinite",
								"hasMultiplePools(bytes memory)": "infinite",
								"numPools(bytes memory)": "infinite",
								"skipToken(bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 164,
									"end": 2786,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 164,
									"end": 2786,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 164,
									"end": 2786,
									"name": "PUSH",
									"source": 1,
									"value": "B"
								},
								{
									"begin": 164,
									"end": 2786,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 164,
									"end": 2786,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 164,
									"end": 2786,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 164,
									"end": 2786,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 164,
									"end": 2786,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 164,
									"end": 2786,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 164,
									"end": 2786,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 164,
									"end": 2786,
									"name": "BYTE",
									"source": 1
								},
								{
									"begin": 164,
									"end": 2786,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 164,
									"end": 2786,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 164,
									"end": 2786,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 164,
									"end": 2786,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 164,
									"end": 2786,
									"name": "INVALID",
									"source": 1
								},
								{
									"begin": 164,
									"end": 2786,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 164,
									"end": 2786,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 164,
									"end": 2786,
									"name": "ADDRESS",
									"source": 1
								},
								{
									"begin": 164,
									"end": 2786,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 164,
									"end": 2786,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 164,
									"end": 2786,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 164,
									"end": 2786,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 164,
									"end": 2786,
									"name": "MSTORE8",
									"source": 1
								},
								{
									"begin": 164,
									"end": 2786,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 164,
									"end": 2786,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 164,
									"end": 2786,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212208e38d01db6efc4a5c36c64e753cdb990d40e89e1edc540e85e9ef039b9b01a7264736f6c63430007060033",
									".code": [
										{
											"begin": 164,
											"end": 2786,
											"name": "PUSHDEPLOYADDRESS",
											"source": 1
										},
										{
											"begin": 164,
											"end": 2786,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 164,
											"end": 2786,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 164,
											"end": 2786,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 164,
											"end": 2786,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 164,
											"end": 2786,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 164,
											"end": 2786,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 164,
											"end": 2786,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 164,
											"end": 2786,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ADDR_SIZE\":{\"details\":\"The length of the bytes encoded address\"},\"FEE_SIZE\":{\"details\":\"The length of the bytes encoded fee\"},\"MULTIPLE_POOLS_MIN_LENGTH\":{\"details\":\"The minimum length of an encoding that contains 2 or more pools\"},\"NEXT_OFFSET\":{\"details\":\"The offset of a single token address and pool fee\"},\"POP_OFFSET\":{\"details\":\"The offset of an encoded pool key\"}},\"title\":\"Functions for manipulating path data for multihop swaps\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-periphery/contracts/libraries/Path.sol\":\"Path\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-periphery/contracts/libraries/BytesLib.sol\":{\"keccak256\":\"0x68629e5b1a30b6490c6ae721c28117f6f963745462b007da0769758eb67f10d4\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://370e31ceab1a7504f98dec122f65d9b8c6fc6420fd8cdd171b3dd57c4d5d21fc\",\"dweb:/ipfs/QmcquKATbnopgs92RdM5bKewt7GdCpgGhVY4hxmv1KjnnH\"]},\"@uniswap/v3-periphery/contracts/libraries/Path.sol\":{\"keccak256\":\"0xb22c562b5175d50dbcc2224325666090d985f052abdcfe275c8dfc884e34de61\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://27aeff27314476ab3c77313ae1f0c5b2442b86315f5ce741cb2150a87c3cbad3\",\"dweb:/ipfs/QmQNno2g1CJvjnH6ych4LuHr1UZDEZPACgYG4XvivxGrqV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/getpool.sol": {
				"test": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "pool",
									"type": "bytes"
								}
							],
							"name": "decode",
							"outputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint24",
									"name": "fee",
									"type": "uint24"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/getpool.sol\":121:362  contract test {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/getpool.sol\":121:362  contract test {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xe5c5e9a3\n      eq\n      tag_3\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/getpool.sol\":168:360  function decode(bytes memory pool) public view returns (... */\n    tag_3:\n      tag_4\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_5\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_5:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      0x0100000000\n      dup2\n      gt\n      iszero\n      tag_6\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_6:\n      dup3\n      add\n      dup4\n      0x20\n      dup3\n      add\n      gt\n      iszero\n      tag_7\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_7:\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap2\n      dup5\n      0x01\n      dup4\n      mul\n      dup5\n      add\n      gt\n      0x0100000000\n      dup4\n      gt\n      or\n      iszero\n      tag_8\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_8:\n      swap2\n      swap1\n      dup1\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap4\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup4\n      dup1\n      dup3\n      dup5\n      calldatacopy\n      0x00\n      dup2\n      dup5\n      add\n      mstore\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      swap1\n      pop\n      dup1\n      dup4\n      add\n      swap3\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap2\n      swap3\n      swap2\n      swap3\n      swap1\n      pop\n      pop\n      pop\n      tag_9\n      jump\t// in\n    tag_4:\n      mload(0x40)\n      dup1\n      dup5\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      0xffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap4\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n    tag_9:\n        /* \"contracts/getpool.sol\":237:251  address tokenA */\n      0x00\n        /* \"contracts/getpool.sol\":265:279  address tokenB */\n      dup1\n        /* \"contracts/getpool.sol\":293:303  uint24 fee */\n      0x00\n        /* \"contracts/getpool.sol\":331:353  pool.decodeFirstPool() */\n      tag_11\n        /* \"contracts/getpool.sol\":331:335  pool */\n      dup5\n        /* \"contracts/getpool.sol\":331:351  pool.decodeFirstPool */\n      tag_12\n        /* \"contracts/getpool.sol\":331:353  pool.decodeFirstPool() */\n      jump\t// in\n    tag_11:\n        /* \"contracts/getpool.sol\":324:353  return pool.decodeFirstPool() */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      pop\n        /* \"contracts/getpool.sol\":168:360  function decode(bytes memory pool) public view returns (... */\n      swap2\n      swap4\n      swap1\n      swap3\n      pop\n      jump\t// out\n        /* \"@uniswap/v3-periphery/contracts/libraries/Path.sol\":1779:2093  function decodeFirstPool(bytes memory path)... */\n    tag_12:\n        /* \"@uniswap/v3-periphery/contracts/libraries/Path.sol\":1883:1897  address tokenA */\n      0x00\n        /* \"@uniswap/v3-periphery/contracts/libraries/Path.sol\":1911:1925  address tokenB */\n      dup1\n        /* \"@uniswap/v3-periphery/contracts/libraries/Path.sol\":1939:1949  uint24 fee */\n      0x00\n        /* \"@uniswap/v3-periphery/contracts/libraries/Path.sol\":1983:2000  path.toAddress(0) */\n      tag_14\n        /* \"@uniswap/v3-periphery/contracts/libraries/Path.sol\":1998:1999  0 */\n      0x00\n        /* \"@uniswap/v3-periphery/contracts/libraries/Path.sol\":1983:1987  path */\n      dup6\n        /* \"@uniswap/v3-periphery/contracts/libraries/Path.sol\":1983:1997  path.toAddress */\n      tag_15\n      swap1\n        /* \"@uniswap/v3-periphery/contracts/libraries/Path.sol\":1983:2000  path.toAddress(0) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_14:\n        /* \"@uniswap/v3-periphery/contracts/libraries/Path.sol\":1974:2000  tokenA = path.toAddress(0) */\n      swap3\n      pop\n        /* \"@uniswap/v3-periphery/contracts/libraries/Path.sol\":2016:2040  path.toUint24(ADDR_SIZE) */\n      tag_16\n        /* \"@uniswap/v3-periphery/contracts/libraries/Path.sol\":304:306  20 */\n      0x14\n        /* \"@uniswap/v3-periphery/contracts/libraries/Path.sol\":2016:2020  path */\n      dup6\n        /* \"@uniswap/v3-periphery/contracts/libraries/Path.sol\":2016:2029  path.toUint24 */\n      tag_17\n      swap1\n        /* \"@uniswap/v3-periphery/contracts/libraries/Path.sol\":2016:2040  path.toUint24(ADDR_SIZE) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_16:\n        /* \"@uniswap/v3-periphery/contracts/libraries/Path.sol\":2010:2040  fee = path.toUint24(ADDR_SIZE) */\n      swap1\n      pop\n        /* \"@uniswap/v3-periphery/contracts/libraries/Path.sol\":2059:2086  path.toAddress(NEXT_OFFSET) */\n      tag_18\n        /* \"@uniswap/v3-periphery/contracts/libraries/Path.sol\":397:398  3 */\n      0x03\n        /* \"@uniswap/v3-periphery/contracts/libraries/Path.sol\":304:306  20 */\n      0x14\n        /* \"@uniswap/v3-periphery/contracts/libraries/Path.sol\":507:527  ADDR_SIZE + FEE_SIZE */\n      add\n        /* \"@uniswap/v3-periphery/contracts/libraries/Path.sol\":2059:2063  path */\n      dup6\n        /* \"@uniswap/v3-periphery/contracts/libraries/Path.sol\":2059:2073  path.toAddress */\n      tag_15\n      swap1\n        /* \"@uniswap/v3-periphery/contracts/libraries/Path.sol\":2059:2086  path.toAddress(NEXT_OFFSET) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_18:\n        /* \"@uniswap/v3-periphery/contracts/libraries/Path.sol\":2050:2086  tokenB = path.toAddress(NEXT_OFFSET) */\n      swap2\n      pop\n        /* \"@uniswap/v3-periphery/contracts/libraries/Path.sol\":1779:2093  function decodeFirstPool(bytes memory path)... */\n      swap2\n      swap4\n      swap1\n      swap3\n      pop\n      jump\t// out\n        /* \"@uniswap/v3-periphery/contracts/libraries/BytesLib.sol\":3412:3828  function toAddress(bytes memory _bytes, uint256 _start) internal pure returns (address) {... */\n    tag_15:\n        /* \"@uniswap/v3-periphery/contracts/libraries/BytesLib.sol\":3491:3498  address */\n      0x00\n        /* \"@uniswap/v3-periphery/contracts/libraries/BytesLib.sol\":3533:3539  _start */\n      dup2\n        /* \"@uniswap/v3-periphery/contracts/libraries/BytesLib.sol\":3527:3529  20 */\n      0x14\n        /* \"@uniswap/v3-periphery/contracts/libraries/BytesLib.sol\":3518:3524  _start */\n      dup4\n        /* \"@uniswap/v3-periphery/contracts/libraries/BytesLib.sol\":3518:3529  _start + 20 */\n      add\n        /* \"@uniswap/v3-periphery/contracts/libraries/BytesLib.sol\":3518:3539  _start + 20 >= _start */\n      lt\n      iszero\n        /* \"@uniswap/v3-periphery/contracts/libraries/BytesLib.sol\":3510:3562  require(_start + 20 >= _start, 'toAddress_overflow') */\n      tag_20\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x12\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x746f416464726573735f6f766572666c6f770000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_20:\n        /* \"@uniswap/v3-periphery/contracts/libraries/BytesLib.sol\":3606:3608  20 */\n      0x14\n        /* \"@uniswap/v3-periphery/contracts/libraries/BytesLib.sol\":3597:3603  _start */\n      dup3\n        /* \"@uniswap/v3-periphery/contracts/libraries/BytesLib.sol\":3597:3608  _start + 20 */\n      add\n        /* \"@uniswap/v3-periphery/contracts/libraries/BytesLib.sol\":3580:3586  _bytes */\n      dup4\n        /* \"@uniswap/v3-periphery/contracts/libraries/BytesLib.sol\":3580:3593  _bytes.length */\n      mload\n        /* \"@uniswap/v3-periphery/contracts/libraries/BytesLib.sol\":3580:3608  _bytes.length >= _start + 20 */\n      lt\n      iszero\n        /* \"@uniswap/v3-periphery/contracts/libraries/BytesLib.sol\":3572:3634  require(_bytes.length >= _start + 20, 'toAddress_outOfBounds') */\n      tag_21\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x15\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x746f416464726573735f6f75744f66426f756e64730000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_21:\n        /* \"@uniswap/v3-periphery/contracts/libraries/BytesLib.sol\":3644:3663  address tempAddress */\n      0x00\n        /* \"@uniswap/v3-periphery/contracts/libraries/BytesLib.sol\":3755:3782  0x1000000000000000000000000 */\n      0x01000000000000000000000000\n        /* \"@uniswap/v3-periphery/contracts/libraries/BytesLib.sol\":3745:3751  _start */\n      dup4\n        /* \"@uniswap/v3-periphery/contracts/libraries/BytesLib.sol\":3738:3742  0x20 */\n      0x20\n        /* \"@uniswap/v3-periphery/contracts/libraries/BytesLib.sol\":3730:3736  _bytes */\n      dup7\n        /* \"@uniswap/v3-periphery/contracts/libraries/BytesLib.sol\":3726:3743  add(_bytes, 0x20) */\n      add\n        /* \"@uniswap/v3-periphery/contracts/libraries/BytesLib.sol\":3722:3752  add(add(_bytes, 0x20), _start) */\n      add\n        /* \"@uniswap/v3-periphery/contracts/libraries/BytesLib.sol\":3716:3753  mload(add(add(_bytes, 0x20), _start)) */\n      mload\n        /* \"@uniswap/v3-periphery/contracts/libraries/BytesLib.sol\":3712:3783  div(mload(add(add(_bytes, 0x20), _start)), 0x1000000000000000000000000) */\n      div\n        /* \"@uniswap/v3-periphery/contracts/libraries/BytesLib.sol\":3697:3783  tempAddress := div(mload(add(add(_bytes, 0x20), _start)), 0x1000000000000000000000000) */\n      swap1\n      pop\n        /* \"@uniswap/v3-periphery/contracts/libraries/BytesLib.sol\":3810:3821  tempAddress */\n      dup1\n        /* \"@uniswap/v3-periphery/contracts/libraries/BytesLib.sol\":3803:3821  return tempAddress */\n      swap2\n      pop\n      pop\n        /* \"@uniswap/v3-periphery/contracts/libraries/BytesLib.sol\":3412:3828  function toAddress(bytes memory _bytes, uint256 _start) internal pure returns (address) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@uniswap/v3-periphery/contracts/libraries/BytesLib.sol\":3834:4199  function toUint24(bytes memory _bytes, uint256 _start) internal pure returns (uint24) {... */\n    tag_17:\n        /* \"@uniswap/v3-periphery/contracts/libraries/BytesLib.sol\":3912:3918  uint24 */\n      0x00\n        /* \"@uniswap/v3-periphery/contracts/libraries/BytesLib.sol\":3952:3958  _start */\n      dup2\n        /* \"@uniswap/v3-periphery/contracts/libraries/BytesLib.sol\":3947:3948  3 */\n      0x03\n        /* \"@uniswap/v3-periphery/contracts/libraries/BytesLib.sol\":3938:3944  _start */\n      dup4\n        /* \"@uniswap/v3-periphery/contracts/libraries/BytesLib.sol\":3938:3948  _start + 3 */\n      add\n        /* \"@uniswap/v3-periphery/contracts/libraries/BytesLib.sol\":3938:3958  _start + 3 >= _start */\n      lt\n      iszero\n        /* \"@uniswap/v3-periphery/contracts/libraries/BytesLib.sol\":3930:3980  require(_start + 3 >= _start, 'toUint24_overflow') */\n      tag_23\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x11\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x746f55696e7432345f6f766572666c6f77000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_23:\n        /* \"@uniswap/v3-periphery/contracts/libraries/BytesLib.sol\":4024:4025  3 */\n      0x03\n        /* \"@uniswap/v3-periphery/contracts/libraries/BytesLib.sol\":4015:4021  _start */\n      dup3\n        /* \"@uniswap/v3-periphery/contracts/libraries/BytesLib.sol\":4015:4025  _start + 3 */\n      add\n        /* \"@uniswap/v3-periphery/contracts/libraries/BytesLib.sol\":3998:4004  _bytes */\n      dup4\n        /* \"@uniswap/v3-periphery/contracts/libraries/BytesLib.sol\":3998:4011  _bytes.length */\n      mload\n        /* \"@uniswap/v3-periphery/contracts/libraries/BytesLib.sol\":3998:4025  _bytes.length >= _start + 3 */\n      lt\n      iszero\n        /* \"@uniswap/v3-periphery/contracts/libraries/BytesLib.sol\":3990:4050  require(_bytes.length >= _start + 3, 'toUint24_outOfBounds') */\n      tag_24\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x14\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x746f55696e7432345f6f75744f66426f756e6473000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_24:\n        /* \"@uniswap/v3-periphery/contracts/libraries/BytesLib.sol\":4060:4075  uint24 tempUint */\n      0x00\n        /* \"@uniswap/v3-periphery/contracts/libraries/BytesLib.sol\":4149:4155  _start */\n      dup3\n        /* \"@uniswap/v3-periphery/contracts/libraries/BytesLib.sol\":4143:4146  0x3 */\n      0x03\n        /* \"@uniswap/v3-periphery/contracts/libraries/BytesLib.sol\":4135:4141  _bytes */\n      dup6\n        /* \"@uniswap/v3-periphery/contracts/libraries/BytesLib.sol\":4131:4147  add(_bytes, 0x3) */\n      add\n        /* \"@uniswap/v3-periphery/contracts/libraries/BytesLib.sol\":4127:4156  add(add(_bytes, 0x3), _start) */\n      add\n        /* \"@uniswap/v3-periphery/contracts/libraries/BytesLib.sol\":4121:4157  mload(add(add(_bytes, 0x3), _start)) */\n      mload\n        /* \"@uniswap/v3-periphery/contracts/libraries/BytesLib.sol\":4109:4157  tempUint := mload(add(add(_bytes, 0x3), _start)) */\n      swap1\n      pop\n        /* \"@uniswap/v3-periphery/contracts/libraries/BytesLib.sol\":4184:4192  tempUint */\n      dup1\n        /* \"@uniswap/v3-periphery/contracts/libraries/BytesLib.sol\":4177:4192  return tempUint */\n      swap2\n      pop\n      pop\n        /* \"@uniswap/v3-periphery/contracts/libraries/BytesLib.sol\":3834:4199  function toUint24(bytes memory _bytes, uint256 _start) internal pure returns (uint24) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212206703bd0e20efa19b8b3a31cbaf46760ecc43ab58239237ce940cc6a402991de664736f6c63430007060033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50610403806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063e5c5e9a314610030575b600080fd5b6100e96004803603602081101561004657600080fd5b810190808035906020019064010000000081111561006357600080fd5b82018360208201111561007557600080fd5b8035906020019184600183028401116401000000008311171561009757600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929050505061013e565b604051808473ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1681526020018262ffffff168152602001935050505060405180910390f35b600080600061014c84610159565b9250925092509193909250565b60008060006101726000856101aa90919063ffffffff16565b92506101886014856102c390919063ffffffff16565b90506101a16003601401856101aa90919063ffffffff16565b91509193909250565b600081601483011015610225576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f746f416464726573735f6f766572666c6f77000000000000000000000000000081525060200191505060405180910390fd5b601482018351101561029f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f746f416464726573735f6f75744f66426f756e6473000000000000000000000081525060200191505060405180910390fd5b60006c01000000000000000000000000836020860101510490508091505092915050565b60008160038301101561033e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f746f55696e7432345f6f766572666c6f7700000000000000000000000000000081525060200191505060405180910390fd5b60038201835110156103b8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f746f55696e7432345f6f75744f66426f756e647300000000000000000000000081525060200191505060405180910390fd5b6000826003850101519050809150509291505056fea26469706673582212206703bd0e20efa19b8b3a31cbaf46760ecc43ab58239237ce940cc6a402991de664736f6c63430007060033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x403 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xE5C5E9A3 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE9 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x46 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x63 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x75 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x97 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 POP POP POP PUSH2 0x13E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH3 0xFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x14C DUP5 PUSH2 0x159 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP SWAP2 SWAP4 SWAP1 SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x172 PUSH1 0x0 DUP6 PUSH2 0x1AA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP3 POP PUSH2 0x188 PUSH1 0x14 DUP6 PUSH2 0x2C3 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x1A1 PUSH1 0x3 PUSH1 0x14 ADD DUP6 PUSH2 0x1AA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP SWAP2 SWAP4 SWAP1 SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x14 DUP4 ADD LT ISZERO PUSH2 0x225 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x746F416464726573735F6F766572666C6F770000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x14 DUP3 ADD DUP4 MLOAD LT ISZERO PUSH2 0x29F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x15 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x746F416464726573735F6F75744F66426F756E64730000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH13 0x1000000000000000000000000 DUP4 PUSH1 0x20 DUP7 ADD ADD MLOAD DIV SWAP1 POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x3 DUP4 ADD LT ISZERO PUSH2 0x33E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x11 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x746F55696E7432345F6F766572666C6F77000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 DUP3 ADD DUP4 MLOAD LT ISZERO PUSH2 0x3B8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x14 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x746F55696E7432345F6F75744F66426F756E6473000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x3 DUP6 ADD ADD MLOAD SWAP1 POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH8 0x3BD0E20EFA19B8B GASPRICE BALANCE 0xCB 0xAF CHAINID PUSH23 0xECC43AB58239237CE940CC6A402991DE664736F6C6343 STOP SMOD MOD STOP CALLER ",
							"sourceMap": "121:241:2:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061002b5760003560e01c8063e5c5e9a314610030575b600080fd5b6100e96004803603602081101561004657600080fd5b810190808035906020019064010000000081111561006357600080fd5b82018360208201111561007557600080fd5b8035906020019184600183028401116401000000008311171561009757600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929050505061013e565b604051808473ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1681526020018262ffffff168152602001935050505060405180910390f35b600080600061014c84610159565b9250925092509193909250565b60008060006101726000856101aa90919063ffffffff16565b92506101886014856102c390919063ffffffff16565b90506101a16003601401856101aa90919063ffffffff16565b91509193909250565b600081601483011015610225576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f746f416464726573735f6f766572666c6f77000000000000000000000000000081525060200191505060405180910390fd5b601482018351101561029f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f746f416464726573735f6f75744f66426f756e6473000000000000000000000081525060200191505060405180910390fd5b60006c01000000000000000000000000836020860101510490508091505092915050565b60008160038301101561033e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f746f55696e7432345f6f766572666c6f7700000000000000000000000000000081525060200191505060405180910390fd5b60038201835110156103b8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f746f55696e7432345f6f75744f66426f756e647300000000000000000000000081525060200191505060405180910390fd5b6000826003850101519050809150509291505056fea26469706673582212206703bd0e20efa19b8b3a31cbaf46760ecc43ab58239237ce940cc6a402991de664736f6c63430007060033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xE5C5E9A3 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE9 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x46 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x63 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x75 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x97 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP POP POP POP POP SWAP2 SWAP3 SWAP2 SWAP3 SWAP1 POP POP POP PUSH2 0x13E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH3 0xFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x14C DUP5 PUSH2 0x159 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP SWAP2 SWAP4 SWAP1 SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x172 PUSH1 0x0 DUP6 PUSH2 0x1AA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP3 POP PUSH2 0x188 PUSH1 0x14 DUP6 PUSH2 0x2C3 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x1A1 PUSH1 0x3 PUSH1 0x14 ADD DUP6 PUSH2 0x1AA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP SWAP2 SWAP4 SWAP1 SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x14 DUP4 ADD LT ISZERO PUSH2 0x225 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x746F416464726573735F6F766572666C6F770000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x14 DUP3 ADD DUP4 MLOAD LT ISZERO PUSH2 0x29F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x15 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x746F416464726573735F6F75744F66426F756E64730000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH13 0x1000000000000000000000000 DUP4 PUSH1 0x20 DUP7 ADD ADD MLOAD DIV SWAP1 POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x3 DUP4 ADD LT ISZERO PUSH2 0x33E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x11 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x746F55696E7432345F6F766572666C6F77000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 DUP3 ADD DUP4 MLOAD LT ISZERO PUSH2 0x3B8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x14 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x746F55696E7432345F6F75744F66426F756E6473000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x3 DUP6 ADD ADD MLOAD SWAP1 POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH8 0x3BD0E20EFA19B8B GASPRICE BALANCE 0xCB 0xAF CHAINID PUSH23 0xECC43AB58239237CE940CC6A402991DE664736F6C6343 STOP SMOD MOD STOP CALLER ",
							"sourceMap": "121:241:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;168:192;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;237:14;265;293:10;331:22;:4;:20;:22::i;:::-;324:29;;;;;;168:192;;;;;:::o;1779:314:1:-;1883:14;1911;1939:10;1983:17;1998:1;1983:4;:14;;:17;;;;:::i;:::-;1974:26;;2016:24;304:2;2016:4;:13;;:24;;;;:::i;:::-;2010:30;;2059:27;397:1;304:2;507:20;2059:4;:14;;:27;;;;:::i;:::-;2050:36;;1779:314;;;;;:::o;3412:416:0:-;3491:7;3533:6;3527:2;3518:6;:11;:21;;3510:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3606:2;3597:6;:11;3580:6;:13;:28;;3572:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3644:19;3755:27;3745:6;3738:4;3730:6;3726:17;3722:30;3716:37;3712:71;3697:86;;3810:11;3803:18;;;3412:416;;;;:::o;3834:365::-;3912:6;3952;3947:1;3938:6;:10;:20;;3930:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4024:1;4015:6;:10;3998:6;:13;:27;;3990:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4060:15;4149:6;4143:3;4135:6;4131:16;4127:29;4121:36;4109:48;;4184:8;4177:15;;;3834:365;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "205400",
								"executionCost": "251",
								"totalCost": "205651"
							},
							"external": {
								"decode(bytes)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 121,
									"end": 362,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 121,
									"end": 362,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 121,
									"end": 362,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 121,
									"end": 362,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 121,
									"end": 362,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 121,
									"end": 362,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 121,
									"end": 362,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 121,
									"end": 362,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 121,
									"end": 362,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 121,
									"end": 362,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 121,
									"end": 362,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 121,
									"end": 362,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 121,
									"end": 362,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 121,
									"end": 362,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 121,
									"end": 362,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 121,
									"end": 362,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 121,
									"end": 362,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 121,
									"end": 362,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 121,
									"end": 362,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 121,
									"end": 362,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 121,
									"end": 362,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212206703bd0e20efa19b8b3a31cbaf46760ecc43ab58239237ce940cc6a402991de664736f6c63430007060033",
									".code": [
										{
											"begin": 121,
											"end": 362,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 121,
											"end": 362,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 121,
											"end": 362,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 121,
											"end": 362,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 121,
											"end": 362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 121,
											"end": 362,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 121,
											"end": 362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 121,
											"end": 362,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 121,
											"end": 362,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 121,
											"end": 362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 121,
											"end": 362,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 121,
											"end": 362,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 121,
											"end": 362,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 121,
											"end": 362,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 121,
											"end": 362,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 121,
											"end": 362,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 121,
											"end": 362,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 121,
											"end": 362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 121,
											"end": 362,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 121,
											"end": 362,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 121,
											"end": 362,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 121,
											"end": 362,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 121,
											"end": 362,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 121,
											"end": 362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 121,
											"end": 362,
											"name": "PUSH",
											"source": 2,
											"value": "E5C5E9A3"
										},
										{
											"begin": 121,
											"end": 362,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 121,
											"end": 362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 121,
											"end": 362,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 121,
											"end": 362,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 121,
											"end": 362,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 121,
											"end": 362,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 121,
											"end": 362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 121,
											"end": 362,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 168,
											"end": 360,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 168,
											"end": 360,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 168,
											"end": 360,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 168,
											"end": 360,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 168,
											"end": 360,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 168,
											"end": 360,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 168,
											"end": 360,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 168,
											"end": 360,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 168,
											"end": 360,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 168,
											"end": 360,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 168,
											"end": 360,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 168,
											"end": 360,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 168,
											"end": 360,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 168,
											"end": 360,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 168,
											"end": 360,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 168,
											"end": 360,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 168,
											"end": 360,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 168,
											"end": 360,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 168,
											"end": 360,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 168,
											"end": 360,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 168,
											"end": 360,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 168,
											"end": 360,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 168,
											"end": 360,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 168,
											"end": 360,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 168,
											"end": 360,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 168,
											"end": 360,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 168,
											"end": 360,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 168,
											"end": 360,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 168,
											"end": 360,
											"name": "PUSH",
											"source": 2,
											"value": "100000000"
										},
										{
											"begin": 168,
											"end": 360,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 168,
											"end": 360,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 168,
											"end": 360,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 168,
											"end": 360,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 168,
											"end": 360,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 168,
											"end": 360,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 168,
											"end": 360,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 168,
											"end": 360,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 168,
											"end": 360,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 168,
											"end": 360,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 168,
											"end": 360,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 168,
											"end": 360,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 168,
											"end": 360,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 168,
											"end": 360,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 168,
											"end": 360,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 168,
											"end": 360,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 168,
											"end": 360,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 168,
											"end": 360,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 168,
											"end": 360,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 168,
											"end": 360,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 168,
											"end": 360,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 168,
											"end": 360,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 168,
											"end": 360,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 168,
											"end": 360,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 168,
											"end": 360,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 168,
											"end": 360,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 168,
											"end": 360,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 168,
											"end": 360,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 168,
											"end": 360,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 168,
											"end": 360,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 168,
											"end": 360,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 168,
											"end": 360,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 168,
											"end": 360,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 168,
											"end": 360,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 168,
											"end": 360,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 168,
											"end": 360,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 168,
											"end": 360,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 168,
											"end": 360,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 168,
											"end": 360,
											"name": "PUSH",
											"source": 2,
											"value": "100000000"
										},
										{
											"begin": 168,
											"end": 360,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 168,
											"end": 360,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 168,
											"end": 360,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 168,
											"end": 360,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 168,
											"end": 360,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 168,
											"end": 360,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 168,
											"end": 360,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 168,
											"end": 360,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 168,
											"end": 360,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 168,
											"end": 360,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 168,
											"end": 360,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 168,
											"end": 360,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 168,
											"end": 360,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 168,
											"end": 360,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 168,
											"end": 360,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 168,
											"end": 360,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 168,
											"end": 360,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 168,
											"end": 360,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 168,
											"end": 360,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 168,
											"end": 360,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 168,
											"end": 360,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 168,
											"end": 360,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 168,
											"end": 360,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 168,
											"end": 360,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 168,
											"end": 360,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 168,
											"end": 360,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 168,
											"end": 360,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 168,
											"end": 360,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 168,
											"end": 360,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 168,
											"end": 360,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 168,
											"end": 360,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 168,
											"end": 360,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 168,
											"end": 360,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 168,
											"end": 360,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 168,
											"end": 360,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 168,
											"end": 360,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 168,
											"end": 360,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 168,
											"end": 360,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 168,
											"end": 360,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 168,
											"end": 360,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 168,
											"end": 360,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 168,
											"end": 360,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 168,
											"end": 360,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 168,
											"end": 360,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 168,
											"end": 360,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 168,
											"end": 360,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 168,
											"end": 360,
											"name": "CALLDATACOPY",
											"source": 2
										},
										{
											"begin": 168,
											"end": 360,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 168,
											"end": 360,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 168,
											"end": 360,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 168,
											"end": 360,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 168,
											"end": 360,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 168,
											"end": 360,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 168,
											"end": 360,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 168,
											"end": 360,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 168,
											"end": 360,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 168,
											"end": 360,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 168,
											"end": 360,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 168,
											"end": 360,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 168,
											"end": 360,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 168,
											"end": 360,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 168,
											"end": 360,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 168,
											"end": 360,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 168,
											"end": 360,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 168,
											"end": 360,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 168,
											"end": 360,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 168,
											"end": 360,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 168,
											"end": 360,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 168,
											"end": 360,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 168,
											"end": 360,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 168,
											"end": 360,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 168,
											"end": 360,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 168,
											"end": 360,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 168,
											"end": 360,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 168,
											"end": 360,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 168,
											"end": 360,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 168,
											"end": 360,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 168,
											"end": 360,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 168,
											"end": 360,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 168,
											"end": 360,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 168,
											"end": 360,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 168,
											"end": 360,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 168,
											"end": 360,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 168,
											"end": 360,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 168,
											"end": 360,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 168,
											"end": 360,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 168,
											"end": 360,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 168,
											"end": 360,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 168,
											"end": 360,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 168,
											"end": 360,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 168,
											"end": 360,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 168,
											"end": 360,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 168,
											"end": 360,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 168,
											"end": 360,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 168,
											"end": 360,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 168,
											"end": 360,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 168,
											"end": 360,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 168,
											"end": 360,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 168,
											"end": 360,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 168,
											"end": 360,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 168,
											"end": 360,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 168,
											"end": 360,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFF"
										},
										{
											"begin": 168,
											"end": 360,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 168,
											"end": 360,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 168,
											"end": 360,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 168,
											"end": 360,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 168,
											"end": 360,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 168,
											"end": 360,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 168,
											"end": 360,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 168,
											"end": 360,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 168,
											"end": 360,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 168,
											"end": 360,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 168,
											"end": 360,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 168,
											"end": 360,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 168,
											"end": 360,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 168,
											"end": 360,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 168,
											"end": 360,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 168,
											"end": 360,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 168,
											"end": 360,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 168,
											"end": 360,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 168,
											"end": 360,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 237,
											"end": 251,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 265,
											"end": 279,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 293,
											"end": 303,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 331,
											"end": 353,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 331,
											"end": 335,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 331,
											"end": 351,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 331,
											"end": 353,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 331,
											"end": 353,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 331,
											"end": 353,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 324,
											"end": 353,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 324,
											"end": 353,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 324,
											"end": 353,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 324,
											"end": 353,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 324,
											"end": 353,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 324,
											"end": 353,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 168,
											"end": 360,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 168,
											"end": 360,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 168,
											"end": 360,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 168,
											"end": 360,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 168,
											"end": 360,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 168,
											"end": 360,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1779,
											"end": 2093,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 1779,
											"end": 2093,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1883,
											"end": 1897,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1911,
											"end": 1925,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1939,
											"end": 1949,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1983,
											"end": 2000,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 1998,
											"end": 1999,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1983,
											"end": 1987,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1983,
											"end": 1997,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 1983,
											"end": 1997,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1983,
											"end": 2000,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1983,
											"end": 2000,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1983,
											"end": 2000,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1983,
											"end": 2000,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1983,
											"end": 2000,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1983,
											"end": 2000,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 1983,
											"end": 2000,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1974,
											"end": 2000,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1974,
											"end": 2000,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2016,
											"end": 2040,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 304,
											"end": 306,
											"name": "PUSH",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 2016,
											"end": 2020,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2016,
											"end": 2029,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 2016,
											"end": 2029,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2016,
											"end": 2040,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2016,
											"end": 2040,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2016,
											"end": 2040,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2016,
											"end": 2040,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2016,
											"end": 2040,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2016,
											"end": 2040,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 2016,
											"end": 2040,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2040,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2040,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2059,
											"end": 2086,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 397,
											"end": 398,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 304,
											"end": 306,
											"name": "PUSH",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 507,
											"end": 527,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2059,
											"end": 2063,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2059,
											"end": 2073,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 2059,
											"end": 2073,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2059,
											"end": 2086,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2059,
											"end": 2086,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2059,
											"end": 2086,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2059,
											"end": 2086,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2059,
											"end": 2086,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2059,
											"end": 2086,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 2059,
											"end": 2086,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2050,
											"end": 2086,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2050,
											"end": 2086,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1779,
											"end": 2093,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1779,
											"end": 2093,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1779,
											"end": 2093,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1779,
											"end": 2093,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1779,
											"end": 2093,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1779,
											"end": 2093,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3412,
											"end": 3828,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 3412,
											"end": 3828,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3491,
											"end": 3498,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3533,
											"end": 3539,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3527,
											"end": 3529,
											"name": "PUSH",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 3518,
											"end": 3524,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3518,
											"end": 3529,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3518,
											"end": 3539,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 3518,
											"end": 3539,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3510,
											"end": 3562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3510,
											"end": 3562,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3510,
											"end": 3562,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3510,
											"end": 3562,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3510,
											"end": 3562,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3510,
											"end": 3562,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3510,
											"end": 3562,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3510,
											"end": 3562,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3510,
											"end": 3562,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3510,
											"end": 3562,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3510,
											"end": 3562,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3510,
											"end": 3562,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3510,
											"end": 3562,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3510,
											"end": 3562,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3510,
											"end": 3562,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3510,
											"end": 3562,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3510,
											"end": 3562,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3510,
											"end": 3562,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3510,
											"end": 3562,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 3510,
											"end": 3562,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3510,
											"end": 3562,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3510,
											"end": 3562,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3510,
											"end": 3562,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3510,
											"end": 3562,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3510,
											"end": 3562,
											"name": "PUSH",
											"source": 0,
											"value": "746F416464726573735F6F766572666C6F770000000000000000000000000000"
										},
										{
											"begin": 3510,
											"end": 3562,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3510,
											"end": 3562,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3510,
											"end": 3562,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3510,
											"end": 3562,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3510,
											"end": 3562,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3510,
											"end": 3562,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3510,
											"end": 3562,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3510,
											"end": 3562,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3510,
											"end": 3562,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3510,
											"end": 3562,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3510,
											"end": 3562,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3510,
											"end": 3562,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3510,
											"end": 3562,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3510,
											"end": 3562,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3510,
											"end": 3562,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3510,
											"end": 3562,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3510,
											"end": 3562,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3606,
											"end": 3608,
											"name": "PUSH",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 3597,
											"end": 3603,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3597,
											"end": 3608,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3580,
											"end": 3586,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3580,
											"end": 3593,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3580,
											"end": 3608,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 3580,
											"end": 3608,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3572,
											"end": 3634,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 3572,
											"end": 3634,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3572,
											"end": 3634,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3572,
											"end": 3634,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3572,
											"end": 3634,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3572,
											"end": 3634,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3572,
											"end": 3634,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3572,
											"end": 3634,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3572,
											"end": 3634,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3572,
											"end": 3634,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3572,
											"end": 3634,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3572,
											"end": 3634,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3572,
											"end": 3634,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3572,
											"end": 3634,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3572,
											"end": 3634,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3572,
											"end": 3634,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3572,
											"end": 3634,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3572,
											"end": 3634,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3572,
											"end": 3634,
											"name": "PUSH",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 3572,
											"end": 3634,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3572,
											"end": 3634,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3572,
											"end": 3634,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3572,
											"end": 3634,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3572,
											"end": 3634,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3572,
											"end": 3634,
											"name": "PUSH",
											"source": 0,
											"value": "746F416464726573735F6F75744F66426F756E64730000000000000000000000"
										},
										{
											"begin": 3572,
											"end": 3634,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3572,
											"end": 3634,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3572,
											"end": 3634,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3572,
											"end": 3634,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3572,
											"end": 3634,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3572,
											"end": 3634,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3572,
											"end": 3634,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3572,
											"end": 3634,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3572,
											"end": 3634,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3572,
											"end": 3634,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3572,
											"end": 3634,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3572,
											"end": 3634,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3572,
											"end": 3634,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3572,
											"end": 3634,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3572,
											"end": 3634,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3572,
											"end": 3634,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 3572,
											"end": 3634,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3644,
											"end": 3663,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3755,
											"end": 3782,
											"name": "PUSH",
											"source": 0,
											"value": "1000000000000000000000000"
										},
										{
											"begin": 3745,
											"end": 3751,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3738,
											"end": 3742,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3730,
											"end": 3736,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 3726,
											"end": 3743,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3722,
											"end": 3752,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3716,
											"end": 3753,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3712,
											"end": 3783,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3697,
											"end": 3783,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3697,
											"end": 3783,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3810,
											"end": 3821,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3803,
											"end": 3821,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3803,
											"end": 3821,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3803,
											"end": 3821,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3412,
											"end": 3828,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3412,
											"end": 3828,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3412,
											"end": 3828,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3412,
											"end": 3828,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3412,
											"end": 3828,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3834,
											"end": 4199,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 3834,
											"end": 4199,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3912,
											"end": 3918,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3958,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3947,
											"end": 3948,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 3938,
											"end": 3944,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3938,
											"end": 3948,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3938,
											"end": 3958,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 3938,
											"end": 3958,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3930,
											"end": 3980,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 3930,
											"end": 3980,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3930,
											"end": 3980,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3930,
											"end": 3980,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3930,
											"end": 3980,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3930,
											"end": 3980,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3930,
											"end": 3980,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3930,
											"end": 3980,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3930,
											"end": 3980,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3930,
											"end": 3980,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3930,
											"end": 3980,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3930,
											"end": 3980,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3930,
											"end": 3980,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3930,
											"end": 3980,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3930,
											"end": 3980,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3930,
											"end": 3980,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3930,
											"end": 3980,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3930,
											"end": 3980,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3930,
											"end": 3980,
											"name": "PUSH",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 3930,
											"end": 3980,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3930,
											"end": 3980,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3930,
											"end": 3980,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3930,
											"end": 3980,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3930,
											"end": 3980,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3930,
											"end": 3980,
											"name": "PUSH",
											"source": 0,
											"value": "746F55696E7432345F6F766572666C6F77000000000000000000000000000000"
										},
										{
											"begin": 3930,
											"end": 3980,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3930,
											"end": 3980,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3930,
											"end": 3980,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3930,
											"end": 3980,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3930,
											"end": 3980,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3930,
											"end": 3980,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3930,
											"end": 3980,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3930,
											"end": 3980,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3930,
											"end": 3980,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3930,
											"end": 3980,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3930,
											"end": 3980,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3930,
											"end": 3980,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3930,
											"end": 3980,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3930,
											"end": 3980,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3930,
											"end": 3980,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3930,
											"end": 3980,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 3930,
											"end": 3980,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4024,
											"end": 4025,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 4015,
											"end": 4021,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4015,
											"end": 4025,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3998,
											"end": 4004,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3998,
											"end": 4011,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3998,
											"end": 4025,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 3998,
											"end": 4025,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3990,
											"end": 4050,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 3990,
											"end": 4050,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3990,
											"end": 4050,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3990,
											"end": 4050,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3990,
											"end": 4050,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3990,
											"end": 4050,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3990,
											"end": 4050,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3990,
											"end": 4050,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3990,
											"end": 4050,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3990,
											"end": 4050,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3990,
											"end": 4050,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3990,
											"end": 4050,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3990,
											"end": 4050,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3990,
											"end": 4050,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3990,
											"end": 4050,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3990,
											"end": 4050,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3990,
											"end": 4050,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3990,
											"end": 4050,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3990,
											"end": 4050,
											"name": "PUSH",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 3990,
											"end": 4050,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3990,
											"end": 4050,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3990,
											"end": 4050,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3990,
											"end": 4050,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3990,
											"end": 4050,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3990,
											"end": 4050,
											"name": "PUSH",
											"source": 0,
											"value": "746F55696E7432345F6F75744F66426F756E6473000000000000000000000000"
										},
										{
											"begin": 3990,
											"end": 4050,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3990,
											"end": 4050,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3990,
											"end": 4050,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3990,
											"end": 4050,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3990,
											"end": 4050,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3990,
											"end": 4050,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3990,
											"end": 4050,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3990,
											"end": 4050,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3990,
											"end": 4050,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3990,
											"end": 4050,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3990,
											"end": 4050,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3990,
											"end": 4050,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3990,
											"end": 4050,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3990,
											"end": 4050,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3990,
											"end": 4050,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3990,
											"end": 4050,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 3990,
											"end": 4050,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4060,
											"end": 4075,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4149,
											"end": 4155,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4143,
											"end": 4146,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 4135,
											"end": 4141,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4131,
											"end": 4147,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4127,
											"end": 4156,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4121,
											"end": 4157,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4109,
											"end": 4157,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4109,
											"end": 4157,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4184,
											"end": 4192,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4177,
											"end": 4192,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4177,
											"end": 4192,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4177,
											"end": 4192,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3834,
											"end": 4199,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3834,
											"end": 4199,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3834,
											"end": 4199,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3834,
											"end": 4199,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3834,
											"end": 4199,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"decode(bytes)": "e5c5e9a3"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"pool\",\"type\":\"bytes\"}],\"name\":\"decode\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/getpool.sol\":\"test\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-periphery/contracts/libraries/BytesLib.sol\":{\"keccak256\":\"0x68629e5b1a30b6490c6ae721c28117f6f963745462b007da0769758eb67f10d4\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://370e31ceab1a7504f98dec122f65d9b8c6fc6420fd8cdd171b3dd57c4d5d21fc\",\"dweb:/ipfs/QmcquKATbnopgs92RdM5bKewt7GdCpgGhVY4hxmv1KjnnH\"]},\"@uniswap/v3-periphery/contracts/libraries/Path.sol\":{\"keccak256\":\"0xb22c562b5175d50dbcc2224325666090d985f052abdcfe275c8dfc884e34de61\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://27aeff27314476ab3c77313ae1f0c5b2442b86315f5ce741cb2150a87c3cbad3\",\"dweb:/ipfs/QmQNno2g1CJvjnH6ych4LuHr1UZDEZPACgYG4XvivxGrqV\"]},\"contracts/getpool.sol\":{\"keccak256\":\"0xf9cf71d105e8f6dc7e517426ae279f507095fb7dea5dea0d4e181624f2484501\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ded99bfc4ce16081118b046638600f1d0ce17e809863235aab8ec3632b2ddab9\",\"dweb:/ipfs/QmZ1WVA4BUKXYFLBfW3qU8X7q69RKnhngsJgRtDpan9L5x\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "2018",
				"formattedMessage": "contracts/getpool.sol:10:5: Warning: Function state mutability can be restricted to pure\n    function decode(bytes memory pool) public view returns (\n    ^ (Relevant source part starts here and spans across multiple lines).\n",
				"message": "Function state mutability can be restricted to pure",
				"severity": "warning",
				"sourceLocation": {
					"end": 360,
					"file": "contracts/getpool.sol",
					"start": 168
				},
				"type": "Warning"
			}
		],
		"sources": {
			"@uniswap/v3-periphery/contracts/libraries/BytesLib.sol": {
				"ast": {
					"absolutePath": "@uniswap/v3-periphery/contracts/libraries/BytesLib.sol",
					"exportedSymbols": {
						"BytesLib": [
							118
						]
					},
					"id": 119,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "343:31:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 118,
							"linearizedBaseContracts": [
								118
							],
							"name": "BytesLib",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 46,
										"nodeType": "Block",
										"src": "535:2871:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 17,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 15,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 13,
																	"name": "_length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 7,
																	"src": "553:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"hexValue": "3331",
																	"id": 14,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "563:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_31_by_1",
																		"typeString": "int_const 31"
																	},
																	"value": "31"
																},
																"src": "553:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 16,
																"name": "_length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 7,
																"src": "569:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "553:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "736c6963655f6f766572666c6f77",
															"id": 18,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "578:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5d3d629f76473d94377d221b1f1c8f2161f7b65cab69e095662ec5d0e026c17e",
																"typeString": "literal_string \"slice_overflow\""
															},
															"value": "slice_overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5d3d629f76473d94377d221b1f1c8f2161f7b65cab69e095662ec5d0e026c17e",
																"typeString": "literal_string \"slice_overflow\""
															}
														],
														"id": 12,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "545:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 19,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "545:50:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 20,
												"nodeType": "ExpressionStatement",
												"src": "545:50:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 26,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 24,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 22,
																	"name": "_start",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 5,
																	"src": "613:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 23,
																	"name": "_length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 7,
																	"src": "622:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "613:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 25,
																"name": "_start",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5,
																"src": "633:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "613:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "736c6963655f6f766572666c6f77",
															"id": 27,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "641:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5d3d629f76473d94377d221b1f1c8f2161f7b65cab69e095662ec5d0e026c17e",
																"typeString": "literal_string \"slice_overflow\""
															},
															"value": "slice_overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5d3d629f76473d94377d221b1f1c8f2161f7b65cab69e095662ec5d0e026c17e",
																"typeString": "literal_string \"slice_overflow\""
															}
														],
														"id": 21,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "605:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 28,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "605:53:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 29,
												"nodeType": "ExpressionStatement",
												"src": "605:53:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 36,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 31,
																	"name": "_bytes",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3,
																	"src": "676:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																"id": 32,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "676:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 35,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 33,
																	"name": "_start",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 5,
																	"src": "693:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 34,
																	"name": "_length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 7,
																	"src": "702:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "693:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "676:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "736c6963655f6f75744f66426f756e6473",
															"id": 37,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "711:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cca2258dcc0d08c244435525255fbef9116c9a31b4c29471218f002bbbceb7a0",
																"typeString": "literal_string \"slice_outOfBounds\""
															},
															"value": "slice_outOfBounds"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cca2258dcc0d08c244435525255fbef9116c9a31b4c29471218f002bbbceb7a0",
																"typeString": "literal_string \"slice_outOfBounds\""
															}
														],
														"id": 30,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "668:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 38,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "668:63:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 39,
												"nodeType": "ExpressionStatement",
												"src": "668:63:0"
											},
											{
												"assignments": [
													41
												],
												"declarations": [
													{
														"constant": false,
														"id": 41,
														"mutability": "mutable",
														"name": "tempBytes",
														"nodeType": "VariableDeclaration",
														"scope": 46,
														"src": "742:22:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 40,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "742:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 42,
												"nodeType": "VariableDeclarationStatement",
												"src": "742:22:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "784:2589:0",
													"statements": [
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "844:2092:0",
																		"statements": [
																			{
																				"nodeType": "YulAssignment",
																				"src": "1012:24:0",
																				"value": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1031:4:0",
																							"type": "",
																							"value": "0x40"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1025:5:0"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1025:11:0"
																				},
																				"variableNames": [
																					{
																						"name": "tempBytes",
																						"nodeType": "YulIdentifier",
																						"src": "1012:9:0"
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "1696:33:0",
																				"value": {
																					"arguments": [
																						{
																							"name": "_length",
																							"nodeType": "YulIdentifier",
																							"src": "1717:7:0"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1726:2:0",
																							"type": "",
																							"value": "31"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "1713:3:0"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1713:16:0"
																				},
																				"variables": [
																					{
																						"name": "lengthmod",
																						"nodeType": "YulTypedName",
																						"src": "1700:9:0",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "2070:70:0",
																				"value": {
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "tempBytes",
																									"nodeType": "YulIdentifier",
																									"src": "2088:9:0"
																								},
																								{
																									"name": "lengthmod",
																									"nodeType": "YulIdentifier",
																									"src": "2099:9:0"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2084:3:0"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2084:25:0"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "2115:4:0",
																									"type": "",
																									"value": "0x20"
																								},
																								{
																									"arguments": [
																										{
																											"name": "lengthmod",
																											"nodeType": "YulIdentifier",
																											"src": "2128:9:0"
																										}
																									],
																									"functionName": {
																										"name": "iszero",
																										"nodeType": "YulIdentifier",
																										"src": "2121:6:0"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "2121:17:0"
																								}
																							],
																							"functionName": {
																								"name": "mul",
																								"nodeType": "YulIdentifier",
																								"src": "2111:3:0"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2111:28:0"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "2080:3:0"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2080:60:0"
																				},
																				"variables": [
																					{
																						"name": "mc",
																						"nodeType": "YulTypedName",
																						"src": "2074:2:0",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "2161:27:0",
																				"value": {
																					"arguments": [
																						{
																							"name": "mc",
																							"nodeType": "YulIdentifier",
																							"src": "2176:2:0"
																						},
																						{
																							"name": "_length",
																							"nodeType": "YulIdentifier",
																							"src": "2180:7:0"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "2172:3:0"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2172:16:0"
																				},
																				"variables": [
																					{
																						"name": "end",
																						"nodeType": "YulTypedName",
																						"src": "2165:3:0",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "2602:69:0",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "mc",
																										"nodeType": "YulIdentifier",
																										"src": "2635:2:0"
																									},
																									{
																										"arguments": [
																											{
																												"name": "cc",
																												"nodeType": "YulIdentifier",
																												"src": "2645:2:0"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nodeType": "YulIdentifier",
																											"src": "2639:5:0"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "2639:9:0"
																									}
																								],
																								"functionName": {
																									"name": "mstore",
																									"nodeType": "YulIdentifier",
																									"src": "2628:6:0"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2628:21:0"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "2628:21:0"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "mc",
																							"nodeType": "YulIdentifier",
																							"src": "2481:2:0"
																						},
																						{
																							"name": "end",
																							"nodeType": "YulIdentifier",
																							"src": "2485:3:0"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "2478:2:0"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2478:11:0"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "2490:111:0",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "2516:19:0",
																							"value": {
																								"arguments": [
																									{
																										"name": "mc",
																										"nodeType": "YulIdentifier",
																										"src": "2526:2:0"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "2530:4:0",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "2522:3:0"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2522:13:0"
																							},
																							"variableNames": [
																								{
																									"name": "mc",
																									"nodeType": "YulIdentifier",
																									"src": "2516:2:0"
																								}
																							]
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "2560:19:0",
																							"value": {
																								"arguments": [
																									{
																										"name": "cc",
																										"nodeType": "YulIdentifier",
																										"src": "2570:2:0"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "2574:4:0",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "2566:3:0"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2566:13:0"
																							},
																							"variableNames": [
																								{
																									"name": "cc",
																									"nodeType": "YulIdentifier",
																									"src": "2560:2:0"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "2214:263:0",
																					"statements": [
																						{
																							"nodeType": "YulVariableDeclaration",
																							"src": "2375:80:0",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "_bytes",
																														"nodeType": "YulIdentifier",
																														"src": "2397:6:0"
																													},
																													{
																														"name": "lengthmod",
																														"nodeType": "YulIdentifier",
																														"src": "2405:9:0"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nodeType": "YulIdentifier",
																													"src": "2393:3:0"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "2393:22:0"
																											},
																											{
																												"arguments": [
																													{
																														"kind": "number",
																														"nodeType": "YulLiteral",
																														"src": "2421:4:0",
																														"type": "",
																														"value": "0x20"
																													},
																													{
																														"arguments": [
																															{
																																"name": "lengthmod",
																																"nodeType": "YulIdentifier",
																																"src": "2434:9:0"
																															}
																														],
																														"functionName": {
																															"name": "iszero",
																															"nodeType": "YulIdentifier",
																															"src": "2427:6:0"
																														},
																														"nodeType": "YulFunctionCall",
																														"src": "2427:17:0"
																													}
																												],
																												"functionName": {
																													"name": "mul",
																													"nodeType": "YulIdentifier",
																													"src": "2417:3:0"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "2417:28:0"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "2389:3:0"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "2389:57:0"
																									},
																									{
																										"name": "_start",
																										"nodeType": "YulIdentifier",
																										"src": "2448:6:0"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "2385:3:0"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2385:70:0"
																							},
																							"variables": [
																								{
																									"name": "cc",
																									"nodeType": "YulTypedName",
																									"src": "2379:2:0",
																									"type": ""
																								}
																							]
																						}
																					]
																				},
																				"src": "2210:461:0"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "tempBytes",
																							"nodeType": "YulIdentifier",
																							"src": "2700:9:0"
																						},
																						{
																							"name": "_length",
																							"nodeType": "YulIdentifier",
																							"src": "2711:7:0"
																						}
																					],
																					"functionName": {
																						"name": "mstore",
																						"nodeType": "YulIdentifier",
																						"src": "2693:6:0"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2693:26:0"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "2693:26:0"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2886:4:0",
																							"type": "",
																							"value": "0x40"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "mc",
																											"nodeType": "YulIdentifier",
																											"src": "2900:2:0"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "2904:2:0",
																											"type": "",
																											"value": "31"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "2896:3:0"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "2896:11:0"
																								},
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "2913:2:0",
																											"type": "",
																											"value": "31"
																										}
																									],
																									"functionName": {
																										"name": "not",
																										"nodeType": "YulIdentifier",
																										"src": "2909:3:0"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "2909:7:0"
																								}
																							],
																							"functionName": {
																								"name": "and",
																								"nodeType": "YulIdentifier",
																								"src": "2892:3:0"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2892:25:0"
																						}
																					],
																					"functionName": {
																						"name": "mstore",
																						"nodeType": "YulIdentifier",
																						"src": "2879:6:0"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2879:39:0"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "2879:39:0"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "837:2099:0",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "842:1:0",
																		"type": "",
																		"value": "0"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3048:315:0",
																		"statements": [
																			{
																				"nodeType": "YulAssignment",
																				"src": "3070:24:0",
																				"value": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "3089:4:0",
																							"type": "",
																							"value": "0x40"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "3083:5:0"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3083:11:0"
																				},
																				"variableNames": [
																					{
																						"name": "tempBytes",
																						"nodeType": "YulIdentifier",
																						"src": "3070:9:0"
																					}
																				]
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "tempBytes",
																							"nodeType": "YulIdentifier",
																							"src": "3276:9:0"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "3287:1:0",
																							"type": "",
																							"value": "0"
																						}
																					],
																					"functionName": {
																						"name": "mstore",
																						"nodeType": "YulIdentifier",
																						"src": "3269:6:0"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3269:20:0"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "3269:20:0"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "3318:4:0",
																							"type": "",
																							"value": "0x40"
																						},
																						{
																							"arguments": [
																								{
																									"name": "tempBytes",
																									"nodeType": "YulIdentifier",
																									"src": "3328:9:0"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "3339:4:0",
																									"type": "",
																									"value": "0x20"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "3324:3:0"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3324:20:0"
																						}
																					],
																					"functionName": {
																						"name": "mstore",
																						"nodeType": "YulIdentifier",
																						"src": "3311:6:0"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3311:34:0"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "3311:34:0"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "3040:323:0",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "_length",
																		"nodeType": "YulIdentifier",
																		"src": "812:7:0"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "805:6:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "805:15:0"
															},
															"nodeType": "YulSwitch",
															"src": "798:2565:0"
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 3,
														"isOffset": false,
														"isSlot": false,
														"src": "2397:6:0",
														"valueSize": 1
													},
													{
														"declaration": 7,
														"isOffset": false,
														"isSlot": false,
														"src": "1717:7:0",
														"valueSize": 1
													},
													{
														"declaration": 7,
														"isOffset": false,
														"isSlot": false,
														"src": "2180:7:0",
														"valueSize": 1
													},
													{
														"declaration": 7,
														"isOffset": false,
														"isSlot": false,
														"src": "2711:7:0",
														"valueSize": 1
													},
													{
														"declaration": 7,
														"isOffset": false,
														"isSlot": false,
														"src": "812:7:0",
														"valueSize": 1
													},
													{
														"declaration": 5,
														"isOffset": false,
														"isSlot": false,
														"src": "2448:6:0",
														"valueSize": 1
													},
													{
														"declaration": 41,
														"isOffset": false,
														"isSlot": false,
														"src": "1012:9:0",
														"valueSize": 1
													},
													{
														"declaration": 41,
														"isOffset": false,
														"isSlot": false,
														"src": "2088:9:0",
														"valueSize": 1
													},
													{
														"declaration": 41,
														"isOffset": false,
														"isSlot": false,
														"src": "2700:9:0",
														"valueSize": 1
													},
													{
														"declaration": 41,
														"isOffset": false,
														"isSlot": false,
														"src": "3070:9:0",
														"valueSize": 1
													},
													{
														"declaration": 41,
														"isOffset": false,
														"isSlot": false,
														"src": "3276:9:0",
														"valueSize": 1
													},
													{
														"declaration": 41,
														"isOffset": false,
														"isSlot": false,
														"src": "3328:9:0",
														"valueSize": 1
													}
												],
												"id": 43,
												"nodeType": "InlineAssembly",
												"src": "775:2598:0"
											},
											{
												"expression": {
													"id": 44,
													"name": "tempBytes",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 41,
													"src": "3390:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 11,
												"id": 45,
												"nodeType": "Return",
												"src": "3383:16:0"
											}
										]
									},
									"id": 47,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "slice",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3,
												"mutability": "mutable",
												"name": "_bytes",
												"nodeType": "VariableDeclaration",
												"scope": 47,
												"src": "423:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "423:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "_start",
												"nodeType": "VariableDeclaration",
												"scope": 47,
												"src": "452:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "452:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "_length",
												"nodeType": "VariableDeclaration",
												"scope": 47,
												"src": "476:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 6,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "476:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "413:84:0"
									},
									"returnParameters": {
										"id": 11,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 10,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 47,
												"src": "521:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 9,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "521:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "520:14:0"
									},
									"scope": 118,
									"src": "399:3007:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 81,
										"nodeType": "Block",
										"src": "3500:328:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 61,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 59,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 57,
																	"name": "_start",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 51,
																	"src": "3518:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"hexValue": "3230",
																	"id": 58,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3527:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_20_by_1",
																		"typeString": "int_const 20"
																	},
																	"value": "20"
																},
																"src": "3518:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 60,
																"name": "_start",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 51,
																"src": "3533:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3518:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "746f416464726573735f6f766572666c6f77",
															"id": 62,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3541:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f71efb0937d5d9d75bbebe9d7207dad811fd47ced903ea9404d5e8d77eb17a95",
																"typeString": "literal_string \"toAddress_overflow\""
															},
															"value": "toAddress_overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f71efb0937d5d9d75bbebe9d7207dad811fd47ced903ea9404d5e8d77eb17a95",
																"typeString": "literal_string \"toAddress_overflow\""
															}
														],
														"id": 56,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3510:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 63,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3510:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 64,
												"nodeType": "ExpressionStatement",
												"src": "3510:52:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 71,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 66,
																	"name": "_bytes",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 49,
																	"src": "3580:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																"id": 67,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "3580:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 70,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 68,
																	"name": "_start",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 51,
																	"src": "3597:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"hexValue": "3230",
																	"id": 69,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3606:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_20_by_1",
																		"typeString": "int_const 20"
																	},
																	"value": "20"
																},
																"src": "3597:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3580:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "746f416464726573735f6f75744f66426f756e6473",
															"id": 72,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3610:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9f688071e1df0f70b63e3651005878331be1fe9591d6cfb3187cb52a13439e5d",
																"typeString": "literal_string \"toAddress_outOfBounds\""
															},
															"value": "toAddress_outOfBounds"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9f688071e1df0f70b63e3651005878331be1fe9591d6cfb3187cb52a13439e5d",
																"typeString": "literal_string \"toAddress_outOfBounds\""
															}
														],
														"id": 65,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3572:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 73,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3572:62:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 74,
												"nodeType": "ExpressionStatement",
												"src": "3572:62:0"
											},
											{
												"assignments": [
													76
												],
												"declarations": [
													{
														"constant": false,
														"id": 76,
														"mutability": "mutable",
														"name": "tempAddress",
														"nodeType": "VariableDeclaration",
														"scope": 81,
														"src": "3644:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 75,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3644:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 77,
												"nodeType": "VariableDeclarationStatement",
												"src": "3644:19:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "3683:110:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3697:86:0",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "_bytes",
																								"nodeType": "YulIdentifier",
																								"src": "3730:6:0"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3738:4:0",
																								"type": "",
																								"value": "0x20"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "3726:3:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3726:17:0"
																					},
																					{
																						"name": "_start",
																						"nodeType": "YulIdentifier",
																						"src": "3745:6:0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3722:3:0"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3722:30:0"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "3716:5:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3716:37:0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3755:27:0",
																		"type": "",
																		"value": "0x1000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "3712:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "3712:71:0"
															},
															"variableNames": [
																{
																	"name": "tempAddress",
																	"nodeType": "YulIdentifier",
																	"src": "3697:11:0"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 49,
														"isOffset": false,
														"isSlot": false,
														"src": "3730:6:0",
														"valueSize": 1
													},
													{
														"declaration": 51,
														"isOffset": false,
														"isSlot": false,
														"src": "3745:6:0",
														"valueSize": 1
													},
													{
														"declaration": 76,
														"isOffset": false,
														"isSlot": false,
														"src": "3697:11:0",
														"valueSize": 1
													}
												],
												"id": 78,
												"nodeType": "InlineAssembly",
												"src": "3674:119:0"
											},
											{
												"expression": {
													"id": 79,
													"name": "tempAddress",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 76,
													"src": "3810:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 55,
												"id": 80,
												"nodeType": "Return",
												"src": "3803:18:0"
											}
										]
									},
									"id": 82,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toAddress",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "_bytes",
												"nodeType": "VariableDeclaration",
												"scope": 82,
												"src": "3431:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 48,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3431:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 51,
												"mutability": "mutable",
												"name": "_start",
												"nodeType": "VariableDeclaration",
												"scope": 82,
												"src": "3452:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 50,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3452:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3430:37:0"
									},
									"returnParameters": {
										"id": 55,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 54,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 82,
												"src": "3491:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 53,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3491:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3490:9:0"
									},
									"scope": 118,
									"src": "3412:416:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 116,
										"nodeType": "Block",
										"src": "3920:279:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 96,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 94,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 92,
																	"name": "_start",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 86,
																	"src": "3938:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"hexValue": "33",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3947:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_3_by_1",
																		"typeString": "int_const 3"
																	},
																	"value": "3"
																},
																"src": "3938:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 95,
																"name": "_start",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 86,
																"src": "3952:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3938:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "746f55696e7432345f6f766572666c6f77",
															"id": 97,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3960:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_428a8ba368fc474210479d5009a3c2ddaf9d762393b1b3cd3cf1b440d48791c5",
																"typeString": "literal_string \"toUint24_overflow\""
															},
															"value": "toUint24_overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_428a8ba368fc474210479d5009a3c2ddaf9d762393b1b3cd3cf1b440d48791c5",
																"typeString": "literal_string \"toUint24_overflow\""
															}
														],
														"id": 91,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3930:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 98,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3930:50:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 99,
												"nodeType": "ExpressionStatement",
												"src": "3930:50:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 106,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 101,
																	"name": "_bytes",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 84,
																	"src": "3998:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																"id": 102,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "3998:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 105,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 103,
																	"name": "_start",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 86,
																	"src": "4015:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"hexValue": "33",
																	"id": 104,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4024:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_3_by_1",
																		"typeString": "int_const 3"
																	},
																	"value": "3"
																},
																"src": "4015:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3998:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "746f55696e7432345f6f75744f66426f756e6473",
															"id": 107,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4027:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_92c5fac6e5cb4f75ffccd9c8f373ae2e2c333a8b9c2fdc616c52c36fa31575dc",
																"typeString": "literal_string \"toUint24_outOfBounds\""
															},
															"value": "toUint24_outOfBounds"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_92c5fac6e5cb4f75ffccd9c8f373ae2e2c333a8b9c2fdc616c52c36fa31575dc",
																"typeString": "literal_string \"toUint24_outOfBounds\""
															}
														],
														"id": 100,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3990:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3990:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 109,
												"nodeType": "ExpressionStatement",
												"src": "3990:60:0"
											},
											{
												"assignments": [
													111
												],
												"declarations": [
													{
														"constant": false,
														"id": 111,
														"mutability": "mutable",
														"name": "tempUint",
														"nodeType": "VariableDeclaration",
														"scope": 116,
														"src": "4060:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint24",
															"typeString": "uint24"
														},
														"typeName": {
															"id": 110,
															"name": "uint24",
															"nodeType": "ElementaryTypeName",
															"src": "4060:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint24",
																"typeString": "uint24"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 112,
												"nodeType": "VariableDeclarationStatement",
												"src": "4060:15:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "4095:72:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4109:48:0",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_bytes",
																						"nodeType": "YulIdentifier",
																						"src": "4135:6:0"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4143:3:0",
																						"type": "",
																						"value": "0x3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4131:3:0"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4131:16:0"
																			},
																			{
																				"name": "_start",
																				"nodeType": "YulIdentifier",
																				"src": "4149:6:0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4127:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4127:29:0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4121:5:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "4121:36:0"
															},
															"variableNames": [
																{
																	"name": "tempUint",
																	"nodeType": "YulIdentifier",
																	"src": "4109:8:0"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 84,
														"isOffset": false,
														"isSlot": false,
														"src": "4135:6:0",
														"valueSize": 1
													},
													{
														"declaration": 86,
														"isOffset": false,
														"isSlot": false,
														"src": "4149:6:0",
														"valueSize": 1
													},
													{
														"declaration": 111,
														"isOffset": false,
														"isSlot": false,
														"src": "4109:8:0",
														"valueSize": 1
													}
												],
												"id": 113,
												"nodeType": "InlineAssembly",
												"src": "4086:81:0"
											},
											{
												"expression": {
													"id": 114,
													"name": "tempUint",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 111,
													"src": "4184:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"functionReturnParameters": 90,
												"id": 115,
												"nodeType": "Return",
												"src": "4177:15:0"
											}
										]
									},
									"id": 117,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint24",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 84,
												"mutability": "mutable",
												"name": "_bytes",
												"nodeType": "VariableDeclaration",
												"scope": 117,
												"src": "3852:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 83,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3852:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "_start",
												"nodeType": "VariableDeclaration",
												"scope": 117,
												"src": "3873:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 85,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3873:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3851:37:0"
									},
									"returnParameters": {
										"id": 90,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 89,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 117,
												"src": "3912:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 88,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "3912:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3911:8:0"
									},
									"scope": 118,
									"src": "3834:365:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 119,
							"src": "376:3825:0"
						}
					],
					"src": "343:3859:0"
				},
				"id": 0
			},
			"@uniswap/v3-periphery/contracts/libraries/Path.sol": {
				"ast": {
					"absolutePath": "@uniswap/v3-periphery/contracts/libraries/Path.sol",
					"exportedSymbols": {
						"BytesLib": [
							118
						],
						"Path": [
							251
						]
					},
					"id": 252,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 120,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:1"
						},
						{
							"absolutePath": "@uniswap/v3-periphery/contracts/libraries/BytesLib.sol",
							"file": "./BytesLib.sol",
							"id": 121,
							"nodeType": "ImportDirective",
							"scope": 252,
							"sourceUnit": 119,
							"src": "71:24:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 122,
								"nodeType": "StructuredDocumentation",
								"src": "97:67:1",
								"text": "@title Functions for manipulating path data for multihop swaps"
							},
							"fullyImplemented": true,
							"id": 251,
							"linearizedBaseContracts": [
								251
							],
							"name": "Path",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 125,
									"libraryName": {
										"id": 123,
										"name": "BytesLib",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 118,
										"src": "189:8:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_BytesLib_$118",
											"typeString": "library BytesLib"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "183:25:1",
									"typeName": {
										"id": 124,
										"name": "bytes",
										"nodeType": "ElementaryTypeName",
										"src": "202:5:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes_storage_ptr",
											"typeString": "bytes"
										}
									}
								},
								{
									"constant": true,
									"documentation": {
										"id": 126,
										"nodeType": "StructuredDocumentation",
										"src": "214:48:1",
										"text": "@dev The length of the bytes encoded address"
									},
									"id": 129,
									"mutability": "constant",
									"name": "ADDR_SIZE",
									"nodeType": "VariableDeclaration",
									"scope": 251,
									"src": "267:39:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 127,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "267:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3230",
										"id": 128,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "304:2:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20_by_1",
											"typeString": "int_const 20"
										},
										"value": "20"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"documentation": {
										"id": 130,
										"nodeType": "StructuredDocumentation",
										"src": "312:44:1",
										"text": "@dev The length of the bytes encoded fee"
									},
									"id": 133,
									"mutability": "constant",
									"name": "FEE_SIZE",
									"nodeType": "VariableDeclaration",
									"scope": 251,
									"src": "361:37:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 131,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "361:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "33",
										"id": 132,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "397:1:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_3_by_1",
											"typeString": "int_const 3"
										},
										"value": "3"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"documentation": {
										"id": 134,
										"nodeType": "StructuredDocumentation",
										"src": "405:58:1",
										"text": "@dev The offset of a single token address and pool fee"
									},
									"id": 139,
									"mutability": "constant",
									"name": "NEXT_OFFSET",
									"nodeType": "VariableDeclaration",
									"scope": 251,
									"src": "468:59:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 135,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "468:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"id": 138,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"id": 136,
											"name": "ADDR_SIZE",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 129,
											"src": "507:9:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "+",
										"rightExpression": {
											"id": 137,
											"name": "FEE_SIZE",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 133,
											"src": "519:8:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"src": "507:20:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"documentation": {
										"id": 140,
										"nodeType": "StructuredDocumentation",
										"src": "533:42:1",
										"text": "@dev The offset of an encoded pool key"
									},
									"id": 145,
									"mutability": "constant",
									"name": "POP_OFFSET",
									"nodeType": "VariableDeclaration",
									"scope": 251,
									"src": "580:61:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 141,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "580:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"id": 144,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"id": 142,
											"name": "NEXT_OFFSET",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 139,
											"src": "618:11:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "+",
										"rightExpression": {
											"id": 143,
											"name": "ADDR_SIZE",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 129,
											"src": "632:9:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"src": "618:23:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"documentation": {
										"id": 146,
										"nodeType": "StructuredDocumentation",
										"src": "647:72:1",
										"text": "@dev The minimum length of an encoding that contains 2 or more pools"
									},
									"id": 151,
									"mutability": "constant",
									"name": "MULTIPLE_POOLS_MIN_LENGTH",
									"nodeType": "VariableDeclaration",
									"scope": 251,
									"src": "724:77:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 147,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "724:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"id": 150,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"id": 148,
											"name": "POP_OFFSET",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 145,
											"src": "777:10:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "+",
										"rightExpression": {
											"id": 149,
											"name": "NEXT_OFFSET",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 139,
											"src": "790:11:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"src": "777:24:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 164,
										"nodeType": "Block",
										"src": "1066:64:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 162,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 159,
															"name": "path",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 154,
															"src": "1083:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 160,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1083:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"id": 161,
														"name": "MULTIPLE_POOLS_MIN_LENGTH",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 151,
														"src": "1098:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1083:40:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 158,
												"id": 163,
												"nodeType": "Return",
												"src": "1076:47:1"
											}
										]
									},
									"documentation": {
										"id": 152,
										"nodeType": "StructuredDocumentation",
										"src": "808:179:1",
										"text": "@notice Returns true iff the path contains two or more pools\n @param path The encoded swap path\n @return True if path contains two or more pools, otherwise false"
									},
									"id": 165,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hasMultiplePools",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 155,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 154,
												"mutability": "mutable",
												"name": "path",
												"nodeType": "VariableDeclaration",
												"scope": 165,
												"src": "1018:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 153,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1018:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1017:19:1"
									},
									"returnParameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 165,
												"src": "1060:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 156,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1060:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1059:6:1"
									},
									"scope": 251,
									"src": "992:138:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 182,
										"nodeType": "Block",
										"src": "1351:166:1",
										"statements": [
											{
												"expression": {
													"components": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 179,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 176,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 173,
																				"name": "path",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 168,
																				"src": "1471:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			"id": 174,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "length",
																			"nodeType": "MemberAccess",
																			"src": "1471:11:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 175,
																			"name": "ADDR_SIZE",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 129,
																			"src": "1485:9:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "1471:23:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 177,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1470:25:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 178,
																"name": "NEXT_OFFSET",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 139,
																"src": "1498:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1470:39:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 180,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "1469:41:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 172,
												"id": 181,
												"nodeType": "Return",
												"src": "1462:48:1"
											}
										]
									},
									"documentation": {
										"id": 166,
										"nodeType": "StructuredDocumentation",
										"src": "1136:141:1",
										"text": "@notice Returns the number of pools in the path\n @param path The encoded swap path\n @return The number of pools in the path"
									},
									"id": 183,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "numPools",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 168,
												"mutability": "mutable",
												"name": "path",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "1300:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 167,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1300:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1299:19:1"
									},
									"returnParameters": {
										"id": 172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "1342:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 170,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1342:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1341:9:1"
									},
									"scope": 251,
									"src": "1282:235:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 216,
										"nodeType": "Block",
										"src": "1964:129:1",
										"statements": [
											{
												"expression": {
													"id": 200,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 195,
														"name": "tokenA",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 189,
														"src": "1974:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 198,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1998:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"expression": {
																"id": 196,
																"name": "path",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 186,
																"src": "1983:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 197,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "toAddress",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 82,
															"src": "1983:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_address_$bound_to$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory,uint256) pure returns (address)"
															}
														},
														"id": 199,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1983:17:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1974:26:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 201,
												"nodeType": "ExpressionStatement",
												"src": "1974:26:1"
											},
											{
												"expression": {
													"id": 207,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 202,
														"name": "fee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 193,
														"src": "2010:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint24",
															"typeString": "uint24"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 205,
																"name": "ADDR_SIZE",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 129,
																"src": "2030:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 203,
																"name": "path",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 186,
																"src": "2016:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 204,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "toUint24",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 117,
															"src": "2016:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_uint24_$bound_to$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory,uint256) pure returns (uint24)"
															}
														},
														"id": 206,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2016:24:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint24",
															"typeString": "uint24"
														}
													},
													"src": "2010:30:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"id": 208,
												"nodeType": "ExpressionStatement",
												"src": "2010:30:1"
											},
											{
												"expression": {
													"id": 214,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 209,
														"name": "tokenB",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 191,
														"src": "2050:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 212,
																"name": "NEXT_OFFSET",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 139,
																"src": "2074:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 210,
																"name": "path",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 186,
																"src": "2059:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 211,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "toAddress",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 82,
															"src": "2059:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_address_$bound_to$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory,uint256) pure returns (address)"
															}
														},
														"id": 213,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2059:27:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2050:36:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 215,
												"nodeType": "ExpressionStatement",
												"src": "2050:36:1"
											}
										]
									},
									"documentation": {
										"id": 184,
										"nodeType": "StructuredDocumentation",
										"src": "1523:251:1",
										"text": "@notice Decodes the first pool in path\n @param path The bytes encoded swap path\n @return tokenA The first token of the given pool\n @return tokenB The second token of the given pool\n @return fee The fee level of the pool"
									},
									"id": 217,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decodeFirstPool",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "path",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "1804:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 185,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1804:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1803:19:1"
									},
									"returnParameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 189,
												"mutability": "mutable",
												"name": "tokenA",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "1883:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 188,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1883:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 191,
												"mutability": "mutable",
												"name": "tokenB",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "1911:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 190,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1911:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "fee",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "1939:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 192,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "1939:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1869:90:1"
									},
									"scope": 251,
									"src": "1779:314:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 231,
										"nodeType": "Block",
										"src": "2397:49:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "30",
															"id": 227,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2425:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 228,
															"name": "POP_OFFSET",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 145,
															"src": "2428:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 225,
															"name": "path",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 220,
															"src": "2414:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 226,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "slice",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 47,
														"src": "2414:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bytes_memory_ptr_$bound_to$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory,uint256,uint256) pure returns (bytes memory)"
														}
													},
													"id": 229,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2414:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 224,
												"id": 230,
												"nodeType": "Return",
												"src": "2407:32:1"
											}
										]
									},
									"documentation": {
										"id": 218,
										"nodeType": "StructuredDocumentation",
										"src": "2099:215:1",
										"text": "@notice Gets the segment corresponding to the first pool in the path\n @param path The bytes encoded swap path\n @return The segment containing all data necessary to target the first pool in the path"
									},
									"id": 232,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getFirstPool",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 221,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "path",
												"nodeType": "VariableDeclaration",
												"scope": 232,
												"src": "2341:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 219,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2341:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2340:19:1"
									},
									"returnParameters": {
										"id": 224,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 232,
												"src": "2383:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 222,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2383:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2382:14:1"
									},
									"scope": 251,
									"src": "2319:127:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 249,
										"nodeType": "Block",
										"src": "2710:74:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 242,
															"name": "NEXT_OFFSET",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 139,
															"src": "2738:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 246,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 243,
																	"name": "path",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 235,
																	"src": "2751:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																"id": 244,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "2751:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 245,
																"name": "NEXT_OFFSET",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 139,
																"src": "2765:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2751:25:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 240,
															"name": "path",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 235,
															"src": "2727:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 241,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "slice",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 47,
														"src": "2727:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bytes_memory_ptr_$bound_to$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory,uint256,uint256) pure returns (bytes memory)"
														}
													},
													"id": 247,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2727:50:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 239,
												"id": 248,
												"nodeType": "Return",
												"src": "2720:57:1"
											}
										]
									},
									"documentation": {
										"id": 233,
										"nodeType": "StructuredDocumentation",
										"src": "2452:178:1",
										"text": "@notice Skips a token + fee element from the buffer and returns the remainder\n @param path The swap path\n @return The remaining token + fee elements in the path"
									},
									"id": 250,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "skipToken",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 236,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 235,
												"mutability": "mutable",
												"name": "path",
												"nodeType": "VariableDeclaration",
												"scope": 250,
												"src": "2654:17:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 234,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2654:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2653:19:1"
									},
									"returnParameters": {
										"id": 239,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 238,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 250,
												"src": "2696:12:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 237,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2696:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2695:14:1"
									},
									"scope": 251,
									"src": "2635:149:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 252,
							"src": "164:2622:1"
						}
					],
					"src": "45:2742:1"
				},
				"id": 1
			},
			"contracts/getpool.sol": {
				"ast": {
					"absolutePath": "contracts/getpool.sol",
					"exportedSymbols": {
						"BytesLib": [
							118
						],
						"Path": [
							251
						],
						"test": [
							274
						]
					},
					"id": 275,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 253,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".6"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:2"
						},
						{
							"absolutePath": "@uniswap/v3-periphery/contracts/libraries/Path.sol",
							"file": "@uniswap/v3-periphery/contracts/libraries/Path.sol",
							"id": 254,
							"nodeType": "ImportDirective",
							"scope": 275,
							"sourceUnit": 252,
							"src": "58:60:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 274,
							"linearizedBaseContracts": [
								274
							],
							"name": "test",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 257,
									"libraryName": {
										"id": 255,
										"name": "Path",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 251,
										"src": "147:4:2",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Path_$251",
											"typeString": "library Path"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "141:21:2",
									"typeName": {
										"id": 256,
										"name": "bytes",
										"nodeType": "ElementaryTypeName",
										"src": "156:5:2",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes_storage_ptr",
											"typeString": "bytes"
										}
									}
								},
								{
									"body": {
										"id": 272,
										"nodeType": "Block",
										"src": "314:46:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 268,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 259,
															"src": "331:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 269,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "decodeFirstPool",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 217,
														"src": "331:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_address_$_t_address_$_t_uint24_$bound_to$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) pure returns (address,address,uint24)"
														}
													},
													"id": 270,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "331:22:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint24_$",
														"typeString": "tuple(address,address,uint24)"
													}
												},
												"functionReturnParameters": 267,
												"id": 271,
												"nodeType": "Return",
												"src": "324:29:2"
											}
										]
									},
									"functionSelector": "e5c5e9a3",
									"id": 273,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decode",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 260,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 259,
												"mutability": "mutable",
												"name": "pool",
												"nodeType": "VariableDeclaration",
												"scope": 273,
												"src": "184:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 258,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "184:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "183:19:2"
									},
									"returnParameters": {
										"id": 267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "tokenA",
												"nodeType": "VariableDeclaration",
												"scope": 273,
												"src": "237:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "237:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "tokenB",
												"nodeType": "VariableDeclaration",
												"scope": 273,
												"src": "265:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "265:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 266,
												"mutability": "mutable",
												"name": "fee",
												"nodeType": "VariableDeclaration",
												"scope": 273,
												"src": "293:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 265,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "293:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "223:90:2"
									},
									"scope": 274,
									"src": "168:192:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 275,
							"src": "121:241:2"
						}
					],
					"src": "32:330:2"
				},
				"id": 2
			}
		}
	}
}
{
	"id": "9d0fc777e1f9adf70029ac9299dd347e",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.7.6",
	"solcLongVersion": "0.7.6+commit.7338295f",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/PriceAggregator.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity 0.7.6;\npragma abicoder v2;\n\nimport '@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol';\nimport './interfaces/IPriceAggregator.sol';\nimport './libraries/UniswapV2.sol';\nimport './libraries/UniswapV3.sol';\n\n\ncontract PriceAggregator is IPriceAggregator {\n\n\n    function getPrices(priceIn[] memory inputs) public override view returns (priceOut[] memory) {\n        priceOut[] memory outputs = new priceOut[](inputs.length);\n       for (uint i=0;i<inputs.length;i++){\n        if (inputs[i].providerVersion == 2) {\n            uint256 price = UniswapV2.Price(inputs[i].provider,inputs[i].t0,inputs[i].t1);\n            outputs[i] = priceOut(inputs[i].index,price,0); \n        \n        } else if (inputs[i].providerVersion == 3) {\n            (uint256 price,uint24 fee) = UniswapV3.Price(inputs[i].provider,inputs[i].t0,inputs[i].t1);\n            outputs[i] = priceOut(inputs[i].index,price,fee);            \n        }\n       }\n    \n       return outputs;\n    }\n\n    function poolsExists(existsIn[] memory inputs) external override view returns (existsOut[] memory){\n        existsOut[] memory outputs = new existsOut[](inputs.length);\n    for (uint i=0;i<inputs.length;i++){\n        if (inputs[i].providerVersion == 2) {\n            bool exists = UniswapV2.PoolExists(inputs[i].provider,inputs[i].t0,inputs[i].t1,inputs[i].min0,inputs[i].min1);\n            outputs[i] = existsOut(inputs[i].index,exists);\n        } if (inputs[i].providerVersion == 3) {\n            bool exists = UniswapV3.PoolExists(inputs[i].provider,inputs[i].t0,inputs[i].t1,inputs[i].min0,inputs[i].min1);\n            outputs[i] = existsOut(inputs[i].index,exists);\n        }\n                      \n    }\n    return outputs;\n    }\n\n\n    function estimateAmountOut(address provider,address tA,address tB,uint256 amountIn,uint8 version) external override  view returns (uint256 amountOut,uint24 fee){\n        if (version == 2) {\n            return (UniswapV2.EstimateAmountOut(provider, tA, tB,amountIn),0);\n        }else if (version == 3) {\n            return UniswapV3.EstimateAmountOut(provider, tA, tB, amountIn);\n        }\n\n    }\n\n}\n"
			},
			"contracts/libraries/UniswapV3.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity 0.7.6;\n\nimport '@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol';\nimport '@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol';\nimport './OracleLibrary.sol';\n\nimport '../interfaces/IERC20.sol';\n\nlibrary UniswapV3 {\n\n\n        function EstimateAmountOut(address factory,address tA,address tB,uint256 amountIn) external  view returns (uint256 amountOut,uint24 fee){\n            uint16[4] memory fees = [100,500,3000,10000];\n            for(uint8 i=0;i<4;i++){\n                address pool = IUniswapV3Factory(factory).getPool(tA,tB,fees[i]);\n                if (pool == address(0)) continue ;\n                if (IERC20(tA).balanceOf(pool) < amountIn) continue ;\n               int24 tick = OracleLibrary.consult(pool,1);\n                uint256 out = OracleLibrary.getQuoteAtTick(tick,uint128(amountIn),tA,tB);\n               if ( out > amountOut) {\n                amountOut = out;\n                fee = fees[i];\n            }              \n        }\n        } \n        function Price(address factory,address t0,address t1) external view returns (uint256 price,uint24 fee){\n        uint16[4] memory fees = [100,500,3000,10000];\n        for(uint8 i=0;i<4;i++){\n        address pool = IUniswapV3Factory(factory).getPool(t0,t1,fees[i]);\n        if (pool == address(0)) continue ;\n        \n        uint8 d0 = IERC20(t0).decimals();\n        uint8 d1 = IERC20(t1).decimals();\n        \n        if (IERC20(t0).balanceOf(pool) < 10**d0) continue ;\n        if (IERC20(t1).balanceOf(pool) < 10**d1) continue ; \n\n        int24 tick = OracleLibrary.consult(pool,1);\n        uint256 amountOut = OracleLibrary.getQuoteAtTick(tick,uint128(10**d0),t0,t1);\n        if (i == 0){\n            price = amountOut;\n            fee = fees[i];\n        }\n        if (i > 0 && (price == 0 || amountOut < price)) {\n            price = amountOut;\n            fee = fees[i];\n            }\n        }\n        return (price,fee);\n    }\n\n\n    function PoolExists(address factory,address t0,address t1,uint min0,uint min1) external view returns (bool){\n        uint16[4] memory fees = [100,500,3000,10000];\n        uint16[4] memory fs;\n        for(uint8 i=0;i<4;i++){\n           address pool = IUniswapV3Factory(factory).getPool(t0,t1,fees[i]);\n           if (pool == address(0)) continue ;\n           if (IERC20(t0).balanceOf(pool) < min0) continue ;\n           if (IERC20(t1).balanceOf(pool) < min1) continue ; \n           return true;\n        }\n        return false;\n    }\n\n}\n\n"
			},
			"contracts/libraries/UniswapV2.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity 0.7.6;\n\nimport '../interfaces/IERC20.sol';\nimport '@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol';\nimport '@uniswap/v2-core/contracts/interfaces/IUniswapV2Pair.sol';\nimport '@uniswap/v2-core/contracts/interfaces/IUniswapV2Factory.sol';\n\nlibrary UniswapV2 {\n    \n    function EstimateAmountOut(address router,address tA, address tB,uint256 amountIn) external view returns (uint256){\n        address[] memory path = new address[](2);\n        path[0] = tA;\n        path[1] = tB;\n        uint[] memory amounts = IUniswapV2Router01(router).getAmountsOut(amountIn,path);\n       return amounts[1];\n    }\n    \n    function Price(address router, address t0,address t1) external view returns (uint256){\n        uint amountIn = 10**IERC20(t0).decimals();\n        address[] memory path = new address[](2);\n        path[0] = t0;\n        path[1] = t1;\n        uint[] memory amounts = IUniswapV2Router01(router).getAmountsOut(amountIn,path);\n       return amounts[1];\n    }\n\n    function PoolExists(address factory,address t0,address t1,uint min0,uint min1) external view returns (bool){\n        address pool = IUniswapV2Factory(factory).getPair(t0,t1);\n        if (pool == address(0)) return false;\n        (uint112 r0, uint112 r1,) = IUniswapV2Pair(pool).getReserves();\n        if ( min0 > r0) {\n            return false;\n        } else if (min1 > r1) {\n            return false;\n        }\n        return true;\n    }\n\n}\n"
			},
			"contracts/interfaces/IPriceAggregator.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity >=0.7.6;\npragma abicoder v2;\n\ninterface IPriceAggregator {\n    \n    struct priceIn{\n        uint index;\n        address t0;\n        address t1;\n        address provider;\n        uint8 providerVersion;\n    }\n\n    struct priceOut {\n        uint index;\n        uint256 price;\n        uint24 fee;\n    }\n\n    struct existsIn{\n        uint index;\n        address t0;\n        address t1;\n        address provider;\n        uint8 providerVersion;\n        uint min0;\n        uint min1;\n\n    }\n\n    struct existsOut {\n        uint index;\n        bool exists;\n    } \n\n    function estimateAmountOut(address provider,address tA,address tB,uint256 amountIn,uint8 version) external view returns (uint256 amountOut,uint24 fee);\n    function getPrices(priceIn[] memory inputs) external view returns (priceOut[] memory);\n    function poolsExists(existsIn[] memory inputs) external view returns (existsOut[] memory);\n}\n\n"
			},
			"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol": {
				"content": "pragma solidity >=0.6.2;\n\ninterface IUniswapV2Router01 {\n    function factory() external pure returns (address);\n    function WETH() external pure returns (address);\n\n    function addLiquidity(\n        address tokenA,\n        address tokenB,\n        uint amountADesired,\n        uint amountBDesired,\n        uint amountAMin,\n        uint amountBMin,\n        address to,\n        uint deadline\n    ) external returns (uint amountA, uint amountB, uint liquidity);\n    function addLiquidityETH(\n        address token,\n        uint amountTokenDesired,\n        uint amountTokenMin,\n        uint amountETHMin,\n        address to,\n        uint deadline\n    ) external payable returns (uint amountToken, uint amountETH, uint liquidity);\n    function removeLiquidity(\n        address tokenA,\n        address tokenB,\n        uint liquidity,\n        uint amountAMin,\n        uint amountBMin,\n        address to,\n        uint deadline\n    ) external returns (uint amountA, uint amountB);\n    function removeLiquidityETH(\n        address token,\n        uint liquidity,\n        uint amountTokenMin,\n        uint amountETHMin,\n        address to,\n        uint deadline\n    ) external returns (uint amountToken, uint amountETH);\n    function removeLiquidityWithPermit(\n        address tokenA,\n        address tokenB,\n        uint liquidity,\n        uint amountAMin,\n        uint amountBMin,\n        address to,\n        uint deadline,\n        bool approveMax, uint8 v, bytes32 r, bytes32 s\n    ) external returns (uint amountA, uint amountB);\n    function removeLiquidityETHWithPermit(\n        address token,\n        uint liquidity,\n        uint amountTokenMin,\n        uint amountETHMin,\n        address to,\n        uint deadline,\n        bool approveMax, uint8 v, bytes32 r, bytes32 s\n    ) external returns (uint amountToken, uint amountETH);\n    function swapExactTokensForTokens(\n        uint amountIn,\n        uint amountOutMin,\n        address[] calldata path,\n        address to,\n        uint deadline\n    ) external returns (uint[] memory amounts);\n    function swapTokensForExactTokens(\n        uint amountOut,\n        uint amountInMax,\n        address[] calldata path,\n        address to,\n        uint deadline\n    ) external returns (uint[] memory amounts);\n    function swapExactETHForTokens(uint amountOutMin, address[] calldata path, address to, uint deadline)\n        external\n        payable\n        returns (uint[] memory amounts);\n    function swapTokensForExactETH(uint amountOut, uint amountInMax, address[] calldata path, address to, uint deadline)\n        external\n        returns (uint[] memory amounts);\n    function swapExactTokensForETH(uint amountIn, uint amountOutMin, address[] calldata path, address to, uint deadline)\n        external\n        returns (uint[] memory amounts);\n    function swapETHForExactTokens(uint amountOut, address[] calldata path, address to, uint deadline)\n        external\n        payable\n        returns (uint[] memory amounts);\n\n    function quote(uint amountA, uint reserveA, uint reserveB) external pure returns (uint amountB);\n    function getAmountOut(uint amountIn, uint reserveIn, uint reserveOut) external pure returns (uint amountOut);\n    function getAmountIn(uint amountOut, uint reserveIn, uint reserveOut) external pure returns (uint amountIn);\n    function getAmountsOut(uint amountIn, address[] calldata path) external view returns (uint[] memory amounts);\n    function getAmountsIn(uint amountOut, address[] calldata path) external view returns (uint[] memory amounts);\n}\n"
			},
			"contracts/interfaces/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity >=0.7.6;\n\ninterface IERC20 {\n    event Approval(address indexed owner, address indexed spender, uint value);\n    event Transfer(address indexed from, address indexed to, uint value);\n\n    function name() external view returns (string memory);\n    function symbol() external view returns (string memory);\n    function decimals() external view returns (uint8);\n    function totalSupply() external view returns (uint);\n    function balanceOf(address owner) external view returns (uint);\n    function allowance(address owner, address spender) external view returns (uint);\n\n    function approve(address spender, uint value) external returns (bool);\n    function transfer(address to, uint value) external returns (bool);\n    function transferFrom(address from, address to, uint value) external returns (bool);\n    function deposit() external payable;\n    function withdraw(uint) external;\n}"
			},
			"contracts/libraries/OracleLibrary.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity 0.7.6;\n\nimport '@uniswap/v3-core/contracts/libraries/FullMath.sol';\nimport '@uniswap/v3-core/contracts/libraries/TickMath.sol';\nimport '@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol';\n\nlibrary OracleLibrary {\n  function consult(address pool, uint32 secondsAgo)\n        internal\n        view\n        returns (int24 tick)\n    {\n        require(secondsAgo != 0, 'BP');\n\n        uint32[] memory secondsAgos = new uint32[](2);\n        secondsAgos[0] = secondsAgo;\n        secondsAgos[1] = 0;\n\n        (int56[] memory tickCumulatives, ) =\n            IUniswapV3Pool(pool).observe(secondsAgos);\n\n        int56 tickCumulativesDelta = tickCumulatives[1] - tickCumulatives[0];\n  \n        tick = int24(tickCumulativesDelta / secondsAgo);\n        // Always round to negative infinity\n        if (tickCumulativesDelta < 0 && (tickCumulativesDelta % secondsAgo != 0)) tick--;\n\n    }\n\n\n    function getQuoteAtTick(\n        int24 tick,\n        uint128 baseAmount,\n        address baseToken,\n        address quoteToken\n    ) internal pure returns (uint256 quoteAmount) {\n        uint160 sqrtRatioX96 = TickMath.getSqrtRatioAtTick(tick);\n\n        // Calculate quoteAmount with better precision if it doesn't overflow when multiplied by itself\n        if (sqrtRatioX96 <= type(uint128).max) {\n            uint256 ratioX192 = uint256(sqrtRatioX96) * sqrtRatioX96;\n            quoteAmount = baseToken < quoteToken\n                ? FullMath.mulDiv(ratioX192, baseAmount, 1 << 192)\n                : FullMath.mulDiv(1 << 192, baseAmount, ratioX192);\n        } else {\n            uint256 ratioX128 = FullMath.mulDiv(sqrtRatioX96, sqrtRatioX96, 1 << 64);\n            quoteAmount = baseToken < quoteToken\n                ? FullMath.mulDiv(ratioX128, baseAmount, 1 << 128)\n                : FullMath.mulDiv(1 << 128, baseAmount, ratioX128);\n        }\n    }\n}\n"
			},
			"@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title The interface for the Uniswap V3 Factory\n/// @notice The Uniswap V3 Factory facilitates creation of Uniswap V3 pools and control over the protocol fees\ninterface IUniswapV3Factory {\n    /// @notice Emitted when the owner of the factory is changed\n    /// @param oldOwner The owner before the owner was changed\n    /// @param newOwner The owner after the owner was changed\n    event OwnerChanged(address indexed oldOwner, address indexed newOwner);\n\n    /// @notice Emitted when a pool is created\n    /// @param token0 The first token of the pool by address sort order\n    /// @param token1 The second token of the pool by address sort order\n    /// @param fee The fee collected upon every swap in the pool, denominated in hundredths of a bip\n    /// @param tickSpacing The minimum number of ticks between initialized ticks\n    /// @param pool The address of the created pool\n    event PoolCreated(\n        address indexed token0,\n        address indexed token1,\n        uint24 indexed fee,\n        int24 tickSpacing,\n        address pool\n    );\n\n    /// @notice Emitted when a new fee amount is enabled for pool creation via the factory\n    /// @param fee The enabled fee, denominated in hundredths of a bip\n    /// @param tickSpacing The minimum number of ticks between initialized ticks for pools created with the given fee\n    event FeeAmountEnabled(uint24 indexed fee, int24 indexed tickSpacing);\n\n    /// @notice Returns the current owner of the factory\n    /// @dev Can be changed by the current owner via setOwner\n    /// @return The address of the factory owner\n    function owner() external view returns (address);\n\n    /// @notice Returns the tick spacing for a given fee amount, if enabled, or 0 if not enabled\n    /// @dev A fee amount can never be removed, so this value should be hard coded or cached in the calling context\n    /// @param fee The enabled fee, denominated in hundredths of a bip. Returns 0 in case of unenabled fee\n    /// @return The tick spacing\n    function feeAmountTickSpacing(uint24 fee) external view returns (int24);\n\n    /// @notice Returns the pool address for a given pair of tokens and a fee, or address 0 if it does not exist\n    /// @dev tokenA and tokenB may be passed in either token0/token1 or token1/token0 order\n    /// @param tokenA The contract address of either token0 or token1\n    /// @param tokenB The contract address of the other token\n    /// @param fee The fee collected upon every swap in the pool, denominated in hundredths of a bip\n    /// @return pool The pool address\n    function getPool(\n        address tokenA,\n        address tokenB,\n        uint24 fee\n    ) external view returns (address pool);\n\n    /// @notice Creates a pool for the given two tokens and fee\n    /// @param tokenA One of the two tokens in the desired pool\n    /// @param tokenB The other of the two tokens in the desired pool\n    /// @param fee The desired fee for the pool\n    /// @dev tokenA and tokenB may be passed in either order: token0/token1 or token1/token0. tickSpacing is retrieved\n    /// from the fee. The call will revert if the pool already exists, the fee is invalid, or the token arguments\n    /// are invalid.\n    /// @return pool The address of the newly created pool\n    function createPool(\n        address tokenA,\n        address tokenB,\n        uint24 fee\n    ) external returns (address pool);\n\n    /// @notice Updates the owner of the factory\n    /// @dev Must be called by the current owner\n    /// @param _owner The new owner of the factory\n    function setOwner(address _owner) external;\n\n    /// @notice Enables a fee amount with the given tickSpacing\n    /// @dev Fee amounts may never be removed once enabled\n    /// @param fee The fee amount to enable, denominated in hundredths of a bip (i.e. 1e-6)\n    /// @param tickSpacing The spacing between ticks to be enforced for all pools created with the given fee amount\n    function enableFeeAmount(uint24 fee, int24 tickSpacing) external;\n}\n"
			},
			"@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\nimport './pool/IUniswapV3PoolImmutables.sol';\nimport './pool/IUniswapV3PoolState.sol';\nimport './pool/IUniswapV3PoolDerivedState.sol';\nimport './pool/IUniswapV3PoolActions.sol';\nimport './pool/IUniswapV3PoolOwnerActions.sol';\nimport './pool/IUniswapV3PoolEvents.sol';\n\n/// @title The interface for a Uniswap V3 Pool\n/// @notice A Uniswap pool facilitates swapping and automated market making between any two assets that strictly conform\n/// to the ERC20 specification\n/// @dev The pool interface is broken up into many smaller pieces\ninterface IUniswapV3Pool is\n    IUniswapV3PoolImmutables,\n    IUniswapV3PoolState,\n    IUniswapV3PoolDerivedState,\n    IUniswapV3PoolActions,\n    IUniswapV3PoolOwnerActions,\n    IUniswapV3PoolEvents\n{\n\n}\n"
			},
			"@uniswap/v2-core/contracts/interfaces/IUniswapV2Factory.sol": {
				"content": "pragma solidity >=0.5.0;\n\ninterface IUniswapV2Factory {\n    event PairCreated(address indexed token0, address indexed token1, address pair, uint);\n\n    function feeTo() external view returns (address);\n    function feeToSetter() external view returns (address);\n\n    function getPair(address tokenA, address tokenB) external view returns (address pair);\n    function allPairs(uint) external view returns (address pair);\n    function allPairsLength() external view returns (uint);\n\n    function createPair(address tokenA, address tokenB) external returns (address pair);\n\n    function setFeeTo(address) external;\n    function setFeeToSetter(address) external;\n}\n"
			},
			"@uniswap/v2-core/contracts/interfaces/IUniswapV2Pair.sol": {
				"content": "pragma solidity >=0.5.0;\n\ninterface IUniswapV2Pair {\n    event Approval(address indexed owner, address indexed spender, uint value);\n    event Transfer(address indexed from, address indexed to, uint value);\n\n    function name() external pure returns (string memory);\n    function symbol() external pure returns (string memory);\n    function decimals() external pure returns (uint8);\n    function totalSupply() external view returns (uint);\n    function balanceOf(address owner) external view returns (uint);\n    function allowance(address owner, address spender) external view returns (uint);\n\n    function approve(address spender, uint value) external returns (bool);\n    function transfer(address to, uint value) external returns (bool);\n    function transferFrom(address from, address to, uint value) external returns (bool);\n\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n    function PERMIT_TYPEHASH() external pure returns (bytes32);\n    function nonces(address owner) external view returns (uint);\n\n    function permit(address owner, address spender, uint value, uint deadline, uint8 v, bytes32 r, bytes32 s) external;\n\n    event Mint(address indexed sender, uint amount0, uint amount1);\n    event Burn(address indexed sender, uint amount0, uint amount1, address indexed to);\n    event Swap(\n        address indexed sender,\n        uint amount0In,\n        uint amount1In,\n        uint amount0Out,\n        uint amount1Out,\n        address indexed to\n    );\n    event Sync(uint112 reserve0, uint112 reserve1);\n\n    function MINIMUM_LIQUIDITY() external pure returns (uint);\n    function factory() external view returns (address);\n    function token0() external view returns (address);\n    function token1() external view returns (address);\n    function getReserves() external view returns (uint112 reserve0, uint112 reserve1, uint32 blockTimestampLast);\n    function price0CumulativeLast() external view returns (uint);\n    function price1CumulativeLast() external view returns (uint);\n    function kLast() external view returns (uint);\n\n    function mint(address to) external returns (uint liquidity);\n    function burn(address to) external returns (uint amount0, uint amount1);\n    function swap(uint amount0Out, uint amount1Out, address to, bytes calldata data) external;\n    function skim(address to) external;\n    function sync() external;\n\n    function initialize(address, address) external;\n}\n"
			},
			"@uniswap/v3-core/contracts/libraries/TickMath.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0 <0.8.0;\n\n/// @title Math library for computing sqrt prices from ticks and vice versa\n/// @notice Computes sqrt price for ticks of size 1.0001, i.e. sqrt(1.0001^tick) as fixed point Q64.96 numbers. Supports\n/// prices between 2**-128 and 2**128\nlibrary TickMath {\n    /// @dev The minimum tick that may be passed to #getSqrtRatioAtTick computed from log base 1.0001 of 2**-128\n    int24 internal constant MIN_TICK = -887272;\n    /// @dev The maximum tick that may be passed to #getSqrtRatioAtTick computed from log base 1.0001 of 2**128\n    int24 internal constant MAX_TICK = -MIN_TICK;\n\n    /// @dev The minimum value that can be returned from #getSqrtRatioAtTick. Equivalent to getSqrtRatioAtTick(MIN_TICK)\n    uint160 internal constant MIN_SQRT_RATIO = 4295128739;\n    /// @dev The maximum value that can be returned from #getSqrtRatioAtTick. Equivalent to getSqrtRatioAtTick(MAX_TICK)\n    uint160 internal constant MAX_SQRT_RATIO = 1461446703485210103287273052203988822378723970342;\n\n    /// @notice Calculates sqrt(1.0001^tick) * 2^96\n    /// @dev Throws if |tick| > max tick\n    /// @param tick The input tick for the above formula\n    /// @return sqrtPriceX96 A Fixed point Q64.96 number representing the sqrt of the ratio of the two assets (token1/token0)\n    /// at the given tick\n    function getSqrtRatioAtTick(int24 tick) internal pure returns (uint160 sqrtPriceX96) {\n        uint256 absTick = tick < 0 ? uint256(-int256(tick)) : uint256(int256(tick));\n        require(absTick <= uint256(MAX_TICK), 'T');\n\n        uint256 ratio = absTick & 0x1 != 0 ? 0xfffcb933bd6fad37aa2d162d1a594001 : 0x100000000000000000000000000000000;\n        if (absTick & 0x2 != 0) ratio = (ratio * 0xfff97272373d413259a46990580e213a) >> 128;\n        if (absTick & 0x4 != 0) ratio = (ratio * 0xfff2e50f5f656932ef12357cf3c7fdcc) >> 128;\n        if (absTick & 0x8 != 0) ratio = (ratio * 0xffe5caca7e10e4e61c3624eaa0941cd0) >> 128;\n        if (absTick & 0x10 != 0) ratio = (ratio * 0xffcb9843d60f6159c9db58835c926644) >> 128;\n        if (absTick & 0x20 != 0) ratio = (ratio * 0xff973b41fa98c081472e6896dfb254c0) >> 128;\n        if (absTick & 0x40 != 0) ratio = (ratio * 0xff2ea16466c96a3843ec78b326b52861) >> 128;\n        if (absTick & 0x80 != 0) ratio = (ratio * 0xfe5dee046a99a2a811c461f1969c3053) >> 128;\n        if (absTick & 0x100 != 0) ratio = (ratio * 0xfcbe86c7900a88aedcffc83b479aa3a4) >> 128;\n        if (absTick & 0x200 != 0) ratio = (ratio * 0xf987a7253ac413176f2b074cf7815e54) >> 128;\n        if (absTick & 0x400 != 0) ratio = (ratio * 0xf3392b0822b70005940c7a398e4b70f3) >> 128;\n        if (absTick & 0x800 != 0) ratio = (ratio * 0xe7159475a2c29b7443b29c7fa6e889d9) >> 128;\n        if (absTick & 0x1000 != 0) ratio = (ratio * 0xd097f3bdfd2022b8845ad8f792aa5825) >> 128;\n        if (absTick & 0x2000 != 0) ratio = (ratio * 0xa9f746462d870fdf8a65dc1f90e061e5) >> 128;\n        if (absTick & 0x4000 != 0) ratio = (ratio * 0x70d869a156d2a1b890bb3df62baf32f7) >> 128;\n        if (absTick & 0x8000 != 0) ratio = (ratio * 0x31be135f97d08fd981231505542fcfa6) >> 128;\n        if (absTick & 0x10000 != 0) ratio = (ratio * 0x9aa508b5b7a84e1c677de54f3e99bc9) >> 128;\n        if (absTick & 0x20000 != 0) ratio = (ratio * 0x5d6af8dedb81196699c329225ee604) >> 128;\n        if (absTick & 0x40000 != 0) ratio = (ratio * 0x2216e584f5fa1ea926041bedfe98) >> 128;\n        if (absTick & 0x80000 != 0) ratio = (ratio * 0x48a170391f7dc42444e8fa2) >> 128;\n\n        if (tick > 0) ratio = type(uint256).max / ratio;\n\n        // this divides by 1<<32 rounding up to go from a Q128.128 to a Q128.96.\n        // we then downcast because we know the result always fits within 160 bits due to our tick input constraint\n        // we round up in the division so getTickAtSqrtRatio of the output price is always consistent\n        sqrtPriceX96 = uint160((ratio >> 32) + (ratio % (1 << 32) == 0 ? 0 : 1));\n    }\n\n    /// @notice Calculates the greatest tick value such that getRatioAtTick(tick) <= ratio\n    /// @dev Throws in case sqrtPriceX96 < MIN_SQRT_RATIO, as MIN_SQRT_RATIO is the lowest value getRatioAtTick may\n    /// ever return.\n    /// @param sqrtPriceX96 The sqrt ratio for which to compute the tick as a Q64.96\n    /// @return tick The greatest tick for which the ratio is less than or equal to the input ratio\n    function getTickAtSqrtRatio(uint160 sqrtPriceX96) internal pure returns (int24 tick) {\n        // second inequality must be < because the price can never reach the price at the max tick\n        require(sqrtPriceX96 >= MIN_SQRT_RATIO && sqrtPriceX96 < MAX_SQRT_RATIO, 'R');\n        uint256 ratio = uint256(sqrtPriceX96) << 32;\n\n        uint256 r = ratio;\n        uint256 msb = 0;\n\n        assembly {\n            let f := shl(7, gt(r, 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF))\n            msb := or(msb, f)\n            r := shr(f, r)\n        }\n        assembly {\n            let f := shl(6, gt(r, 0xFFFFFFFFFFFFFFFF))\n            msb := or(msb, f)\n            r := shr(f, r)\n        }\n        assembly {\n            let f := shl(5, gt(r, 0xFFFFFFFF))\n            msb := or(msb, f)\n            r := shr(f, r)\n        }\n        assembly {\n            let f := shl(4, gt(r, 0xFFFF))\n            msb := or(msb, f)\n            r := shr(f, r)\n        }\n        assembly {\n            let f := shl(3, gt(r, 0xFF))\n            msb := or(msb, f)\n            r := shr(f, r)\n        }\n        assembly {\n            let f := shl(2, gt(r, 0xF))\n            msb := or(msb, f)\n            r := shr(f, r)\n        }\n        assembly {\n            let f := shl(1, gt(r, 0x3))\n            msb := or(msb, f)\n            r := shr(f, r)\n        }\n        assembly {\n            let f := gt(r, 0x1)\n            msb := or(msb, f)\n        }\n\n        if (msb >= 128) r = ratio >> (msb - 127);\n        else r = ratio << (127 - msb);\n\n        int256 log_2 = (int256(msb) - 128) << 64;\n\n        assembly {\n            r := shr(127, mul(r, r))\n            let f := shr(128, r)\n            log_2 := or(log_2, shl(63, f))\n            r := shr(f, r)\n        }\n        assembly {\n            r := shr(127, mul(r, r))\n            let f := shr(128, r)\n            log_2 := or(log_2, shl(62, f))\n            r := shr(f, r)\n        }\n        assembly {\n            r := shr(127, mul(r, r))\n            let f := shr(128, r)\n            log_2 := or(log_2, shl(61, f))\n            r := shr(f, r)\n        }\n        assembly {\n            r := shr(127, mul(r, r))\n            let f := shr(128, r)\n            log_2 := or(log_2, shl(60, f))\n            r := shr(f, r)\n        }\n        assembly {\n            r := shr(127, mul(r, r))\n            let f := shr(128, r)\n            log_2 := or(log_2, shl(59, f))\n            r := shr(f, r)\n        }\n        assembly {\n            r := shr(127, mul(r, r))\n            let f := shr(128, r)\n            log_2 := or(log_2, shl(58, f))\n            r := shr(f, r)\n        }\n        assembly {\n            r := shr(127, mul(r, r))\n            let f := shr(128, r)\n            log_2 := or(log_2, shl(57, f))\n            r := shr(f, r)\n        }\n        assembly {\n            r := shr(127, mul(r, r))\n            let f := shr(128, r)\n            log_2 := or(log_2, shl(56, f))\n            r := shr(f, r)\n        }\n        assembly {\n            r := shr(127, mul(r, r))\n            let f := shr(128, r)\n            log_2 := or(log_2, shl(55, f))\n            r := shr(f, r)\n        }\n        assembly {\n            r := shr(127, mul(r, r))\n            let f := shr(128, r)\n            log_2 := or(log_2, shl(54, f))\n            r := shr(f, r)\n        }\n        assembly {\n            r := shr(127, mul(r, r))\n            let f := shr(128, r)\n            log_2 := or(log_2, shl(53, f))\n            r := shr(f, r)\n        }\n        assembly {\n            r := shr(127, mul(r, r))\n            let f := shr(128, r)\n            log_2 := or(log_2, shl(52, f))\n            r := shr(f, r)\n        }\n        assembly {\n            r := shr(127, mul(r, r))\n            let f := shr(128, r)\n            log_2 := or(log_2, shl(51, f))\n            r := shr(f, r)\n        }\n        assembly {\n            r := shr(127, mul(r, r))\n            let f := shr(128, r)\n            log_2 := or(log_2, shl(50, f))\n        }\n\n        int256 log_sqrt10001 = log_2 * 255738958999603826347141; // 128.128 number\n\n        int24 tickLow = int24((log_sqrt10001 - 3402992956809132418596140100660247210) >> 128);\n        int24 tickHi = int24((log_sqrt10001 + 291339464771989622907027621153398088495) >> 128);\n\n        tick = tickLow == tickHi ? tickLow : getSqrtRatioAtTick(tickHi) <= sqrtPriceX96 ? tickHi : tickLow;\n    }\n}\n"
			},
			"@uniswap/v3-core/contracts/libraries/FullMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity >=0.4.0 <0.8.0;\n\n/// @title Contains 512-bit math functions\n/// @notice Facilitates multiplication and division that can have overflow of an intermediate value without any loss of precision\n/// @dev Handles \"phantom overflow\" i.e., allows multiplication and division where an intermediate value overflows 256 bits\nlibrary FullMath {\n    /// @notice Calculates floor(a×b÷denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n    /// @param a The multiplicand\n    /// @param b The multiplier\n    /// @param denominator The divisor\n    /// @return result The 256-bit result\n    /// @dev Credit to Remco Bloemen under MIT license https://xn--2-umb.com/21/muldiv\n    function mulDiv(\n        uint256 a,\n        uint256 b,\n        uint256 denominator\n    ) internal pure returns (uint256 result) {\n        // 512-bit multiply [prod1 prod0] = a * b\n        // Compute the product mod 2**256 and mod 2**256 - 1\n        // then use the Chinese Remainder Theorem to reconstruct\n        // the 512 bit result. The result is stored in two 256\n        // variables such that product = prod1 * 2**256 + prod0\n        uint256 prod0; // Least significant 256 bits of the product\n        uint256 prod1; // Most significant 256 bits of the product\n        assembly {\n            let mm := mulmod(a, b, not(0))\n            prod0 := mul(a, b)\n            prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n        }\n\n        // Handle non-overflow cases, 256 by 256 division\n        if (prod1 == 0) {\n            require(denominator > 0);\n            assembly {\n                result := div(prod0, denominator)\n            }\n            return result;\n        }\n\n        // Make sure the result is less than 2**256.\n        // Also prevents denominator == 0\n        require(denominator > prod1);\n\n        ///////////////////////////////////////////////\n        // 512 by 256 division.\n        ///////////////////////////////////////////////\n\n        // Make division exact by subtracting the remainder from [prod1 prod0]\n        // Compute remainder using mulmod\n        uint256 remainder;\n        assembly {\n            remainder := mulmod(a, b, denominator)\n        }\n        // Subtract 256 bit number from 512 bit number\n        assembly {\n            prod1 := sub(prod1, gt(remainder, prod0))\n            prod0 := sub(prod0, remainder)\n        }\n\n        // Factor powers of two out of denominator\n        // Compute largest power of two divisor of denominator.\n        // Always >= 1.\n        uint256 twos = -denominator & denominator;\n        // Divide denominator by power of two\n        assembly {\n            denominator := div(denominator, twos)\n        }\n\n        // Divide [prod1 prod0] by the factors of two\n        assembly {\n            prod0 := div(prod0, twos)\n        }\n        // Shift in bits from prod1 into prod0. For this we need\n        // to flip `twos` such that it is 2**256 / twos.\n        // If twos is zero, then it becomes one\n        assembly {\n            twos := add(div(sub(0, twos), twos), 1)\n        }\n        prod0 |= prod1 * twos;\n\n        // Invert denominator mod 2**256\n        // Now that denominator is an odd number, it has an inverse\n        // modulo 2**256 such that denominator * inv = 1 mod 2**256.\n        // Compute the inverse by starting with a seed that is correct\n        // correct for four bits. That is, denominator * inv = 1 mod 2**4\n        uint256 inv = (3 * denominator) ^ 2;\n        // Now use Newton-Raphson iteration to improve the precision.\n        // Thanks to Hensel's lifting lemma, this also works in modular\n        // arithmetic, doubling the correct bits in each step.\n        inv *= 2 - denominator * inv; // inverse mod 2**8\n        inv *= 2 - denominator * inv; // inverse mod 2**16\n        inv *= 2 - denominator * inv; // inverse mod 2**32\n        inv *= 2 - denominator * inv; // inverse mod 2**64\n        inv *= 2 - denominator * inv; // inverse mod 2**128\n        inv *= 2 - denominator * inv; // inverse mod 2**256\n\n        // Because the division is now exact we can divide by multiplying\n        // with the modular inverse of denominator. This will give us the\n        // correct result modulo 2**256. Since the precoditions guarantee\n        // that the outcome is less than 2**256, this is the final result.\n        // We don't need to compute the high bits of the result and prod1\n        // is no longer required.\n        result = prod0 * inv;\n        return result;\n    }\n\n    /// @notice Calculates ceil(a×b÷denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n    /// @param a The multiplicand\n    /// @param b The multiplier\n    /// @param denominator The divisor\n    /// @return result The 256-bit result\n    function mulDivRoundingUp(\n        uint256 a,\n        uint256 b,\n        uint256 denominator\n    ) internal pure returns (uint256 result) {\n        result = mulDiv(a, b, denominator);\n        if (mulmod(a, b, denominator) > 0) {\n            require(result < type(uint256).max);\n            result++;\n        }\n    }\n}\n"
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Events emitted by a pool\n/// @notice Contains all events emitted by the pool\ninterface IUniswapV3PoolEvents {\n    /// @notice Emitted exactly once by a pool when #initialize is first called on the pool\n    /// @dev Mint/Burn/Swap cannot be emitted by the pool before Initialize\n    /// @param sqrtPriceX96 The initial sqrt price of the pool, as a Q64.96\n    /// @param tick The initial tick of the pool, i.e. log base 1.0001 of the starting price of the pool\n    event Initialize(uint160 sqrtPriceX96, int24 tick);\n\n    /// @notice Emitted when liquidity is minted for a given position\n    /// @param sender The address that minted the liquidity\n    /// @param owner The owner of the position and recipient of any minted liquidity\n    /// @param tickLower The lower tick of the position\n    /// @param tickUpper The upper tick of the position\n    /// @param amount The amount of liquidity minted to the position range\n    /// @param amount0 How much token0 was required for the minted liquidity\n    /// @param amount1 How much token1 was required for the minted liquidity\n    event Mint(\n        address sender,\n        address indexed owner,\n        int24 indexed tickLower,\n        int24 indexed tickUpper,\n        uint128 amount,\n        uint256 amount0,\n        uint256 amount1\n    );\n\n    /// @notice Emitted when fees are collected by the owner of a position\n    /// @dev Collect events may be emitted with zero amount0 and amount1 when the caller chooses not to collect fees\n    /// @param owner The owner of the position for which fees are collected\n    /// @param tickLower The lower tick of the position\n    /// @param tickUpper The upper tick of the position\n    /// @param amount0 The amount of token0 fees collected\n    /// @param amount1 The amount of token1 fees collected\n    event Collect(\n        address indexed owner,\n        address recipient,\n        int24 indexed tickLower,\n        int24 indexed tickUpper,\n        uint128 amount0,\n        uint128 amount1\n    );\n\n    /// @notice Emitted when a position's liquidity is removed\n    /// @dev Does not withdraw any fees earned by the liquidity position, which must be withdrawn via #collect\n    /// @param owner The owner of the position for which liquidity is removed\n    /// @param tickLower The lower tick of the position\n    /// @param tickUpper The upper tick of the position\n    /// @param amount The amount of liquidity to remove\n    /// @param amount0 The amount of token0 withdrawn\n    /// @param amount1 The amount of token1 withdrawn\n    event Burn(\n        address indexed owner,\n        int24 indexed tickLower,\n        int24 indexed tickUpper,\n        uint128 amount,\n        uint256 amount0,\n        uint256 amount1\n    );\n\n    /// @notice Emitted by the pool for any swaps between token0 and token1\n    /// @param sender The address that initiated the swap call, and that received the callback\n    /// @param recipient The address that received the output of the swap\n    /// @param amount0 The delta of the token0 balance of the pool\n    /// @param amount1 The delta of the token1 balance of the pool\n    /// @param sqrtPriceX96 The sqrt(price) of the pool after the swap, as a Q64.96\n    /// @param liquidity The liquidity of the pool after the swap\n    /// @param tick The log base 1.0001 of price of the pool after the swap\n    event Swap(\n        address indexed sender,\n        address indexed recipient,\n        int256 amount0,\n        int256 amount1,\n        uint160 sqrtPriceX96,\n        uint128 liquidity,\n        int24 tick\n    );\n\n    /// @notice Emitted by the pool for any flashes of token0/token1\n    /// @param sender The address that initiated the swap call, and that received the callback\n    /// @param recipient The address that received the tokens from flash\n    /// @param amount0 The amount of token0 that was flashed\n    /// @param amount1 The amount of token1 that was flashed\n    /// @param paid0 The amount of token0 paid for the flash, which can exceed the amount0 plus the fee\n    /// @param paid1 The amount of token1 paid for the flash, which can exceed the amount1 plus the fee\n    event Flash(\n        address indexed sender,\n        address indexed recipient,\n        uint256 amount0,\n        uint256 amount1,\n        uint256 paid0,\n        uint256 paid1\n    );\n\n    /// @notice Emitted by the pool for increases to the number of observations that can be stored\n    /// @dev observationCardinalityNext is not the observation cardinality until an observation is written at the index\n    /// just before a mint/swap/burn.\n    /// @param observationCardinalityNextOld The previous value of the next observation cardinality\n    /// @param observationCardinalityNextNew The updated value of the next observation cardinality\n    event IncreaseObservationCardinalityNext(\n        uint16 observationCardinalityNextOld,\n        uint16 observationCardinalityNextNew\n    );\n\n    /// @notice Emitted when the protocol fee is changed by the pool\n    /// @param feeProtocol0Old The previous value of the token0 protocol fee\n    /// @param feeProtocol1Old The previous value of the token1 protocol fee\n    /// @param feeProtocol0New The updated value of the token0 protocol fee\n    /// @param feeProtocol1New The updated value of the token1 protocol fee\n    event SetFeeProtocol(uint8 feeProtocol0Old, uint8 feeProtocol1Old, uint8 feeProtocol0New, uint8 feeProtocol1New);\n\n    /// @notice Emitted when the collected protocol fees are withdrawn by the factory owner\n    /// @param sender The address that collects the protocol fees\n    /// @param recipient The address that receives the collected protocol fees\n    /// @param amount0 The amount of token0 protocol fees that is withdrawn\n    /// @param amount0 The amount of token1 protocol fees that is withdrawn\n    event CollectProtocol(address indexed sender, address indexed recipient, uint128 amount0, uint128 amount1);\n}\n"
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Permissioned pool actions\n/// @notice Contains pool methods that may only be called by the factory owner\ninterface IUniswapV3PoolOwnerActions {\n    /// @notice Set the denominator of the protocol's % share of the fees\n    /// @param feeProtocol0 new protocol fee for token0 of the pool\n    /// @param feeProtocol1 new protocol fee for token1 of the pool\n    function setFeeProtocol(uint8 feeProtocol0, uint8 feeProtocol1) external;\n\n    /// @notice Collect the protocol fee accrued to the pool\n    /// @param recipient The address to which collected protocol fees should be sent\n    /// @param amount0Requested The maximum amount of token0 to send, can be 0 to collect fees in only token1\n    /// @param amount1Requested The maximum amount of token1 to send, can be 0 to collect fees in only token0\n    /// @return amount0 The protocol fee collected in token0\n    /// @return amount1 The protocol fee collected in token1\n    function collectProtocol(\n        address recipient,\n        uint128 amount0Requested,\n        uint128 amount1Requested\n    ) external returns (uint128 amount0, uint128 amount1);\n}\n"
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Permissionless pool actions\n/// @notice Contains pool methods that can be called by anyone\ninterface IUniswapV3PoolActions {\n    /// @notice Sets the initial price for the pool\n    /// @dev Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value\n    /// @param sqrtPriceX96 the initial sqrt price of the pool as a Q64.96\n    function initialize(uint160 sqrtPriceX96) external;\n\n    /// @notice Adds liquidity for the given recipient/tickLower/tickUpper position\n    /// @dev The caller of this method receives a callback in the form of IUniswapV3MintCallback#uniswapV3MintCallback\n    /// in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends\n    /// on tickLower, tickUpper, the amount of liquidity, and the current price.\n    /// @param recipient The address for which the liquidity will be created\n    /// @param tickLower The lower tick of the position in which to add liquidity\n    /// @param tickUpper The upper tick of the position in which to add liquidity\n    /// @param amount The amount of liquidity to mint\n    /// @param data Any data that should be passed through to the callback\n    /// @return amount0 The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback\n    /// @return amount1 The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback\n    function mint(\n        address recipient,\n        int24 tickLower,\n        int24 tickUpper,\n        uint128 amount,\n        bytes calldata data\n    ) external returns (uint256 amount0, uint256 amount1);\n\n    /// @notice Collects tokens owed to a position\n    /// @dev Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity.\n    /// Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or\n    /// amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the\n    /// actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.\n    /// @param recipient The address which should receive the fees collected\n    /// @param tickLower The lower tick of the position for which to collect fees\n    /// @param tickUpper The upper tick of the position for which to collect fees\n    /// @param amount0Requested How much token0 should be withdrawn from the fees owed\n    /// @param amount1Requested How much token1 should be withdrawn from the fees owed\n    /// @return amount0 The amount of fees collected in token0\n    /// @return amount1 The amount of fees collected in token1\n    function collect(\n        address recipient,\n        int24 tickLower,\n        int24 tickUpper,\n        uint128 amount0Requested,\n        uint128 amount1Requested\n    ) external returns (uint128 amount0, uint128 amount1);\n\n    /// @notice Burn liquidity from the sender and account tokens owed for the liquidity to the position\n    /// @dev Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0\n    /// @dev Fees must be collected separately via a call to #collect\n    /// @param tickLower The lower tick of the position for which to burn liquidity\n    /// @param tickUpper The upper tick of the position for which to burn liquidity\n    /// @param amount How much liquidity to burn\n    /// @return amount0 The amount of token0 sent to the recipient\n    /// @return amount1 The amount of token1 sent to the recipient\n    function burn(\n        int24 tickLower,\n        int24 tickUpper,\n        uint128 amount\n    ) external returns (uint256 amount0, uint256 amount1);\n\n    /// @notice Swap token0 for token1, or token1 for token0\n    /// @dev The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback\n    /// @param recipient The address to receive the output of the swap\n    /// @param zeroForOne The direction of the swap, true for token0 to token1, false for token1 to token0\n    /// @param amountSpecified The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)\n    /// @param sqrtPriceLimitX96 The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this\n    /// value after the swap. If one for zero, the price cannot be greater than this value after the swap\n    /// @param data Any data to be passed through to the callback\n    /// @return amount0 The delta of the balance of token0 of the pool, exact when negative, minimum when positive\n    /// @return amount1 The delta of the balance of token1 of the pool, exact when negative, minimum when positive\n    function swap(\n        address recipient,\n        bool zeroForOne,\n        int256 amountSpecified,\n        uint160 sqrtPriceLimitX96,\n        bytes calldata data\n    ) external returns (int256 amount0, int256 amount1);\n\n    /// @notice Receive token0 and/or token1 and pay it back, plus a fee, in the callback\n    /// @dev The caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallback\n    /// @dev Can be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling\n    /// with 0 amount{0,1} and sending the donation amount(s) from the callback\n    /// @param recipient The address which will receive the token0 and token1 amounts\n    /// @param amount0 The amount of token0 to send\n    /// @param amount1 The amount of token1 to send\n    /// @param data Any data to be passed through to the callback\n    function flash(\n        address recipient,\n        uint256 amount0,\n        uint256 amount1,\n        bytes calldata data\n    ) external;\n\n    /// @notice Increase the maximum number of price and liquidity observations that this pool will store\n    /// @dev This method is no-op if the pool already has an observationCardinalityNext greater than or equal to\n    /// the input observationCardinalityNext.\n    /// @param observationCardinalityNext The desired minimum number of observations for the pool to store\n    function increaseObservationCardinalityNext(uint16 observationCardinalityNext) external;\n}\n"
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Pool state that is not stored\n/// @notice Contains view functions to provide information about the pool that is computed rather than stored on the\n/// blockchain. The functions here may have variable gas costs.\ninterface IUniswapV3PoolDerivedState {\n    /// @notice Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp\n    /// @dev To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing\n    /// the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick,\n    /// you must call it with secondsAgos = [3600, 0].\n    /// @dev The time weighted average tick represents the geometric time weighted average price of the pool, in\n    /// log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.\n    /// @param secondsAgos From how long ago each cumulative tick and liquidity value should be returned\n    /// @return tickCumulatives Cumulative tick values as of each `secondsAgos` from the current block timestamp\n    /// @return secondsPerLiquidityCumulativeX128s Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block\n    /// timestamp\n    function observe(uint32[] calldata secondsAgos)\n        external\n        view\n        returns (int56[] memory tickCumulatives, uint160[] memory secondsPerLiquidityCumulativeX128s);\n\n    /// @notice Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range\n    /// @dev Snapshots must only be compared to other snapshots, taken over a period for which a position existed.\n    /// I.e., snapshots cannot be compared if a position is not held for the entire period between when the first\n    /// snapshot is taken and the second snapshot is taken.\n    /// @param tickLower The lower tick of the range\n    /// @param tickUpper The upper tick of the range\n    /// @return tickCumulativeInside The snapshot of the tick accumulator for the range\n    /// @return secondsPerLiquidityInsideX128 The snapshot of seconds per liquidity for the range\n    /// @return secondsInside The snapshot of seconds per liquidity for the range\n    function snapshotCumulativesInside(int24 tickLower, int24 tickUpper)\n        external\n        view\n        returns (\n            int56 tickCumulativeInside,\n            uint160 secondsPerLiquidityInsideX128,\n            uint32 secondsInside\n        );\n}\n"
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Pool state that can change\n/// @notice These methods compose the pool's state, and can change with any frequency including multiple times\n/// per transaction\ninterface IUniswapV3PoolState {\n    /// @notice The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas\n    /// when accessed externally.\n    /// @return sqrtPriceX96 The current price of the pool as a sqrt(token1/token0) Q64.96 value\n    /// tick The current tick of the pool, i.e. according to the last tick transition that was run.\n    /// This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick\n    /// boundary.\n    /// observationIndex The index of the last oracle observation that was written,\n    /// observationCardinality The current maximum number of observations stored in the pool,\n    /// observationCardinalityNext The next maximum number of observations, to be updated when the observation.\n    /// feeProtocol The protocol fee for both tokens of the pool.\n    /// Encoded as two 4 bit values, where the protocol fee of token1 is shifted 4 bits and the protocol fee of token0\n    /// is the lower 4 bits. Used as the denominator of a fraction of the swap fee, e.g. 4 means 1/4th of the swap fee.\n    /// unlocked Whether the pool is currently locked to reentrancy\n    function slot0()\n        external\n        view\n        returns (\n            uint160 sqrtPriceX96,\n            int24 tick,\n            uint16 observationIndex,\n            uint16 observationCardinality,\n            uint16 observationCardinalityNext,\n            uint8 feeProtocol,\n            bool unlocked\n        );\n\n    /// @notice The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool\n    /// @dev This value can overflow the uint256\n    function feeGrowthGlobal0X128() external view returns (uint256);\n\n    /// @notice The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool\n    /// @dev This value can overflow the uint256\n    function feeGrowthGlobal1X128() external view returns (uint256);\n\n    /// @notice The amounts of token0 and token1 that are owed to the protocol\n    /// @dev Protocol fees will never exceed uint128 max in either token\n    function protocolFees() external view returns (uint128 token0, uint128 token1);\n\n    /// @notice The currently in range liquidity available to the pool\n    /// @dev This value has no relationship to the total liquidity across all ticks\n    function liquidity() external view returns (uint128);\n\n    /// @notice Look up information about a specific tick in the pool\n    /// @param tick The tick to look up\n    /// @return liquidityGross the total amount of position liquidity that uses the pool either as tick lower or\n    /// tick upper,\n    /// liquidityNet how much liquidity changes when the pool price crosses the tick,\n    /// feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0,\n    /// feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1,\n    /// tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick\n    /// secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick,\n    /// secondsOutside the seconds spent on the other side of the tick from the current tick,\n    /// initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false.\n    /// Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0.\n    /// In addition, these values are only relative and must be used only in comparison to previous snapshots for\n    /// a specific position.\n    function ticks(int24 tick)\n        external\n        view\n        returns (\n            uint128 liquidityGross,\n            int128 liquidityNet,\n            uint256 feeGrowthOutside0X128,\n            uint256 feeGrowthOutside1X128,\n            int56 tickCumulativeOutside,\n            uint160 secondsPerLiquidityOutsideX128,\n            uint32 secondsOutside,\n            bool initialized\n        );\n\n    /// @notice Returns 256 packed tick initialized boolean values. See TickBitmap for more information\n    function tickBitmap(int16 wordPosition) external view returns (uint256);\n\n    /// @notice Returns the information about a position by the position's key\n    /// @param key The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper\n    /// @return _liquidity The amount of liquidity in the position,\n    /// Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke,\n    /// Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke,\n    /// Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke,\n    /// Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke\n    function positions(bytes32 key)\n        external\n        view\n        returns (\n            uint128 _liquidity,\n            uint256 feeGrowthInside0LastX128,\n            uint256 feeGrowthInside1LastX128,\n            uint128 tokensOwed0,\n            uint128 tokensOwed1\n        );\n\n    /// @notice Returns data about a specific observation index\n    /// @param index The element of the observations array to fetch\n    /// @dev You most likely want to use #observe() instead of this method to get an observation as of some amount of time\n    /// ago, rather than at a specific index in the array.\n    /// @return blockTimestamp The timestamp of the observation,\n    /// Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp,\n    /// Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp,\n    /// Returns initialized whether the observation has been initialized and the values are safe to use\n    function observations(uint256 index)\n        external\n        view\n        returns (\n            uint32 blockTimestamp,\n            int56 tickCumulative,\n            uint160 secondsPerLiquidityCumulativeX128,\n            bool initialized\n        );\n}\n"
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Pool state that never changes\n/// @notice These parameters are fixed for a pool forever, i.e., the methods will always return the same values\ninterface IUniswapV3PoolImmutables {\n    /// @notice The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface\n    /// @return The contract address\n    function factory() external view returns (address);\n\n    /// @notice The first of the two tokens of the pool, sorted by address\n    /// @return The token contract address\n    function token0() external view returns (address);\n\n    /// @notice The second of the two tokens of the pool, sorted by address\n    /// @return The token contract address\n    function token1() external view returns (address);\n\n    /// @notice The pool's fee in hundredths of a bip, i.e. 1e-6\n    /// @return The fee\n    function fee() external view returns (uint24);\n\n    /// @notice The pool tick spacing\n    /// @dev Ticks can only be used at multiples of this value, minimum of 1 and always positive\n    /// e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ...\n    /// This value is an int24 to avoid casting even though it is always positive.\n    /// @return The tick spacing\n    function tickSpacing() external view returns (int24);\n\n    /// @notice The maximum amount of position liquidity that can use any tick in the range\n    /// @dev This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and\n    /// also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool\n    /// @return The max amount of liquidity per tick\n    function maxLiquidityPerTick() external view returns (uint128);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@uniswap/v2-core/contracts/interfaces/IUniswapV2Factory.sol": {
				"IUniswapV2Factory": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "token0",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "token1",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "pair",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "PairCreated",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "allPairs",
							"outputs": [
								{
									"internalType": "address",
									"name": "pair",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "allPairsLength",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								}
							],
							"name": "createPair",
							"outputs": [
								{
									"internalType": "address",
									"name": "pair",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "feeTo",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "feeToSetter",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								}
							],
							"name": "getPair",
							"outputs": [
								{
									"internalType": "address",
									"name": "pair",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "setFeeTo",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "setFeeToSetter",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allPairs(uint256)": "1e3dd18b",
							"allPairsLength()": "574f2ba3",
							"createPair(address,address)": "c9c65396",
							"feeTo()": "017e7e58",
							"feeToSetter()": "094b7415",
							"getPair(address,address)": "e6a43905",
							"setFeeTo(address)": "f46901ed",
							"setFeeToSetter(address)": "a2e74af6"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"PairCreated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"allPairs\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"allPairsLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"}],\"name\":\"createPair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeTo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeToSetter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"}],\"name\":\"getPair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"setFeeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"setFeeToSetter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v2-core/contracts/interfaces/IUniswapV2Factory.sol\":\"IUniswapV2Factory\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v2-core/contracts/interfaces/IUniswapV2Factory.sol\":{\"keccak256\":\"0xe5905c0989cf5a865ed9bb7b9252536ca011c5b744017a82a7d4443b9c00a891\",\"urls\":[\"bzz-raw://5d2a90a0a796491507462a3da18c3f8819721d571572d765a2207c35bf0a0389\",\"dweb:/ipfs/Qmf9ACYiT3qzjgsYuhm866FBdiBpRMXAPpQhSFbgqcyhHt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@uniswap/v2-core/contracts/interfaces/IUniswapV2Pair.sol": {
				"IUniswapV2Pair": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "Burn",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "Mint",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0In",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1In",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0Out",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1Out",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "Swap",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint112",
									"name": "reserve0",
									"type": "uint112"
								},
								{
									"indexed": false,
									"internalType": "uint112",
									"name": "reserve1",
									"type": "uint112"
								}
							],
							"name": "Sync",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "MINIMUM_LIQUIDITY",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "PERMIT_TYPEHASH",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "burn",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getReserves",
							"outputs": [
								{
									"internalType": "uint112",
									"name": "reserve0",
									"type": "uint112"
								},
								{
									"internalType": "uint112",
									"name": "reserve1",
									"type": "uint112"
								},
								{
									"internalType": "uint32",
									"name": "blockTimestampLast",
									"type": "uint32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "kLast",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "mint",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "price0CumulativeLast",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "price1CumulativeLast",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "skim",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount0Out",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1Out",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "swap",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "sync",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token0",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token1",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"MINIMUM_LIQUIDITY()": "ba9a7a56",
							"PERMIT_TYPEHASH()": "30adf81f",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(address)": "89afcb44",
							"decimals()": "313ce567",
							"factory()": "c45a0155",
							"getReserves()": "0902f1ac",
							"initialize(address,address)": "485cc955",
							"kLast()": "7464fc3d",
							"mint(address)": "6a627842",
							"name()": "06fdde03",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf",
							"price0CumulativeLast()": "5909c0d5",
							"price1CumulativeLast()": "5a3d5493",
							"skim(address)": "bc25cf77",
							"swap(uint256,uint256,address,bytes)": "022c0d9f",
							"symbol()": "95d89b41",
							"sync()": "fff6cae9",
							"token0()": "0dfe1681",
							"token1()": "d21220a7",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0In\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1In\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0Out\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1Out\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"Swap\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint112\",\"name\":\"reserve0\",\"type\":\"uint112\"},{\"indexed\":false,\"internalType\":\"uint112\",\"name\":\"reserve1\",\"type\":\"uint112\"}],\"name\":\"Sync\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MINIMUM_LIQUIDITY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PERMIT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getReserves\",\"outputs\":[{\"internalType\":\"uint112\",\"name\":\"reserve0\",\"type\":\"uint112\"},{\"internalType\":\"uint112\",\"name\":\"reserve1\",\"type\":\"uint112\"},{\"internalType\":\"uint32\",\"name\":\"blockTimestampLast\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"kLast\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"price0CumulativeLast\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"price1CumulativeLast\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"skim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0Out\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1Out\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"swap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sync\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token0\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v2-core/contracts/interfaces/IUniswapV2Pair.sol\":\"IUniswapV2Pair\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v2-core/contracts/interfaces/IUniswapV2Pair.sol\":{\"keccak256\":\"0x7c9bc70e5996c763e02ff38905282bc24fb242b0ef2519a003b36824fc524a4b\",\"urls\":[\"bzz-raw://85d5ad2dd23ee127f40907a12865a1e8cb5828814f6f2480285e1827dd72dedf\",\"dweb:/ipfs/QmayKQWJgWmr46DqWseADyUanmqxh662hPNdAkdHRjiQQH\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol": {
				"IUniswapV2Router01": {
					"abi": [
						{
							"inputs": [],
							"name": "WETH",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountADesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBDesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountAMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "addLiquidity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenDesired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "addLiquidityETH",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountToken",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveOut",
									"type": "uint256"
								}
							],
							"name": "getAmountIn",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveOut",
									"type": "uint256"
								}
							],
							"name": "getAmountOut",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								}
							],
							"name": "getAmountsIn",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								}
							],
							"name": "getAmountsOut",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveB",
									"type": "uint256"
								}
							],
							"name": "quote",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountAMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "removeLiquidity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "removeLiquidityETH",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountToken",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountTokenMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETHMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "approveMax",
									"type": "bool"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "removeLiquidityETHWithPermit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountToken",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountETH",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountAMin",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountBMin",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "approveMax",
									"type": "bool"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "removeLiquidityWithPermit",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountA",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountB",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapETHForExactTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactETHForTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactTokensForETH",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapExactTokensForTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountInMax",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapTokensForExactETH",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountInMax",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "path",
									"type": "address[]"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								}
							],
							"name": "swapTokensForExactTokens",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"WETH()": "ad5c4648",
							"addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)": "e8e33700",
							"addLiquidityETH(address,uint256,uint256,uint256,address,uint256)": "f305d719",
							"factory()": "c45a0155",
							"getAmountIn(uint256,uint256,uint256)": "85f8c259",
							"getAmountOut(uint256,uint256,uint256)": "054d50d4",
							"getAmountsIn(uint256,address[])": "1f00ca74",
							"getAmountsOut(uint256,address[])": "d06ca61f",
							"quote(uint256,uint256,uint256)": "ad615dec",
							"removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)": "baa2abde",
							"removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)": "02751cec",
							"removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)": "ded9382a",
							"removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)": "2195995c",
							"swapETHForExactTokens(uint256,address[],address,uint256)": "fb3bdb41",
							"swapExactETHForTokens(uint256,address[],address,uint256)": "7ff36ab5",
							"swapExactTokensForETH(uint256,uint256,address[],address,uint256)": "18cbafe5",
							"swapExactTokensForTokens(uint256,uint256,address[],address,uint256)": "38ed1739",
							"swapTokensForExactETH(uint256,uint256,address[],address,uint256)": "4a25d94a",
							"swapTokensForExactTokens(uint256,uint256,address[],address,uint256)": "8803dbee"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"WETH\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountADesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBDesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenDesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"addLiquidityETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveOut\",\"type\":\"uint256\"}],\"name\":\"getAmountIn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveOut\",\"type\":\"uint256\"}],\"name\":\"getAmountOut\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"}],\"name\":\"getAmountsIn\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"}],\"name\":\"getAmountsOut\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveB\",\"type\":\"uint256\"}],\"name\":\"quote\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidityETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountTokenMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETHMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"approveMax\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"removeLiquidityETHWithPermit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountETH\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"approveMax\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"removeLiquidityWithPermit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapETHForExactTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactETHForTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForETH\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMax\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapTokensForExactETH\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMax\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapTokensForExactTokens\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol\":\"IUniswapV2Router01\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol\":{\"keccak256\":\"0x8a3c5c449d4b7cd76513ed6995f4b86e4a86f222c770f8442f5fc128ce29b4d2\",\"urls\":[\"bzz-raw://1df63ca373dafae3bd0ee7fe70f890a1dc7c45ed869c01de68413e0e97ff9deb\",\"dweb:/ipfs/QmefJgEYGUL8KX7kQKYTrDweF8GB7yjy3nw5Bmqzryg7PG\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol": {
				"IUniswapV3Factory": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint24",
									"name": "fee",
									"type": "uint24"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickSpacing",
									"type": "int24"
								}
							],
							"name": "FeeAmountEnabled",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "oldOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnerChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "token0",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "token1",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint24",
									"name": "fee",
									"type": "uint24"
								},
								{
									"indexed": false,
									"internalType": "int24",
									"name": "tickSpacing",
									"type": "int24"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "pool",
									"type": "address"
								}
							],
							"name": "PoolCreated",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint24",
									"name": "fee",
									"type": "uint24"
								}
							],
							"name": "createPool",
							"outputs": [
								{
									"internalType": "address",
									"name": "pool",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint24",
									"name": "fee",
									"type": "uint24"
								},
								{
									"internalType": "int24",
									"name": "tickSpacing",
									"type": "int24"
								}
							],
							"name": "enableFeeAmount",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint24",
									"name": "fee",
									"type": "uint24"
								}
							],
							"name": "feeAmountTickSpacing",
							"outputs": [
								{
									"internalType": "int24",
									"name": "",
									"type": "int24"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint24",
									"name": "fee",
									"type": "uint24"
								}
							],
							"name": "getPool",
							"outputs": [
								{
									"internalType": "address",
									"name": "pool",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								}
							],
							"name": "setOwner",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"FeeAmountEnabled(uint24,int24)": {
								"params": {
									"fee": "The enabled fee, denominated in hundredths of a bip",
									"tickSpacing": "The minimum number of ticks between initialized ticks for pools created with the given fee"
								}
							},
							"OwnerChanged(address,address)": {
								"params": {
									"newOwner": "The owner after the owner was changed",
									"oldOwner": "The owner before the owner was changed"
								}
							},
							"PoolCreated(address,address,uint24,int24,address)": {
								"params": {
									"fee": "The fee collected upon every swap in the pool, denominated in hundredths of a bip",
									"pool": "The address of the created pool",
									"tickSpacing": "The minimum number of ticks between initialized ticks",
									"token0": "The first token of the pool by address sort order",
									"token1": "The second token of the pool by address sort order"
								}
							}
						},
						"kind": "dev",
						"methods": {
							"createPool(address,address,uint24)": {
								"details": "tokenA and tokenB may be passed in either order: token0/token1 or token1/token0. tickSpacing is retrieved from the fee. The call will revert if the pool already exists, the fee is invalid, or the token arguments are invalid.",
								"params": {
									"fee": "The desired fee for the pool",
									"tokenA": "One of the two tokens in the desired pool",
									"tokenB": "The other of the two tokens in the desired pool"
								},
								"returns": {
									"pool": "The address of the newly created pool"
								}
							},
							"enableFeeAmount(uint24,int24)": {
								"details": "Fee amounts may never be removed once enabled",
								"params": {
									"fee": "The fee amount to enable, denominated in hundredths of a bip (i.e. 1e-6)",
									"tickSpacing": "The spacing between ticks to be enforced for all pools created with the given fee amount"
								}
							},
							"feeAmountTickSpacing(uint24)": {
								"details": "A fee amount can never be removed, so this value should be hard coded or cached in the calling context",
								"params": {
									"fee": "The enabled fee, denominated in hundredths of a bip. Returns 0 in case of unenabled fee"
								},
								"returns": {
									"_0": "The tick spacing"
								}
							},
							"getPool(address,address,uint24)": {
								"details": "tokenA and tokenB may be passed in either token0/token1 or token1/token0 order",
								"params": {
									"fee": "The fee collected upon every swap in the pool, denominated in hundredths of a bip",
									"tokenA": "The contract address of either token0 or token1",
									"tokenB": "The contract address of the other token"
								},
								"returns": {
									"pool": "The pool address"
								}
							},
							"owner()": {
								"details": "Can be changed by the current owner via setOwner",
								"returns": {
									"_0": "The address of the factory owner"
								}
							},
							"setOwner(address)": {
								"details": "Must be called by the current owner",
								"params": {
									"_owner": "The new owner of the factory"
								}
							}
						},
						"title": "The interface for the Uniswap V3 Factory",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"createPool(address,address,uint24)": "a1671295",
							"enableFeeAmount(uint24,int24)": "8a7c195f",
							"feeAmountTickSpacing(uint24)": "22afcccb",
							"getPool(address,address,uint24)": "1698ee82",
							"owner()": "8da5cb5b",
							"setOwner(address)": "13af4035"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"}],\"name\":\"FeeAmountEnabled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnerChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"PoolCreated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"}],\"name\":\"createPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"}],\"name\":\"enableFeeAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"}],\"name\":\"feeAmountTickSpacing\",\"outputs\":[{\"internalType\":\"int24\",\"name\":\"\",\"type\":\"int24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"}],\"name\":\"getPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"FeeAmountEnabled(uint24,int24)\":{\"params\":{\"fee\":\"The enabled fee, denominated in hundredths of a bip\",\"tickSpacing\":\"The minimum number of ticks between initialized ticks for pools created with the given fee\"}},\"OwnerChanged(address,address)\":{\"params\":{\"newOwner\":\"The owner after the owner was changed\",\"oldOwner\":\"The owner before the owner was changed\"}},\"PoolCreated(address,address,uint24,int24,address)\":{\"params\":{\"fee\":\"The fee collected upon every swap in the pool, denominated in hundredths of a bip\",\"pool\":\"The address of the created pool\",\"tickSpacing\":\"The minimum number of ticks between initialized ticks\",\"token0\":\"The first token of the pool by address sort order\",\"token1\":\"The second token of the pool by address sort order\"}}},\"kind\":\"dev\",\"methods\":{\"createPool(address,address,uint24)\":{\"details\":\"tokenA and tokenB may be passed in either order: token0/token1 or token1/token0. tickSpacing is retrieved from the fee. The call will revert if the pool already exists, the fee is invalid, or the token arguments are invalid.\",\"params\":{\"fee\":\"The desired fee for the pool\",\"tokenA\":\"One of the two tokens in the desired pool\",\"tokenB\":\"The other of the two tokens in the desired pool\"},\"returns\":{\"pool\":\"The address of the newly created pool\"}},\"enableFeeAmount(uint24,int24)\":{\"details\":\"Fee amounts may never be removed once enabled\",\"params\":{\"fee\":\"The fee amount to enable, denominated in hundredths of a bip (i.e. 1e-6)\",\"tickSpacing\":\"The spacing between ticks to be enforced for all pools created with the given fee amount\"}},\"feeAmountTickSpacing(uint24)\":{\"details\":\"A fee amount can never be removed, so this value should be hard coded or cached in the calling context\",\"params\":{\"fee\":\"The enabled fee, denominated in hundredths of a bip. Returns 0 in case of unenabled fee\"},\"returns\":{\"_0\":\"The tick spacing\"}},\"getPool(address,address,uint24)\":{\"details\":\"tokenA and tokenB may be passed in either token0/token1 or token1/token0 order\",\"params\":{\"fee\":\"The fee collected upon every swap in the pool, denominated in hundredths of a bip\",\"tokenA\":\"The contract address of either token0 or token1\",\"tokenB\":\"The contract address of the other token\"},\"returns\":{\"pool\":\"The pool address\"}},\"owner()\":{\"details\":\"Can be changed by the current owner via setOwner\",\"returns\":{\"_0\":\"The address of the factory owner\"}},\"setOwner(address)\":{\"details\":\"Must be called by the current owner\",\"params\":{\"_owner\":\"The new owner of the factory\"}}},\"title\":\"The interface for the Uniswap V3 Factory\",\"version\":1},\"userdoc\":{\"events\":{\"FeeAmountEnabled(uint24,int24)\":{\"notice\":\"Emitted when a new fee amount is enabled for pool creation via the factory\"},\"OwnerChanged(address,address)\":{\"notice\":\"Emitted when the owner of the factory is changed\"},\"PoolCreated(address,address,uint24,int24,address)\":{\"notice\":\"Emitted when a pool is created\"}},\"kind\":\"user\",\"methods\":{\"createPool(address,address,uint24)\":{\"notice\":\"Creates a pool for the given two tokens and fee\"},\"enableFeeAmount(uint24,int24)\":{\"notice\":\"Enables a fee amount with the given tickSpacing\"},\"feeAmountTickSpacing(uint24)\":{\"notice\":\"Returns the tick spacing for a given fee amount, if enabled, or 0 if not enabled\"},\"getPool(address,address,uint24)\":{\"notice\":\"Returns the pool address for a given pair of tokens and a fee, or address 0 if it does not exist\"},\"owner()\":{\"notice\":\"Returns the current owner of the factory\"},\"setOwner(address)\":{\"notice\":\"Updates the owner of the factory\"}},\"notice\":\"The Uniswap V3 Factory facilitates creation of Uniswap V3 pools and control over the protocol fees\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol\":\"IUniswapV3Factory\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol\":{\"keccak256\":\"0xcc3d0c93fc9ac0febbe09f941b465b57f750bcf3b48432da0b97dc289cfdc489\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b9379ad954680c44a0bc523b314ae4c4da735f9fe1d02aa56ea5bdba6f1136f2\",\"dweb:/ipfs/QmZXdgQNXKAckrXWz9R3mc47F1fvDvr28a2ewJrwNAw71B\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"events": {
							"FeeAmountEnabled(uint24,int24)": {
								"notice": "Emitted when a new fee amount is enabled for pool creation via the factory"
							},
							"OwnerChanged(address,address)": {
								"notice": "Emitted when the owner of the factory is changed"
							},
							"PoolCreated(address,address,uint24,int24,address)": {
								"notice": "Emitted when a pool is created"
							}
						},
						"kind": "user",
						"methods": {
							"createPool(address,address,uint24)": {
								"notice": "Creates a pool for the given two tokens and fee"
							},
							"enableFeeAmount(uint24,int24)": {
								"notice": "Enables a fee amount with the given tickSpacing"
							},
							"feeAmountTickSpacing(uint24)": {
								"notice": "Returns the tick spacing for a given fee amount, if enabled, or 0 if not enabled"
							},
							"getPool(address,address,uint24)": {
								"notice": "Returns the pool address for a given pair of tokens and a fee, or address 0 if it does not exist"
							},
							"owner()": {
								"notice": "Returns the current owner of the factory"
							},
							"setOwner(address)": {
								"notice": "Updates the owner of the factory"
							}
						},
						"notice": "The Uniswap V3 Factory facilitates creation of Uniswap V3 pools and control over the protocol fees",
						"version": 1
					}
				}
			},
			"@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol": {
				"IUniswapV3Pool": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "Burn",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"name": "Collect",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"name": "CollectProtocol",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "paid0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "paid1",
									"type": "uint256"
								}
							],
							"name": "Flash",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint16",
									"name": "observationCardinalityNextOld",
									"type": "uint16"
								},
								{
									"indexed": false,
									"internalType": "uint16",
									"name": "observationCardinalityNextNew",
									"type": "uint16"
								}
							],
							"name": "IncreaseObservationCardinalityNext",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								},
								{
									"indexed": false,
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								}
							],
							"name": "Initialize",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "Mint",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol0Old",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol1Old",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol0New",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol1New",
									"type": "uint8"
								}
							],
							"name": "SetFeeProtocol",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "int256",
									"name": "amount0",
									"type": "int256"
								},
								{
									"indexed": false,
									"internalType": "int256",
									"name": "amount1",
									"type": "int256"
								},
								{
									"indexed": false,
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "liquidity",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								}
							],
							"name": "Swap",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								}
							],
							"name": "burn",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"internalType": "uint128",
									"name": "amount0Requested",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1Requested",
									"type": "uint128"
								}
							],
							"name": "collect",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint128",
									"name": "amount0Requested",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1Requested",
									"type": "uint128"
								}
							],
							"name": "collectProtocol",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "fee",
							"outputs": [
								{
									"internalType": "uint24",
									"name": "",
									"type": "uint24"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "feeGrowthGlobal0X128",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "feeGrowthGlobal1X128",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "flash",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "observationCardinalityNext",
									"type": "uint16"
								}
							],
							"name": "increaseObservationCardinalityNext",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "liquidity",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "maxLiquidityPerTick",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "mint",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "observations",
							"outputs": [
								{
									"internalType": "uint32",
									"name": "blockTimestamp",
									"type": "uint32"
								},
								{
									"internalType": "int56",
									"name": "tickCumulative",
									"type": "int56"
								},
								{
									"internalType": "uint160",
									"name": "secondsPerLiquidityCumulativeX128",
									"type": "uint160"
								},
								{
									"internalType": "bool",
									"name": "initialized",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint32[]",
									"name": "secondsAgos",
									"type": "uint32[]"
								}
							],
							"name": "observe",
							"outputs": [
								{
									"internalType": "int56[]",
									"name": "tickCumulatives",
									"type": "int56[]"
								},
								{
									"internalType": "uint160[]",
									"name": "secondsPerLiquidityCumulativeX128s",
									"type": "uint160[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "key",
									"type": "bytes32"
								}
							],
							"name": "positions",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "_liquidity",
									"type": "uint128"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthInside0LastX128",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthInside1LastX128",
									"type": "uint256"
								},
								{
									"internalType": "uint128",
									"name": "tokensOwed0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "tokensOwed1",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "protocolFees",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "token0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "token1",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint8",
									"name": "feeProtocol0",
									"type": "uint8"
								},
								{
									"internalType": "uint8",
									"name": "feeProtocol1",
									"type": "uint8"
								}
							],
							"name": "setFeeProtocol",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "slot0",
							"outputs": [
								{
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								},
								{
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								},
								{
									"internalType": "uint16",
									"name": "observationIndex",
									"type": "uint16"
								},
								{
									"internalType": "uint16",
									"name": "observationCardinality",
									"type": "uint16"
								},
								{
									"internalType": "uint16",
									"name": "observationCardinalityNext",
									"type": "uint16"
								},
								{
									"internalType": "uint8",
									"name": "feeProtocol",
									"type": "uint8"
								},
								{
									"internalType": "bool",
									"name": "unlocked",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								}
							],
							"name": "snapshotCumulativesInside",
							"outputs": [
								{
									"internalType": "int56",
									"name": "tickCumulativeInside",
									"type": "int56"
								},
								{
									"internalType": "uint160",
									"name": "secondsPerLiquidityInsideX128",
									"type": "uint160"
								},
								{
									"internalType": "uint32",
									"name": "secondsInside",
									"type": "uint32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "zeroForOne",
									"type": "bool"
								},
								{
									"internalType": "int256",
									"name": "amountSpecified",
									"type": "int256"
								},
								{
									"internalType": "uint160",
									"name": "sqrtPriceLimitX96",
									"type": "uint160"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "swap",
							"outputs": [
								{
									"internalType": "int256",
									"name": "amount0",
									"type": "int256"
								},
								{
									"internalType": "int256",
									"name": "amount1",
									"type": "int256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int16",
									"name": "wordPosition",
									"type": "int16"
								}
							],
							"name": "tickBitmap",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tickSpacing",
							"outputs": [
								{
									"internalType": "int24",
									"name": "",
									"type": "int24"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								}
							],
							"name": "ticks",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "liquidityGross",
									"type": "uint128"
								},
								{
									"internalType": "int128",
									"name": "liquidityNet",
									"type": "int128"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthOutside0X128",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthOutside1X128",
									"type": "uint256"
								},
								{
									"internalType": "int56",
									"name": "tickCumulativeOutside",
									"type": "int56"
								},
								{
									"internalType": "uint160",
									"name": "secondsPerLiquidityOutsideX128",
									"type": "uint160"
								},
								{
									"internalType": "uint32",
									"name": "secondsOutside",
									"type": "uint32"
								},
								{
									"internalType": "bool",
									"name": "initialized",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token0",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token1",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "The pool interface is broken up into many smaller pieces",
						"kind": "dev",
						"methods": {
							"burn(int24,int24,uint128)": {
								"details": "Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0Fees must be collected separately via a call to #collect",
								"params": {
									"amount": "How much liquidity to burn",
									"tickLower": "The lower tick of the position for which to burn liquidity",
									"tickUpper": "The upper tick of the position for which to burn liquidity"
								},
								"returns": {
									"amount0": "The amount of token0 sent to the recipient",
									"amount1": "The amount of token1 sent to the recipient"
								}
							},
							"collect(address,int24,int24,uint128,uint128)": {
								"details": "Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity. Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.",
								"params": {
									"amount0Requested": "How much token0 should be withdrawn from the fees owed",
									"amount1Requested": "How much token1 should be withdrawn from the fees owed",
									"recipient": "The address which should receive the fees collected",
									"tickLower": "The lower tick of the position for which to collect fees",
									"tickUpper": "The upper tick of the position for which to collect fees"
								},
								"returns": {
									"amount0": "The amount of fees collected in token0",
									"amount1": "The amount of fees collected in token1"
								}
							},
							"collectProtocol(address,uint128,uint128)": {
								"params": {
									"amount0Requested": "The maximum amount of token0 to send, can be 0 to collect fees in only token1",
									"amount1Requested": "The maximum amount of token1 to send, can be 0 to collect fees in only token0",
									"recipient": "The address to which collected protocol fees should be sent"
								},
								"returns": {
									"amount0": "The protocol fee collected in token0",
									"amount1": "The protocol fee collected in token1"
								}
							},
							"factory()": {
								"returns": {
									"_0": "The contract address"
								}
							},
							"fee()": {
								"returns": {
									"_0": "The fee"
								}
							},
							"feeGrowthGlobal0X128()": {
								"details": "This value can overflow the uint256"
							},
							"feeGrowthGlobal1X128()": {
								"details": "This value can overflow the uint256"
							},
							"flash(address,uint256,uint256,bytes)": {
								"details": "The caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallbackCan be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling with 0 amount{0,1} and sending the donation amount(s) from the callback",
								"params": {
									"amount0": "The amount of token0 to send",
									"amount1": "The amount of token1 to send",
									"data": "Any data to be passed through to the callback",
									"recipient": "The address which will receive the token0 and token1 amounts"
								}
							},
							"increaseObservationCardinalityNext(uint16)": {
								"details": "This method is no-op if the pool already has an observationCardinalityNext greater than or equal to the input observationCardinalityNext.",
								"params": {
									"observationCardinalityNext": "The desired minimum number of observations for the pool to store"
								}
							},
							"initialize(uint160)": {
								"details": "Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value",
								"params": {
									"sqrtPriceX96": "the initial sqrt price of the pool as a Q64.96"
								}
							},
							"liquidity()": {
								"details": "This value has no relationship to the total liquidity across all ticks"
							},
							"maxLiquidityPerTick()": {
								"details": "This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool",
								"returns": {
									"_0": "The max amount of liquidity per tick"
								}
							},
							"mint(address,int24,int24,uint128,bytes)": {
								"details": "The caller of this method receives a callback in the form of IUniswapV3MintCallback#uniswapV3MintCallback in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends on tickLower, tickUpper, the amount of liquidity, and the current price.",
								"params": {
									"amount": "The amount of liquidity to mint",
									"data": "Any data that should be passed through to the callback",
									"recipient": "The address for which the liquidity will be created",
									"tickLower": "The lower tick of the position in which to add liquidity",
									"tickUpper": "The upper tick of the position in which to add liquidity"
								},
								"returns": {
									"amount0": "The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback",
									"amount1": "The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback"
								}
							},
							"observations(uint256)": {
								"details": "You most likely want to use #observe() instead of this method to get an observation as of some amount of time ago, rather than at a specific index in the array.",
								"params": {
									"index": "The element of the observations array to fetch"
								},
								"returns": {
									"blockTimestamp": "The timestamp of the observation, Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp, Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp, Returns initialized whether the observation has been initialized and the values are safe to use"
								}
							},
							"observe(uint32[])": {
								"details": "To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick, you must call it with secondsAgos = [3600, 0].The time weighted average tick represents the geometric time weighted average price of the pool, in log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.",
								"params": {
									"secondsAgos": "From how long ago each cumulative tick and liquidity value should be returned"
								},
								"returns": {
									"secondsPerLiquidityCumulativeX128s": "Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block timestamp",
									"tickCumulatives": "Cumulative tick values as of each `secondsAgos` from the current block timestamp"
								}
							},
							"positions(bytes32)": {
								"params": {
									"key": "The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper"
								},
								"returns": {
									"_liquidity": "The amount of liquidity in the position, Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke, Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke, Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke, Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke"
								}
							},
							"protocolFees()": {
								"details": "Protocol fees will never exceed uint128 max in either token"
							},
							"setFeeProtocol(uint8,uint8)": {
								"params": {
									"feeProtocol0": "new protocol fee for token0 of the pool",
									"feeProtocol1": "new protocol fee for token1 of the pool"
								}
							},
							"slot0()": {
								"returns": {
									"sqrtPriceX96": "The current price of the pool as a sqrt(token1/token0) Q64.96 value tick The current tick of the pool, i.e. according to the last tick transition that was run. This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick boundary. observationIndex The index of the last oracle observation that was written, observationCardinality The current maximum number of observations stored in the pool, observationCardinalityNext The next maximum number of observations, to be updated when the observation. feeProtocol The protocol fee for both tokens of the pool. Encoded as two 4 bit values, where the protocol fee of token1 is shifted 4 bits and the protocol fee of token0 is the lower 4 bits. Used as the denominator of a fraction of the swap fee, e.g. 4 means 1/4th of the swap fee. unlocked Whether the pool is currently locked to reentrancy"
								}
							},
							"snapshotCumulativesInside(int24,int24)": {
								"details": "Snapshots must only be compared to other snapshots, taken over a period for which a position existed. I.e., snapshots cannot be compared if a position is not held for the entire period between when the first snapshot is taken and the second snapshot is taken.",
								"params": {
									"tickLower": "The lower tick of the range",
									"tickUpper": "The upper tick of the range"
								},
								"returns": {
									"secondsInside": "The snapshot of seconds per liquidity for the range",
									"secondsPerLiquidityInsideX128": "The snapshot of seconds per liquidity for the range",
									"tickCumulativeInside": "The snapshot of the tick accumulator for the range"
								}
							},
							"swap(address,bool,int256,uint160,bytes)": {
								"details": "The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback",
								"params": {
									"amountSpecified": "The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)",
									"data": "Any data to be passed through to the callback",
									"recipient": "The address to receive the output of the swap",
									"sqrtPriceLimitX96": "The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this value after the swap. If one for zero, the price cannot be greater than this value after the swap",
									"zeroForOne": "The direction of the swap, true for token0 to token1, false for token1 to token0"
								},
								"returns": {
									"amount0": "The delta of the balance of token0 of the pool, exact when negative, minimum when positive",
									"amount1": "The delta of the balance of token1 of the pool, exact when negative, minimum when positive"
								}
							},
							"tickSpacing()": {
								"details": "Ticks can only be used at multiples of this value, minimum of 1 and always positive e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ... This value is an int24 to avoid casting even though it is always positive.",
								"returns": {
									"_0": "The tick spacing"
								}
							},
							"ticks(int24)": {
								"params": {
									"tick": "The tick to look up"
								},
								"returns": {
									"liquidityGross": "the total amount of position liquidity that uses the pool either as tick lower or tick upper, liquidityNet how much liquidity changes when the pool price crosses the tick, feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0, feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1, tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick, secondsOutside the seconds spent on the other side of the tick from the current tick, initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false. Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0. In addition, these values are only relative and must be used only in comparison to previous snapshots for a specific position."
								}
							},
							"token0()": {
								"returns": {
									"_0": "The token contract address"
								}
							},
							"token1()": {
								"returns": {
									"_0": "The token contract address"
								}
							}
						},
						"title": "The interface for a Uniswap V3 Pool",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"burn(int24,int24,uint128)": "a34123a7",
							"collect(address,int24,int24,uint128,uint128)": "4f1eb3d8",
							"collectProtocol(address,uint128,uint128)": "85b66729",
							"factory()": "c45a0155",
							"fee()": "ddca3f43",
							"feeGrowthGlobal0X128()": "f3058399",
							"feeGrowthGlobal1X128()": "46141319",
							"flash(address,uint256,uint256,bytes)": "490e6cbc",
							"increaseObservationCardinalityNext(uint16)": "32148f67",
							"initialize(uint160)": "f637731d",
							"liquidity()": "1a686502",
							"maxLiquidityPerTick()": "70cf754a",
							"mint(address,int24,int24,uint128,bytes)": "3c8a7d8d",
							"observations(uint256)": "252c09d7",
							"observe(uint32[])": "883bdbfd",
							"positions(bytes32)": "514ea4bf",
							"protocolFees()": "1ad8b03b",
							"setFeeProtocol(uint8,uint8)": "8206a4d1",
							"slot0()": "3850c7bd",
							"snapshotCumulativesInside(int24,int24)": "a38807f2",
							"swap(address,bool,int256,uint160,bytes)": "128acb08",
							"tickBitmap(int16)": "5339c296",
							"tickSpacing()": "d0c93a7c",
							"ticks(int24)": "f30dba93",
							"token0()": "0dfe1681",
							"token1()": "d21220a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"name\":\"Collect\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"name\":\"CollectProtocol\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paid0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paid1\",\"type\":\"uint256\"}],\"name\":\"Flash\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"observationCardinalityNextOld\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"observationCardinalityNextNew\",\"type\":\"uint16\"}],\"name\":\"IncreaseObservationCardinalityNext\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"Initialize\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol0Old\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol1Old\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol0New\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol1New\",\"type\":\"uint8\"}],\"name\":\"SetFeeProtocol\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount0\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount1\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"Swap\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount0Requested\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1Requested\",\"type\":\"uint128\"}],\"name\":\"collect\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"amount0Requested\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1Requested\",\"type\":\"uint128\"}],\"name\":\"collectProtocol\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fee\",\"outputs\":[{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeGrowthGlobal0X128\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeGrowthGlobal1X128\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"flash\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"observationCardinalityNext\",\"type\":\"uint16\"}],\"name\":\"increaseObservationCardinalityNext\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidity\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxLiquidityPerTick\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"observations\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"blockTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"int56\",\"name\":\"tickCumulative\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityCumulativeX128\",\"type\":\"uint160\"},{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32[]\",\"name\":\"secondsAgos\",\"type\":\"uint32[]\"}],\"name\":\"observe\",\"outputs\":[{\"internalType\":\"int56[]\",\"name\":\"tickCumulatives\",\"type\":\"int56[]\"},{\"internalType\":\"uint160[]\",\"name\":\"secondsPerLiquidityCumulativeX128s\",\"type\":\"uint160[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"}],\"name\":\"positions\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"_liquidity\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside0LastX128\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside1LastX128\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"tokensOwed0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"tokensOwed1\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"protocolFees\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"token0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"token1\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"feeProtocol0\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"feeProtocol1\",\"type\":\"uint8\"}],\"name\":\"setFeeProtocol\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"slot0\",\"outputs\":[{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"},{\"internalType\":\"uint16\",\"name\":\"observationIndex\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"observationCardinality\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"observationCardinalityNext\",\"type\":\"uint16\"},{\"internalType\":\"uint8\",\"name\":\"feeProtocol\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"unlocked\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"}],\"name\":\"snapshotCumulativesInside\",\"outputs\":[{\"internalType\":\"int56\",\"name\":\"tickCumulativeInside\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityInsideX128\",\"type\":\"uint160\"},{\"internalType\":\"uint32\",\"name\":\"secondsInside\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"zeroForOne\",\"type\":\"bool\"},{\"internalType\":\"int256\",\"name\":\"amountSpecified\",\"type\":\"int256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"swap\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"amount0\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1\",\"type\":\"int256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int16\",\"name\":\"wordPosition\",\"type\":\"int16\"}],\"name\":\"tickBitmap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tickSpacing\",\"outputs\":[{\"internalType\":\"int24\",\"name\":\"\",\"type\":\"int24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"ticks\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"liquidityGross\",\"type\":\"uint128\"},{\"internalType\":\"int128\",\"name\":\"liquidityNet\",\"type\":\"int128\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthOutside0X128\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthOutside1X128\",\"type\":\"uint256\"},{\"internalType\":\"int56\",\"name\":\"tickCumulativeOutside\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityOutsideX128\",\"type\":\"uint160\"},{\"internalType\":\"uint32\",\"name\":\"secondsOutside\",\"type\":\"uint32\"},{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token0\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"The pool interface is broken up into many smaller pieces\",\"kind\":\"dev\",\"methods\":{\"burn(int24,int24,uint128)\":{\"details\":\"Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0Fees must be collected separately via a call to #collect\",\"params\":{\"amount\":\"How much liquidity to burn\",\"tickLower\":\"The lower tick of the position for which to burn liquidity\",\"tickUpper\":\"The upper tick of the position for which to burn liquidity\"},\"returns\":{\"amount0\":\"The amount of token0 sent to the recipient\",\"amount1\":\"The amount of token1 sent to the recipient\"}},\"collect(address,int24,int24,uint128,uint128)\":{\"details\":\"Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity. Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.\",\"params\":{\"amount0Requested\":\"How much token0 should be withdrawn from the fees owed\",\"amount1Requested\":\"How much token1 should be withdrawn from the fees owed\",\"recipient\":\"The address which should receive the fees collected\",\"tickLower\":\"The lower tick of the position for which to collect fees\",\"tickUpper\":\"The upper tick of the position for which to collect fees\"},\"returns\":{\"amount0\":\"The amount of fees collected in token0\",\"amount1\":\"The amount of fees collected in token1\"}},\"collectProtocol(address,uint128,uint128)\":{\"params\":{\"amount0Requested\":\"The maximum amount of token0 to send, can be 0 to collect fees in only token1\",\"amount1Requested\":\"The maximum amount of token1 to send, can be 0 to collect fees in only token0\",\"recipient\":\"The address to which collected protocol fees should be sent\"},\"returns\":{\"amount0\":\"The protocol fee collected in token0\",\"amount1\":\"The protocol fee collected in token1\"}},\"factory()\":{\"returns\":{\"_0\":\"The contract address\"}},\"fee()\":{\"returns\":{\"_0\":\"The fee\"}},\"feeGrowthGlobal0X128()\":{\"details\":\"This value can overflow the uint256\"},\"feeGrowthGlobal1X128()\":{\"details\":\"This value can overflow the uint256\"},\"flash(address,uint256,uint256,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallbackCan be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling with 0 amount{0,1} and sending the donation amount(s) from the callback\",\"params\":{\"amount0\":\"The amount of token0 to send\",\"amount1\":\"The amount of token1 to send\",\"data\":\"Any data to be passed through to the callback\",\"recipient\":\"The address which will receive the token0 and token1 amounts\"}},\"increaseObservationCardinalityNext(uint16)\":{\"details\":\"This method is no-op if the pool already has an observationCardinalityNext greater than or equal to the input observationCardinalityNext.\",\"params\":{\"observationCardinalityNext\":\"The desired minimum number of observations for the pool to store\"}},\"initialize(uint160)\":{\"details\":\"Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value\",\"params\":{\"sqrtPriceX96\":\"the initial sqrt price of the pool as a Q64.96\"}},\"liquidity()\":{\"details\":\"This value has no relationship to the total liquidity across all ticks\"},\"maxLiquidityPerTick()\":{\"details\":\"This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool\",\"returns\":{\"_0\":\"The max amount of liquidity per tick\"}},\"mint(address,int24,int24,uint128,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3MintCallback#uniswapV3MintCallback in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends on tickLower, tickUpper, the amount of liquidity, and the current price.\",\"params\":{\"amount\":\"The amount of liquidity to mint\",\"data\":\"Any data that should be passed through to the callback\",\"recipient\":\"The address for which the liquidity will be created\",\"tickLower\":\"The lower tick of the position in which to add liquidity\",\"tickUpper\":\"The upper tick of the position in which to add liquidity\"},\"returns\":{\"amount0\":\"The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback\",\"amount1\":\"The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback\"}},\"observations(uint256)\":{\"details\":\"You most likely want to use #observe() instead of this method to get an observation as of some amount of time ago, rather than at a specific index in the array.\",\"params\":{\"index\":\"The element of the observations array to fetch\"},\"returns\":{\"blockTimestamp\":\"The timestamp of the observation, Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp, Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp, Returns initialized whether the observation has been initialized and the values are safe to use\"}},\"observe(uint32[])\":{\"details\":\"To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick, you must call it with secondsAgos = [3600, 0].The time weighted average tick represents the geometric time weighted average price of the pool, in log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.\",\"params\":{\"secondsAgos\":\"From how long ago each cumulative tick and liquidity value should be returned\"},\"returns\":{\"secondsPerLiquidityCumulativeX128s\":\"Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block timestamp\",\"tickCumulatives\":\"Cumulative tick values as of each `secondsAgos` from the current block timestamp\"}},\"positions(bytes32)\":{\"params\":{\"key\":\"The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper\"},\"returns\":{\"_liquidity\":\"The amount of liquidity in the position, Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke, Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke, Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke, Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke\"}},\"protocolFees()\":{\"details\":\"Protocol fees will never exceed uint128 max in either token\"},\"setFeeProtocol(uint8,uint8)\":{\"params\":{\"feeProtocol0\":\"new protocol fee for token0 of the pool\",\"feeProtocol1\":\"new protocol fee for token1 of the pool\"}},\"slot0()\":{\"returns\":{\"sqrtPriceX96\":\"The current price of the pool as a sqrt(token1/token0) Q64.96 value tick The current tick of the pool, i.e. according to the last tick transition that was run. This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick boundary. observationIndex The index of the last oracle observation that was written, observationCardinality The current maximum number of observations stored in the pool, observationCardinalityNext The next maximum number of observations, to be updated when the observation. feeProtocol The protocol fee for both tokens of the pool. Encoded as two 4 bit values, where the protocol fee of token1 is shifted 4 bits and the protocol fee of token0 is the lower 4 bits. Used as the denominator of a fraction of the swap fee, e.g. 4 means 1/4th of the swap fee. unlocked Whether the pool is currently locked to reentrancy\"}},\"snapshotCumulativesInside(int24,int24)\":{\"details\":\"Snapshots must only be compared to other snapshots, taken over a period for which a position existed. I.e., snapshots cannot be compared if a position is not held for the entire period between when the first snapshot is taken and the second snapshot is taken.\",\"params\":{\"tickLower\":\"The lower tick of the range\",\"tickUpper\":\"The upper tick of the range\"},\"returns\":{\"secondsInside\":\"The snapshot of seconds per liquidity for the range\",\"secondsPerLiquidityInsideX128\":\"The snapshot of seconds per liquidity for the range\",\"tickCumulativeInside\":\"The snapshot of the tick accumulator for the range\"}},\"swap(address,bool,int256,uint160,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback\",\"params\":{\"amountSpecified\":\"The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)\",\"data\":\"Any data to be passed through to the callback\",\"recipient\":\"The address to receive the output of the swap\",\"sqrtPriceLimitX96\":\"The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this value after the swap. If one for zero, the price cannot be greater than this value after the swap\",\"zeroForOne\":\"The direction of the swap, true for token0 to token1, false for token1 to token0\"},\"returns\":{\"amount0\":\"The delta of the balance of token0 of the pool, exact when negative, minimum when positive\",\"amount1\":\"The delta of the balance of token1 of the pool, exact when negative, minimum when positive\"}},\"tickSpacing()\":{\"details\":\"Ticks can only be used at multiples of this value, minimum of 1 and always positive e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ... This value is an int24 to avoid casting even though it is always positive.\",\"returns\":{\"_0\":\"The tick spacing\"}},\"ticks(int24)\":{\"params\":{\"tick\":\"The tick to look up\"},\"returns\":{\"liquidityGross\":\"the total amount of position liquidity that uses the pool either as tick lower or tick upper, liquidityNet how much liquidity changes when the pool price crosses the tick, feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0, feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1, tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick, secondsOutside the seconds spent on the other side of the tick from the current tick, initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false. Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0. In addition, these values are only relative and must be used only in comparison to previous snapshots for a specific position.\"}},\"token0()\":{\"returns\":{\"_0\":\"The token contract address\"}},\"token1()\":{\"returns\":{\"_0\":\"The token contract address\"}}},\"title\":\"The interface for a Uniswap V3 Pool\",\"version\":1},\"userdoc\":{\"events\":{\"Burn(address,int24,int24,uint128,uint256,uint256)\":{\"notice\":\"Emitted when a position's liquidity is removed\"},\"Collect(address,address,int24,int24,uint128,uint128)\":{\"notice\":\"Emitted when fees are collected by the owner of a position\"},\"CollectProtocol(address,address,uint128,uint128)\":{\"notice\":\"Emitted when the collected protocol fees are withdrawn by the factory owner\"},\"Flash(address,address,uint256,uint256,uint256,uint256)\":{\"notice\":\"Emitted by the pool for any flashes of token0/token1\"},\"IncreaseObservationCardinalityNext(uint16,uint16)\":{\"notice\":\"Emitted by the pool for increases to the number of observations that can be stored\"},\"Initialize(uint160,int24)\":{\"notice\":\"Emitted exactly once by a pool when #initialize is first called on the pool\"},\"Mint(address,address,int24,int24,uint128,uint256,uint256)\":{\"notice\":\"Emitted when liquidity is minted for a given position\"},\"SetFeeProtocol(uint8,uint8,uint8,uint8)\":{\"notice\":\"Emitted when the protocol fee is changed by the pool\"},\"Swap(address,address,int256,int256,uint160,uint128,int24)\":{\"notice\":\"Emitted by the pool for any swaps between token0 and token1\"}},\"kind\":\"user\",\"methods\":{\"burn(int24,int24,uint128)\":{\"notice\":\"Burn liquidity from the sender and account tokens owed for the liquidity to the position\"},\"collect(address,int24,int24,uint128,uint128)\":{\"notice\":\"Collects tokens owed to a position\"},\"collectProtocol(address,uint128,uint128)\":{\"notice\":\"Collect the protocol fee accrued to the pool\"},\"factory()\":{\"notice\":\"The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface\"},\"fee()\":{\"notice\":\"The pool's fee in hundredths of a bip, i.e. 1e-6\"},\"feeGrowthGlobal0X128()\":{\"notice\":\"The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool\"},\"feeGrowthGlobal1X128()\":{\"notice\":\"The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool\"},\"flash(address,uint256,uint256,bytes)\":{\"notice\":\"Receive token0 and/or token1 and pay it back, plus a fee, in the callback\"},\"increaseObservationCardinalityNext(uint16)\":{\"notice\":\"Increase the maximum number of price and liquidity observations that this pool will store\"},\"initialize(uint160)\":{\"notice\":\"Sets the initial price for the pool\"},\"liquidity()\":{\"notice\":\"The currently in range liquidity available to the pool\"},\"maxLiquidityPerTick()\":{\"notice\":\"The maximum amount of position liquidity that can use any tick in the range\"},\"mint(address,int24,int24,uint128,bytes)\":{\"notice\":\"Adds liquidity for the given recipient/tickLower/tickUpper position\"},\"observations(uint256)\":{\"notice\":\"Returns data about a specific observation index\"},\"observe(uint32[])\":{\"notice\":\"Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp\"},\"positions(bytes32)\":{\"notice\":\"Returns the information about a position by the position's key\"},\"protocolFees()\":{\"notice\":\"The amounts of token0 and token1 that are owed to the protocol\"},\"setFeeProtocol(uint8,uint8)\":{\"notice\":\"Set the denominator of the protocol's % share of the fees\"},\"slot0()\":{\"notice\":\"The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas when accessed externally.\"},\"snapshotCumulativesInside(int24,int24)\":{\"notice\":\"Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range\"},\"swap(address,bool,int256,uint160,bytes)\":{\"notice\":\"Swap token0 for token1, or token1 for token0\"},\"tickBitmap(int16)\":{\"notice\":\"Returns 256 packed tick initialized boolean values. See TickBitmap for more information\"},\"tickSpacing()\":{\"notice\":\"The pool tick spacing\"},\"ticks(int24)\":{\"notice\":\"Look up information about a specific tick in the pool\"},\"token0()\":{\"notice\":\"The first of the two tokens of the pool, sorted by address\"},\"token1()\":{\"notice\":\"The second of the two tokens of the pool, sorted by address\"}},\"notice\":\"A Uniswap pool facilitates swapping and automated market making between any two assets that strictly conform to the ERC20 specification\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol\":\"IUniswapV3Pool\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol\":{\"keccak256\":\"0xfe6113d518466cd6652c85b111e01f33eb62157f49ae5ed7d5a3947a2044adb1\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://1c42b9e6f5902ac38dd43e25750939baa7e0c1425dc75afd717c4412731065d5\",\"dweb:/ipfs/QmWaoacnzsucTvBME2o7YgZBZMhaHv7fkj83htHMVWJKWh\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol\":{\"keccak256\":\"0x9453dd0e7442188667d01d9b65de3f1e14e9511ff3e303179a15f6fc267f7634\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://982f4328f956c3e60e67501e759eb292ac487f76460c774c50e9ae4fcc92aae5\",\"dweb:/ipfs/QmRnzEDsaqtd9PJEVcgQi7p5aV5pMSvRUoGZJAdwFUJxgZ\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol\":{\"keccak256\":\"0xe603ac5b17ecdee73ba2b27efdf386c257a19c14206e87eee77e2017b742d9e5\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://8febc9bdb399a4d94bb89f5377732652e2400e4a8dee808201ade6848f9004e7\",\"dweb:/ipfs/QmaKDqYYFU4d2W2iN77aDHptfbFmYZRrMYXHeGpJmM8C1c\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol\":{\"keccak256\":\"0x8071514d0fe5d17d6fbd31c191cdfb703031c24e0ece3621d88ab10e871375cd\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://d0b571930cc7488b1d546a7e9cea7c52d8b3c4e207da657ed0e0db7343b8cd03\",\"dweb:/ipfs/QmaGK6vVwB95QSTR1XMYvrh7ivYAYZxi3fD7v6VMA4jZ39\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol\":{\"keccak256\":\"0xf6e5d2cd1139c4c276bdbc8e1d2b256e456c866a91f1b868da265c6d2685c3f7\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b99c8c9ae8e27ee6559e5866bea82cbc9ffc8247f8d15b7422a4deb287d4d047\",\"dweb:/ipfs/QmfL8gaqt3ffAnm6nVj5ksuNpLygXuL3xq5VBqrkwC2JJ3\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol\":{\"keccak256\":\"0x759b78a2918af9e99e246dc3af084f654e48ef32bb4e4cb8a966aa3dcaece235\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://64144fb96e1c7fdba87305acadb98a198d26a3d46c097cb3a666e567f6f29735\",\"dweb:/ipfs/QmUnWVwN9FKB9uV5Pr8YfLpWZnYM2DENnRMaadZ492JS9u\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol\":{\"keccak256\":\"0x852dc1f5df7dcf7f11e7bb3eed79f0cea72ad4b25f6a9d2c35aafb48925fd49f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://ed63907c38ff36b0e22bc9ffc53e791ea74f0d4f0e7c257fdfb5aaf8825b1f0f\",\"dweb:/ipfs/QmSQrckghEjs6HVsA5GVgpNpZWvTXMY5eQLF7cN6deFeEg\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"events": {
							"Burn(address,int24,int24,uint128,uint256,uint256)": {
								"notice": "Emitted when a position's liquidity is removed"
							},
							"Collect(address,address,int24,int24,uint128,uint128)": {
								"notice": "Emitted when fees are collected by the owner of a position"
							},
							"CollectProtocol(address,address,uint128,uint128)": {
								"notice": "Emitted when the collected protocol fees are withdrawn by the factory owner"
							},
							"Flash(address,address,uint256,uint256,uint256,uint256)": {
								"notice": "Emitted by the pool for any flashes of token0/token1"
							},
							"IncreaseObservationCardinalityNext(uint16,uint16)": {
								"notice": "Emitted by the pool for increases to the number of observations that can be stored"
							},
							"Initialize(uint160,int24)": {
								"notice": "Emitted exactly once by a pool when #initialize is first called on the pool"
							},
							"Mint(address,address,int24,int24,uint128,uint256,uint256)": {
								"notice": "Emitted when liquidity is minted for a given position"
							},
							"SetFeeProtocol(uint8,uint8,uint8,uint8)": {
								"notice": "Emitted when the protocol fee is changed by the pool"
							},
							"Swap(address,address,int256,int256,uint160,uint128,int24)": {
								"notice": "Emitted by the pool for any swaps between token0 and token1"
							}
						},
						"kind": "user",
						"methods": {
							"burn(int24,int24,uint128)": {
								"notice": "Burn liquidity from the sender and account tokens owed for the liquidity to the position"
							},
							"collect(address,int24,int24,uint128,uint128)": {
								"notice": "Collects tokens owed to a position"
							},
							"collectProtocol(address,uint128,uint128)": {
								"notice": "Collect the protocol fee accrued to the pool"
							},
							"factory()": {
								"notice": "The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface"
							},
							"fee()": {
								"notice": "The pool's fee in hundredths of a bip, i.e. 1e-6"
							},
							"feeGrowthGlobal0X128()": {
								"notice": "The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool"
							},
							"feeGrowthGlobal1X128()": {
								"notice": "The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool"
							},
							"flash(address,uint256,uint256,bytes)": {
								"notice": "Receive token0 and/or token1 and pay it back, plus a fee, in the callback"
							},
							"increaseObservationCardinalityNext(uint16)": {
								"notice": "Increase the maximum number of price and liquidity observations that this pool will store"
							},
							"initialize(uint160)": {
								"notice": "Sets the initial price for the pool"
							},
							"liquidity()": {
								"notice": "The currently in range liquidity available to the pool"
							},
							"maxLiquidityPerTick()": {
								"notice": "The maximum amount of position liquidity that can use any tick in the range"
							},
							"mint(address,int24,int24,uint128,bytes)": {
								"notice": "Adds liquidity for the given recipient/tickLower/tickUpper position"
							},
							"observations(uint256)": {
								"notice": "Returns data about a specific observation index"
							},
							"observe(uint32[])": {
								"notice": "Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp"
							},
							"positions(bytes32)": {
								"notice": "Returns the information about a position by the position's key"
							},
							"protocolFees()": {
								"notice": "The amounts of token0 and token1 that are owed to the protocol"
							},
							"setFeeProtocol(uint8,uint8)": {
								"notice": "Set the denominator of the protocol's % share of the fees"
							},
							"slot0()": {
								"notice": "The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas when accessed externally."
							},
							"snapshotCumulativesInside(int24,int24)": {
								"notice": "Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range"
							},
							"swap(address,bool,int256,uint160,bytes)": {
								"notice": "Swap token0 for token1, or token1 for token0"
							},
							"tickBitmap(int16)": {
								"notice": "Returns 256 packed tick initialized boolean values. See TickBitmap for more information"
							},
							"tickSpacing()": {
								"notice": "The pool tick spacing"
							},
							"ticks(int24)": {
								"notice": "Look up information about a specific tick in the pool"
							},
							"token0()": {
								"notice": "The first of the two tokens of the pool, sorted by address"
							},
							"token1()": {
								"notice": "The second of the two tokens of the pool, sorted by address"
							}
						},
						"notice": "A Uniswap pool facilitates swapping and automated market making between any two assets that strictly conform to the ERC20 specification",
						"version": 1
					}
				}
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol": {
				"IUniswapV3PoolActions": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								}
							],
							"name": "burn",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"internalType": "uint128",
									"name": "amount0Requested",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1Requested",
									"type": "uint128"
								}
							],
							"name": "collect",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "flash",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "observationCardinalityNext",
									"type": "uint16"
								}
							],
							"name": "increaseObservationCardinalityNext",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "mint",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "zeroForOne",
									"type": "bool"
								},
								{
									"internalType": "int256",
									"name": "amountSpecified",
									"type": "int256"
								},
								{
									"internalType": "uint160",
									"name": "sqrtPriceLimitX96",
									"type": "uint160"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "swap",
							"outputs": [
								{
									"internalType": "int256",
									"name": "amount0",
									"type": "int256"
								},
								{
									"internalType": "int256",
									"name": "amount1",
									"type": "int256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"burn(int24,int24,uint128)": {
								"details": "Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0Fees must be collected separately via a call to #collect",
								"params": {
									"amount": "How much liquidity to burn",
									"tickLower": "The lower tick of the position for which to burn liquidity",
									"tickUpper": "The upper tick of the position for which to burn liquidity"
								},
								"returns": {
									"amount0": "The amount of token0 sent to the recipient",
									"amount1": "The amount of token1 sent to the recipient"
								}
							},
							"collect(address,int24,int24,uint128,uint128)": {
								"details": "Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity. Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.",
								"params": {
									"amount0Requested": "How much token0 should be withdrawn from the fees owed",
									"amount1Requested": "How much token1 should be withdrawn from the fees owed",
									"recipient": "The address which should receive the fees collected",
									"tickLower": "The lower tick of the position for which to collect fees",
									"tickUpper": "The upper tick of the position for which to collect fees"
								},
								"returns": {
									"amount0": "The amount of fees collected in token0",
									"amount1": "The amount of fees collected in token1"
								}
							},
							"flash(address,uint256,uint256,bytes)": {
								"details": "The caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallbackCan be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling with 0 amount{0,1} and sending the donation amount(s) from the callback",
								"params": {
									"amount0": "The amount of token0 to send",
									"amount1": "The amount of token1 to send",
									"data": "Any data to be passed through to the callback",
									"recipient": "The address which will receive the token0 and token1 amounts"
								}
							},
							"increaseObservationCardinalityNext(uint16)": {
								"details": "This method is no-op if the pool already has an observationCardinalityNext greater than or equal to the input observationCardinalityNext.",
								"params": {
									"observationCardinalityNext": "The desired minimum number of observations for the pool to store"
								}
							},
							"initialize(uint160)": {
								"details": "Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value",
								"params": {
									"sqrtPriceX96": "the initial sqrt price of the pool as a Q64.96"
								}
							},
							"mint(address,int24,int24,uint128,bytes)": {
								"details": "The caller of this method receives a callback in the form of IUniswapV3MintCallback#uniswapV3MintCallback in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends on tickLower, tickUpper, the amount of liquidity, and the current price.",
								"params": {
									"amount": "The amount of liquidity to mint",
									"data": "Any data that should be passed through to the callback",
									"recipient": "The address for which the liquidity will be created",
									"tickLower": "The lower tick of the position in which to add liquidity",
									"tickUpper": "The upper tick of the position in which to add liquidity"
								},
								"returns": {
									"amount0": "The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback",
									"amount1": "The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback"
								}
							},
							"swap(address,bool,int256,uint160,bytes)": {
								"details": "The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback",
								"params": {
									"amountSpecified": "The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)",
									"data": "Any data to be passed through to the callback",
									"recipient": "The address to receive the output of the swap",
									"sqrtPriceLimitX96": "The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this value after the swap. If one for zero, the price cannot be greater than this value after the swap",
									"zeroForOne": "The direction of the swap, true for token0 to token1, false for token1 to token0"
								},
								"returns": {
									"amount0": "The delta of the balance of token0 of the pool, exact when negative, minimum when positive",
									"amount1": "The delta of the balance of token1 of the pool, exact when negative, minimum when positive"
								}
							}
						},
						"title": "Permissionless pool actions",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"burn(int24,int24,uint128)": "a34123a7",
							"collect(address,int24,int24,uint128,uint128)": "4f1eb3d8",
							"flash(address,uint256,uint256,bytes)": "490e6cbc",
							"increaseObservationCardinalityNext(uint16)": "32148f67",
							"initialize(uint160)": "f637731d",
							"mint(address,int24,int24,uint128,bytes)": "3c8a7d8d",
							"swap(address,bool,int256,uint160,bytes)": "128acb08"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount0Requested\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1Requested\",\"type\":\"uint128\"}],\"name\":\"collect\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"flash\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"observationCardinalityNext\",\"type\":\"uint16\"}],\"name\":\"increaseObservationCardinalityNext\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"zeroForOne\",\"type\":\"bool\"},{\"internalType\":\"int256\",\"name\":\"amountSpecified\",\"type\":\"int256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"swap\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"amount0\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1\",\"type\":\"int256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"burn(int24,int24,uint128)\":{\"details\":\"Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0Fees must be collected separately via a call to #collect\",\"params\":{\"amount\":\"How much liquidity to burn\",\"tickLower\":\"The lower tick of the position for which to burn liquidity\",\"tickUpper\":\"The upper tick of the position for which to burn liquidity\"},\"returns\":{\"amount0\":\"The amount of token0 sent to the recipient\",\"amount1\":\"The amount of token1 sent to the recipient\"}},\"collect(address,int24,int24,uint128,uint128)\":{\"details\":\"Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity. Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.\",\"params\":{\"amount0Requested\":\"How much token0 should be withdrawn from the fees owed\",\"amount1Requested\":\"How much token1 should be withdrawn from the fees owed\",\"recipient\":\"The address which should receive the fees collected\",\"tickLower\":\"The lower tick of the position for which to collect fees\",\"tickUpper\":\"The upper tick of the position for which to collect fees\"},\"returns\":{\"amount0\":\"The amount of fees collected in token0\",\"amount1\":\"The amount of fees collected in token1\"}},\"flash(address,uint256,uint256,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallbackCan be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling with 0 amount{0,1} and sending the donation amount(s) from the callback\",\"params\":{\"amount0\":\"The amount of token0 to send\",\"amount1\":\"The amount of token1 to send\",\"data\":\"Any data to be passed through to the callback\",\"recipient\":\"The address which will receive the token0 and token1 amounts\"}},\"increaseObservationCardinalityNext(uint16)\":{\"details\":\"This method is no-op if the pool already has an observationCardinalityNext greater than or equal to the input observationCardinalityNext.\",\"params\":{\"observationCardinalityNext\":\"The desired minimum number of observations for the pool to store\"}},\"initialize(uint160)\":{\"details\":\"Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value\",\"params\":{\"sqrtPriceX96\":\"the initial sqrt price of the pool as a Q64.96\"}},\"mint(address,int24,int24,uint128,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3MintCallback#uniswapV3MintCallback in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends on tickLower, tickUpper, the amount of liquidity, and the current price.\",\"params\":{\"amount\":\"The amount of liquidity to mint\",\"data\":\"Any data that should be passed through to the callback\",\"recipient\":\"The address for which the liquidity will be created\",\"tickLower\":\"The lower tick of the position in which to add liquidity\",\"tickUpper\":\"The upper tick of the position in which to add liquidity\"},\"returns\":{\"amount0\":\"The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback\",\"amount1\":\"The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback\"}},\"swap(address,bool,int256,uint160,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback\",\"params\":{\"amountSpecified\":\"The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)\",\"data\":\"Any data to be passed through to the callback\",\"recipient\":\"The address to receive the output of the swap\",\"sqrtPriceLimitX96\":\"The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this value after the swap. If one for zero, the price cannot be greater than this value after the swap\",\"zeroForOne\":\"The direction of the swap, true for token0 to token1, false for token1 to token0\"},\"returns\":{\"amount0\":\"The delta of the balance of token0 of the pool, exact when negative, minimum when positive\",\"amount1\":\"The delta of the balance of token1 of the pool, exact when negative, minimum when positive\"}}},\"title\":\"Permissionless pool actions\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"burn(int24,int24,uint128)\":{\"notice\":\"Burn liquidity from the sender and account tokens owed for the liquidity to the position\"},\"collect(address,int24,int24,uint128,uint128)\":{\"notice\":\"Collects tokens owed to a position\"},\"flash(address,uint256,uint256,bytes)\":{\"notice\":\"Receive token0 and/or token1 and pay it back, plus a fee, in the callback\"},\"increaseObservationCardinalityNext(uint16)\":{\"notice\":\"Increase the maximum number of price and liquidity observations that this pool will store\"},\"initialize(uint160)\":{\"notice\":\"Sets the initial price for the pool\"},\"mint(address,int24,int24,uint128,bytes)\":{\"notice\":\"Adds liquidity for the given recipient/tickLower/tickUpper position\"},\"swap(address,bool,int256,uint160,bytes)\":{\"notice\":\"Swap token0 for token1, or token1 for token0\"}},\"notice\":\"Contains pool methods that can be called by anyone\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol\":\"IUniswapV3PoolActions\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol\":{\"keccak256\":\"0x9453dd0e7442188667d01d9b65de3f1e14e9511ff3e303179a15f6fc267f7634\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://982f4328f956c3e60e67501e759eb292ac487f76460c774c50e9ae4fcc92aae5\",\"dweb:/ipfs/QmRnzEDsaqtd9PJEVcgQi7p5aV5pMSvRUoGZJAdwFUJxgZ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"burn(int24,int24,uint128)": {
								"notice": "Burn liquidity from the sender and account tokens owed for the liquidity to the position"
							},
							"collect(address,int24,int24,uint128,uint128)": {
								"notice": "Collects tokens owed to a position"
							},
							"flash(address,uint256,uint256,bytes)": {
								"notice": "Receive token0 and/or token1 and pay it back, plus a fee, in the callback"
							},
							"increaseObservationCardinalityNext(uint16)": {
								"notice": "Increase the maximum number of price and liquidity observations that this pool will store"
							},
							"initialize(uint160)": {
								"notice": "Sets the initial price for the pool"
							},
							"mint(address,int24,int24,uint128,bytes)": {
								"notice": "Adds liquidity for the given recipient/tickLower/tickUpper position"
							},
							"swap(address,bool,int256,uint160,bytes)": {
								"notice": "Swap token0 for token1, or token1 for token0"
							}
						},
						"notice": "Contains pool methods that can be called by anyone",
						"version": 1
					}
				}
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol": {
				"IUniswapV3PoolDerivedState": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint32[]",
									"name": "secondsAgos",
									"type": "uint32[]"
								}
							],
							"name": "observe",
							"outputs": [
								{
									"internalType": "int56[]",
									"name": "tickCumulatives",
									"type": "int56[]"
								},
								{
									"internalType": "uint160[]",
									"name": "secondsPerLiquidityCumulativeX128s",
									"type": "uint160[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								}
							],
							"name": "snapshotCumulativesInside",
							"outputs": [
								{
									"internalType": "int56",
									"name": "tickCumulativeInside",
									"type": "int56"
								},
								{
									"internalType": "uint160",
									"name": "secondsPerLiquidityInsideX128",
									"type": "uint160"
								},
								{
									"internalType": "uint32",
									"name": "secondsInside",
									"type": "uint32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"observe(uint32[])": {
								"details": "To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick, you must call it with secondsAgos = [3600, 0].The time weighted average tick represents the geometric time weighted average price of the pool, in log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.",
								"params": {
									"secondsAgos": "From how long ago each cumulative tick and liquidity value should be returned"
								},
								"returns": {
									"secondsPerLiquidityCumulativeX128s": "Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block timestamp",
									"tickCumulatives": "Cumulative tick values as of each `secondsAgos` from the current block timestamp"
								}
							},
							"snapshotCumulativesInside(int24,int24)": {
								"details": "Snapshots must only be compared to other snapshots, taken over a period for which a position existed. I.e., snapshots cannot be compared if a position is not held for the entire period between when the first snapshot is taken and the second snapshot is taken.",
								"params": {
									"tickLower": "The lower tick of the range",
									"tickUpper": "The upper tick of the range"
								},
								"returns": {
									"secondsInside": "The snapshot of seconds per liquidity for the range",
									"secondsPerLiquidityInsideX128": "The snapshot of seconds per liquidity for the range",
									"tickCumulativeInside": "The snapshot of the tick accumulator for the range"
								}
							}
						},
						"title": "Pool state that is not stored",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"observe(uint32[])": "883bdbfd",
							"snapshotCumulativesInside(int24,int24)": "a38807f2"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint32[]\",\"name\":\"secondsAgos\",\"type\":\"uint32[]\"}],\"name\":\"observe\",\"outputs\":[{\"internalType\":\"int56[]\",\"name\":\"tickCumulatives\",\"type\":\"int56[]\"},{\"internalType\":\"uint160[]\",\"name\":\"secondsPerLiquidityCumulativeX128s\",\"type\":\"uint160[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"}],\"name\":\"snapshotCumulativesInside\",\"outputs\":[{\"internalType\":\"int56\",\"name\":\"tickCumulativeInside\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityInsideX128\",\"type\":\"uint160\"},{\"internalType\":\"uint32\",\"name\":\"secondsInside\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"observe(uint32[])\":{\"details\":\"To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick, you must call it with secondsAgos = [3600, 0].The time weighted average tick represents the geometric time weighted average price of the pool, in log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.\",\"params\":{\"secondsAgos\":\"From how long ago each cumulative tick and liquidity value should be returned\"},\"returns\":{\"secondsPerLiquidityCumulativeX128s\":\"Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block timestamp\",\"tickCumulatives\":\"Cumulative tick values as of each `secondsAgos` from the current block timestamp\"}},\"snapshotCumulativesInside(int24,int24)\":{\"details\":\"Snapshots must only be compared to other snapshots, taken over a period for which a position existed. I.e., snapshots cannot be compared if a position is not held for the entire period between when the first snapshot is taken and the second snapshot is taken.\",\"params\":{\"tickLower\":\"The lower tick of the range\",\"tickUpper\":\"The upper tick of the range\"},\"returns\":{\"secondsInside\":\"The snapshot of seconds per liquidity for the range\",\"secondsPerLiquidityInsideX128\":\"The snapshot of seconds per liquidity for the range\",\"tickCumulativeInside\":\"The snapshot of the tick accumulator for the range\"}}},\"title\":\"Pool state that is not stored\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"observe(uint32[])\":{\"notice\":\"Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp\"},\"snapshotCumulativesInside(int24,int24)\":{\"notice\":\"Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range\"}},\"notice\":\"Contains view functions to provide information about the pool that is computed rather than stored on the blockchain. The functions here may have variable gas costs.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol\":\"IUniswapV3PoolDerivedState\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol\":{\"keccak256\":\"0xe603ac5b17ecdee73ba2b27efdf386c257a19c14206e87eee77e2017b742d9e5\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://8febc9bdb399a4d94bb89f5377732652e2400e4a8dee808201ade6848f9004e7\",\"dweb:/ipfs/QmaKDqYYFU4d2W2iN77aDHptfbFmYZRrMYXHeGpJmM8C1c\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"observe(uint32[])": {
								"notice": "Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp"
							},
							"snapshotCumulativesInside(int24,int24)": {
								"notice": "Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range"
							}
						},
						"notice": "Contains view functions to provide information about the pool that is computed rather than stored on the blockchain. The functions here may have variable gas costs.",
						"version": 1
					}
				}
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol": {
				"IUniswapV3PoolEvents": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "Burn",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"name": "Collect",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"name": "CollectProtocol",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "paid0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "paid1",
									"type": "uint256"
								}
							],
							"name": "Flash",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint16",
									"name": "observationCardinalityNextOld",
									"type": "uint16"
								},
								{
									"indexed": false,
									"internalType": "uint16",
									"name": "observationCardinalityNextNew",
									"type": "uint16"
								}
							],
							"name": "IncreaseObservationCardinalityNext",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								},
								{
									"indexed": false,
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								}
							],
							"name": "Initialize",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "Mint",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol0Old",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol1Old",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol0New",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol1New",
									"type": "uint8"
								}
							],
							"name": "SetFeeProtocol",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "int256",
									"name": "amount0",
									"type": "int256"
								},
								{
									"indexed": false,
									"internalType": "int256",
									"name": "amount1",
									"type": "int256"
								},
								{
									"indexed": false,
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "liquidity",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								}
							],
							"name": "Swap",
							"type": "event"
						}
					],
					"devdoc": {
						"events": {
							"Burn(address,int24,int24,uint128,uint256,uint256)": {
								"details": "Does not withdraw any fees earned by the liquidity position, which must be withdrawn via #collect",
								"params": {
									"amount": "The amount of liquidity to remove",
									"amount0": "The amount of token0 withdrawn",
									"amount1": "The amount of token1 withdrawn",
									"owner": "The owner of the position for which liquidity is removed",
									"tickLower": "The lower tick of the position",
									"tickUpper": "The upper tick of the position"
								}
							},
							"Collect(address,address,int24,int24,uint128,uint128)": {
								"details": "Collect events may be emitted with zero amount0 and amount1 when the caller chooses not to collect fees",
								"params": {
									"amount0": "The amount of token0 fees collected",
									"amount1": "The amount of token1 fees collected",
									"owner": "The owner of the position for which fees are collected",
									"tickLower": "The lower tick of the position",
									"tickUpper": "The upper tick of the position"
								}
							},
							"CollectProtocol(address,address,uint128,uint128)": {
								"params": {
									"amount0": "The amount of token1 protocol fees that is withdrawn",
									"recipient": "The address that receives the collected protocol fees",
									"sender": "The address that collects the protocol fees"
								}
							},
							"Flash(address,address,uint256,uint256,uint256,uint256)": {
								"params": {
									"amount0": "The amount of token0 that was flashed",
									"amount1": "The amount of token1 that was flashed",
									"paid0": "The amount of token0 paid for the flash, which can exceed the amount0 plus the fee",
									"paid1": "The amount of token1 paid for the flash, which can exceed the amount1 plus the fee",
									"recipient": "The address that received the tokens from flash",
									"sender": "The address that initiated the swap call, and that received the callback"
								}
							},
							"IncreaseObservationCardinalityNext(uint16,uint16)": {
								"details": "observationCardinalityNext is not the observation cardinality until an observation is written at the index just before a mint/swap/burn.",
								"params": {
									"observationCardinalityNextNew": "The updated value of the next observation cardinality",
									"observationCardinalityNextOld": "The previous value of the next observation cardinality"
								}
							},
							"Initialize(uint160,int24)": {
								"details": "Mint/Burn/Swap cannot be emitted by the pool before Initialize",
								"params": {
									"sqrtPriceX96": "The initial sqrt price of the pool, as a Q64.96",
									"tick": "The initial tick of the pool, i.e. log base 1.0001 of the starting price of the pool"
								}
							},
							"Mint(address,address,int24,int24,uint128,uint256,uint256)": {
								"params": {
									"amount": "The amount of liquidity minted to the position range",
									"amount0": "How much token0 was required for the minted liquidity",
									"amount1": "How much token1 was required for the minted liquidity",
									"owner": "The owner of the position and recipient of any minted liquidity",
									"sender": "The address that minted the liquidity",
									"tickLower": "The lower tick of the position",
									"tickUpper": "The upper tick of the position"
								}
							},
							"SetFeeProtocol(uint8,uint8,uint8,uint8)": {
								"params": {
									"feeProtocol0New": "The updated value of the token0 protocol fee",
									"feeProtocol0Old": "The previous value of the token0 protocol fee",
									"feeProtocol1New": "The updated value of the token1 protocol fee",
									"feeProtocol1Old": "The previous value of the token1 protocol fee"
								}
							},
							"Swap(address,address,int256,int256,uint160,uint128,int24)": {
								"params": {
									"amount0": "The delta of the token0 balance of the pool",
									"amount1": "The delta of the token1 balance of the pool",
									"liquidity": "The liquidity of the pool after the swap",
									"recipient": "The address that received the output of the swap",
									"sender": "The address that initiated the swap call, and that received the callback",
									"sqrtPriceX96": "The sqrt(price) of the pool after the swap, as a Q64.96",
									"tick": "The log base 1.0001 of price of the pool after the swap"
								}
							}
						},
						"kind": "dev",
						"methods": {},
						"title": "Events emitted by a pool",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"name\":\"Collect\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"name\":\"CollectProtocol\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paid0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paid1\",\"type\":\"uint256\"}],\"name\":\"Flash\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"observationCardinalityNextOld\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"observationCardinalityNextNew\",\"type\":\"uint16\"}],\"name\":\"IncreaseObservationCardinalityNext\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"Initialize\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol0Old\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol1Old\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol0New\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol1New\",\"type\":\"uint8\"}],\"name\":\"SetFeeProtocol\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount0\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount1\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"Swap\",\"type\":\"event\"}],\"devdoc\":{\"events\":{\"Burn(address,int24,int24,uint128,uint256,uint256)\":{\"details\":\"Does not withdraw any fees earned by the liquidity position, which must be withdrawn via #collect\",\"params\":{\"amount\":\"The amount of liquidity to remove\",\"amount0\":\"The amount of token0 withdrawn\",\"amount1\":\"The amount of token1 withdrawn\",\"owner\":\"The owner of the position for which liquidity is removed\",\"tickLower\":\"The lower tick of the position\",\"tickUpper\":\"The upper tick of the position\"}},\"Collect(address,address,int24,int24,uint128,uint128)\":{\"details\":\"Collect events may be emitted with zero amount0 and amount1 when the caller chooses not to collect fees\",\"params\":{\"amount0\":\"The amount of token0 fees collected\",\"amount1\":\"The amount of token1 fees collected\",\"owner\":\"The owner of the position for which fees are collected\",\"tickLower\":\"The lower tick of the position\",\"tickUpper\":\"The upper tick of the position\"}},\"CollectProtocol(address,address,uint128,uint128)\":{\"params\":{\"amount0\":\"The amount of token1 protocol fees that is withdrawn\",\"recipient\":\"The address that receives the collected protocol fees\",\"sender\":\"The address that collects the protocol fees\"}},\"Flash(address,address,uint256,uint256,uint256,uint256)\":{\"params\":{\"amount0\":\"The amount of token0 that was flashed\",\"amount1\":\"The amount of token1 that was flashed\",\"paid0\":\"The amount of token0 paid for the flash, which can exceed the amount0 plus the fee\",\"paid1\":\"The amount of token1 paid for the flash, which can exceed the amount1 plus the fee\",\"recipient\":\"The address that received the tokens from flash\",\"sender\":\"The address that initiated the swap call, and that received the callback\"}},\"IncreaseObservationCardinalityNext(uint16,uint16)\":{\"details\":\"observationCardinalityNext is not the observation cardinality until an observation is written at the index just before a mint/swap/burn.\",\"params\":{\"observationCardinalityNextNew\":\"The updated value of the next observation cardinality\",\"observationCardinalityNextOld\":\"The previous value of the next observation cardinality\"}},\"Initialize(uint160,int24)\":{\"details\":\"Mint/Burn/Swap cannot be emitted by the pool before Initialize\",\"params\":{\"sqrtPriceX96\":\"The initial sqrt price of the pool, as a Q64.96\",\"tick\":\"The initial tick of the pool, i.e. log base 1.0001 of the starting price of the pool\"}},\"Mint(address,address,int24,int24,uint128,uint256,uint256)\":{\"params\":{\"amount\":\"The amount of liquidity minted to the position range\",\"amount0\":\"How much token0 was required for the minted liquidity\",\"amount1\":\"How much token1 was required for the minted liquidity\",\"owner\":\"The owner of the position and recipient of any minted liquidity\",\"sender\":\"The address that minted the liquidity\",\"tickLower\":\"The lower tick of the position\",\"tickUpper\":\"The upper tick of the position\"}},\"SetFeeProtocol(uint8,uint8,uint8,uint8)\":{\"params\":{\"feeProtocol0New\":\"The updated value of the token0 protocol fee\",\"feeProtocol0Old\":\"The previous value of the token0 protocol fee\",\"feeProtocol1New\":\"The updated value of the token1 protocol fee\",\"feeProtocol1Old\":\"The previous value of the token1 protocol fee\"}},\"Swap(address,address,int256,int256,uint160,uint128,int24)\":{\"params\":{\"amount0\":\"The delta of the token0 balance of the pool\",\"amount1\":\"The delta of the token1 balance of the pool\",\"liquidity\":\"The liquidity of the pool after the swap\",\"recipient\":\"The address that received the output of the swap\",\"sender\":\"The address that initiated the swap call, and that received the callback\",\"sqrtPriceX96\":\"The sqrt(price) of the pool after the swap, as a Q64.96\",\"tick\":\"The log base 1.0001 of price of the pool after the swap\"}}},\"kind\":\"dev\",\"methods\":{},\"title\":\"Events emitted by a pool\",\"version\":1},\"userdoc\":{\"events\":{\"Burn(address,int24,int24,uint128,uint256,uint256)\":{\"notice\":\"Emitted when a position's liquidity is removed\"},\"Collect(address,address,int24,int24,uint128,uint128)\":{\"notice\":\"Emitted when fees are collected by the owner of a position\"},\"CollectProtocol(address,address,uint128,uint128)\":{\"notice\":\"Emitted when the collected protocol fees are withdrawn by the factory owner\"},\"Flash(address,address,uint256,uint256,uint256,uint256)\":{\"notice\":\"Emitted by the pool for any flashes of token0/token1\"},\"IncreaseObservationCardinalityNext(uint16,uint16)\":{\"notice\":\"Emitted by the pool for increases to the number of observations that can be stored\"},\"Initialize(uint160,int24)\":{\"notice\":\"Emitted exactly once by a pool when #initialize is first called on the pool\"},\"Mint(address,address,int24,int24,uint128,uint256,uint256)\":{\"notice\":\"Emitted when liquidity is minted for a given position\"},\"SetFeeProtocol(uint8,uint8,uint8,uint8)\":{\"notice\":\"Emitted when the protocol fee is changed by the pool\"},\"Swap(address,address,int256,int256,uint160,uint128,int24)\":{\"notice\":\"Emitted by the pool for any swaps between token0 and token1\"}},\"kind\":\"user\",\"methods\":{},\"notice\":\"Contains all events emitted by the pool\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol\":\"IUniswapV3PoolEvents\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol\":{\"keccak256\":\"0x8071514d0fe5d17d6fbd31c191cdfb703031c24e0ece3621d88ab10e871375cd\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://d0b571930cc7488b1d546a7e9cea7c52d8b3c4e207da657ed0e0db7343b8cd03\",\"dweb:/ipfs/QmaGK6vVwB95QSTR1XMYvrh7ivYAYZxi3fD7v6VMA4jZ39\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"events": {
							"Burn(address,int24,int24,uint128,uint256,uint256)": {
								"notice": "Emitted when a position's liquidity is removed"
							},
							"Collect(address,address,int24,int24,uint128,uint128)": {
								"notice": "Emitted when fees are collected by the owner of a position"
							},
							"CollectProtocol(address,address,uint128,uint128)": {
								"notice": "Emitted when the collected protocol fees are withdrawn by the factory owner"
							},
							"Flash(address,address,uint256,uint256,uint256,uint256)": {
								"notice": "Emitted by the pool for any flashes of token0/token1"
							},
							"IncreaseObservationCardinalityNext(uint16,uint16)": {
								"notice": "Emitted by the pool for increases to the number of observations that can be stored"
							},
							"Initialize(uint160,int24)": {
								"notice": "Emitted exactly once by a pool when #initialize is first called on the pool"
							},
							"Mint(address,address,int24,int24,uint128,uint256,uint256)": {
								"notice": "Emitted when liquidity is minted for a given position"
							},
							"SetFeeProtocol(uint8,uint8,uint8,uint8)": {
								"notice": "Emitted when the protocol fee is changed by the pool"
							},
							"Swap(address,address,int256,int256,uint160,uint128,int24)": {
								"notice": "Emitted by the pool for any swaps between token0 and token1"
							}
						},
						"kind": "user",
						"methods": {},
						"notice": "Contains all events emitted by the pool",
						"version": 1
					}
				}
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol": {
				"IUniswapV3PoolImmutables": {
					"abi": [
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "fee",
							"outputs": [
								{
									"internalType": "uint24",
									"name": "",
									"type": "uint24"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "maxLiquidityPerTick",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tickSpacing",
							"outputs": [
								{
									"internalType": "int24",
									"name": "",
									"type": "int24"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token0",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token1",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"factory()": {
								"returns": {
									"_0": "The contract address"
								}
							},
							"fee()": {
								"returns": {
									"_0": "The fee"
								}
							},
							"maxLiquidityPerTick()": {
								"details": "This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool",
								"returns": {
									"_0": "The max amount of liquidity per tick"
								}
							},
							"tickSpacing()": {
								"details": "Ticks can only be used at multiples of this value, minimum of 1 and always positive e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ... This value is an int24 to avoid casting even though it is always positive.",
								"returns": {
									"_0": "The tick spacing"
								}
							},
							"token0()": {
								"returns": {
									"_0": "The token contract address"
								}
							},
							"token1()": {
								"returns": {
									"_0": "The token contract address"
								}
							}
						},
						"title": "Pool state that never changes",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"factory()": "c45a0155",
							"fee()": "ddca3f43",
							"maxLiquidityPerTick()": "70cf754a",
							"tickSpacing()": "d0c93a7c",
							"token0()": "0dfe1681",
							"token1()": "d21220a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fee\",\"outputs\":[{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxLiquidityPerTick\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tickSpacing\",\"outputs\":[{\"internalType\":\"int24\",\"name\":\"\",\"type\":\"int24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token0\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"factory()\":{\"returns\":{\"_0\":\"The contract address\"}},\"fee()\":{\"returns\":{\"_0\":\"The fee\"}},\"maxLiquidityPerTick()\":{\"details\":\"This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool\",\"returns\":{\"_0\":\"The max amount of liquidity per tick\"}},\"tickSpacing()\":{\"details\":\"Ticks can only be used at multiples of this value, minimum of 1 and always positive e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ... This value is an int24 to avoid casting even though it is always positive.\",\"returns\":{\"_0\":\"The tick spacing\"}},\"token0()\":{\"returns\":{\"_0\":\"The token contract address\"}},\"token1()\":{\"returns\":{\"_0\":\"The token contract address\"}}},\"title\":\"Pool state that never changes\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"factory()\":{\"notice\":\"The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface\"},\"fee()\":{\"notice\":\"The pool's fee in hundredths of a bip, i.e. 1e-6\"},\"maxLiquidityPerTick()\":{\"notice\":\"The maximum amount of position liquidity that can use any tick in the range\"},\"tickSpacing()\":{\"notice\":\"The pool tick spacing\"},\"token0()\":{\"notice\":\"The first of the two tokens of the pool, sorted by address\"},\"token1()\":{\"notice\":\"The second of the two tokens of the pool, sorted by address\"}},\"notice\":\"These parameters are fixed for a pool forever, i.e., the methods will always return the same values\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol\":\"IUniswapV3PoolImmutables\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol\":{\"keccak256\":\"0xf6e5d2cd1139c4c276bdbc8e1d2b256e456c866a91f1b868da265c6d2685c3f7\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b99c8c9ae8e27ee6559e5866bea82cbc9ffc8247f8d15b7422a4deb287d4d047\",\"dweb:/ipfs/QmfL8gaqt3ffAnm6nVj5ksuNpLygXuL3xq5VBqrkwC2JJ3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"factory()": {
								"notice": "The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface"
							},
							"fee()": {
								"notice": "The pool's fee in hundredths of a bip, i.e. 1e-6"
							},
							"maxLiquidityPerTick()": {
								"notice": "The maximum amount of position liquidity that can use any tick in the range"
							},
							"tickSpacing()": {
								"notice": "The pool tick spacing"
							},
							"token0()": {
								"notice": "The first of the two tokens of the pool, sorted by address"
							},
							"token1()": {
								"notice": "The second of the two tokens of the pool, sorted by address"
							}
						},
						"notice": "These parameters are fixed for a pool forever, i.e., the methods will always return the same values",
						"version": 1
					}
				}
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol": {
				"IUniswapV3PoolOwnerActions": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint128",
									"name": "amount0Requested",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1Requested",
									"type": "uint128"
								}
							],
							"name": "collectProtocol",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint8",
									"name": "feeProtocol0",
									"type": "uint8"
								},
								{
									"internalType": "uint8",
									"name": "feeProtocol1",
									"type": "uint8"
								}
							],
							"name": "setFeeProtocol",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"collectProtocol(address,uint128,uint128)": {
								"params": {
									"amount0Requested": "The maximum amount of token0 to send, can be 0 to collect fees in only token1",
									"amount1Requested": "The maximum amount of token1 to send, can be 0 to collect fees in only token0",
									"recipient": "The address to which collected protocol fees should be sent"
								},
								"returns": {
									"amount0": "The protocol fee collected in token0",
									"amount1": "The protocol fee collected in token1"
								}
							},
							"setFeeProtocol(uint8,uint8)": {
								"params": {
									"feeProtocol0": "new protocol fee for token0 of the pool",
									"feeProtocol1": "new protocol fee for token1 of the pool"
								}
							}
						},
						"title": "Permissioned pool actions",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"collectProtocol(address,uint128,uint128)": "85b66729",
							"setFeeProtocol(uint8,uint8)": "8206a4d1"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"amount0Requested\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1Requested\",\"type\":\"uint128\"}],\"name\":\"collectProtocol\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"feeProtocol0\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"feeProtocol1\",\"type\":\"uint8\"}],\"name\":\"setFeeProtocol\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"collectProtocol(address,uint128,uint128)\":{\"params\":{\"amount0Requested\":\"The maximum amount of token0 to send, can be 0 to collect fees in only token1\",\"amount1Requested\":\"The maximum amount of token1 to send, can be 0 to collect fees in only token0\",\"recipient\":\"The address to which collected protocol fees should be sent\"},\"returns\":{\"amount0\":\"The protocol fee collected in token0\",\"amount1\":\"The protocol fee collected in token1\"}},\"setFeeProtocol(uint8,uint8)\":{\"params\":{\"feeProtocol0\":\"new protocol fee for token0 of the pool\",\"feeProtocol1\":\"new protocol fee for token1 of the pool\"}}},\"title\":\"Permissioned pool actions\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"collectProtocol(address,uint128,uint128)\":{\"notice\":\"Collect the protocol fee accrued to the pool\"},\"setFeeProtocol(uint8,uint8)\":{\"notice\":\"Set the denominator of the protocol's % share of the fees\"}},\"notice\":\"Contains pool methods that may only be called by the factory owner\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol\":\"IUniswapV3PoolOwnerActions\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol\":{\"keccak256\":\"0x759b78a2918af9e99e246dc3af084f654e48ef32bb4e4cb8a966aa3dcaece235\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://64144fb96e1c7fdba87305acadb98a198d26a3d46c097cb3a666e567f6f29735\",\"dweb:/ipfs/QmUnWVwN9FKB9uV5Pr8YfLpWZnYM2DENnRMaadZ492JS9u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"collectProtocol(address,uint128,uint128)": {
								"notice": "Collect the protocol fee accrued to the pool"
							},
							"setFeeProtocol(uint8,uint8)": {
								"notice": "Set the denominator of the protocol's % share of the fees"
							}
						},
						"notice": "Contains pool methods that may only be called by the factory owner",
						"version": 1
					}
				}
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol": {
				"IUniswapV3PoolState": {
					"abi": [
						{
							"inputs": [],
							"name": "feeGrowthGlobal0X128",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "feeGrowthGlobal1X128",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "liquidity",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "observations",
							"outputs": [
								{
									"internalType": "uint32",
									"name": "blockTimestamp",
									"type": "uint32"
								},
								{
									"internalType": "int56",
									"name": "tickCumulative",
									"type": "int56"
								},
								{
									"internalType": "uint160",
									"name": "secondsPerLiquidityCumulativeX128",
									"type": "uint160"
								},
								{
									"internalType": "bool",
									"name": "initialized",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "key",
									"type": "bytes32"
								}
							],
							"name": "positions",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "_liquidity",
									"type": "uint128"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthInside0LastX128",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthInside1LastX128",
									"type": "uint256"
								},
								{
									"internalType": "uint128",
									"name": "tokensOwed0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "tokensOwed1",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "protocolFees",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "token0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "token1",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "slot0",
							"outputs": [
								{
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								},
								{
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								},
								{
									"internalType": "uint16",
									"name": "observationIndex",
									"type": "uint16"
								},
								{
									"internalType": "uint16",
									"name": "observationCardinality",
									"type": "uint16"
								},
								{
									"internalType": "uint16",
									"name": "observationCardinalityNext",
									"type": "uint16"
								},
								{
									"internalType": "uint8",
									"name": "feeProtocol",
									"type": "uint8"
								},
								{
									"internalType": "bool",
									"name": "unlocked",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int16",
									"name": "wordPosition",
									"type": "int16"
								}
							],
							"name": "tickBitmap",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								}
							],
							"name": "ticks",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "liquidityGross",
									"type": "uint128"
								},
								{
									"internalType": "int128",
									"name": "liquidityNet",
									"type": "int128"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthOutside0X128",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthOutside1X128",
									"type": "uint256"
								},
								{
									"internalType": "int56",
									"name": "tickCumulativeOutside",
									"type": "int56"
								},
								{
									"internalType": "uint160",
									"name": "secondsPerLiquidityOutsideX128",
									"type": "uint160"
								},
								{
									"internalType": "uint32",
									"name": "secondsOutside",
									"type": "uint32"
								},
								{
									"internalType": "bool",
									"name": "initialized",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"feeGrowthGlobal0X128()": {
								"details": "This value can overflow the uint256"
							},
							"feeGrowthGlobal1X128()": {
								"details": "This value can overflow the uint256"
							},
							"liquidity()": {
								"details": "This value has no relationship to the total liquidity across all ticks"
							},
							"observations(uint256)": {
								"details": "You most likely want to use #observe() instead of this method to get an observation as of some amount of time ago, rather than at a specific index in the array.",
								"params": {
									"index": "The element of the observations array to fetch"
								},
								"returns": {
									"blockTimestamp": "The timestamp of the observation, Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp, Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp, Returns initialized whether the observation has been initialized and the values are safe to use"
								}
							},
							"positions(bytes32)": {
								"params": {
									"key": "The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper"
								},
								"returns": {
									"_liquidity": "The amount of liquidity in the position, Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke, Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke, Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke, Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke"
								}
							},
							"protocolFees()": {
								"details": "Protocol fees will never exceed uint128 max in either token"
							},
							"slot0()": {
								"returns": {
									"sqrtPriceX96": "The current price of the pool as a sqrt(token1/token0) Q64.96 value tick The current tick of the pool, i.e. according to the last tick transition that was run. This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick boundary. observationIndex The index of the last oracle observation that was written, observationCardinality The current maximum number of observations stored in the pool, observationCardinalityNext The next maximum number of observations, to be updated when the observation. feeProtocol The protocol fee for both tokens of the pool. Encoded as two 4 bit values, where the protocol fee of token1 is shifted 4 bits and the protocol fee of token0 is the lower 4 bits. Used as the denominator of a fraction of the swap fee, e.g. 4 means 1/4th of the swap fee. unlocked Whether the pool is currently locked to reentrancy"
								}
							},
							"ticks(int24)": {
								"params": {
									"tick": "The tick to look up"
								},
								"returns": {
									"liquidityGross": "the total amount of position liquidity that uses the pool either as tick lower or tick upper, liquidityNet how much liquidity changes when the pool price crosses the tick, feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0, feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1, tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick, secondsOutside the seconds spent on the other side of the tick from the current tick, initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false. Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0. In addition, these values are only relative and must be used only in comparison to previous snapshots for a specific position."
								}
							}
						},
						"title": "Pool state that can change",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"feeGrowthGlobal0X128()": "f3058399",
							"feeGrowthGlobal1X128()": "46141319",
							"liquidity()": "1a686502",
							"observations(uint256)": "252c09d7",
							"positions(bytes32)": "514ea4bf",
							"protocolFees()": "1ad8b03b",
							"slot0()": "3850c7bd",
							"tickBitmap(int16)": "5339c296",
							"ticks(int24)": "f30dba93"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"feeGrowthGlobal0X128\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeGrowthGlobal1X128\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidity\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"observations\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"blockTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"int56\",\"name\":\"tickCumulative\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityCumulativeX128\",\"type\":\"uint160\"},{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"}],\"name\":\"positions\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"_liquidity\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside0LastX128\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside1LastX128\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"tokensOwed0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"tokensOwed1\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"protocolFees\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"token0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"token1\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"slot0\",\"outputs\":[{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"},{\"internalType\":\"uint16\",\"name\":\"observationIndex\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"observationCardinality\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"observationCardinalityNext\",\"type\":\"uint16\"},{\"internalType\":\"uint8\",\"name\":\"feeProtocol\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"unlocked\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int16\",\"name\":\"wordPosition\",\"type\":\"int16\"}],\"name\":\"tickBitmap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"ticks\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"liquidityGross\",\"type\":\"uint128\"},{\"internalType\":\"int128\",\"name\":\"liquidityNet\",\"type\":\"int128\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthOutside0X128\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthOutside1X128\",\"type\":\"uint256\"},{\"internalType\":\"int56\",\"name\":\"tickCumulativeOutside\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityOutsideX128\",\"type\":\"uint160\"},{\"internalType\":\"uint32\",\"name\":\"secondsOutside\",\"type\":\"uint32\"},{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"feeGrowthGlobal0X128()\":{\"details\":\"This value can overflow the uint256\"},\"feeGrowthGlobal1X128()\":{\"details\":\"This value can overflow the uint256\"},\"liquidity()\":{\"details\":\"This value has no relationship to the total liquidity across all ticks\"},\"observations(uint256)\":{\"details\":\"You most likely want to use #observe() instead of this method to get an observation as of some amount of time ago, rather than at a specific index in the array.\",\"params\":{\"index\":\"The element of the observations array to fetch\"},\"returns\":{\"blockTimestamp\":\"The timestamp of the observation, Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp, Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp, Returns initialized whether the observation has been initialized and the values are safe to use\"}},\"positions(bytes32)\":{\"params\":{\"key\":\"The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper\"},\"returns\":{\"_liquidity\":\"The amount of liquidity in the position, Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke, Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke, Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke, Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke\"}},\"protocolFees()\":{\"details\":\"Protocol fees will never exceed uint128 max in either token\"},\"slot0()\":{\"returns\":{\"sqrtPriceX96\":\"The current price of the pool as a sqrt(token1/token0) Q64.96 value tick The current tick of the pool, i.e. according to the last tick transition that was run. This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick boundary. observationIndex The index of the last oracle observation that was written, observationCardinality The current maximum number of observations stored in the pool, observationCardinalityNext The next maximum number of observations, to be updated when the observation. feeProtocol The protocol fee for both tokens of the pool. Encoded as two 4 bit values, where the protocol fee of token1 is shifted 4 bits and the protocol fee of token0 is the lower 4 bits. Used as the denominator of a fraction of the swap fee, e.g. 4 means 1/4th of the swap fee. unlocked Whether the pool is currently locked to reentrancy\"}},\"ticks(int24)\":{\"params\":{\"tick\":\"The tick to look up\"},\"returns\":{\"liquidityGross\":\"the total amount of position liquidity that uses the pool either as tick lower or tick upper, liquidityNet how much liquidity changes when the pool price crosses the tick, feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0, feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1, tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick, secondsOutside the seconds spent on the other side of the tick from the current tick, initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false. Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0. In addition, these values are only relative and must be used only in comparison to previous snapshots for a specific position.\"}}},\"title\":\"Pool state that can change\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"feeGrowthGlobal0X128()\":{\"notice\":\"The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool\"},\"feeGrowthGlobal1X128()\":{\"notice\":\"The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool\"},\"liquidity()\":{\"notice\":\"The currently in range liquidity available to the pool\"},\"observations(uint256)\":{\"notice\":\"Returns data about a specific observation index\"},\"positions(bytes32)\":{\"notice\":\"Returns the information about a position by the position's key\"},\"protocolFees()\":{\"notice\":\"The amounts of token0 and token1 that are owed to the protocol\"},\"slot0()\":{\"notice\":\"The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas when accessed externally.\"},\"tickBitmap(int16)\":{\"notice\":\"Returns 256 packed tick initialized boolean values. See TickBitmap for more information\"},\"ticks(int24)\":{\"notice\":\"Look up information about a specific tick in the pool\"}},\"notice\":\"These methods compose the pool's state, and can change with any frequency including multiple times per transaction\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol\":\"IUniswapV3PoolState\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol\":{\"keccak256\":\"0x852dc1f5df7dcf7f11e7bb3eed79f0cea72ad4b25f6a9d2c35aafb48925fd49f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://ed63907c38ff36b0e22bc9ffc53e791ea74f0d4f0e7c257fdfb5aaf8825b1f0f\",\"dweb:/ipfs/QmSQrckghEjs6HVsA5GVgpNpZWvTXMY5eQLF7cN6deFeEg\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"feeGrowthGlobal0X128()": {
								"notice": "The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool"
							},
							"feeGrowthGlobal1X128()": {
								"notice": "The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool"
							},
							"liquidity()": {
								"notice": "The currently in range liquidity available to the pool"
							},
							"observations(uint256)": {
								"notice": "Returns data about a specific observation index"
							},
							"positions(bytes32)": {
								"notice": "Returns the information about a position by the position's key"
							},
							"protocolFees()": {
								"notice": "The amounts of token0 and token1 that are owed to the protocol"
							},
							"slot0()": {
								"notice": "The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas when accessed externally."
							},
							"tickBitmap(int16)": {
								"notice": "Returns 256 packed tick initialized boolean values. See TickBitmap for more information"
							},
							"ticks(int24)": {
								"notice": "Look up information about a specific tick in the pool"
							}
						},
						"notice": "These methods compose the pool's state, and can change with any frequency including multiple times per transaction",
						"version": 1
					}
				}
			},
			"@uniswap/v3-core/contracts/libraries/FullMath.sol": {
				"FullMath": {
					"abi": [],
					"devdoc": {
						"details": "Handles \"phantom overflow\" i.e., allows multiplication and division where an intermediate value overflows 256 bits",
						"kind": "dev",
						"methods": {},
						"title": "Contains 512-bit math functions",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":362:5124  library FullMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":362:5124  library FullMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220f9c35d942826af63c46e2adc8357fe9661b937b7379149bc153b8b50b845489764736f6c63430007060033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f9c35d942826af63c46e2adc8357fe9661b937b7379149bc153b8b50b845489764736f6c63430007060033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF9 0xC3 0x5D SWAP5 0x28 0x26 0xAF PUSH4 0xC46E2ADC DUP4 JUMPI INVALID SWAP7 PUSH2 0xB937 0xB7 CALLDATACOPY SWAP2 0x49 0xBC ISZERO EXTCODESIZE DUP12 POP 0xB8 GASLIMIT 0x48 SWAP8 PUSH5 0x736F6C6343 STOP SMOD MOD STOP CALLER ",
							"sourceMap": "362:4762:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f9c35d942826af63c46e2adc8357fe9661b937b7379149bc153b8b50b845489764736f6c63430007060033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF9 0xC3 0x5D SWAP5 0x28 0x26 0xAF PUSH4 0xC46E2ADC DUP4 JUMPI INVALID SWAP7 PUSH2 0xB937 0xB7 CALLDATACOPY SWAP2 0x49 0xBC ISZERO EXTCODESIZE DUP12 POP 0xB8 GASLIMIT 0x48 SWAP8 PUSH5 0x736F6C6343 STOP SMOD MOD STOP CALLER ",
							"sourceMap": "362:4762:11:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDivRoundingUp(uint256,uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 362,
									"end": 5124,
									"name": "PUSH #[$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 362,
									"end": 5124,
									"name": "PUSH [$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 362,
									"end": 5124,
									"name": "PUSH",
									"source": 11,
									"value": "B"
								},
								{
									"begin": 362,
									"end": 5124,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 362,
									"end": 5124,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 362,
									"end": 5124,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 362,
									"end": 5124,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 362,
									"end": 5124,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 362,
									"end": 5124,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 362,
									"end": 5124,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 362,
									"end": 5124,
									"name": "BYTE",
									"source": 11
								},
								{
									"begin": 362,
									"end": 5124,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 362,
									"end": 5124,
									"name": "EQ",
									"source": 11
								},
								{
									"begin": 362,
									"end": 5124,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 362,
									"end": 5124,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 362,
									"end": 5124,
									"name": "INVALID",
									"source": 11
								},
								{
									"begin": 362,
									"end": 5124,
									"name": "tag",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 362,
									"end": 5124,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 362,
									"end": 5124,
									"name": "ADDRESS",
									"source": 11
								},
								{
									"begin": 362,
									"end": 5124,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 362,
									"end": 5124,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 362,
									"end": 5124,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 362,
									"end": 5124,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 362,
									"end": 5124,
									"name": "MSTORE8",
									"source": 11
								},
								{
									"begin": 362,
									"end": 5124,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 362,
									"end": 5124,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 362,
									"end": 5124,
									"name": "RETURN",
									"source": 11
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f9c35d942826af63c46e2adc8357fe9661b937b7379149bc153b8b50b845489764736f6c63430007060033",
									".code": [
										{
											"begin": 362,
											"end": 5124,
											"name": "PUSHDEPLOYADDRESS",
											"source": 11
										},
										{
											"begin": 362,
											"end": 5124,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": 362,
											"end": 5124,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 362,
											"end": 5124,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 362,
											"end": 5124,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 362,
											"end": 5124,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 362,
											"end": 5124,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 362,
											"end": 5124,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 362,
											"end": 5124,
											"name": "REVERT",
											"source": 11
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Handles \\\"phantom overflow\\\" i.e., allows multiplication and division where an intermediate value overflows 256 bits\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Contains 512-bit math functions\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Facilitates multiplication and division that can have overflow of an intermediate value without any loss of precision\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/libraries/FullMath.sol\":\"FullMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/libraries/FullMath.sol\":{\"keccak256\":\"0x50e87f7a3197525d1c6f7e04290060e848677c8a4e86c554bc6ace4a4d0d476d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3874093a6b37d8e68f9475a91f8eb0a1c808cb6153c84cfe6c37909505a4d24e\",\"dweb:/ipfs/QmUqGpQqvSHX4SwUvcBCs9g4ZhR9JPhgD3615oUigAhtjj\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Facilitates multiplication and division that can have overflow of an intermediate value without any loss of precision",
						"version": 1
					}
				}
			},
			"@uniswap/v3-core/contracts/libraries/TickMath.sol": {
				"TickMath": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"MAX_SQRT_RATIO": {
								"details": "The maximum value that can be returned from #getSqrtRatioAtTick. Equivalent to getSqrtRatioAtTick(MAX_TICK)"
							},
							"MAX_TICK": {
								"details": "The maximum tick that may be passed to #getSqrtRatioAtTick computed from log base 1.0001 of 2**128"
							},
							"MIN_SQRT_RATIO": {
								"details": "The minimum value that can be returned from #getSqrtRatioAtTick. Equivalent to getSqrtRatioAtTick(MIN_TICK)"
							},
							"MIN_TICK": {
								"details": "The minimum tick that may be passed to #getSqrtRatioAtTick computed from log base 1.0001 of 2**-128"
							}
						},
						"title": "Math library for computing sqrt prices from ticks and vice versa",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":313:8644  library TickMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":313:8644  library TickMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220088155d964d43a73867fb878ddd461135a55c36ccca22ac587972e02302871a164736f6c63430007060033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220088155d964d43a73867fb878ddd461135a55c36ccca22ac587972e02302871a164736f6c63430007060033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADDMOD DUP2 SSTORE 0xD9 PUSH5 0xD43A73867F 0xB8 PUSH25 0xDDD461135A55C36CCCA22AC587972E02302871A164736F6C63 NUMBER STOP SMOD MOD STOP CALLER ",
							"sourceMap": "313:8331:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220088155d964d43a73867fb878ddd461135a55c36ccca22ac587972e02302871a164736f6c63430007060033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADDMOD DUP2 SSTORE 0xD9 PUSH5 0xD43A73867F 0xB8 PUSH25 0xDDD461135A55C36CCCA22AC587972E02302871A164736F6C63 NUMBER STOP SMOD MOD STOP CALLER ",
							"sourceMap": "313:8331:12:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"getSqrtRatioAtTick(int24)": "infinite",
								"getTickAtSqrtRatio(uint160)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 313,
									"end": 8644,
									"name": "PUSH #[$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 313,
									"end": 8644,
									"name": "PUSH [$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 313,
									"end": 8644,
									"name": "PUSH",
									"source": 12,
									"value": "B"
								},
								{
									"begin": 313,
									"end": 8644,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 313,
									"end": 8644,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 313,
									"end": 8644,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 313,
									"end": 8644,
									"name": "CODECOPY",
									"source": 12
								},
								{
									"begin": 313,
									"end": 8644,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 313,
									"end": 8644,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 313,
									"end": 8644,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 313,
									"end": 8644,
									"name": "BYTE",
									"source": 12
								},
								{
									"begin": 313,
									"end": 8644,
									"name": "PUSH",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 313,
									"end": 8644,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 313,
									"end": 8644,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 313,
									"end": 8644,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 313,
									"end": 8644,
									"name": "INVALID",
									"source": 12
								},
								{
									"begin": 313,
									"end": 8644,
									"name": "tag",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 313,
									"end": 8644,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 313,
									"end": 8644,
									"name": "ADDRESS",
									"source": 12
								},
								{
									"begin": 313,
									"end": 8644,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 313,
									"end": 8644,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 313,
									"end": 8644,
									"name": "PUSH",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 313,
									"end": 8644,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 313,
									"end": 8644,
									"name": "MSTORE8",
									"source": 12
								},
								{
									"begin": 313,
									"end": 8644,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 313,
									"end": 8644,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 313,
									"end": 8644,
									"name": "RETURN",
									"source": 12
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220088155d964d43a73867fb878ddd461135a55c36ccca22ac587972e02302871a164736f6c63430007060033",
									".code": [
										{
											"begin": 313,
											"end": 8644,
											"name": "PUSHDEPLOYADDRESS",
											"source": 12
										},
										{
											"begin": 313,
											"end": 8644,
											"name": "ADDRESS",
											"source": 12
										},
										{
											"begin": 313,
											"end": 8644,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 313,
											"end": 8644,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 313,
											"end": 8644,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 313,
											"end": 8644,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 313,
											"end": 8644,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 313,
											"end": 8644,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 313,
											"end": 8644,
											"name": "REVERT",
											"source": 12
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"MAX_SQRT_RATIO\":{\"details\":\"The maximum value that can be returned from #getSqrtRatioAtTick. Equivalent to getSqrtRatioAtTick(MAX_TICK)\"},\"MAX_TICK\":{\"details\":\"The maximum tick that may be passed to #getSqrtRatioAtTick computed from log base 1.0001 of 2**128\"},\"MIN_SQRT_RATIO\":{\"details\":\"The minimum value that can be returned from #getSqrtRatioAtTick. Equivalent to getSqrtRatioAtTick(MIN_TICK)\"},\"MIN_TICK\":{\"details\":\"The minimum tick that may be passed to #getSqrtRatioAtTick computed from log base 1.0001 of 2**-128\"}},\"title\":\"Math library for computing sqrt prices from ticks and vice versa\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Computes sqrt price for ticks of size 1.0001, i.e. sqrt(1.0001^tick) as fixed point Q64.96 numbers. Supports prices between 2**-128 and 2**128\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/libraries/TickMath.sol\":\"TickMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/libraries/TickMath.sol\":{\"keccak256\":\"0xda8c2c0b12d2976acfd364453ba5f5bf0117ba3c91175ee9e1067d3fb26944d9\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://3f3d2d7c2723c91830c74d96292f28fc1cfe28d388cdb9c1a5ebadb4c2b96f81\",\"dweb:/ipfs/QmYU4wk8MEm33wVWR38LoncvR7b8PP1mLuGBKX3dUpYJVE\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Computes sqrt price for ticks of size 1.0001, i.e. sqrt(1.0001^tick) as fixed point Q64.96 numbers. Supports prices between 2**-128 and 2**128",
						"version": 1
					}
				}
			},
			"contracts/PriceAggregator.sol": {
				"PriceAggregator": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "provider",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tB",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "version",
									"type": "uint8"
								}
							],
							"name": "estimateAmountOut",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "uint24",
									"name": "fee",
									"type": "uint24"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "index",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "t0",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "t1",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "provider",
											"type": "address"
										},
										{
											"internalType": "uint8",
											"name": "providerVersion",
											"type": "uint8"
										}
									],
									"internalType": "struct IPriceAggregator.priceIn[]",
									"name": "inputs",
									"type": "tuple[]"
								}
							],
							"name": "getPrices",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "index",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "price",
											"type": "uint256"
										},
										{
											"internalType": "uint24",
											"name": "fee",
											"type": "uint24"
										}
									],
									"internalType": "struct IPriceAggregator.priceOut[]",
									"name": "",
									"type": "tuple[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "index",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "t0",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "t1",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "provider",
											"type": "address"
										},
										{
											"internalType": "uint8",
											"name": "providerVersion",
											"type": "uint8"
										},
										{
											"internalType": "uint256",
											"name": "min0",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "min1",
											"type": "uint256"
										}
									],
									"internalType": "struct IPriceAggregator.existsIn[]",
									"name": "inputs",
									"type": "tuple[]"
								}
							],
							"name": "poolsExists",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "index",
											"type": "uint256"
										},
										{
											"internalType": "bool",
											"name": "exists",
											"type": "bool"
										}
									],
									"internalType": "struct IPriceAggregator.existsOut[]",
									"name": "",
									"type": "tuple[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/PriceAggregator.sol\":270:2164  contract PriceAggregator is IPriceAggregator {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/PriceAggregator.sol\":270:2164  contract PriceAggregator is IPriceAggregator {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x3d157a46\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x6110358d\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xea8650c5\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/PriceAggregator.sol\":1024:1759  function poolsExists(existsIn[] memory inputs) external override view returns (existsOut[] memory){... */\n    tag_3:\n      tag_6\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_7\n      swap2\n      swap1\n      tag_8\n      jump\t// in\n    tag_7:\n      tag_9\n      jump\t// in\n    tag_6:\n      mload(0x40)\n      tag_10\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_10:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/PriceAggregator.sol\":1766:2161  function estimateAmountOut(address provider,address tA,address tB,uint256 amountIn,uint8 version) external override  view returns (uint256 amountOut,uint24 fee){... */\n    tag_4:\n      tag_12\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_13\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_13:\n      tag_15\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      tag_16\n      swap3\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/PriceAggregator.sol\":323:1018  function getPrices(priceIn[] memory inputs) public override view returns (priceOut[] memory) {... */\n    tag_5:\n      tag_18\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_19\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_19:\n      tag_21\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      tag_22\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/PriceAggregator.sol\":1024:1759  function poolsExists(existsIn[] memory inputs) external override view returns (existsOut[] memory){... */\n    tag_9:\n        /* \"contracts/PriceAggregator.sol\":1103:1121  existsOut[] memory */\n      0x60\n        /* \"contracts/PriceAggregator.sol\":1132:1158  existsOut[] memory outputs */\n      0x00\n        /* \"contracts/PriceAggregator.sol\":1177:1183  inputs */\n      dup3\n        /* \"contracts/PriceAggregator.sol\":1177:1190  inputs.length */\n      mload\n        /* \"contracts/PriceAggregator.sol\":1161:1191  new existsOut[](inputs.length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      dup1\n      iszero\n      tag_25\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_25:\n      pop\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_26\n      jumpi\n      dup2\n      0x20\n      add\n    tag_27:\n      tag_28\n      tag_29\n      jump\t// in\n    tag_28:\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x01\n      swap1\n      sub\n      swap1\n      dup2\n      tag_27\n      jumpi\n      swap1\n      pop\n    tag_26:\n      pop\n        /* \"contracts/PriceAggregator.sol\":1132:1191  existsOut[] memory outputs = new existsOut[](inputs.length) */\n      swap1\n      pop\n        /* \"contracts/PriceAggregator.sol\":1202:1208  uint i */\n      0x00\n        /* \"contracts/PriceAggregator.sol\":1197:1733  for (uint i=0;i<inputs.length;i++){... */\n    tag_30:\n        /* \"contracts/PriceAggregator.sol\":1213:1219  inputs */\n      dup4\n        /* \"contracts/PriceAggregator.sol\":1213:1226  inputs.length */\n      mload\n        /* \"contracts/PriceAggregator.sol\":1211:1212  i */\n      dup2\n        /* \"contracts/PriceAggregator.sol\":1211:1226  i<inputs.length */\n      lt\n        /* \"contracts/PriceAggregator.sol\":1197:1733  for (uint i=0;i<inputs.length;i++){... */\n      iszero\n      tag_31\n      jumpi\n        /* \"contracts/PriceAggregator.sol\":1274:1275  2 */\n      0x02\n        /* \"contracts/PriceAggregator.sol\":1245:1251  inputs */\n      dup5\n        /* \"contracts/PriceAggregator.sol\":1252:1253  i */\n      dup3\n        /* \"contracts/PriceAggregator.sol\":1245:1254  inputs[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_33\n      jumpi\n      invalid\n    tag_33:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/PriceAggregator.sol\":1245:1270  inputs[i].providerVersion */\n      0x80\n      add\n      mload\n        /* \"contracts/PriceAggregator.sol\":1245:1275  inputs[i].providerVersion == 2 */\n      0xff\n      and\n      eq\n        /* \"contracts/PriceAggregator.sol\":1241:1472  if (inputs[i].providerVersion == 2) {... */\n      iszero\n      tag_34\n      jumpi\n        /* \"contracts/PriceAggregator.sol\":1291:1302  bool exists */\n      0x00\n        /* \"contracts/PriceAggregator.sol\":1305:1314  UniswapV2 */\n      linkerSymbol(\"66db80e837caed232b747c0dfa8ba195e80afd37d58afd4790f0bc06a2afa716\")\n        /* \"contracts/PriceAggregator.sol\":1305:1325  UniswapV2.PoolExists */\n      0xbcbcaa29\n        /* \"contracts/PriceAggregator.sol\":1326:1332  inputs */\n      dup7\n        /* \"contracts/PriceAggregator.sol\":1333:1334  i */\n      dup5\n        /* \"contracts/PriceAggregator.sol\":1326:1335  inputs[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_35\n      jumpi\n      invalid\n    tag_35:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/PriceAggregator.sol\":1326:1344  inputs[i].provider */\n      0x60\n      add\n      mload\n        /* \"contracts/PriceAggregator.sol\":1345:1351  inputs */\n      dup8\n        /* \"contracts/PriceAggregator.sol\":1352:1353  i */\n      dup6\n        /* \"contracts/PriceAggregator.sol\":1345:1354  inputs[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_36\n      jumpi\n      invalid\n    tag_36:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/PriceAggregator.sol\":1345:1357  inputs[i].t0 */\n      0x20\n      add\n      mload\n        /* \"contracts/PriceAggregator.sol\":1358:1364  inputs */\n      dup9\n        /* \"contracts/PriceAggregator.sol\":1365:1366  i */\n      dup7\n        /* \"contracts/PriceAggregator.sol\":1358:1367  inputs[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_37\n      jumpi\n      invalid\n    tag_37:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/PriceAggregator.sol\":1358:1370  inputs[i].t1 */\n      0x40\n      add\n      mload\n        /* \"contracts/PriceAggregator.sol\":1371:1377  inputs */\n      dup10\n        /* \"contracts/PriceAggregator.sol\":1378:1379  i */\n      dup8\n        /* \"contracts/PriceAggregator.sol\":1371:1380  inputs[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_38\n      jumpi\n      invalid\n    tag_38:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/PriceAggregator.sol\":1371:1385  inputs[i].min0 */\n      0xa0\n      add\n      mload\n        /* \"contracts/PriceAggregator.sol\":1386:1392  inputs */\n      dup11\n        /* \"contracts/PriceAggregator.sol\":1393:1394  i */\n      dup9\n        /* \"contracts/PriceAggregator.sol\":1386:1395  inputs[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_39\n      jumpi\n      invalid\n    tag_39:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/PriceAggregator.sol\":1386:1400  inputs[i].min1 */\n      0xc0\n      add\n      mload\n        /* \"contracts/PriceAggregator.sol\":1305:1401  UniswapV2.PoolExists(inputs[i].provider,inputs[i].t0,inputs[i].t1,inputs[i].min0,inputs[i].min1) */\n      mload(0x40)\n      dup7\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_40\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_40:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_42\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_42:\n      pop\n      gas\n      delegatecall\n      iszero\n      dup1\n      iszero\n      tag_44\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_44:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_45\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_45:\n        /* \"contracts/PriceAggregator.sol\":1291:1401  bool exists = UniswapV2.PoolExists(inputs[i].provider,inputs[i].t0,inputs[i].t1,inputs[i].min0,inputs[i].min1) */\n      swap1\n      pop\n        /* \"contracts/PriceAggregator.sol\":1428:1461  existsOut(inputs[i].index,exists) */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/PriceAggregator.sol\":1438:1444  inputs */\n      dup7\n        /* \"contracts/PriceAggregator.sol\":1445:1446  i */\n      dup5\n        /* \"contracts/PriceAggregator.sol\":1438:1447  inputs[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_47\n      jumpi\n      invalid\n    tag_47:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/PriceAggregator.sol\":1438:1453  inputs[i].index */\n      0x00\n      add\n      mload\n        /* \"contracts/PriceAggregator.sol\":1428:1461  existsOut(inputs[i].index,exists) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/PriceAggregator.sol\":1454:1460  exists */\n      dup3\n        /* \"contracts/PriceAggregator.sol\":1428:1461  existsOut(inputs[i].index,exists) */\n      iszero\n      iszero\n      dup2\n      mstore\n      pop\n        /* \"contracts/PriceAggregator.sol\":1415:1422  outputs */\n      dup4\n        /* \"contracts/PriceAggregator.sol\":1423:1424  i */\n      dup4\n        /* \"contracts/PriceAggregator.sol\":1415:1425  outputs[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_48\n      jumpi\n      invalid\n    tag_48:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"contracts/PriceAggregator.sol\":1415:1461  outputs[i] = existsOut(inputs[i].index,exists) */\n      dup2\n      swap1\n      mstore\n      pop\n        /* \"contracts/PriceAggregator.sol\":1241:1472  if (inputs[i].providerVersion == 2) {... */\n      pop\n    tag_34:\n        /* \"contracts/PriceAggregator.sol\":1506:1507  3 */\n      0x03\n        /* \"contracts/PriceAggregator.sol\":1477:1483  inputs */\n      dup5\n        /* \"contracts/PriceAggregator.sol\":1484:1485  i */\n      dup3\n        /* \"contracts/PriceAggregator.sol\":1477:1486  inputs[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_49\n      jumpi\n      invalid\n    tag_49:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/PriceAggregator.sol\":1477:1502  inputs[i].providerVersion */\n      0x80\n      add\n      mload\n        /* \"contracts/PriceAggregator.sol\":1477:1507  inputs[i].providerVersion == 3 */\n      0xff\n      and\n      eq\n        /* \"contracts/PriceAggregator.sol\":1473:1704  if (inputs[i].providerVersion == 3) {... */\n      iszero\n      tag_50\n      jumpi\n        /* \"contracts/PriceAggregator.sol\":1523:1534  bool exists */\n      0x00\n        /* \"contracts/PriceAggregator.sol\":1537:1546  UniswapV3 */\n      linkerSymbol(\"295ab41254e875e078eae9a73e9e2c34b169d6e6e61c89bb6c8551dc204f08c5\")\n        /* \"contracts/PriceAggregator.sol\":1537:1557  UniswapV3.PoolExists */\n      0xbcbcaa29\n        /* \"contracts/PriceAggregator.sol\":1558:1564  inputs */\n      dup7\n        /* \"contracts/PriceAggregator.sol\":1565:1566  i */\n      dup5\n        /* \"contracts/PriceAggregator.sol\":1558:1567  inputs[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_51\n      jumpi\n      invalid\n    tag_51:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/PriceAggregator.sol\":1558:1576  inputs[i].provider */\n      0x60\n      add\n      mload\n        /* \"contracts/PriceAggregator.sol\":1577:1583  inputs */\n      dup8\n        /* \"contracts/PriceAggregator.sol\":1584:1585  i */\n      dup6\n        /* \"contracts/PriceAggregator.sol\":1577:1586  inputs[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_52\n      jumpi\n      invalid\n    tag_52:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/PriceAggregator.sol\":1577:1589  inputs[i].t0 */\n      0x20\n      add\n      mload\n        /* \"contracts/PriceAggregator.sol\":1590:1596  inputs */\n      dup9\n        /* \"contracts/PriceAggregator.sol\":1597:1598  i */\n      dup7\n        /* \"contracts/PriceAggregator.sol\":1590:1599  inputs[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_53\n      jumpi\n      invalid\n    tag_53:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/PriceAggregator.sol\":1590:1602  inputs[i].t1 */\n      0x40\n      add\n      mload\n        /* \"contracts/PriceAggregator.sol\":1603:1609  inputs */\n      dup10\n        /* \"contracts/PriceAggregator.sol\":1610:1611  i */\n      dup8\n        /* \"contracts/PriceAggregator.sol\":1603:1612  inputs[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_54\n      jumpi\n      invalid\n    tag_54:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/PriceAggregator.sol\":1603:1617  inputs[i].min0 */\n      0xa0\n      add\n      mload\n        /* \"contracts/PriceAggregator.sol\":1618:1624  inputs */\n      dup11\n        /* \"contracts/PriceAggregator.sol\":1625:1626  i */\n      dup9\n        /* \"contracts/PriceAggregator.sol\":1618:1627  inputs[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_55\n      jumpi\n      invalid\n    tag_55:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/PriceAggregator.sol\":1618:1632  inputs[i].min1 */\n      0xc0\n      add\n      mload\n        /* \"contracts/PriceAggregator.sol\":1537:1633  UniswapV3.PoolExists(inputs[i].provider,inputs[i].t0,inputs[i].t1,inputs[i].min0,inputs[i].min1) */\n      mload(0x40)\n      dup7\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_56\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_56:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_57\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_57:\n      pop\n      gas\n      delegatecall\n      iszero\n      dup1\n      iszero\n      tag_59\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_59:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_60\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_60:\n        /* \"contracts/PriceAggregator.sol\":1523:1633  bool exists = UniswapV3.PoolExists(inputs[i].provider,inputs[i].t0,inputs[i].t1,inputs[i].min0,inputs[i].min1) */\n      swap1\n      pop\n        /* \"contracts/PriceAggregator.sol\":1660:1693  existsOut(inputs[i].index,exists) */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/PriceAggregator.sol\":1670:1676  inputs */\n      dup7\n        /* \"contracts/PriceAggregator.sol\":1677:1678  i */\n      dup5\n        /* \"contracts/PriceAggregator.sol\":1670:1679  inputs[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_61\n      jumpi\n      invalid\n    tag_61:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/PriceAggregator.sol\":1670:1685  inputs[i].index */\n      0x00\n      add\n      mload\n        /* \"contracts/PriceAggregator.sol\":1660:1693  existsOut(inputs[i].index,exists) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/PriceAggregator.sol\":1686:1692  exists */\n      dup3\n        /* \"contracts/PriceAggregator.sol\":1660:1693  existsOut(inputs[i].index,exists) */\n      iszero\n      iszero\n      dup2\n      mstore\n      pop\n        /* \"contracts/PriceAggregator.sol\":1647:1654  outputs */\n      dup4\n        /* \"contracts/PriceAggregator.sol\":1655:1656  i */\n      dup4\n        /* \"contracts/PriceAggregator.sol\":1647:1657  outputs[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_62\n      jumpi\n      invalid\n    tag_62:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"contracts/PriceAggregator.sol\":1647:1693  outputs[i] = existsOut(inputs[i].index,exists) */\n      dup2\n      swap1\n      mstore\n      pop\n        /* \"contracts/PriceAggregator.sol\":1473:1704  if (inputs[i].providerVersion == 3) {... */\n      pop\n    tag_50:\n        /* \"contracts/PriceAggregator.sol\":1227:1230  i++ */\n      dup1\n      dup1\n      0x01\n      add\n      swap2\n      pop\n      pop\n        /* \"contracts/PriceAggregator.sol\":1197:1733  for (uint i=0;i<inputs.length;i++){... */\n      jump(tag_30)\n    tag_31:\n      pop\n        /* \"contracts/PriceAggregator.sol\":1745:1752  outputs */\n      dup1\n        /* \"contracts/PriceAggregator.sol\":1738:1752  return outputs */\n      swap2\n      pop\n      pop\n        /* \"contracts/PriceAggregator.sol\":1024:1759  function poolsExists(existsIn[] memory inputs) external override view returns (existsOut[] memory){... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/PriceAggregator.sol\":1766:2161  function estimateAmountOut(address provider,address tA,address tB,uint256 amountIn,uint8 version) external override  view returns (uint256 amountOut,uint24 fee){... */\n    tag_15:\n        /* \"contracts/PriceAggregator.sol\":1897:1914  uint256 amountOut */\n      0x00\n        /* \"contracts/PriceAggregator.sol\":1915:1925  uint24 fee */\n      dup1\n        /* \"contracts/PriceAggregator.sol\":1951:1952  2 */\n      0x02\n        /* \"contracts/PriceAggregator.sol\":1940:1947  version */\n      dup4\n        /* \"contracts/PriceAggregator.sol\":1940:1952  version == 2 */\n      0xff\n      and\n      eq\n        /* \"contracts/PriceAggregator.sol\":1936:2154  if (version == 2) {... */\n      iszero\n      tag_64\n      jumpi\n        /* \"contracts/PriceAggregator.sol\":1976:1985  UniswapV2 */\n      linkerSymbol(\"66db80e837caed232b747c0dfa8ba195e80afd37d58afd4790f0bc06a2afa716\")\n        /* \"contracts/PriceAggregator.sol\":1976:2003  UniswapV2.EstimateAmountOut */\n      0x8c39560e\n        /* \"contracts/PriceAggregator.sol\":2004:2012  provider */\n      dup9\n        /* \"contracts/PriceAggregator.sol\":2014:2016  tA */\n      dup9\n        /* \"contracts/PriceAggregator.sol\":2018:2020  tB */\n      dup9\n        /* \"contracts/PriceAggregator.sol\":2021:2029  amountIn */\n      dup9\n        /* \"contracts/PriceAggregator.sol\":1976:2030  UniswapV2.EstimateAmountOut(provider, tA, tB,amountIn) */\n      mload(0x40)\n      dup6\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_65\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_65:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_67\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_67:\n      pop\n      gas\n      delegatecall\n      iszero\n      dup1\n      iszero\n      tag_69\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_69:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_70\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_70:\n        /* \"contracts/PriceAggregator.sol\":2031:2032  0 */\n      0x00\n        /* \"contracts/PriceAggregator.sol\":1968:2033  return (UniswapV2.EstimateAmountOut(provider, tA, tB,amountIn),0) */\n      swap2\n      pop\n      swap2\n      pop\n      jump(tag_63)\n        /* \"contracts/PriceAggregator.sol\":1936:2154  if (version == 2) {... */\n    tag_64:\n        /* \"contracts/PriceAggregator.sol\":2064:2065  3 */\n      0x03\n        /* \"contracts/PriceAggregator.sol\":2053:2060  version */\n      dup4\n        /* \"contracts/PriceAggregator.sol\":2053:2065  version == 3 */\n      0xff\n      and\n      eq\n        /* \"contracts/PriceAggregator.sol\":2049:2154  if (version == 3) {... */\n      iszero\n      tag_73\n      jumpi\n        /* \"contracts/PriceAggregator.sol\":2088:2097  UniswapV3 */\n      linkerSymbol(\"295ab41254e875e078eae9a73e9e2c34b169d6e6e61c89bb6c8551dc204f08c5\")\n        /* \"contracts/PriceAggregator.sol\":2088:2115  UniswapV3.EstimateAmountOut */\n      0x8c39560e\n        /* \"contracts/PriceAggregator.sol\":2116:2124  provider */\n      dup9\n        /* \"contracts/PriceAggregator.sol\":2126:2128  tA */\n      dup9\n        /* \"contracts/PriceAggregator.sol\":2130:2132  tB */\n      dup9\n        /* \"contracts/PriceAggregator.sol\":2134:2142  amountIn */\n      dup9\n        /* \"contracts/PriceAggregator.sol\":2088:2143  UniswapV3.EstimateAmountOut(provider, tA, tB, amountIn) */\n      mload(0x40)\n      dup6\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_74\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_74:\n      0x40\n      dup1\n      mload\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_75\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_75:\n      pop\n      gas\n      delegatecall\n      iszero\n      dup1\n      iszero\n      tag_77\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_77:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_78\n      swap2\n      swap1\n      tag_79\n      jump\t// in\n    tag_78:\n        /* \"contracts/PriceAggregator.sol\":2081:2143  return UniswapV3.EstimateAmountOut(provider, tA, tB, amountIn) */\n      swap2\n      pop\n      swap2\n      pop\n      jump(tag_63)\n        /* \"contracts/PriceAggregator.sol\":2049:2154  if (version == 3) {... */\n    tag_73:\n        /* \"contracts/PriceAggregator.sol\":1766:2161  function estimateAmountOut(address provider,address tA,address tB,uint256 amountIn,uint8 version) external override  view returns (uint256 amountOut,uint24 fee){... */\n    tag_63:\n      swap6\n      pop\n      swap6\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/PriceAggregator.sol\":323:1018  function getPrices(priceIn[] memory inputs) public override view returns (priceOut[] memory) {... */\n    tag_21:\n        /* \"contracts/PriceAggregator.sol\":397:414  priceOut[] memory */\n      0x60\n        /* \"contracts/PriceAggregator.sol\":426:451  priceOut[] memory outputs */\n      0x00\n        /* \"contracts/PriceAggregator.sol\":469:475  inputs */\n      dup3\n        /* \"contracts/PriceAggregator.sol\":469:482  inputs.length */\n      mload\n        /* \"contracts/PriceAggregator.sol\":454:483  new priceOut[](inputs.length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      dup1\n      iszero\n      tag_81\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_81:\n      pop\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_82\n      jumpi\n      dup2\n      0x20\n      add\n    tag_83:\n      tag_84\n      tag_85\n      jump\t// in\n    tag_84:\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x01\n      swap1\n      sub\n      swap1\n      dup2\n      tag_83\n      jumpi\n      swap1\n      pop\n    tag_82:\n      pop\n        /* \"contracts/PriceAggregator.sol\":426:483  priceOut[] memory outputs = new priceOut[](inputs.length) */\n      swap1\n      pop\n        /* \"contracts/PriceAggregator.sol\":497:503  uint i */\n      0x00\n        /* \"contracts/PriceAggregator.sol\":492:984  for (uint i=0;i<inputs.length;i++){... */\n    tag_86:\n        /* \"contracts/PriceAggregator.sol\":508:514  inputs */\n      dup4\n        /* \"contracts/PriceAggregator.sol\":508:521  inputs.length */\n      mload\n        /* \"contracts/PriceAggregator.sol\":506:507  i */\n      dup2\n        /* \"contracts/PriceAggregator.sol\":506:521  i<inputs.length */\n      lt\n        /* \"contracts/PriceAggregator.sol\":492:984  for (uint i=0;i<inputs.length;i++){... */\n      iszero\n      tag_87\n      jumpi\n        /* \"contracts/PriceAggregator.sol\":569:570  2 */\n      0x02\n        /* \"contracts/PriceAggregator.sol\":540:546  inputs */\n      dup5\n        /* \"contracts/PriceAggregator.sol\":547:548  i */\n      dup3\n        /* \"contracts/PriceAggregator.sol\":540:549  inputs[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_89\n      jumpi\n      invalid\n    tag_89:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/PriceAggregator.sol\":540:565  inputs[i].providerVersion */\n      0x80\n      add\n      mload\n        /* \"contracts/PriceAggregator.sol\":540:570  inputs[i].providerVersion == 2 */\n      0xff\n      and\n      eq\n        /* \"contracts/PriceAggregator.sol\":536:975  if (inputs[i].providerVersion == 2) {... */\n      iszero\n      tag_90\n      jumpi\n        /* \"contracts/PriceAggregator.sol\":586:599  uint256 price */\n      0x00\n        /* \"contracts/PriceAggregator.sol\":602:611  UniswapV2 */\n      linkerSymbol(\"66db80e837caed232b747c0dfa8ba195e80afd37d58afd4790f0bc06a2afa716\")\n        /* \"contracts/PriceAggregator.sol\":602:617  UniswapV2.Price */\n      0xc361e0b1\n        /* \"contracts/PriceAggregator.sol\":618:624  inputs */\n      dup7\n        /* \"contracts/PriceAggregator.sol\":625:626  i */\n      dup5\n        /* \"contracts/PriceAggregator.sol\":618:627  inputs[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_91\n      jumpi\n      invalid\n    tag_91:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/PriceAggregator.sol\":618:636  inputs[i].provider */\n      0x60\n      add\n      mload\n        /* \"contracts/PriceAggregator.sol\":637:643  inputs */\n      dup8\n        /* \"contracts/PriceAggregator.sol\":644:645  i */\n      dup6\n        /* \"contracts/PriceAggregator.sol\":637:646  inputs[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_92\n      jumpi\n      invalid\n    tag_92:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/PriceAggregator.sol\":637:649  inputs[i].t0 */\n      0x20\n      add\n      mload\n        /* \"contracts/PriceAggregator.sol\":650:656  inputs */\n      dup9\n        /* \"contracts/PriceAggregator.sol\":657:658  i */\n      dup7\n        /* \"contracts/PriceAggregator.sol\":650:659  inputs[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_93\n      jumpi\n      invalid\n    tag_93:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/PriceAggregator.sol\":650:662  inputs[i].t1 */\n      0x40\n      add\n      mload\n        /* \"contracts/PriceAggregator.sol\":602:663  UniswapV2.Price(inputs[i].provider,inputs[i].t0,inputs[i].t1) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_94\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_95\n      jump\t// in\n    tag_94:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_96\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_96:\n      pop\n      gas\n      delegatecall\n      iszero\n      dup1\n      iszero\n      tag_98\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_98:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_99\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_99:\n        /* \"contracts/PriceAggregator.sol\":586:663  uint256 price = UniswapV2.Price(inputs[i].provider,inputs[i].t0,inputs[i].t1) */\n      swap1\n      pop\n        /* \"contracts/PriceAggregator.sol\":690:723  priceOut(inputs[i].index,price,0) */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/PriceAggregator.sol\":699:705  inputs */\n      dup7\n        /* \"contracts/PriceAggregator.sol\":706:707  i */\n      dup5\n        /* \"contracts/PriceAggregator.sol\":699:708  inputs[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_100\n      jumpi\n      invalid\n    tag_100:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/PriceAggregator.sol\":699:714  inputs[i].index */\n      0x00\n      add\n      mload\n        /* \"contracts/PriceAggregator.sol\":690:723  priceOut(inputs[i].index,price,0) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/PriceAggregator.sol\":715:720  price */\n      dup3\n        /* \"contracts/PriceAggregator.sol\":690:723  priceOut(inputs[i].index,price,0) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/PriceAggregator.sol\":721:722  0 */\n      0x00\n        /* \"contracts/PriceAggregator.sol\":690:723  priceOut(inputs[i].index,price,0) */\n      0xffffff\n      and\n      dup2\n      mstore\n      pop\n        /* \"contracts/PriceAggregator.sol\":677:684  outputs */\n      dup4\n        /* \"contracts/PriceAggregator.sol\":685:686  i */\n      dup4\n        /* \"contracts/PriceAggregator.sol\":677:687  outputs[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_101\n      jumpi\n      invalid\n    tag_101:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"contracts/PriceAggregator.sol\":677:723  outputs[i] = priceOut(inputs[i].index,price,0) */\n      dup2\n      swap1\n      mstore\n      pop\n        /* \"contracts/PriceAggregator.sol\":536:975  if (inputs[i].providerVersion == 2) {... */\n      pop\n      jump(tag_102)\n    tag_90:\n        /* \"contracts/PriceAggregator.sol\":783:784  3 */\n      0x03\n        /* \"contracts/PriceAggregator.sol\":754:760  inputs */\n      dup5\n        /* \"contracts/PriceAggregator.sol\":761:762  i */\n      dup3\n        /* \"contracts/PriceAggregator.sol\":754:763  inputs[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_103\n      jumpi\n      invalid\n    tag_103:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/PriceAggregator.sol\":754:779  inputs[i].providerVersion */\n      0x80\n      add\n      mload\n        /* \"contracts/PriceAggregator.sol\":754:784  inputs[i].providerVersion == 3 */\n      0xff\n      and\n      eq\n        /* \"contracts/PriceAggregator.sol\":750:975  if (inputs[i].providerVersion == 3) {... */\n      iszero\n      tag_104\n      jumpi\n        /* \"contracts/PriceAggregator.sol\":801:814  uint256 price */\n      0x00\n        /* \"contracts/PriceAggregator.sol\":815:825  uint24 fee */\n      dup1\n        /* \"contracts/PriceAggregator.sol\":829:838  UniswapV3 */\n      linkerSymbol(\"295ab41254e875e078eae9a73e9e2c34b169d6e6e61c89bb6c8551dc204f08c5\")\n        /* \"contracts/PriceAggregator.sol\":829:844  UniswapV3.Price */\n      0xc361e0b1\n        /* \"contracts/PriceAggregator.sol\":845:851  inputs */\n      dup8\n        /* \"contracts/PriceAggregator.sol\":852:853  i */\n      dup6\n        /* \"contracts/PriceAggregator.sol\":845:854  inputs[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_105\n      jumpi\n      invalid\n    tag_105:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/PriceAggregator.sol\":845:863  inputs[i].provider */\n      0x60\n      add\n      mload\n        /* \"contracts/PriceAggregator.sol\":864:870  inputs */\n      dup9\n        /* \"contracts/PriceAggregator.sol\":871:872  i */\n      dup7\n        /* \"contracts/PriceAggregator.sol\":864:873  inputs[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_106\n      jumpi\n      invalid\n    tag_106:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/PriceAggregator.sol\":864:876  inputs[i].t0 */\n      0x20\n      add\n      mload\n        /* \"contracts/PriceAggregator.sol\":877:883  inputs */\n      dup10\n        /* \"contracts/PriceAggregator.sol\":884:885  i */\n      dup8\n        /* \"contracts/PriceAggregator.sol\":877:886  inputs[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_107\n      jumpi\n      invalid\n    tag_107:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/PriceAggregator.sol\":877:889  inputs[i].t1 */\n      0x40\n      add\n      mload\n        /* \"contracts/PriceAggregator.sol\":829:890  UniswapV3.Price(inputs[i].provider,inputs[i].t0,inputs[i].t1) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_108\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_95\n      jump\t// in\n    tag_108:\n      0x40\n      dup1\n      mload\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_109\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_109:\n      pop\n      gas\n      delegatecall\n      iszero\n      dup1\n      iszero\n      tag_111\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_111:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_112\n      swap2\n      swap1\n      tag_79\n      jump\t// in\n    tag_112:\n        /* \"contracts/PriceAggregator.sol\":800:890  (uint256 price,uint24 fee) = UniswapV3.Price(inputs[i].provider,inputs[i].t0,inputs[i].t1) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"contracts/PriceAggregator.sol\":917:952  priceOut(inputs[i].index,price,fee) */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/PriceAggregator.sol\":926:932  inputs */\n      dup8\n        /* \"contracts/PriceAggregator.sol\":933:934  i */\n      dup6\n        /* \"contracts/PriceAggregator.sol\":926:935  inputs[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_113\n      jumpi\n      invalid\n    tag_113:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/PriceAggregator.sol\":926:941  inputs[i].index */\n      0x00\n      add\n      mload\n        /* \"contracts/PriceAggregator.sol\":917:952  priceOut(inputs[i].index,price,fee) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/PriceAggregator.sol\":942:947  price */\n      dup4\n        /* \"contracts/PriceAggregator.sol\":917:952  priceOut(inputs[i].index,price,fee) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/PriceAggregator.sol\":948:951  fee */\n      dup3\n        /* \"contracts/PriceAggregator.sol\":917:952  priceOut(inputs[i].index,price,fee) */\n      0xffffff\n      and\n      dup2\n      mstore\n      pop\n        /* \"contracts/PriceAggregator.sol\":904:911  outputs */\n      dup5\n        /* \"contracts/PriceAggregator.sol\":912:913  i */\n      dup5\n        /* \"contracts/PriceAggregator.sol\":904:914  outputs[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_114\n      jumpi\n      invalid\n    tag_114:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"contracts/PriceAggregator.sol\":904:952  outputs[i] = priceOut(inputs[i].index,price,fee) */\n      dup2\n      swap1\n      mstore\n      pop\n        /* \"contracts/PriceAggregator.sol\":750:975  if (inputs[i].providerVersion == 3) {... */\n      pop\n      pop\n    tag_104:\n        /* \"contracts/PriceAggregator.sol\":536:975  if (inputs[i].providerVersion == 2) {... */\n    tag_102:\n        /* \"contracts/PriceAggregator.sol\":522:525  i++ */\n      dup1\n      dup1\n      0x01\n      add\n      swap2\n      pop\n      pop\n        /* \"contracts/PriceAggregator.sol\":492:984  for (uint i=0;i<inputs.length;i++){... */\n      jump(tag_86)\n    tag_87:\n      pop\n        /* \"contracts/PriceAggregator.sol\":1004:1011  outputs */\n      dup1\n        /* \"contracts/PriceAggregator.sol\":997:1011  return outputs */\n      swap2\n      pop\n      pop\n        /* \"contracts/PriceAggregator.sol\":323:1018  function getPrices(priceIn[] memory inputs) public override view returns (priceOut[] memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n    tag_29:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      iszero(iszero(0x00))\n      dup2\n      mstore\n      pop\n      swap1\n      jump\t// out\n    tag_85:\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      and(0xffffff, 0x00)\n      dup2\n      mstore\n      pop\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":49:749   */\n    tag_116:\n      0x00\n        /* \"#utility.yul\":196:302   */\n      tag_118\n        /* \"#utility.yul\":211:301   */\n      tag_119\n        /* \"#utility.yul\":294:300   */\n      dup5\n        /* \"#utility.yul\":211:301   */\n      tag_120\n      jump\t// in\n    tag_119:\n        /* \"#utility.yul\":196:302   */\n      tag_121\n      jump\t// in\n    tag_118:\n        /* \"#utility.yul\":187:302   */\n      swap1\n      pop\n        /* \"#utility.yul\":322:327   */\n      dup1\n        /* \"#utility.yul\":350:356   */\n      dup4\n        /* \"#utility.yul\":343:348   */\n      dup3\n        /* \"#utility.yul\":336:357   */\n      mstore\n        /* \"#utility.yul\":376:380   */\n      0x20\n        /* \"#utility.yul\":369:374   */\n      dup3\n        /* \"#utility.yul\":365:381   */\n      add\n        /* \"#utility.yul\":358:381   */\n      swap1\n      pop\n        /* \"#utility.yul\":401:407   */\n      dup3\n        /* \"#utility.yul\":451:454   */\n      dup6\n        /* \"#utility.yul\":443:447   */\n      0xe0\n        /* \"#utility.yul\":435:441   */\n      dup7\n        /* \"#utility.yul\":431:448   */\n      mul\n        /* \"#utility.yul\":426:429   */\n      dup3\n        /* \"#utility.yul\":422:449   */\n      add\n        /* \"#utility.yul\":419:455   */\n      gt\n        /* \"#utility.yul\":416:418   */\n      iszero\n      tag_122\n      jumpi\n        /* \"#utility.yul\":468:469   */\n      0x00\n        /* \"#utility.yul\":465:466   */\n      dup1\n        /* \"#utility.yul\":458:470   */\n      revert\n        /* \"#utility.yul\":416:418   */\n    tag_122:\n        /* \"#utility.yul\":496:497   */\n      0x00\n        /* \"#utility.yul\":481:743   */\n    tag_123:\n        /* \"#utility.yul\":506:512   */\n      dup6\n        /* \"#utility.yul\":503:504   */\n      dup2\n        /* \"#utility.yul\":500:513   */\n      lt\n        /* \"#utility.yul\":481:743   */\n      iszero\n      tag_125\n      jumpi\n        /* \"#utility.yul\":573:576   */\n      dup2\n        /* \"#utility.yul\":601:664   */\n      tag_126\n        /* \"#utility.yul\":660:663   */\n      dup9\n        /* \"#utility.yul\":648:658   */\n      dup3\n        /* \"#utility.yul\":601:664   */\n      tag_127\n      jump\t// in\n    tag_126:\n        /* \"#utility.yul\":596:599   */\n      dup5\n        /* \"#utility.yul\":589:665   */\n      mstore\n        /* \"#utility.yul\":694:698   */\n      0x20\n        /* \"#utility.yul\":689:692   */\n      dup5\n        /* \"#utility.yul\":685:699   */\n      add\n        /* \"#utility.yul\":678:699   */\n      swap4\n      pop\n        /* \"#utility.yul\":728:732   */\n      0xe0\n        /* \"#utility.yul\":723:726   */\n      dup4\n        /* \"#utility.yul\":719:733   */\n      add\n        /* \"#utility.yul\":712:733   */\n      swap3\n      pop\n        /* \"#utility.yul\":541:743   */\n      pop\n        /* \"#utility.yul\":528:529   */\n      0x01\n        /* \"#utility.yul\":525:526   */\n      dup2\n        /* \"#utility.yul\":521:530   */\n      add\n        /* \"#utility.yul\":516:530   */\n      swap1\n      pop\n        /* \"#utility.yul\":481:743   */\n      jump(tag_123)\n    tag_125:\n        /* \"#utility.yul\":485:499   */\n      pop\n        /* \"#utility.yul\":177:749   */\n      pop\n      pop\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":796:1493   */\n    tag_128:\n      0x00\n        /* \"#utility.yul\":942:1047   */\n      tag_130\n        /* \"#utility.yul\":957:1046   */\n      tag_131\n        /* \"#utility.yul\":1039:1045   */\n      dup5\n        /* \"#utility.yul\":957:1046   */\n      tag_132\n      jump\t// in\n    tag_131:\n        /* \"#utility.yul\":942:1047   */\n      tag_121\n      jump\t// in\n    tag_130:\n        /* \"#utility.yul\":933:1047   */\n      swap1\n      pop\n        /* \"#utility.yul\":1067:1072   */\n      dup1\n        /* \"#utility.yul\":1095:1101   */\n      dup4\n        /* \"#utility.yul\":1088:1093   */\n      dup3\n        /* \"#utility.yul\":1081:1102   */\n      mstore\n        /* \"#utility.yul\":1121:1125   */\n      0x20\n        /* \"#utility.yul\":1114:1119   */\n      dup3\n        /* \"#utility.yul\":1110:1126   */\n      add\n        /* \"#utility.yul\":1103:1126   */\n      swap1\n      pop\n        /* \"#utility.yul\":1146:1152   */\n      dup3\n        /* \"#utility.yul\":1196:1199   */\n      dup6\n        /* \"#utility.yul\":1188:1192   */\n      0xa0\n        /* \"#utility.yul\":1180:1186   */\n      dup7\n        /* \"#utility.yul\":1176:1193   */\n      mul\n        /* \"#utility.yul\":1171:1174   */\n      dup3\n        /* \"#utility.yul\":1167:1194   */\n      add\n        /* \"#utility.yul\":1164:1200   */\n      gt\n        /* \"#utility.yul\":1161:1163   */\n      iszero\n      tag_133\n      jumpi\n        /* \"#utility.yul\":1213:1214   */\n      0x00\n        /* \"#utility.yul\":1210:1211   */\n      dup1\n        /* \"#utility.yul\":1203:1215   */\n      revert\n        /* \"#utility.yul\":1161:1163   */\n    tag_133:\n        /* \"#utility.yul\":1241:1242   */\n      0x00\n        /* \"#utility.yul\":1226:1487   */\n    tag_134:\n        /* \"#utility.yul\":1251:1257   */\n      dup6\n        /* \"#utility.yul\":1248:1249   */\n      dup2\n        /* \"#utility.yul\":1245:1258   */\n      lt\n        /* \"#utility.yul\":1226:1487   */\n      iszero\n      tag_136\n      jumpi\n        /* \"#utility.yul\":1318:1321   */\n      dup2\n        /* \"#utility.yul\":1346:1408   */\n      tag_137\n        /* \"#utility.yul\":1404:1407   */\n      dup9\n        /* \"#utility.yul\":1392:1402   */\n      dup3\n        /* \"#utility.yul\":1346:1408   */\n      tag_138\n      jump\t// in\n    tag_137:\n        /* \"#utility.yul\":1341:1344   */\n      dup5\n        /* \"#utility.yul\":1334:1409   */\n      mstore\n        /* \"#utility.yul\":1438:1442   */\n      0x20\n        /* \"#utility.yul\":1433:1436   */\n      dup5\n        /* \"#utility.yul\":1429:1443   */\n      add\n        /* \"#utility.yul\":1422:1443   */\n      swap4\n      pop\n        /* \"#utility.yul\":1472:1476   */\n      0xa0\n        /* \"#utility.yul\":1467:1470   */\n      dup4\n        /* \"#utility.yul\":1463:1477   */\n      add\n        /* \"#utility.yul\":1456:1477   */\n      swap3\n      pop\n        /* \"#utility.yul\":1286:1487   */\n      pop\n        /* \"#utility.yul\":1273:1274   */\n      0x01\n        /* \"#utility.yul\":1270:1271   */\n      dup2\n        /* \"#utility.yul\":1266:1275   */\n      add\n        /* \"#utility.yul\":1261:1275   */\n      swap1\n      pop\n        /* \"#utility.yul\":1226:1487   */\n      jump(tag_134)\n    tag_136:\n        /* \"#utility.yul\":1230:1244   */\n      pop\n        /* \"#utility.yul\":923:1493   */\n      pop\n      pop\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1499:1638   */\n    tag_139:\n      0x00\n        /* \"#utility.yul\":1583:1589   */\n      dup2\n        /* \"#utility.yul\":1570:1590   */\n      calldataload\n        /* \"#utility.yul\":1561:1590   */\n      swap1\n      pop\n        /* \"#utility.yul\":1599:1632   */\n      tag_141\n        /* \"#utility.yul\":1626:1631   */\n      dup2\n        /* \"#utility.yul\":1599:1632   */\n      tag_142\n      jump\t// in\n    tag_141:\n        /* \"#utility.yul\":1551:1638   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1686:2041   */\n    tag_143:\n      0x00\n        /* \"#utility.yul\":1832:1835   */\n      dup3\n        /* \"#utility.yul\":1825:1829   */\n      0x1f\n        /* \"#utility.yul\":1817:1823   */\n      dup4\n        /* \"#utility.yul\":1813:1830   */\n      add\n        /* \"#utility.yul\":1809:1836   */\n      slt\n        /* \"#utility.yul\":1799:1801   */\n      tag_145\n      jumpi\n        /* \"#utility.yul\":1850:1851   */\n      0x00\n        /* \"#utility.yul\":1847:1848   */\n      dup1\n        /* \"#utility.yul\":1840:1852   */\n      revert\n        /* \"#utility.yul\":1799:1801   */\n    tag_145:\n        /* \"#utility.yul\":1890:1896   */\n      dup2\n        /* \"#utility.yul\":1877:1897   */\n      calldataload\n        /* \"#utility.yul\":1915:2035   */\n      tag_146\n        /* \"#utility.yul\":2031:2034   */\n      dup5\n        /* \"#utility.yul\":2023:2029   */\n      dup3\n        /* \"#utility.yul\":2016:2020   */\n      0x20\n        /* \"#utility.yul\":2008:2014   */\n      dup7\n        /* \"#utility.yul\":2004:2021   */\n      add\n        /* \"#utility.yul\":1915:2035   */\n      tag_116\n      jump\t// in\n    tag_146:\n        /* \"#utility.yul\":1906:2035   */\n      swap2\n      pop\n        /* \"#utility.yul\":1789:2041   */\n      pop\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2088:2441   */\n    tag_147:\n      0x00\n        /* \"#utility.yul\":2233:2236   */\n      dup3\n        /* \"#utility.yul\":2226:2230   */\n      0x1f\n        /* \"#utility.yul\":2218:2224   */\n      dup4\n        /* \"#utility.yul\":2214:2231   */\n      add\n        /* \"#utility.yul\":2210:2237   */\n      slt\n        /* \"#utility.yul\":2200:2202   */\n      tag_149\n      jumpi\n        /* \"#utility.yul\":2251:2252   */\n      0x00\n        /* \"#utility.yul\":2248:2249   */\n      dup1\n        /* \"#utility.yul\":2241:2253   */\n      revert\n        /* \"#utility.yul\":2200:2202   */\n    tag_149:\n        /* \"#utility.yul\":2291:2297   */\n      dup2\n        /* \"#utility.yul\":2278:2298   */\n      calldataload\n        /* \"#utility.yul\":2316:2435   */\n      tag_150\n        /* \"#utility.yul\":2431:2434   */\n      dup5\n        /* \"#utility.yul\":2423:2429   */\n      dup3\n        /* \"#utility.yul\":2416:2420   */\n      0x20\n        /* \"#utility.yul\":2408:2414   */\n      dup7\n        /* \"#utility.yul\":2404:2421   */\n      add\n        /* \"#utility.yul\":2316:2435   */\n      tag_128\n      jump\t// in\n    tag_150:\n        /* \"#utility.yul\":2307:2435   */\n      swap2\n      pop\n        /* \"#utility.yul\":2190:2441   */\n      pop\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2447:2584   */\n    tag_151:\n      0x00\n        /* \"#utility.yul\":2532:2538   */\n      dup2\n        /* \"#utility.yul\":2526:2539   */\n      mload\n        /* \"#utility.yul\":2517:2539   */\n      swap1\n      pop\n        /* \"#utility.yul\":2548:2578   */\n      tag_153\n        /* \"#utility.yul\":2572:2577   */\n      dup2\n        /* \"#utility.yul\":2548:2578   */\n      tag_154\n      jump\t// in\n    tag_153:\n        /* \"#utility.yul\":2507:2584   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2630:3955   */\n    tag_127:\n      0x00\n        /* \"#utility.yul\":2749:2753   */\n      0xe0\n        /* \"#utility.yul\":2737:2746   */\n      dup3\n        /* \"#utility.yul\":2732:2735   */\n      dup5\n        /* \"#utility.yul\":2728:2747   */\n      sub\n        /* \"#utility.yul\":2724:2754   */\n      slt\n        /* \"#utility.yul\":2721:2723   */\n      iszero\n      tag_156\n      jumpi\n        /* \"#utility.yul\":2767:2768   */\n      0x00\n        /* \"#utility.yul\":2764:2765   */\n      dup1\n        /* \"#utility.yul\":2757:2769   */\n      revert\n        /* \"#utility.yul\":2721:2723   */\n    tag_156:\n        /* \"#utility.yul\":2789:2809   */\n      tag_157\n        /* \"#utility.yul\":2804:2808   */\n      0xe0\n        /* \"#utility.yul\":2789:2809   */\n      tag_121\n      jump\t// in\n    tag_157:\n        /* \"#utility.yul\":2780:2809   */\n      swap1\n      pop\n        /* \"#utility.yul\":2869:2870   */\n      0x00\n        /* \"#utility.yul\":2909:2958   */\n      tag_158\n        /* \"#utility.yul\":2954:2957   */\n      dup5\n        /* \"#utility.yul\":2945:2951   */\n      dup3\n        /* \"#utility.yul\":2934:2943   */\n      dup6\n        /* \"#utility.yul\":2930:2952   */\n      add\n        /* \"#utility.yul\":2909:2958   */\n      tag_159\n      jump\t// in\n    tag_158:\n        /* \"#utility.yul\":2902:2906   */\n      0x00\n        /* \"#utility.yul\":2895:2900   */\n      dup4\n        /* \"#utility.yul\":2891:2907   */\n      add\n        /* \"#utility.yul\":2884:2959   */\n      mstore\n        /* \"#utility.yul\":2819:2970   */\n      pop\n        /* \"#utility.yul\":3027:3029   */\n      0x20\n        /* \"#utility.yul\":3068:3117   */\n      tag_160\n        /* \"#utility.yul\":3113:3116   */\n      dup5\n        /* \"#utility.yul\":3104:3110   */\n      dup3\n        /* \"#utility.yul\":3093:3102   */\n      dup6\n        /* \"#utility.yul\":3089:3111   */\n      add\n        /* \"#utility.yul\":3068:3117   */\n      tag_139\n      jump\t// in\n    tag_160:\n        /* \"#utility.yul\":3061:3065   */\n      0x20\n        /* \"#utility.yul\":3054:3059   */\n      dup4\n        /* \"#utility.yul\":3050:3066   */\n      add\n        /* \"#utility.yul\":3043:3118   */\n      mstore\n        /* \"#utility.yul\":2980:3129   */\n      pop\n        /* \"#utility.yul\":3186:3188   */\n      0x40\n        /* \"#utility.yul\":3227:3276   */\n      tag_161\n        /* \"#utility.yul\":3272:3275   */\n      dup5\n        /* \"#utility.yul\":3263:3269   */\n      dup3\n        /* \"#utility.yul\":3252:3261   */\n      dup6\n        /* \"#utility.yul\":3248:3270   */\n      add\n        /* \"#utility.yul\":3227:3276   */\n      tag_139\n      jump\t// in\n    tag_161:\n        /* \"#utility.yul\":3220:3224   */\n      0x40\n        /* \"#utility.yul\":3213:3218   */\n      dup4\n        /* \"#utility.yul\":3209:3225   */\n      add\n        /* \"#utility.yul\":3202:3277   */\n      mstore\n        /* \"#utility.yul\":3139:3288   */\n      pop\n        /* \"#utility.yul\":3351:3353   */\n      0x60\n        /* \"#utility.yul\":3392:3441   */\n      tag_162\n        /* \"#utility.yul\":3437:3440   */\n      dup5\n        /* \"#utility.yul\":3428:3434   */\n      dup3\n        /* \"#utility.yul\":3417:3426   */\n      dup6\n        /* \"#utility.yul\":3413:3435   */\n      add\n        /* \"#utility.yul\":3392:3441   */\n      tag_139\n      jump\t// in\n    tag_162:\n        /* \"#utility.yul\":3385:3389   */\n      0x60\n        /* \"#utility.yul\":3378:3383   */\n      dup4\n        /* \"#utility.yul\":3374:3390   */\n      add\n        /* \"#utility.yul\":3367:3442   */\n      mstore\n        /* \"#utility.yul\":3298:3453   */\n      pop\n        /* \"#utility.yul\":3523:3526   */\n      0x80\n        /* \"#utility.yul\":3565:3612   */\n      tag_163\n        /* \"#utility.yul\":3608:3611   */\n      dup5\n        /* \"#utility.yul\":3599:3605   */\n      dup3\n        /* \"#utility.yul\":3588:3597   */\n      dup6\n        /* \"#utility.yul\":3584:3606   */\n      add\n        /* \"#utility.yul\":3565:3612   */\n      tag_164\n      jump\t// in\n    tag_163:\n        /* \"#utility.yul\":3558:3562   */\n      0x80\n        /* \"#utility.yul\":3551:3556   */\n      dup4\n        /* \"#utility.yul\":3547:3563   */\n      add\n        /* \"#utility.yul\":3540:3613   */\n      mstore\n        /* \"#utility.yul\":3463:3624   */\n      pop\n        /* \"#utility.yul\":3683:3686   */\n      0xa0\n        /* \"#utility.yul\":3725:3774   */\n      tag_165\n        /* \"#utility.yul\":3770:3773   */\n      dup5\n        /* \"#utility.yul\":3761:3767   */\n      dup3\n        /* \"#utility.yul\":3750:3759   */\n      dup6\n        /* \"#utility.yul\":3746:3768   */\n      add\n        /* \"#utility.yul\":3725:3774   */\n      tag_159\n      jump\t// in\n    tag_165:\n        /* \"#utility.yul\":3718:3722   */\n      0xa0\n        /* \"#utility.yul\":3711:3716   */\n      dup4\n        /* \"#utility.yul\":3707:3723   */\n      add\n        /* \"#utility.yul\":3700:3775   */\n      mstore\n        /* \"#utility.yul\":3634:3786   */\n      pop\n        /* \"#utility.yul\":3845:3848   */\n      0xc0\n        /* \"#utility.yul\":3887:3936   */\n      tag_166\n        /* \"#utility.yul\":3932:3935   */\n      dup5\n        /* \"#utility.yul\":3923:3929   */\n      dup3\n        /* \"#utility.yul\":3912:3921   */\n      dup6\n        /* \"#utility.yul\":3908:3930   */\n      add\n        /* \"#utility.yul\":3887:3936   */\n      tag_159\n      jump\t// in\n    tag_166:\n        /* \"#utility.yul\":3880:3884   */\n      0xc0\n        /* \"#utility.yul\":3873:3878   */\n      dup4\n        /* \"#utility.yul\":3869:3885   */\n      add\n        /* \"#utility.yul\":3862:3937   */\n      mstore\n        /* \"#utility.yul\":3796:3948   */\n      pop\n        /* \"#utility.yul\":2711:3955   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4000:5000   */\n    tag_138:\n      0x00\n        /* \"#utility.yul\":4118:4122   */\n      0xa0\n        /* \"#utility.yul\":4106:4115   */\n      dup3\n        /* \"#utility.yul\":4101:4104   */\n      dup5\n        /* \"#utility.yul\":4097:4116   */\n      sub\n        /* \"#utility.yul\":4093:4123   */\n      slt\n        /* \"#utility.yul\":4090:4092   */\n      iszero\n      tag_168\n      jumpi\n        /* \"#utility.yul\":4136:4137   */\n      0x00\n        /* \"#utility.yul\":4133:4134   */\n      dup1\n        /* \"#utility.yul\":4126:4138   */\n      revert\n        /* \"#utility.yul\":4090:4092   */\n    tag_168:\n        /* \"#utility.yul\":4158:4178   */\n      tag_169\n        /* \"#utility.yul\":4173:4177   */\n      0xa0\n        /* \"#utility.yul\":4158:4178   */\n      tag_121\n      jump\t// in\n    tag_169:\n        /* \"#utility.yul\":4149:4178   */\n      swap1\n      pop\n        /* \"#utility.yul\":4238:4239   */\n      0x00\n        /* \"#utility.yul\":4278:4327   */\n      tag_170\n        /* \"#utility.yul\":4323:4326   */\n      dup5\n        /* \"#utility.yul\":4314:4320   */\n      dup3\n        /* \"#utility.yul\":4303:4312   */\n      dup6\n        /* \"#utility.yul\":4299:4321   */\n      add\n        /* \"#utility.yul\":4278:4327   */\n      tag_159\n      jump\t// in\n    tag_170:\n        /* \"#utility.yul\":4271:4275   */\n      0x00\n        /* \"#utility.yul\":4264:4269   */\n      dup4\n        /* \"#utility.yul\":4260:4276   */\n      add\n        /* \"#utility.yul\":4253:4328   */\n      mstore\n        /* \"#utility.yul\":4188:4339   */\n      pop\n        /* \"#utility.yul\":4396:4398   */\n      0x20\n        /* \"#utility.yul\":4437:4486   */\n      tag_171\n        /* \"#utility.yul\":4482:4485   */\n      dup5\n        /* \"#utility.yul\":4473:4479   */\n      dup3\n        /* \"#utility.yul\":4462:4471   */\n      dup6\n        /* \"#utility.yul\":4458:4480   */\n      add\n        /* \"#utility.yul\":4437:4486   */\n      tag_139\n      jump\t// in\n    tag_171:\n        /* \"#utility.yul\":4430:4434   */\n      0x20\n        /* \"#utility.yul\":4423:4428   */\n      dup4\n        /* \"#utility.yul\":4419:4435   */\n      add\n        /* \"#utility.yul\":4412:4487   */\n      mstore\n        /* \"#utility.yul\":4349:4498   */\n      pop\n        /* \"#utility.yul\":4555:4557   */\n      0x40\n        /* \"#utility.yul\":4596:4645   */\n      tag_172\n        /* \"#utility.yul\":4641:4644   */\n      dup5\n        /* \"#utility.yul\":4632:4638   */\n      dup3\n        /* \"#utility.yul\":4621:4630   */\n      dup6\n        /* \"#utility.yul\":4617:4639   */\n      add\n        /* \"#utility.yul\":4596:4645   */\n      tag_139\n      jump\t// in\n    tag_172:\n        /* \"#utility.yul\":4589:4593   */\n      0x40\n        /* \"#utility.yul\":4582:4587   */\n      dup4\n        /* \"#utility.yul\":4578:4594   */\n      add\n        /* \"#utility.yul\":4571:4646   */\n      mstore\n        /* \"#utility.yul\":4508:4657   */\n      pop\n        /* \"#utility.yul\":4720:4722   */\n      0x60\n        /* \"#utility.yul\":4761:4810   */\n      tag_173\n        /* \"#utility.yul\":4806:4809   */\n      dup5\n        /* \"#utility.yul\":4797:4803   */\n      dup3\n        /* \"#utility.yul\":4786:4795   */\n      dup6\n        /* \"#utility.yul\":4782:4804   */\n      add\n        /* \"#utility.yul\":4761:4810   */\n      tag_139\n      jump\t// in\n    tag_173:\n        /* \"#utility.yul\":4754:4758   */\n      0x60\n        /* \"#utility.yul\":4747:4752   */\n      dup4\n        /* \"#utility.yul\":4743:4759   */\n      add\n        /* \"#utility.yul\":4736:4811   */\n      mstore\n        /* \"#utility.yul\":4667:4822   */\n      pop\n        /* \"#utility.yul\":4892:4895   */\n      0x80\n        /* \"#utility.yul\":4934:4981   */\n      tag_174\n        /* \"#utility.yul\":4977:4980   */\n      dup5\n        /* \"#utility.yul\":4968:4974   */\n      dup3\n        /* \"#utility.yul\":4957:4966   */\n      dup6\n        /* \"#utility.yul\":4953:4975   */\n      add\n        /* \"#utility.yul\":4934:4981   */\n      tag_164\n      jump\t// in\n    tag_174:\n        /* \"#utility.yul\":4927:4931   */\n      0x80\n        /* \"#utility.yul\":4920:4925   */\n      dup4\n        /* \"#utility.yul\":4916:4932   */\n      add\n        /* \"#utility.yul\":4909:4982   */\n      mstore\n        /* \"#utility.yul\":4832:4993   */\n      pop\n        /* \"#utility.yul\":4080:5000   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5006:5147   */\n    tag_175:\n      0x00\n        /* \"#utility.yul\":5093:5099   */\n      dup2\n        /* \"#utility.yul\":5087:5100   */\n      mload\n        /* \"#utility.yul\":5078:5100   */\n      swap1\n      pop\n        /* \"#utility.yul\":5109:5141   */\n      tag_177\n        /* \"#utility.yul\":5135:5140   */\n      dup2\n        /* \"#utility.yul\":5109:5141   */\n      tag_178\n      jump\t// in\n    tag_177:\n        /* \"#utility.yul\":5068:5147   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5153:5292   */\n    tag_159:\n      0x00\n        /* \"#utility.yul\":5237:5243   */\n      dup2\n        /* \"#utility.yul\":5224:5244   */\n      calldataload\n        /* \"#utility.yul\":5215:5244   */\n      swap1\n      pop\n        /* \"#utility.yul\":5253:5286   */\n      tag_180\n        /* \"#utility.yul\":5280:5285   */\n      dup2\n        /* \"#utility.yul\":5253:5286   */\n      tag_181\n      jump\t// in\n    tag_180:\n        /* \"#utility.yul\":5205:5292   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5298:5441   */\n    tag_182:\n      0x00\n        /* \"#utility.yul\":5386:5392   */\n      dup2\n        /* \"#utility.yul\":5380:5393   */\n      mload\n        /* \"#utility.yul\":5371:5393   */\n      swap1\n      pop\n        /* \"#utility.yul\":5402:5435   */\n      tag_184\n        /* \"#utility.yul\":5429:5434   */\n      dup2\n        /* \"#utility.yul\":5402:5435   */\n      tag_181\n      jump\t// in\n    tag_184:\n        /* \"#utility.yul\":5361:5441   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5447:5582   */\n    tag_164:\n      0x00\n        /* \"#utility.yul\":5529:5535   */\n      dup2\n        /* \"#utility.yul\":5516:5536   */\n      calldataload\n        /* \"#utility.yul\":5507:5536   */\n      swap1\n      pop\n        /* \"#utility.yul\":5545:5576   */\n      tag_186\n        /* \"#utility.yul\":5570:5575   */\n      dup2\n        /* \"#utility.yul\":5545:5576   */\n      tag_187\n      jump\t// in\n    tag_186:\n        /* \"#utility.yul\":5497:5582   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5588:6428   */\n    tag_14:\n      0x00\n      dup1\n      0x00\n      dup1\n      0x00\n        /* \"#utility.yul\":5762:5765   */\n      0xa0\n        /* \"#utility.yul\":5750:5759   */\n      dup7\n        /* \"#utility.yul\":5741:5748   */\n      dup9\n        /* \"#utility.yul\":5737:5760   */\n      sub\n        /* \"#utility.yul\":5733:5766   */\n      slt\n        /* \"#utility.yul\":5730:5732   */\n      iszero\n      tag_189\n      jumpi\n        /* \"#utility.yul\":5779:5780   */\n      0x00\n        /* \"#utility.yul\":5776:5777   */\n      dup1\n        /* \"#utility.yul\":5769:5781   */\n      revert\n        /* \"#utility.yul\":5730:5732   */\n    tag_189:\n        /* \"#utility.yul\":5822:5823   */\n      0x00\n        /* \"#utility.yul\":5847:5900   */\n      tag_190\n        /* \"#utility.yul\":5892:5899   */\n      dup9\n        /* \"#utility.yul\":5883:5889   */\n      dup3\n        /* \"#utility.yul\":5872:5881   */\n      dup10\n        /* \"#utility.yul\":5868:5890   */\n      add\n        /* \"#utility.yul\":5847:5900   */\n      tag_139\n      jump\t// in\n    tag_190:\n        /* \"#utility.yul\":5837:5900   */\n      swap6\n      pop\n        /* \"#utility.yul\":5793:5910   */\n      pop\n        /* \"#utility.yul\":5949:5951   */\n      0x20\n        /* \"#utility.yul\":5975:6028   */\n      tag_191\n        /* \"#utility.yul\":6020:6027   */\n      dup9\n        /* \"#utility.yul\":6011:6017   */\n      dup3\n        /* \"#utility.yul\":6000:6009   */\n      dup10\n        /* \"#utility.yul\":5996:6018   */\n      add\n        /* \"#utility.yul\":5975:6028   */\n      tag_139\n      jump\t// in\n    tag_191:\n        /* \"#utility.yul\":5965:6028   */\n      swap5\n      pop\n        /* \"#utility.yul\":5920:6038   */\n      pop\n        /* \"#utility.yul\":6077:6079   */\n      0x40\n        /* \"#utility.yul\":6103:6156   */\n      tag_192\n        /* \"#utility.yul\":6148:6155   */\n      dup9\n        /* \"#utility.yul\":6139:6145   */\n      dup3\n        /* \"#utility.yul\":6128:6137   */\n      dup10\n        /* \"#utility.yul\":6124:6146   */\n      add\n        /* \"#utility.yul\":6103:6156   */\n      tag_139\n      jump\t// in\n    tag_192:\n        /* \"#utility.yul\":6093:6156   */\n      swap4\n      pop\n        /* \"#utility.yul\":6048:6166   */\n      pop\n        /* \"#utility.yul\":6205:6207   */\n      0x60\n        /* \"#utility.yul\":6231:6284   */\n      tag_193\n        /* \"#utility.yul\":6276:6283   */\n      dup9\n        /* \"#utility.yul\":6267:6273   */\n      dup3\n        /* \"#utility.yul\":6256:6265   */\n      dup10\n        /* \"#utility.yul\":6252:6274   */\n      add\n        /* \"#utility.yul\":6231:6284   */\n      tag_159\n      jump\t// in\n    tag_193:\n        /* \"#utility.yul\":6221:6284   */\n      swap3\n      pop\n        /* \"#utility.yul\":6176:6294   */\n      pop\n        /* \"#utility.yul\":6333:6336   */\n      0x80\n        /* \"#utility.yul\":6360:6411   */\n      tag_194\n        /* \"#utility.yul\":6403:6410   */\n      dup9\n        /* \"#utility.yul\":6394:6400   */\n      dup3\n        /* \"#utility.yul\":6383:6392   */\n      dup10\n        /* \"#utility.yul\":6379:6401   */\n      add\n        /* \"#utility.yul\":6360:6411   */\n      tag_164\n      jump\t// in\n    tag_194:\n        /* \"#utility.yul\":6350:6411   */\n      swap2\n      pop\n        /* \"#utility.yul\":6304:6421   */\n      pop\n        /* \"#utility.yul\":5720:6428   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6434:6891   */\n    tag_8:\n      0x00\n        /* \"#utility.yul\":6593:6595   */\n      0x20\n        /* \"#utility.yul\":6581:6590   */\n      dup3\n        /* \"#utility.yul\":6572:6579   */\n      dup5\n        /* \"#utility.yul\":6568:6591   */\n      sub\n        /* \"#utility.yul\":6564:6596   */\n      slt\n        /* \"#utility.yul\":6561:6563   */\n      iszero\n      tag_196\n      jumpi\n        /* \"#utility.yul\":6609:6610   */\n      0x00\n        /* \"#utility.yul\":6606:6607   */\n      dup1\n        /* \"#utility.yul\":6599:6611   */\n      revert\n        /* \"#utility.yul\":6561:6563   */\n    tag_196:\n        /* \"#utility.yul\":6680:6681   */\n      0x00\n        /* \"#utility.yul\":6669:6678   */\n      dup3\n        /* \"#utility.yul\":6665:6682   */\n      add\n        /* \"#utility.yul\":6652:6683   */\n      calldataload\n        /* \"#utility.yul\":6710:6728   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":6702:6708   */\n      dup2\n        /* \"#utility.yul\":6699:6729   */\n      gt\n        /* \"#utility.yul\":6696:6698   */\n      iszero\n      tag_197\n      jumpi\n        /* \"#utility.yul\":6742:6743   */\n      0x00\n        /* \"#utility.yul\":6739:6740   */\n      dup1\n        /* \"#utility.yul\":6732:6744   */\n      revert\n        /* \"#utility.yul\":6696:6698   */\n    tag_197:\n        /* \"#utility.yul\":6770:6874   */\n      tag_198\n        /* \"#utility.yul\":6866:6873   */\n      dup5\n        /* \"#utility.yul\":6857:6863   */\n      dup3\n        /* \"#utility.yul\":6846:6855   */\n      dup6\n        /* \"#utility.yul\":6842:6864   */\n      add\n        /* \"#utility.yul\":6770:6874   */\n      tag_143\n      jump\t// in\n    tag_198:\n        /* \"#utility.yul\":6760:6874   */\n      swap2\n      pop\n        /* \"#utility.yul\":6623:6884   */\n      pop\n        /* \"#utility.yul\":6551:6891   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6897:7352   */\n    tag_20:\n      0x00\n        /* \"#utility.yul\":7055:7057   */\n      0x20\n        /* \"#utility.yul\":7043:7052   */\n      dup3\n        /* \"#utility.yul\":7034:7041   */\n      dup5\n        /* \"#utility.yul\":7030:7053   */\n      sub\n        /* \"#utility.yul\":7026:7058   */\n      slt\n        /* \"#utility.yul\":7023:7025   */\n      iszero\n      tag_200\n      jumpi\n        /* \"#utility.yul\":7071:7072   */\n      0x00\n        /* \"#utility.yul\":7068:7069   */\n      dup1\n        /* \"#utility.yul\":7061:7073   */\n      revert\n        /* \"#utility.yul\":7023:7025   */\n    tag_200:\n        /* \"#utility.yul\":7142:7143   */\n      0x00\n        /* \"#utility.yul\":7131:7140   */\n      dup3\n        /* \"#utility.yul\":7127:7144   */\n      add\n        /* \"#utility.yul\":7114:7145   */\n      calldataload\n        /* \"#utility.yul\":7172:7190   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7164:7170   */\n      dup2\n        /* \"#utility.yul\":7161:7191   */\n      gt\n        /* \"#utility.yul\":7158:7160   */\n      iszero\n      tag_201\n      jumpi\n        /* \"#utility.yul\":7204:7205   */\n      0x00\n        /* \"#utility.yul\":7201:7202   */\n      dup1\n        /* \"#utility.yul\":7194:7206   */\n      revert\n        /* \"#utility.yul\":7158:7160   */\n    tag_201:\n        /* \"#utility.yul\":7232:7335   */\n      tag_202\n        /* \"#utility.yul\":7327:7334   */\n      dup5\n        /* \"#utility.yul\":7318:7324   */\n      dup3\n        /* \"#utility.yul\":7307:7316   */\n      dup6\n        /* \"#utility.yul\":7303:7325   */\n      add\n        /* \"#utility.yul\":7232:7335   */\n      tag_147\n      jump\t// in\n    tag_202:\n        /* \"#utility.yul\":7222:7335   */\n      swap2\n      pop\n        /* \"#utility.yul\":7085:7345   */\n      pop\n        /* \"#utility.yul\":7013:7352   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7358:7636   */\n    tag_46:\n      0x00\n        /* \"#utility.yul\":7474:7476   */\n      0x20\n        /* \"#utility.yul\":7462:7471   */\n      dup3\n        /* \"#utility.yul\":7453:7460   */\n      dup5\n        /* \"#utility.yul\":7449:7472   */\n      sub\n        /* \"#utility.yul\":7445:7477   */\n      slt\n        /* \"#utility.yul\":7442:7444   */\n      iszero\n      tag_204\n      jumpi\n        /* \"#utility.yul\":7490:7491   */\n      0x00\n        /* \"#utility.yul\":7487:7488   */\n      dup1\n        /* \"#utility.yul\":7480:7492   */\n      revert\n        /* \"#utility.yul\":7442:7444   */\n    tag_204:\n        /* \"#utility.yul\":7533:7534   */\n      0x00\n        /* \"#utility.yul\":7558:7619   */\n      tag_205\n        /* \"#utility.yul\":7611:7618   */\n      dup5\n        /* \"#utility.yul\":7602:7608   */\n      dup3\n        /* \"#utility.yul\":7591:7600   */\n      dup6\n        /* \"#utility.yul\":7587:7609   */\n      add\n        /* \"#utility.yul\":7558:7619   */\n      tag_151\n      jump\t// in\n    tag_205:\n        /* \"#utility.yul\":7548:7619   */\n      swap2\n      pop\n        /* \"#utility.yul\":7504:7629   */\n      pop\n        /* \"#utility.yul\":7432:7636   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7642:7926   */\n    tag_71:\n      0x00\n        /* \"#utility.yul\":7761:7763   */\n      0x20\n        /* \"#utility.yul\":7749:7758   */\n      dup3\n        /* \"#utility.yul\":7740:7747   */\n      dup5\n        /* \"#utility.yul\":7736:7759   */\n      sub\n        /* \"#utility.yul\":7732:7764   */\n      slt\n        /* \"#utility.yul\":7729:7731   */\n      iszero\n      tag_207\n      jumpi\n        /* \"#utility.yul\":7777:7778   */\n      0x00\n        /* \"#utility.yul\":7774:7775   */\n      dup1\n        /* \"#utility.yul\":7767:7779   */\n      revert\n        /* \"#utility.yul\":7729:7731   */\n    tag_207:\n        /* \"#utility.yul\":7820:7821   */\n      0x00\n        /* \"#utility.yul\":7845:7909   */\n      tag_208\n        /* \"#utility.yul\":7901:7908   */\n      dup5\n        /* \"#utility.yul\":7892:7898   */\n      dup3\n        /* \"#utility.yul\":7881:7890   */\n      dup6\n        /* \"#utility.yul\":7877:7899   */\n      add\n        /* \"#utility.yul\":7845:7909   */\n      tag_182\n      jump\t// in\n    tag_208:\n        /* \"#utility.yul\":7835:7909   */\n      swap2\n      pop\n        /* \"#utility.yul\":7791:7919   */\n      pop\n        /* \"#utility.yul\":7719:7926   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7932:8370   */\n    tag_79:\n      0x00\n      dup1\n        /* \"#utility.yul\":8067:8069   */\n      0x40\n        /* \"#utility.yul\":8055:8064   */\n      dup4\n        /* \"#utility.yul\":8046:8053   */\n      dup6\n        /* \"#utility.yul\":8042:8065   */\n      sub\n        /* \"#utility.yul\":8038:8070   */\n      slt\n        /* \"#utility.yul\":8035:8037   */\n      iszero\n      tag_210\n      jumpi\n        /* \"#utility.yul\":8083:8084   */\n      0x00\n        /* \"#utility.yul\":8080:8081   */\n      dup1\n        /* \"#utility.yul\":8073:8085   */\n      revert\n        /* \"#utility.yul\":8035:8037   */\n    tag_210:\n        /* \"#utility.yul\":8126:8127   */\n      0x00\n        /* \"#utility.yul\":8151:8215   */\n      tag_211\n        /* \"#utility.yul\":8207:8214   */\n      dup6\n        /* \"#utility.yul\":8198:8204   */\n      dup3\n        /* \"#utility.yul\":8187:8196   */\n      dup7\n        /* \"#utility.yul\":8183:8205   */\n      add\n        /* \"#utility.yul\":8151:8215   */\n      tag_182\n      jump\t// in\n    tag_211:\n        /* \"#utility.yul\":8141:8215   */\n      swap3\n      pop\n        /* \"#utility.yul\":8097:8225   */\n      pop\n        /* \"#utility.yul\":8264:8266   */\n      0x20\n        /* \"#utility.yul\":8290:8353   */\n      tag_212\n        /* \"#utility.yul\":8345:8352   */\n      dup6\n        /* \"#utility.yul\":8336:8342   */\n      dup3\n        /* \"#utility.yul\":8325:8334   */\n      dup7\n        /* \"#utility.yul\":8321:8343   */\n      add\n        /* \"#utility.yul\":8290:8353   */\n      tag_175\n      jump\t// in\n    tag_212:\n        /* \"#utility.yul\":8280:8353   */\n      swap2\n      pop\n        /* \"#utility.yul\":8235:8363   */\n      pop\n        /* \"#utility.yul\":8025:8370   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8376:8663   */\n    tag_213:\n      0x00\n        /* \"#utility.yul\":8520:8620   */\n      tag_215\n        /* \"#utility.yul\":8616:8619   */\n      dup4\n        /* \"#utility.yul\":8608:8614   */\n      dup4\n        /* \"#utility.yul\":8520:8620   */\n      tag_216\n      jump\t// in\n    tag_215:\n        /* \"#utility.yul\":8652:8656   */\n      0x40\n        /* \"#utility.yul\":8647:8650   */\n      dup4\n        /* \"#utility.yul\":8643:8657   */\n      add\n        /* \"#utility.yul\":8629:8657   */\n      swap1\n      pop\n        /* \"#utility.yul\":8510:8663   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8669:8952   */\n    tag_217:\n      0x00\n        /* \"#utility.yul\":8811:8909   */\n      tag_219\n        /* \"#utility.yul\":8905:8908   */\n      dup4\n        /* \"#utility.yul\":8897:8903   */\n      dup4\n        /* \"#utility.yul\":8811:8909   */\n      tag_220\n      jump\t// in\n    tag_219:\n        /* \"#utility.yul\":8941:8945   */\n      0x60\n        /* \"#utility.yul\":8936:8939   */\n      dup4\n        /* \"#utility.yul\":8932:8946   */\n      add\n        /* \"#utility.yul\":8918:8946   */\n      swap1\n      pop\n        /* \"#utility.yul\":8801:8952   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8958:9084   */\n    tag_221:\n        /* \"#utility.yul\":9053:9077   */\n      tag_223\n        /* \"#utility.yul\":9071:9076   */\n      dup2\n        /* \"#utility.yul\":9053:9077   */\n      tag_224\n      jump\t// in\n    tag_223:\n        /* \"#utility.yul\":9048:9051   */\n      dup3\n        /* \"#utility.yul\":9041:9078   */\n      mstore\n        /* \"#utility.yul\":9031:9084   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9172:10120   */\n    tag_225:\n      0x00\n        /* \"#utility.yul\":9374:9455   */\n      tag_227\n        /* \"#utility.yul\":9449:9454   */\n      dup3\n        /* \"#utility.yul\":9374:9455   */\n      tag_228\n      jump\t// in\n    tag_227:\n        /* \"#utility.yul\":9471:9584   */\n      tag_229\n        /* \"#utility.yul\":9577:9583   */\n      dup2\n        /* \"#utility.yul\":9572:9575   */\n      dup6\n        /* \"#utility.yul\":9471:9584   */\n      tag_230\n      jump\t// in\n    tag_229:\n        /* \"#utility.yul\":9464:9584   */\n      swap4\n      pop\n        /* \"#utility.yul\":9608:9691   */\n      tag_231\n        /* \"#utility.yul\":9685:9690   */\n      dup4\n        /* \"#utility.yul\":9608:9691   */\n      tag_232\n      jump\t// in\n    tag_231:\n        /* \"#utility.yul\":9714:9721   */\n      dup1\n        /* \"#utility.yul\":9745:9746   */\n      0x00\n        /* \"#utility.yul\":9730:10095   */\n    tag_233:\n        /* \"#utility.yul\":9755:9761   */\n      dup4\n        /* \"#utility.yul\":9752:9753   */\n      dup2\n        /* \"#utility.yul\":9749:9762   */\n      lt\n        /* \"#utility.yul\":9730:10095   */\n      iszero\n      tag_235\n      jumpi\n        /* \"#utility.yul\":9831:9837   */\n      dup2\n        /* \"#utility.yul\":9825:9838   */\n      mload\n        /* \"#utility.yul\":9858:9975   */\n      tag_236\n        /* \"#utility.yul\":9971:9974   */\n      dup9\n        /* \"#utility.yul\":9956:9969   */\n      dup3\n        /* \"#utility.yul\":9858:9975   */\n      tag_213\n      jump\t// in\n    tag_236:\n        /* \"#utility.yul\":9851:9975   */\n      swap8\n      pop\n        /* \"#utility.yul\":9998:10085   */\n      tag_237\n        /* \"#utility.yul\":10078:10084   */\n      dup4\n        /* \"#utility.yul\":9998:10085   */\n      tag_238\n      jump\t// in\n    tag_237:\n        /* \"#utility.yul\":9988:10085   */\n      swap3\n      pop\n        /* \"#utility.yul\":9790:10095   */\n      pop\n        /* \"#utility.yul\":9777:9778   */\n      0x01\n        /* \"#utility.yul\":9774:9775   */\n      dup2\n        /* \"#utility.yul\":9770:9779   */\n      add\n        /* \"#utility.yul\":9765:9779   */\n      swap1\n      pop\n        /* \"#utility.yul\":9730:10095   */\n      jump(tag_233)\n    tag_235:\n        /* \"#utility.yul\":9734:9748   */\n      pop\n        /* \"#utility.yul\":10111:10114   */\n      dup6\n        /* \"#utility.yul\":10104:10114   */\n      swap4\n      pop\n        /* \"#utility.yul\":9350:10120   */\n      pop\n      pop\n      pop\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10206:11146   */\n    tag_239:\n      0x00\n        /* \"#utility.yul\":10406:10486   */\n      tag_241\n        /* \"#utility.yul\":10480:10485   */\n      dup3\n        /* \"#utility.yul\":10406:10486   */\n      tag_242\n      jump\t// in\n    tag_241:\n        /* \"#utility.yul\":10502:10614   */\n      tag_243\n        /* \"#utility.yul\":10607:10613   */\n      dup2\n        /* \"#utility.yul\":10602:10605   */\n      dup6\n        /* \"#utility.yul\":10502:10614   */\n      tag_244\n      jump\t// in\n    tag_243:\n        /* \"#utility.yul\":10495:10614   */\n      swap4\n      pop\n        /* \"#utility.yul\":10638:10720   */\n      tag_245\n        /* \"#utility.yul\":10714:10719   */\n      dup4\n        /* \"#utility.yul\":10638:10720   */\n      tag_246\n      jump\t// in\n    tag_245:\n        /* \"#utility.yul\":10743:10750   */\n      dup1\n        /* \"#utility.yul\":10774:10775   */\n      0x00\n        /* \"#utility.yul\":10759:11121   */\n    tag_247:\n        /* \"#utility.yul\":10784:10790   */\n      dup4\n        /* \"#utility.yul\":10781:10782   */\n      dup2\n        /* \"#utility.yul\":10778:10791   */\n      lt\n        /* \"#utility.yul\":10759:11121   */\n      iszero\n      tag_249\n      jumpi\n        /* \"#utility.yul\":10860:10866   */\n      dup2\n        /* \"#utility.yul\":10854:10867   */\n      mload\n        /* \"#utility.yul\":10887:11002   */\n      tag_250\n        /* \"#utility.yul\":10998:11001   */\n      dup9\n        /* \"#utility.yul\":10983:10996   */\n      dup3\n        /* \"#utility.yul\":10887:11002   */\n      tag_217\n      jump\t// in\n    tag_250:\n        /* \"#utility.yul\":10880:11002   */\n      swap8\n      pop\n        /* \"#utility.yul\":11025:11111   */\n      tag_251\n        /* \"#utility.yul\":11104:11110   */\n      dup4\n        /* \"#utility.yul\":11025:11111   */\n      tag_252\n      jump\t// in\n    tag_251:\n        /* \"#utility.yul\":11015:11111   */\n      swap3\n      pop\n        /* \"#utility.yul\":10819:11121   */\n      pop\n        /* \"#utility.yul\":10806:10807   */\n      0x01\n        /* \"#utility.yul\":10803:10804   */\n      dup2\n        /* \"#utility.yul\":10799:10808   */\n      add\n        /* \"#utility.yul\":10794:10808   */\n      swap1\n      pop\n        /* \"#utility.yul\":10759:11121   */\n      jump(tag_247)\n    tag_249:\n        /* \"#utility.yul\":10763:10777   */\n      pop\n        /* \"#utility.yul\":11137:11140   */\n      dup6\n        /* \"#utility.yul\":11130:11140   */\n      swap4\n      pop\n        /* \"#utility.yul\":10382:11146   */\n      pop\n      pop\n      pop\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11152:11251   */\n    tag_253:\n        /* \"#utility.yul\":11223:11244   */\n      tag_255\n        /* \"#utility.yul\":11238:11243   */\n      dup2\n        /* \"#utility.yul\":11223:11244   */\n      tag_256\n      jump\t// in\n    tag_255:\n        /* \"#utility.yul\":11218:11221   */\n      dup3\n        /* \"#utility.yul\":11211:11245   */\n      mstore\n        /* \"#utility.yul\":11201:11251   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11335:11833   */\n    tag_216:\n        /* \"#utility.yul\":11476:11480   */\n      0x40\n        /* \"#utility.yul\":11471:11474   */\n      dup3\n        /* \"#utility.yul\":11467:11481   */\n      add\n        /* \"#utility.yul\":11564:11568   */\n      0x00\n        /* \"#utility.yul\":11557:11562   */\n      dup3\n        /* \"#utility.yul\":11553:11569   */\n      add\n        /* \"#utility.yul\":11547:11570   */\n      mload\n        /* \"#utility.yul\":11583:11646   */\n      tag_258\n        /* \"#utility.yul\":11640:11644   */\n      0x00\n        /* \"#utility.yul\":11635:11638   */\n      dup6\n        /* \"#utility.yul\":11631:11645   */\n      add\n        /* \"#utility.yul\":11617:11629   */\n      dup3\n        /* \"#utility.yul\":11583:11646   */\n      tag_259\n      jump\t// in\n    tag_258:\n        /* \"#utility.yul\":11491:11656   */\n      pop\n        /* \"#utility.yul\":11740:11744   */\n      0x20\n        /* \"#utility.yul\":11733:11738   */\n      dup3\n        /* \"#utility.yul\":11729:11745   */\n      add\n        /* \"#utility.yul\":11723:11746   */\n      mload\n        /* \"#utility.yul\":11759:11816   */\n      tag_260\n        /* \"#utility.yul\":11810:11814   */\n      0x20\n        /* \"#utility.yul\":11805:11808   */\n      dup6\n        /* \"#utility.yul\":11801:11815   */\n      add\n        /* \"#utility.yul\":11787:11799   */\n      dup3\n        /* \"#utility.yul\":11759:11816   */\n      tag_253\n      jump\t// in\n    tag_260:\n        /* \"#utility.yul\":11666:11826   */\n      pop\n        /* \"#utility.yul\":11445:11833   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11915:12587   */\n    tag_220:\n        /* \"#utility.yul\":12054:12058   */\n      0x60\n        /* \"#utility.yul\":12049:12052   */\n      dup3\n        /* \"#utility.yul\":12045:12059   */\n      add\n        /* \"#utility.yul\":12142:12146   */\n      0x00\n        /* \"#utility.yul\":12135:12140   */\n      dup3\n        /* \"#utility.yul\":12131:12147   */\n      add\n        /* \"#utility.yul\":12125:12148   */\n      mload\n        /* \"#utility.yul\":12161:12224   */\n      tag_262\n        /* \"#utility.yul\":12218:12222   */\n      0x00\n        /* \"#utility.yul\":12213:12216   */\n      dup6\n        /* \"#utility.yul\":12209:12223   */\n      add\n        /* \"#utility.yul\":12195:12207   */\n      dup3\n        /* \"#utility.yul\":12161:12224   */\n      tag_259\n      jump\t// in\n    tag_262:\n        /* \"#utility.yul\":12069:12234   */\n      pop\n        /* \"#utility.yul\":12317:12321   */\n      0x20\n        /* \"#utility.yul\":12310:12315   */\n      dup3\n        /* \"#utility.yul\":12306:12322   */\n      add\n        /* \"#utility.yul\":12300:12323   */\n      mload\n        /* \"#utility.yul\":12336:12399   */\n      tag_263\n        /* \"#utility.yul\":12393:12397   */\n      0x20\n        /* \"#utility.yul\":12388:12391   */\n      dup6\n        /* \"#utility.yul\":12384:12398   */\n      add\n        /* \"#utility.yul\":12370:12382   */\n      dup3\n        /* \"#utility.yul\":12336:12399   */\n      tag_259\n      jump\t// in\n    tag_263:\n        /* \"#utility.yul\":12244:12409   */\n      pop\n        /* \"#utility.yul\":12490:12494   */\n      0x40\n        /* \"#utility.yul\":12483:12488   */\n      dup3\n        /* \"#utility.yul\":12479:12495   */\n      add\n        /* \"#utility.yul\":12473:12496   */\n      mload\n        /* \"#utility.yul\":12509:12570   */\n      tag_264\n        /* \"#utility.yul\":12564:12568   */\n      0x40\n        /* \"#utility.yul\":12559:12562   */\n      dup6\n        /* \"#utility.yul\":12555:12569   */\n      add\n        /* \"#utility.yul\":12541:12553   */\n      dup3\n        /* \"#utility.yul\":12509:12570   */\n      tag_265\n      jump\t// in\n    tag_264:\n        /* \"#utility.yul\":12419:12580   */\n      pop\n        /* \"#utility.yul\":12023:12587   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12593:12698   */\n    tag_265:\n        /* \"#utility.yul\":12668:12691   */\n      tag_267\n        /* \"#utility.yul\":12685:12690   */\n      dup2\n        /* \"#utility.yul\":12668:12691   */\n      tag_268\n      jump\t// in\n    tag_267:\n        /* \"#utility.yul\":12663:12666   */\n      dup3\n        /* \"#utility.yul\":12656:12692   */\n      mstore\n        /* \"#utility.yul\":12646:12698   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12704:12819   */\n    tag_269:\n        /* \"#utility.yul\":12789:12812   */\n      tag_271\n        /* \"#utility.yul\":12806:12811   */\n      dup2\n        /* \"#utility.yul\":12789:12812   */\n      tag_268\n      jump\t// in\n    tag_271:\n        /* \"#utility.yul\":12784:12787   */\n      dup3\n        /* \"#utility.yul\":12777:12813   */\n      mstore\n        /* \"#utility.yul\":12767:12819   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12825:12933   */\n    tag_259:\n        /* \"#utility.yul\":12902:12926   */\n      tag_273\n        /* \"#utility.yul\":12920:12925   */\n      dup2\n        /* \"#utility.yul\":12902:12926   */\n      tag_274\n      jump\t// in\n    tag_273:\n        /* \"#utility.yul\":12897:12900   */\n      dup3\n        /* \"#utility.yul\":12890:12927   */\n      mstore\n        /* \"#utility.yul\":12880:12933   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12939:13057   */\n    tag_275:\n        /* \"#utility.yul\":13026:13050   */\n      tag_277\n        /* \"#utility.yul\":13044:13049   */\n      dup2\n        /* \"#utility.yul\":13026:13050   */\n      tag_274\n      jump\t// in\n    tag_277:\n        /* \"#utility.yul\":13021:13024   */\n      dup3\n        /* \"#utility.yul\":13014:13051   */\n      mstore\n        /* \"#utility.yul\":13004:13057   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13063:13189   */\n    tag_278:\n        /* \"#utility.yul\":13158:13182   */\n      tag_280\n        /* \"#utility.yul\":13176:13181   */\n      dup2\n        /* \"#utility.yul\":13158:13182   */\n      tag_274\n      jump\t// in\n    tag_280:\n        /* \"#utility.yul\":13153:13156   */\n      dup3\n        /* \"#utility.yul\":13146:13183   */\n      mstore\n        /* \"#utility.yul\":13136:13189   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13195:13669   */\n    tag_95:\n      0x00\n        /* \"#utility.yul\":13390:13392   */\n      0x60\n        /* \"#utility.yul\":13379:13388   */\n      dup3\n        /* \"#utility.yul\":13375:13393   */\n      add\n        /* \"#utility.yul\":13367:13393   */\n      swap1\n      pop\n        /* \"#utility.yul\":13403:13482   */\n      tag_282\n        /* \"#utility.yul\":13479:13480   */\n      0x00\n        /* \"#utility.yul\":13468:13477   */\n      dup4\n        /* \"#utility.yul\":13464:13481   */\n      add\n        /* \"#utility.yul\":13455:13461   */\n      dup7\n        /* \"#utility.yul\":13403:13482   */\n      tag_221\n      jump\t// in\n    tag_282:\n        /* \"#utility.yul\":13492:13572   */\n      tag_283\n        /* \"#utility.yul\":13568:13570   */\n      0x20\n        /* \"#utility.yul\":13557:13566   */\n      dup4\n        /* \"#utility.yul\":13553:13571   */\n      add\n        /* \"#utility.yul\":13544:13550   */\n      dup6\n        /* \"#utility.yul\":13492:13572   */\n      tag_221\n      jump\t// in\n    tag_283:\n        /* \"#utility.yul\":13582:13662   */\n      tag_284\n        /* \"#utility.yul\":13658:13660   */\n      0x40\n        /* \"#utility.yul\":13647:13656   */\n      dup4\n        /* \"#utility.yul\":13643:13661   */\n      add\n        /* \"#utility.yul\":13634:13640   */\n      dup5\n        /* \"#utility.yul\":13582:13662   */\n      tag_221\n      jump\t// in\n    tag_284:\n        /* \"#utility.yul\":13357:13669   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13675:14268   */\n    tag_66:\n      0x00\n        /* \"#utility.yul\":13898:13901   */\n      0x80\n        /* \"#utility.yul\":13887:13896   */\n      dup3\n        /* \"#utility.yul\":13883:13902   */\n      add\n        /* \"#utility.yul\":13875:13902   */\n      swap1\n      pop\n        /* \"#utility.yul\":13912:13991   */\n      tag_286\n        /* \"#utility.yul\":13988:13989   */\n      0x00\n        /* \"#utility.yul\":13977:13986   */\n      dup4\n        /* \"#utility.yul\":13973:13990   */\n      add\n        /* \"#utility.yul\":13964:13970   */\n      dup8\n        /* \"#utility.yul\":13912:13991   */\n      tag_221\n      jump\t// in\n    tag_286:\n        /* \"#utility.yul\":14001:14081   */\n      tag_287\n        /* \"#utility.yul\":14077:14079   */\n      0x20\n        /* \"#utility.yul\":14066:14075   */\n      dup4\n        /* \"#utility.yul\":14062:14080   */\n      add\n        /* \"#utility.yul\":14053:14059   */\n      dup7\n        /* \"#utility.yul\":14001:14081   */\n      tag_221\n      jump\t// in\n    tag_287:\n        /* \"#utility.yul\":14091:14171   */\n      tag_288\n        /* \"#utility.yul\":14167:14169   */\n      0x40\n        /* \"#utility.yul\":14156:14165   */\n      dup4\n        /* \"#utility.yul\":14152:14170   */\n      add\n        /* \"#utility.yul\":14143:14149   */\n      dup6\n        /* \"#utility.yul\":14091:14171   */\n      tag_221\n      jump\t// in\n    tag_288:\n        /* \"#utility.yul\":14181:14261   */\n      tag_289\n        /* \"#utility.yul\":14257:14259   */\n      0x60\n        /* \"#utility.yul\":14246:14255   */\n      dup4\n        /* \"#utility.yul\":14242:14260   */\n      add\n        /* \"#utility.yul\":14233:14239   */\n      dup5\n        /* \"#utility.yul\":14181:14261   */\n      tag_278\n      jump\t// in\n    tag_289:\n        /* \"#utility.yul\":13865:14268   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14274:14986   */\n    tag_41:\n      0x00\n        /* \"#utility.yul\":14525:14528   */\n      0xa0\n        /* \"#utility.yul\":14514:14523   */\n      dup3\n        /* \"#utility.yul\":14510:14529   */\n      add\n        /* \"#utility.yul\":14502:14529   */\n      swap1\n      pop\n        /* \"#utility.yul\":14539:14618   */\n      tag_291\n        /* \"#utility.yul\":14615:14616   */\n      0x00\n        /* \"#utility.yul\":14604:14613   */\n      dup4\n        /* \"#utility.yul\":14600:14617   */\n      add\n        /* \"#utility.yul\":14591:14597   */\n      dup9\n        /* \"#utility.yul\":14539:14618   */\n      tag_221\n      jump\t// in\n    tag_291:\n        /* \"#utility.yul\":14628:14708   */\n      tag_292\n        /* \"#utility.yul\":14704:14706   */\n      0x20\n        /* \"#utility.yul\":14693:14702   */\n      dup4\n        /* \"#utility.yul\":14689:14707   */\n      add\n        /* \"#utility.yul\":14680:14686   */\n      dup8\n        /* \"#utility.yul\":14628:14708   */\n      tag_221\n      jump\t// in\n    tag_292:\n        /* \"#utility.yul\":14718:14798   */\n      tag_293\n        /* \"#utility.yul\":14794:14796   */\n      0x40\n        /* \"#utility.yul\":14783:14792   */\n      dup4\n        /* \"#utility.yul\":14779:14797   */\n      add\n        /* \"#utility.yul\":14770:14776   */\n      dup7\n        /* \"#utility.yul\":14718:14798   */\n      tag_221\n      jump\t// in\n    tag_293:\n        /* \"#utility.yul\":14808:14888   */\n      tag_294\n        /* \"#utility.yul\":14884:14886   */\n      0x60\n        /* \"#utility.yul\":14873:14882   */\n      dup4\n        /* \"#utility.yul\":14869:14887   */\n      add\n        /* \"#utility.yul\":14860:14866   */\n      dup6\n        /* \"#utility.yul\":14808:14888   */\n      tag_278\n      jump\t// in\n    tag_294:\n        /* \"#utility.yul\":14898:14979   */\n      tag_295\n        /* \"#utility.yul\":14974:14977   */\n      0x80\n        /* \"#utility.yul\":14963:14972   */\n      dup4\n        /* \"#utility.yul\":14959:14978   */\n      add\n        /* \"#utility.yul\":14950:14956   */\n      dup5\n        /* \"#utility.yul\":14898:14979   */\n      tag_278\n      jump\t// in\n    tag_295:\n        /* \"#utility.yul\":14492:14986   */\n      swap7\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14992:15473   */\n    tag_11:\n      0x00\n        /* \"#utility.yul\":15227:15229   */\n      0x20\n        /* \"#utility.yul\":15216:15225   */\n      dup3\n        /* \"#utility.yul\":15212:15230   */\n      add\n        /* \"#utility.yul\":15204:15230   */\n      swap1\n      pop\n        /* \"#utility.yul\":15276:15285   */\n      dup2\n        /* \"#utility.yul\":15270:15274   */\n      dup2\n        /* \"#utility.yul\":15266:15286   */\n      sub\n        /* \"#utility.yul\":15262:15263   */\n      0x00\n        /* \"#utility.yul\":15251:15260   */\n      dup4\n        /* \"#utility.yul\":15247:15264   */\n      add\n        /* \"#utility.yul\":15240:15287   */\n      mstore\n        /* \"#utility.yul\":15304:15466   */\n      tag_297\n        /* \"#utility.yul\":15461:15465   */\n      dup2\n        /* \"#utility.yul\":15452:15458   */\n      dup5\n        /* \"#utility.yul\":15304:15466   */\n      tag_225\n      jump\t// in\n    tag_297:\n        /* \"#utility.yul\":15296:15466   */\n      swap1\n      pop\n        /* \"#utility.yul\":15194:15473   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15479:15956   */\n    tag_23:\n      0x00\n        /* \"#utility.yul\":15712:15714   */\n      0x20\n        /* \"#utility.yul\":15701:15710   */\n      dup3\n        /* \"#utility.yul\":15697:15715   */\n      add\n        /* \"#utility.yul\":15689:15715   */\n      swap1\n      pop\n        /* \"#utility.yul\":15761:15770   */\n      dup2\n        /* \"#utility.yul\":15755:15759   */\n      dup2\n        /* \"#utility.yul\":15751:15771   */\n      sub\n        /* \"#utility.yul\":15747:15748   */\n      0x00\n        /* \"#utility.yul\":15736:15745   */\n      dup4\n        /* \"#utility.yul\":15732:15749   */\n      add\n        /* \"#utility.yul\":15725:15772   */\n      mstore\n        /* \"#utility.yul\":15789:15949   */\n      tag_299\n        /* \"#utility.yul\":15944:15948   */\n      dup2\n        /* \"#utility.yul\":15935:15941   */\n      dup5\n        /* \"#utility.yul\":15789:15949   */\n      tag_239\n      jump\t// in\n    tag_299:\n        /* \"#utility.yul\":15781:15949   */\n      swap1\n      pop\n        /* \"#utility.yul\":15679:15956   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15962:16290   */\n    tag_17:\n      0x00\n        /* \"#utility.yul\":16119:16121   */\n      0x40\n        /* \"#utility.yul\":16108:16117   */\n      dup3\n        /* \"#utility.yul\":16104:16122   */\n      add\n        /* \"#utility.yul\":16096:16122   */\n      swap1\n      pop\n        /* \"#utility.yul\":16132:16203   */\n      tag_301\n        /* \"#utility.yul\":16200:16201   */\n      0x00\n        /* \"#utility.yul\":16189:16198   */\n      dup4\n        /* \"#utility.yul\":16185:16202   */\n      add\n        /* \"#utility.yul\":16176:16182   */\n      dup6\n        /* \"#utility.yul\":16132:16203   */\n      tag_275\n      jump\t// in\n    tag_301:\n        /* \"#utility.yul\":16213:16283   */\n      tag_302\n        /* \"#utility.yul\":16279:16281   */\n      0x20\n        /* \"#utility.yul\":16268:16277   */\n      dup4\n        /* \"#utility.yul\":16264:16282   */\n      add\n        /* \"#utility.yul\":16255:16261   */\n      dup5\n        /* \"#utility.yul\":16213:16283   */\n      tag_269\n      jump\t// in\n    tag_302:\n        /* \"#utility.yul\":16086:16290   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16296:16574   */\n    tag_121:\n      0x00\n        /* \"#utility.yul\":16362:16364   */\n      0x40\n        /* \"#utility.yul\":16356:16365   */\n      mload\n        /* \"#utility.yul\":16346:16365   */\n      swap1\n      pop\n        /* \"#utility.yul\":16404:16408   */\n      dup2\n        /* \"#utility.yul\":16396:16402   */\n      dup2\n        /* \"#utility.yul\":16392:16409   */\n      add\n        /* \"#utility.yul\":16511:16517   */\n      dup2\n        /* \"#utility.yul\":16499:16509   */\n      dup2\n        /* \"#utility.yul\":16496:16518   */\n      lt\n        /* \"#utility.yul\":16475:16493   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":16463:16473   */\n      dup3\n        /* \"#utility.yul\":16460:16494   */\n      gt\n        /* \"#utility.yul\":16457:16519   */\n      or\n        /* \"#utility.yul\":16454:16456   */\n      iszero\n      tag_304\n      jumpi\n        /* \"#utility.yul\":16522:16535   */\n      tag_305\n      tag_306\n      jump\t// in\n    tag_305:\n        /* \"#utility.yul\":16454:16456   */\n    tag_304:\n        /* \"#utility.yul\":16557:16567   */\n      dup1\n        /* \"#utility.yul\":16553:16555   */\n      0x40\n        /* \"#utility.yul\":16546:16568   */\n      mstore\n        /* \"#utility.yul\":16336:16574   */\n      pop\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16580:16912   */\n    tag_120:\n      0x00\n        /* \"#utility.yul\":16773:16791   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":16765:16771   */\n      dup3\n        /* \"#utility.yul\":16762:16792   */\n      gt\n        /* \"#utility.yul\":16759:16761   */\n      iszero\n      tag_308\n      jumpi\n        /* \"#utility.yul\":16795:16808   */\n      tag_309\n      tag_306\n      jump\t// in\n    tag_309:\n        /* \"#utility.yul\":16759:16761   */\n    tag_308:\n        /* \"#utility.yul\":16840:16844   */\n      0x20\n        /* \"#utility.yul\":16832:16838   */\n      dup3\n        /* \"#utility.yul\":16828:16845   */\n      mul\n        /* \"#utility.yul\":16820:16845   */\n      swap1\n      pop\n        /* \"#utility.yul\":16900:16904   */\n      0x20\n        /* \"#utility.yul\":16894:16898   */\n      dup2\n        /* \"#utility.yul\":16890:16905   */\n      add\n        /* \"#utility.yul\":16882:16905   */\n      swap1\n      pop\n        /* \"#utility.yul\":16688:16912   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16918:17249   */\n    tag_132:\n      0x00\n        /* \"#utility.yul\":17110:17128   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":17102:17108   */\n      dup3\n        /* \"#utility.yul\":17099:17129   */\n      gt\n        /* \"#utility.yul\":17096:17098   */\n      iszero\n      tag_311\n      jumpi\n        /* \"#utility.yul\":17132:17145   */\n      tag_312\n      tag_306\n      jump\t// in\n    tag_312:\n        /* \"#utility.yul\":17096:17098   */\n    tag_311:\n        /* \"#utility.yul\":17177:17181   */\n      0x20\n        /* \"#utility.yul\":17169:17175   */\n      dup3\n        /* \"#utility.yul\":17165:17182   */\n      mul\n        /* \"#utility.yul\":17157:17182   */\n      swap1\n      pop\n        /* \"#utility.yul\":17237:17241   */\n      0x20\n        /* \"#utility.yul\":17231:17235   */\n      dup2\n        /* \"#utility.yul\":17227:17242   */\n      add\n        /* \"#utility.yul\":17219:17242   */\n      swap1\n      pop\n        /* \"#utility.yul\":17025:17249   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17255:17414   */\n    tag_232:\n      0x00\n        /* \"#utility.yul\":17372:17375   */\n      dup2\n        /* \"#utility.yul\":17364:17375   */\n      swap1\n      pop\n        /* \"#utility.yul\":17402:17406   */\n      0x20\n        /* \"#utility.yul\":17397:17400   */\n      dup3\n        /* \"#utility.yul\":17393:17407   */\n      add\n        /* \"#utility.yul\":17385:17407   */\n      swap1\n      pop\n        /* \"#utility.yul\":17354:17414   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17420:17578   */\n    tag_246:\n      0x00\n        /* \"#utility.yul\":17536:17539   */\n      dup2\n        /* \"#utility.yul\":17528:17539   */\n      swap1\n      pop\n        /* \"#utility.yul\":17566:17570   */\n      0x20\n        /* \"#utility.yul\":17561:17564   */\n      dup3\n        /* \"#utility.yul\":17557:17571   */\n      add\n        /* \"#utility.yul\":17549:17571   */\n      swap1\n      pop\n        /* \"#utility.yul\":17518:17578   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17584:17725   */\n    tag_228:\n      0x00\n        /* \"#utility.yul\":17712:17717   */\n      dup2\n        /* \"#utility.yul\":17706:17718   */\n      mload\n        /* \"#utility.yul\":17696:17718   */\n      swap1\n      pop\n        /* \"#utility.yul\":17685:17725   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17731:17871   */\n    tag_242:\n      0x00\n        /* \"#utility.yul\":17858:17863   */\n      dup2\n        /* \"#utility.yul\":17852:17864   */\n      mload\n        /* \"#utility.yul\":17842:17864   */\n      swap1\n      pop\n        /* \"#utility.yul\":17831:17871   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17877:18017   */\n    tag_238:\n      0x00\n        /* \"#utility.yul\":18006:18010   */\n      0x20\n        /* \"#utility.yul\":18001:18004   */\n      dup3\n        /* \"#utility.yul\":17997:18011   */\n      add\n        /* \"#utility.yul\":17989:18011   */\n      swap1\n      pop\n        /* \"#utility.yul\":17979:18017   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18023:18162   */\n    tag_252:\n      0x00\n        /* \"#utility.yul\":18151:18155   */\n      0x20\n        /* \"#utility.yul\":18146:18149   */\n      dup3\n        /* \"#utility.yul\":18142:18156   */\n      add\n        /* \"#utility.yul\":18134:18156   */\n      swap1\n      pop\n        /* \"#utility.yul\":18124:18162   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18168:18379   */\n    tag_230:\n      0x00\n        /* \"#utility.yul\":18328:18334   */\n      dup3\n        /* \"#utility.yul\":18323:18326   */\n      dup3\n        /* \"#utility.yul\":18316:18335   */\n      mstore\n        /* \"#utility.yul\":18368:18372   */\n      0x20\n        /* \"#utility.yul\":18363:18366   */\n      dup3\n        /* \"#utility.yul\":18359:18373   */\n      add\n        /* \"#utility.yul\":18344:18373   */\n      swap1\n      pop\n        /* \"#utility.yul\":18306:18379   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18385:18595   */\n    tag_244:\n      0x00\n        /* \"#utility.yul\":18544:18550   */\n      dup3\n        /* \"#utility.yul\":18539:18542   */\n      dup3\n        /* \"#utility.yul\":18532:18551   */\n      mstore\n        /* \"#utility.yul\":18584:18588   */\n      0x20\n        /* \"#utility.yul\":18579:18582   */\n      dup3\n        /* \"#utility.yul\":18575:18589   */\n      add\n        /* \"#utility.yul\":18560:18589   */\n      swap1\n      pop\n        /* \"#utility.yul\":18522:18595   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18601:18697   */\n    tag_224:\n      0x00\n        /* \"#utility.yul\":18667:18691   */\n      tag_322\n        /* \"#utility.yul\":18685:18690   */\n      dup3\n        /* \"#utility.yul\":18667:18691   */\n      tag_323\n      jump\t// in\n    tag_322:\n        /* \"#utility.yul\":18656:18691   */\n      swap1\n      pop\n        /* \"#utility.yul\":18646:18697   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18703:18793   */\n    tag_256:\n      0x00\n        /* \"#utility.yul\":18780:18785   */\n      dup2\n        /* \"#utility.yul\":18773:18786   */\n      iszero\n        /* \"#utility.yul\":18766:18787   */\n      iszero\n        /* \"#utility.yul\":18755:18787   */\n      swap1\n      pop\n        /* \"#utility.yul\":18745:18793   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18799:18925   */\n    tag_323:\n      0x00\n        /* \"#utility.yul\":18876:18918   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":18869:18874   */\n      dup3\n        /* \"#utility.yul\":18865:18919   */\n      and\n        /* \"#utility.yul\":18854:18919   */\n      swap1\n      pop\n        /* \"#utility.yul\":18844:18925   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18931:19022   */\n    tag_268:\n      0x00\n        /* \"#utility.yul\":19007:19015   */\n      0xffffff\n        /* \"#utility.yul\":19000:19005   */\n      dup3\n        /* \"#utility.yul\":18996:19016   */\n      and\n        /* \"#utility.yul\":18985:19016   */\n      swap1\n      pop\n        /* \"#utility.yul\":18975:19022   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19028:19105   */\n    tag_274:\n      0x00\n        /* \"#utility.yul\":19094:19099   */\n      dup2\n        /* \"#utility.yul\":19083:19099   */\n      swap1\n      pop\n        /* \"#utility.yul\":19073:19105   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19111:19197   */\n    tag_328:\n      0x00\n        /* \"#utility.yul\":19186:19190   */\n      0xff\n        /* \"#utility.yul\":19179:19184   */\n      dup3\n        /* \"#utility.yul\":19175:19191   */\n      and\n        /* \"#utility.yul\":19164:19191   */\n      swap1\n      pop\n        /* \"#utility.yul\":19154:19197   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19203:19251   */\n    tag_306:\n        /* \"#utility.yul\":19236:19245   */\n      invalid\n        /* \"#utility.yul\":19257:19379   */\n    tag_142:\n        /* \"#utility.yul\":19330:19354   */\n      tag_332\n        /* \"#utility.yul\":19348:19353   */\n      dup2\n        /* \"#utility.yul\":19330:19354   */\n      tag_224\n      jump\t// in\n    tag_332:\n        /* \"#utility.yul\":19323:19328   */\n      dup2\n        /* \"#utility.yul\":19320:19355   */\n      eq\n        /* \"#utility.yul\":19310:19312   */\n      tag_333\n      jumpi\n        /* \"#utility.yul\":19369:19370   */\n      0x00\n        /* \"#utility.yul\":19366:19367   */\n      dup1\n        /* \"#utility.yul\":19359:19371   */\n      revert\n        /* \"#utility.yul\":19310:19312   */\n    tag_333:\n        /* \"#utility.yul\":19300:19379   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19385:19501   */\n    tag_154:\n        /* \"#utility.yul\":19455:19476   */\n      tag_335\n        /* \"#utility.yul\":19470:19475   */\n      dup2\n        /* \"#utility.yul\":19455:19476   */\n      tag_256\n      jump\t// in\n    tag_335:\n        /* \"#utility.yul\":19448:19453   */\n      dup2\n        /* \"#utility.yul\":19445:19477   */\n      eq\n        /* \"#utility.yul\":19435:19437   */\n      tag_336\n      jumpi\n        /* \"#utility.yul\":19491:19492   */\n      0x00\n        /* \"#utility.yul\":19488:19489   */\n      dup1\n        /* \"#utility.yul\":19481:19493   */\n      revert\n        /* \"#utility.yul\":19435:19437   */\n    tag_336:\n        /* \"#utility.yul\":19425:19501   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19507:19627   */\n    tag_178:\n        /* \"#utility.yul\":19579:19602   */\n      tag_338\n        /* \"#utility.yul\":19596:19601   */\n      dup2\n        /* \"#utility.yul\":19579:19602   */\n      tag_268\n      jump\t// in\n    tag_338:\n        /* \"#utility.yul\":19572:19577   */\n      dup2\n        /* \"#utility.yul\":19569:19603   */\n      eq\n        /* \"#utility.yul\":19559:19561   */\n      tag_339\n      jumpi\n        /* \"#utility.yul\":19617:19618   */\n      0x00\n        /* \"#utility.yul\":19614:19615   */\n      dup1\n        /* \"#utility.yul\":19607:19619   */\n      revert\n        /* \"#utility.yul\":19559:19561   */\n    tag_339:\n        /* \"#utility.yul\":19549:19627   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19633:19755   */\n    tag_181:\n        /* \"#utility.yul\":19706:19730   */\n      tag_341\n        /* \"#utility.yul\":19724:19729   */\n      dup2\n        /* \"#utility.yul\":19706:19730   */\n      tag_274\n      jump\t// in\n    tag_341:\n        /* \"#utility.yul\":19699:19704   */\n      dup2\n        /* \"#utility.yul\":19696:19731   */\n      eq\n        /* \"#utility.yul\":19686:19688   */\n      tag_342\n      jumpi\n        /* \"#utility.yul\":19745:19746   */\n      0x00\n        /* \"#utility.yul\":19742:19743   */\n      dup1\n        /* \"#utility.yul\":19735:19747   */\n      revert\n        /* \"#utility.yul\":19686:19688   */\n    tag_342:\n        /* \"#utility.yul\":19676:19755   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19761:19879   */\n    tag_187:\n        /* \"#utility.yul\":19832:19854   */\n      tag_344\n        /* \"#utility.yul\":19848:19853   */\n      dup2\n        /* \"#utility.yul\":19832:19854   */\n      tag_328\n      jump\t// in\n    tag_344:\n        /* \"#utility.yul\":19825:19830   */\n      dup2\n        /* \"#utility.yul\":19822:19855   */\n      eq\n        /* \"#utility.yul\":19812:19814   */\n      tag_345\n      jumpi\n        /* \"#utility.yul\":19869:19870   */\n      0x00\n        /* \"#utility.yul\":19866:19867   */\n      dup1\n        /* \"#utility.yul\":19859:19871   */\n      revert\n        /* \"#utility.yul\":19812:19814   */\n    tag_345:\n        /* \"#utility.yul\":19802:19879   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220b697b82bf4f48b81c4a1c2c7b49ef1593742707bdef23c9a4b7197b284d5ae4464736f6c63430007060033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {
								"contracts/libraries/UniswapV2.sol": {
									"UniswapV2": [
										{
											"length": 20,
											"start": 387
										},
										{
											"length": 20,
											"start": 1124
										},
										{
											"length": 20,
											"start": 1586
										}
									]
								},
								"contracts/libraries/UniswapV3.sol": {
									"UniswapV3": [
										{
											"length": 20,
											"start": 755
										},
										{
											"length": 20,
											"start": 1288
										},
										{
											"length": 20,
											"start": 1919
										}
									]
								}
							},
							"object": "608060405234801561001057600080fd5b50611250806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80633d157a46146100465780636110358d14610076578063ea8650c5146100a7575b600080fd5b610060600480360381019061005b9190610c34565b6100d7565b60405161006d9190610fd9565b60405180910390f35b610090600480360381019061008b9190610bbd565b610433565b60405161009e92919061101d565b60405180910390f35b6100c160048036038101906100bc9190610c75565b610586565b6040516100ce9190610ffb565b60405180910390f35b60606000825167ffffffffffffffff811180156100f357600080fd5b5060405190808252806020026020018201604052801561012d57816020015b61011a610899565b8152602001906001900390816101125790505b50905060005b835181101561042957600284828151811061014a57fe5b60200260200101516080015160ff1614156102ac57600073__$66db80e837caed232b747c0dfa8ba195e8$__63bcbcaa2986848151811061018757fe5b60200260200101516060015187858151811061019f57fe5b6020026020010151602001518886815181106101b757fe5b6020026020010151604001518987815181106101cf57fe5b602002602001015160a001518a88815181106101e757fe5b602002602001015160c001516040518663ffffffff1660e01b8152600401610213959493929190610f86565b60206040518083038186803b15801561022b57600080fd5b505af415801561023f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102639190610cb6565b9050604051806040016040528086848151811061027c57fe5b602002602001015160000151815260200182151581525083838151811061029f57fe5b6020026020010181905250505b60038482815181106102ba57fe5b60200260200101516080015160ff16141561041c57600073__$295ab41254e875e078eae9a73e9e2c34b1$__63bcbcaa298684815181106102f757fe5b60200260200101516060015187858151811061030f57fe5b60200260200101516020015188868151811061032757fe5b60200260200101516040015189878151811061033f57fe5b602002602001015160a001518a888151811061035757fe5b602002602001015160c001516040518663ffffffff1660e01b8152600401610383959493929190610f86565b60206040518083038186803b15801561039b57600080fd5b505af41580156103af573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103d39190610cb6565b905060405180604001604052808684815181106103ec57fe5b602002602001015160000151815260200182151581525083838151811061040f57fe5b6020026020010181905250505b8080600101915050610133565b5080915050919050565b60008060028360ff1614156104da5773__$66db80e837caed232b747c0dfa8ba195e8$__638c39560e888888886040518563ffffffff1660e01b815260040161047f9493929190610f41565b60206040518083038186803b15801561049757600080fd5b505af41580156104ab573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104cf9190610cdf565b60009150915061057c565b60038360ff16141561057b5773__$295ab41254e875e078eae9a73e9e2c34b1$__638c39560e888888886040518563ffffffff1660e01b81526004016105239493929190610f41565b604080518083038186803b15801561053a57600080fd5b505af415801561054e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105729190610d08565b9150915061057c565b5b9550959350505050565b60606000825167ffffffffffffffff811180156105a257600080fd5b506040519080825280602002602001820160405280156105dc57816020015b6105c96108b5565b8152602001906001900390816105c15790505b50905060005b835181101561088f5760028482815181106105f957fe5b60200260200101516080015160ff16141561073757600073__$66db80e837caed232b747c0dfa8ba195e8$__63c361e0b186848151811061063657fe5b60200260200101516060015187858151811061064e57fe5b60200260200101516020015188868151811061066657fe5b6020026020010151604001516040518463ffffffff1660e01b815260040161069093929190610f0a565b60206040518083038186803b1580156106a857600080fd5b505af41580156106bc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106e09190610cdf565b905060405180606001604052808684815181106106f957fe5b6020026020010151600001518152602001828152602001600062ffffff1681525083838151811061072657fe5b602002602001018190525050610882565b600384828151811061074557fe5b60200260200101516080015160ff1614156108815760008073__$295ab41254e875e078eae9a73e9e2c34b1$__63c361e0b187858151811061078357fe5b60200260200101516060015188868151811061079b57fe5b6020026020010151602001518987815181106107b357fe5b6020026020010151604001516040518463ffffffff1660e01b81526004016107dd93929190610f0a565b604080518083038186803b1580156107f457600080fd5b505af4158015610808573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061082c9190610d08565b91509150604051806060016040528087858151811061084757fe5b60200260200101516000015181526020018381526020018262ffffff1681525084848151811061087357fe5b602002602001018190525050505b5b80806001019150506105e2565b5080915050919050565b6040518060400160405280600081526020016000151581525090565b60405180606001604052806000815260200160008152602001600062ffffff1681525090565b60006108ee6108e984611077565b611046565b905080838252602082019050828560e086028201111561090d57600080fd5b60005b8581101561093d57816109238882610a31565b845260208401935060e08301925050600181019050610910565b5050509392505050565b600061095a610955846110a3565b611046565b905080838252602082019050828560a086028201111561097957600080fd5b60005b858110156109a9578161098f8882610ae1565b845260208401935060a0830192505060018101905061097c565b5050509392505050565b6000813590506109c2816111a7565b92915050565b600082601f8301126109d957600080fd5b81356109e98482602086016108db565b91505092915050565b600082601f830112610a0357600080fd5b8135610a13848260208601610947565b91505092915050565b600081519050610a2b816111be565b92915050565b600060e08284031215610a4357600080fd5b610a4d60e0611046565b90506000610a5d84828501610b7e565b6000830152506020610a71848285016109b3565b6020830152506040610a85848285016109b3565b6040830152506060610a99848285016109b3565b6060830152506080610aad84828501610ba8565b60808301525060a0610ac184828501610b7e565b60a08301525060c0610ad584828501610b7e565b60c08301525092915050565b600060a08284031215610af357600080fd5b610afd60a0611046565b90506000610b0d84828501610b7e565b6000830152506020610b21848285016109b3565b6020830152506040610b35848285016109b3565b6040830152506060610b49848285016109b3565b6060830152506080610b5d84828501610ba8565b60808301525092915050565b600081519050610b78816111d5565b92915050565b600081359050610b8d816111ec565b92915050565b600081519050610ba2816111ec565b92915050565b600081359050610bb781611203565b92915050565b600080600080600060a08688031215610bd557600080fd5b6000610be3888289016109b3565b9550506020610bf4888289016109b3565b9450506040610c05888289016109b3565b9350506060610c1688828901610b7e565b9250506080610c2788828901610ba8565b9150509295509295909350565b600060208284031215610c4657600080fd5b600082013567ffffffffffffffff811115610c6057600080fd5b610c6c848285016109c8565b91505092915050565b600060208284031215610c8757600080fd5b600082013567ffffffffffffffff811115610ca157600080fd5b610cad848285016109f2565b91505092915050565b600060208284031215610cc857600080fd5b6000610cd684828501610a1c565b91505092915050565b600060208284031215610cf157600080fd5b6000610cff84828501610b93565b91505092915050565b60008060408385031215610d1b57600080fd5b6000610d2985828601610b93565b9250506020610d3a85828601610b69565b9150509250929050565b6000610d508383610e4e565b60408301905092915050565b6000610d688383610e7d565b60608301905092915050565b610d7d81611141565b82525050565b6000610d8e826110ef565b610d98818561111f565b9350610da3836110cf565b8060005b83811015610dd4578151610dbb8882610d44565b9750610dc683611105565b925050600181019050610da7565b5085935050505092915050565b6000610dec826110fa565b610df68185611130565b9350610e01836110df565b8060005b83811015610e32578151610e198882610d5c565b9750610e2483611112565b925050600181019050610e05565b5085935050505092915050565b610e4881611153565b82525050565b604082016000820151610e646000850182610edd565b506020820151610e776020850182610e3f565b50505050565b606082016000820151610e936000850182610edd565b506020820151610ea66020850182610edd565b506040820151610eb96040850182610ebf565b50505050565b610ec88161117f565b82525050565b610ed78161117f565b82525050565b610ee68161118e565b82525050565b610ef58161118e565b82525050565b610f048161118e565b82525050565b6000606082019050610f1f6000830186610d74565b610f2c6020830185610d74565b610f396040830184610d74565b949350505050565b6000608082019050610f566000830187610d74565b610f636020830186610d74565b610f706040830185610d74565b610f7d6060830184610efb565b95945050505050565b600060a082019050610f9b6000830188610d74565b610fa86020830187610d74565b610fb56040830186610d74565b610fc26060830185610efb565b610fcf6080830184610efb565b9695505050505050565b60006020820190508181036000830152610ff38184610d83565b905092915050565b600060208201905081810360008301526110158184610de1565b905092915050565b60006040820190506110326000830185610eec565b61103f6020830184610ece565b9392505050565b6000604051905081810181811067ffffffffffffffff8211171561106d5761106c6111a5565b5b8060405250919050565b600067ffffffffffffffff821115611092576110916111a5565b5b602082029050602081019050919050565b600067ffffffffffffffff8211156110be576110bd6111a5565b5b602082029050602081019050919050565b6000819050602082019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600061114c8261115f565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600062ffffff82169050919050565b6000819050919050565b600060ff82169050919050565bfe5b6111b081611141565b81146111bb57600080fd5b50565b6111c781611153565b81146111d257600080fd5b50565b6111de8161117f565b81146111e957600080fd5b50565b6111f58161118e565b811461120057600080fd5b50565b61120c81611198565b811461121757600080fd5b5056fea2646970667358221220b697b82bf4f48b81c4a1c2c7b49ef1593742707bdef23c9a4b7197b284d5ae4464736f6c63430007060033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1250 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3D157A46 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x6110358D EQ PUSH2 0x76 JUMPI DUP1 PUSH4 0xEA8650C5 EQ PUSH2 0xA7 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x60 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5B SWAP2 SWAP1 PUSH2 0xC34 JUMP JUMPDEST PUSH2 0xD7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6D SWAP2 SWAP1 PUSH2 0xFD9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x90 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x8B SWAP2 SWAP1 PUSH2 0xBBD JUMP JUMPDEST PUSH2 0x433 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x9E SWAP3 SWAP2 SWAP1 PUSH2 0x101D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xBC SWAP2 SWAP1 PUSH2 0xC75 JUMP JUMPDEST PUSH2 0x586 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCE SWAP2 SWAP1 PUSH2 0xFFB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP3 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0xF3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x12D JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0x11A PUSH2 0x899 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x112 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x429 JUMPI PUSH1 0x2 DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x14A JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x80 ADD MLOAD PUSH1 0xFF AND EQ ISZERO PUSH2 0x2AC JUMPI PUSH1 0x0 PUSH20 0x0 PUSH4 0xBCBCAA29 DUP7 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x187 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x60 ADD MLOAD DUP8 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x19F JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD DUP9 DUP7 DUP2 MLOAD DUP2 LT PUSH2 0x1B7 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 ADD MLOAD DUP10 DUP8 DUP2 MLOAD DUP2 LT PUSH2 0x1CF JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0xA0 ADD MLOAD DUP11 DUP9 DUP2 MLOAD DUP2 LT PUSH2 0x1E7 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0xC0 ADD MLOAD PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x213 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xF86 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x22B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x23F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x263 SWAP2 SWAP1 PUSH2 0xCB6 JUMP JUMPDEST SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP7 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x27C JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP3 ISZERO ISZERO DUP2 MSTORE POP DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x29F JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP POP JUMPDEST PUSH1 0x3 DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2BA JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x80 ADD MLOAD PUSH1 0xFF AND EQ ISZERO PUSH2 0x41C JUMPI PUSH1 0x0 PUSH20 0x0 PUSH4 0xBCBCAA29 DUP7 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x2F7 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x60 ADD MLOAD DUP8 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x30F JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD DUP9 DUP7 DUP2 MLOAD DUP2 LT PUSH2 0x327 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 ADD MLOAD DUP10 DUP8 DUP2 MLOAD DUP2 LT PUSH2 0x33F JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0xA0 ADD MLOAD DUP11 DUP9 DUP2 MLOAD DUP2 LT PUSH2 0x357 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0xC0 ADD MLOAD PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x383 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xF86 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x39B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x3AF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3D3 SWAP2 SWAP1 PUSH2 0xCB6 JUMP JUMPDEST SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP7 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x3EC JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP3 ISZERO ISZERO DUP2 MSTORE POP DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x40F JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP POP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x133 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x2 DUP4 PUSH1 0xFF AND EQ ISZERO PUSH2 0x4DA JUMPI PUSH20 0x0 PUSH4 0x8C39560E DUP9 DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x47F SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xF41 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x497 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x4AB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4CF SWAP2 SWAP1 PUSH2 0xCDF JUMP JUMPDEST PUSH1 0x0 SWAP2 POP SWAP2 POP PUSH2 0x57C JUMP JUMPDEST PUSH1 0x3 DUP4 PUSH1 0xFF AND EQ ISZERO PUSH2 0x57B JUMPI PUSH20 0x0 PUSH4 0x8C39560E DUP9 DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x523 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xF41 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x53A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x54E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x572 SWAP2 SWAP1 PUSH2 0xD08 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x57C JUMP JUMPDEST JUMPDEST SWAP6 POP SWAP6 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP3 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0x5A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x5DC JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0x5C9 PUSH2 0x8B5 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x5C1 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x88F JUMPI PUSH1 0x2 DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x5F9 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x80 ADD MLOAD PUSH1 0xFF AND EQ ISZERO PUSH2 0x737 JUMPI PUSH1 0x0 PUSH20 0x0 PUSH4 0xC361E0B1 DUP7 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x636 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x60 ADD MLOAD DUP8 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x64E JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD DUP9 DUP7 DUP2 MLOAD DUP2 LT PUSH2 0x666 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 ADD MLOAD PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x690 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xF0A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x6A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x6BC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6E0 SWAP2 SWAP1 PUSH2 0xCDF JUMP JUMPDEST SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP7 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x6F9 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH3 0xFFFFFF AND DUP2 MSTORE POP DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x726 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP POP PUSH2 0x882 JUMP JUMPDEST PUSH1 0x3 DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x745 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x80 ADD MLOAD PUSH1 0xFF AND EQ ISZERO PUSH2 0x881 JUMPI PUSH1 0x0 DUP1 PUSH20 0x0 PUSH4 0xC361E0B1 DUP8 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x783 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x60 ADD MLOAD DUP9 DUP7 DUP2 MLOAD DUP2 LT PUSH2 0x79B JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD DUP10 DUP8 DUP2 MLOAD DUP2 LT PUSH2 0x7B3 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 ADD MLOAD PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7DD SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xF0A JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x7F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x808 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x82C SWAP2 SWAP1 PUSH2 0xD08 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP8 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x847 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH3 0xFFFFFF AND DUP2 MSTORE POP DUP5 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x873 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP POP POP JUMPDEST JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x5E2 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH3 0xFFFFFF AND DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8EE PUSH2 0x8E9 DUP5 PUSH2 0x1077 JUMP JUMPDEST PUSH2 0x1046 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP DUP3 DUP6 PUSH1 0xE0 DUP7 MUL DUP3 ADD GT ISZERO PUSH2 0x90D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x93D JUMPI DUP2 PUSH2 0x923 DUP9 DUP3 PUSH2 0xA31 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH1 0xE0 DUP4 ADD SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x910 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x95A PUSH2 0x955 DUP5 PUSH2 0x10A3 JUMP JUMPDEST PUSH2 0x1046 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP DUP3 DUP6 PUSH1 0xA0 DUP7 MUL DUP3 ADD GT ISZERO PUSH2 0x979 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x9A9 JUMPI DUP2 PUSH2 0x98F DUP9 DUP3 PUSH2 0xAE1 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH1 0xA0 DUP4 ADD SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x97C JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x9C2 DUP2 PUSH2 0x11A7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x9D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x9E9 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x8DB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xA03 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xA13 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x947 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xA2B DUP2 PUSH2 0x11BE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE0 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA43 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA4D PUSH1 0xE0 PUSH2 0x1046 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xA5D DUP5 DUP3 DUP6 ADD PUSH2 0xB7E JUMP JUMPDEST PUSH1 0x0 DUP4 ADD MSTORE POP PUSH1 0x20 PUSH2 0xA71 DUP5 DUP3 DUP6 ADD PUSH2 0x9B3 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP PUSH1 0x40 PUSH2 0xA85 DUP5 DUP3 DUP6 ADD PUSH2 0x9B3 JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MSTORE POP PUSH1 0x60 PUSH2 0xA99 DUP5 DUP3 DUP6 ADD PUSH2 0x9B3 JUMP JUMPDEST PUSH1 0x60 DUP4 ADD MSTORE POP PUSH1 0x80 PUSH2 0xAAD DUP5 DUP3 DUP6 ADD PUSH2 0xBA8 JUMP JUMPDEST PUSH1 0x80 DUP4 ADD MSTORE POP PUSH1 0xA0 PUSH2 0xAC1 DUP5 DUP3 DUP6 ADD PUSH2 0xB7E JUMP JUMPDEST PUSH1 0xA0 DUP4 ADD MSTORE POP PUSH1 0xC0 PUSH2 0xAD5 DUP5 DUP3 DUP6 ADD PUSH2 0xB7E JUMP JUMPDEST PUSH1 0xC0 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xAF3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xAFD PUSH1 0xA0 PUSH2 0x1046 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xB0D DUP5 DUP3 DUP6 ADD PUSH2 0xB7E JUMP JUMPDEST PUSH1 0x0 DUP4 ADD MSTORE POP PUSH1 0x20 PUSH2 0xB21 DUP5 DUP3 DUP6 ADD PUSH2 0x9B3 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP PUSH1 0x40 PUSH2 0xB35 DUP5 DUP3 DUP6 ADD PUSH2 0x9B3 JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MSTORE POP PUSH1 0x60 PUSH2 0xB49 DUP5 DUP3 DUP6 ADD PUSH2 0x9B3 JUMP JUMPDEST PUSH1 0x60 DUP4 ADD MSTORE POP PUSH1 0x80 PUSH2 0xB5D DUP5 DUP3 DUP6 ADD PUSH2 0xBA8 JUMP JUMPDEST PUSH1 0x80 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xB78 DUP2 PUSH2 0x11D5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB8D DUP2 PUSH2 0x11EC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xBA2 DUP2 PUSH2 0x11EC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xBB7 DUP2 PUSH2 0x1203 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xBD5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xBE3 DUP9 DUP3 DUP10 ADD PUSH2 0x9B3 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0xBF4 DUP9 DUP3 DUP10 ADD PUSH2 0x9B3 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0xC05 DUP9 DUP3 DUP10 ADD PUSH2 0x9B3 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0xC16 DUP9 DUP3 DUP10 ADD PUSH2 0xB7E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0xC27 DUP9 DUP3 DUP10 ADD PUSH2 0xBA8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC46 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xC60 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC6C DUP5 DUP3 DUP6 ADD PUSH2 0x9C8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC87 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xCA1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xCAD DUP5 DUP3 DUP6 ADD PUSH2 0x9F2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCC8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xCD6 DUP5 DUP3 DUP6 ADD PUSH2 0xA1C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCF1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xCFF DUP5 DUP3 DUP6 ADD PUSH2 0xB93 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD1B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xD29 DUP6 DUP3 DUP7 ADD PUSH2 0xB93 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xD3A DUP6 DUP3 DUP7 ADD PUSH2 0xB69 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD50 DUP4 DUP4 PUSH2 0xE4E JUMP JUMPDEST PUSH1 0x40 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD68 DUP4 DUP4 PUSH2 0xE7D JUMP JUMPDEST PUSH1 0x60 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xD7D DUP2 PUSH2 0x1141 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD8E DUP3 PUSH2 0x10EF JUMP JUMPDEST PUSH2 0xD98 DUP2 DUP6 PUSH2 0x111F JUMP JUMPDEST SWAP4 POP PUSH2 0xDA3 DUP4 PUSH2 0x10CF JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xDD4 JUMPI DUP2 MLOAD PUSH2 0xDBB DUP9 DUP3 PUSH2 0xD44 JUMP JUMPDEST SWAP8 POP PUSH2 0xDC6 DUP4 PUSH2 0x1105 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0xDA7 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDEC DUP3 PUSH2 0x10FA JUMP JUMPDEST PUSH2 0xDF6 DUP2 DUP6 PUSH2 0x1130 JUMP JUMPDEST SWAP4 POP PUSH2 0xE01 DUP4 PUSH2 0x10DF JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xE32 JUMPI DUP2 MLOAD PUSH2 0xE19 DUP9 DUP3 PUSH2 0xD5C JUMP JUMPDEST SWAP8 POP PUSH2 0xE24 DUP4 PUSH2 0x1112 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0xE05 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xE48 DUP2 PUSH2 0x1153 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x40 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0xE64 PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0xEDD JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0xE77 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0xE3F JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0xE93 PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0xEDD JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0xEA6 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0xEDD JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0xEB9 PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0xEBF JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0xEC8 DUP2 PUSH2 0x117F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xED7 DUP2 PUSH2 0x117F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xEE6 DUP2 PUSH2 0x118E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xEF5 DUP2 PUSH2 0x118E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xF04 DUP2 PUSH2 0x118E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xF1F PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0xD74 JUMP JUMPDEST PUSH2 0xF2C PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xD74 JUMP JUMPDEST PUSH2 0xF39 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xD74 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0xF56 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0xD74 JUMP JUMPDEST PUSH2 0xF63 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0xD74 JUMP JUMPDEST PUSH2 0xF70 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0xD74 JUMP JUMPDEST PUSH2 0xF7D PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0xEFB JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0xF9B PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0xD74 JUMP JUMPDEST PUSH2 0xFA8 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0xD74 JUMP JUMPDEST PUSH2 0xFB5 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0xD74 JUMP JUMPDEST PUSH2 0xFC2 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0xEFB JUMP JUMPDEST PUSH2 0xFCF PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0xEFB JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xFF3 DUP2 DUP5 PUSH2 0xD83 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1015 DUP2 DUP5 PUSH2 0xDE1 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1032 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xEEC JUMP JUMPDEST PUSH2 0x103F PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xECE JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP DUP2 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x106D JUMPI PUSH2 0x106C PUSH2 0x11A5 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1092 JUMPI PUSH2 0x1091 PUSH2 0x11A5 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x10BE JUMPI PUSH2 0x10BD PUSH2 0x11A5 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x114C DUP3 PUSH2 0x115F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST INVALID JUMPDEST PUSH2 0x11B0 DUP2 PUSH2 0x1141 JUMP JUMPDEST DUP2 EQ PUSH2 0x11BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x11C7 DUP2 PUSH2 0x1153 JUMP JUMPDEST DUP2 EQ PUSH2 0x11D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x11DE DUP2 PUSH2 0x117F JUMP JUMPDEST DUP2 EQ PUSH2 0x11E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x11F5 DUP2 PUSH2 0x118E JUMP JUMPDEST DUP2 EQ PUSH2 0x1200 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x120C DUP2 PUSH2 0x1198 JUMP JUMPDEST DUP2 EQ PUSH2 0x1217 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB6 SWAP8 0xB8 0x2B DELEGATECALL DELEGATECALL DUP12 DUP2 0xC4 LOG1 0xC2 0xC7 0xB4 SWAP15 CALL MSIZE CALLDATACOPY TIMESTAMP PUSH17 0x7BDEF23C9A4B7197B284D5AE4464736F6C PUSH4 0x43000706 STOP CALLER ",
							"sourceMap": "270:1894:13:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:19882:19",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:572:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "187:115:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "294:6:19"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_array$_t_struct$_existsIn_$2276_memory_ptr_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "211:82:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "211:90:19"
																	}
																],
																"functionName": {
																	"name": "allocateMemory",
																	"nodeType": "YulIdentifier",
																	"src": "196:14:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "196:106:19"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "187:5:19"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "311:16:19",
															"value": {
																"name": "array",
																"nodeType": "YulIdentifier",
																"src": "322:5:19"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "315:3:19",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "343:5:19"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "350:6:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "336:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "336:21:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "336:21:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "358:23:19",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "369:5:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "376:4:19",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "365:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "365:16:19"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "358:3:19"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "390:17:19",
															"value": {
																"name": "offset",
																"nodeType": "YulIdentifier",
																"src": "401:6:19"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "394:3:19",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "456:16:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "465:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "468:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "458:6:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "458:12:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "458:12:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "426:3:19"
																			},
																			{
																				"arguments": [
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "435:6:19"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "443:4:19",
																						"type": "",
																						"value": "0xe0"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nodeType": "YulIdentifier",
																					"src": "431:3:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "431:17:19"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "422:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "422:27:19"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "451:3:19"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "419:2:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "419:36:19"
															},
															"nodeType": "YulIf",
															"src": "416:2:19"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "541:202:19",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "555:21:19",
																		"value": {
																			"name": "src",
																			"nodeType": "YulIdentifier",
																			"src": "573:3:19"
																		},
																		"variables": [
																			{
																				"name": "elementPos",
																				"nodeType": "YulTypedName",
																				"src": "559:10:19",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "596:3:19"
																				},
																				{
																					"arguments": [
																						{
																							"name": "elementPos",
																							"nodeType": "YulIdentifier",
																							"src": "648:10:19"
																						},
																						{
																							"name": "end",
																							"nodeType": "YulIdentifier",
																							"src": "660:3:19"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_t_struct$_existsIn_$2276_memory_ptr",
																						"nodeType": "YulIdentifier",
																						"src": "601:46:19"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "601:63:19"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "589:6:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "589:76:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "589:76:19"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "678:21:19",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "689:3:19"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "694:4:19",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "685:3:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "685:14:19"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "678:3:19"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "712:21:19",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "723:3:19"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "728:4:19",
																					"type": "",
																					"value": "0xe0"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "719:3:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "719:14:19"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "712:3:19"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "503:1:19"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "506:6:19"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "500:2:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "500:13:19"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "514:18:19",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "516:14:19",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "525:1:19"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "528:1:19",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "521:3:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "521:9:19"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "516:1:19"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "485:14:19",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "487:10:19",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "496:1:19",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nodeType": "YulTypedName",
																				"src": "491:1:19",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "481:262:19"
														}
													]
												},
												"name": "abi_decode_available_length_t_array$_t_struct$_existsIn_$2276_memory_ptr_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "147:6:19",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "155:6:19",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "163:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "171:5:19",
														"type": ""
													}
												],
												"src": "49:700:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "923:570:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "933:114:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1039:6:19"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_array$_t_struct$_priceIn_$2254_memory_ptr_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "957:81:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "957:89:19"
																	}
																],
																"functionName": {
																	"name": "allocateMemory",
																	"nodeType": "YulIdentifier",
																	"src": "942:14:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "942:105:19"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "933:5:19"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1056:16:19",
															"value": {
																"name": "array",
																"nodeType": "YulIdentifier",
																"src": "1067:5:19"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "1060:3:19",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "1088:5:19"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1095:6:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1081:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "1081:21:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1081:21:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1103:23:19",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "1114:5:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1121:4:19",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1110:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "1110:16:19"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "1103:3:19"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1135:17:19",
															"value": {
																"name": "offset",
																"nodeType": "YulIdentifier",
																"src": "1146:6:19"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "1139:3:19",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1201:16:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1210:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1213:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1203:6:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1203:12:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1203:12:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "1171:3:19"
																			},
																			{
																				"arguments": [
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "1180:6:19"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1188:4:19",
																						"type": "",
																						"value": "0xa0"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nodeType": "YulIdentifier",
																					"src": "1176:3:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1176:17:19"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1167:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1167:27:19"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "1196:3:19"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1164:2:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "1164:36:19"
															},
															"nodeType": "YulIf",
															"src": "1161:2:19"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1286:201:19",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "1300:21:19",
																		"value": {
																			"name": "src",
																			"nodeType": "YulIdentifier",
																			"src": "1318:3:19"
																		},
																		"variables": [
																			{
																				"name": "elementPos",
																				"nodeType": "YulTypedName",
																				"src": "1304:10:19",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "1341:3:19"
																				},
																				{
																					"arguments": [
																						{
																							"name": "elementPos",
																							"nodeType": "YulIdentifier",
																							"src": "1392:10:19"
																						},
																						{
																							"name": "end",
																							"nodeType": "YulIdentifier",
																							"src": "1404:3:19"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_t_struct$_priceIn_$2254_memory_ptr",
																						"nodeType": "YulIdentifier",
																						"src": "1346:45:19"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1346:62:19"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1334:6:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1334:75:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1334:75:19"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "1422:21:19",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "1433:3:19"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1438:4:19",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1429:3:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1429:14:19"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "1422:3:19"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "1456:21:19",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "1467:3:19"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1472:4:19",
																					"type": "",
																					"value": "0xa0"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1463:3:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1463:14:19"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "1456:3:19"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1248:1:19"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1251:6:19"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1245:2:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "1245:13:19"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1259:18:19",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1261:14:19",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1270:1:19"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1273:1:19",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1266:3:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1266:9:19"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1261:1:19"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1230:14:19",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "1232:10:19",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "1241:1:19",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nodeType": "YulTypedName",
																				"src": "1236:1:19",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "1226:261:19"
														}
													]
												},
												"name": "abi_decode_available_length_t_array$_t_struct$_priceIn_$2254_memory_ptr_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "893:6:19",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "901:6:19",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "909:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "917:5:19",
														"type": ""
													}
												],
												"src": "796:697:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1551:87:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1561:29:19",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1583:6:19"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1570:12:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "1570:20:19"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1561:5:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1626:5:19"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "1599:26:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "1599:33:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1599:33:19"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1529:6:19",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1537:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1545:5:19",
														"type": ""
													}
												],
												"src": "1499:139:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1789:252:19",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1838:16:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1847:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1850:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1840:6:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1840:12:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1840:12:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1817:6:19"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1825:4:19",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1813:3:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1813:17:19"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "1832:3:19"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "1809:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1809:27:19"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1802:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "1802:35:19"
															},
															"nodeType": "YulIf",
															"src": "1799:2:19"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1863:34:19",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1890:6:19"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1877:12:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "1877:20:19"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "1867:6:19",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1906:129:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "2008:6:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2016:4:19",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2004:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2004:17:19"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2023:6:19"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "2031:3:19"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_array$_t_struct$_existsIn_$2276_memory_ptr_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "1915:88:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "1915:120:19"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "1906:5:19"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_array$_t_struct$_existsIn_$2276_memory_ptr_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1767:6:19",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1775:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "1783:5:19",
														"type": ""
													}
												],
												"src": "1686:355:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2190:251:19",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2239:16:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2248:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2251:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2241:6:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2241:12:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2241:12:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2218:6:19"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2226:4:19",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2214:3:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2214:17:19"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "2233:3:19"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "2210:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2210:27:19"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2203:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "2203:35:19"
															},
															"nodeType": "YulIf",
															"src": "2200:2:19"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2264:34:19",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2291:6:19"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2278:12:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "2278:20:19"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2268:6:19",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2307:128:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "2408:6:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2416:4:19",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2404:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2404:17:19"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2423:6:19"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "2431:3:19"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_array$_t_struct$_priceIn_$2254_memory_ptr_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "2316:87:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "2316:119:19"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "2307:5:19"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_array$_t_struct$_priceIn_$2254_memory_ptr_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2168:6:19",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2176:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "2184:5:19",
														"type": ""
													}
												],
												"src": "2088:353:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2507:77:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2517:22:19",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2532:6:19"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2526:5:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "2526:13:19"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2517:5:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2572:5:19"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "2548:23:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "2548:30:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2548:30:19"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2485:6:19",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2493:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2501:5:19",
														"type": ""
													}
												],
												"src": "2447:137:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2711:1244:19",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2755:16:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2764:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2767:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2757:6:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2757:12:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2757:12:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "2732:3:19"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2737:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2728:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2728:19:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2749:4:19",
																		"type": "",
																		"value": "0xe0"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2724:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "2724:30:19"
															},
															"nodeType": "YulIf",
															"src": "2721:2:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2780:29:19",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2804:4:19",
																		"type": "",
																		"value": "0xe0"
																	}
																],
																"functionName": {
																	"name": "allocateMemory",
																	"nodeType": "YulIdentifier",
																	"src": "2789:14:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "2789:20:19"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2780:5:19"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2819:151:19",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2855:15:19",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2869:1:19",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2859:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2895:5:19"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2902:4:19",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2891:3:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2891:16:19"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "headStart",
																								"nodeType": "YulIdentifier",
																								"src": "2934:9:19"
																							},
																							{
																								"name": "offset",
																								"nodeType": "YulIdentifier",
																								"src": "2945:6:19"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "2930:3:19"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2930:22:19"
																					},
																					{
																						"name": "end",
																						"nodeType": "YulIdentifier",
																						"src": "2954:3:19"
																					}
																				],
																				"functionName": {
																					"name": "abi_decode_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "2909:20:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2909:49:19"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nodeType": "YulIdentifier",
																			"src": "2884:6:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2884:75:19"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "2884:75:19"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2980:149:19",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3013:16:19",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3027:2:19",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3017:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3054:5:19"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3061:4:19",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3050:3:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3050:16:19"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "headStart",
																								"nodeType": "YulIdentifier",
																								"src": "3093:9:19"
																							},
																							{
																								"name": "offset",
																								"nodeType": "YulIdentifier",
																								"src": "3104:6:19"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "3089:3:19"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3089:22:19"
																					},
																					{
																						"name": "end",
																						"nodeType": "YulIdentifier",
																						"src": "3113:3:19"
																					}
																				],
																				"functionName": {
																					"name": "abi_decode_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "3068:20:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3068:49:19"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nodeType": "YulIdentifier",
																			"src": "3043:6:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3043:75:19"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "3043:75:19"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3139:149:19",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3172:16:19",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3186:2:19",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3176:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3213:5:19"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3220:4:19",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3209:3:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3209:16:19"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "headStart",
																								"nodeType": "YulIdentifier",
																								"src": "3252:9:19"
																							},
																							{
																								"name": "offset",
																								"nodeType": "YulIdentifier",
																								"src": "3263:6:19"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "3248:3:19"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3248:22:19"
																					},
																					{
																						"name": "end",
																						"nodeType": "YulIdentifier",
																						"src": "3272:3:19"
																					}
																				],
																				"functionName": {
																					"name": "abi_decode_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "3227:20:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3227:49:19"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nodeType": "YulIdentifier",
																			"src": "3202:6:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3202:75:19"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "3202:75:19"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3298:155:19",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3337:16:19",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3351:2:19",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3341:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3378:5:19"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3385:4:19",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3374:3:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3374:16:19"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "headStart",
																								"nodeType": "YulIdentifier",
																								"src": "3417:9:19"
																							},
																							{
																								"name": "offset",
																								"nodeType": "YulIdentifier",
																								"src": "3428:6:19"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "3413:3:19"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3413:22:19"
																					},
																					{
																						"name": "end",
																						"nodeType": "YulIdentifier",
																						"src": "3437:3:19"
																					}
																				],
																				"functionName": {
																					"name": "abi_decode_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "3392:20:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3392:49:19"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nodeType": "YulIdentifier",
																			"src": "3367:6:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3367:75:19"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "3367:75:19"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3463:161:19",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3509:17:19",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3523:3:19",
																		"type": "",
																		"value": "128"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3513:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3551:5:19"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3558:4:19",
																						"type": "",
																						"value": "0x80"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3547:3:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3547:16:19"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "headStart",
																								"nodeType": "YulIdentifier",
																								"src": "3588:9:19"
																							},
																							{
																								"name": "offset",
																								"nodeType": "YulIdentifier",
																								"src": "3599:6:19"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "3584:3:19"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3584:22:19"
																					},
																					{
																						"name": "end",
																						"nodeType": "YulIdentifier",
																						"src": "3608:3:19"
																					}
																				],
																				"functionName": {
																					"name": "abi_decode_t_uint8",
																					"nodeType": "YulIdentifier",
																					"src": "3565:18:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3565:47:19"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nodeType": "YulIdentifier",
																			"src": "3540:6:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3540:73:19"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "3540:73:19"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3634:152:19",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3669:17:19",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3683:3:19",
																		"type": "",
																		"value": "160"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3673:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3711:5:19"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3718:4:19",
																						"type": "",
																						"value": "0xa0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3707:3:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3707:16:19"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "headStart",
																								"nodeType": "YulIdentifier",
																								"src": "3750:9:19"
																							},
																							{
																								"name": "offset",
																								"nodeType": "YulIdentifier",
																								"src": "3761:6:19"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "3746:3:19"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3746:22:19"
																					},
																					{
																						"name": "end",
																						"nodeType": "YulIdentifier",
																						"src": "3770:3:19"
																					}
																				],
																				"functionName": {
																					"name": "abi_decode_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "3725:20:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3725:49:19"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nodeType": "YulIdentifier",
																			"src": "3700:6:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3700:75:19"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "3700:75:19"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3796:152:19",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3831:17:19",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3845:3:19",
																		"type": "",
																		"value": "192"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3835:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3873:5:19"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3880:4:19",
																						"type": "",
																						"value": "0xc0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3869:3:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3869:16:19"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "headStart",
																								"nodeType": "YulIdentifier",
																								"src": "3912:9:19"
																							},
																							{
																								"name": "offset",
																								"nodeType": "YulIdentifier",
																								"src": "3923:6:19"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "3908:3:19"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3908:22:19"
																					},
																					{
																						"name": "end",
																						"nodeType": "YulIdentifier",
																						"src": "3932:3:19"
																					}
																				],
																				"functionName": {
																					"name": "abi_decode_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "3887:20:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3887:49:19"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nodeType": "YulIdentifier",
																			"src": "3862:6:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3862:75:19"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "3862:75:19"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_struct$_existsIn_$2276_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2686:9:19",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2697:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2705:5:19",
														"type": ""
													}
												],
												"src": "2630:1325:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4080:920:19",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4124:16:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4133:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4136:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4126:6:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4126:12:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4126:12:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "4101:3:19"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4106:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4097:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4097:19:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4118:4:19",
																		"type": "",
																		"value": "0xa0"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4093:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "4093:30:19"
															},
															"nodeType": "YulIf",
															"src": "4090:2:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4149:29:19",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4173:4:19",
																		"type": "",
																		"value": "0xa0"
																	}
																],
																"functionName": {
																	"name": "allocateMemory",
																	"nodeType": "YulIdentifier",
																	"src": "4158:14:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "4158:20:19"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "4149:5:19"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4188:151:19",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4224:15:19",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4238:1:19",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4228:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "4264:5:19"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4271:4:19",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4260:3:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4260:16:19"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "headStart",
																								"nodeType": "YulIdentifier",
																								"src": "4303:9:19"
																							},
																							{
																								"name": "offset",
																								"nodeType": "YulIdentifier",
																								"src": "4314:6:19"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "4299:3:19"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4299:22:19"
																					},
																					{
																						"name": "end",
																						"nodeType": "YulIdentifier",
																						"src": "4323:3:19"
																					}
																				],
																				"functionName": {
																					"name": "abi_decode_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "4278:20:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4278:49:19"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nodeType": "YulIdentifier",
																			"src": "4253:6:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4253:75:19"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "4253:75:19"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4349:149:19",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4382:16:19",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4396:2:19",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4386:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "4423:5:19"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4430:4:19",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4419:3:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4419:16:19"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "headStart",
																								"nodeType": "YulIdentifier",
																								"src": "4462:9:19"
																							},
																							{
																								"name": "offset",
																								"nodeType": "YulIdentifier",
																								"src": "4473:6:19"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "4458:3:19"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4458:22:19"
																					},
																					{
																						"name": "end",
																						"nodeType": "YulIdentifier",
																						"src": "4482:3:19"
																					}
																				],
																				"functionName": {
																					"name": "abi_decode_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "4437:20:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4437:49:19"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nodeType": "YulIdentifier",
																			"src": "4412:6:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4412:75:19"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "4412:75:19"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4508:149:19",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4541:16:19",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4555:2:19",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4545:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "4582:5:19"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4589:4:19",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4578:3:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4578:16:19"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "headStart",
																								"nodeType": "YulIdentifier",
																								"src": "4621:9:19"
																							},
																							{
																								"name": "offset",
																								"nodeType": "YulIdentifier",
																								"src": "4632:6:19"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "4617:3:19"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4617:22:19"
																					},
																					{
																						"name": "end",
																						"nodeType": "YulIdentifier",
																						"src": "4641:3:19"
																					}
																				],
																				"functionName": {
																					"name": "abi_decode_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "4596:20:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4596:49:19"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nodeType": "YulIdentifier",
																			"src": "4571:6:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4571:75:19"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "4571:75:19"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4667:155:19",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4706:16:19",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4720:2:19",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4710:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "4747:5:19"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4754:4:19",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4743:3:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4743:16:19"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "headStart",
																								"nodeType": "YulIdentifier",
																								"src": "4786:9:19"
																							},
																							{
																								"name": "offset",
																								"nodeType": "YulIdentifier",
																								"src": "4797:6:19"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "4782:3:19"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4782:22:19"
																					},
																					{
																						"name": "end",
																						"nodeType": "YulIdentifier",
																						"src": "4806:3:19"
																					}
																				],
																				"functionName": {
																					"name": "abi_decode_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "4761:20:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4761:49:19"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nodeType": "YulIdentifier",
																			"src": "4736:6:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4736:75:19"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "4736:75:19"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4832:161:19",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4878:17:19",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4892:3:19",
																		"type": "",
																		"value": "128"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4882:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "4920:5:19"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4927:4:19",
																						"type": "",
																						"value": "0x80"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4916:3:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4916:16:19"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "headStart",
																								"nodeType": "YulIdentifier",
																								"src": "4957:9:19"
																							},
																							{
																								"name": "offset",
																								"nodeType": "YulIdentifier",
																								"src": "4968:6:19"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "4953:3:19"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4953:22:19"
																					},
																					{
																						"name": "end",
																						"nodeType": "YulIdentifier",
																						"src": "4977:3:19"
																					}
																				],
																				"functionName": {
																					"name": "abi_decode_t_uint8",
																					"nodeType": "YulIdentifier",
																					"src": "4934:18:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4934:47:19"
																			}
																		],
																		"functionName": {
																			"name": "mstore",
																			"nodeType": "YulIdentifier",
																			"src": "4909:6:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4909:73:19"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "4909:73:19"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_struct$_priceIn_$2254_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4055:9:19",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4066:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4074:5:19",
														"type": ""
													}
												],
												"src": "4000:1000:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5068:79:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5078:22:19",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "5093:6:19"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "5087:5:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "5087:13:19"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "5078:5:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5135:5:19"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint24",
																	"nodeType": "YulIdentifier",
																	"src": "5109:25:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "5109:32:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5109:32:19"
														}
													]
												},
												"name": "abi_decode_t_uint24_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "5046:6:19",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5054:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5062:5:19",
														"type": ""
													}
												],
												"src": "5006:141:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5205:87:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5215:29:19",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "5237:6:19"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5224:12:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "5224:20:19"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "5215:5:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5280:5:19"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5253:26:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "5253:33:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5253:33:19"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "5183:6:19",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5191:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5199:5:19",
														"type": ""
													}
												],
												"src": "5153:139:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5361:80:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5371:22:19",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "5386:6:19"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "5380:5:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "5380:13:19"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "5371:5:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5429:5:19"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5402:26:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "5402:33:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5402:33:19"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "5339:6:19",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5347:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5355:5:19",
														"type": ""
													}
												],
												"src": "5298:143:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5497:85:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5507:29:19",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "5529:6:19"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5516:12:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "5516:20:19"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "5507:5:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5570:5:19"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint8",
																	"nodeType": "YulIdentifier",
																	"src": "5545:24:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "5545:31:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5545:31:19"
														}
													]
												},
												"name": "abi_decode_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "5475:6:19",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5483:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5491:5:19",
														"type": ""
													}
												],
												"src": "5447:135:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5720:708:19",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5767:16:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5776:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5779:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5769:6:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5769:12:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5769:12:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5741:7:19"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5750:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5737:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5737:23:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5762:3:19",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5733:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "5733:33:19"
															},
															"nodeType": "YulIf",
															"src": "5730:2:19"
														},
														{
															"nodeType": "YulBlock",
															"src": "5793:117:19",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5808:15:19",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5822:1:19",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5812:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5837:63:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5872:9:19"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5883:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5868:3:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5868:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5892:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5847:20:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5847:53:19"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5837:6:19"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5920:118:19",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5935:16:19",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5949:2:19",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5939:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5965:63:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6000:9:19"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6011:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5996:3:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5996:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6020:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5975:20:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5975:53:19"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "5965:6:19"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "6048:118:19",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6063:16:19",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6077:2:19",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6067:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6093:63:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6128:9:19"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6139:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6124:3:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6124:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6148:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "6103:20:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6103:53:19"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "6093:6:19"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "6176:118:19",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6191:16:19",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6205:2:19",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6195:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6221:63:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6256:9:19"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6267:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6252:3:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6252:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6276:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "6231:20:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6231:53:19"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "6221:6:19"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "6304:117:19",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6319:17:19",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6333:3:19",
																		"type": "",
																		"value": "128"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6323:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6350:61:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6383:9:19"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6394:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6379:3:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6379:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6403:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint8",
																			"nodeType": "YulIdentifier",
																			"src": "6360:18:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6360:51:19"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nodeType": "YulIdentifier",
																			"src": "6350:6:19"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_addresst_uint256t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5658:9:19",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5669:7:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5681:6:19",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5689:6:19",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "5697:6:19",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "5705:6:19",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "5713:6:19",
														"type": ""
													}
												],
												"src": "5588:840:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6551:340:19",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6597:16:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6606:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6609:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6599:6:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6599:12:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6599:12:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6572:7:19"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6581:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6568:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6568:23:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6593:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6564:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "6564:32:19"
															},
															"nodeType": "YulIf",
															"src": "6561:2:19"
														},
														{
															"nodeType": "YulBlock",
															"src": "6623:261:19",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6638:45:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6669:9:19"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6680:1:19",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6665:3:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6665:17:19"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "6652:12:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6652:31:19"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6642:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "6730:16:19",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "6739:1:19",
																							"type": "",
																							"value": "0"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "6742:1:19",
																							"type": "",
																							"value": "0"
																						}
																					],
																					"functionName": {
																						"name": "revert",
																						"nodeType": "YulIdentifier",
																						"src": "6732:6:19"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6732:12:19"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "6732:12:19"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "6702:6:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6710:18:19",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "6699:2:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6699:30:19"
																	},
																	"nodeType": "YulIf",
																	"src": "6696:2:19"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6760:114:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6846:9:19"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6857:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6842:3:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6842:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6866:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_struct$_existsIn_$2276_memory_ptr_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "6770:71:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6770:104:19"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "6760:6:19"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_struct$_existsIn_$2276_memory_ptr_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6521:9:19",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6532:7:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6544:6:19",
														"type": ""
													}
												],
												"src": "6434:457:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7013:339:19",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7059:16:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7068:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7071:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7061:6:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7061:12:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7061:12:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7034:7:19"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7043:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7030:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7030:23:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7055:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "7026:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "7026:32:19"
															},
															"nodeType": "YulIf",
															"src": "7023:2:19"
														},
														{
															"nodeType": "YulBlock",
															"src": "7085:260:19",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "7100:45:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7131:9:19"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7142:1:19",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7127:3:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7127:17:19"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "7114:12:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7114:31:19"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "7104:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "7192:16:19",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "7201:1:19",
																							"type": "",
																							"value": "0"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "7204:1:19",
																							"type": "",
																							"value": "0"
																						}
																					],
																					"functionName": {
																						"name": "revert",
																						"nodeType": "YulIdentifier",
																						"src": "7194:6:19"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7194:12:19"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "7194:12:19"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "7164:6:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7172:18:19",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "7161:2:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7161:30:19"
																	},
																	"nodeType": "YulIf",
																	"src": "7158:2:19"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "7222:113:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7307:9:19"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "7318:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7303:3:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7303:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7327:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_struct$_priceIn_$2254_memory_ptr_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "7232:70:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7232:103:19"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "7222:6:19"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_struct$_priceIn_$2254_memory_ptr_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6983:9:19",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6994:7:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7006:6:19",
														"type": ""
													}
												],
												"src": "6897:455:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7432:204:19",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7478:16:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7487:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7490:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7480:6:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7480:12:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7480:12:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7453:7:19"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7462:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7449:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7449:23:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7474:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "7445:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "7445:32:19"
															},
															"nodeType": "YulIf",
															"src": "7442:2:19"
														},
														{
															"nodeType": "YulBlock",
															"src": "7504:125:19",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "7519:15:19",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7533:1:19",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "7523:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "7548:71:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7591:9:19"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "7602:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7587:3:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7587:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7611:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "7558:28:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7558:61:19"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "7548:6:19"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7402:9:19",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "7413:7:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7425:6:19",
														"type": ""
													}
												],
												"src": "7358:278:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7719:207:19",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7765:16:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7774:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7777:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7767:6:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7767:12:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7767:12:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7740:7:19"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7749:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7736:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7736:23:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7761:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "7732:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "7732:32:19"
															},
															"nodeType": "YulIf",
															"src": "7729:2:19"
														},
														{
															"nodeType": "YulBlock",
															"src": "7791:128:19",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "7806:15:19",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7820:1:19",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "7810:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "7835:74:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7881:9:19"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "7892:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7877:3:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7877:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7901:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "7845:31:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7845:64:19"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "7835:6:19"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7689:9:19",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "7700:7:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7712:6:19",
														"type": ""
													}
												],
												"src": "7642:284:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8025:345:19",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8071:16:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8080:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8083:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "8073:6:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8073:12:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8073:12:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8046:7:19"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8055:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8042:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8042:23:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8067:2:19",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "8038:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "8038:32:19"
															},
															"nodeType": "YulIf",
															"src": "8035:2:19"
														},
														{
															"nodeType": "YulBlock",
															"src": "8097:128:19",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "8112:15:19",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8126:1:19",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "8116:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "8141:74:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "8187:9:19"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "8198:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8183:3:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8183:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8207:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "8151:31:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8151:64:19"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "8141:6:19"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "8235:128:19",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "8250:16:19",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8264:2:19",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "8254:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "8280:73:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "8325:9:19"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "8336:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8321:3:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8321:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8345:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint24_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "8290:30:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8290:63:19"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "8280:6:19"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint24_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7987:9:19",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "7998:7:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8010:6:19",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "8018:6:19",
														"type": ""
													}
												],
												"src": "7932:438:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8510:153:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8608:6:19"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8616:3:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_struct$_existsOut_$2281_memory_ptr_to_t_struct$_existsOut_$2281_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "8520:87:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "8520:100:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8520:100:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8629:28:19",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8647:3:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8652:4:19",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8643:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "8643:14:19"
															},
															"variableNames": [
																{
																	"name": "updatedPos",
																	"nodeType": "YulIdentifier",
																	"src": "8629:10:19"
																}
															]
														}
													]
												},
												"name": "abi_encodeUpdatedPos_t_struct$_existsOut_$2281_memory_ptr_to_t_struct$_existsOut_$2281_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8483:6:19",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8491:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updatedPos",
														"nodeType": "YulTypedName",
														"src": "8499:10:19",
														"type": ""
													}
												],
												"src": "8376:287:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8801:151:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8897:6:19"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8905:3:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_struct$_priceOut_$2261_memory_ptr_to_t_struct$_priceOut_$2261_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "8811:85:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "8811:98:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8811:98:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8918:28:19",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8936:3:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8941:4:19",
																		"type": "",
																		"value": "0x60"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8932:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "8932:14:19"
															},
															"variableNames": [
																{
																	"name": "updatedPos",
																	"nodeType": "YulIdentifier",
																	"src": "8918:10:19"
																}
															]
														}
													]
												},
												"name": "abi_encodeUpdatedPos_t_struct$_priceOut_$2261_memory_ptr_to_t_struct$_priceOut_$2261_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8774:6:19",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8782:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updatedPos",
														"nodeType": "YulTypedName",
														"src": "8790:10:19",
														"type": ""
													}
												],
												"src": "8669:283:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9031:53:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9048:3:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "9071:5:19"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "9053:17:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9053:24:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9041:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "9041:37:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9041:37:19"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack_library",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9019:5:19",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9026:3:19",
														"type": ""
													}
												],
												"src": "8958:126:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9350:770:19",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9360:95:19",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "9449:5:19"
																	}
																],
																"functionName": {
																	"name": "array_length_t_array$_t_struct$_existsOut_$2281_memory_ptr_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "9374:74:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "9374:81:19"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "9364:6:19",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9464:120:19",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9572:3:19"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "9577:6:19"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_array$_t_struct$_existsOut_$2281_memory_ptr_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9471:100:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "9471:113:19"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "9464:3:19"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9593:98:19",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "9685:5:19"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_t_array$_t_struct$_existsOut_$2281_memory_ptr_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "9608:76:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "9608:83:19"
															},
															"variables": [
																{
																	"name": "baseRef",
																	"nodeType": "YulTypedName",
																	"src": "9597:7:19",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9700:21:19",
															"value": {
																"name": "baseRef",
																"nodeType": "YulIdentifier",
																"src": "9714:7:19"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "9704:6:19",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9790:305:19",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "9804:34:19",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "9831:6:19"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "9825:5:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9825:13:19"
																		},
																		"variables": [
																			{
																				"name": "elementValue0",
																				"nodeType": "YulTypedName",
																				"src": "9808:13:19",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "9851:124:19",
																		"value": {
																			"arguments": [
																				{
																					"name": "elementValue0",
																					"nodeType": "YulIdentifier",
																					"src": "9956:13:19"
																				},
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "9971:3:19"
																				}
																			],
																			"functionName": {
																				"name": "abi_encodeUpdatedPos_t_struct$_existsOut_$2281_memory_ptr_to_t_struct$_existsOut_$2281_memory_ptr",
																				"nodeType": "YulIdentifier",
																				"src": "9858:97:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9858:117:19"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "9851:3:19"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "9988:97:19",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "10078:6:19"
																				}
																			],
																			"functionName": {
																				"name": "array_nextElement_t_array$_t_struct$_existsOut_$2281_memory_ptr_$dyn_memory_ptr",
																				"nodeType": "YulIdentifier",
																				"src": "9998:79:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9998:87:19"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "9988:6:19"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "9752:1:19"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "9755:6:19"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "9749:2:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "9749:13:19"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "9763:18:19",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "9765:14:19",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "9774:1:19"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9777:1:19",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "9770:3:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9770:9:19"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "9765:1:19"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "9734:14:19",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "9736:10:19",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "9745:1:19",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nodeType": "YulTypedName",
																				"src": "9740:1:19",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "9730:365:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10104:10:19",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "10111:3:19"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "10104:3:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_array$_t_struct$_existsOut_$2281_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_existsOut_$2281_memory_ptr_$dyn_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9329:5:19",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9336:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "9345:3:19",
														"type": ""
													}
												],
												"src": "9172:948:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10382:764:19",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10392:94:19",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10480:5:19"
																	}
																],
																"functionName": {
																	"name": "array_length_t_array$_t_struct$_priceOut_$2261_memory_ptr_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "10406:73:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "10406:80:19"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "10396:6:19",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10495:119:19",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10602:3:19"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10607:6:19"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_array$_t_struct$_priceOut_$2261_memory_ptr_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10502:99:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "10502:112:19"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "10495:3:19"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10623:97:19",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10714:5:19"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_t_array$_t_struct$_priceOut_$2261_memory_ptr_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "10638:75:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "10638:82:19"
															},
															"variables": [
																{
																	"name": "baseRef",
																	"nodeType": "YulTypedName",
																	"src": "10627:7:19",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10729:21:19",
															"value": {
																"name": "baseRef",
																"nodeType": "YulIdentifier",
																"src": "10743:7:19"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "10733:6:19",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10819:302:19",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "10833:34:19",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "10860:6:19"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "10854:5:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10854:13:19"
																		},
																		"variables": [
																			{
																				"name": "elementValue0",
																				"nodeType": "YulTypedName",
																				"src": "10837:13:19",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "10880:122:19",
																		"value": {
																			"arguments": [
																				{
																					"name": "elementValue0",
																					"nodeType": "YulIdentifier",
																					"src": "10983:13:19"
																				},
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "10998:3:19"
																				}
																			],
																			"functionName": {
																				"name": "abi_encodeUpdatedPos_t_struct$_priceOut_$2261_memory_ptr_to_t_struct$_priceOut_$2261_memory_ptr",
																				"nodeType": "YulIdentifier",
																				"src": "10887:95:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10887:115:19"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "10880:3:19"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "11015:96:19",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "11104:6:19"
																				}
																			],
																			"functionName": {
																				"name": "array_nextElement_t_array$_t_struct$_priceOut_$2261_memory_ptr_$dyn_memory_ptr",
																				"nodeType": "YulIdentifier",
																				"src": "11025:78:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11025:86:19"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "11015:6:19"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "10781:1:19"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10784:6:19"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "10778:2:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "10778:13:19"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "10792:18:19",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "10794:14:19",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "10803:1:19"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10806:1:19",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "10799:3:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10799:9:19"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "10794:1:19"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "10763:14:19",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "10765:10:19",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "10774:1:19",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nodeType": "YulTypedName",
																				"src": "10769:1:19",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "10759:362:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11130:10:19",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "11137:3:19"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "11130:3:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_array$_t_struct$_priceOut_$2261_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_priceOut_$2261_memory_ptr_$dyn_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10361:5:19",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10368:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "10377:3:19",
														"type": ""
													}
												],
												"src": "10206:940:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11201:50:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11218:3:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "11238:5:19"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "11223:14:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11223:21:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11211:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "11211:34:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11211:34:19"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11189:5:19",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11196:3:19",
														"type": ""
													}
												],
												"src": "11152:99:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11445:388:19",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11455:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11471:3:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11476:4:19",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11467:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "11467:14:19"
															},
															"variables": [
																{
																	"name": "tail",
																	"nodeType": "YulTypedName",
																	"src": "11459:4:19",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "11491:165:19",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "11527:43:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "11557:5:19"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "11564:4:19",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "11553:3:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11553:16:19"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "11547:5:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11547:23:19"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "11531:12:19",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "11617:12:19"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "11635:3:19"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "11640:4:19",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "11631:3:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11631:14:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "11583:33:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11583:63:19"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "11583:63:19"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "11666:160:19",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "11703:43:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "11733:5:19"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "11740:4:19",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "11729:3:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11729:16:19"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "11723:5:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11723:23:19"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "11707:12:19",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "11787:12:19"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "11805:3:19"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "11810:4:19",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "11801:3:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11801:14:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_bool_to_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "11759:27:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11759:57:19"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "11759:57:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_struct$_existsOut_$2281_memory_ptr_to_t_struct$_existsOut_$2281_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11432:5:19",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11439:3:19",
														"type": ""
													}
												],
												"src": "11335:498:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12023:564:19",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12033:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12049:3:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12054:4:19",
																		"type": "",
																		"value": "0x60"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12045:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "12045:14:19"
															},
															"variables": [
																{
																	"name": "tail",
																	"nodeType": "YulTypedName",
																	"src": "12037:4:19",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "12069:165:19",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "12105:43:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "12135:5:19"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "12142:4:19",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "12131:3:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12131:16:19"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "12125:5:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12125:23:19"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "12109:12:19",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "12195:12:19"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "12213:3:19"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "12218:4:19",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "12209:3:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12209:14:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "12161:33:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12161:63:19"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "12161:63:19"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "12244:165:19",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "12280:43:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "12310:5:19"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "12317:4:19",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "12306:3:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12306:16:19"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "12300:5:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12300:23:19"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "12284:12:19",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "12370:12:19"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "12388:3:19"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "12393:4:19",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "12384:3:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12384:14:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "12336:33:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12336:63:19"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "12336:63:19"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "12419:161:19",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "12453:43:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "12483:5:19"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "12490:4:19",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "12479:3:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12479:16:19"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "12473:5:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12473:23:19"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "12457:12:19",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "12541:12:19"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "12559:3:19"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "12564:4:19",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "12555:3:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12555:14:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint24_to_t_uint24",
																			"nodeType": "YulIdentifier",
																			"src": "12509:31:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12509:61:19"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "12509:61:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_struct$_priceOut_$2261_memory_ptr_to_t_struct$_priceOut_$2261_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12010:5:19",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "12017:3:19",
														"type": ""
													}
												],
												"src": "11915:672:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12646:52:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12663:3:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "12685:5:19"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint24",
																			"nodeType": "YulIdentifier",
																			"src": "12668:16:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12668:23:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12656:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "12656:36:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12656:36:19"
														}
													]
												},
												"name": "abi_encode_t_uint24_to_t_uint24",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12634:5:19",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "12641:3:19",
														"type": ""
													}
												],
												"src": "12593:105:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12767:52:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12784:3:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "12806:5:19"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint24",
																			"nodeType": "YulIdentifier",
																			"src": "12789:16:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12789:23:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12777:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "12777:36:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12777:36:19"
														}
													]
												},
												"name": "abi_encode_t_uint24_to_t_uint24_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12755:5:19",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "12762:3:19",
														"type": ""
													}
												],
												"src": "12704:115:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12880:53:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12897:3:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "12920:5:19"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "12902:17:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12902:24:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12890:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "12890:37:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12890:37:19"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12868:5:19",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "12875:3:19",
														"type": ""
													}
												],
												"src": "12825:108:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13004:53:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13021:3:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "13044:5:19"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "13026:17:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13026:24:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13014:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "13014:37:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13014:37:19"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12992:5:19",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "12999:3:19",
														"type": ""
													}
												],
												"src": "12939:118:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13136:53:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13153:3:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "13176:5:19"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "13158:17:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13158:24:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13146:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "13146:37:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13146:37:19"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack_library",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13124:5:19",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "13131:3:19",
														"type": ""
													}
												],
												"src": "13063:126:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13357:312:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13367:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13379:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13390:2:19",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13375:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "13375:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13367:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "13455:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13468:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13479:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13464:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13464:17:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack_library",
																	"nodeType": "YulIdentifier",
																	"src": "13403:51:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "13403:79:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13403:79:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "13544:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13557:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13568:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13553:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13553:18:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack_library",
																	"nodeType": "YulIdentifier",
																	"src": "13492:51:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "13492:80:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13492:80:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "13634:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13647:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13658:2:19",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13643:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13643:18:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack_library",
																	"nodeType": "YulIdentifier",
																	"src": "13582:51:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "13582:80:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13582:80:19"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_address__to_t_address_t_address_t_address__fromStack_library_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13313:9:19",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "13325:6:19",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "13333:6:19",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "13341:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13352:4:19",
														"type": ""
													}
												],
												"src": "13195:474:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13865:403:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13875:27:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13887:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13898:3:19",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13883:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "13883:19:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13875:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "13964:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13977:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13988:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13973:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13973:17:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack_library",
																	"nodeType": "YulIdentifier",
																	"src": "13912:51:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "13912:79:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13912:79:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "14053:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14066:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14077:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14062:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14062:18:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack_library",
																	"nodeType": "YulIdentifier",
																	"src": "14001:51:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "14001:80:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14001:80:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "14143:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14156:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14167:2:19",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14152:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14152:18:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack_library",
																	"nodeType": "YulIdentifier",
																	"src": "14091:51:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "14091:80:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14091:80:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "14233:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14246:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14257:2:19",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14242:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14242:18:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack_library",
																	"nodeType": "YulIdentifier",
																	"src": "14181:51:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "14181:80:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14181:80:19"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_address_t_uint256__to_t_address_t_address_t_address_t_uint256__fromStack_library_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13813:9:19",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "13825:6:19",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "13833:6:19",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "13841:6:19",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "13849:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13860:4:19",
														"type": ""
													}
												],
												"src": "13675:593:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14492:494:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14502:27:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14514:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14525:3:19",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14510:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "14510:19:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14502:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "14591:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14604:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14615:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14600:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14600:17:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack_library",
																	"nodeType": "YulIdentifier",
																	"src": "14539:51:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "14539:79:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14539:79:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "14680:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14693:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14704:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14689:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14689:18:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack_library",
																	"nodeType": "YulIdentifier",
																	"src": "14628:51:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "14628:80:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14628:80:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "14770:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14783:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14794:2:19",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14779:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14779:18:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack_library",
																	"nodeType": "YulIdentifier",
																	"src": "14718:51:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "14718:80:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14718:80:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "14860:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14873:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14884:2:19",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14869:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14869:18:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack_library",
																	"nodeType": "YulIdentifier",
																	"src": "14808:51:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "14808:80:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14808:80:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "14950:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14963:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14974:3:19",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14959:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14959:19:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack_library",
																	"nodeType": "YulIdentifier",
																	"src": "14898:51:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "14898:81:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14898:81:19"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_address_t_uint256_t_uint256__to_t_address_t_address_t_address_t_uint256_t_uint256__fromStack_library_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14432:9:19",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "14444:6:19",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "14452:6:19",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "14460:6:19",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "14468:6:19",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "14476:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14487:4:19",
														"type": ""
													}
												],
												"src": "14274:712:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15194:279:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15204:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15216:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15227:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15212:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "15212:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15204:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15251:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15262:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15247:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15247:17:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "15270:4:19"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15276:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "15266:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15266:20:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15240:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "15240:47:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15240:47:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15296:170:19",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "15452:6:19"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "15461:4:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_struct$_existsOut_$2281_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_existsOut_$2281_memory_ptr_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15304:147:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "15304:162:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15296:4:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_struct$_existsOut_$2281_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_existsOut_$2281_memory_ptr_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15166:9:19",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "15178:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15189:4:19",
														"type": ""
													}
												],
												"src": "14992:481:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15679:277:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15689:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15701:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15712:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15697:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "15697:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15689:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15736:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15747:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15732:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15732:17:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "15755:4:19"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15761:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "15751:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15751:20:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15725:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "15725:47:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15725:47:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15781:168:19",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "15935:6:19"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "15944:4:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_struct$_priceOut_$2261_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_priceOut_$2261_memory_ptr_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15789:145:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "15789:160:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15781:4:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_struct$_priceOut_$2261_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_priceOut_$2261_memory_ptr_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15651:9:19",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "15663:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15674:4:19",
														"type": ""
													}
												],
												"src": "15479:477:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16086:204:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16096:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16108:9:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16119:2:19",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16104:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "16104:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16096:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "16176:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16189:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16200:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16185:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16185:17:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16132:43:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "16132:71:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16132:71:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "16255:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16268:9:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16279:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16264:3:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16264:18:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint24_to_t_uint24_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16213:41:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "16213:70:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16213:70:19"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint24__to_t_uint256_t_uint24__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16050:9:19",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "16062:6:19",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "16070:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16081:4:19",
														"type": ""
													}
												],
												"src": "15962:328:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16336:238:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16346:19:19",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16362:2:19",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "16356:5:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "16356:9:19"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "16346:6:19"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "16374:35:19",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "16396:6:19"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "16404:4:19"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16392:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "16392:17:19"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "16378:10:19",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "16520:17:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error",
																				"nodeType": "YulIdentifier",
																				"src": "16522:11:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "16522:13:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "16522:13:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "16463:10:19"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16475:18:19",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "16460:2:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16460:34:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "16499:10:19"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "16511:6:19"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "16496:2:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16496:22:19"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "16457:2:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "16457:62:19"
															},
															"nodeType": "YulIf",
															"src": "16454:2:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16553:2:19",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "16557:10:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16546:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "16546:22:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16546:22:19"
														}
													]
												},
												"name": "allocateMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "16320:4:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "16329:6:19",
														"type": ""
													}
												],
												"src": "16296:278:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16688:224:19",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "16793:17:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error",
																				"nodeType": "YulIdentifier",
																				"src": "16795:11:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "16795:13:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "16795:13:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "16765:6:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16773:18:19",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "16762:2:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "16762:30:19"
															},
															"nodeType": "YulIf",
															"src": "16759:2:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16820:25:19",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "16832:6:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16840:4:19",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "16828:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "16828:17:19"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "16820:4:19"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "16882:23:19",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "16894:4:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16900:4:19",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16890:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "16890:15:19"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "16882:4:19"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_array$_t_struct$_existsIn_$2276_memory_ptr_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "16672:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "16683:4:19",
														"type": ""
													}
												],
												"src": "16580:332:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17025:224:19",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "17130:17:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error",
																				"nodeType": "YulIdentifier",
																				"src": "17132:11:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "17132:13:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "17132:13:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "17102:6:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17110:18:19",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "17099:2:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "17099:30:19"
															},
															"nodeType": "YulIf",
															"src": "17096:2:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17157:25:19",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "17169:6:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17177:4:19",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "17165:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "17165:17:19"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "17157:4:19"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "17219:23:19",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "17231:4:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17237:4:19",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17227:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "17227:15:19"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "17219:4:19"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_array$_t_struct$_priceIn_$2254_memory_ptr_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "17009:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "17020:4:19",
														"type": ""
													}
												],
												"src": "16918:331:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17354:60:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17364:11:19",
															"value": {
																"name": "ptr",
																"nodeType": "YulIdentifier",
																"src": "17372:3:19"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "17364:4:19"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "17385:22:19",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "17397:3:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17402:4:19",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17393:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "17393:14:19"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "17385:4:19"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_array$_t_struct$_existsOut_$2281_memory_ptr_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "17341:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "17349:4:19",
														"type": ""
													}
												],
												"src": "17255:159:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17518:60:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17528:11:19",
															"value": {
																"name": "ptr",
																"nodeType": "YulIdentifier",
																"src": "17536:3:19"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "17528:4:19"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "17549:22:19",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "17561:3:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17566:4:19",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17557:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "17557:14:19"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "17549:4:19"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_array$_t_struct$_priceOut_$2261_memory_ptr_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "17505:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "17513:4:19",
														"type": ""
													}
												],
												"src": "17420:158:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17685:40:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17696:22:19",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "17712:5:19"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "17706:5:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "17706:12:19"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "17696:6:19"
																}
															]
														}
													]
												},
												"name": "array_length_t_array$_t_struct$_existsOut_$2281_memory_ptr_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "17668:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "17678:6:19",
														"type": ""
													}
												],
												"src": "17584:141:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17831:40:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17842:22:19",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "17858:5:19"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "17852:5:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "17852:12:19"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "17842:6:19"
																}
															]
														}
													]
												},
												"name": "array_length_t_array$_t_struct$_priceOut_$2261_memory_ptr_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "17814:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "17824:6:19",
														"type": ""
													}
												],
												"src": "17731:140:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17979:38:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17989:22:19",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "18001:3:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18006:4:19",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17997:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "17997:14:19"
															},
															"variableNames": [
																{
																	"name": "next",
																	"nodeType": "YulIdentifier",
																	"src": "17989:4:19"
																}
															]
														}
													]
												},
												"name": "array_nextElement_t_array$_t_struct$_existsOut_$2281_memory_ptr_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "17966:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "next",
														"nodeType": "YulTypedName",
														"src": "17974:4:19",
														"type": ""
													}
												],
												"src": "17877:140:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18124:38:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18134:22:19",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "18146:3:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18151:4:19",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18142:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "18142:14:19"
															},
															"variableNames": [
																{
																	"name": "next",
																	"nodeType": "YulIdentifier",
																	"src": "18134:4:19"
																}
															]
														}
													]
												},
												"name": "array_nextElement_t_array$_t_struct$_priceOut_$2261_memory_ptr_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "18111:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "next",
														"nodeType": "YulTypedName",
														"src": "18119:4:19",
														"type": ""
													}
												],
												"src": "18023:139:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18306:73:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18323:3:19"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "18328:6:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18316:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "18316:19:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18316:19:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18344:29:19",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18363:3:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18368:4:19",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18359:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "18359:14:19"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "18344:11:19"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_array$_t_struct$_existsOut_$2281_memory_ptr_$dyn_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "18278:3:19",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "18283:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "18294:11:19",
														"type": ""
													}
												],
												"src": "18168:211:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18522:73:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18539:3:19"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "18544:6:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18532:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "18532:19:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18532:19:19"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18560:29:19",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18579:3:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18584:4:19",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18575:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "18575:14:19"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "18560:11:19"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_array$_t_struct$_priceOut_$2261_memory_ptr_$dyn_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "18494:3:19",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "18499:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "18510:11:19",
														"type": ""
													}
												],
												"src": "18385:210:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18646:51:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18656:35:19",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "18685:5:19"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "18667:17:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "18667:24:19"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "18656:7:19"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "18628:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "18638:7:19",
														"type": ""
													}
												],
												"src": "18601:96:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18745:48:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18755:32:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "18780:5:19"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "18773:6:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18773:13:19"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "18766:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "18766:21:19"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "18755:7:19"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "18727:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "18737:7:19",
														"type": ""
													}
												],
												"src": "18703:90:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18844:81:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18854:65:19",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "18869:5:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18876:42:19",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "18865:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "18865:54:19"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "18854:7:19"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "18826:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "18836:7:19",
														"type": ""
													}
												],
												"src": "18799:126:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18975:47:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18985:31:19",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "19000:5:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19007:8:19",
																		"type": "",
																		"value": "0xffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "18996:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "18996:20:19"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "18985:7:19"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint24",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "18957:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "18967:7:19",
														"type": ""
													}
												],
												"src": "18931:91:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19073:32:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19083:16:19",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "19094:5:19"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "19083:7:19"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "19055:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "19065:7:19",
														"type": ""
													}
												],
												"src": "19028:77:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19154:43:19",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19164:27:19",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "19179:5:19"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19186:4:19",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "19175:3:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "19175:16:19"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "19164:7:19"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "19136:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "19146:7:19",
														"type": ""
													}
												],
												"src": "19111:86:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19226:25:19",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"functionName": {
																	"name": "invalid",
																	"nodeType": "YulIdentifier",
																	"src": "19236:7:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "19236:9:19"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19236:9:19"
														}
													]
												},
												"name": "panic_error",
												"nodeType": "YulFunctionDefinition",
												"src": "19203:48:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19300:79:19",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "19357:16:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "19366:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "19369:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "19359:6:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "19359:12:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "19359:12:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "19323:5:19"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "19348:5:19"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "19330:17:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "19330:24:19"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "19320:2:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19320:35:19"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "19313:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "19313:43:19"
															},
															"nodeType": "YulIf",
															"src": "19310:2:19"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "19293:5:19",
														"type": ""
													}
												],
												"src": "19257:122:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19425:76:19",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "19479:16:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "19488:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "19491:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "19481:6:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "19481:12:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "19481:12:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "19448:5:19"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "19470:5:19"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "19455:14:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "19455:21:19"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "19445:2:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19445:32:19"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "19438:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "19438:40:19"
															},
															"nodeType": "YulIf",
															"src": "19435:2:19"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "19418:5:19",
														"type": ""
													}
												],
												"src": "19385:116:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19549:78:19",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "19605:16:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "19614:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "19617:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "19607:6:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "19607:12:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "19607:12:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "19572:5:19"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "19596:5:19"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint24",
																					"nodeType": "YulIdentifier",
																					"src": "19579:16:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "19579:23:19"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "19569:2:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19569:34:19"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "19562:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "19562:42:19"
															},
															"nodeType": "YulIf",
															"src": "19559:2:19"
														}
													]
												},
												"name": "validator_revert_t_uint24",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "19542:5:19",
														"type": ""
													}
												],
												"src": "19507:120:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19676:79:19",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "19733:16:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "19742:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "19745:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "19735:6:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "19735:12:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "19735:12:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "19699:5:19"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "19724:5:19"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "19706:17:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "19706:24:19"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "19696:2:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19696:35:19"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "19689:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "19689:43:19"
															},
															"nodeType": "YulIf",
															"src": "19686:2:19"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "19669:5:19",
														"type": ""
													}
												],
												"src": "19633:122:19"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19802:77:19",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "19857:16:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "19866:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "19869:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "19859:6:19"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "19859:12:19"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "19859:12:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "19825:5:19"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "19848:5:19"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint8",
																					"nodeType": "YulIdentifier",
																					"src": "19832:15:19"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "19832:22:19"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "19822:2:19"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19822:33:19"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "19815:6:19"
																},
																"nodeType": "YulFunctionCall",
																"src": "19815:41:19"
															},
															"nodeType": "YulIf",
															"src": "19812:2:19"
														}
													]
												},
												"name": "validator_revert_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "19795:5:19",
														"type": ""
													}
												],
												"src": "19761:118:19"
											}
										]
									},
									"contents": "{\n\n    // struct IPriceAggregator.existsIn[]\n    function abi_decode_available_length_t_array$_t_struct$_existsIn_$2276_memory_ptr_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocateMemory(array_allocation_size_t_array$_t_struct$_existsIn_$2276_memory_ptr_$dyn_memory_ptr(length))\n        let dst := array\n        mstore(array, length) dst := add(array, 0x20)\n        let src := offset\n        if gt(add(src, mul(length, 0xe0)), end) { revert(0, 0) }\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementPos := src\n            mstore(dst, abi_decode_t_struct$_existsIn_$2276_memory_ptr(elementPos, end))\n            dst := add(dst, 0x20)\n            src := add(src, 0xe0)\n        }\n    }\n\n    // struct IPriceAggregator.priceIn[]\n    function abi_decode_available_length_t_array$_t_struct$_priceIn_$2254_memory_ptr_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocateMemory(array_allocation_size_t_array$_t_struct$_priceIn_$2254_memory_ptr_$dyn_memory_ptr(length))\n        let dst := array\n        mstore(array, length) dst := add(array, 0x20)\n        let src := offset\n        if gt(add(src, mul(length, 0xa0)), end) { revert(0, 0) }\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementPos := src\n            mstore(dst, abi_decode_t_struct$_priceIn_$2254_memory_ptr(elementPos, end))\n            dst := add(dst, 0x20)\n            src := add(src, 0xa0)\n        }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    // struct IPriceAggregator.existsIn[]\n    function abi_decode_t_array$_t_struct$_existsIn_$2276_memory_ptr_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_struct$_existsIn_$2276_memory_ptr_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    // struct IPriceAggregator.priceIn[]\n    function abi_decode_t_array$_t_struct$_priceIn_$2254_memory_ptr_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_struct$_priceIn_$2254_memory_ptr_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    // struct IPriceAggregator.existsIn\n    function abi_decode_t_struct$_existsIn_$2276_memory_ptr(headStart, end) -> value {\n        if slt(sub(end, headStart), 0xe0) { revert(0, 0) }\n        value := allocateMemory(0xe0)\n\n        {\n            // index\n\n            let offset := 0\n\n            mstore(add(value, 0x00), abi_decode_t_uint256(add(headStart, offset), end))\n\n        }\n\n        {\n            // t0\n\n            let offset := 32\n\n            mstore(add(value, 0x20), abi_decode_t_address(add(headStart, offset), end))\n\n        }\n\n        {\n            // t1\n\n            let offset := 64\n\n            mstore(add(value, 0x40), abi_decode_t_address(add(headStart, offset), end))\n\n        }\n\n        {\n            // provider\n\n            let offset := 96\n\n            mstore(add(value, 0x60), abi_decode_t_address(add(headStart, offset), end))\n\n        }\n\n        {\n            // providerVersion\n\n            let offset := 128\n\n            mstore(add(value, 0x80), abi_decode_t_uint8(add(headStart, offset), end))\n\n        }\n\n        {\n            // min0\n\n            let offset := 160\n\n            mstore(add(value, 0xa0), abi_decode_t_uint256(add(headStart, offset), end))\n\n        }\n\n        {\n            // min1\n\n            let offset := 192\n\n            mstore(add(value, 0xc0), abi_decode_t_uint256(add(headStart, offset), end))\n\n        }\n\n    }\n\n    // struct IPriceAggregator.priceIn\n    function abi_decode_t_struct$_priceIn_$2254_memory_ptr(headStart, end) -> value {\n        if slt(sub(end, headStart), 0xa0) { revert(0, 0) }\n        value := allocateMemory(0xa0)\n\n        {\n            // index\n\n            let offset := 0\n\n            mstore(add(value, 0x00), abi_decode_t_uint256(add(headStart, offset), end))\n\n        }\n\n        {\n            // t0\n\n            let offset := 32\n\n            mstore(add(value, 0x20), abi_decode_t_address(add(headStart, offset), end))\n\n        }\n\n        {\n            // t1\n\n            let offset := 64\n\n            mstore(add(value, 0x40), abi_decode_t_address(add(headStart, offset), end))\n\n        }\n\n        {\n            // provider\n\n            let offset := 96\n\n            mstore(add(value, 0x60), abi_decode_t_address(add(headStart, offset), end))\n\n        }\n\n        {\n            // providerVersion\n\n            let offset := 128\n\n            mstore(add(value, 0x80), abi_decode_t_uint8(add(headStart, offset), end))\n\n        }\n\n    }\n\n    function abi_decode_t_uint24_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint24(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_t_uint8(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint8(value)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_addresst_uint256t_uint8(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint8(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_array$_t_struct$_existsIn_$2276_memory_ptr_$dyn_memory_ptr(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n\n            value0 := abi_decode_t_array$_t_struct$_existsIn_$2276_memory_ptr_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_array$_t_struct$_priceIn_$2254_memory_ptr_$dyn_memory_ptr(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n\n            value0 := abi_decode_t_array$_t_struct$_priceIn_$2254_memory_ptr_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint24_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint24_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encodeUpdatedPos_t_struct$_existsOut_$2281_memory_ptr_to_t_struct$_existsOut_$2281_memory_ptr(value0, pos) -> updatedPos {\n        abi_encode_t_struct$_existsOut_$2281_memory_ptr_to_t_struct$_existsOut_$2281_memory_ptr(value0, pos)\n        updatedPos := add(pos, 0x40)\n    }\n\n    function abi_encodeUpdatedPos_t_struct$_priceOut_$2261_memory_ptr_to_t_struct$_priceOut_$2261_memory_ptr(value0, pos) -> updatedPos {\n        abi_encode_t_struct$_priceOut_$2261_memory_ptr_to_t_struct$_priceOut_$2261_memory_ptr(value0, pos)\n        updatedPos := add(pos, 0x60)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack_library(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    // struct IPriceAggregator.existsOut[] -> struct IPriceAggregator.existsOut[]\n    function abi_encode_t_array$_t_struct$_existsOut_$2281_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_existsOut_$2281_memory_ptr_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_struct$_existsOut_$2281_memory_ptr_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_struct$_existsOut_$2281_memory_ptr_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_struct$_existsOut_$2281_memory_ptr_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_struct$_existsOut_$2281_memory_ptr_to_t_struct$_existsOut_$2281_memory_ptr(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_struct$_existsOut_$2281_memory_ptr_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    // struct IPriceAggregator.priceOut[] -> struct IPriceAggregator.priceOut[]\n    function abi_encode_t_array$_t_struct$_priceOut_$2261_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_priceOut_$2261_memory_ptr_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_struct$_priceOut_$2261_memory_ptr_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_struct$_priceOut_$2261_memory_ptr_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_struct$_priceOut_$2261_memory_ptr_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_struct$_priceOut_$2261_memory_ptr_to_t_struct$_priceOut_$2261_memory_ptr(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_struct$_priceOut_$2261_memory_ptr_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_t_bool_to_t_bool(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    // struct IPriceAggregator.existsOut -> struct IPriceAggregator.existsOut\n    function abi_encode_t_struct$_existsOut_$2281_memory_ptr_to_t_struct$_existsOut_$2281_memory_ptr(value, pos)  {\n        let tail := add(pos, 0x40)\n\n        {\n            // index\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // exists\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_bool_to_t_bool(memberValue0, add(pos, 0x20))\n        }\n\n    }\n\n    // struct IPriceAggregator.priceOut -> struct IPriceAggregator.priceOut\n    function abi_encode_t_struct$_priceOut_$2261_memory_ptr_to_t_struct$_priceOut_$2261_memory_ptr(value, pos)  {\n        let tail := add(pos, 0x60)\n\n        {\n            // index\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // price\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // fee\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_uint24_to_t_uint24(memberValue0, add(pos, 0x40))\n        }\n\n    }\n\n    function abi_encode_t_uint24_to_t_uint24(value, pos) {\n        mstore(pos, cleanup_t_uint24(value))\n    }\n\n    function abi_encode_t_uint24_to_t_uint24_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint24(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack_library(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_address__to_t_address_t_address_t_address__fromStack_library_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack_library(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack_library(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack_library(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_address_t_uint256__to_t_address_t_address_t_address_t_uint256__fromStack_library_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack_library(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack_library(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack_library(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack_library(value3,  add(headStart, 96))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_address_t_uint256_t_uint256__to_t_address_t_address_t_address_t_uint256_t_uint256__fromStack_library_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_address_to_t_address_fromStack_library(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack_library(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack_library(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack_library(value3,  add(headStart, 96))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack_library(value4,  add(headStart, 128))\n\n    }\n\n    function abi_encode_tuple_t_array$_t_struct$_existsOut_$2281_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_existsOut_$2281_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_struct$_existsOut_$2281_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_existsOut_$2281_memory_ptr_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_array$_t_struct$_priceOut_$2261_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_priceOut_$2261_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_struct$_priceOut_$2261_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_priceOut_$2261_memory_ptr_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint24__to_t_uint256_t_uint24__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint24_to_t_uint24_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function allocateMemory(size) -> memPtr {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, size)\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error() }\n        mstore(64, newFreePtr)\n    }\n\n    function array_allocation_size_t_array$_t_struct$_existsIn_$2276_memory_ptr_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function array_allocation_size_t_array$_t_struct$_priceIn_$2254_memory_ptr_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function array_dataslot_t_array$_t_struct$_existsOut_$2281_memory_ptr_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function array_dataslot_t_array$_t_struct$_priceOut_$2261_memory_ptr_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function array_length_t_array$_t_struct$_existsOut_$2281_memory_ptr_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_length_t_array$_t_struct$_priceOut_$2261_memory_ptr_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_nextElement_t_array$_t_struct$_existsOut_$2281_memory_ptr_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_struct$_priceOut_$2261_memory_ptr_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_struct$_existsOut_$2281_memory_ptr_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_struct$_priceOut_$2261_memory_ptr_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint24(value) -> cleaned {\n        cleaned := and(value, 0xffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function panic_error() {\n        invalid()\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint24(value) {\n        if iszero(eq(value, cleanup_t_uint24(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint8(value) {\n        if iszero(eq(value, cleanup_t_uint8(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 19,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {
								"contracts/libraries/UniswapV2.sol": {
									"UniswapV2": [
										{
											"length": 20,
											"start": 355
										},
										{
											"length": 20,
											"start": 1092
										},
										{
											"length": 20,
											"start": 1554
										}
									]
								},
								"contracts/libraries/UniswapV3.sol": {
									"UniswapV3": [
										{
											"length": 20,
											"start": 723
										},
										{
											"length": 20,
											"start": 1256
										},
										{
											"length": 20,
											"start": 1887
										}
									]
								}
							},
							"object": "608060405234801561001057600080fd5b50600436106100415760003560e01c80633d157a46146100465780636110358d14610076578063ea8650c5146100a7575b600080fd5b610060600480360381019061005b9190610c34565b6100d7565b60405161006d9190610fd9565b60405180910390f35b610090600480360381019061008b9190610bbd565b610433565b60405161009e92919061101d565b60405180910390f35b6100c160048036038101906100bc9190610c75565b610586565b6040516100ce9190610ffb565b60405180910390f35b60606000825167ffffffffffffffff811180156100f357600080fd5b5060405190808252806020026020018201604052801561012d57816020015b61011a610899565b8152602001906001900390816101125790505b50905060005b835181101561042957600284828151811061014a57fe5b60200260200101516080015160ff1614156102ac57600073__$66db80e837caed232b747c0dfa8ba195e8$__63bcbcaa2986848151811061018757fe5b60200260200101516060015187858151811061019f57fe5b6020026020010151602001518886815181106101b757fe5b6020026020010151604001518987815181106101cf57fe5b602002602001015160a001518a88815181106101e757fe5b602002602001015160c001516040518663ffffffff1660e01b8152600401610213959493929190610f86565b60206040518083038186803b15801561022b57600080fd5b505af415801561023f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102639190610cb6565b9050604051806040016040528086848151811061027c57fe5b602002602001015160000151815260200182151581525083838151811061029f57fe5b6020026020010181905250505b60038482815181106102ba57fe5b60200260200101516080015160ff16141561041c57600073__$295ab41254e875e078eae9a73e9e2c34b1$__63bcbcaa298684815181106102f757fe5b60200260200101516060015187858151811061030f57fe5b60200260200101516020015188868151811061032757fe5b60200260200101516040015189878151811061033f57fe5b602002602001015160a001518a888151811061035757fe5b602002602001015160c001516040518663ffffffff1660e01b8152600401610383959493929190610f86565b60206040518083038186803b15801561039b57600080fd5b505af41580156103af573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103d39190610cb6565b905060405180604001604052808684815181106103ec57fe5b602002602001015160000151815260200182151581525083838151811061040f57fe5b6020026020010181905250505b8080600101915050610133565b5080915050919050565b60008060028360ff1614156104da5773__$66db80e837caed232b747c0dfa8ba195e8$__638c39560e888888886040518563ffffffff1660e01b815260040161047f9493929190610f41565b60206040518083038186803b15801561049757600080fd5b505af41580156104ab573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104cf9190610cdf565b60009150915061057c565b60038360ff16141561057b5773__$295ab41254e875e078eae9a73e9e2c34b1$__638c39560e888888886040518563ffffffff1660e01b81526004016105239493929190610f41565b604080518083038186803b15801561053a57600080fd5b505af415801561054e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105729190610d08565b9150915061057c565b5b9550959350505050565b60606000825167ffffffffffffffff811180156105a257600080fd5b506040519080825280602002602001820160405280156105dc57816020015b6105c96108b5565b8152602001906001900390816105c15790505b50905060005b835181101561088f5760028482815181106105f957fe5b60200260200101516080015160ff16141561073757600073__$66db80e837caed232b747c0dfa8ba195e8$__63c361e0b186848151811061063657fe5b60200260200101516060015187858151811061064e57fe5b60200260200101516020015188868151811061066657fe5b6020026020010151604001516040518463ffffffff1660e01b815260040161069093929190610f0a565b60206040518083038186803b1580156106a857600080fd5b505af41580156106bc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106e09190610cdf565b905060405180606001604052808684815181106106f957fe5b6020026020010151600001518152602001828152602001600062ffffff1681525083838151811061072657fe5b602002602001018190525050610882565b600384828151811061074557fe5b60200260200101516080015160ff1614156108815760008073__$295ab41254e875e078eae9a73e9e2c34b1$__63c361e0b187858151811061078357fe5b60200260200101516060015188868151811061079b57fe5b6020026020010151602001518987815181106107b357fe5b6020026020010151604001516040518463ffffffff1660e01b81526004016107dd93929190610f0a565b604080518083038186803b1580156107f457600080fd5b505af4158015610808573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061082c9190610d08565b91509150604051806060016040528087858151811061084757fe5b60200260200101516000015181526020018381526020018262ffffff1681525084848151811061087357fe5b602002602001018190525050505b5b80806001019150506105e2565b5080915050919050565b6040518060400160405280600081526020016000151581525090565b60405180606001604052806000815260200160008152602001600062ffffff1681525090565b60006108ee6108e984611077565b611046565b905080838252602082019050828560e086028201111561090d57600080fd5b60005b8581101561093d57816109238882610a31565b845260208401935060e08301925050600181019050610910565b5050509392505050565b600061095a610955846110a3565b611046565b905080838252602082019050828560a086028201111561097957600080fd5b60005b858110156109a9578161098f8882610ae1565b845260208401935060a0830192505060018101905061097c565b5050509392505050565b6000813590506109c2816111a7565b92915050565b600082601f8301126109d957600080fd5b81356109e98482602086016108db565b91505092915050565b600082601f830112610a0357600080fd5b8135610a13848260208601610947565b91505092915050565b600081519050610a2b816111be565b92915050565b600060e08284031215610a4357600080fd5b610a4d60e0611046565b90506000610a5d84828501610b7e565b6000830152506020610a71848285016109b3565b6020830152506040610a85848285016109b3565b6040830152506060610a99848285016109b3565b6060830152506080610aad84828501610ba8565b60808301525060a0610ac184828501610b7e565b60a08301525060c0610ad584828501610b7e565b60c08301525092915050565b600060a08284031215610af357600080fd5b610afd60a0611046565b90506000610b0d84828501610b7e565b6000830152506020610b21848285016109b3565b6020830152506040610b35848285016109b3565b6040830152506060610b49848285016109b3565b6060830152506080610b5d84828501610ba8565b60808301525092915050565b600081519050610b78816111d5565b92915050565b600081359050610b8d816111ec565b92915050565b600081519050610ba2816111ec565b92915050565b600081359050610bb781611203565b92915050565b600080600080600060a08688031215610bd557600080fd5b6000610be3888289016109b3565b9550506020610bf4888289016109b3565b9450506040610c05888289016109b3565b9350506060610c1688828901610b7e565b9250506080610c2788828901610ba8565b9150509295509295909350565b600060208284031215610c4657600080fd5b600082013567ffffffffffffffff811115610c6057600080fd5b610c6c848285016109c8565b91505092915050565b600060208284031215610c8757600080fd5b600082013567ffffffffffffffff811115610ca157600080fd5b610cad848285016109f2565b91505092915050565b600060208284031215610cc857600080fd5b6000610cd684828501610a1c565b91505092915050565b600060208284031215610cf157600080fd5b6000610cff84828501610b93565b91505092915050565b60008060408385031215610d1b57600080fd5b6000610d2985828601610b93565b9250506020610d3a85828601610b69565b9150509250929050565b6000610d508383610e4e565b60408301905092915050565b6000610d688383610e7d565b60608301905092915050565b610d7d81611141565b82525050565b6000610d8e826110ef565b610d98818561111f565b9350610da3836110cf565b8060005b83811015610dd4578151610dbb8882610d44565b9750610dc683611105565b925050600181019050610da7565b5085935050505092915050565b6000610dec826110fa565b610df68185611130565b9350610e01836110df565b8060005b83811015610e32578151610e198882610d5c565b9750610e2483611112565b925050600181019050610e05565b5085935050505092915050565b610e4881611153565b82525050565b604082016000820151610e646000850182610edd565b506020820151610e776020850182610e3f565b50505050565b606082016000820151610e936000850182610edd565b506020820151610ea66020850182610edd565b506040820151610eb96040850182610ebf565b50505050565b610ec88161117f565b82525050565b610ed78161117f565b82525050565b610ee68161118e565b82525050565b610ef58161118e565b82525050565b610f048161118e565b82525050565b6000606082019050610f1f6000830186610d74565b610f2c6020830185610d74565b610f396040830184610d74565b949350505050565b6000608082019050610f566000830187610d74565b610f636020830186610d74565b610f706040830185610d74565b610f7d6060830184610efb565b95945050505050565b600060a082019050610f9b6000830188610d74565b610fa86020830187610d74565b610fb56040830186610d74565b610fc26060830185610efb565b610fcf6080830184610efb565b9695505050505050565b60006020820190508181036000830152610ff38184610d83565b905092915050565b600060208201905081810360008301526110158184610de1565b905092915050565b60006040820190506110326000830185610eec565b61103f6020830184610ece565b9392505050565b6000604051905081810181811067ffffffffffffffff8211171561106d5761106c6111a5565b5b8060405250919050565b600067ffffffffffffffff821115611092576110916111a5565b5b602082029050602081019050919050565b600067ffffffffffffffff8211156110be576110bd6111a5565b5b602082029050602081019050919050565b6000819050602082019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600061114c8261115f565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600062ffffff82169050919050565b6000819050919050565b600060ff82169050919050565bfe5b6111b081611141565b81146111bb57600080fd5b50565b6111c781611153565b81146111d257600080fd5b50565b6111de8161117f565b81146111e957600080fd5b50565b6111f58161118e565b811461120057600080fd5b50565b61120c81611198565b811461121757600080fd5b5056fea2646970667358221220b697b82bf4f48b81c4a1c2c7b49ef1593742707bdef23c9a4b7197b284d5ae4464736f6c63430007060033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3D157A46 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x6110358D EQ PUSH2 0x76 JUMPI DUP1 PUSH4 0xEA8650C5 EQ PUSH2 0xA7 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x60 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5B SWAP2 SWAP1 PUSH2 0xC34 JUMP JUMPDEST PUSH2 0xD7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6D SWAP2 SWAP1 PUSH2 0xFD9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x90 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x8B SWAP2 SWAP1 PUSH2 0xBBD JUMP JUMPDEST PUSH2 0x433 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x9E SWAP3 SWAP2 SWAP1 PUSH2 0x101D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xBC SWAP2 SWAP1 PUSH2 0xC75 JUMP JUMPDEST PUSH2 0x586 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCE SWAP2 SWAP1 PUSH2 0xFFB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP3 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0xF3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x12D JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0x11A PUSH2 0x899 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x112 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x429 JUMPI PUSH1 0x2 DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x14A JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x80 ADD MLOAD PUSH1 0xFF AND EQ ISZERO PUSH2 0x2AC JUMPI PUSH1 0x0 PUSH20 0x0 PUSH4 0xBCBCAA29 DUP7 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x187 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x60 ADD MLOAD DUP8 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x19F JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD DUP9 DUP7 DUP2 MLOAD DUP2 LT PUSH2 0x1B7 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 ADD MLOAD DUP10 DUP8 DUP2 MLOAD DUP2 LT PUSH2 0x1CF JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0xA0 ADD MLOAD DUP11 DUP9 DUP2 MLOAD DUP2 LT PUSH2 0x1E7 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0xC0 ADD MLOAD PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x213 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xF86 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x22B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x23F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x263 SWAP2 SWAP1 PUSH2 0xCB6 JUMP JUMPDEST SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP7 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x27C JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP3 ISZERO ISZERO DUP2 MSTORE POP DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x29F JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP POP JUMPDEST PUSH1 0x3 DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2BA JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x80 ADD MLOAD PUSH1 0xFF AND EQ ISZERO PUSH2 0x41C JUMPI PUSH1 0x0 PUSH20 0x0 PUSH4 0xBCBCAA29 DUP7 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x2F7 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x60 ADD MLOAD DUP8 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x30F JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD DUP9 DUP7 DUP2 MLOAD DUP2 LT PUSH2 0x327 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 ADD MLOAD DUP10 DUP8 DUP2 MLOAD DUP2 LT PUSH2 0x33F JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0xA0 ADD MLOAD DUP11 DUP9 DUP2 MLOAD DUP2 LT PUSH2 0x357 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0xC0 ADD MLOAD PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x383 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xF86 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x39B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x3AF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3D3 SWAP2 SWAP1 PUSH2 0xCB6 JUMP JUMPDEST SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP7 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x3EC JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP3 ISZERO ISZERO DUP2 MSTORE POP DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x40F JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP POP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x133 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x2 DUP4 PUSH1 0xFF AND EQ ISZERO PUSH2 0x4DA JUMPI PUSH20 0x0 PUSH4 0x8C39560E DUP9 DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x47F SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xF41 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x497 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x4AB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4CF SWAP2 SWAP1 PUSH2 0xCDF JUMP JUMPDEST PUSH1 0x0 SWAP2 POP SWAP2 POP PUSH2 0x57C JUMP JUMPDEST PUSH1 0x3 DUP4 PUSH1 0xFF AND EQ ISZERO PUSH2 0x57B JUMPI PUSH20 0x0 PUSH4 0x8C39560E DUP9 DUP9 DUP9 DUP9 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x523 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xF41 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x53A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x54E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x572 SWAP2 SWAP1 PUSH2 0xD08 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x57C JUMP JUMPDEST JUMPDEST SWAP6 POP SWAP6 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP3 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0x5A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x5DC JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0x5C9 PUSH2 0x8B5 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x5C1 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x88F JUMPI PUSH1 0x2 DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x5F9 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x80 ADD MLOAD PUSH1 0xFF AND EQ ISZERO PUSH2 0x737 JUMPI PUSH1 0x0 PUSH20 0x0 PUSH4 0xC361E0B1 DUP7 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x636 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x60 ADD MLOAD DUP8 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x64E JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD DUP9 DUP7 DUP2 MLOAD DUP2 LT PUSH2 0x666 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 ADD MLOAD PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x690 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xF0A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x6A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x6BC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6E0 SWAP2 SWAP1 PUSH2 0xCDF JUMP JUMPDEST SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP7 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x6F9 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH3 0xFFFFFF AND DUP2 MSTORE POP DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x726 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP POP PUSH2 0x882 JUMP JUMPDEST PUSH1 0x3 DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x745 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x80 ADD MLOAD PUSH1 0xFF AND EQ ISZERO PUSH2 0x881 JUMPI PUSH1 0x0 DUP1 PUSH20 0x0 PUSH4 0xC361E0B1 DUP8 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x783 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x60 ADD MLOAD DUP9 DUP7 DUP2 MLOAD DUP2 LT PUSH2 0x79B JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x20 ADD MLOAD DUP10 DUP8 DUP2 MLOAD DUP2 LT PUSH2 0x7B3 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 ADD MLOAD PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7DD SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xF0A JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x7F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x808 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x82C SWAP2 SWAP1 PUSH2 0xD08 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP8 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x847 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH3 0xFFFFFF AND DUP2 MSTORE POP DUP5 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x873 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP POP POP JUMPDEST JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x5E2 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH3 0xFFFFFF AND DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8EE PUSH2 0x8E9 DUP5 PUSH2 0x1077 JUMP JUMPDEST PUSH2 0x1046 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP DUP3 DUP6 PUSH1 0xE0 DUP7 MUL DUP3 ADD GT ISZERO PUSH2 0x90D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x93D JUMPI DUP2 PUSH2 0x923 DUP9 DUP3 PUSH2 0xA31 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH1 0xE0 DUP4 ADD SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x910 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x95A PUSH2 0x955 DUP5 PUSH2 0x10A3 JUMP JUMPDEST PUSH2 0x1046 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP DUP3 DUP6 PUSH1 0xA0 DUP7 MUL DUP3 ADD GT ISZERO PUSH2 0x979 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x9A9 JUMPI DUP2 PUSH2 0x98F DUP9 DUP3 PUSH2 0xAE1 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH1 0xA0 DUP4 ADD SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x97C JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x9C2 DUP2 PUSH2 0x11A7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x9D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x9E9 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x8DB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xA03 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xA13 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x947 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xA2B DUP2 PUSH2 0x11BE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE0 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA43 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA4D PUSH1 0xE0 PUSH2 0x1046 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xA5D DUP5 DUP3 DUP6 ADD PUSH2 0xB7E JUMP JUMPDEST PUSH1 0x0 DUP4 ADD MSTORE POP PUSH1 0x20 PUSH2 0xA71 DUP5 DUP3 DUP6 ADD PUSH2 0x9B3 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP PUSH1 0x40 PUSH2 0xA85 DUP5 DUP3 DUP6 ADD PUSH2 0x9B3 JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MSTORE POP PUSH1 0x60 PUSH2 0xA99 DUP5 DUP3 DUP6 ADD PUSH2 0x9B3 JUMP JUMPDEST PUSH1 0x60 DUP4 ADD MSTORE POP PUSH1 0x80 PUSH2 0xAAD DUP5 DUP3 DUP6 ADD PUSH2 0xBA8 JUMP JUMPDEST PUSH1 0x80 DUP4 ADD MSTORE POP PUSH1 0xA0 PUSH2 0xAC1 DUP5 DUP3 DUP6 ADD PUSH2 0xB7E JUMP JUMPDEST PUSH1 0xA0 DUP4 ADD MSTORE POP PUSH1 0xC0 PUSH2 0xAD5 DUP5 DUP3 DUP6 ADD PUSH2 0xB7E JUMP JUMPDEST PUSH1 0xC0 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xAF3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xAFD PUSH1 0xA0 PUSH2 0x1046 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xB0D DUP5 DUP3 DUP6 ADD PUSH2 0xB7E JUMP JUMPDEST PUSH1 0x0 DUP4 ADD MSTORE POP PUSH1 0x20 PUSH2 0xB21 DUP5 DUP3 DUP6 ADD PUSH2 0x9B3 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE POP PUSH1 0x40 PUSH2 0xB35 DUP5 DUP3 DUP6 ADD PUSH2 0x9B3 JUMP JUMPDEST PUSH1 0x40 DUP4 ADD MSTORE POP PUSH1 0x60 PUSH2 0xB49 DUP5 DUP3 DUP6 ADD PUSH2 0x9B3 JUMP JUMPDEST PUSH1 0x60 DUP4 ADD MSTORE POP PUSH1 0x80 PUSH2 0xB5D DUP5 DUP3 DUP6 ADD PUSH2 0xBA8 JUMP JUMPDEST PUSH1 0x80 DUP4 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xB78 DUP2 PUSH2 0x11D5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB8D DUP2 PUSH2 0x11EC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xBA2 DUP2 PUSH2 0x11EC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xBB7 DUP2 PUSH2 0x1203 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xBD5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xBE3 DUP9 DUP3 DUP10 ADD PUSH2 0x9B3 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0xBF4 DUP9 DUP3 DUP10 ADD PUSH2 0x9B3 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0xC05 DUP9 DUP3 DUP10 ADD PUSH2 0x9B3 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0xC16 DUP9 DUP3 DUP10 ADD PUSH2 0xB7E JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0xC27 DUP9 DUP3 DUP10 ADD PUSH2 0xBA8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC46 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xC60 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC6C DUP5 DUP3 DUP6 ADD PUSH2 0x9C8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC87 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xCA1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xCAD DUP5 DUP3 DUP6 ADD PUSH2 0x9F2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCC8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xCD6 DUP5 DUP3 DUP6 ADD PUSH2 0xA1C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xCF1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xCFF DUP5 DUP3 DUP6 ADD PUSH2 0xB93 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD1B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xD29 DUP6 DUP3 DUP7 ADD PUSH2 0xB93 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xD3A DUP6 DUP3 DUP7 ADD PUSH2 0xB69 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD50 DUP4 DUP4 PUSH2 0xE4E JUMP JUMPDEST PUSH1 0x40 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD68 DUP4 DUP4 PUSH2 0xE7D JUMP JUMPDEST PUSH1 0x60 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xD7D DUP2 PUSH2 0x1141 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD8E DUP3 PUSH2 0x10EF JUMP JUMPDEST PUSH2 0xD98 DUP2 DUP6 PUSH2 0x111F JUMP JUMPDEST SWAP4 POP PUSH2 0xDA3 DUP4 PUSH2 0x10CF JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xDD4 JUMPI DUP2 MLOAD PUSH2 0xDBB DUP9 DUP3 PUSH2 0xD44 JUMP JUMPDEST SWAP8 POP PUSH2 0xDC6 DUP4 PUSH2 0x1105 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0xDA7 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDEC DUP3 PUSH2 0x10FA JUMP JUMPDEST PUSH2 0xDF6 DUP2 DUP6 PUSH2 0x1130 JUMP JUMPDEST SWAP4 POP PUSH2 0xE01 DUP4 PUSH2 0x10DF JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xE32 JUMPI DUP2 MLOAD PUSH2 0xE19 DUP9 DUP3 PUSH2 0xD5C JUMP JUMPDEST SWAP8 POP PUSH2 0xE24 DUP4 PUSH2 0x1112 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0xE05 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xE48 DUP2 PUSH2 0x1153 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x40 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0xE64 PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0xEDD JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0xE77 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0xE3F JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0xE93 PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0xEDD JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0xEA6 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0xEDD JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0xEB9 PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0xEBF JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0xEC8 DUP2 PUSH2 0x117F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xED7 DUP2 PUSH2 0x117F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xEE6 DUP2 PUSH2 0x118E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xEF5 DUP2 PUSH2 0x118E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xF04 DUP2 PUSH2 0x118E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xF1F PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0xD74 JUMP JUMPDEST PUSH2 0xF2C PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xD74 JUMP JUMPDEST PUSH2 0xF39 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xD74 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0xF56 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0xD74 JUMP JUMPDEST PUSH2 0xF63 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0xD74 JUMP JUMPDEST PUSH2 0xF70 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0xD74 JUMP JUMPDEST PUSH2 0xF7D PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0xEFB JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0xF9B PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0xD74 JUMP JUMPDEST PUSH2 0xFA8 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0xD74 JUMP JUMPDEST PUSH2 0xFB5 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0xD74 JUMP JUMPDEST PUSH2 0xFC2 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0xEFB JUMP JUMPDEST PUSH2 0xFCF PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0xEFB JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xFF3 DUP2 DUP5 PUSH2 0xD83 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1015 DUP2 DUP5 PUSH2 0xDE1 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1032 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xEEC JUMP JUMPDEST PUSH2 0x103F PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xECE JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP DUP2 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x106D JUMPI PUSH2 0x106C PUSH2 0x11A5 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1092 JUMPI PUSH2 0x1091 PUSH2 0x11A5 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x10BE JUMPI PUSH2 0x10BD PUSH2 0x11A5 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x114C DUP3 PUSH2 0x115F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0xFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST INVALID JUMPDEST PUSH2 0x11B0 DUP2 PUSH2 0x1141 JUMP JUMPDEST DUP2 EQ PUSH2 0x11BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x11C7 DUP2 PUSH2 0x1153 JUMP JUMPDEST DUP2 EQ PUSH2 0x11D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x11DE DUP2 PUSH2 0x117F JUMP JUMPDEST DUP2 EQ PUSH2 0x11E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x11F5 DUP2 PUSH2 0x118E JUMP JUMPDEST DUP2 EQ PUSH2 0x1200 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x120C DUP2 PUSH2 0x1198 JUMP JUMPDEST DUP2 EQ PUSH2 0x1217 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB6 SWAP8 0xB8 0x2B DELEGATECALL DELEGATECALL DUP12 DUP2 0xC4 LOG1 0xC2 0xC7 0xB4 SWAP15 CALL MSIZE CALLDATACOPY TIMESTAMP PUSH17 0x7BDEF23C9A4B7197B284D5AE4464736F6C PUSH4 0x43000706 STOP CALLER ",
							"sourceMap": "270:1894:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1024:735;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1766:395;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;323:695;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1024:735;1103:18;1132:26;1177:6;:13;1161:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;1132:59;;1202:6;1197:536;1213:6;:13;1211:1;:15;1197:536;;;1274:1;1245:6;1252:1;1245:9;;;;;;;;;;;;;;:25;;;:30;;;1241:231;;;1291:11;1305:9;:20;1326:6;1333:1;1326:9;;;;;;;;;;;;;;:18;;;1345:6;1352:1;1345:9;;;;;;;;;;;;;;:12;;;1358:6;1365:1;1358:9;;;;;;;;;;;;;;:12;;;1371:6;1378:1;1371:9;;;;;;;;;;;;;;:14;;;1386:6;1393:1;1386:9;;;;;;;;;;;;;;:14;;;1305:96;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1291:110;;1428:33;;;;;;;;1438:6;1445:1;1438:9;;;;;;;;;;;;;;:15;;;1428:33;;;;1454:6;1428:33;;;;;1415:7;1423:1;1415:10;;;;;;;;;;;;;:46;;;;1241:231;;1506:1;1477:6;1484:1;1477:9;;;;;;;;;;;;;;:25;;;:30;;;1473:231;;;1523:11;1537:9;:20;1558:6;1565:1;1558:9;;;;;;;;;;;;;;:18;;;1577:6;1584:1;1577:9;;;;;;;;;;;;;;:12;;;1590:6;1597:1;1590:9;;;;;;;;;;;;;;:12;;;1603:6;1610:1;1603:9;;;;;;;;;;;;;;:14;;;1618:6;1625:1;1618:9;;;;;;;;;;;;;;:14;;;1537:96;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1523:110;;1660:33;;;;;;;;1670:6;1677:1;1670:9;;;;;;;;;;;;;;:15;;;1660:33;;;;1686:6;1660:33;;;;;1647:7;1655:1;1647:10;;;;;;;;;;;;;:46;;;;1473:231;;1227:3;;;;;;;1197:536;;;;1745:7;1738:14;;;1024:735;;;:::o;1766:395::-;1897:17;1915:10;1951:1;1940:7;:12;;;1936:218;;;1976:9;:27;2004:8;2014:2;2018;2021:8;1976:54;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2031:1;1968:65;;;;;;1936:218;2064:1;2053:7;:12;;;2049:105;;;2088:9;:27;2116:8;2126:2;2130;2134:8;2088:55;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2081:62;;;;;;2049:105;1766:395;;;;;;;;;:::o;323:695::-;397:17;426:25;469:6;:13;454:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;426:57;;497:6;492:492;508:6;:13;506:1;:15;492:492;;;569:1;540:6;547:1;540:9;;;;;;;;;;;;;;:25;;;:30;;;536:439;;;586:13;602:9;:15;618:6;625:1;618:9;;;;;;;;;;;;;;:18;;;637:6;644:1;637:9;;;;;;;;;;;;;;:12;;;650:6;657:1;650:9;;;;;;;;;;;;;;:12;;;602:61;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;586:77;;690:33;;;;;;;;699:6;706:1;699:9;;;;;;;;;;;;;;:15;;;690:33;;;;715:5;690:33;;;;721:1;690:33;;;;;677:7;685:1;677:10;;;;;;;;;;;;;:46;;;;536:439;;;;783:1;754:6;761:1;754:9;;;;;;;;;;;;;;:25;;;:30;;;750:225;;;801:13;815:10;829:9;:15;845:6;852:1;845:9;;;;;;;;;;;;;;:18;;;864:6;871:1;864:9;;;;;;;;;;;;;;:12;;;877:6;884:1;877:9;;;;;;;;;;;;;;:12;;;829:61;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;800:90;;;;917:35;;;;;;;;926:6;933:1;926:9;;;;;;;;;;;;;;:15;;;917:35;;;;942:5;917:35;;;;948:3;917:35;;;;;904:7;912:1;904:10;;;;;;;;;;;;;:48;;;;750:225;;;536:439;522:3;;;;;;;492:492;;;;1004:7;997:14;;;323:695;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;49:700:19:-;;196:106;211:90;294:6;211:90;:::i;:::-;196:106;:::i;:::-;187:115;;322:5;350:6;343:5;336:21;376:4;369:5;365:16;358:23;;401:6;451:3;443:4;435:6;431:17;426:3;422:27;419:36;416:2;;;468:1;465;458:12;416:2;496:1;481:262;506:6;503:1;500:13;481:262;;;573:3;601:63;660:3;648:10;601:63;:::i;:::-;596:3;589:76;694:4;689:3;685:14;678:21;;728:4;723:3;719:14;712:21;;541:202;528:1;525;521:9;516:14;;481:262;;;485:14;177:572;;;;;;;:::o;796:697::-;;942:105;957:89;1039:6;957:89;:::i;:::-;942:105;:::i;:::-;933:114;;1067:5;1095:6;1088:5;1081:21;1121:4;1114:5;1110:16;1103:23;;1146:6;1196:3;1188:4;1180:6;1176:17;1171:3;1167:27;1164:36;1161:2;;;1213:1;1210;1203:12;1161:2;1241:1;1226:261;1251:6;1248:1;1245:13;1226:261;;;1318:3;1346:62;1404:3;1392:10;1346:62;:::i;:::-;1341:3;1334:75;1438:4;1433:3;1429:14;1422:21;;1472:4;1467:3;1463:14;1456:21;;1286:201;1273:1;1270;1266:9;1261:14;;1226:261;;;1230:14;923:570;;;;;;;:::o;1499:139::-;;1583:6;1570:20;1561:29;;1599:33;1626:5;1599:33;:::i;:::-;1551:87;;;;:::o;1686:355::-;;1832:3;1825:4;1817:6;1813:17;1809:27;1799:2;;1850:1;1847;1840:12;1799:2;1890:6;1877:20;1915:120;2031:3;2023:6;2016:4;2008:6;2004:17;1915:120;:::i;:::-;1906:129;;1789:252;;;;;:::o;2088:353::-;;2233:3;2226:4;2218:6;2214:17;2210:27;2200:2;;2251:1;2248;2241:12;2200:2;2291:6;2278:20;2316:119;2431:3;2423:6;2416:4;2408:6;2404:17;2316:119;:::i;:::-;2307:128;;2190:251;;;;;:::o;2447:137::-;;2532:6;2526:13;2517:22;;2548:30;2572:5;2548:30;:::i;:::-;2507:77;;;;:::o;2630:1325::-;;2749:4;2737:9;2732:3;2728:19;2724:30;2721:2;;;2767:1;2764;2757:12;2721:2;2789:20;2804:4;2789:20;:::i;:::-;2780:29;;2869:1;2909:49;2954:3;2945:6;2934:9;2930:22;2909:49;:::i;:::-;2902:4;2895:5;2891:16;2884:75;2819:151;3027:2;3068:49;3113:3;3104:6;3093:9;3089:22;3068:49;:::i;:::-;3061:4;3054:5;3050:16;3043:75;2980:149;3186:2;3227:49;3272:3;3263:6;3252:9;3248:22;3227:49;:::i;:::-;3220:4;3213:5;3209:16;3202:75;3139:149;3351:2;3392:49;3437:3;3428:6;3417:9;3413:22;3392:49;:::i;:::-;3385:4;3378:5;3374:16;3367:75;3298:155;3523:3;3565:47;3608:3;3599:6;3588:9;3584:22;3565:47;:::i;:::-;3558:4;3551:5;3547:16;3540:73;3463:161;3683:3;3725:49;3770:3;3761:6;3750:9;3746:22;3725:49;:::i;:::-;3718:4;3711:5;3707:16;3700:75;3634:152;3845:3;3887:49;3932:3;3923:6;3912:9;3908:22;3887:49;:::i;:::-;3880:4;3873:5;3869:16;3862:75;3796:152;2711:1244;;;;:::o;4000:1000::-;;4118:4;4106:9;4101:3;4097:19;4093:30;4090:2;;;4136:1;4133;4126:12;4090:2;4158:20;4173:4;4158:20;:::i;:::-;4149:29;;4238:1;4278:49;4323:3;4314:6;4303:9;4299:22;4278:49;:::i;:::-;4271:4;4264:5;4260:16;4253:75;4188:151;4396:2;4437:49;4482:3;4473:6;4462:9;4458:22;4437:49;:::i;:::-;4430:4;4423:5;4419:16;4412:75;4349:149;4555:2;4596:49;4641:3;4632:6;4621:9;4617:22;4596:49;:::i;:::-;4589:4;4582:5;4578:16;4571:75;4508:149;4720:2;4761:49;4806:3;4797:6;4786:9;4782:22;4761:49;:::i;:::-;4754:4;4747:5;4743:16;4736:75;4667:155;4892:3;4934:47;4977:3;4968:6;4957:9;4953:22;4934:47;:::i;:::-;4927:4;4920:5;4916:16;4909:73;4832:161;4080:920;;;;:::o;5006:141::-;;5093:6;5087:13;5078:22;;5109:32;5135:5;5109:32;:::i;:::-;5068:79;;;;:::o;5153:139::-;;5237:6;5224:20;5215:29;;5253:33;5280:5;5253:33;:::i;:::-;5205:87;;;;:::o;5298:143::-;;5386:6;5380:13;5371:22;;5402:33;5429:5;5402:33;:::i;:::-;5361:80;;;;:::o;5447:135::-;;5529:6;5516:20;5507:29;;5545:31;5570:5;5545:31;:::i;:::-;5497:85;;;;:::o;5588:840::-;;;;;;5762:3;5750:9;5741:7;5737:23;5733:33;5730:2;;;5779:1;5776;5769:12;5730:2;5822:1;5847:53;5892:7;5883:6;5872:9;5868:22;5847:53;:::i;:::-;5837:63;;5793:117;5949:2;5975:53;6020:7;6011:6;6000:9;5996:22;5975:53;:::i;:::-;5965:63;;5920:118;6077:2;6103:53;6148:7;6139:6;6128:9;6124:22;6103:53;:::i;:::-;6093:63;;6048:118;6205:2;6231:53;6276:7;6267:6;6256:9;6252:22;6231:53;:::i;:::-;6221:63;;6176:118;6333:3;6360:51;6403:7;6394:6;6383:9;6379:22;6360:51;:::i;:::-;6350:61;;6304:117;5720:708;;;;;;;;:::o;6434:457::-;;6593:2;6581:9;6572:7;6568:23;6564:32;6561:2;;;6609:1;6606;6599:12;6561:2;6680:1;6669:9;6665:17;6652:31;6710:18;6702:6;6699:30;6696:2;;;6742:1;6739;6732:12;6696:2;6770:104;6866:7;6857:6;6846:9;6842:22;6770:104;:::i;:::-;6760:114;;6623:261;6551:340;;;;:::o;6897:455::-;;7055:2;7043:9;7034:7;7030:23;7026:32;7023:2;;;7071:1;7068;7061:12;7023:2;7142:1;7131:9;7127:17;7114:31;7172:18;7164:6;7161:30;7158:2;;;7204:1;7201;7194:12;7158:2;7232:103;7327:7;7318:6;7307:9;7303:22;7232:103;:::i;:::-;7222:113;;7085:260;7013:339;;;;:::o;7358:278::-;;7474:2;7462:9;7453:7;7449:23;7445:32;7442:2;;;7490:1;7487;7480:12;7442:2;7533:1;7558:61;7611:7;7602:6;7591:9;7587:22;7558:61;:::i;:::-;7548:71;;7504:125;7432:204;;;;:::o;7642:284::-;;7761:2;7749:9;7740:7;7736:23;7732:32;7729:2;;;7777:1;7774;7767:12;7729:2;7820:1;7845:64;7901:7;7892:6;7881:9;7877:22;7845:64;:::i;:::-;7835:74;;7791:128;7719:207;;;;:::o;7932:438::-;;;8067:2;8055:9;8046:7;8042:23;8038:32;8035:2;;;8083:1;8080;8073:12;8035:2;8126:1;8151:64;8207:7;8198:6;8187:9;8183:22;8151:64;:::i;:::-;8141:74;;8097:128;8264:2;8290:63;8345:7;8336:6;8325:9;8321:22;8290:63;:::i;:::-;8280:73;;8235:128;8025:345;;;;;:::o;8376:287::-;;8520:100;8616:3;8608:6;8520:100;:::i;:::-;8652:4;8647:3;8643:14;8629:28;;8510:153;;;;:::o;8669:283::-;;8811:98;8905:3;8897:6;8811:98;:::i;:::-;8941:4;8936:3;8932:14;8918:28;;8801:151;;;;:::o;8958:126::-;9053:24;9071:5;9053:24;:::i;:::-;9048:3;9041:37;9031:53;;:::o;9172:948::-;;9374:81;9449:5;9374:81;:::i;:::-;9471:113;9577:6;9572:3;9471:113;:::i;:::-;9464:120;;9608:83;9685:5;9608:83;:::i;:::-;9714:7;9745:1;9730:365;9755:6;9752:1;9749:13;9730:365;;;9831:6;9825:13;9858:117;9971:3;9956:13;9858:117;:::i;:::-;9851:124;;9998:87;10078:6;9998:87;:::i;:::-;9988:97;;9790:305;9777:1;9774;9770:9;9765:14;;9730:365;;;9734:14;10111:3;10104:10;;9350:770;;;;;;;:::o;10206:940::-;;10406:80;10480:5;10406:80;:::i;:::-;10502:112;10607:6;10602:3;10502:112;:::i;:::-;10495:119;;10638:82;10714:5;10638:82;:::i;:::-;10743:7;10774:1;10759:362;10784:6;10781:1;10778:13;10759:362;;;10860:6;10854:13;10887:115;10998:3;10983:13;10887:115;:::i;:::-;10880:122;;11025:86;11104:6;11025:86;:::i;:::-;11015:96;;10819:302;10806:1;10803;10799:9;10794:14;;10759:362;;;10763:14;11137:3;11130:10;;10382:764;;;;;;;:::o;11152:99::-;11223:21;11238:5;11223:21;:::i;:::-;11218:3;11211:34;11201:50;;:::o;11335:498::-;11476:4;11471:3;11467:14;11564:4;11557:5;11553:16;11547:23;11583:63;11640:4;11635:3;11631:14;11617:12;11583:63;:::i;:::-;11491:165;11740:4;11733:5;11729:16;11723:23;11759:57;11810:4;11805:3;11801:14;11787:12;11759:57;:::i;:::-;11666:160;11445:388;;;:::o;11915:672::-;12054:4;12049:3;12045:14;12142:4;12135:5;12131:16;12125:23;12161:63;12218:4;12213:3;12209:14;12195:12;12161:63;:::i;:::-;12069:165;12317:4;12310:5;12306:16;12300:23;12336:63;12393:4;12388:3;12384:14;12370:12;12336:63;:::i;:::-;12244:165;12490:4;12483:5;12479:16;12473:23;12509:61;12564:4;12559:3;12555:14;12541:12;12509:61;:::i;:::-;12419:161;12023:564;;;:::o;12593:105::-;12668:23;12685:5;12668:23;:::i;:::-;12663:3;12656:36;12646:52;;:::o;12704:115::-;12789:23;12806:5;12789:23;:::i;:::-;12784:3;12777:36;12767:52;;:::o;12825:108::-;12902:24;12920:5;12902:24;:::i;:::-;12897:3;12890:37;12880:53;;:::o;12939:118::-;13026:24;13044:5;13026:24;:::i;:::-;13021:3;13014:37;13004:53;;:::o;13063:126::-;13158:24;13176:5;13158:24;:::i;:::-;13153:3;13146:37;13136:53;;:::o;13195:474::-;;13390:2;13379:9;13375:18;13367:26;;13403:79;13479:1;13468:9;13464:17;13455:6;13403:79;:::i;:::-;13492:80;13568:2;13557:9;13553:18;13544:6;13492:80;:::i;:::-;13582;13658:2;13647:9;13643:18;13634:6;13582:80;:::i;:::-;13357:312;;;;;;:::o;13675:593::-;;13898:3;13887:9;13883:19;13875:27;;13912:79;13988:1;13977:9;13973:17;13964:6;13912:79;:::i;:::-;14001:80;14077:2;14066:9;14062:18;14053:6;14001:80;:::i;:::-;14091;14167:2;14156:9;14152:18;14143:6;14091:80;:::i;:::-;14181;14257:2;14246:9;14242:18;14233:6;14181:80;:::i;:::-;13865:403;;;;;;;:::o;14274:712::-;;14525:3;14514:9;14510:19;14502:27;;14539:79;14615:1;14604:9;14600:17;14591:6;14539:79;:::i;:::-;14628:80;14704:2;14693:9;14689:18;14680:6;14628:80;:::i;:::-;14718;14794:2;14783:9;14779:18;14770:6;14718:80;:::i;:::-;14808;14884:2;14873:9;14869:18;14860:6;14808:80;:::i;:::-;14898:81;14974:3;14963:9;14959:19;14950:6;14898:81;:::i;:::-;14492:494;;;;;;;;:::o;14992:481::-;;15227:2;15216:9;15212:18;15204:26;;15276:9;15270:4;15266:20;15262:1;15251:9;15247:17;15240:47;15304:162;15461:4;15452:6;15304:162;:::i;:::-;15296:170;;15194:279;;;;:::o;15479:477::-;;15712:2;15701:9;15697:18;15689:26;;15761:9;15755:4;15751:20;15747:1;15736:9;15732:17;15725:47;15789:160;15944:4;15935:6;15789:160;:::i;:::-;15781:168;;15679:277;;;;:::o;15962:328::-;;16119:2;16108:9;16104:18;16096:26;;16132:71;16200:1;16189:9;16185:17;16176:6;16132:71;:::i;:::-;16213:70;16279:2;16268:9;16264:18;16255:6;16213:70;:::i;:::-;16086:204;;;;;:::o;16296:278::-;;16362:2;16356:9;16346:19;;16404:4;16396:6;16392:17;16511:6;16499:10;16496:22;16475:18;16463:10;16460:34;16457:62;16454:2;;;16522:13;;:::i;:::-;16454:2;16557:10;16553:2;16546:22;16336:238;;;;:::o;16580:332::-;;16773:18;16765:6;16762:30;16759:2;;;16795:13;;:::i;:::-;16759:2;16840:4;16832:6;16828:17;16820:25;;16900:4;16894;16890:15;16882:23;;16688:224;;;:::o;16918:331::-;;17110:18;17102:6;17099:30;17096:2;;;17132:13;;:::i;:::-;17096:2;17177:4;17169:6;17165:17;17157:25;;17237:4;17231;17227:15;17219:23;;17025:224;;;:::o;17255:159::-;;17372:3;17364:11;;17402:4;17397:3;17393:14;17385:22;;17354:60;;;:::o;17420:158::-;;17536:3;17528:11;;17566:4;17561:3;17557:14;17549:22;;17518:60;;;:::o;17584:141::-;;17712:5;17706:12;17696:22;;17685:40;;;:::o;17731:140::-;;17858:5;17852:12;17842:22;;17831:40;;;:::o;17877:140::-;;18006:4;18001:3;17997:14;17989:22;;17979:38;;;:::o;18023:139::-;;18151:4;18146:3;18142:14;18134:22;;18124:38;;;:::o;18168:211::-;;18328:6;18323:3;18316:19;18368:4;18363:3;18359:14;18344:29;;18306:73;;;;:::o;18385:210::-;;18544:6;18539:3;18532:19;18584:4;18579:3;18575:14;18560:29;;18522:73;;;;:::o;18601:96::-;;18667:24;18685:5;18667:24;:::i;:::-;18656:35;;18646:51;;;:::o;18703:90::-;;18780:5;18773:13;18766:21;18755:32;;18745:48;;;:::o;18799:126::-;;18876:42;18869:5;18865:54;18854:65;;18844:81;;;:::o;18931:91::-;;19007:8;19000:5;18996:20;18985:31;;18975:47;;;:::o;19028:77::-;;19094:5;19083:16;;19073:32;;;:::o;19111:86::-;;19186:4;19179:5;19175:16;19164:27;;19154:43;;;:::o;19203:48::-;19236:9;19257:122;19330:24;19348:5;19330:24;:::i;:::-;19323:5;19320:35;19310:2;;19369:1;19366;19359:12;19310:2;19300:79;:::o;19385:116::-;19455:21;19470:5;19455:21;:::i;:::-;19448:5;19445:32;19435:2;;19491:1;19488;19481:12;19435:2;19425:76;:::o;19507:120::-;19579:23;19596:5;19579:23;:::i;:::-;19572:5;19569:34;19559:2;;19617:1;19614;19607:12;19559:2;19549:78;:::o;19633:122::-;19706:24;19724:5;19706:24;:::i;:::-;19699:5;19696:35;19686:2;;19745:1;19742;19735:12;19686:2;19676:79;:::o;19761:118::-;19832:22;19848:5;19832:22;:::i;:::-;19825:5;19822:33;19812:2;;19869:1;19866;19859:12;19812:2;19802:77;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "937600",
								"executionCost": "975",
								"totalCost": "938575"
							},
							"external": {
								"estimateAmountOut(address,address,address,uint256,uint8)": "infinite",
								"getPrices((uint256,address,address,address,uint8)[])": "infinite",
								"poolsExists((uint256,address,address,address,uint8,uint256,uint256)[])": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 270,
									"end": 2164,
									"name": "PUSH",
									"source": 13,
									"value": "80"
								},
								{
									"begin": 270,
									"end": 2164,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 270,
									"end": 2164,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 270,
									"end": 2164,
									"name": "CALLVALUE",
									"source": 13
								},
								{
									"begin": 270,
									"end": 2164,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 270,
									"end": 2164,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 270,
									"end": 2164,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 270,
									"end": 2164,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 270,
									"end": 2164,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 270,
									"end": 2164,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 270,
									"end": 2164,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 270,
									"end": 2164,
									"name": "tag",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 270,
									"end": 2164,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 270,
									"end": 2164,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 270,
									"end": 2164,
									"name": "PUSH #[$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 270,
									"end": 2164,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 270,
									"end": 2164,
									"name": "PUSH [$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 270,
									"end": 2164,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 270,
									"end": 2164,
									"name": "CODECOPY",
									"source": 13
								},
								{
									"begin": 270,
									"end": 2164,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 270,
									"end": 2164,
									"name": "RETURN",
									"source": 13
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b697b82bf4f48b81c4a1c2c7b49ef1593742707bdef23c9a4b7197b284d5ae4464736f6c63430007060033",
									".code": [
										{
											"begin": 270,
											"end": 2164,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 270,
											"end": 2164,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 270,
											"end": 2164,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 270,
											"end": 2164,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 270,
											"end": 2164,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 270,
											"end": 2164,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 270,
											"end": 2164,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 270,
											"end": 2164,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 270,
											"end": 2164,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 270,
											"end": 2164,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 270,
											"end": 2164,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 270,
											"end": 2164,
											"name": "tag",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 270,
											"end": 2164,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 270,
											"end": 2164,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 270,
											"end": 2164,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 270,
											"end": 2164,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 270,
											"end": 2164,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 270,
											"end": 2164,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 270,
											"end": 2164,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 270,
											"end": 2164,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 270,
											"end": 2164,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 270,
											"end": 2164,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 270,
											"end": 2164,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 270,
											"end": 2164,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 270,
											"end": 2164,
											"name": "PUSH",
											"source": 13,
											"value": "3D157A46"
										},
										{
											"begin": 270,
											"end": 2164,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 270,
											"end": 2164,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 270,
											"end": 2164,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 270,
											"end": 2164,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 270,
											"end": 2164,
											"name": "PUSH",
											"source": 13,
											"value": "6110358D"
										},
										{
											"begin": 270,
											"end": 2164,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 270,
											"end": 2164,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 270,
											"end": 2164,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 270,
											"end": 2164,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 270,
											"end": 2164,
											"name": "PUSH",
											"source": 13,
											"value": "EA8650C5"
										},
										{
											"begin": 270,
											"end": 2164,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 270,
											"end": 2164,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 270,
											"end": 2164,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 270,
											"end": 2164,
											"name": "tag",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 270,
											"end": 2164,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 270,
											"end": 2164,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 270,
											"end": 2164,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 270,
											"end": 2164,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1024,
											"end": 1759,
											"name": "tag",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 1024,
											"end": 1759,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1024,
											"end": 1759,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "6"
										},
										{
											"begin": 1024,
											"end": 1759,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 1024,
											"end": 1759,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1024,
											"end": 1759,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 1024,
											"end": 1759,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1024,
											"end": 1759,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1024,
											"end": 1759,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1024,
											"end": 1759,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1024,
											"end": 1759,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "7"
										},
										{
											"begin": 1024,
											"end": 1759,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1024,
											"end": 1759,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1024,
											"end": 1759,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 1024,
											"end": 1759,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 1024,
											"end": 1759,
											"name": "tag",
											"source": 13,
											"value": "7"
										},
										{
											"begin": 1024,
											"end": 1759,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1024,
											"end": 1759,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "9"
										},
										{
											"begin": 1024,
											"end": 1759,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 1024,
											"end": 1759,
											"name": "tag",
											"source": 13,
											"value": "6"
										},
										{
											"begin": 1024,
											"end": 1759,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1024,
											"end": 1759,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1024,
											"end": 1759,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1024,
											"end": 1759,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "10"
										},
										{
											"begin": 1024,
											"end": 1759,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1024,
											"end": 1759,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1024,
											"end": 1759,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "11"
										},
										{
											"begin": 1024,
											"end": 1759,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 1024,
											"end": 1759,
											"name": "tag",
											"source": 13,
											"value": "10"
										},
										{
											"begin": 1024,
											"end": 1759,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1024,
											"end": 1759,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1024,
											"end": 1759,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1024,
											"end": 1759,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1024,
											"end": 1759,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1024,
											"end": 1759,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1024,
											"end": 1759,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1024,
											"end": 1759,
											"name": "RETURN",
											"source": 13
										},
										{
											"begin": 1766,
											"end": 2161,
											"name": "tag",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 1766,
											"end": 2161,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1766,
											"end": 2161,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "12"
										},
										{
											"begin": 1766,
											"end": 2161,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 1766,
											"end": 2161,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1766,
											"end": 2161,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 1766,
											"end": 2161,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1766,
											"end": 2161,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1766,
											"end": 2161,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1766,
											"end": 2161,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1766,
											"end": 2161,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "13"
										},
										{
											"begin": 1766,
											"end": 2161,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1766,
											"end": 2161,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1766,
											"end": 2161,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "14"
										},
										{
											"begin": 1766,
											"end": 2161,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 1766,
											"end": 2161,
											"name": "tag",
											"source": 13,
											"value": "13"
										},
										{
											"begin": 1766,
											"end": 2161,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1766,
											"end": 2161,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "15"
										},
										{
											"begin": 1766,
											"end": 2161,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 1766,
											"end": 2161,
											"name": "tag",
											"source": 13,
											"value": "12"
										},
										{
											"begin": 1766,
											"end": 2161,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1766,
											"end": 2161,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1766,
											"end": 2161,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1766,
											"end": 2161,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "16"
										},
										{
											"begin": 1766,
											"end": 2161,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1766,
											"end": 2161,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1766,
											"end": 2161,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1766,
											"end": 2161,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "17"
										},
										{
											"begin": 1766,
											"end": 2161,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 1766,
											"end": 2161,
											"name": "tag",
											"source": 13,
											"value": "16"
										},
										{
											"begin": 1766,
											"end": 2161,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1766,
											"end": 2161,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1766,
											"end": 2161,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1766,
											"end": 2161,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1766,
											"end": 2161,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1766,
											"end": 2161,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1766,
											"end": 2161,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1766,
											"end": 2161,
											"name": "RETURN",
											"source": 13
										},
										{
											"begin": 323,
											"end": 1018,
											"name": "tag",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 323,
											"end": 1018,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 323,
											"end": 1018,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "18"
										},
										{
											"begin": 323,
											"end": 1018,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 323,
											"end": 1018,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 323,
											"end": 1018,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 323,
											"end": 1018,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 323,
											"end": 1018,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 323,
											"end": 1018,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 323,
											"end": 1018,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 323,
											"end": 1018,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "19"
										},
										{
											"begin": 323,
											"end": 1018,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 323,
											"end": 1018,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 323,
											"end": 1018,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 323,
											"end": 1018,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 323,
											"end": 1018,
											"name": "tag",
											"source": 13,
											"value": "19"
										},
										{
											"begin": 323,
											"end": 1018,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 323,
											"end": 1018,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "21"
										},
										{
											"begin": 323,
											"end": 1018,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 323,
											"end": 1018,
											"name": "tag",
											"source": 13,
											"value": "18"
										},
										{
											"begin": 323,
											"end": 1018,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 323,
											"end": 1018,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 323,
											"end": 1018,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 323,
											"end": 1018,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "22"
										},
										{
											"begin": 323,
											"end": 1018,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 323,
											"end": 1018,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 323,
											"end": 1018,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "23"
										},
										{
											"begin": 323,
											"end": 1018,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 323,
											"end": 1018,
											"name": "tag",
											"source": 13,
											"value": "22"
										},
										{
											"begin": 323,
											"end": 1018,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 323,
											"end": 1018,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 323,
											"end": 1018,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 323,
											"end": 1018,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 323,
											"end": 1018,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 323,
											"end": 1018,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 323,
											"end": 1018,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 323,
											"end": 1018,
											"name": "RETURN",
											"source": 13
										},
										{
											"begin": 1024,
											"end": 1759,
											"name": "tag",
											"source": 13,
											"value": "9"
										},
										{
											"begin": 1024,
											"end": 1759,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1103,
											"end": 1121,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 1132,
											"end": 1158,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1177,
											"end": 1183,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1177,
											"end": 1190,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1161,
											"end": 1191,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1161,
											"end": 1191,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1161,
											"end": 1191,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 1161,
											"end": 1191,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1161,
											"end": 1191,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1161,
											"end": 1191,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "25"
										},
										{
											"begin": 1161,
											"end": 1191,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1161,
											"end": 1191,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1161,
											"end": 1191,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1161,
											"end": 1191,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1161,
											"end": 1191,
											"name": "tag",
											"source": 13,
											"value": "25"
										},
										{
											"begin": 1161,
											"end": 1191,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1161,
											"end": 1191,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1161,
											"end": 1191,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1161,
											"end": 1191,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1161,
											"end": 1191,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1161,
											"end": 1191,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1161,
											"end": 1191,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1161,
											"end": 1191,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1161,
											"end": 1191,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1161,
											"end": 1191,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1161,
											"end": 1191,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 1161,
											"end": 1191,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1161,
											"end": 1191,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1161,
											"end": 1191,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1161,
											"end": 1191,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1161,
											"end": 1191,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1161,
											"end": 1191,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1161,
											"end": 1191,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1161,
											"end": 1191,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1161,
											"end": 1191,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "26"
										},
										{
											"begin": 1161,
											"end": 1191,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1161,
											"end": 1191,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1161,
											"end": 1191,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1161,
											"end": 1191,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1161,
											"end": 1191,
											"name": "tag",
											"source": 13,
											"value": "27"
										},
										{
											"begin": 1161,
											"end": 1191,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1161,
											"end": 1191,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "28"
										},
										{
											"begin": 1161,
											"end": 1191,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "29"
										},
										{
											"begin": 1161,
											"end": 1191,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 1161,
											"end": 1191,
											"name": "tag",
											"source": 13,
											"value": "28"
										},
										{
											"begin": 1161,
											"end": 1191,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1161,
											"end": 1191,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1161,
											"end": 1191,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1161,
											"end": 1191,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1161,
											"end": 1191,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1161,
											"end": 1191,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1161,
											"end": 1191,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 1161,
											"end": 1191,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1161,
											"end": 1191,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1161,
											"end": 1191,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1161,
											"end": 1191,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1161,
											"end": 1191,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "27"
										},
										{
											"begin": 1161,
											"end": 1191,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1161,
											"end": 1191,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1161,
											"end": 1191,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1161,
											"end": 1191,
											"name": "tag",
											"source": 13,
											"value": "26"
										},
										{
											"begin": 1161,
											"end": 1191,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1161,
											"end": 1191,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1132,
											"end": 1191,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1132,
											"end": 1191,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1202,
											"end": 1208,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1197,
											"end": 1733,
											"name": "tag",
											"source": 13,
											"value": "30"
										},
										{
											"begin": 1197,
											"end": 1733,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1213,
											"end": 1219,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1213,
											"end": 1226,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1211,
											"end": 1212,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1211,
											"end": 1226,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 1197,
											"end": 1733,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1197,
											"end": 1733,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "31"
										},
										{
											"begin": 1197,
											"end": 1733,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1274,
											"end": 1275,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 1245,
											"end": 1251,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1252,
											"end": 1253,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1245,
											"end": 1254,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1245,
											"end": 1254,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1245,
											"end": 1254,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1245,
											"end": 1254,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 1245,
											"end": 1254,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "33"
										},
										{
											"begin": 1245,
											"end": 1254,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1245,
											"end": 1254,
											"name": "INVALID",
											"source": 13
										},
										{
											"begin": 1245,
											"end": 1254,
											"name": "tag",
											"source": 13,
											"value": "33"
										},
										{
											"begin": 1245,
											"end": 1254,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1245,
											"end": 1254,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1245,
											"end": 1254,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 1245,
											"end": 1254,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1245,
											"end": 1254,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1245,
											"end": 1254,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1245,
											"end": 1254,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1245,
											"end": 1270,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 1245,
											"end": 1270,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1245,
											"end": 1270,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1245,
											"end": 1275,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 1245,
											"end": 1275,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1245,
											"end": 1275,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 1241,
											"end": 1472,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1241,
											"end": 1472,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "34"
										},
										{
											"begin": 1241,
											"end": 1472,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1291,
											"end": 1302,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1305,
											"end": 1314,
											"name": "PUSHLIB",
											"source": 13,
											"value": "contracts/libraries/UniswapV2.sol:UniswapV2"
										},
										{
											"begin": 1305,
											"end": 1325,
											"name": "PUSH",
											"source": 13,
											"value": "BCBCAA29"
										},
										{
											"begin": 1326,
											"end": 1332,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 1333,
											"end": 1334,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1326,
											"end": 1335,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1326,
											"end": 1335,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1326,
											"end": 1335,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1326,
											"end": 1335,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 1326,
											"end": 1335,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "35"
										},
										{
											"begin": 1326,
											"end": 1335,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1326,
											"end": 1335,
											"name": "INVALID",
											"source": 13
										},
										{
											"begin": 1326,
											"end": 1335,
											"name": "tag",
											"source": 13,
											"value": "35"
										},
										{
											"begin": 1326,
											"end": 1335,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1326,
											"end": 1335,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1326,
											"end": 1335,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 1326,
											"end": 1335,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1326,
											"end": 1335,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1326,
											"end": 1335,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1326,
											"end": 1335,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1326,
											"end": 1344,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 1326,
											"end": 1344,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1326,
											"end": 1344,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1345,
											"end": 1351,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 1352,
											"end": 1353,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 1345,
											"end": 1354,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1345,
											"end": 1354,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1345,
											"end": 1354,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1345,
											"end": 1354,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 1345,
											"end": 1354,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "36"
										},
										{
											"begin": 1345,
											"end": 1354,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1345,
											"end": 1354,
											"name": "INVALID",
											"source": 13
										},
										{
											"begin": 1345,
											"end": 1354,
											"name": "tag",
											"source": 13,
											"value": "36"
										},
										{
											"begin": 1345,
											"end": 1354,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1345,
											"end": 1354,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1345,
											"end": 1354,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 1345,
											"end": 1354,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1345,
											"end": 1354,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1345,
											"end": 1354,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1345,
											"end": 1354,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1345,
											"end": 1357,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1345,
											"end": 1357,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1345,
											"end": 1357,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1358,
											"end": 1364,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 1365,
											"end": 1366,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 1358,
											"end": 1367,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1358,
											"end": 1367,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1358,
											"end": 1367,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1358,
											"end": 1367,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 1358,
											"end": 1367,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "37"
										},
										{
											"begin": 1358,
											"end": 1367,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1358,
											"end": 1367,
											"name": "INVALID",
											"source": 13
										},
										{
											"begin": 1358,
											"end": 1367,
											"name": "tag",
											"source": 13,
											"value": "37"
										},
										{
											"begin": 1358,
											"end": 1367,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1358,
											"end": 1367,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1358,
											"end": 1367,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 1358,
											"end": 1367,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1358,
											"end": 1367,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1358,
											"end": 1367,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1358,
											"end": 1367,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1358,
											"end": 1370,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1358,
											"end": 1370,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1358,
											"end": 1370,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1371,
											"end": 1377,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 1378,
											"end": 1379,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 1371,
											"end": 1380,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1371,
											"end": 1380,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1371,
											"end": 1380,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1371,
											"end": 1380,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 1371,
											"end": 1380,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "38"
										},
										{
											"begin": 1371,
											"end": 1380,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1371,
											"end": 1380,
											"name": "INVALID",
											"source": 13
										},
										{
											"begin": 1371,
											"end": 1380,
											"name": "tag",
											"source": 13,
											"value": "38"
										},
										{
											"begin": 1371,
											"end": 1380,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1371,
											"end": 1380,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1371,
											"end": 1380,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 1371,
											"end": 1380,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1371,
											"end": 1380,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1371,
											"end": 1380,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1371,
											"end": 1380,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1371,
											"end": 1385,
											"name": "PUSH",
											"source": 13,
											"value": "A0"
										},
										{
											"begin": 1371,
											"end": 1385,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1371,
											"end": 1385,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1386,
											"end": 1392,
											"name": "DUP11",
											"source": 13
										},
										{
											"begin": 1393,
											"end": 1394,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 1386,
											"end": 1395,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1386,
											"end": 1395,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1386,
											"end": 1395,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1386,
											"end": 1395,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 1386,
											"end": 1395,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "39"
										},
										{
											"begin": 1386,
											"end": 1395,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1386,
											"end": 1395,
											"name": "INVALID",
											"source": 13
										},
										{
											"begin": 1386,
											"end": 1395,
											"name": "tag",
											"source": 13,
											"value": "39"
										},
										{
											"begin": 1386,
											"end": 1395,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1386,
											"end": 1395,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1386,
											"end": 1395,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 1386,
											"end": 1395,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1386,
											"end": 1395,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1386,
											"end": 1395,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1386,
											"end": 1395,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1386,
											"end": 1400,
											"name": "PUSH",
											"source": 13,
											"value": "C0"
										},
										{
											"begin": 1386,
											"end": 1400,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1386,
											"end": 1400,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1305,
											"end": 1401,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1305,
											"end": 1401,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1305,
											"end": 1401,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 1305,
											"end": 1401,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1305,
											"end": 1401,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1305,
											"end": 1401,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 1305,
											"end": 1401,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 1305,
											"end": 1401,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1305,
											"end": 1401,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1305,
											"end": 1401,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 1305,
											"end": 1401,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1305,
											"end": 1401,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1305,
											"end": 1401,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 1305,
											"end": 1401,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 1305,
											"end": 1401,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 1305,
											"end": 1401,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1305,
											"end": 1401,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1305,
											"end": 1401,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1305,
											"end": 1401,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "41"
										},
										{
											"begin": 1305,
											"end": 1401,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 1305,
											"end": 1401,
											"name": "tag",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1305,
											"end": 1401,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1305,
											"end": 1401,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1305,
											"end": 1401,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1305,
											"end": 1401,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1305,
											"end": 1401,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1305,
											"end": 1401,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1305,
											"end": 1401,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1305,
											"end": 1401,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1305,
											"end": 1401,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 1305,
											"end": 1401,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1305,
											"end": 1401,
											"name": "EXTCODESIZE",
											"source": 13
										},
										{
											"begin": 1305,
											"end": 1401,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1305,
											"end": 1401,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1305,
											"end": 1401,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1305,
											"end": 1401,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "42"
										},
										{
											"begin": 1305,
											"end": 1401,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1305,
											"end": 1401,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1305,
											"end": 1401,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1305,
											"end": 1401,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1305,
											"end": 1401,
											"name": "tag",
											"source": 13,
											"value": "42"
										},
										{
											"begin": 1305,
											"end": 1401,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1305,
											"end": 1401,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1305,
											"end": 1401,
											"name": "GAS",
											"source": 13
										},
										{
											"begin": 1305,
											"end": 1401,
											"name": "DELEGATECALL",
											"source": 13
										},
										{
											"begin": 1305,
											"end": 1401,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1305,
											"end": 1401,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1305,
											"end": 1401,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1305,
											"end": 1401,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 1305,
											"end": 1401,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1305,
											"end": 1401,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 1305,
											"end": 1401,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1305,
											"end": 1401,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1305,
											"end": 1401,
											"name": "RETURNDATACOPY",
											"source": 13
										},
										{
											"begin": 1305,
											"end": 1401,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 1305,
											"end": 1401,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1305,
											"end": 1401,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1305,
											"end": 1401,
											"name": "tag",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 1305,
											"end": 1401,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1305,
											"end": 1401,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1305,
											"end": 1401,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1305,
											"end": 1401,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1305,
											"end": 1401,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1305,
											"end": 1401,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1305,
											"end": 1401,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1305,
											"end": 1401,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 1305,
											"end": 1401,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 1305,
											"end": 1401,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 1305,
											"end": 1401,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 1305,
											"end": 1401,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1305,
											"end": 1401,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1305,
											"end": 1401,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1305,
											"end": 1401,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1305,
											"end": 1401,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1305,
											"end": 1401,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1305,
											"end": 1401,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1305,
											"end": 1401,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1305,
											"end": 1401,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1305,
											"end": 1401,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1305,
											"end": 1401,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1305,
											"end": 1401,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1305,
											"end": 1401,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "45"
										},
										{
											"begin": 1305,
											"end": 1401,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1305,
											"end": 1401,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1305,
											"end": 1401,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "46"
										},
										{
											"begin": 1305,
											"end": 1401,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 1305,
											"end": 1401,
											"name": "tag",
											"source": 13,
											"value": "45"
										},
										{
											"begin": 1305,
											"end": 1401,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1291,
											"end": 1401,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1291,
											"end": 1401,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1428,
											"end": 1461,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1428,
											"end": 1461,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1428,
											"end": 1461,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1428,
											"end": 1461,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1428,
											"end": 1461,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1428,
											"end": 1461,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1428,
											"end": 1461,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1428,
											"end": 1461,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1438,
											"end": 1444,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 1445,
											"end": 1446,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1438,
											"end": 1447,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1438,
											"end": 1447,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1438,
											"end": 1447,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1438,
											"end": 1447,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 1438,
											"end": 1447,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "47"
										},
										{
											"begin": 1438,
											"end": 1447,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1438,
											"end": 1447,
											"name": "INVALID",
											"source": 13
										},
										{
											"begin": 1438,
											"end": 1447,
											"name": "tag",
											"source": 13,
											"value": "47"
										},
										{
											"begin": 1438,
											"end": 1447,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1438,
											"end": 1447,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1438,
											"end": 1447,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 1438,
											"end": 1447,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1438,
											"end": 1447,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1438,
											"end": 1447,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1438,
											"end": 1447,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1438,
											"end": 1453,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1438,
											"end": 1453,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1438,
											"end": 1453,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1428,
											"end": 1461,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1428,
											"end": 1461,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1428,
											"end": 1461,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1428,
											"end": 1461,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1454,
											"end": 1460,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1428,
											"end": 1461,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1428,
											"end": 1461,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1428,
											"end": 1461,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1428,
											"end": 1461,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1428,
											"end": 1461,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1415,
											"end": 1422,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1423,
											"end": 1424,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1415,
											"end": 1425,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1415,
											"end": 1425,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1415,
											"end": 1425,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1415,
											"end": 1425,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 1415,
											"end": 1425,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "48"
										},
										{
											"begin": 1415,
											"end": 1425,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1415,
											"end": 1425,
											"name": "INVALID",
											"source": 13
										},
										{
											"begin": 1415,
											"end": 1425,
											"name": "tag",
											"source": 13,
											"value": "48"
										},
										{
											"begin": 1415,
											"end": 1425,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1415,
											"end": 1425,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1415,
											"end": 1425,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 1415,
											"end": 1425,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1415,
											"end": 1425,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1415,
											"end": 1425,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1415,
											"end": 1461,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1415,
											"end": 1461,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1415,
											"end": 1461,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1415,
											"end": 1461,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1241,
											"end": 1472,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1241,
											"end": 1472,
											"name": "tag",
											"source": 13,
											"value": "34"
										},
										{
											"begin": 1241,
											"end": 1472,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1506,
											"end": 1507,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 1477,
											"end": 1483,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1484,
											"end": 1485,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1477,
											"end": 1486,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1477,
											"end": 1486,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1477,
											"end": 1486,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1477,
											"end": 1486,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 1477,
											"end": 1486,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "49"
										},
										{
											"begin": 1477,
											"end": 1486,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1477,
											"end": 1486,
											"name": "INVALID",
											"source": 13
										},
										{
											"begin": 1477,
											"end": 1486,
											"name": "tag",
											"source": 13,
											"value": "49"
										},
										{
											"begin": 1477,
											"end": 1486,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1477,
											"end": 1486,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1477,
											"end": 1486,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 1477,
											"end": 1486,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1477,
											"end": 1486,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1477,
											"end": 1486,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1477,
											"end": 1486,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1477,
											"end": 1502,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 1477,
											"end": 1502,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1477,
											"end": 1502,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1477,
											"end": 1507,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 1477,
											"end": 1507,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1477,
											"end": 1507,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 1473,
											"end": 1704,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1473,
											"end": 1704,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "50"
										},
										{
											"begin": 1473,
											"end": 1704,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1523,
											"end": 1534,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1537,
											"end": 1546,
											"name": "PUSHLIB",
											"source": 13,
											"value": "contracts/libraries/UniswapV3.sol:UniswapV3"
										},
										{
											"begin": 1537,
											"end": 1557,
											"name": "PUSH",
											"source": 13,
											"value": "BCBCAA29"
										},
										{
											"begin": 1558,
											"end": 1564,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 1565,
											"end": 1566,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1558,
											"end": 1567,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1558,
											"end": 1567,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1558,
											"end": 1567,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1558,
											"end": 1567,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 1558,
											"end": 1567,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "51"
										},
										{
											"begin": 1558,
											"end": 1567,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1558,
											"end": 1567,
											"name": "INVALID",
											"source": 13
										},
										{
											"begin": 1558,
											"end": 1567,
											"name": "tag",
											"source": 13,
											"value": "51"
										},
										{
											"begin": 1558,
											"end": 1567,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1558,
											"end": 1567,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1558,
											"end": 1567,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 1558,
											"end": 1567,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1558,
											"end": 1567,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1558,
											"end": 1567,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1558,
											"end": 1567,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1558,
											"end": 1576,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 1558,
											"end": 1576,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1558,
											"end": 1576,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1577,
											"end": 1583,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 1584,
											"end": 1585,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 1577,
											"end": 1586,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1577,
											"end": 1586,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1577,
											"end": 1586,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1577,
											"end": 1586,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 1577,
											"end": 1586,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "52"
										},
										{
											"begin": 1577,
											"end": 1586,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1577,
											"end": 1586,
											"name": "INVALID",
											"source": 13
										},
										{
											"begin": 1577,
											"end": 1586,
											"name": "tag",
											"source": 13,
											"value": "52"
										},
										{
											"begin": 1577,
											"end": 1586,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1577,
											"end": 1586,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1577,
											"end": 1586,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 1577,
											"end": 1586,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1577,
											"end": 1586,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1577,
											"end": 1586,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1577,
											"end": 1586,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1577,
											"end": 1589,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1577,
											"end": 1589,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1577,
											"end": 1589,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1590,
											"end": 1596,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 1597,
											"end": 1598,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 1590,
											"end": 1599,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1590,
											"end": 1599,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1590,
											"end": 1599,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1590,
											"end": 1599,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 1590,
											"end": 1599,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "53"
										},
										{
											"begin": 1590,
											"end": 1599,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1590,
											"end": 1599,
											"name": "INVALID",
											"source": 13
										},
										{
											"begin": 1590,
											"end": 1599,
											"name": "tag",
											"source": 13,
											"value": "53"
										},
										{
											"begin": 1590,
											"end": 1599,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1590,
											"end": 1599,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1590,
											"end": 1599,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 1590,
											"end": 1599,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1590,
											"end": 1599,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1590,
											"end": 1599,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1590,
											"end": 1599,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1590,
											"end": 1602,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1590,
											"end": 1602,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1590,
											"end": 1602,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1603,
											"end": 1609,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 1610,
											"end": 1611,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 1603,
											"end": 1612,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1603,
											"end": 1612,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1603,
											"end": 1612,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1603,
											"end": 1612,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 1603,
											"end": 1612,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "54"
										},
										{
											"begin": 1603,
											"end": 1612,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1603,
											"end": 1612,
											"name": "INVALID",
											"source": 13
										},
										{
											"begin": 1603,
											"end": 1612,
											"name": "tag",
											"source": 13,
											"value": "54"
										},
										{
											"begin": 1603,
											"end": 1612,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1603,
											"end": 1612,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1603,
											"end": 1612,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 1603,
											"end": 1612,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1603,
											"end": 1612,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1603,
											"end": 1612,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1603,
											"end": 1612,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1603,
											"end": 1617,
											"name": "PUSH",
											"source": 13,
											"value": "A0"
										},
										{
											"begin": 1603,
											"end": 1617,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1603,
											"end": 1617,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1618,
											"end": 1624,
											"name": "DUP11",
											"source": 13
										},
										{
											"begin": 1625,
											"end": 1626,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 1618,
											"end": 1627,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1618,
											"end": 1627,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1618,
											"end": 1627,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1618,
											"end": 1627,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 1618,
											"end": 1627,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "55"
										},
										{
											"begin": 1618,
											"end": 1627,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1618,
											"end": 1627,
											"name": "INVALID",
											"source": 13
										},
										{
											"begin": 1618,
											"end": 1627,
											"name": "tag",
											"source": 13,
											"value": "55"
										},
										{
											"begin": 1618,
											"end": 1627,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1618,
											"end": 1627,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1618,
											"end": 1627,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 1618,
											"end": 1627,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1618,
											"end": 1627,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1618,
											"end": 1627,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1618,
											"end": 1627,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1618,
											"end": 1632,
											"name": "PUSH",
											"source": 13,
											"value": "C0"
										},
										{
											"begin": 1618,
											"end": 1632,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1618,
											"end": 1632,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1537,
											"end": 1633,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1537,
											"end": 1633,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1537,
											"end": 1633,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 1537,
											"end": 1633,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1537,
											"end": 1633,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1537,
											"end": 1633,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 1537,
											"end": 1633,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 1537,
											"end": 1633,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1537,
											"end": 1633,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1537,
											"end": 1633,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 1537,
											"end": 1633,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1537,
											"end": 1633,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "56"
										},
										{
											"begin": 1537,
											"end": 1633,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 1537,
											"end": 1633,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 1537,
											"end": 1633,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 1537,
											"end": 1633,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1537,
											"end": 1633,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1537,
											"end": 1633,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1537,
											"end": 1633,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "41"
										},
										{
											"begin": 1537,
											"end": 1633,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 1537,
											"end": 1633,
											"name": "tag",
											"source": 13,
											"value": "56"
										},
										{
											"begin": 1537,
											"end": 1633,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1537,
											"end": 1633,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1537,
											"end": 1633,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1537,
											"end": 1633,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1537,
											"end": 1633,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1537,
											"end": 1633,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1537,
											"end": 1633,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1537,
											"end": 1633,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1537,
											"end": 1633,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 1537,
											"end": 1633,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1537,
											"end": 1633,
											"name": "EXTCODESIZE",
											"source": 13
										},
										{
											"begin": 1537,
											"end": 1633,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1537,
											"end": 1633,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1537,
											"end": 1633,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1537,
											"end": 1633,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "57"
										},
										{
											"begin": 1537,
											"end": 1633,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1537,
											"end": 1633,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1537,
											"end": 1633,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1537,
											"end": 1633,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1537,
											"end": 1633,
											"name": "tag",
											"source": 13,
											"value": "57"
										},
										{
											"begin": 1537,
											"end": 1633,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1537,
											"end": 1633,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1537,
											"end": 1633,
											"name": "GAS",
											"source": 13
										},
										{
											"begin": 1537,
											"end": 1633,
											"name": "DELEGATECALL",
											"source": 13
										},
										{
											"begin": 1537,
											"end": 1633,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1537,
											"end": 1633,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1537,
											"end": 1633,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1537,
											"end": 1633,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "59"
										},
										{
											"begin": 1537,
											"end": 1633,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1537,
											"end": 1633,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 1537,
											"end": 1633,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1537,
											"end": 1633,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1537,
											"end": 1633,
											"name": "RETURNDATACOPY",
											"source": 13
										},
										{
											"begin": 1537,
											"end": 1633,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 1537,
											"end": 1633,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1537,
											"end": 1633,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1537,
											"end": 1633,
											"name": "tag",
											"source": 13,
											"value": "59"
										},
										{
											"begin": 1537,
											"end": 1633,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1537,
											"end": 1633,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1537,
											"end": 1633,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1537,
											"end": 1633,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1537,
											"end": 1633,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1537,
											"end": 1633,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1537,
											"end": 1633,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1537,
											"end": 1633,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 1537,
											"end": 1633,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 1537,
											"end": 1633,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 1537,
											"end": 1633,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 1537,
											"end": 1633,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1537,
											"end": 1633,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1537,
											"end": 1633,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1537,
											"end": 1633,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1537,
											"end": 1633,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1537,
											"end": 1633,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1537,
											"end": 1633,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1537,
											"end": 1633,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1537,
											"end": 1633,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1537,
											"end": 1633,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1537,
											"end": 1633,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1537,
											"end": 1633,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1537,
											"end": 1633,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 1537,
											"end": 1633,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1537,
											"end": 1633,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1537,
											"end": 1633,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "46"
										},
										{
											"begin": 1537,
											"end": 1633,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 1537,
											"end": 1633,
											"name": "tag",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 1537,
											"end": 1633,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1523,
											"end": 1633,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1523,
											"end": 1633,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1660,
											"end": 1693,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1660,
											"end": 1693,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1660,
											"end": 1693,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1660,
											"end": 1693,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1660,
											"end": 1693,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1660,
											"end": 1693,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1660,
											"end": 1693,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1660,
											"end": 1693,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1670,
											"end": 1676,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 1677,
											"end": 1678,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1670,
											"end": 1679,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1670,
											"end": 1679,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1670,
											"end": 1679,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1670,
											"end": 1679,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 1670,
											"end": 1679,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "61"
										},
										{
											"begin": 1670,
											"end": 1679,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1670,
											"end": 1679,
											"name": "INVALID",
											"source": 13
										},
										{
											"begin": 1670,
											"end": 1679,
											"name": "tag",
											"source": 13,
											"value": "61"
										},
										{
											"begin": 1670,
											"end": 1679,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1670,
											"end": 1679,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1670,
											"end": 1679,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 1670,
											"end": 1679,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1670,
											"end": 1679,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1670,
											"end": 1679,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1670,
											"end": 1679,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1670,
											"end": 1685,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1670,
											"end": 1685,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1670,
											"end": 1685,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1660,
											"end": 1693,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1660,
											"end": 1693,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1660,
											"end": 1693,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1660,
											"end": 1693,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1686,
											"end": 1692,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1660,
											"end": 1693,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1660,
											"end": 1693,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1660,
											"end": 1693,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1660,
											"end": 1693,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1660,
											"end": 1693,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1647,
											"end": 1654,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1655,
											"end": 1656,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1647,
											"end": 1657,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1647,
											"end": 1657,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1647,
											"end": 1657,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1647,
											"end": 1657,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 1647,
											"end": 1657,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "62"
										},
										{
											"begin": 1647,
											"end": 1657,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1647,
											"end": 1657,
											"name": "INVALID",
											"source": 13
										},
										{
											"begin": 1647,
											"end": 1657,
											"name": "tag",
											"source": 13,
											"value": "62"
										},
										{
											"begin": 1647,
											"end": 1657,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1647,
											"end": 1657,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1647,
											"end": 1657,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 1647,
											"end": 1657,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1647,
											"end": 1657,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1647,
											"end": 1657,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1647,
											"end": 1693,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1647,
											"end": 1693,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1647,
											"end": 1693,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1647,
											"end": 1693,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1473,
											"end": 1704,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1473,
											"end": 1704,
											"name": "tag",
											"source": 13,
											"value": "50"
										},
										{
											"begin": 1473,
											"end": 1704,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1227,
											"end": 1230,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1227,
											"end": 1230,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1227,
											"end": 1230,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 1227,
											"end": 1230,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1227,
											"end": 1230,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1227,
											"end": 1230,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1227,
											"end": 1230,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1197,
											"end": 1733,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "30"
										},
										{
											"begin": 1197,
											"end": 1733,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1197,
											"end": 1733,
											"name": "tag",
											"source": 13,
											"value": "31"
										},
										{
											"begin": 1197,
											"end": 1733,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1197,
											"end": 1733,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1745,
											"end": 1752,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1738,
											"end": 1752,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1738,
											"end": 1752,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1738,
											"end": 1752,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1024,
											"end": 1759,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1024,
											"end": 1759,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1024,
											"end": 1759,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1024,
											"end": 1759,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 1766,
											"end": 2161,
											"name": "tag",
											"source": 13,
											"value": "15"
										},
										{
											"begin": 1766,
											"end": 2161,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1897,
											"end": 1914,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1915,
											"end": 1925,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1951,
											"end": 1952,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 1940,
											"end": 1947,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1940,
											"end": 1952,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 1940,
											"end": 1952,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1940,
											"end": 1952,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 1936,
											"end": 2154,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1936,
											"end": 2154,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 1936,
											"end": 2154,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1976,
											"end": 1985,
											"name": "PUSHLIB",
											"source": 13,
											"value": "contracts/libraries/UniswapV2.sol:UniswapV2"
										},
										{
											"begin": 1976,
											"end": 2003,
											"name": "PUSH",
											"source": 13,
											"value": "8C39560E"
										},
										{
											"begin": 2004,
											"end": 2012,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 2014,
											"end": 2016,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 2018,
											"end": 2020,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 2021,
											"end": 2029,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 1976,
											"end": 2030,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1976,
											"end": 2030,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1976,
											"end": 2030,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 1976,
											"end": 2030,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1976,
											"end": 2030,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1976,
											"end": 2030,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 1976,
											"end": 2030,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 1976,
											"end": 2030,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1976,
											"end": 2030,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1976,
											"end": 2030,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 1976,
											"end": 2030,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1976,
											"end": 2030,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "65"
										},
										{
											"begin": 1976,
											"end": 2030,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 1976,
											"end": 2030,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 1976,
											"end": 2030,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1976,
											"end": 2030,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1976,
											"end": 2030,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1976,
											"end": 2030,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "66"
										},
										{
											"begin": 1976,
											"end": 2030,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 1976,
											"end": 2030,
											"name": "tag",
											"source": 13,
											"value": "65"
										},
										{
											"begin": 1976,
											"end": 2030,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1976,
											"end": 2030,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1976,
											"end": 2030,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1976,
											"end": 2030,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1976,
											"end": 2030,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1976,
											"end": 2030,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1976,
											"end": 2030,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1976,
											"end": 2030,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1976,
											"end": 2030,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 1976,
											"end": 2030,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1976,
											"end": 2030,
											"name": "EXTCODESIZE",
											"source": 13
										},
										{
											"begin": 1976,
											"end": 2030,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1976,
											"end": 2030,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1976,
											"end": 2030,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1976,
											"end": 2030,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "67"
										},
										{
											"begin": 1976,
											"end": 2030,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1976,
											"end": 2030,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1976,
											"end": 2030,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1976,
											"end": 2030,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1976,
											"end": 2030,
											"name": "tag",
											"source": 13,
											"value": "67"
										},
										{
											"begin": 1976,
											"end": 2030,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1976,
											"end": 2030,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1976,
											"end": 2030,
											"name": "GAS",
											"source": 13
										},
										{
											"begin": 1976,
											"end": 2030,
											"name": "DELEGATECALL",
											"source": 13
										},
										{
											"begin": 1976,
											"end": 2030,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1976,
											"end": 2030,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1976,
											"end": 2030,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1976,
											"end": 2030,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "69"
										},
										{
											"begin": 1976,
											"end": 2030,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1976,
											"end": 2030,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 1976,
											"end": 2030,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1976,
											"end": 2030,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1976,
											"end": 2030,
											"name": "RETURNDATACOPY",
											"source": 13
										},
										{
											"begin": 1976,
											"end": 2030,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 1976,
											"end": 2030,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1976,
											"end": 2030,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1976,
											"end": 2030,
											"name": "tag",
											"source": 13,
											"value": "69"
										},
										{
											"begin": 1976,
											"end": 2030,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1976,
											"end": 2030,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1976,
											"end": 2030,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1976,
											"end": 2030,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1976,
											"end": 2030,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1976,
											"end": 2030,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1976,
											"end": 2030,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1976,
											"end": 2030,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 1976,
											"end": 2030,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 1976,
											"end": 2030,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 1976,
											"end": 2030,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 1976,
											"end": 2030,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1976,
											"end": 2030,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1976,
											"end": 2030,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1976,
											"end": 2030,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1976,
											"end": 2030,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1976,
											"end": 2030,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1976,
											"end": 2030,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1976,
											"end": 2030,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1976,
											"end": 2030,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1976,
											"end": 2030,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1976,
											"end": 2030,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1976,
											"end": 2030,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1976,
											"end": 2030,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "70"
										},
										{
											"begin": 1976,
											"end": 2030,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1976,
											"end": 2030,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1976,
											"end": 2030,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "71"
										},
										{
											"begin": 1976,
											"end": 2030,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 1976,
											"end": 2030,
											"name": "tag",
											"source": 13,
											"value": "70"
										},
										{
											"begin": 1976,
											"end": 2030,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2031,
											"end": 2032,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1968,
											"end": 2033,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1968,
											"end": 2033,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1968,
											"end": 2033,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1968,
											"end": 2033,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1968,
											"end": 2033,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "63"
										},
										{
											"begin": 1968,
											"end": 2033,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1936,
											"end": 2154,
											"name": "tag",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 1936,
											"end": 2154,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2064,
											"end": 2065,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 2053,
											"end": 2060,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2053,
											"end": 2065,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 2053,
											"end": 2065,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2053,
											"end": 2065,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 2049,
											"end": 2154,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2049,
											"end": 2154,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "73"
										},
										{
											"begin": 2049,
											"end": 2154,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2088,
											"end": 2097,
											"name": "PUSHLIB",
											"source": 13,
											"value": "contracts/libraries/UniswapV3.sol:UniswapV3"
										},
										{
											"begin": 2088,
											"end": 2115,
											"name": "PUSH",
											"source": 13,
											"value": "8C39560E"
										},
										{
											"begin": 2116,
											"end": 2124,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 2126,
											"end": 2128,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 2130,
											"end": 2132,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 2134,
											"end": 2142,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 2088,
											"end": 2143,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2088,
											"end": 2143,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 2088,
											"end": 2143,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 2088,
											"end": 2143,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2088,
											"end": 2143,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2088,
											"end": 2143,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 2088,
											"end": 2143,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 2088,
											"end": 2143,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2088,
											"end": 2143,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2088,
											"end": 2143,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 2088,
											"end": 2143,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2088,
											"end": 2143,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "74"
										},
										{
											"begin": 2088,
											"end": 2143,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 2088,
											"end": 2143,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 2088,
											"end": 2143,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2088,
											"end": 2143,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2088,
											"end": 2143,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2088,
											"end": 2143,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "66"
										},
										{
											"begin": 2088,
											"end": 2143,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 2088,
											"end": 2143,
											"name": "tag",
											"source": 13,
											"value": "74"
										},
										{
											"begin": 2088,
											"end": 2143,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2088,
											"end": 2143,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2088,
											"end": 2143,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2088,
											"end": 2143,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 2088,
											"end": 2143,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2088,
											"end": 2143,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2088,
											"end": 2143,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 2088,
											"end": 2143,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2088,
											"end": 2143,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 2088,
											"end": 2143,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2088,
											"end": 2143,
											"name": "EXTCODESIZE",
											"source": 13
										},
										{
											"begin": 2088,
											"end": 2143,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2088,
											"end": 2143,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2088,
											"end": 2143,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2088,
											"end": 2143,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "75"
										},
										{
											"begin": 2088,
											"end": 2143,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2088,
											"end": 2143,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2088,
											"end": 2143,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2088,
											"end": 2143,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2088,
											"end": 2143,
											"name": "tag",
											"source": 13,
											"value": "75"
										},
										{
											"begin": 2088,
											"end": 2143,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2088,
											"end": 2143,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2088,
											"end": 2143,
											"name": "GAS",
											"source": 13
										},
										{
											"begin": 2088,
											"end": 2143,
											"name": "DELEGATECALL",
											"source": 13
										},
										{
											"begin": 2088,
											"end": 2143,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2088,
											"end": 2143,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2088,
											"end": 2143,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2088,
											"end": 2143,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "77"
										},
										{
											"begin": 2088,
											"end": 2143,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2088,
											"end": 2143,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 2088,
											"end": 2143,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2088,
											"end": 2143,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2088,
											"end": 2143,
											"name": "RETURNDATACOPY",
											"source": 13
										},
										{
											"begin": 2088,
											"end": 2143,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 2088,
											"end": 2143,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2088,
											"end": 2143,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2088,
											"end": 2143,
											"name": "tag",
											"source": 13,
											"value": "77"
										},
										{
											"begin": 2088,
											"end": 2143,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2088,
											"end": 2143,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2088,
											"end": 2143,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2088,
											"end": 2143,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2088,
											"end": 2143,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2088,
											"end": 2143,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2088,
											"end": 2143,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 2088,
											"end": 2143,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 2088,
											"end": 2143,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 2088,
											"end": 2143,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 2088,
											"end": 2143,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 2088,
											"end": 2143,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2088,
											"end": 2143,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2088,
											"end": 2143,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 2088,
											"end": 2143,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2088,
											"end": 2143,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2088,
											"end": 2143,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2088,
											"end": 2143,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2088,
											"end": 2143,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2088,
											"end": 2143,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2088,
											"end": 2143,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2088,
											"end": 2143,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2088,
											"end": 2143,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2088,
											"end": 2143,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "78"
										},
										{
											"begin": 2088,
											"end": 2143,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2088,
											"end": 2143,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2088,
											"end": 2143,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "79"
										},
										{
											"begin": 2088,
											"end": 2143,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 2088,
											"end": 2143,
											"name": "tag",
											"source": 13,
											"value": "78"
										},
										{
											"begin": 2088,
											"end": 2143,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2081,
											"end": 2143,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2081,
											"end": 2143,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2081,
											"end": 2143,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2081,
											"end": 2143,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2081,
											"end": 2143,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "63"
										},
										{
											"begin": 2081,
											"end": 2143,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2049,
											"end": 2154,
											"name": "tag",
											"source": 13,
											"value": "73"
										},
										{
											"begin": 2049,
											"end": 2154,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1766,
											"end": 2161,
											"name": "tag",
											"source": 13,
											"value": "63"
										},
										{
											"begin": 1766,
											"end": 2161,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1766,
											"end": 2161,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 1766,
											"end": 2161,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1766,
											"end": 2161,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 1766,
											"end": 2161,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 1766,
											"end": 2161,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1766,
											"end": 2161,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1766,
											"end": 2161,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1766,
											"end": 2161,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1766,
											"end": 2161,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": 323,
											"end": 1018,
											"name": "tag",
											"source": 13,
											"value": "21"
										},
										{
											"begin": 323,
											"end": 1018,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 397,
											"end": 414,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 426,
											"end": 451,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 469,
											"end": 475,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 469,
											"end": 482,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 454,
											"end": 483,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 454,
											"end": 483,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 454,
											"end": 483,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 454,
											"end": 483,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 454,
											"end": 483,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 454,
											"end": 483,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "81"
										},
										{
											"begin": 454,
											"end": 483,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 454,
											"end": 483,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 454,
											"end": 483,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 454,
											"end": 483,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 454,
											"end": 483,
											"name": "tag",
											"source": 13,
											"value": "81"
										},
										{
											"begin": 454,
											"end": 483,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 454,
											"end": 483,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 454,
											"end": 483,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 454,
											"end": 483,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 454,
											"end": 483,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 454,
											"end": 483,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 454,
											"end": 483,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 454,
											"end": 483,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 454,
											"end": 483,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 454,
											"end": 483,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 454,
											"end": 483,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 454,
											"end": 483,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 454,
											"end": 483,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 454,
											"end": 483,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 454,
											"end": 483,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 454,
											"end": 483,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 454,
											"end": 483,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 454,
											"end": 483,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 454,
											"end": 483,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 454,
											"end": 483,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "82"
										},
										{
											"begin": 454,
											"end": 483,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 454,
											"end": 483,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 454,
											"end": 483,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 454,
											"end": 483,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 454,
											"end": 483,
											"name": "tag",
											"source": 13,
											"value": "83"
										},
										{
											"begin": 454,
											"end": 483,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 454,
											"end": 483,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "84"
										},
										{
											"begin": 454,
											"end": 483,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "85"
										},
										{
											"begin": 454,
											"end": 483,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 454,
											"end": 483,
											"name": "tag",
											"source": 13,
											"value": "84"
										},
										{
											"begin": 454,
											"end": 483,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 454,
											"end": 483,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 454,
											"end": 483,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 454,
											"end": 483,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 454,
											"end": 483,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 454,
											"end": 483,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 454,
											"end": 483,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 454,
											"end": 483,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 454,
											"end": 483,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 454,
											"end": 483,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 454,
											"end": 483,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 454,
											"end": 483,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "83"
										},
										{
											"begin": 454,
											"end": 483,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 454,
											"end": 483,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 454,
											"end": 483,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 454,
											"end": 483,
											"name": "tag",
											"source": 13,
											"value": "82"
										},
										{
											"begin": 454,
											"end": 483,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 454,
											"end": 483,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 426,
											"end": 483,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 426,
											"end": 483,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 497,
											"end": 503,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 492,
											"end": 984,
											"name": "tag",
											"source": 13,
											"value": "86"
										},
										{
											"begin": 492,
											"end": 984,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 508,
											"end": 514,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 508,
											"end": 521,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 506,
											"end": 507,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 506,
											"end": 521,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 492,
											"end": 984,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 492,
											"end": 984,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "87"
										},
										{
											"begin": 492,
											"end": 984,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 569,
											"end": 570,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 540,
											"end": 546,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 547,
											"end": 548,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 540,
											"end": 549,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 540,
											"end": 549,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 540,
											"end": 549,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 540,
											"end": 549,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 540,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "89"
										},
										{
											"begin": 540,
											"end": 549,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 540,
											"end": 549,
											"name": "INVALID",
											"source": 13
										},
										{
											"begin": 540,
											"end": 549,
											"name": "tag",
											"source": 13,
											"value": "89"
										},
										{
											"begin": 540,
											"end": 549,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 540,
											"end": 549,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 540,
											"end": 549,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 540,
											"end": 549,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 540,
											"end": 549,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 540,
											"end": 549,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 540,
											"end": 549,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 540,
											"end": 565,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 540,
											"end": 565,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 540,
											"end": 565,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 540,
											"end": 570,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 540,
											"end": 570,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 540,
											"end": 570,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 536,
											"end": 975,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 536,
											"end": 975,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "90"
										},
										{
											"begin": 536,
											"end": 975,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 586,
											"end": 599,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 602,
											"end": 611,
											"name": "PUSHLIB",
											"source": 13,
											"value": "contracts/libraries/UniswapV2.sol:UniswapV2"
										},
										{
											"begin": 602,
											"end": 617,
											"name": "PUSH",
											"source": 13,
											"value": "C361E0B1"
										},
										{
											"begin": 618,
											"end": 624,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 625,
											"end": 626,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 618,
											"end": 627,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 618,
											"end": 627,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 618,
											"end": 627,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 618,
											"end": 627,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 618,
											"end": 627,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "91"
										},
										{
											"begin": 618,
											"end": 627,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 618,
											"end": 627,
											"name": "INVALID",
											"source": 13
										},
										{
											"begin": 618,
											"end": 627,
											"name": "tag",
											"source": 13,
											"value": "91"
										},
										{
											"begin": 618,
											"end": 627,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 618,
											"end": 627,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 618,
											"end": 627,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 618,
											"end": 627,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 618,
											"end": 627,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 618,
											"end": 627,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 618,
											"end": 627,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 618,
											"end": 636,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 618,
											"end": 636,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 618,
											"end": 636,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 637,
											"end": 643,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 644,
											"end": 645,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 637,
											"end": 646,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 637,
											"end": 646,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 637,
											"end": 646,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 637,
											"end": 646,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 637,
											"end": 646,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "92"
										},
										{
											"begin": 637,
											"end": 646,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 637,
											"end": 646,
											"name": "INVALID",
											"source": 13
										},
										{
											"begin": 637,
											"end": 646,
											"name": "tag",
											"source": 13,
											"value": "92"
										},
										{
											"begin": 637,
											"end": 646,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 637,
											"end": 646,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 637,
											"end": 646,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 637,
											"end": 646,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 637,
											"end": 646,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 637,
											"end": 646,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 637,
											"end": 646,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 637,
											"end": 649,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 637,
											"end": 649,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 637,
											"end": 649,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 650,
											"end": 656,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 657,
											"end": 658,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 650,
											"end": 659,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 650,
											"end": 659,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 650,
											"end": 659,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 650,
											"end": 659,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 650,
											"end": 659,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "93"
										},
										{
											"begin": 650,
											"end": 659,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 650,
											"end": 659,
											"name": "INVALID",
											"source": 13
										},
										{
											"begin": 650,
											"end": 659,
											"name": "tag",
											"source": 13,
											"value": "93"
										},
										{
											"begin": 650,
											"end": 659,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 650,
											"end": 659,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 650,
											"end": 659,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 650,
											"end": 659,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 650,
											"end": 659,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 650,
											"end": 659,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 650,
											"end": 659,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 650,
											"end": 662,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 650,
											"end": 662,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 650,
											"end": 662,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 602,
											"end": 663,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 602,
											"end": 663,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 602,
											"end": 663,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 602,
											"end": 663,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFF"
										},
										{
											"begin": 602,
											"end": 663,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 602,
											"end": 663,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 602,
											"end": 663,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 602,
											"end": 663,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 602,
											"end": 663,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 602,
											"end": 663,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 602,
											"end": 663,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 602,
											"end": 663,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "94"
										},
										{
											"begin": 602,
											"end": 663,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 602,
											"end": 663,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 602,
											"end": 663,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 602,
											"end": 663,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 602,
											"end": 663,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "95"
										},
										{
											"begin": 602,
											"end": 663,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 602,
											"end": 663,
											"name": "tag",
											"source": 13,
											"value": "94"
										},
										{
											"begin": 602,
											"end": 663,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 602,
											"end": 663,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 602,
											"end": 663,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 602,
											"end": 663,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 602,
											"end": 663,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 602,
											"end": 663,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 602,
											"end": 663,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 602,
											"end": 663,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 602,
											"end": 663,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 602,
											"end": 663,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 602,
											"end": 663,
											"name": "EXTCODESIZE",
											"source": 13
										},
										{
											"begin": 602,
											"end": 663,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 602,
											"end": 663,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 602,
											"end": 663,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 602,
											"end": 663,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "96"
										},
										{
											"begin": 602,
											"end": 663,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 602,
											"end": 663,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 602,
											"end": 663,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 602,
											"end": 663,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 602,
											"end": 663,
											"name": "tag",
											"source": 13,
											"value": "96"
										},
										{
											"begin": 602,
											"end": 663,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 602,
											"end": 663,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 602,
											"end": 663,
											"name": "GAS",
											"source": 13
										},
										{
											"begin": 602,
											"end": 663,
											"name": "DELEGATECALL",
											"source": 13
										},
										{
											"begin": 602,
											"end": 663,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 602,
											"end": 663,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 602,
											"end": 663,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 602,
											"end": 663,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "98"
										},
										{
											"begin": 602,
											"end": 663,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 602,
											"end": 663,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 602,
											"end": 663,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 602,
											"end": 663,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 602,
											"end": 663,
											"name": "RETURNDATACOPY",
											"source": 13
										},
										{
											"begin": 602,
											"end": 663,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 602,
											"end": 663,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 602,
											"end": 663,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 602,
											"end": 663,
											"name": "tag",
											"source": 13,
											"value": "98"
										},
										{
											"begin": 602,
											"end": 663,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 602,
											"end": 663,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 602,
											"end": 663,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 602,
											"end": 663,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 602,
											"end": 663,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 602,
											"end": 663,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 602,
											"end": 663,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 602,
											"end": 663,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 602,
											"end": 663,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 602,
											"end": 663,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 602,
											"end": 663,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 602,
											"end": 663,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 602,
											"end": 663,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 602,
											"end": 663,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 602,
											"end": 663,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 602,
											"end": 663,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 602,
											"end": 663,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 602,
											"end": 663,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 602,
											"end": 663,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 602,
											"end": 663,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 602,
											"end": 663,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 602,
											"end": 663,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 602,
											"end": 663,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 602,
											"end": 663,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "99"
										},
										{
											"begin": 602,
											"end": 663,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 602,
											"end": 663,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 602,
											"end": 663,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "71"
										},
										{
											"begin": 602,
											"end": 663,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 602,
											"end": 663,
											"name": "tag",
											"source": 13,
											"value": "99"
										},
										{
											"begin": 602,
											"end": 663,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 586,
											"end": 663,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 586,
											"end": 663,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 690,
											"end": 723,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 690,
											"end": 723,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 690,
											"end": 723,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 690,
											"end": 723,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 690,
											"end": 723,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 690,
											"end": 723,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 690,
											"end": 723,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 690,
											"end": 723,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 699,
											"end": 705,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 706,
											"end": 707,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 699,
											"end": 708,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 699,
											"end": 708,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 699,
											"end": 708,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 699,
											"end": 708,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 699,
											"end": 708,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 699,
											"end": 708,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 699,
											"end": 708,
											"name": "INVALID",
											"source": 13
										},
										{
											"begin": 699,
											"end": 708,
											"name": "tag",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 699,
											"end": 708,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 699,
											"end": 708,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 699,
											"end": 708,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 699,
											"end": 708,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 699,
											"end": 708,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 699,
											"end": 708,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 699,
											"end": 708,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 699,
											"end": 714,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 699,
											"end": 714,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 699,
											"end": 714,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 690,
											"end": 723,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 690,
											"end": 723,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 690,
											"end": 723,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 690,
											"end": 723,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 715,
											"end": 720,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 690,
											"end": 723,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 690,
											"end": 723,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 690,
											"end": 723,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 690,
											"end": 723,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 721,
											"end": 722,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 690,
											"end": 723,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFF"
										},
										{
											"begin": 690,
											"end": 723,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 690,
											"end": 723,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 690,
											"end": 723,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 690,
											"end": 723,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 677,
											"end": 684,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 685,
											"end": 686,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 677,
											"end": 687,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 677,
											"end": 687,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 677,
											"end": 687,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 677,
											"end": 687,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 677,
											"end": 687,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "101"
										},
										{
											"begin": 677,
											"end": 687,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 677,
											"end": 687,
											"name": "INVALID",
											"source": 13
										},
										{
											"begin": 677,
											"end": 687,
											"name": "tag",
											"source": 13,
											"value": "101"
										},
										{
											"begin": 677,
											"end": 687,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 677,
											"end": 687,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 677,
											"end": 687,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 677,
											"end": 687,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 677,
											"end": 687,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 677,
											"end": 687,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 677,
											"end": 723,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 677,
											"end": 723,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 677,
											"end": 723,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 677,
											"end": 723,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 536,
											"end": 975,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 536,
											"end": 975,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "102"
										},
										{
											"begin": 536,
											"end": 975,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 536,
											"end": 975,
											"name": "tag",
											"source": 13,
											"value": "90"
										},
										{
											"begin": 536,
											"end": 975,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 783,
											"end": 784,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 754,
											"end": 760,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 761,
											"end": 762,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 754,
											"end": 763,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 754,
											"end": 763,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 754,
											"end": 763,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 754,
											"end": 763,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 754,
											"end": 763,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "103"
										},
										{
											"begin": 754,
											"end": 763,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 754,
											"end": 763,
											"name": "INVALID",
											"source": 13
										},
										{
											"begin": 754,
											"end": 763,
											"name": "tag",
											"source": 13,
											"value": "103"
										},
										{
											"begin": 754,
											"end": 763,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 754,
											"end": 763,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 754,
											"end": 763,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 754,
											"end": 763,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 754,
											"end": 763,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 754,
											"end": 763,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 754,
											"end": 763,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 754,
											"end": 779,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 754,
											"end": 779,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 754,
											"end": 779,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 754,
											"end": 784,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 754,
											"end": 784,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 754,
											"end": 784,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 750,
											"end": 975,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 750,
											"end": 975,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "104"
										},
										{
											"begin": 750,
											"end": 975,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 801,
											"end": 814,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 815,
											"end": 825,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 829,
											"end": 838,
											"name": "PUSHLIB",
											"source": 13,
											"value": "contracts/libraries/UniswapV3.sol:UniswapV3"
										},
										{
											"begin": 829,
											"end": 844,
											"name": "PUSH",
											"source": 13,
											"value": "C361E0B1"
										},
										{
											"begin": 845,
											"end": 851,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 852,
											"end": 853,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 845,
											"end": 854,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 845,
											"end": 854,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 845,
											"end": 854,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 845,
											"end": 854,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 845,
											"end": 854,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "105"
										},
										{
											"begin": 845,
											"end": 854,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 845,
											"end": 854,
											"name": "INVALID",
											"source": 13
										},
										{
											"begin": 845,
											"end": 854,
											"name": "tag",
											"source": 13,
											"value": "105"
										},
										{
											"begin": 845,
											"end": 854,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 845,
											"end": 854,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 845,
											"end": 854,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 845,
											"end": 854,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 845,
											"end": 854,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 845,
											"end": 854,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 845,
											"end": 854,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 845,
											"end": 863,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 845,
											"end": 863,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 845,
											"end": 863,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 864,
											"end": 870,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 871,
											"end": 872,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 864,
											"end": 873,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 864,
											"end": 873,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 864,
											"end": 873,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 864,
											"end": 873,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 864,
											"end": 873,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "106"
										},
										{
											"begin": 864,
											"end": 873,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 864,
											"end": 873,
											"name": "INVALID",
											"source": 13
										},
										{
											"begin": 864,
											"end": 873,
											"name": "tag",
											"source": 13,
											"value": "106"
										},
										{
											"begin": 864,
											"end": 873,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 864,
											"end": 873,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 864,
											"end": 873,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 864,
											"end": 873,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 864,
											"end": 873,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 864,
											"end": 873,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 864,
											"end": 873,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 864,
											"end": 876,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 864,
											"end": 876,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 864,
											"end": 876,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 877,
											"end": 883,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 884,
											"end": 885,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 877,
											"end": 886,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 877,
											"end": 886,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 877,
											"end": 886,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 877,
											"end": 886,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 877,
											"end": 886,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "107"
										},
										{
											"begin": 877,
											"end": 886,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 877,
											"end": 886,
											"name": "INVALID",
											"source": 13
										},
										{
											"begin": 877,
											"end": 886,
											"name": "tag",
											"source": 13,
											"value": "107"
										},
										{
											"begin": 877,
											"end": 886,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 877,
											"end": 886,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 877,
											"end": 886,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 877,
											"end": 886,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 877,
											"end": 886,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 877,
											"end": 886,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 877,
											"end": 886,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 877,
											"end": 889,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 877,
											"end": 889,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 877,
											"end": 889,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 829,
											"end": 890,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 829,
											"end": 890,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 829,
											"end": 890,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 829,
											"end": 890,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFF"
										},
										{
											"begin": 829,
											"end": 890,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 829,
											"end": 890,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 829,
											"end": 890,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 829,
											"end": 890,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 829,
											"end": 890,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 829,
											"end": 890,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 829,
											"end": 890,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 829,
											"end": 890,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "108"
										},
										{
											"begin": 829,
											"end": 890,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 829,
											"end": 890,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 829,
											"end": 890,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 829,
											"end": 890,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 829,
											"end": 890,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "95"
										},
										{
											"begin": 829,
											"end": 890,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 829,
											"end": 890,
											"name": "tag",
											"source": 13,
											"value": "108"
										},
										{
											"begin": 829,
											"end": 890,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 829,
											"end": 890,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 829,
											"end": 890,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 829,
											"end": 890,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 829,
											"end": 890,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 829,
											"end": 890,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 829,
											"end": 890,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 829,
											"end": 890,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 829,
											"end": 890,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 829,
											"end": 890,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 829,
											"end": 890,
											"name": "EXTCODESIZE",
											"source": 13
										},
										{
											"begin": 829,
											"end": 890,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 829,
											"end": 890,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 829,
											"end": 890,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 829,
											"end": 890,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "109"
										},
										{
											"begin": 829,
											"end": 890,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 829,
											"end": 890,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 829,
											"end": 890,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 829,
											"end": 890,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 829,
											"end": 890,
											"name": "tag",
											"source": 13,
											"value": "109"
										},
										{
											"begin": 829,
											"end": 890,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 829,
											"end": 890,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 829,
											"end": 890,
											"name": "GAS",
											"source": 13
										},
										{
											"begin": 829,
											"end": 890,
											"name": "DELEGATECALL",
											"source": 13
										},
										{
											"begin": 829,
											"end": 890,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 829,
											"end": 890,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 829,
											"end": 890,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 829,
											"end": 890,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "111"
										},
										{
											"begin": 829,
											"end": 890,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 829,
											"end": 890,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 829,
											"end": 890,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 829,
											"end": 890,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 829,
											"end": 890,
											"name": "RETURNDATACOPY",
											"source": 13
										},
										{
											"begin": 829,
											"end": 890,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 829,
											"end": 890,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 829,
											"end": 890,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 829,
											"end": 890,
											"name": "tag",
											"source": 13,
											"value": "111"
										},
										{
											"begin": 829,
											"end": 890,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 829,
											"end": 890,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 829,
											"end": 890,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 829,
											"end": 890,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 829,
											"end": 890,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 829,
											"end": 890,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 829,
											"end": 890,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 829,
											"end": 890,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 829,
											"end": 890,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 829,
											"end": 890,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 829,
											"end": 890,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 829,
											"end": 890,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 829,
											"end": 890,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 829,
											"end": 890,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 829,
											"end": 890,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 829,
											"end": 890,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 829,
											"end": 890,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 829,
											"end": 890,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 829,
											"end": 890,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 829,
											"end": 890,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 829,
											"end": 890,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 829,
											"end": 890,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 829,
											"end": 890,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 829,
											"end": 890,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "112"
										},
										{
											"begin": 829,
											"end": 890,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 829,
											"end": 890,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 829,
											"end": 890,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "79"
										},
										{
											"begin": 829,
											"end": 890,
											"name": "JUMP",
											"source": 13,
											"value": "[in]"
										},
										{
											"begin": 829,
											"end": 890,
											"name": "tag",
											"source": 13,
											"value": "112"
										},
										{
											"begin": 829,
											"end": 890,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 800,
											"end": 890,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 800,
											"end": 890,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 800,
											"end": 890,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 800,
											"end": 890,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 917,
											"end": 952,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 917,
											"end": 952,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 917,
											"end": 952,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 917,
											"end": 952,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 917,
											"end": 952,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 917,
											"end": 952,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 917,
											"end": 952,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 917,
											"end": 952,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 926,
											"end": 932,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 933,
											"end": 934,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 926,
											"end": 935,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 926,
											"end": 935,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 926,
											"end": 935,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 926,
											"end": 935,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 926,
											"end": 935,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "113"
										},
										{
											"begin": 926,
											"end": 935,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 926,
											"end": 935,
											"name": "INVALID",
											"source": 13
										},
										{
											"begin": 926,
											"end": 935,
											"name": "tag",
											"source": 13,
											"value": "113"
										},
										{
											"begin": 926,
											"end": 935,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 926,
											"end": 935,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 926,
											"end": 935,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 926,
											"end": 935,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 926,
											"end": 935,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 926,
											"end": 935,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 926,
											"end": 935,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 926,
											"end": 941,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 926,
											"end": 941,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 926,
											"end": 941,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 917,
											"end": 952,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 917,
											"end": 952,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 917,
											"end": 952,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 917,
											"end": 952,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 942,
											"end": 947,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 917,
											"end": 952,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 917,
											"end": 952,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 917,
											"end": 952,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 917,
											"end": 952,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 948,
											"end": 951,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 917,
											"end": 952,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFF"
										},
										{
											"begin": 917,
											"end": 952,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 917,
											"end": 952,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 917,
											"end": 952,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 917,
											"end": 952,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 904,
											"end": 911,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 912,
											"end": 913,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 904,
											"end": 914,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 904,
											"end": 914,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 904,
											"end": 914,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 904,
											"end": 914,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 904,
											"end": 914,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "114"
										},
										{
											"begin": 904,
											"end": 914,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 904,
											"end": 914,
											"name": "INVALID",
											"source": 13
										},
										{
											"begin": 904,
											"end": 914,
											"name": "tag",
											"source": 13,
											"value": "114"
										},
										{
											"begin": 904,
											"end": 914,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 904,
											"end": 914,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 904,
											"end": 914,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 904,
											"end": 914,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 904,
											"end": 914,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 904,
											"end": 914,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 904,
											"end": 952,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 904,
											"end": 952,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 904,
											"end": 952,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 904,
											"end": 952,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 750,
											"end": 975,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 750,
											"end": 975,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 750,
											"end": 975,
											"name": "tag",
											"source": 13,
											"value": "104"
										},
										{
											"begin": 750,
											"end": 975,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 536,
											"end": 975,
											"name": "tag",
											"source": 13,
											"value": "102"
										},
										{
											"begin": 536,
											"end": 975,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 522,
											"end": 525,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 522,
											"end": 525,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 522,
											"end": 525,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 522,
											"end": 525,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 522,
											"end": 525,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 522,
											"end": 525,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 522,
											"end": 525,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 492,
											"end": 984,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "86"
										},
										{
											"begin": 492,
											"end": 984,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 492,
											"end": 984,
											"name": "tag",
											"source": 13,
											"value": "87"
										},
										{
											"begin": 492,
											"end": 984,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 492,
											"end": 984,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1004,
											"end": 1011,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 997,
											"end": 1011,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 997,
											"end": 1011,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 997,
											"end": 1011,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 323,
											"end": 1018,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 323,
											"end": 1018,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 323,
											"end": 1018,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 323,
											"end": 1018,
											"name": "JUMP",
											"source": 13,
											"value": "[out]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "29"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "85"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 49,
											"end": 749,
											"name": "tag",
											"source": 19,
											"value": "116"
										},
										{
											"begin": 49,
											"end": 749,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 49,
											"end": 749,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 196,
											"end": 302,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "118"
										},
										{
											"begin": 211,
											"end": 301,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "119"
										},
										{
											"begin": 294,
											"end": 300,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 211,
											"end": 301,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "120"
										},
										{
											"begin": 211,
											"end": 301,
											"name": "JUMP",
											"source": 19,
											"value": "[in]"
										},
										{
											"begin": 211,
											"end": 301,
											"name": "tag",
											"source": 19,
											"value": "119"
										},
										{
											"begin": 211,
											"end": 301,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 196,
											"end": 302,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "121"
										},
										{
											"begin": 196,
											"end": 302,
											"name": "JUMP",
											"source": 19,
											"value": "[in]"
										},
										{
											"begin": 196,
											"end": 302,
											"name": "tag",
											"source": 19,
											"value": "118"
										},
										{
											"begin": 196,
											"end": 302,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 187,
											"end": 302,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 187,
											"end": 302,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 322,
											"end": 327,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 350,
											"end": 356,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 343,
											"end": 348,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 336,
											"end": 357,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 376,
											"end": 380,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 369,
											"end": 374,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 365,
											"end": 381,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 358,
											"end": 381,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 358,
											"end": 381,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 401,
											"end": 407,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 451,
											"end": 454,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 443,
											"end": 447,
											"name": "PUSH",
											"source": 19,
											"value": "E0"
										},
										{
											"begin": 435,
											"end": 441,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 431,
											"end": 448,
											"name": "MUL",
											"source": 19
										},
										{
											"begin": 426,
											"end": 429,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 422,
											"end": 449,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 419,
											"end": 455,
											"name": "GT",
											"source": 19
										},
										{
											"begin": 416,
											"end": 418,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 416,
											"end": 418,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "122"
										},
										{
											"begin": 416,
											"end": 418,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 468,
											"end": 469,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 465,
											"end": 466,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 458,
											"end": 470,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 416,
											"end": 418,
											"name": "tag",
											"source": 19,
											"value": "122"
										},
										{
											"begin": 416,
											"end": 418,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 496,
											"end": 497,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 481,
											"end": 743,
											"name": "tag",
											"source": 19,
											"value": "123"
										},
										{
											"begin": 481,
											"end": 743,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 506,
											"end": 512,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 503,
											"end": 504,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 500,
											"end": 513,
											"name": "LT",
											"source": 19
										},
										{
											"begin": 481,
											"end": 743,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 481,
											"end": 743,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "125"
										},
										{
											"begin": 481,
											"end": 743,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 573,
											"end": 576,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 601,
											"end": 664,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "126"
										},
										{
											"begin": 660,
											"end": 663,
											"name": "DUP9",
											"source": 19
										},
										{
											"begin": 648,
											"end": 658,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 601,
											"end": 664,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "127"
										},
										{
											"begin": 601,
											"end": 664,
											"name": "JUMP",
											"source": 19,
											"value": "[in]"
										},
										{
											"begin": 601,
											"end": 664,
											"name": "tag",
											"source": 19,
											"value": "126"
										},
										{
											"begin": 601,
											"end": 664,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 596,
											"end": 599,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 589,
											"end": 665,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 694,
											"end": 698,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 689,
											"end": 692,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 685,
											"end": 699,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 678,
											"end": 699,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": 678,
											"end": 699,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 728,
											"end": 732,
											"name": "PUSH",
											"source": 19,
											"value": "E0"
										},
										{
											"begin": 723,
											"end": 726,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 719,
											"end": 733,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 712,
											"end": 733,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 712,
											"end": 733,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 541,
											"end": 743,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 528,
											"end": 529,
											"name": "PUSH",
											"source": 19,
											"value": "1"
										},
										{
											"begin": 525,
											"end": 526,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 521,
											"end": 530,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 516,
											"end": 530,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 516,
											"end": 530,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 481,
											"end": 743,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "123"
										},
										{
											"begin": 481,
											"end": 743,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 481,
											"end": 743,
											"name": "tag",
											"source": 19,
											"value": "125"
										},
										{
											"begin": 481,
											"end": 743,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 485,
											"end": 499,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 177,
											"end": 749,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 177,
											"end": 749,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 177,
											"end": 749,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": 177,
											"end": 749,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 177,
											"end": 749,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 177,
											"end": 749,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 177,
											"end": 749,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 177,
											"end": 749,
											"name": "JUMP",
											"source": 19,
											"value": "[out]"
										},
										{
											"begin": 796,
											"end": 1493,
											"name": "tag",
											"source": 19,
											"value": "128"
										},
										{
											"begin": 796,
											"end": 1493,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 796,
											"end": 1493,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 942,
											"end": 1047,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "130"
										},
										{
											"begin": 957,
											"end": 1046,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "131"
										},
										{
											"begin": 1039,
											"end": 1045,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 957,
											"end": 1046,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "132"
										},
										{
											"begin": 957,
											"end": 1046,
											"name": "JUMP",
											"source": 19,
											"value": "[in]"
										},
										{
											"begin": 957,
											"end": 1046,
											"name": "tag",
											"source": 19,
											"value": "131"
										},
										{
											"begin": 957,
											"end": 1046,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 942,
											"end": 1047,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "121"
										},
										{
											"begin": 942,
											"end": 1047,
											"name": "JUMP",
											"source": 19,
											"value": "[in]"
										},
										{
											"begin": 942,
											"end": 1047,
											"name": "tag",
											"source": 19,
											"value": "130"
										},
										{
											"begin": 942,
											"end": 1047,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 933,
											"end": 1047,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 933,
											"end": 1047,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1067,
											"end": 1072,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 1095,
											"end": 1101,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 1088,
											"end": 1093,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 1081,
											"end": 1102,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 1121,
											"end": 1125,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 1114,
											"end": 1119,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 1110,
											"end": 1126,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1103,
											"end": 1126,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1103,
											"end": 1126,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1146,
											"end": 1152,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 1196,
											"end": 1199,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 1188,
											"end": 1192,
											"name": "PUSH",
											"source": 19,
											"value": "A0"
										},
										{
											"begin": 1180,
											"end": 1186,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 1176,
											"end": 1193,
											"name": "MUL",
											"source": 19
										},
										{
											"begin": 1171,
											"end": 1174,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 1167,
											"end": 1194,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1164,
											"end": 1200,
											"name": "GT",
											"source": 19
										},
										{
											"begin": 1161,
											"end": 1163,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 1161,
											"end": 1163,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "133"
										},
										{
											"begin": 1161,
											"end": 1163,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 1213,
											"end": 1214,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1210,
											"end": 1211,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 1203,
											"end": 1215,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 1161,
											"end": 1163,
											"name": "tag",
											"source": 19,
											"value": "133"
										},
										{
											"begin": 1161,
											"end": 1163,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1241,
											"end": 1242,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1226,
											"end": 1487,
											"name": "tag",
											"source": 19,
											"value": "134"
										},
										{
											"begin": 1226,
											"end": 1487,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1251,
											"end": 1257,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 1248,
											"end": 1249,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1245,
											"end": 1258,
											"name": "LT",
											"source": 19
										},
										{
											"begin": 1226,
											"end": 1487,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 1226,
											"end": 1487,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "136"
										},
										{
											"begin": 1226,
											"end": 1487,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 1318,
											"end": 1321,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1346,
											"end": 1408,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "137"
										},
										{
											"begin": 1404,
											"end": 1407,
											"name": "DUP9",
											"source": 19
										},
										{
											"begin": 1392,
											"end": 1402,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 1346,
											"end": 1408,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "138"
										},
										{
											"begin": 1346,
											"end": 1408,
											"name": "JUMP",
											"source": 19,
											"value": "[in]"
										},
										{
											"begin": 1346,
											"end": 1408,
											"name": "tag",
											"source": 19,
											"value": "137"
										},
										{
											"begin": 1346,
											"end": 1408,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1341,
											"end": 1344,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 1334,
											"end": 1409,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 1438,
											"end": 1442,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 1433,
											"end": 1436,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 1429,
											"end": 1443,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1422,
											"end": 1443,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": 1422,
											"end": 1443,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1472,
											"end": 1476,
											"name": "PUSH",
											"source": 19,
											"value": "A0"
										},
										{
											"begin": 1467,
											"end": 1470,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 1463,
											"end": 1477,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1456,
											"end": 1477,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 1456,
											"end": 1477,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1286,
											"end": 1487,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1273,
											"end": 1274,
											"name": "PUSH",
											"source": 19,
											"value": "1"
										},
										{
											"begin": 1270,
											"end": 1271,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1266,
											"end": 1275,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1261,
											"end": 1275,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1261,
											"end": 1275,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1226,
											"end": 1487,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "134"
										},
										{
											"begin": 1226,
											"end": 1487,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1226,
											"end": 1487,
											"name": "tag",
											"source": 19,
											"value": "136"
										},
										{
											"begin": 1226,
											"end": 1487,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1230,
											"end": 1244,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 923,
											"end": 1493,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 923,
											"end": 1493,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 923,
											"end": 1493,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": 923,
											"end": 1493,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 923,
											"end": 1493,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 923,
											"end": 1493,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 923,
											"end": 1493,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 923,
											"end": 1493,
											"name": "JUMP",
											"source": 19,
											"value": "[out]"
										},
										{
											"begin": 1499,
											"end": 1638,
											"name": "tag",
											"source": 19,
											"value": "139"
										},
										{
											"begin": 1499,
											"end": 1638,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1499,
											"end": 1638,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1583,
											"end": 1589,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1570,
											"end": 1590,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 1561,
											"end": 1590,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1561,
											"end": 1590,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1599,
											"end": 1632,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "141"
										},
										{
											"begin": 1626,
											"end": 1631,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1599,
											"end": 1632,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "142"
										},
										{
											"begin": 1599,
											"end": 1632,
											"name": "JUMP",
											"source": 19,
											"value": "[in]"
										},
										{
											"begin": 1599,
											"end": 1632,
											"name": "tag",
											"source": 19,
											"value": "141"
										},
										{
											"begin": 1599,
											"end": 1632,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1551,
											"end": 1638,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 1551,
											"end": 1638,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 1551,
											"end": 1638,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1551,
											"end": 1638,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1551,
											"end": 1638,
											"name": "JUMP",
											"source": 19,
											"value": "[out]"
										},
										{
											"begin": 1686,
											"end": 2041,
											"name": "tag",
											"source": 19,
											"value": "143"
										},
										{
											"begin": 1686,
											"end": 2041,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1686,
											"end": 2041,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1832,
											"end": 1835,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 1825,
											"end": 1829,
											"name": "PUSH",
											"source": 19,
											"value": "1F"
										},
										{
											"begin": 1817,
											"end": 1823,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 1813,
											"end": 1830,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1809,
											"end": 1836,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 1799,
											"end": 1801,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "145"
										},
										{
											"begin": 1799,
											"end": 1801,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 1850,
											"end": 1851,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1847,
											"end": 1848,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 1840,
											"end": 1852,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 1799,
											"end": 1801,
											"name": "tag",
											"source": 19,
											"value": "145"
										},
										{
											"begin": 1799,
											"end": 1801,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1890,
											"end": 1896,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1877,
											"end": 1897,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 1915,
											"end": 2035,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "146"
										},
										{
											"begin": 2031,
											"end": 2034,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 2023,
											"end": 2029,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 2016,
											"end": 2020,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 2008,
											"end": 2014,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 2004,
											"end": 2021,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1915,
											"end": 2035,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "116"
										},
										{
											"begin": 1915,
											"end": 2035,
											"name": "JUMP",
											"source": 19,
											"value": "[in]"
										},
										{
											"begin": 1915,
											"end": 2035,
											"name": "tag",
											"source": 19,
											"value": "146"
										},
										{
											"begin": 1915,
											"end": 2035,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1906,
											"end": 2035,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 1906,
											"end": 2035,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1789,
											"end": 2041,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1789,
											"end": 2041,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 1789,
											"end": 2041,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 1789,
											"end": 2041,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1789,
											"end": 2041,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1789,
											"end": 2041,
											"name": "JUMP",
											"source": 19,
											"value": "[out]"
										},
										{
											"begin": 2088,
											"end": 2441,
											"name": "tag",
											"source": 19,
											"value": "147"
										},
										{
											"begin": 2088,
											"end": 2441,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2088,
											"end": 2441,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 2233,
											"end": 2236,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 2226,
											"end": 2230,
											"name": "PUSH",
											"source": 19,
											"value": "1F"
										},
										{
											"begin": 2218,
											"end": 2224,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 2214,
											"end": 2231,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2210,
											"end": 2237,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 2200,
											"end": 2202,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "149"
										},
										{
											"begin": 2200,
											"end": 2202,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 2251,
											"end": 2252,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 2248,
											"end": 2249,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 2241,
											"end": 2253,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 2200,
											"end": 2202,
											"name": "tag",
											"source": 19,
											"value": "149"
										},
										{
											"begin": 2200,
											"end": 2202,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2291,
											"end": 2297,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 2278,
											"end": 2298,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 2316,
											"end": 2435,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "150"
										},
										{
											"begin": 2431,
											"end": 2434,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 2423,
											"end": 2429,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 2416,
											"end": 2420,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 2408,
											"end": 2414,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 2404,
											"end": 2421,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2316,
											"end": 2435,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "128"
										},
										{
											"begin": 2316,
											"end": 2435,
											"name": "JUMP",
											"source": 19,
											"value": "[in]"
										},
										{
											"begin": 2316,
											"end": 2435,
											"name": "tag",
											"source": 19,
											"value": "150"
										},
										{
											"begin": 2316,
											"end": 2435,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2307,
											"end": 2435,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 2307,
											"end": 2435,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2190,
											"end": 2441,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2190,
											"end": 2441,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 2190,
											"end": 2441,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 2190,
											"end": 2441,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2190,
											"end": 2441,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2190,
											"end": 2441,
											"name": "JUMP",
											"source": 19,
											"value": "[out]"
										},
										{
											"begin": 2447,
											"end": 2584,
											"name": "tag",
											"source": 19,
											"value": "151"
										},
										{
											"begin": 2447,
											"end": 2584,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2447,
											"end": 2584,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 2532,
											"end": 2538,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 2526,
											"end": 2539,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 2517,
											"end": 2539,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 2517,
											"end": 2539,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2548,
											"end": 2578,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "153"
										},
										{
											"begin": 2572,
											"end": 2577,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 2548,
											"end": 2578,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "154"
										},
										{
											"begin": 2548,
											"end": 2578,
											"name": "JUMP",
											"source": 19,
											"value": "[in]"
										},
										{
											"begin": 2548,
											"end": 2578,
											"name": "tag",
											"source": 19,
											"value": "153"
										},
										{
											"begin": 2548,
											"end": 2578,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2507,
											"end": 2584,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 2507,
											"end": 2584,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 2507,
											"end": 2584,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2507,
											"end": 2584,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2507,
											"end": 2584,
											"name": "JUMP",
											"source": 19,
											"value": "[out]"
										},
										{
											"begin": 2630,
											"end": 3955,
											"name": "tag",
											"source": 19,
											"value": "127"
										},
										{
											"begin": 2630,
											"end": 3955,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2630,
											"end": 3955,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 2749,
											"end": 2753,
											"name": "PUSH",
											"source": 19,
											"value": "E0"
										},
										{
											"begin": 2737,
											"end": 2746,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 2732,
											"end": 2735,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 2728,
											"end": 2747,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 2724,
											"end": 2754,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 2721,
											"end": 2723,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 2721,
											"end": 2723,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "156"
										},
										{
											"begin": 2721,
											"end": 2723,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 2767,
											"end": 2768,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 2764,
											"end": 2765,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 2757,
											"end": 2769,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 2721,
											"end": 2723,
											"name": "tag",
											"source": 19,
											"value": "156"
										},
										{
											"begin": 2721,
											"end": 2723,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2789,
											"end": 2809,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "157"
										},
										{
											"begin": 2804,
											"end": 2808,
											"name": "PUSH",
											"source": 19,
											"value": "E0"
										},
										{
											"begin": 2789,
											"end": 2809,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "121"
										},
										{
											"begin": 2789,
											"end": 2809,
											"name": "JUMP",
											"source": 19,
											"value": "[in]"
										},
										{
											"begin": 2789,
											"end": 2809,
											"name": "tag",
											"source": 19,
											"value": "157"
										},
										{
											"begin": 2789,
											"end": 2809,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2780,
											"end": 2809,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 2780,
											"end": 2809,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2869,
											"end": 2870,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 2909,
											"end": 2958,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "158"
										},
										{
											"begin": 2954,
											"end": 2957,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 2945,
											"end": 2951,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 2934,
											"end": 2943,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 2930,
											"end": 2952,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2909,
											"end": 2958,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "159"
										},
										{
											"begin": 2909,
											"end": 2958,
											"name": "JUMP",
											"source": 19,
											"value": "[in]"
										},
										{
											"begin": 2909,
											"end": 2958,
											"name": "tag",
											"source": 19,
											"value": "158"
										},
										{
											"begin": 2909,
											"end": 2958,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2902,
											"end": 2906,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 2895,
											"end": 2900,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 2891,
											"end": 2907,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2884,
											"end": 2959,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 2819,
											"end": 2970,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3027,
											"end": 3029,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 3068,
											"end": 3117,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "160"
										},
										{
											"begin": 3113,
											"end": 3116,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 3104,
											"end": 3110,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 3093,
											"end": 3102,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 3089,
											"end": 3111,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 3068,
											"end": 3117,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "139"
										},
										{
											"begin": 3068,
											"end": 3117,
											"name": "JUMP",
											"source": 19,
											"value": "[in]"
										},
										{
											"begin": 3068,
											"end": 3117,
											"name": "tag",
											"source": 19,
											"value": "160"
										},
										{
											"begin": 3068,
											"end": 3117,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3061,
											"end": 3065,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 3054,
											"end": 3059,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 3050,
											"end": 3066,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 3043,
											"end": 3118,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 2980,
											"end": 3129,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3186,
											"end": 3188,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 3227,
											"end": 3276,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "161"
										},
										{
											"begin": 3272,
											"end": 3275,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 3263,
											"end": 3269,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 3252,
											"end": 3261,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 3248,
											"end": 3270,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 3227,
											"end": 3276,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "139"
										},
										{
											"begin": 3227,
											"end": 3276,
											"name": "JUMP",
											"source": 19,
											"value": "[in]"
										},
										{
											"begin": 3227,
											"end": 3276,
											"name": "tag",
											"source": 19,
											"value": "161"
										},
										{
											"begin": 3227,
											"end": 3276,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3220,
											"end": 3224,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 3213,
											"end": 3218,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 3209,
											"end": 3225,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 3202,
											"end": 3277,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 3139,
											"end": 3288,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3351,
											"end": 3353,
											"name": "PUSH",
											"source": 19,
											"value": "60"
										},
										{
											"begin": 3392,
											"end": 3441,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "162"
										},
										{
											"begin": 3437,
											"end": 3440,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 3428,
											"end": 3434,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 3417,
											"end": 3426,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 3413,
											"end": 3435,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 3392,
											"end": 3441,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "139"
										},
										{
											"begin": 3392,
											"end": 3441,
											"name": "JUMP",
											"source": 19,
											"value": "[in]"
										},
										{
											"begin": 3392,
											"end": 3441,
											"name": "tag",
											"source": 19,
											"value": "162"
										},
										{
											"begin": 3392,
											"end": 3441,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3385,
											"end": 3389,
											"name": "PUSH",
											"source": 19,
											"value": "60"
										},
										{
											"begin": 3378,
											"end": 3383,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 3374,
											"end": 3390,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 3367,
											"end": 3442,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 3298,
											"end": 3453,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3523,
											"end": 3526,
											"name": "PUSH",
											"source": 19,
											"value": "80"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "163"
										},
										{
											"begin": 3608,
											"end": 3611,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 3599,
											"end": 3605,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 3588,
											"end": 3597,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 3584,
											"end": 3606,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "164"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "JUMP",
											"source": 19,
											"value": "[in]"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "tag",
											"source": 19,
											"value": "163"
										},
										{
											"begin": 3565,
											"end": 3612,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3558,
											"end": 3562,
											"name": "PUSH",
											"source": 19,
											"value": "80"
										},
										{
											"begin": 3551,
											"end": 3556,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 3547,
											"end": 3563,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 3540,
											"end": 3613,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 3463,
											"end": 3624,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3683,
											"end": 3686,
											"name": "PUSH",
											"source": 19,
											"value": "A0"
										},
										{
											"begin": 3725,
											"end": 3774,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "165"
										},
										{
											"begin": 3770,
											"end": 3773,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 3761,
											"end": 3767,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 3750,
											"end": 3759,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 3746,
											"end": 3768,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 3725,
											"end": 3774,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "159"
										},
										{
											"begin": 3725,
											"end": 3774,
											"name": "JUMP",
											"source": 19,
											"value": "[in]"
										},
										{
											"begin": 3725,
											"end": 3774,
											"name": "tag",
											"source": 19,
											"value": "165"
										},
										{
											"begin": 3725,
											"end": 3774,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3718,
											"end": 3722,
											"name": "PUSH",
											"source": 19,
											"value": "A0"
										},
										{
											"begin": 3711,
											"end": 3716,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 3707,
											"end": 3723,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 3700,
											"end": 3775,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 3634,
											"end": 3786,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3845,
											"end": 3848,
											"name": "PUSH",
											"source": 19,
											"value": "C0"
										},
										{
											"begin": 3887,
											"end": 3936,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "166"
										},
										{
											"begin": 3932,
											"end": 3935,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 3923,
											"end": 3929,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 3912,
											"end": 3921,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 3908,
											"end": 3930,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 3887,
											"end": 3936,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "159"
										},
										{
											"begin": 3887,
											"end": 3936,
											"name": "JUMP",
											"source": 19,
											"value": "[in]"
										},
										{
											"begin": 3887,
											"end": 3936,
											"name": "tag",
											"source": 19,
											"value": "166"
										},
										{
											"begin": 3887,
											"end": 3936,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3880,
											"end": 3884,
											"name": "PUSH",
											"source": 19,
											"value": "C0"
										},
										{
											"begin": 3873,
											"end": 3878,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 3869,
											"end": 3885,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 3862,
											"end": 3937,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 3796,
											"end": 3948,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2711,
											"end": 3955,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 2711,
											"end": 3955,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 2711,
											"end": 3955,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2711,
											"end": 3955,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2711,
											"end": 3955,
											"name": "JUMP",
											"source": 19,
											"value": "[out]"
										},
										{
											"begin": 4000,
											"end": 5000,
											"name": "tag",
											"source": 19,
											"value": "138"
										},
										{
											"begin": 4000,
											"end": 5000,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 4000,
											"end": 5000,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 4118,
											"end": 4122,
											"name": "PUSH",
											"source": 19,
											"value": "A0"
										},
										{
											"begin": 4106,
											"end": 4115,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 4101,
											"end": 4104,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 4097,
											"end": 4116,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 4093,
											"end": 4123,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 4090,
											"end": 4092,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 4090,
											"end": 4092,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "168"
										},
										{
											"begin": 4090,
											"end": 4092,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 4136,
											"end": 4137,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 4133,
											"end": 4134,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 4126,
											"end": 4138,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 4090,
											"end": 4092,
											"name": "tag",
											"source": 19,
											"value": "168"
										},
										{
											"begin": 4090,
											"end": 4092,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 4158,
											"end": 4178,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "169"
										},
										{
											"begin": 4173,
											"end": 4177,
											"name": "PUSH",
											"source": 19,
											"value": "A0"
										},
										{
											"begin": 4158,
											"end": 4178,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "121"
										},
										{
											"begin": 4158,
											"end": 4178,
											"name": "JUMP",
											"source": 19,
											"value": "[in]"
										},
										{
											"begin": 4158,
											"end": 4178,
											"name": "tag",
											"source": 19,
											"value": "169"
										},
										{
											"begin": 4158,
											"end": 4178,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 4149,
											"end": 4178,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 4149,
											"end": 4178,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 4238,
											"end": 4239,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 4278,
											"end": 4327,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "170"
										},
										{
											"begin": 4323,
											"end": 4326,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 4314,
											"end": 4320,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 4303,
											"end": 4312,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 4299,
											"end": 4321,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 4278,
											"end": 4327,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "159"
										},
										{
											"begin": 4278,
											"end": 4327,
											"name": "JUMP",
											"source": 19,
											"value": "[in]"
										},
										{
											"begin": 4278,
											"end": 4327,
											"name": "tag",
											"source": 19,
											"value": "170"
										},
										{
											"begin": 4278,
											"end": 4327,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 4271,
											"end": 4275,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 4264,
											"end": 4269,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 4260,
											"end": 4276,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 4253,
											"end": 4328,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 4188,
											"end": 4339,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 4396,
											"end": 4398,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 4437,
											"end": 4486,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "171"
										},
										{
											"begin": 4482,
											"end": 4485,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 4473,
											"end": 4479,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 4462,
											"end": 4471,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 4458,
											"end": 4480,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 4437,
											"end": 4486,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "139"
										},
										{
											"begin": 4437,
											"end": 4486,
											"name": "JUMP",
											"source": 19,
											"value": "[in]"
										},
										{
											"begin": 4437,
											"end": 4486,
											"name": "tag",
											"source": 19,
											"value": "171"
										},
										{
											"begin": 4437,
											"end": 4486,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 4430,
											"end": 4434,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 4423,
											"end": 4428,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 4419,
											"end": 4435,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 4412,
											"end": 4487,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 4349,
											"end": 4498,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 4555,
											"end": 4557,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 4596,
											"end": 4645,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "172"
										},
										{
											"begin": 4641,
											"end": 4644,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 4632,
											"end": 4638,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 4621,
											"end": 4630,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 4617,
											"end": 4639,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 4596,
											"end": 4645,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "139"
										},
										{
											"begin": 4596,
											"end": 4645,
											"name": "JUMP",
											"source": 19,
											"value": "[in]"
										},
										{
											"begin": 4596,
											"end": 4645,
											"name": "tag",
											"source": 19,
											"value": "172"
										},
										{
											"begin": 4596,
											"end": 4645,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 4589,
											"end": 4593,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 4582,
											"end": 4587,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 4578,
											"end": 4594,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 4571,
											"end": 4646,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 4508,
											"end": 4657,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 4720,
											"end": 4722,
											"name": "PUSH",
											"source": 19,
											"value": "60"
										},
										{
											"begin": 4761,
											"end": 4810,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "173"
										},
										{
											"begin": 4806,
											"end": 4809,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 4797,
											"end": 4803,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 4786,
											"end": 4795,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 4782,
											"end": 4804,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 4761,
											"end": 4810,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "139"
										},
										{
											"begin": 4761,
											"end": 4810,
											"name": "JUMP",
											"source": 19,
											"value": "[in]"
										},
										{
											"begin": 4761,
											"end": 4810,
											"name": "tag",
											"source": 19,
											"value": "173"
										},
										{
											"begin": 4761,
											"end": 4810,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 4754,
											"end": 4758,
											"name": "PUSH",
											"source": 19,
											"value": "60"
										},
										{
											"begin": 4747,
											"end": 4752,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 4743,
											"end": 4759,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 4736,
											"end": 4811,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 4667,
											"end": 4822,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 4892,
											"end": 4895,
											"name": "PUSH",
											"source": 19,
											"value": "80"
										},
										{
											"begin": 4934,
											"end": 4981,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "174"
										},
										{
											"begin": 4977,
											"end": 4980,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 4968,
											"end": 4974,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 4957,
											"end": 4966,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 4953,
											"end": 4975,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 4934,
											"end": 4981,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "164"
										},
										{
											"begin": 4934,
											"end": 4981,
											"name": "JUMP",
											"source": 19,
											"value": "[in]"
										},
										{
											"begin": 4934,
											"end": 4981,
											"name": "tag",
											"source": 19,
											"value": "174"
										},
										{
											"begin": 4934,
											"end": 4981,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 4927,
											"end": 4931,
											"name": "PUSH",
											"source": 19,
											"value": "80"
										},
										{
											"begin": 4920,
											"end": 4925,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 4916,
											"end": 4932,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 4909,
											"end": 4982,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 4832,
											"end": 4993,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 4080,
											"end": 5000,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 4080,
											"end": 5000,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 4080,
											"end": 5000,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 4080,
											"end": 5000,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 4080,
											"end": 5000,
											"name": "JUMP",
											"source": 19,
											"value": "[out]"
										},
										{
											"begin": 5006,
											"end": 5147,
											"name": "tag",
											"source": 19,
											"value": "175"
										},
										{
											"begin": 5006,
											"end": 5147,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 5006,
											"end": 5147,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 5093,
											"end": 5099,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 5087,
											"end": 5100,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 5078,
											"end": 5100,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 5078,
											"end": 5100,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 5109,
											"end": 5141,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "177"
										},
										{
											"begin": 5135,
											"end": 5140,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 5109,
											"end": 5141,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "178"
										},
										{
											"begin": 5109,
											"end": 5141,
											"name": "JUMP",
											"source": 19,
											"value": "[in]"
										},
										{
											"begin": 5109,
											"end": 5141,
											"name": "tag",
											"source": 19,
											"value": "177"
										},
										{
											"begin": 5109,
											"end": 5141,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 5068,
											"end": 5147,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 5068,
											"end": 5147,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 5068,
											"end": 5147,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 5068,
											"end": 5147,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 5068,
											"end": 5147,
											"name": "JUMP",
											"source": 19,
											"value": "[out]"
										},
										{
											"begin": 5153,
											"end": 5292,
											"name": "tag",
											"source": 19,
											"value": "159"
										},
										{
											"begin": 5153,
											"end": 5292,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 5153,
											"end": 5292,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 5237,
											"end": 5243,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 5224,
											"end": 5244,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 5215,
											"end": 5244,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 5215,
											"end": 5244,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 5253,
											"end": 5286,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "180"
										},
										{
											"begin": 5280,
											"end": 5285,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 5253,
											"end": 5286,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "181"
										},
										{
											"begin": 5253,
											"end": 5286,
											"name": "JUMP",
											"source": 19,
											"value": "[in]"
										},
										{
											"begin": 5253,
											"end": 5286,
											"name": "tag",
											"source": 19,
											"value": "180"
										},
										{
											"begin": 5253,
											"end": 5286,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 5205,
											"end": 5292,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 5205,
											"end": 5292,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 5205,
											"end": 5292,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 5205,
											"end": 5292,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 5205,
											"end": 5292,
											"name": "JUMP",
											"source": 19,
											"value": "[out]"
										},
										{
											"begin": 5298,
											"end": 5441,
											"name": "tag",
											"source": 19,
											"value": "182"
										},
										{
											"begin": 5298,
											"end": 5441,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 5298,
											"end": 5441,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 5386,
											"end": 5392,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 5380,
											"end": 5393,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 5371,
											"end": 5393,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 5371,
											"end": 5393,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 5402,
											"end": 5435,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "184"
										},
										{
											"begin": 5429,
											"end": 5434,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 5402,
											"end": 5435,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "181"
										},
										{
											"begin": 5402,
											"end": 5435,
											"name": "JUMP",
											"source": 19,
											"value": "[in]"
										},
										{
											"begin": 5402,
											"end": 5435,
											"name": "tag",
											"source": 19,
											"value": "184"
										},
										{
											"begin": 5402,
											"end": 5435,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 5361,
											"end": 5441,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 5361,
											"end": 5441,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 5361,
											"end": 5441,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 5361,
											"end": 5441,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 5361,
											"end": 5441,
											"name": "JUMP",
											"source": 19,
											"value": "[out]"
										},
										{
											"begin": 5447,
											"end": 5582,
											"name": "tag",
											"source": 19,
											"value": "164"
										},
										{
											"begin": 5447,
											"end": 5582,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 5447,
											"end": 5582,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 5529,
											"end": 5535,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 5516,
											"end": 5536,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 5507,
											"end": 5536,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 5507,
											"end": 5536,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 5545,
											"end": 5576,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "186"
										},
										{
											"begin": 5570,
											"end": 5575,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 5545,
											"end": 5576,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "187"
										},
										{
											"begin": 5545,
											"end": 5576,
											"name": "JUMP",
											"source": 19,
											"value": "[in]"
										},
										{
											"begin": 5545,
											"end": 5576,
											"name": "tag",
											"source": 19,
											"value": "186"
										},
										{
											"begin": 5545,
											"end": 5576,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 5497,
											"end": 5582,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 5497,
											"end": 5582,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 5497,
											"end": 5582,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 5497,
											"end": 5582,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 5497,
											"end": 5582,
											"name": "JUMP",
											"source": 19,
											"value": "[out]"
										},
										{
											"begin": 5588,
											"end": 6428,
											"name": "tag",
											"source": 19,
											"value": "14"
										},
										{
											"begin": 5588,
											"end": 6428,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 5588,
											"end": 6428,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 5588,
											"end": 6428,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 5588,
											"end": 6428,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 5588,
											"end": 6428,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 5588,
											"end": 6428,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 5762,
											"end": 5765,
											"name": "PUSH",
											"source": 19,
											"value": "A0"
										},
										{
											"begin": 5750,
											"end": 5759,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 5741,
											"end": 5748,
											"name": "DUP9",
											"source": 19
										},
										{
											"begin": 5737,
											"end": 5760,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 5733,
											"end": 5766,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 5730,
											"end": 5732,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 5730,
											"end": 5732,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "189"
										},
										{
											"begin": 5730,
											"end": 5732,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 5779,
											"end": 5780,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 5776,
											"end": 5777,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 5769,
											"end": 5781,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 5730,
											"end": 5732,
											"name": "tag",
											"source": 19,
											"value": "189"
										},
										{
											"begin": 5730,
											"end": 5732,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 5822,
											"end": 5823,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 5847,
											"end": 5900,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "190"
										},
										{
											"begin": 5892,
											"end": 5899,
											"name": "DUP9",
											"source": 19
										},
										{
											"begin": 5883,
											"end": 5889,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 5872,
											"end": 5881,
											"name": "DUP10",
											"source": 19
										},
										{
											"begin": 5868,
											"end": 5890,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 5847,
											"end": 5900,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "139"
										},
										{
											"begin": 5847,
											"end": 5900,
											"name": "JUMP",
											"source": 19,
											"value": "[in]"
										},
										{
											"begin": 5847,
											"end": 5900,
											"name": "tag",
											"source": 19,
											"value": "190"
										},
										{
											"begin": 5847,
											"end": 5900,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 5837,
											"end": 5900,
											"name": "SWAP6",
											"source": 19
										},
										{
											"begin": 5837,
											"end": 5900,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 5793,
											"end": 5910,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 5949,
											"end": 5951,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 5975,
											"end": 6028,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "191"
										},
										{
											"begin": 6020,
											"end": 6027,
											"name": "DUP9",
											"source": 19
										},
										{
											"begin": 6011,
											"end": 6017,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 6000,
											"end": 6009,
											"name": "DUP10",
											"source": 19
										},
										{
											"begin": 5996,
											"end": 6018,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 5975,
											"end": 6028,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "139"
										},
										{
											"begin": 5975,
											"end": 6028,
											"name": "JUMP",
											"source": 19,
											"value": "[in]"
										},
										{
											"begin": 5975,
											"end": 6028,
											"name": "tag",
											"source": 19,
											"value": "191"
										},
										{
											"begin": 5975,
											"end": 6028,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 5965,
											"end": 6028,
											"name": "SWAP5",
											"source": 19
										},
										{
											"begin": 5965,
											"end": 6028,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 5920,
											"end": 6038,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 6077,
											"end": 6079,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 6103,
											"end": 6156,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "192"
										},
										{
											"begin": 6148,
											"end": 6155,
											"name": "DUP9",
											"source": 19
										},
										{
											"begin": 6139,
											"end": 6145,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 6128,
											"end": 6137,
											"name": "DUP10",
											"source": 19
										},
										{
											"begin": 6124,
											"end": 6146,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 6103,
											"end": 6156,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "139"
										},
										{
											"begin": 6103,
											"end": 6156,
											"name": "JUMP",
											"source": 19,
											"value": "[in]"
										},
										{
											"begin": 6103,
											"end": 6156,
											"name": "tag",
											"source": 19,
											"value": "192"
										},
										{
											"begin": 6103,
											"end": 6156,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 6093,
											"end": 6156,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": 6093,
											"end": 6156,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 6048,
											"end": 6166,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 6205,
											"end": 6207,
											"name": "PUSH",
											"source": 19,
											"value": "60"
										},
										{
											"begin": 6231,
											"end": 6284,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "193"
										},
										{
											"begin": 6276,
											"end": 6283,
											"name": "DUP9",
											"source": 19
										},
										{
											"begin": 6267,
											"end": 6273,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 6256,
											"end": 6265,
											"name": "DUP10",
											"source": 19
										},
										{
											"begin": 6252,
											"end": 6274,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 6231,
											"end": 6284,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "159"
										},
										{
											"begin": 6231,
											"end": 6284,
											"name": "JUMP",
											"source": 19,
											"value": "[in]"
										},
										{
											"begin": 6231,
											"end": 6284,
											"name": "tag",
											"source": 19,
											"value": "193"
										},
										{
											"begin": 6231,
											"end": 6284,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 6221,
											"end": 6284,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 6221,
											"end": 6284,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 6176,
											"end": 6294,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 6333,
											"end": 6336,
											"name": "PUSH",
											"source": 19,
											"value": "80"
										},
										{
											"begin": 6360,
											"end": 6411,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "194"
										},
										{
											"begin": 6403,
											"end": 6410,
											"name": "DUP9",
											"source": 19
										},
										{
											"begin": 6394,
											"end": 6400,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 6383,
											"end": 6392,
											"name": "DUP10",
											"source": 19
										},
										{
											"begin": 6379,
											"end": 6401,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 6360,
											"end": 6411,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "164"
										},
										{
											"begin": 6360,
											"end": 6411,
											"name": "JUMP",
											"source": 19,
											"value": "[in]"
										},
										{
											"begin": 6360,
											"end": 6411,
											"name": "tag",
											"source": 19,
											"value": "194"
										},
										{
											"begin": 6360,
											"end": 6411,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 6350,
											"end": 6411,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 6350,
											"end": 6411,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 6304,
											"end": 6421,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 5720,
											"end": 6428,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 5720,
											"end": 6428,
											"name": "SWAP6",
											"source": 19
										},
										{
											"begin": 5720,
											"end": 6428,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 5720,
											"end": 6428,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 5720,
											"end": 6428,
											"name": "SWAP6",
											"source": 19
										},
										{
											"begin": 5720,
											"end": 6428,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 5720,
											"end": 6428,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": 5720,
											"end": 6428,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 5720,
											"end": 6428,
											"name": "JUMP",
											"source": 19,
											"value": "[out]"
										},
										{
											"begin": 6434,
											"end": 6891,
											"name": "tag",
											"source": 19,
											"value": "8"
										},
										{
											"begin": 6434,
											"end": 6891,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 6434,
											"end": 6891,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 6593,
											"end": 6595,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 6581,
											"end": 6590,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 6572,
											"end": 6579,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 6568,
											"end": 6591,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 6564,
											"end": 6596,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 6561,
											"end": 6563,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 6561,
											"end": 6563,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "196"
										},
										{
											"begin": 6561,
											"end": 6563,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 6609,
											"end": 6610,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 6606,
											"end": 6607,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 6599,
											"end": 6611,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 6561,
											"end": 6563,
											"name": "tag",
											"source": 19,
											"value": "196"
										},
										{
											"begin": 6561,
											"end": 6563,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 6680,
											"end": 6681,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 6669,
											"end": 6678,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 6665,
											"end": 6682,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 6652,
											"end": 6683,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 6710,
											"end": 6728,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6702,
											"end": 6708,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 6699,
											"end": 6729,
											"name": "GT",
											"source": 19
										},
										{
											"begin": 6696,
											"end": 6698,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 6696,
											"end": 6698,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "197"
										},
										{
											"begin": 6696,
											"end": 6698,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 6742,
											"end": 6743,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 6739,
											"end": 6740,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 6732,
											"end": 6744,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 6696,
											"end": 6698,
											"name": "tag",
											"source": 19,
											"value": "197"
										},
										{
											"begin": 6696,
											"end": 6698,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 6770,
											"end": 6874,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "198"
										},
										{
											"begin": 6866,
											"end": 6873,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 6857,
											"end": 6863,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 6846,
											"end": 6855,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 6842,
											"end": 6864,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 6770,
											"end": 6874,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "143"
										},
										{
											"begin": 6770,
											"end": 6874,
											"name": "JUMP",
											"source": 19,
											"value": "[in]"
										},
										{
											"begin": 6770,
											"end": 6874,
											"name": "tag",
											"source": 19,
											"value": "198"
										},
										{
											"begin": 6770,
											"end": 6874,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 6760,
											"end": 6874,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 6760,
											"end": 6874,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 6623,
											"end": 6884,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 6551,
											"end": 6891,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 6551,
											"end": 6891,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 6551,
											"end": 6891,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 6551,
											"end": 6891,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 6551,
											"end": 6891,
											"name": "JUMP",
											"source": 19,
											"value": "[out]"
										},
										{
											"begin": 6897,
											"end": 7352,
											"name": "tag",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 6897,
											"end": 7352,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 6897,
											"end": 7352,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 7055,
											"end": 7057,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 7043,
											"end": 7052,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 7034,
											"end": 7041,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 7030,
											"end": 7053,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 7026,
											"end": 7058,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 7023,
											"end": 7025,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 7023,
											"end": 7025,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "200"
										},
										{
											"begin": 7023,
											"end": 7025,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 7071,
											"end": 7072,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 7068,
											"end": 7069,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 7061,
											"end": 7073,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 7023,
											"end": 7025,
											"name": "tag",
											"source": 19,
											"value": "200"
										},
										{
											"begin": 7023,
											"end": 7025,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 7142,
											"end": 7143,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 7131,
											"end": 7140,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 7127,
											"end": 7144,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 7114,
											"end": 7145,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 7172,
											"end": 7190,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7164,
											"end": 7170,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 7161,
											"end": 7191,
											"name": "GT",
											"source": 19
										},
										{
											"begin": 7158,
											"end": 7160,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 7158,
											"end": 7160,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "201"
										},
										{
											"begin": 7158,
											"end": 7160,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 7204,
											"end": 7205,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 7201,
											"end": 7202,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 7194,
											"end": 7206,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 7158,
											"end": 7160,
											"name": "tag",
											"source": 19,
											"value": "201"
										},
										{
											"begin": 7158,
											"end": 7160,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 7232,
											"end": 7335,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "202"
										},
										{
											"begin": 7327,
											"end": 7334,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 7318,
											"end": 7324,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 7307,
											"end": 7316,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 7303,
											"end": 7325,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 7232,
											"end": 7335,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "147"
										},
										{
											"begin": 7232,
											"end": 7335,
											"name": "JUMP",
											"source": 19,
											"value": "[in]"
										},
										{
											"begin": 7232,
											"end": 7335,
											"name": "tag",
											"source": 19,
											"value": "202"
										},
										{
											"begin": 7232,
											"end": 7335,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 7222,
											"end": 7335,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 7222,
											"end": 7335,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 7085,
											"end": 7345,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 7013,
											"end": 7352,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 7013,
											"end": 7352,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 7013,
											"end": 7352,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 7013,
											"end": 7352,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 7013,
											"end": 7352,
											"name": "JUMP",
											"source": 19,
											"value": "[out]"
										},
										{
											"begin": 7358,
											"end": 7636,
											"name": "tag",
											"source": 19,
											"value": "46"
										},
										{
											"begin": 7358,
											"end": 7636,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 7358,
											"end": 7636,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 7474,
											"end": 7476,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 7462,
											"end": 7471,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 7453,
											"end": 7460,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 7449,
											"end": 7472,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 7445,
											"end": 7477,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 7442,
											"end": 7444,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 7442,
											"end": 7444,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "204"
										},
										{
											"begin": 7442,
											"end": 7444,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 7490,
											"end": 7491,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 7487,
											"end": 7488,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 7480,
											"end": 7492,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 7442,
											"end": 7444,
											"name": "tag",
											"source": 19,
											"value": "204"
										},
										{
											"begin": 7442,
											"end": 7444,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 7533,
											"end": 7534,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 7558,
											"end": 7619,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "205"
										},
										{
											"begin": 7611,
											"end": 7618,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 7602,
											"end": 7608,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 7591,
											"end": 7600,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 7587,
											"end": 7609,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 7558,
											"end": 7619,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "151"
										},
										{
											"begin": 7558,
											"end": 7619,
											"name": "JUMP",
											"source": 19,
											"value": "[in]"
										},
										{
											"begin": 7558,
											"end": 7619,
											"name": "tag",
											"source": 19,
											"value": "205"
										},
										{
											"begin": 7558,
											"end": 7619,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 7548,
											"end": 7619,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 7548,
											"end": 7619,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 7504,
											"end": 7629,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 7432,
											"end": 7636,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 7432,
											"end": 7636,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 7432,
											"end": 7636,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 7432,
											"end": 7636,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 7432,
											"end": 7636,
											"name": "JUMP",
											"source": 19,
											"value": "[out]"
										},
										{
											"begin": 7642,
											"end": 7926,
											"name": "tag",
											"source": 19,
											"value": "71"
										},
										{
											"begin": 7642,
											"end": 7926,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 7642,
											"end": 7926,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 7761,
											"end": 7763,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 7749,
											"end": 7758,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 7740,
											"end": 7747,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 7736,
											"end": 7759,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 7732,
											"end": 7764,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 7729,
											"end": 7731,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 7729,
											"end": 7731,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "207"
										},
										{
											"begin": 7729,
											"end": 7731,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 7777,
											"end": 7778,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 7774,
											"end": 7775,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 7767,
											"end": 7779,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 7729,
											"end": 7731,
											"name": "tag",
											"source": 19,
											"value": "207"
										},
										{
											"begin": 7729,
											"end": 7731,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 7820,
											"end": 7821,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 7845,
											"end": 7909,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "208"
										},
										{
											"begin": 7901,
											"end": 7908,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 7892,
											"end": 7898,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 7881,
											"end": 7890,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 7877,
											"end": 7899,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 7845,
											"end": 7909,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "182"
										},
										{
											"begin": 7845,
											"end": 7909,
											"name": "JUMP",
											"source": 19,
											"value": "[in]"
										},
										{
											"begin": 7845,
											"end": 7909,
											"name": "tag",
											"source": 19,
											"value": "208"
										},
										{
											"begin": 7845,
											"end": 7909,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 7835,
											"end": 7909,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 7835,
											"end": 7909,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 7791,
											"end": 7919,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 7719,
											"end": 7926,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 7719,
											"end": 7926,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 7719,
											"end": 7926,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 7719,
											"end": 7926,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 7719,
											"end": 7926,
											"name": "JUMP",
											"source": 19,
											"value": "[out]"
										},
										{
											"begin": 7932,
											"end": 8370,
											"name": "tag",
											"source": 19,
											"value": "79"
										},
										{
											"begin": 7932,
											"end": 8370,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 7932,
											"end": 8370,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 7932,
											"end": 8370,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 8067,
											"end": 8069,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 8055,
											"end": 8064,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 8046,
											"end": 8053,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 8042,
											"end": 8065,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 8038,
											"end": 8070,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 8035,
											"end": 8037,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 8035,
											"end": 8037,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "210"
										},
										{
											"begin": 8035,
											"end": 8037,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 8083,
											"end": 8084,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 8080,
											"end": 8081,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 8073,
											"end": 8085,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 8035,
											"end": 8037,
											"name": "tag",
											"source": 19,
											"value": "210"
										},
										{
											"begin": 8035,
											"end": 8037,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 8126,
											"end": 8127,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 8151,
											"end": 8215,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "211"
										},
										{
											"begin": 8207,
											"end": 8214,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 8198,
											"end": 8204,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 8187,
											"end": 8196,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 8183,
											"end": 8205,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 8151,
											"end": 8215,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "182"
										},
										{
											"begin": 8151,
											"end": 8215,
											"name": "JUMP",
											"source": 19,
											"value": "[in]"
										},
										{
											"begin": 8151,
											"end": 8215,
											"name": "tag",
											"source": 19,
											"value": "211"
										},
										{
											"begin": 8151,
											"end": 8215,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 8141,
											"end": 8215,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 8141,
											"end": 8215,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 8097,
											"end": 8225,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 8264,
											"end": 8266,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 8290,
											"end": 8353,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "212"
										},
										{
											"begin": 8345,
											"end": 8352,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 8336,
											"end": 8342,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 8325,
											"end": 8334,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 8321,
											"end": 8343,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 8290,
											"end": 8353,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "175"
										},
										{
											"begin": 8290,
											"end": 8353,
											"name": "JUMP",
											"source": 19,
											"value": "[in]"
										},
										{
											"begin": 8290,
											"end": 8353,
											"name": "tag",
											"source": 19,
											"value": "212"
										},
										{
											"begin": 8290,
											"end": 8353,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 8280,
											"end": 8353,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 8280,
											"end": 8353,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 8235,
											"end": 8363,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 8025,
											"end": 8370,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 8025,
											"end": 8370,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 8025,
											"end": 8370,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 8025,
											"end": 8370,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 8025,
											"end": 8370,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 8025,
											"end": 8370,
											"name": "JUMP",
											"source": 19,
											"value": "[out]"
										},
										{
											"begin": 8376,
											"end": 8663,
											"name": "tag",
											"source": 19,
											"value": "213"
										},
										{
											"begin": 8376,
											"end": 8663,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 8376,
											"end": 8663,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 8520,
											"end": 8620,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "215"
										},
										{
											"begin": 8616,
											"end": 8619,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 8608,
											"end": 8614,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 8520,
											"end": 8620,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "216"
										},
										{
											"begin": 8520,
											"end": 8620,
											"name": "JUMP",
											"source": 19,
											"value": "[in]"
										},
										{
											"begin": 8520,
											"end": 8620,
											"name": "tag",
											"source": 19,
											"value": "215"
										},
										{
											"begin": 8520,
											"end": 8620,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 8652,
											"end": 8656,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 8647,
											"end": 8650,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 8643,
											"end": 8657,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 8629,
											"end": 8657,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 8629,
											"end": 8657,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 8510,
											"end": 8663,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 8510,
											"end": 8663,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 8510,
											"end": 8663,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 8510,
											"end": 8663,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 8510,
											"end": 8663,
											"name": "JUMP",
											"source": 19,
											"value": "[out]"
										},
										{
											"begin": 8669,
											"end": 8952,
											"name": "tag",
											"source": 19,
											"value": "217"
										},
										{
											"begin": 8669,
											"end": 8952,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 8669,
											"end": 8952,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 8811,
											"end": 8909,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "219"
										},
										{
											"begin": 8905,
											"end": 8908,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 8897,
											"end": 8903,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 8811,
											"end": 8909,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "220"
										},
										{
											"begin": 8811,
											"end": 8909,
											"name": "JUMP",
											"source": 19,
											"value": "[in]"
										},
										{
											"begin": 8811,
											"end": 8909,
											"name": "tag",
											"source": 19,
											"value": "219"
										},
										{
											"begin": 8811,
											"end": 8909,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 8941,
											"end": 8945,
											"name": "PUSH",
											"source": 19,
											"value": "60"
										},
										{
											"begin": 8936,
											"end": 8939,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 8932,
											"end": 8946,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 8918,
											"end": 8946,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 8918,
											"end": 8946,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 8801,
											"end": 8952,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 8801,
											"end": 8952,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 8801,
											"end": 8952,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 8801,
											"end": 8952,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 8801,
											"end": 8952,
											"name": "JUMP",
											"source": 19,
											"value": "[out]"
										},
										{
											"begin": 8958,
											"end": 9084,
											"name": "tag",
											"source": 19,
											"value": "221"
										},
										{
											"begin": 8958,
											"end": 9084,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 9053,
											"end": 9077,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "223"
										},
										{
											"begin": 9071,
											"end": 9076,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 9053,
											"end": 9077,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "224"
										},
										{
											"begin": 9053,
											"end": 9077,
											"name": "JUMP",
											"source": 19,
											"value": "[in]"
										},
										{
											"begin": 9053,
											"end": 9077,
											"name": "tag",
											"source": 19,
											"value": "223"
										},
										{
											"begin": 9053,
											"end": 9077,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 9048,
											"end": 9051,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 9041,
											"end": 9078,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 9031,
											"end": 9084,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 9031,
											"end": 9084,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 9031,
											"end": 9084,
											"name": "JUMP",
											"source": 19,
											"value": "[out]"
										},
										{
											"begin": 9172,
											"end": 10120,
											"name": "tag",
											"source": 19,
											"value": "225"
										},
										{
											"begin": 9172,
											"end": 10120,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 9172,
											"end": 10120,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 9374,
											"end": 9455,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "227"
										},
										{
											"begin": 9449,
											"end": 9454,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 9374,
											"end": 9455,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "228"
										},
										{
											"begin": 9374,
											"end": 9455,
											"name": "JUMP",
											"source": 19,
											"value": "[in]"
										},
										{
											"begin": 9374,
											"end": 9455,
											"name": "tag",
											"source": 19,
											"value": "227"
										},
										{
											"begin": 9374,
											"end": 9455,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 9471,
											"end": 9584,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "229"
										},
										{
											"begin": 9577,
											"end": 9583,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 9572,
											"end": 9575,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 9471,
											"end": 9584,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "230"
										},
										{
											"begin": 9471,
											"end": 9584,
											"name": "JUMP",
											"source": 19,
											"value": "[in]"
										},
										{
											"begin": 9471,
											"end": 9584,
											"name": "tag",
											"source": 19,
											"value": "229"
										},
										{
											"begin": 9471,
											"end": 9584,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 9464,
											"end": 9584,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": 9464,
											"end": 9584,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 9608,
											"end": 9691,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "231"
										},
										{
											"begin": 9685,
											"end": 9690,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 9608,
											"end": 9691,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "232"
										},
										{
											"begin": 9608,
											"end": 9691,
											"name": "JUMP",
											"source": 19,
											"value": "[in]"
										},
										{
											"begin": 9608,
											"end": 9691,
											"name": "tag",
											"source": 19,
											"value": "231"
										},
										{
											"begin": 9608,
											"end": 9691,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 9714,
											"end": 9721,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 9745,
											"end": 9746,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 9730,
											"end": 10095,
											"name": "tag",
											"source": 19,
											"value": "233"
										},
										{
											"begin": 9730,
											"end": 10095,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 9755,
											"end": 9761,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 9752,
											"end": 9753,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 9749,
											"end": 9762,
											"name": "LT",
											"source": 19
										},
										{
											"begin": 9730,
											"end": 10095,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 9730,
											"end": 10095,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "235"
										},
										{
											"begin": 9730,
											"end": 10095,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 9831,
											"end": 9837,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 9825,
											"end": 9838,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 9858,
											"end": 9975,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "236"
										},
										{
											"begin": 9971,
											"end": 9974,
											"name": "DUP9",
											"source": 19
										},
										{
											"begin": 9956,
											"end": 9969,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 9858,
											"end": 9975,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "213"
										},
										{
											"begin": 9858,
											"end": 9975,
											"name": "JUMP",
											"source": 19,
											"value": "[in]"
										},
										{
											"begin": 9858,
											"end": 9975,
											"name": "tag",
											"source": 19,
											"value": "236"
										},
										{
											"begin": 9858,
											"end": 9975,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 9851,
											"end": 9975,
											"name": "SWAP8",
											"source": 19
										},
										{
											"begin": 9851,
											"end": 9975,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 9998,
											"end": 10085,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "237"
										},
										{
											"begin": 10078,
											"end": 10084,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 9998,
											"end": 10085,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "238"
										},
										{
											"begin": 9998,
											"end": 10085,
											"name": "JUMP",
											"source": 19,
											"value": "[in]"
										},
										{
											"begin": 9998,
											"end": 10085,
											"name": "tag",
											"source": 19,
											"value": "237"
										},
										{
											"begin": 9998,
											"end": 10085,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 9988,
											"end": 10085,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 9988,
											"end": 10085,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 9790,
											"end": 10095,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 9777,
											"end": 9778,
											"name": "PUSH",
											"source": 19,
											"value": "1"
										},
										{
											"begin": 9774,
											"end": 9775,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 9770,
											"end": 9779,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 9765,
											"end": 9779,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 9765,
											"end": 9779,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 9730,
											"end": 10095,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "233"
										},
										{
											"begin": 9730,
											"end": 10095,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 9730,
											"end": 10095,
											"name": "tag",
											"source": 19,
											"value": "235"
										},
										{
											"begin": 9730,
											"end": 10095,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 9734,
											"end": 9748,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 10111,
											"end": 10114,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 10104,
											"end": 10114,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": 10104,
											"end": 10114,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 9350,
											"end": 10120,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 9350,
											"end": 10120,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 9350,
											"end": 10120,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 9350,
											"end": 10120,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 9350,
											"end": 10120,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 9350,
											"end": 10120,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 9350,
											"end": 10120,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 9350,
											"end": 10120,
											"name": "JUMP",
											"source": 19,
											"value": "[out]"
										},
										{
											"begin": 10206,
											"end": 11146,
											"name": "tag",
											"source": 19,
											"value": "239"
										},
										{
											"begin": 10206,
											"end": 11146,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 10206,
											"end": 11146,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 10406,
											"end": 10486,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "241"
										},
										{
											"begin": 10480,
											"end": 10485,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 10406,
											"end": 10486,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "242"
										},
										{
											"begin": 10406,
											"end": 10486,
											"name": "JUMP",
											"source": 19,
											"value": "[in]"
										},
										{
											"begin": 10406,
											"end": 10486,
											"name": "tag",
											"source": 19,
											"value": "241"
										},
										{
											"begin": 10406,
											"end": 10486,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 10502,
											"end": 10614,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "243"
										},
										{
											"begin": 10607,
											"end": 10613,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 10602,
											"end": 10605,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 10502,
											"end": 10614,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "244"
										},
										{
											"begin": 10502,
											"end": 10614,
											"name": "JUMP",
											"source": 19,
											"value": "[in]"
										},
										{
											"begin": 10502,
											"end": 10614,
											"name": "tag",
											"source": 19,
											"value": "243"
										},
										{
											"begin": 10502,
											"end": 10614,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 10495,
											"end": 10614,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": 10495,
											"end": 10614,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 10638,
											"end": 10720,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "245"
										},
										{
											"begin": 10714,
											"end": 10719,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 10638,
											"end": 10720,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "246"
										},
										{
											"begin": 10638,
											"end": 10720,
											"name": "JUMP",
											"source": 19,
											"value": "[in]"
										},
										{
											"begin": 10638,
											"end": 10720,
											"name": "tag",
											"source": 19,
											"value": "245"
										},
										{
											"begin": 10638,
											"end": 10720,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 10743,
											"end": 10750,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 10774,
											"end": 10775,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 10759,
											"end": 11121,
											"name": "tag",
											"source": 19,
											"value": "247"
										},
										{
											"begin": 10759,
											"end": 11121,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 10784,
											"end": 10790,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 10781,
											"end": 10782,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 10778,
											"end": 10791,
											"name": "LT",
											"source": 19
										},
										{
											"begin": 10759,
											"end": 11121,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 10759,
											"end": 11121,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "249"
										},
										{
											"begin": 10759,
											"end": 11121,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 10860,
											"end": 10866,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 10854,
											"end": 10867,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 10887,
											"end": 11002,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "250"
										},
										{
											"begin": 10998,
											"end": 11001,
											"name": "DUP9",
											"source": 19
										},
										{
											"begin": 10983,
											"end": 10996,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 10887,
											"end": 11002,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "217"
										},
										{
											"begin": 10887,
											"end": 11002,
											"name": "JUMP",
											"source": 19,
											"value": "[in]"
										},
										{
											"begin": 10887,
											"end": 11002,
											"name": "tag",
											"source": 19,
											"value": "250"
										},
										{
											"begin": 10887,
											"end": 11002,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 10880,
											"end": 11002,
											"name": "SWAP8",
											"source": 19
										},
										{
											"begin": 10880,
											"end": 11002,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 11025,
											"end": 11111,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "251"
										},
										{
											"begin": 11104,
											"end": 11110,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 11025,
											"end": 11111,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "252"
										},
										{
											"begin": 11025,
											"end": 11111,
											"name": "JUMP",
											"source": 19,
											"value": "[in]"
										},
										{
											"begin": 11025,
											"end": 11111,
											"name": "tag",
											"source": 19,
											"value": "251"
										},
										{
											"begin": 11025,
											"end": 11111,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 11015,
											"end": 11111,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 11015,
											"end": 11111,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 10819,
											"end": 11121,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 10806,
											"end": 10807,
											"name": "PUSH",
											"source": 19,
											"value": "1"
										},
										{
											"begin": 10803,
											"end": 10804,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 10799,
											"end": 10808,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 10794,
											"end": 10808,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 10794,
											"end": 10808,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 10759,
											"end": 11121,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "247"
										},
										{
											"begin": 10759,
											"end": 11121,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 10759,
											"end": 11121,
											"name": "tag",
											"source": 19,
											"value": "249"
										},
										{
											"begin": 10759,
											"end": 11121,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 10763,
											"end": 10777,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 11137,
											"end": 11140,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 11130,
											"end": 11140,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": 11130,
											"end": 11140,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 10382,
											"end": 11146,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 10382,
											"end": 11146,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 10382,
											"end": 11146,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 10382,
											"end": 11146,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 10382,
											"end": 11146,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 10382,
											"end": 11146,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 10382,
											"end": 11146,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 10382,
											"end": 11146,
											"name": "JUMP",
											"source": 19,
											"value": "[out]"
										},
										{
											"begin": 11152,
											"end": 11251,
											"name": "tag",
											"source": 19,
											"value": "253"
										},
										{
											"begin": 11152,
											"end": 11251,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 11223,
											"end": 11244,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "255"
										},
										{
											"begin": 11238,
											"end": 11243,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 11223,
											"end": 11244,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "256"
										},
										{
											"begin": 11223,
											"end": 11244,
											"name": "JUMP",
											"source": 19,
											"value": "[in]"
										},
										{
											"begin": 11223,
											"end": 11244,
											"name": "tag",
											"source": 19,
											"value": "255"
										},
										{
											"begin": 11223,
											"end": 11244,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 11218,
											"end": 11221,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 11211,
											"end": 11245,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 11201,
											"end": 11251,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 11201,
											"end": 11251,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 11201,
											"end": 11251,
											"name": "JUMP",
											"source": 19,
											"value": "[out]"
										},
										{
											"begin": 11335,
											"end": 11833,
											"name": "tag",
											"source": 19,
											"value": "216"
										},
										{
											"begin": 11335,
											"end": 11833,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 11476,
											"end": 11480,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 11471,
											"end": 11474,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 11467,
											"end": 11481,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 11564,
											"end": 11568,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 11557,
											"end": 11562,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 11553,
											"end": 11569,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 11547,
											"end": 11570,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 11583,
											"end": 11646,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "258"
										},
										{
											"begin": 11640,
											"end": 11644,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 11635,
											"end": 11638,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 11631,
											"end": 11645,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 11617,
											"end": 11629,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 11583,
											"end": 11646,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "259"
										},
										{
											"begin": 11583,
											"end": 11646,
											"name": "JUMP",
											"source": 19,
											"value": "[in]"
										},
										{
											"begin": 11583,
											"end": 11646,
											"name": "tag",
											"source": 19,
											"value": "258"
										},
										{
											"begin": 11583,
											"end": 11646,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 11491,
											"end": 11656,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 11740,
											"end": 11744,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 11733,
											"end": 11738,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 11729,
											"end": 11745,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 11723,
											"end": 11746,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 11759,
											"end": 11816,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "260"
										},
										{
											"begin": 11810,
											"end": 11814,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 11805,
											"end": 11808,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 11801,
											"end": 11815,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 11787,
											"end": 11799,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 11759,
											"end": 11816,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "253"
										},
										{
											"begin": 11759,
											"end": 11816,
											"name": "JUMP",
											"source": 19,
											"value": "[in]"
										},
										{
											"begin": 11759,
											"end": 11816,
											"name": "tag",
											"source": 19,
											"value": "260"
										},
										{
											"begin": 11759,
											"end": 11816,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 11666,
											"end": 11826,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 11445,
											"end": 11833,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 11445,
											"end": 11833,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 11445,
											"end": 11833,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 11445,
											"end": 11833,
											"name": "JUMP",
											"source": 19,
											"value": "[out]"
										},
										{
											"begin": 11915,
											"end": 12587,
											"name": "tag",
											"source": 19,
											"value": "220"
										},
										{
											"begin": 11915,
											"end": 12587,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 12054,
											"end": 12058,
											"name": "PUSH",
											"source": 19,
											"value": "60"
										},
										{
											"begin": 12049,
											"end": 12052,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 12045,
											"end": 12059,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 12142,
											"end": 12146,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 12135,
											"end": 12140,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 12131,
											"end": 12147,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 12125,
											"end": 12148,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 12161,
											"end": 12224,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "262"
										},
										{
											"begin": 12218,
											"end": 12222,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 12213,
											"end": 12216,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 12209,
											"end": 12223,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 12195,
											"end": 12207,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 12161,
											"end": 12224,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "259"
										},
										{
											"begin": 12161,
											"end": 12224,
											"name": "JUMP",
											"source": 19,
											"value": "[in]"
										},
										{
											"begin": 12161,
											"end": 12224,
											"name": "tag",
											"source": 19,
											"value": "262"
										},
										{
											"begin": 12161,
											"end": 12224,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 12069,
											"end": 12234,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 12317,
											"end": 12321,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 12310,
											"end": 12315,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 12306,
											"end": 12322,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 12300,
											"end": 12323,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 12336,
											"end": 12399,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "263"
										},
										{
											"begin": 12393,
											"end": 12397,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 12388,
											"end": 12391,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 12384,
											"end": 12398,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 12370,
											"end": 12382,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 12336,
											"end": 12399,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "259"
										},
										{
											"begin": 12336,
											"end": 12399,
											"name": "JUMP",
											"source": 19,
											"value": "[in]"
										},
										{
											"begin": 12336,
											"end": 12399,
											"name": "tag",
											"source": 19,
											"value": "263"
										},
										{
											"begin": 12336,
											"end": 12399,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 12244,
											"end": 12409,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 12490,
											"end": 12494,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 12483,
											"end": 12488,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 12479,
											"end": 12495,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 12473,
											"end": 12496,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 12509,
											"end": 12570,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "264"
										},
										{
											"begin": 12564,
											"end": 12568,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 12559,
											"end": 12562,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 12555,
											"end": 12569,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 12541,
											"end": 12553,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 12509,
											"end": 12570,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "265"
										},
										{
											"begin": 12509,
											"end": 12570,
											"name": "JUMP",
											"source": 19,
											"value": "[in]"
										},
										{
											"begin": 12509,
											"end": 12570,
											"name": "tag",
											"source": 19,
											"value": "264"
										},
										{
											"begin": 12509,
											"end": 12570,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 12419,
											"end": 12580,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 12023,
											"end": 12587,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 12023,
											"end": 12587,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 12023,
											"end": 12587,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 12023,
											"end": 12587,
											"name": "JUMP",
											"source": 19,
											"value": "[out]"
										},
										{
											"begin": 12593,
											"end": 12698,
											"name": "tag",
											"source": 19,
											"value": "265"
										},
										{
											"begin": 12593,
											"end": 12698,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 12668,
											"end": 12691,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "267"
										},
										{
											"begin": 12685,
											"end": 12690,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 12668,
											"end": 12691,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "268"
										},
										{
											"begin": 12668,
											"end": 12691,
											"name": "JUMP",
											"source": 19,
											"value": "[in]"
										},
										{
											"begin": 12668,
											"end": 12691,
											"name": "tag",
											"source": 19,
											"value": "267"
										},
										{
											"begin": 12668,
											"end": 12691,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 12663,
											"end": 12666,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 12656,
											"end": 12692,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 12646,
											"end": 12698,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 12646,
											"end": 12698,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 12646,
											"end": 12698,
											"name": "JUMP",
											"source": 19,
											"value": "[out]"
										},
										{
											"begin": 12704,
											"end": 12819,
											"name": "tag",
											"source": 19,
											"value": "269"
										},
										{
											"begin": 12704,
											"end": 12819,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 12789,
											"end": 12812,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "271"
										},
										{
											"begin": 12806,
											"end": 12811,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 12789,
											"end": 12812,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "268"
										},
										{
											"begin": 12789,
											"end": 12812,
											"name": "JUMP",
											"source": 19,
											"value": "[in]"
										},
										{
											"begin": 12789,
											"end": 12812,
											"name": "tag",
											"source": 19,
											"value": "271"
										},
										{
											"begin": 12789,
											"end": 12812,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 12784,
											"end": 12787,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 12777,
											"end": 12813,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 12767,
											"end": 12819,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 12767,
											"end": 12819,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 12767,
											"end": 12819,
											"name": "JUMP",
											"source": 19,
											"value": "[out]"
										},
										{
											"begin": 12825,
											"end": 12933,
											"name": "tag",
											"source": 19,
											"value": "259"
										},
										{
											"begin": 12825,
											"end": 12933,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 12902,
											"end": 12926,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "273"
										},
										{
											"begin": 12920,
											"end": 12925,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 12902,
											"end": 12926,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "274"
										},
										{
											"begin": 12902,
											"end": 12926,
											"name": "JUMP",
											"source": 19,
											"value": "[in]"
										},
										{
											"begin": 12902,
											"end": 12926,
											"name": "tag",
											"source": 19,
											"value": "273"
										},
										{
											"begin": 12902,
											"end": 12926,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 12897,
											"end": 12900,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 12890,
											"end": 12927,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 12880,
											"end": 12933,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 12880,
											"end": 12933,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 12880,
											"end": 12933,
											"name": "JUMP",
											"source": 19,
											"value": "[out]"
										},
										{
											"begin": 12939,
											"end": 13057,
											"name": "tag",
											"source": 19,
											"value": "275"
										},
										{
											"begin": 12939,
											"end": 13057,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 13026,
											"end": 13050,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "277"
										},
										{
											"begin": 13044,
											"end": 13049,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 13026,
											"end": 13050,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "274"
										},
										{
											"begin": 13026,
											"end": 13050,
											"name": "JUMP",
											"source": 19,
											"value": "[in]"
										},
										{
											"begin": 13026,
											"end": 13050,
											"name": "tag",
											"source": 19,
											"value": "277"
										},
										{
											"begin": 13026,
											"end": 13050,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 13021,
											"end": 13024,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 13014,
											"end": 13051,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 13004,
											"end": 13057,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 13004,
											"end": 13057,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 13004,
											"end": 13057,
											"name": "JUMP",
											"source": 19,
											"value": "[out]"
										},
										{
											"begin": 13063,
											"end": 13189,
											"name": "tag",
											"source": 19,
											"value": "278"
										},
										{
											"begin": 13063,
											"end": 13189,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 13158,
											"end": 13182,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "280"
										},
										{
											"begin": 13176,
											"end": 13181,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 13158,
											"end": 13182,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "274"
										},
										{
											"begin": 13158,
											"end": 13182,
											"name": "JUMP",
											"source": 19,
											"value": "[in]"
										},
										{
											"begin": 13158,
											"end": 13182,
											"name": "tag",
											"source": 19,
											"value": "280"
										},
										{
											"begin": 13158,
											"end": 13182,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 13153,
											"end": 13156,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 13146,
											"end": 13183,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 13136,
											"end": 13189,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 13136,
											"end": 13189,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 13136,
											"end": 13189,
											"name": "JUMP",
											"source": 19,
											"value": "[out]"
										},
										{
											"begin": 13195,
											"end": 13669,
											"name": "tag",
											"source": 19,
											"value": "95"
										},
										{
											"begin": 13195,
											"end": 13669,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 13195,
											"end": 13669,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 13390,
											"end": 13392,
											"name": "PUSH",
											"source": 19,
											"value": "60"
										},
										{
											"begin": 13379,
											"end": 13388,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 13375,
											"end": 13393,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 13367,
											"end": 13393,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 13367,
											"end": 13393,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 13403,
											"end": 13482,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "282"
										},
										{
											"begin": 13479,
											"end": 13480,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 13468,
											"end": 13477,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 13464,
											"end": 13481,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 13455,
											"end": 13461,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 13403,
											"end": 13482,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "221"
										},
										{
											"begin": 13403,
											"end": 13482,
											"name": "JUMP",
											"source": 19,
											"value": "[in]"
										},
										{
											"begin": 13403,
											"end": 13482,
											"name": "tag",
											"source": 19,
											"value": "282"
										},
										{
											"begin": 13403,
											"end": 13482,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 13492,
											"end": 13572,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "283"
										},
										{
											"begin": 13568,
											"end": 13570,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 13557,
											"end": 13566,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 13553,
											"end": 13571,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 13544,
											"end": 13550,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 13492,
											"end": 13572,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "221"
										},
										{
											"begin": 13492,
											"end": 13572,
											"name": "JUMP",
											"source": 19,
											"value": "[in]"
										},
										{
											"begin": 13492,
											"end": 13572,
											"name": "tag",
											"source": 19,
											"value": "283"
										},
										{
											"begin": 13492,
											"end": 13572,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 13582,
											"end": 13662,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "284"
										},
										{
											"begin": 13658,
											"end": 13660,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 13647,
											"end": 13656,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 13643,
											"end": 13661,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 13634,
											"end": 13640,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 13582,
											"end": 13662,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "221"
										},
										{
											"begin": 13582,
											"end": 13662,
											"name": "JUMP",
											"source": 19,
											"value": "[in]"
										},
										{
											"begin": 13582,
											"end": 13662,
											"name": "tag",
											"source": 19,
											"value": "284"
										},
										{
											"begin": 13582,
											"end": 13662,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 13357,
											"end": 13669,
											"name": "SWAP5",
											"source": 19
										},
										{
											"begin": 13357,
											"end": 13669,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": 13357,
											"end": 13669,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 13357,
											"end": 13669,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 13357,
											"end": 13669,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 13357,
											"end": 13669,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 13357,
											"end": 13669,
											"name": "JUMP",
											"source": 19,
											"value": "[out]"
										},
										{
											"begin": 13675,
											"end": 14268,
											"name": "tag",
											"source": 19,
											"value": "66"
										},
										{
											"begin": 13675,
											"end": 14268,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 13675,
											"end": 14268,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 13898,
											"end": 13901,
											"name": "PUSH",
											"source": 19,
											"value": "80"
										},
										{
											"begin": 13887,
											"end": 13896,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 13883,
											"end": 13902,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 13875,
											"end": 13902,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 13875,
											"end": 13902,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 13912,
											"end": 13991,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "286"
										},
										{
											"begin": 13988,
											"end": 13989,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 13977,
											"end": 13986,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 13973,
											"end": 13990,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 13964,
											"end": 13970,
											"name": "DUP8",
											"source": 19
										},
										{
											"begin": 13912,
											"end": 13991,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "221"
										},
										{
											"begin": 13912,
											"end": 13991,
											"name": "JUMP",
											"source": 19,
											"value": "[in]"
										},
										{
											"begin": 13912,
											"end": 13991,
											"name": "tag",
											"source": 19,
											"value": "286"
										},
										{
											"begin": 13912,
											"end": 13991,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 14001,
											"end": 14081,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "287"
										},
										{
											"begin": 14077,
											"end": 14079,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 14066,
											"end": 14075,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 14062,
											"end": 14080,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 14053,
											"end": 14059,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 14001,
											"end": 14081,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "221"
										},
										{
											"begin": 14001,
											"end": 14081,
											"name": "JUMP",
											"source": 19,
											"value": "[in]"
										},
										{
											"begin": 14001,
											"end": 14081,
											"name": "tag",
											"source": 19,
											"value": "287"
										},
										{
											"begin": 14001,
											"end": 14081,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 14091,
											"end": 14171,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "288"
										},
										{
											"begin": 14167,
											"end": 14169,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 14156,
											"end": 14165,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 14152,
											"end": 14170,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 14143,
											"end": 14149,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 14091,
											"end": 14171,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "221"
										},
										{
											"begin": 14091,
											"end": 14171,
											"name": "JUMP",
											"source": 19,
											"value": "[in]"
										},
										{
											"begin": 14091,
											"end": 14171,
											"name": "tag",
											"source": 19,
											"value": "288"
										},
										{
											"begin": 14091,
											"end": 14171,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 14181,
											"end": 14261,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "289"
										},
										{
											"begin": 14257,
											"end": 14259,
											"name": "PUSH",
											"source": 19,
											"value": "60"
										},
										{
											"begin": 14246,
											"end": 14255,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 14242,
											"end": 14260,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 14233,
											"end": 14239,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 14181,
											"end": 14261,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "278"
										},
										{
											"begin": 14181,
											"end": 14261,
											"name": "JUMP",
											"source": 19,
											"value": "[in]"
										},
										{
											"begin": 14181,
											"end": 14261,
											"name": "tag",
											"source": 19,
											"value": "289"
										},
										{
											"begin": 14181,
											"end": 14261,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 13865,
											"end": 14268,
											"name": "SWAP6",
											"source": 19
										},
										{
											"begin": 13865,
											"end": 14268,
											"name": "SWAP5",
											"source": 19
										},
										{
											"begin": 13865,
											"end": 14268,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 13865,
											"end": 14268,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 13865,
											"end": 14268,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 13865,
											"end": 14268,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 13865,
											"end": 14268,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 13865,
											"end": 14268,
											"name": "JUMP",
											"source": 19,
											"value": "[out]"
										},
										{
											"begin": 14274,
											"end": 14986,
											"name": "tag",
											"source": 19,
											"value": "41"
										},
										{
											"begin": 14274,
											"end": 14986,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 14274,
											"end": 14986,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 14525,
											"end": 14528,
											"name": "PUSH",
											"source": 19,
											"value": "A0"
										},
										{
											"begin": 14514,
											"end": 14523,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 14510,
											"end": 14529,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 14502,
											"end": 14529,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 14502,
											"end": 14529,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 14539,
											"end": 14618,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "291"
										},
										{
											"begin": 14615,
											"end": 14616,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 14604,
											"end": 14613,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 14600,
											"end": 14617,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 14591,
											"end": 14597,
											"name": "DUP9",
											"source": 19
										},
										{
											"begin": 14539,
											"end": 14618,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "221"
										},
										{
											"begin": 14539,
											"end": 14618,
											"name": "JUMP",
											"source": 19,
											"value": "[in]"
										},
										{
											"begin": 14539,
											"end": 14618,
											"name": "tag",
											"source": 19,
											"value": "291"
										},
										{
											"begin": 14539,
											"end": 14618,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 14628,
											"end": 14708,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "292"
										},
										{
											"begin": 14704,
											"end": 14706,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 14693,
											"end": 14702,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 14689,
											"end": 14707,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 14680,
											"end": 14686,
											"name": "DUP8",
											"source": 19
										},
										{
											"begin": 14628,
											"end": 14708,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "221"
										},
										{
											"begin": 14628,
											"end": 14708,
											"name": "JUMP",
											"source": 19,
											"value": "[in]"
										},
										{
											"begin": 14628,
											"end": 14708,
											"name": "tag",
											"source": 19,
											"value": "292"
										},
										{
											"begin": 14628,
											"end": 14708,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 14718,
											"end": 14798,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "293"
										},
										{
											"begin": 14794,
											"end": 14796,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 14783,
											"end": 14792,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 14779,
											"end": 14797,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 14770,
											"end": 14776,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 14718,
											"end": 14798,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "221"
										},
										{
											"begin": 14718,
											"end": 14798,
											"name": "JUMP",
											"source": 19,
											"value": "[in]"
										},
										{
											"begin": 14718,
											"end": 14798,
											"name": "tag",
											"source": 19,
											"value": "293"
										},
										{
											"begin": 14718,
											"end": 14798,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 14808,
											"end": 14888,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "294"
										},
										{
											"begin": 14884,
											"end": 14886,
											"name": "PUSH",
											"source": 19,
											"value": "60"
										},
										{
											"begin": 14873,
											"end": 14882,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 14869,
											"end": 14887,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 14860,
											"end": 14866,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 14808,
											"end": 14888,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "278"
										},
										{
											"begin": 14808,
											"end": 14888,
											"name": "JUMP",
											"source": 19,
											"value": "[in]"
										},
										{
											"begin": 14808,
											"end": 14888,
											"name": "tag",
											"source": 19,
											"value": "294"
										},
										{
											"begin": 14808,
											"end": 14888,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 14898,
											"end": 14979,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "295"
										},
										{
											"begin": 14974,
											"end": 14977,
											"name": "PUSH",
											"source": 19,
											"value": "80"
										},
										{
											"begin": 14963,
											"end": 14972,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 14959,
											"end": 14978,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 14950,
											"end": 14956,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 14898,
											"end": 14979,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "278"
										},
										{
											"begin": 14898,
											"end": 14979,
											"name": "JUMP",
											"source": 19,
											"value": "[in]"
										},
										{
											"begin": 14898,
											"end": 14979,
											"name": "tag",
											"source": 19,
											"value": "295"
										},
										{
											"begin": 14898,
											"end": 14979,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 14492,
											"end": 14986,
											"name": "SWAP7",
											"source": 19
										},
										{
											"begin": 14492,
											"end": 14986,
											"name": "SWAP6",
											"source": 19
										},
										{
											"begin": 14492,
											"end": 14986,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 14492,
											"end": 14986,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 14492,
											"end": 14986,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 14492,
											"end": 14986,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 14492,
											"end": 14986,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 14492,
											"end": 14986,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 14492,
											"end": 14986,
											"name": "JUMP",
											"source": 19,
											"value": "[out]"
										},
										{
											"begin": 14992,
											"end": 15473,
											"name": "tag",
											"source": 19,
											"value": "11"
										},
										{
											"begin": 14992,
											"end": 15473,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 14992,
											"end": 15473,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 15227,
											"end": 15229,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 15216,
											"end": 15225,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 15212,
											"end": 15230,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 15204,
											"end": 15230,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 15204,
											"end": 15230,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 15276,
											"end": 15285,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 15270,
											"end": 15274,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 15266,
											"end": 15286,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 15262,
											"end": 15263,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 15251,
											"end": 15260,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 15247,
											"end": 15264,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 15240,
											"end": 15287,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 15304,
											"end": 15466,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "297"
										},
										{
											"begin": 15461,
											"end": 15465,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 15452,
											"end": 15458,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 15304,
											"end": 15466,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "225"
										},
										{
											"begin": 15304,
											"end": 15466,
											"name": "JUMP",
											"source": 19,
											"value": "[in]"
										},
										{
											"begin": 15304,
											"end": 15466,
											"name": "tag",
											"source": 19,
											"value": "297"
										},
										{
											"begin": 15304,
											"end": 15466,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 15296,
											"end": 15466,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 15296,
											"end": 15466,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 15194,
											"end": 15473,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 15194,
											"end": 15473,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 15194,
											"end": 15473,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 15194,
											"end": 15473,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 15194,
											"end": 15473,
											"name": "JUMP",
											"source": 19,
											"value": "[out]"
										},
										{
											"begin": 15479,
											"end": 15956,
											"name": "tag",
											"source": 19,
											"value": "23"
										},
										{
											"begin": 15479,
											"end": 15956,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 15479,
											"end": 15956,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 15712,
											"end": 15714,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 15701,
											"end": 15710,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 15697,
											"end": 15715,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 15689,
											"end": 15715,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 15689,
											"end": 15715,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 15761,
											"end": 15770,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 15755,
											"end": 15759,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 15751,
											"end": 15771,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 15747,
											"end": 15748,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 15736,
											"end": 15745,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 15732,
											"end": 15749,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 15725,
											"end": 15772,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 15789,
											"end": 15949,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "299"
										},
										{
											"begin": 15944,
											"end": 15948,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 15935,
											"end": 15941,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 15789,
											"end": 15949,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "239"
										},
										{
											"begin": 15789,
											"end": 15949,
											"name": "JUMP",
											"source": 19,
											"value": "[in]"
										},
										{
											"begin": 15789,
											"end": 15949,
											"name": "tag",
											"source": 19,
											"value": "299"
										},
										{
											"begin": 15789,
											"end": 15949,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 15781,
											"end": 15949,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 15781,
											"end": 15949,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 15679,
											"end": 15956,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 15679,
											"end": 15956,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 15679,
											"end": 15956,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 15679,
											"end": 15956,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 15679,
											"end": 15956,
											"name": "JUMP",
											"source": 19,
											"value": "[out]"
										},
										{
											"begin": 15962,
											"end": 16290,
											"name": "tag",
											"source": 19,
											"value": "17"
										},
										{
											"begin": 15962,
											"end": 16290,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 15962,
											"end": 16290,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 16119,
											"end": 16121,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 16108,
											"end": 16117,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 16104,
											"end": 16122,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 16096,
											"end": 16122,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 16096,
											"end": 16122,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 16132,
											"end": 16203,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "301"
										},
										{
											"begin": 16200,
											"end": 16201,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 16189,
											"end": 16198,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 16185,
											"end": 16202,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 16176,
											"end": 16182,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 16132,
											"end": 16203,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "275"
										},
										{
											"begin": 16132,
											"end": 16203,
											"name": "JUMP",
											"source": 19,
											"value": "[in]"
										},
										{
											"begin": 16132,
											"end": 16203,
											"name": "tag",
											"source": 19,
											"value": "301"
										},
										{
											"begin": 16132,
											"end": 16203,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 16213,
											"end": 16283,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "302"
										},
										{
											"begin": 16279,
											"end": 16281,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 16268,
											"end": 16277,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 16264,
											"end": 16282,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 16255,
											"end": 16261,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 16213,
											"end": 16283,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "269"
										},
										{
											"begin": 16213,
											"end": 16283,
											"name": "JUMP",
											"source": 19,
											"value": "[in]"
										},
										{
											"begin": 16213,
											"end": 16283,
											"name": "tag",
											"source": 19,
											"value": "302"
										},
										{
											"begin": 16213,
											"end": 16283,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 16086,
											"end": 16290,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": 16086,
											"end": 16290,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 16086,
											"end": 16290,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 16086,
											"end": 16290,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 16086,
											"end": 16290,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 16086,
											"end": 16290,
											"name": "JUMP",
											"source": 19,
											"value": "[out]"
										},
										{
											"begin": 16296,
											"end": 16574,
											"name": "tag",
											"source": 19,
											"value": "121"
										},
										{
											"begin": 16296,
											"end": 16574,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 16296,
											"end": 16574,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 16362,
											"end": 16364,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 16356,
											"end": 16365,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 16346,
											"end": 16365,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 16346,
											"end": 16365,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 16404,
											"end": 16408,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 16396,
											"end": 16402,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 16392,
											"end": 16409,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 16511,
											"end": 16517,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 16499,
											"end": 16509,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 16496,
											"end": 16518,
											"name": "LT",
											"source": 19
										},
										{
											"begin": 16475,
											"end": 16493,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16463,
											"end": 16473,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 16460,
											"end": 16494,
											"name": "GT",
											"source": 19
										},
										{
											"begin": 16457,
											"end": 16519,
											"name": "OR",
											"source": 19
										},
										{
											"begin": 16454,
											"end": 16456,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 16454,
											"end": 16456,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "304"
										},
										{
											"begin": 16454,
											"end": 16456,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 16522,
											"end": 16535,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "305"
										},
										{
											"begin": 16522,
											"end": 16535,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "306"
										},
										{
											"begin": 16522,
											"end": 16535,
											"name": "JUMP",
											"source": 19,
											"value": "[in]"
										},
										{
											"begin": 16522,
											"end": 16535,
											"name": "tag",
											"source": 19,
											"value": "305"
										},
										{
											"begin": 16522,
											"end": 16535,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 16454,
											"end": 16456,
											"name": "tag",
											"source": 19,
											"value": "304"
										},
										{
											"begin": 16454,
											"end": 16456,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 16557,
											"end": 16567,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 16553,
											"end": 16555,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 16546,
											"end": 16568,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 16336,
											"end": 16574,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 16336,
											"end": 16574,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 16336,
											"end": 16574,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 16336,
											"end": 16574,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 16336,
											"end": 16574,
											"name": "JUMP",
											"source": 19,
											"value": "[out]"
										},
										{
											"begin": 16580,
											"end": 16912,
											"name": "tag",
											"source": 19,
											"value": "120"
										},
										{
											"begin": 16580,
											"end": 16912,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 16580,
											"end": 16912,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 16773,
											"end": 16791,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16765,
											"end": 16771,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 16762,
											"end": 16792,
											"name": "GT",
											"source": 19
										},
										{
											"begin": 16759,
											"end": 16761,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 16759,
											"end": 16761,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "308"
										},
										{
											"begin": 16759,
											"end": 16761,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 16795,
											"end": 16808,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "309"
										},
										{
											"begin": 16795,
											"end": 16808,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "306"
										},
										{
											"begin": 16795,
											"end": 16808,
											"name": "JUMP",
											"source": 19,
											"value": "[in]"
										},
										{
											"begin": 16795,
											"end": 16808,
											"name": "tag",
											"source": 19,
											"value": "309"
										},
										{
											"begin": 16795,
											"end": 16808,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 16759,
											"end": 16761,
											"name": "tag",
											"source": 19,
											"value": "308"
										},
										{
											"begin": 16759,
											"end": 16761,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 16840,
											"end": 16844,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 16832,
											"end": 16838,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 16828,
											"end": 16845,
											"name": "MUL",
											"source": 19
										},
										{
											"begin": 16820,
											"end": 16845,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 16820,
											"end": 16845,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 16900,
											"end": 16904,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 16894,
											"end": 16898,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 16890,
											"end": 16905,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 16882,
											"end": 16905,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 16882,
											"end": 16905,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 16688,
											"end": 16912,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 16688,
											"end": 16912,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 16688,
											"end": 16912,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 16688,
											"end": 16912,
											"name": "JUMP",
											"source": 19,
											"value": "[out]"
										},
										{
											"begin": 16918,
											"end": 17249,
											"name": "tag",
											"source": 19,
											"value": "132"
										},
										{
											"begin": 16918,
											"end": 17249,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 16918,
											"end": 17249,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 17110,
											"end": 17128,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17102,
											"end": 17108,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 17099,
											"end": 17129,
											"name": "GT",
											"source": 19
										},
										{
											"begin": 17096,
											"end": 17098,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 17096,
											"end": 17098,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "311"
										},
										{
											"begin": 17096,
											"end": 17098,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 17132,
											"end": 17145,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "312"
										},
										{
											"begin": 17132,
											"end": 17145,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "306"
										},
										{
											"begin": 17132,
											"end": 17145,
											"name": "JUMP",
											"source": 19,
											"value": "[in]"
										},
										{
											"begin": 17132,
											"end": 17145,
											"name": "tag",
											"source": 19,
											"value": "312"
										},
										{
											"begin": 17132,
											"end": 17145,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 17096,
											"end": 17098,
											"name": "tag",
											"source": 19,
											"value": "311"
										},
										{
											"begin": 17096,
											"end": 17098,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 17177,
											"end": 17181,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 17169,
											"end": 17175,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 17165,
											"end": 17182,
											"name": "MUL",
											"source": 19
										},
										{
											"begin": 17157,
											"end": 17182,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 17157,
											"end": 17182,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 17237,
											"end": 17241,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 17231,
											"end": 17235,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 17227,
											"end": 17242,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 17219,
											"end": 17242,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 17219,
											"end": 17242,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 17025,
											"end": 17249,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 17025,
											"end": 17249,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 17025,
											"end": 17249,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 17025,
											"end": 17249,
											"name": "JUMP",
											"source": 19,
											"value": "[out]"
										},
										{
											"begin": 17255,
											"end": 17414,
											"name": "tag",
											"source": 19,
											"value": "232"
										},
										{
											"begin": 17255,
											"end": 17414,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 17255,
											"end": 17414,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 17372,
											"end": 17375,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 17364,
											"end": 17375,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 17364,
											"end": 17375,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 17402,
											"end": 17406,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 17397,
											"end": 17400,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 17393,
											"end": 17407,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 17385,
											"end": 17407,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 17385,
											"end": 17407,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 17354,
											"end": 17414,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 17354,
											"end": 17414,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 17354,
											"end": 17414,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 17354,
											"end": 17414,
											"name": "JUMP",
											"source": 19,
											"value": "[out]"
										},
										{
											"begin": 17420,
											"end": 17578,
											"name": "tag",
											"source": 19,
											"value": "246"
										},
										{
											"begin": 17420,
											"end": 17578,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 17420,
											"end": 17578,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 17536,
											"end": 17539,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 17528,
											"end": 17539,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 17528,
											"end": 17539,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 17566,
											"end": 17570,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 17561,
											"end": 17564,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 17557,
											"end": 17571,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 17549,
											"end": 17571,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 17549,
											"end": 17571,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 17518,
											"end": 17578,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 17518,
											"end": 17578,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 17518,
											"end": 17578,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 17518,
											"end": 17578,
											"name": "JUMP",
											"source": 19,
											"value": "[out]"
										},
										{
											"begin": 17584,
											"end": 17725,
											"name": "tag",
											"source": 19,
											"value": "228"
										},
										{
											"begin": 17584,
											"end": 17725,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 17584,
											"end": 17725,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 17712,
											"end": 17717,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 17706,
											"end": 17718,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 17696,
											"end": 17718,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 17696,
											"end": 17718,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 17685,
											"end": 17725,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 17685,
											"end": 17725,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 17685,
											"end": 17725,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 17685,
											"end": 17725,
											"name": "JUMP",
											"source": 19,
											"value": "[out]"
										},
										{
											"begin": 17731,
											"end": 17871,
											"name": "tag",
											"source": 19,
											"value": "242"
										},
										{
											"begin": 17731,
											"end": 17871,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 17731,
											"end": 17871,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 17858,
											"end": 17863,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 17852,
											"end": 17864,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 17842,
											"end": 17864,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 17842,
											"end": 17864,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 17831,
											"end": 17871,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 17831,
											"end": 17871,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 17831,
											"end": 17871,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 17831,
											"end": 17871,
											"name": "JUMP",
											"source": 19,
											"value": "[out]"
										},
										{
											"begin": 17877,
											"end": 18017,
											"name": "tag",
											"source": 19,
											"value": "238"
										},
										{
											"begin": 17877,
											"end": 18017,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 17877,
											"end": 18017,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 18006,
											"end": 18010,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 18001,
											"end": 18004,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 17997,
											"end": 18011,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 17989,
											"end": 18011,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 17989,
											"end": 18011,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 17979,
											"end": 18017,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 17979,
											"end": 18017,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 17979,
											"end": 18017,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 17979,
											"end": 18017,
											"name": "JUMP",
											"source": 19,
											"value": "[out]"
										},
										{
											"begin": 18023,
											"end": 18162,
											"name": "tag",
											"source": 19,
											"value": "252"
										},
										{
											"begin": 18023,
											"end": 18162,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 18023,
											"end": 18162,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 18151,
											"end": 18155,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 18146,
											"end": 18149,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 18142,
											"end": 18156,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 18134,
											"end": 18156,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 18134,
											"end": 18156,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 18124,
											"end": 18162,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 18124,
											"end": 18162,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 18124,
											"end": 18162,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 18124,
											"end": 18162,
											"name": "JUMP",
											"source": 19,
											"value": "[out]"
										},
										{
											"begin": 18168,
											"end": 18379,
											"name": "tag",
											"source": 19,
											"value": "230"
										},
										{
											"begin": 18168,
											"end": 18379,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 18168,
											"end": 18379,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 18328,
											"end": 18334,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 18323,
											"end": 18326,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 18316,
											"end": 18335,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 18368,
											"end": 18372,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 18363,
											"end": 18366,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 18359,
											"end": 18373,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 18344,
											"end": 18373,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 18344,
											"end": 18373,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 18306,
											"end": 18379,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 18306,
											"end": 18379,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 18306,
											"end": 18379,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 18306,
											"end": 18379,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 18306,
											"end": 18379,
											"name": "JUMP",
											"source": 19,
											"value": "[out]"
										},
										{
											"begin": 18385,
											"end": 18595,
											"name": "tag",
											"source": 19,
											"value": "244"
										},
										{
											"begin": 18385,
											"end": 18595,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 18385,
											"end": 18595,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 18544,
											"end": 18550,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 18539,
											"end": 18542,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 18532,
											"end": 18551,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 18584,
											"end": 18588,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 18579,
											"end": 18582,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 18575,
											"end": 18589,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 18560,
											"end": 18589,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 18560,
											"end": 18589,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 18522,
											"end": 18595,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 18522,
											"end": 18595,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 18522,
											"end": 18595,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 18522,
											"end": 18595,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 18522,
											"end": 18595,
											"name": "JUMP",
											"source": 19,
											"value": "[out]"
										},
										{
											"begin": 18601,
											"end": 18697,
											"name": "tag",
											"source": 19,
											"value": "224"
										},
										{
											"begin": 18601,
											"end": 18697,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 18601,
											"end": 18697,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 18667,
											"end": 18691,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "322"
										},
										{
											"begin": 18685,
											"end": 18690,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 18667,
											"end": 18691,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "323"
										},
										{
											"begin": 18667,
											"end": 18691,
											"name": "JUMP",
											"source": 19,
											"value": "[in]"
										},
										{
											"begin": 18667,
											"end": 18691,
											"name": "tag",
											"source": 19,
											"value": "322"
										},
										{
											"begin": 18667,
											"end": 18691,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 18656,
											"end": 18691,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 18656,
											"end": 18691,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 18646,
											"end": 18697,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 18646,
											"end": 18697,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 18646,
											"end": 18697,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 18646,
											"end": 18697,
											"name": "JUMP",
											"source": 19,
											"value": "[out]"
										},
										{
											"begin": 18703,
											"end": 18793,
											"name": "tag",
											"source": 19,
											"value": "256"
										},
										{
											"begin": 18703,
											"end": 18793,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 18703,
											"end": 18793,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 18780,
											"end": 18785,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 18773,
											"end": 18786,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 18766,
											"end": 18787,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 18755,
											"end": 18787,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 18755,
											"end": 18787,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 18745,
											"end": 18793,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 18745,
											"end": 18793,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 18745,
											"end": 18793,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 18745,
											"end": 18793,
											"name": "JUMP",
											"source": 19,
											"value": "[out]"
										},
										{
											"begin": 18799,
											"end": 18925,
											"name": "tag",
											"source": 19,
											"value": "323"
										},
										{
											"begin": 18799,
											"end": 18925,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 18799,
											"end": 18925,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 18876,
											"end": 18918,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18869,
											"end": 18874,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 18865,
											"end": 18919,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 18854,
											"end": 18919,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 18854,
											"end": 18919,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 18844,
											"end": 18925,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 18844,
											"end": 18925,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 18844,
											"end": 18925,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 18844,
											"end": 18925,
											"name": "JUMP",
											"source": 19,
											"value": "[out]"
										},
										{
											"begin": 18931,
											"end": 19022,
											"name": "tag",
											"source": 19,
											"value": "268"
										},
										{
											"begin": 18931,
											"end": 19022,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 18931,
											"end": 19022,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 19007,
											"end": 19015,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFF"
										},
										{
											"begin": 19000,
											"end": 19005,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 18996,
											"end": 19016,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 18985,
											"end": 19016,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 18985,
											"end": 19016,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 18975,
											"end": 19022,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 18975,
											"end": 19022,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 18975,
											"end": 19022,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 18975,
											"end": 19022,
											"name": "JUMP",
											"source": 19,
											"value": "[out]"
										},
										{
											"begin": 19028,
											"end": 19105,
											"name": "tag",
											"source": 19,
											"value": "274"
										},
										{
											"begin": 19028,
											"end": 19105,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 19028,
											"end": 19105,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 19094,
											"end": 19099,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 19083,
											"end": 19099,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 19083,
											"end": 19099,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 19073,
											"end": 19105,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 19073,
											"end": 19105,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 19073,
											"end": 19105,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 19073,
											"end": 19105,
											"name": "JUMP",
											"source": 19,
											"value": "[out]"
										},
										{
											"begin": 19111,
											"end": 19197,
											"name": "tag",
											"source": 19,
											"value": "328"
										},
										{
											"begin": 19111,
											"end": 19197,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 19111,
											"end": 19197,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 19186,
											"end": 19190,
											"name": "PUSH",
											"source": 19,
											"value": "FF"
										},
										{
											"begin": 19179,
											"end": 19184,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 19175,
											"end": 19191,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 19164,
											"end": 19191,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 19164,
											"end": 19191,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 19154,
											"end": 19197,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 19154,
											"end": 19197,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 19154,
											"end": 19197,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 19154,
											"end": 19197,
											"name": "JUMP",
											"source": 19,
											"value": "[out]"
										},
										{
											"begin": 19203,
											"end": 19251,
											"name": "tag",
											"source": 19,
											"value": "306"
										},
										{
											"begin": 19203,
											"end": 19251,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 19236,
											"end": 19245,
											"name": "INVALID",
											"source": 19
										},
										{
											"begin": 19257,
											"end": 19379,
											"name": "tag",
											"source": 19,
											"value": "142"
										},
										{
											"begin": 19257,
											"end": 19379,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 19330,
											"end": 19354,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "332"
										},
										{
											"begin": 19348,
											"end": 19353,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 19330,
											"end": 19354,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "224"
										},
										{
											"begin": 19330,
											"end": 19354,
											"name": "JUMP",
											"source": 19,
											"value": "[in]"
										},
										{
											"begin": 19330,
											"end": 19354,
											"name": "tag",
											"source": 19,
											"value": "332"
										},
										{
											"begin": 19330,
											"end": 19354,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 19323,
											"end": 19328,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 19320,
											"end": 19355,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 19310,
											"end": 19312,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "333"
										},
										{
											"begin": 19310,
											"end": 19312,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 19369,
											"end": 19370,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 19366,
											"end": 19367,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 19359,
											"end": 19371,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 19310,
											"end": 19312,
											"name": "tag",
											"source": 19,
											"value": "333"
										},
										{
											"begin": 19310,
											"end": 19312,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 19300,
											"end": 19379,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 19300,
											"end": 19379,
											"name": "JUMP",
											"source": 19,
											"value": "[out]"
										},
										{
											"begin": 19385,
											"end": 19501,
											"name": "tag",
											"source": 19,
											"value": "154"
										},
										{
											"begin": 19385,
											"end": 19501,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 19455,
											"end": 19476,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "335"
										},
										{
											"begin": 19470,
											"end": 19475,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 19455,
											"end": 19476,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "256"
										},
										{
											"begin": 19455,
											"end": 19476,
											"name": "JUMP",
											"source": 19,
											"value": "[in]"
										},
										{
											"begin": 19455,
											"end": 19476,
											"name": "tag",
											"source": 19,
											"value": "335"
										},
										{
											"begin": 19455,
											"end": 19476,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 19448,
											"end": 19453,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 19445,
											"end": 19477,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 19435,
											"end": 19437,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "336"
										},
										{
											"begin": 19435,
											"end": 19437,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 19491,
											"end": 19492,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 19488,
											"end": 19489,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 19481,
											"end": 19493,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 19435,
											"end": 19437,
											"name": "tag",
											"source": 19,
											"value": "336"
										},
										{
											"begin": 19435,
											"end": 19437,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 19425,
											"end": 19501,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 19425,
											"end": 19501,
											"name": "JUMP",
											"source": 19,
											"value": "[out]"
										},
										{
											"begin": 19507,
											"end": 19627,
											"name": "tag",
											"source": 19,
											"value": "178"
										},
										{
											"begin": 19507,
											"end": 19627,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 19579,
											"end": 19602,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "338"
										},
										{
											"begin": 19596,
											"end": 19601,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 19579,
											"end": 19602,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "268"
										},
										{
											"begin": 19579,
											"end": 19602,
											"name": "JUMP",
											"source": 19,
											"value": "[in]"
										},
										{
											"begin": 19579,
											"end": 19602,
											"name": "tag",
											"source": 19,
											"value": "338"
										},
										{
											"begin": 19579,
											"end": 19602,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 19572,
											"end": 19577,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 19569,
											"end": 19603,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 19559,
											"end": 19561,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "339"
										},
										{
											"begin": 19559,
											"end": 19561,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 19617,
											"end": 19618,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 19614,
											"end": 19615,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 19607,
											"end": 19619,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 19559,
											"end": 19561,
											"name": "tag",
											"source": 19,
											"value": "339"
										},
										{
											"begin": 19559,
											"end": 19561,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 19549,
											"end": 19627,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 19549,
											"end": 19627,
											"name": "JUMP",
											"source": 19,
											"value": "[out]"
										},
										{
											"begin": 19633,
											"end": 19755,
											"name": "tag",
											"source": 19,
											"value": "181"
										},
										{
											"begin": 19633,
											"end": 19755,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 19706,
											"end": 19730,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "341"
										},
										{
											"begin": 19724,
											"end": 19729,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 19706,
											"end": 19730,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "274"
										},
										{
											"begin": 19706,
											"end": 19730,
											"name": "JUMP",
											"source": 19,
											"value": "[in]"
										},
										{
											"begin": 19706,
											"end": 19730,
											"name": "tag",
											"source": 19,
											"value": "341"
										},
										{
											"begin": 19706,
											"end": 19730,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 19699,
											"end": 19704,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 19696,
											"end": 19731,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 19686,
											"end": 19688,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "342"
										},
										{
											"begin": 19686,
											"end": 19688,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 19745,
											"end": 19746,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 19742,
											"end": 19743,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 19735,
											"end": 19747,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 19686,
											"end": 19688,
											"name": "tag",
											"source": 19,
											"value": "342"
										},
										{
											"begin": 19686,
											"end": 19688,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 19676,
											"end": 19755,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 19676,
											"end": 19755,
											"name": "JUMP",
											"source": 19,
											"value": "[out]"
										},
										{
											"begin": 19761,
											"end": 19879,
											"name": "tag",
											"source": 19,
											"value": "187"
										},
										{
											"begin": 19761,
											"end": 19879,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 19832,
											"end": 19854,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "344"
										},
										{
											"begin": 19848,
											"end": 19853,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 19832,
											"end": 19854,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "328"
										},
										{
											"begin": 19832,
											"end": 19854,
											"name": "JUMP",
											"source": 19,
											"value": "[in]"
										},
										{
											"begin": 19832,
											"end": 19854,
											"name": "tag",
											"source": 19,
											"value": "344"
										},
										{
											"begin": 19832,
											"end": 19854,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 19825,
											"end": 19830,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 19822,
											"end": 19855,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 19812,
											"end": 19814,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "345"
										},
										{
											"begin": 19812,
											"end": 19814,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 19869,
											"end": 19870,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 19866,
											"end": 19867,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 19859,
											"end": 19871,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 19812,
											"end": 19814,
											"name": "tag",
											"source": 19,
											"value": "345"
										},
										{
											"begin": 19812,
											"end": 19814,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 19802,
											"end": 19879,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 19802,
											"end": 19879,
											"name": "JUMP",
											"source": 19,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"estimateAmountOut(address,address,address,uint256,uint8)": "6110358d",
							"getPrices((uint256,address,address,address,uint8)[])": "ea8650c5",
							"poolsExists((uint256,address,address,address,uint8,uint256,uint256)[])": "3d157a46"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"estimateAmountOut\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"t0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"t1\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"providerVersion\",\"type\":\"uint8\"}],\"internalType\":\"struct IPriceAggregator.priceIn[]\",\"name\":\"inputs\",\"type\":\"tuple[]\"}],\"name\":\"getPrices\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"}],\"internalType\":\"struct IPriceAggregator.priceOut[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"t0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"t1\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"providerVersion\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"min0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"min1\",\"type\":\"uint256\"}],\"internalType\":\"struct IPriceAggregator.existsIn[]\",\"name\":\"inputs\",\"type\":\"tuple[]\"}],\"name\":\"poolsExists\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"exists\",\"type\":\"bool\"}],\"internalType\":\"struct IPriceAggregator.existsOut[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/PriceAggregator.sol\":\"PriceAggregator\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v2-core/contracts/interfaces/IUniswapV2Factory.sol\":{\"keccak256\":\"0xe5905c0989cf5a865ed9bb7b9252536ca011c5b744017a82a7d4443b9c00a891\",\"urls\":[\"bzz-raw://5d2a90a0a796491507462a3da18c3f8819721d571572d765a2207c35bf0a0389\",\"dweb:/ipfs/Qmf9ACYiT3qzjgsYuhm866FBdiBpRMXAPpQhSFbgqcyhHt\"]},\"@uniswap/v2-core/contracts/interfaces/IUniswapV2Pair.sol\":{\"keccak256\":\"0x7c9bc70e5996c763e02ff38905282bc24fb242b0ef2519a003b36824fc524a4b\",\"urls\":[\"bzz-raw://85d5ad2dd23ee127f40907a12865a1e8cb5828814f6f2480285e1827dd72dedf\",\"dweb:/ipfs/QmayKQWJgWmr46DqWseADyUanmqxh662hPNdAkdHRjiQQH\"]},\"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol\":{\"keccak256\":\"0x8a3c5c449d4b7cd76513ed6995f4b86e4a86f222c770f8442f5fc128ce29b4d2\",\"urls\":[\"bzz-raw://1df63ca373dafae3bd0ee7fe70f890a1dc7c45ed869c01de68413e0e97ff9deb\",\"dweb:/ipfs/QmefJgEYGUL8KX7kQKYTrDweF8GB7yjy3nw5Bmqzryg7PG\"]},\"@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol\":{\"keccak256\":\"0xcc3d0c93fc9ac0febbe09f941b465b57f750bcf3b48432da0b97dc289cfdc489\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b9379ad954680c44a0bc523b314ae4c4da735f9fe1d02aa56ea5bdba6f1136f2\",\"dweb:/ipfs/QmZXdgQNXKAckrXWz9R3mc47F1fvDvr28a2ewJrwNAw71B\"]},\"@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol\":{\"keccak256\":\"0xfe6113d518466cd6652c85b111e01f33eb62157f49ae5ed7d5a3947a2044adb1\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://1c42b9e6f5902ac38dd43e25750939baa7e0c1425dc75afd717c4412731065d5\",\"dweb:/ipfs/QmWaoacnzsucTvBME2o7YgZBZMhaHv7fkj83htHMVWJKWh\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol\":{\"keccak256\":\"0x9453dd0e7442188667d01d9b65de3f1e14e9511ff3e303179a15f6fc267f7634\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://982f4328f956c3e60e67501e759eb292ac487f76460c774c50e9ae4fcc92aae5\",\"dweb:/ipfs/QmRnzEDsaqtd9PJEVcgQi7p5aV5pMSvRUoGZJAdwFUJxgZ\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol\":{\"keccak256\":\"0xe603ac5b17ecdee73ba2b27efdf386c257a19c14206e87eee77e2017b742d9e5\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://8febc9bdb399a4d94bb89f5377732652e2400e4a8dee808201ade6848f9004e7\",\"dweb:/ipfs/QmaKDqYYFU4d2W2iN77aDHptfbFmYZRrMYXHeGpJmM8C1c\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol\":{\"keccak256\":\"0x8071514d0fe5d17d6fbd31c191cdfb703031c24e0ece3621d88ab10e871375cd\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://d0b571930cc7488b1d546a7e9cea7c52d8b3c4e207da657ed0e0db7343b8cd03\",\"dweb:/ipfs/QmaGK6vVwB95QSTR1XMYvrh7ivYAYZxi3fD7v6VMA4jZ39\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol\":{\"keccak256\":\"0xf6e5d2cd1139c4c276bdbc8e1d2b256e456c866a91f1b868da265c6d2685c3f7\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b99c8c9ae8e27ee6559e5866bea82cbc9ffc8247f8d15b7422a4deb287d4d047\",\"dweb:/ipfs/QmfL8gaqt3ffAnm6nVj5ksuNpLygXuL3xq5VBqrkwC2JJ3\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol\":{\"keccak256\":\"0x759b78a2918af9e99e246dc3af084f654e48ef32bb4e4cb8a966aa3dcaece235\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://64144fb96e1c7fdba87305acadb98a198d26a3d46c097cb3a666e567f6f29735\",\"dweb:/ipfs/QmUnWVwN9FKB9uV5Pr8YfLpWZnYM2DENnRMaadZ492JS9u\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol\":{\"keccak256\":\"0x852dc1f5df7dcf7f11e7bb3eed79f0cea72ad4b25f6a9d2c35aafb48925fd49f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://ed63907c38ff36b0e22bc9ffc53e791ea74f0d4f0e7c257fdfb5aaf8825b1f0f\",\"dweb:/ipfs/QmSQrckghEjs6HVsA5GVgpNpZWvTXMY5eQLF7cN6deFeEg\"]},\"@uniswap/v3-core/contracts/libraries/FullMath.sol\":{\"keccak256\":\"0x50e87f7a3197525d1c6f7e04290060e848677c8a4e86c554bc6ace4a4d0d476d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3874093a6b37d8e68f9475a91f8eb0a1c808cb6153c84cfe6c37909505a4d24e\",\"dweb:/ipfs/QmUqGpQqvSHX4SwUvcBCs9g4ZhR9JPhgD3615oUigAhtjj\"]},\"@uniswap/v3-core/contracts/libraries/TickMath.sol\":{\"keccak256\":\"0xda8c2c0b12d2976acfd364453ba5f5bf0117ba3c91175ee9e1067d3fb26944d9\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://3f3d2d7c2723c91830c74d96292f28fc1cfe28d388cdb9c1a5ebadb4c2b96f81\",\"dweb:/ipfs/QmYU4wk8MEm33wVWR38LoncvR7b8PP1mLuGBKX3dUpYJVE\"]},\"contracts/PriceAggregator.sol\":{\"keccak256\":\"0xd3d92b28a452a51431e5c1ca6c4de4d3b74fcb16c59fe1490f90cfab648213d0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e939c7856e3eb9d285246f6fc09ae406b989ba93a4d39213472dd1e7e4296ac4\",\"dweb:/ipfs/QmPUHAqJdscWWGQL28wCR3Sw3NgFMZstPaKBkFYJjDWeTZ\"]},\"contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x7df9d93243a890a6dc175905d65495ae5726330faa50409ab8460c4c00c672e1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3ff91fe9d915b97343e152f1a15a46e5ff9477e90e90a4431dca38f79eb2cdba\",\"dweb:/ipfs/QmcHUAJs2MfcdbAFTzdQE1eGevxCGHNDXECiuGLDaUs34S\"]},\"contracts/interfaces/IPriceAggregator.sol\":{\"keccak256\":\"0x642c2a923446bd4fe2110b919ca486400909703874ad52c5c5626a72a93a99be\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://144bb3978d09c2c2203a26845fab2aa2bfb07866bb9471607c6927f7fc803d3a\",\"dweb:/ipfs/Qmc2RuHW5NP8qWr1s4knsfACEFQRrBCSTwaXDXLGy2ha1T\"]},\"contracts/libraries/OracleLibrary.sol\":{\"keccak256\":\"0xfe374d779a9fdb16c102035c181002ffd393138a38acc916e9f4e98139f5b399\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://497ed18360c8fef9ca485f60669fa56247b2a46a464483b2d93fe24792d68d1f\",\"dweb:/ipfs/QmY6gSGfuAi5BQnJxhQKLHwqmo7ZG3WVqXqAmPRZRyapGv\"]},\"contracts/libraries/UniswapV2.sol\":{\"keccak256\":\"0x20c122c32f799086c7bd4f2612823c16311c775e5f80dc530ca818558c81ffbd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bdc8bafae4fafd8edba5aa7be0832fd834a1d20179769b2856dfca4cfd54f22b\",\"dweb:/ipfs/QmXsFn9cDuH8JzUeGx9VEASiS5BLuzmk6t95icuo21t2Nq\"]},\"contracts/libraries/UniswapV3.sol\":{\"keccak256\":\"0xa53c1a29ac5fb459643b01e91e26d2652d02e6bccf58c461bdd0b4d739658a23\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b0bb59a244ee383481516b2b3fbe44ba8aaf01774c96ea168626a3639909574d\",\"dweb:/ipfs/QmShBmmJERR8T68xcnsx3kVvec6m64XJVahg6TQ51NJbS8\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/interfaces/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "deposit",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"deposit()": "d0e30db0",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"withdraw(uint256)": "2e1a7d4d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x7df9d93243a890a6dc175905d65495ae5726330faa50409ab8460c4c00c672e1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3ff91fe9d915b97343e152f1a15a46e5ff9477e90e90a4431dca38f79eb2cdba\",\"dweb:/ipfs/QmcHUAJs2MfcdbAFTzdQE1eGevxCGHNDXECiuGLDaUs34S\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/interfaces/IPriceAggregator.sol": {
				"IPriceAggregator": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "provider",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tB",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "version",
									"type": "uint8"
								}
							],
							"name": "estimateAmountOut",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "uint24",
									"name": "fee",
									"type": "uint24"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "index",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "t0",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "t1",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "provider",
											"type": "address"
										},
										{
											"internalType": "uint8",
											"name": "providerVersion",
											"type": "uint8"
										}
									],
									"internalType": "struct IPriceAggregator.priceIn[]",
									"name": "inputs",
									"type": "tuple[]"
								}
							],
							"name": "getPrices",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "index",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "price",
											"type": "uint256"
										},
										{
											"internalType": "uint24",
											"name": "fee",
											"type": "uint24"
										}
									],
									"internalType": "struct IPriceAggregator.priceOut[]",
									"name": "",
									"type": "tuple[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "index",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "t0",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "t1",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "provider",
											"type": "address"
										},
										{
											"internalType": "uint8",
											"name": "providerVersion",
											"type": "uint8"
										},
										{
											"internalType": "uint256",
											"name": "min0",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "min1",
											"type": "uint256"
										}
									],
									"internalType": "struct IPriceAggregator.existsIn[]",
									"name": "inputs",
									"type": "tuple[]"
								}
							],
							"name": "poolsExists",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "index",
											"type": "uint256"
										},
										{
											"internalType": "bool",
											"name": "exists",
											"type": "bool"
										}
									],
									"internalType": "struct IPriceAggregator.existsOut[]",
									"name": "",
									"type": "tuple[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"estimateAmountOut(address,address,address,uint256,uint8)": "6110358d",
							"getPrices((uint256,address,address,address,uint8)[])": "ea8650c5",
							"poolsExists((uint256,address,address,address,uint8,uint256,uint256)[])": "3d157a46"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"estimateAmountOut\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"t0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"t1\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"providerVersion\",\"type\":\"uint8\"}],\"internalType\":\"struct IPriceAggregator.priceIn[]\",\"name\":\"inputs\",\"type\":\"tuple[]\"}],\"name\":\"getPrices\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"}],\"internalType\":\"struct IPriceAggregator.priceOut[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"t0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"t1\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"providerVersion\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"min0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"min1\",\"type\":\"uint256\"}],\"internalType\":\"struct IPriceAggregator.existsIn[]\",\"name\":\"inputs\",\"type\":\"tuple[]\"}],\"name\":\"poolsExists\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"exists\",\"type\":\"bool\"}],\"internalType\":\"struct IPriceAggregator.existsOut[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IPriceAggregator.sol\":\"IPriceAggregator\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IPriceAggregator.sol\":{\"keccak256\":\"0x642c2a923446bd4fe2110b919ca486400909703874ad52c5c5626a72a93a99be\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://144bb3978d09c2c2203a26845fab2aa2bfb07866bb9471607c6927f7fc803d3a\",\"dweb:/ipfs/Qmc2RuHW5NP8qWr1s4knsfACEFQRrBCSTwaXDXLGy2ha1T\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/libraries/OracleLibrary.sol": {
				"OracleLibrary": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/libraries/OracleLibrary.sol\":244:1891  library OracleLibrary {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/libraries/OracleLibrary.sol\":244:1891  library OracleLibrary {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212204cb18eca1a86f36ab91ff0a9f7641f0861759bc9f21ce31608dcdd6beba0020464736f6c63430007060033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212204cb18eca1a86f36ab91ff0a9f7641f0861759bc9f21ce31608dcdd6beba0020464736f6c63430007060033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4C 0xB1 DUP15 0xCA BYTE DUP7 RETURN PUSH11 0xB91FF0A9F7641F0861759B 0xC9 CALLCODE SHR 0xE3 AND ADDMOD 0xDC 0xDD PUSH12 0xEBA0020464736F6C63430007 MOD STOP CALLER ",
							"sourceMap": "244:1647:16:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212204cb18eca1a86f36ab91ff0a9f7641f0861759bc9f21ce31608dcdd6beba0020464736f6c63430007060033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4C 0xB1 DUP15 0xCA BYTE DUP7 RETURN PUSH11 0xB91FF0A9F7641F0861759B 0xC9 CALLCODE SHR 0xE3 AND ADDMOD 0xDC 0xDD PUSH12 0xEBA0020464736F6C63430007 MOD STOP CALLER ",
							"sourceMap": "244:1647:16:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"consult(address,uint32)": "infinite",
								"getQuoteAtTick(int24,uint128,address,address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 244,
									"end": 1891,
									"name": "PUSH #[$]",
									"source": 16,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 244,
									"end": 1891,
									"name": "PUSH [$]",
									"source": 16,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 244,
									"end": 1891,
									"name": "PUSH",
									"source": 16,
									"value": "B"
								},
								{
									"begin": 244,
									"end": 1891,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 244,
									"end": 1891,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 244,
									"end": 1891,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 244,
									"end": 1891,
									"name": "CODECOPY",
									"source": 16
								},
								{
									"begin": 244,
									"end": 1891,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 244,
									"end": 1891,
									"name": "MLOAD",
									"source": 16
								},
								{
									"begin": 244,
									"end": 1891,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 244,
									"end": 1891,
									"name": "BYTE",
									"source": 16
								},
								{
									"begin": 244,
									"end": 1891,
									"name": "PUSH",
									"source": 16,
									"value": "73"
								},
								{
									"begin": 244,
									"end": 1891,
									"name": "EQ",
									"source": 16
								},
								{
									"begin": 244,
									"end": 1891,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "1"
								},
								{
									"begin": 244,
									"end": 1891,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 244,
									"end": 1891,
									"name": "INVALID",
									"source": 16
								},
								{
									"begin": 244,
									"end": 1891,
									"name": "tag",
									"source": 16,
									"value": "1"
								},
								{
									"begin": 244,
									"end": 1891,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 244,
									"end": 1891,
									"name": "ADDRESS",
									"source": 16
								},
								{
									"begin": 244,
									"end": 1891,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 244,
									"end": 1891,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 244,
									"end": 1891,
									"name": "PUSH",
									"source": 16,
									"value": "73"
								},
								{
									"begin": 244,
									"end": 1891,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 244,
									"end": 1891,
									"name": "MSTORE8",
									"source": 16
								},
								{
									"begin": 244,
									"end": 1891,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 244,
									"end": 1891,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 244,
									"end": 1891,
									"name": "RETURN",
									"source": 16
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212204cb18eca1a86f36ab91ff0a9f7641f0861759bc9f21ce31608dcdd6beba0020464736f6c63430007060033",
									".code": [
										{
											"begin": 244,
											"end": 1891,
											"name": "PUSHDEPLOYADDRESS",
											"source": 16
										},
										{
											"begin": 244,
											"end": 1891,
											"name": "ADDRESS",
											"source": 16
										},
										{
											"begin": 244,
											"end": 1891,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 244,
											"end": 1891,
											"name": "PUSH",
											"source": 16,
											"value": "80"
										},
										{
											"begin": 244,
											"end": 1891,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 244,
											"end": 1891,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 244,
											"end": 1891,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 244,
											"end": 1891,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 244,
											"end": 1891,
											"name": "REVERT",
											"source": 16
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/libraries/OracleLibrary.sol\":\"OracleLibrary\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol\":{\"keccak256\":\"0xfe6113d518466cd6652c85b111e01f33eb62157f49ae5ed7d5a3947a2044adb1\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://1c42b9e6f5902ac38dd43e25750939baa7e0c1425dc75afd717c4412731065d5\",\"dweb:/ipfs/QmWaoacnzsucTvBME2o7YgZBZMhaHv7fkj83htHMVWJKWh\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol\":{\"keccak256\":\"0x9453dd0e7442188667d01d9b65de3f1e14e9511ff3e303179a15f6fc267f7634\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://982f4328f956c3e60e67501e759eb292ac487f76460c774c50e9ae4fcc92aae5\",\"dweb:/ipfs/QmRnzEDsaqtd9PJEVcgQi7p5aV5pMSvRUoGZJAdwFUJxgZ\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol\":{\"keccak256\":\"0xe603ac5b17ecdee73ba2b27efdf386c257a19c14206e87eee77e2017b742d9e5\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://8febc9bdb399a4d94bb89f5377732652e2400e4a8dee808201ade6848f9004e7\",\"dweb:/ipfs/QmaKDqYYFU4d2W2iN77aDHptfbFmYZRrMYXHeGpJmM8C1c\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol\":{\"keccak256\":\"0x8071514d0fe5d17d6fbd31c191cdfb703031c24e0ece3621d88ab10e871375cd\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://d0b571930cc7488b1d546a7e9cea7c52d8b3c4e207da657ed0e0db7343b8cd03\",\"dweb:/ipfs/QmaGK6vVwB95QSTR1XMYvrh7ivYAYZxi3fD7v6VMA4jZ39\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol\":{\"keccak256\":\"0xf6e5d2cd1139c4c276bdbc8e1d2b256e456c866a91f1b868da265c6d2685c3f7\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b99c8c9ae8e27ee6559e5866bea82cbc9ffc8247f8d15b7422a4deb287d4d047\",\"dweb:/ipfs/QmfL8gaqt3ffAnm6nVj5ksuNpLygXuL3xq5VBqrkwC2JJ3\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol\":{\"keccak256\":\"0x759b78a2918af9e99e246dc3af084f654e48ef32bb4e4cb8a966aa3dcaece235\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://64144fb96e1c7fdba87305acadb98a198d26a3d46c097cb3a666e567f6f29735\",\"dweb:/ipfs/QmUnWVwN9FKB9uV5Pr8YfLpWZnYM2DENnRMaadZ492JS9u\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol\":{\"keccak256\":\"0x852dc1f5df7dcf7f11e7bb3eed79f0cea72ad4b25f6a9d2c35aafb48925fd49f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://ed63907c38ff36b0e22bc9ffc53e791ea74f0d4f0e7c257fdfb5aaf8825b1f0f\",\"dweb:/ipfs/QmSQrckghEjs6HVsA5GVgpNpZWvTXMY5eQLF7cN6deFeEg\"]},\"@uniswap/v3-core/contracts/libraries/FullMath.sol\":{\"keccak256\":\"0x50e87f7a3197525d1c6f7e04290060e848677c8a4e86c554bc6ace4a4d0d476d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3874093a6b37d8e68f9475a91f8eb0a1c808cb6153c84cfe6c37909505a4d24e\",\"dweb:/ipfs/QmUqGpQqvSHX4SwUvcBCs9g4ZhR9JPhgD3615oUigAhtjj\"]},\"@uniswap/v3-core/contracts/libraries/TickMath.sol\":{\"keccak256\":\"0xda8c2c0b12d2976acfd364453ba5f5bf0117ba3c91175ee9e1067d3fb26944d9\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://3f3d2d7c2723c91830c74d96292f28fc1cfe28d388cdb9c1a5ebadb4c2b96f81\",\"dweb:/ipfs/QmYU4wk8MEm33wVWR38LoncvR7b8PP1mLuGBKX3dUpYJVE\"]},\"contracts/libraries/OracleLibrary.sol\":{\"keccak256\":\"0xfe374d779a9fdb16c102035c181002ffd393138a38acc916e9f4e98139f5b399\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://497ed18360c8fef9ca485f60669fa56247b2a46a464483b2d93fe24792d68d1f\",\"dweb:/ipfs/QmY6gSGfuAi5BQnJxhQKLHwqmo7ZG3WVqXqAmPRZRyapGv\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/libraries/UniswapV2.sol": {
				"UniswapV2": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "router",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tB",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								}
							],
							"name": "EstimateAmountOut",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "factory",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "t0",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "t1",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "min0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "min1",
									"type": "uint256"
								}
							],
							"name": "PoolExists",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "router",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "t0",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "t1",
									"type": "address"
								}
							],
							"name": "Price",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/libraries/UniswapV2.sol\":305:1474  library UniswapV2 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/libraries/UniswapV2.sol\":305:1474  library UniswapV2 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8c39560e\n      eq\n      tag_2\n      jumpi\n      dup1\n      0xbcbcaa29\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xc361e0b1\n      eq\n      tag_4\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"contracts/libraries/UniswapV2.sol\":334:664  function EstimateAmountOut(address router,address tA, address tB,uint256 amountIn) external view returns (uint256){... */\n    tag_2:\n      tag_5\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x80\n      dup2\n      lt\n      iszero\n      tag_6\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_6:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_7\n      jump\t// in\n    tag_5:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/libraries/UniswapV2.sol\":1032:1471  function PoolExists(address factory,address t0,address t1,uint min0,uint min1) external view returns (bool){... */\n    tag_3:\n      tag_8\n      0x04\n      dup1\n      calldatasize\n      sub\n      0xa0\n      dup2\n      lt\n      iszero\n      tag_9\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_9:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_10\n      jump\t// in\n    tag_8:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/libraries/UniswapV2.sol\":674:1026  function Price(address router, address t0,address t1) external view returns (uint256){... */\n    tag_4:\n      tag_11\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x60\n      dup2\n      lt\n      iszero\n      tag_12\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_12:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_13\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/libraries/UniswapV2.sol\":334:664  function EstimateAmountOut(address router,address tA, address tB,uint256 amountIn) external view returns (uint256){... */\n    tag_7:\n        /* \"contracts/libraries/UniswapV2.sol\":440:447  uint256 */\n      0x00\n        /* \"contracts/libraries/UniswapV2.sol\":458:479  address[] memory path */\n      dup1\n        /* \"contracts/libraries/UniswapV2.sol\":496:497  2 */\n      0x02\n        /* \"contracts/libraries/UniswapV2.sol\":482:498  new address[](2) */\n      0xffffffffffffffff\n      dup2\n      gt\n      dup1\n      iszero\n      tag_15\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_15:\n      pop\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_16\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_16:\n      pop\n        /* \"contracts/libraries/UniswapV2.sol\":458:498  address[] memory path = new address[](2) */\n      swap1\n      pop\n        /* \"contracts/libraries/UniswapV2.sol\":518:520  tA */\n      dup5\n        /* \"contracts/libraries/UniswapV2.sol\":508:512  path */\n      dup2\n        /* \"contracts/libraries/UniswapV2.sol\":513:514  0 */\n      0x00\n        /* \"contracts/libraries/UniswapV2.sol\":508:515  path[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_17\n      jumpi\n      invalid\n    tag_17:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"contracts/libraries/UniswapV2.sol\":508:520  path[0] = tA */\n      swap1\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/libraries/UniswapV2.sol\":540:542  tB */\n      dup4\n        /* \"contracts/libraries/UniswapV2.sol\":530:534  path */\n      dup2\n        /* \"contracts/libraries/UniswapV2.sol\":535:536  1 */\n      0x01\n        /* \"contracts/libraries/UniswapV2.sol\":530:537  path[1] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_18\n      jumpi\n      invalid\n    tag_18:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"contracts/libraries/UniswapV2.sol\":530:542  path[1] = tB */\n      swap1\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/libraries/UniswapV2.sol\":552:573  uint[] memory amounts */\n      0x00\n        /* \"contracts/libraries/UniswapV2.sol\":595:601  router */\n      dup7\n        /* \"contracts/libraries/UniswapV2.sol\":576:616  IUniswapV2Router01(router).getAmountsOut */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xd06ca61f\n        /* \"contracts/libraries/UniswapV2.sol\":617:625  amountIn */\n      dup6\n        /* \"contracts/libraries/UniswapV2.sol\":626:630  path */\n      dup5\n        /* \"contracts/libraries/UniswapV2.sol\":576:631  IUniswapV2Router01(router).getAmountsOut(amountIn,path) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      0x20\n      mul\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_19:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_21\n      jumpi\n      dup1\n      dup3\n      add\n      mload\n      dup2\n      dup5\n      add\n      mstore\n      0x20\n      dup2\n      add\n      swap1\n      pop\n      jump(tag_19)\n    tag_21:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      swap4\n      pop\n      pop\n      pop\n      pop\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_22\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_22:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_24\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_24:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x00\n      dup3\n      returndatacopy\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      0x20\n      dup2\n      lt\n      iszero\n      tag_25\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_25:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      mload(0x40)\n      swap4\n      swap3\n      swap2\n      swap1\n      dup5\n      0x0100000000\n      dup3\n      gt\n      iszero\n      tag_26\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_26:\n      dup4\n      dup3\n      add\n      swap2\n      pop\n      0x20\n      dup3\n      add\n      dup6\n      dup2\n      gt\n      iszero\n      tag_27\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_27:\n      dup3\n      mload\n      dup7\n      0x20\n      dup3\n      mul\n      dup4\n      add\n      gt\n      0x0100000000\n      dup3\n      gt\n      or\n      iszero\n      tag_28\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_28:\n      dup1\n      dup4\n      mstore\n      0x20\n      dup4\n      add\n      swap3\n      pop\n      pop\n      pop\n      swap1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      0x20\n      mul\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_29:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_31\n      jumpi\n      dup1\n      dup3\n      add\n      mload\n      dup2\n      dup5\n      add\n      mstore\n      0x20\n      dup2\n      add\n      swap1\n      pop\n      jump(tag_29)\n    tag_31:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      0x40\n      mstore\n      pop\n      pop\n      pop\n        /* \"contracts/libraries/UniswapV2.sol\":552:631  uint[] memory amounts = IUniswapV2Router01(router).getAmountsOut(amountIn,path) */\n      swap1\n      pop\n        /* \"contracts/libraries/UniswapV2.sol\":647:654  amounts */\n      dup1\n        /* \"contracts/libraries/UniswapV2.sol\":655:656  1 */\n      0x01\n        /* \"contracts/libraries/UniswapV2.sol\":647:657  amounts[1] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_32\n      jumpi\n      invalid\n    tag_32:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/libraries/UniswapV2.sol\":640:657  return amounts[1] */\n      swap3\n      pop\n      pop\n      pop\n        /* \"contracts/libraries/UniswapV2.sol\":334:664  function EstimateAmountOut(address router,address tA, address tB,uint256 amountIn) external view returns (uint256){... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/libraries/UniswapV2.sol\":1032:1471  function PoolExists(address factory,address t0,address t1,uint min0,uint min1) external view returns (bool){... */\n    tag_10:\n        /* \"contracts/libraries/UniswapV2.sol\":1134:1138  bool */\n      0x00\n        /* \"contracts/libraries/UniswapV2.sol\":1149:1161  address pool */\n      dup1\n        /* \"contracts/libraries/UniswapV2.sol\":1182:1189  factory */\n      dup7\n        /* \"contracts/libraries/UniswapV2.sol\":1164:1198  IUniswapV2Factory(factory).getPair */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xe6a43905\n        /* \"contracts/libraries/UniswapV2.sol\":1199:1201  t0 */\n      dup8\n        /* \"contracts/libraries/UniswapV2.sol\":1202:1204  t1 */\n      dup8\n        /* \"contracts/libraries/UniswapV2.sol\":1164:1205  IUniswapV2Factory(factory).getPair(t0,t1) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_34\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_34:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_36\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_36:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_37\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_37:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"contracts/libraries/UniswapV2.sol\":1149:1205  address pool = IUniswapV2Factory(factory).getPair(t0,t1) */\n      swap1\n      pop\n        /* \"contracts/libraries/UniswapV2.sol\":1235:1236  0 */\n      0x00\n        /* \"contracts/libraries/UniswapV2.sol\":1219:1237  pool == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/libraries/UniswapV2.sol\":1219:1223  pool */\n      dup2\n        /* \"contracts/libraries/UniswapV2.sol\":1219:1237  pool == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/libraries/UniswapV2.sol\":1215:1251  if (pool == address(0)) return false */\n      iszero\n      tag_38\n      jumpi\n        /* \"contracts/libraries/UniswapV2.sol\":1246:1251  false */\n      0x00\n        /* \"contracts/libraries/UniswapV2.sol\":1239:1251  return false */\n      swap2\n      pop\n      pop\n      jump(tag_33)\n        /* \"contracts/libraries/UniswapV2.sol\":1215:1251  if (pool == address(0)) return false */\n    tag_38:\n        /* \"contracts/libraries/UniswapV2.sol\":1262:1272  uint112 r0 */\n      0x00\n        /* \"contracts/libraries/UniswapV2.sol\":1274:1284  uint112 r1 */\n      dup1\n        /* \"contracts/libraries/UniswapV2.sol\":1304:1308  pool */\n      dup3\n        /* \"contracts/libraries/UniswapV2.sol\":1289:1321  IUniswapV2Pair(pool).getReserves */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x0902f1ac\n        /* \"contracts/libraries/UniswapV2.sol\":1289:1323  IUniswapV2Pair(pool).getReserves() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x60\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_39\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_39:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_41\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_41:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x60\n      dup2\n      lt\n      iszero\n      tag_42\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_42:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"contracts/libraries/UniswapV2.sol\":1261:1323  (uint112 r0, uint112 r1,) = IUniswapV2Pair(pool).getReserves() */\n      pop\n      swap2\n      pop\n      swap2\n      pop\n        /* \"contracts/libraries/UniswapV2.sol\":1345:1347  r0 */\n      dup2\n        /* \"contracts/libraries/UniswapV2.sol\":1338:1347  min0 > r0 */\n      0xffffffffffffffffffffffffffff\n      and\n        /* \"contracts/libraries/UniswapV2.sol\":1338:1342  min0 */\n      dup7\n        /* \"contracts/libraries/UniswapV2.sol\":1338:1347  min0 > r0 */\n      gt\n        /* \"contracts/libraries/UniswapV2.sol\":1333:1444  if ( min0 > r0) {... */\n      iszero\n      tag_43\n      jumpi\n        /* \"contracts/libraries/UniswapV2.sol\":1370:1375  false */\n      0x00\n        /* \"contracts/libraries/UniswapV2.sol\":1363:1375  return false */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump(tag_33)\n        /* \"contracts/libraries/UniswapV2.sol\":1333:1444  if ( min0 > r0) {... */\n    tag_43:\n        /* \"contracts/libraries/UniswapV2.sol\":1403:1405  r1 */\n      dup1\n        /* \"contracts/libraries/UniswapV2.sol\":1396:1405  min1 > r1 */\n      0xffffffffffffffffffffffffffff\n      and\n        /* \"contracts/libraries/UniswapV2.sol\":1396:1400  min1 */\n      dup6\n        /* \"contracts/libraries/UniswapV2.sol\":1396:1405  min1 > r1 */\n      gt\n        /* \"contracts/libraries/UniswapV2.sol\":1392:1444  if (min1 > r1) {... */\n      iszero\n      tag_45\n      jumpi\n        /* \"contracts/libraries/UniswapV2.sol\":1428:1433  false */\n      0x00\n        /* \"contracts/libraries/UniswapV2.sol\":1421:1433  return false */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump(tag_33)\n        /* \"contracts/libraries/UniswapV2.sol\":1392:1444  if (min1 > r1) {... */\n    tag_45:\n        /* \"contracts/libraries/UniswapV2.sol\":1460:1464  true */\n      0x01\n        /* \"contracts/libraries/UniswapV2.sol\":1453:1464  return true */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/libraries/UniswapV2.sol\":1032:1471  function PoolExists(address factory,address t0,address t1,uint min0,uint min1) external view returns (bool){... */\n    tag_33:\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/libraries/UniswapV2.sol\":674:1026  function Price(address router, address t0,address t1) external view returns (uint256){... */\n    tag_13:\n        /* \"contracts/libraries/UniswapV2.sol\":751:758  uint256 */\n      0x00\n        /* \"contracts/libraries/UniswapV2.sol\":769:782  uint amountIn */\n      dup1\n        /* \"contracts/libraries/UniswapV2.sol\":796:798  t0 */\n      dup4\n        /* \"contracts/libraries/UniswapV2.sol\":789:808  IERC20(t0).decimals */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x313ce567\n        /* \"contracts/libraries/UniswapV2.sol\":789:810  IERC20(t0).decimals() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_47\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_47:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_49\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_49:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_50\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_50:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"contracts/libraries/UniswapV2.sol\":785:810  10**IERC20(t0).decimals() */\n      0xff\n      and\n        /* \"contracts/libraries/UniswapV2.sol\":785:787  10 */\n      0x0a\n        /* \"contracts/libraries/UniswapV2.sol\":785:810  10**IERC20(t0).decimals() */\n      exp\n        /* \"contracts/libraries/UniswapV2.sol\":769:810  uint amountIn = 10**IERC20(t0).decimals() */\n      swap1\n      pop\n        /* \"contracts/libraries/UniswapV2.sol\":820:841  address[] memory path */\n      0x00\n        /* \"contracts/libraries/UniswapV2.sol\":858:859  2 */\n      0x02\n        /* \"contracts/libraries/UniswapV2.sol\":844:860  new address[](2) */\n      0xffffffffffffffff\n      dup2\n      gt\n      dup1\n      iszero\n      tag_51\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_51:\n      pop\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_52\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_52:\n      pop\n        /* \"contracts/libraries/UniswapV2.sol\":820:860  address[] memory path = new address[](2) */\n      swap1\n      pop\n        /* \"contracts/libraries/UniswapV2.sol\":880:882  t0 */\n      dup5\n        /* \"contracts/libraries/UniswapV2.sol\":870:874  path */\n      dup2\n        /* \"contracts/libraries/UniswapV2.sol\":875:876  0 */\n      0x00\n        /* \"contracts/libraries/UniswapV2.sol\":870:877  path[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_53\n      jumpi\n      invalid\n    tag_53:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"contracts/libraries/UniswapV2.sol\":870:882  path[0] = t0 */\n      swap1\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/libraries/UniswapV2.sol\":902:904  t1 */\n      dup4\n        /* \"contracts/libraries/UniswapV2.sol\":892:896  path */\n      dup2\n        /* \"contracts/libraries/UniswapV2.sol\":897:898  1 */\n      0x01\n        /* \"contracts/libraries/UniswapV2.sol\":892:899  path[1] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_54\n      jumpi\n      invalid\n    tag_54:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"contracts/libraries/UniswapV2.sol\":892:904  path[1] = t1 */\n      swap1\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/libraries/UniswapV2.sol\":914:935  uint[] memory amounts */\n      0x00\n        /* \"contracts/libraries/UniswapV2.sol\":957:963  router */\n      dup7\n        /* \"contracts/libraries/UniswapV2.sol\":938:978  IUniswapV2Router01(router).getAmountsOut */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xd06ca61f\n        /* \"contracts/libraries/UniswapV2.sol\":979:987  amountIn */\n      dup5\n        /* \"contracts/libraries/UniswapV2.sol\":988:992  path */\n      dup5\n        /* \"contracts/libraries/UniswapV2.sol\":938:993  IUniswapV2Router01(router).getAmountsOut(amountIn,path) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      0x20\n      mul\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_55:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_57\n      jumpi\n      dup1\n      dup3\n      add\n      mload\n      dup2\n      dup5\n      add\n      mstore\n      0x20\n      dup2\n      add\n      swap1\n      pop\n      jump(tag_55)\n    tag_57:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      swap4\n      pop\n      pop\n      pop\n      pop\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_58\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_58:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_60\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_60:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x00\n      dup3\n      returndatacopy\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      0x20\n      dup2\n      lt\n      iszero\n      tag_61\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_61:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      mload(0x40)\n      swap4\n      swap3\n      swap2\n      swap1\n      dup5\n      0x0100000000\n      dup3\n      gt\n      iszero\n      tag_62\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_62:\n      dup4\n      dup3\n      add\n      swap2\n      pop\n      0x20\n      dup3\n      add\n      dup6\n      dup2\n      gt\n      iszero\n      tag_63\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_63:\n      dup3\n      mload\n      dup7\n      0x20\n      dup3\n      mul\n      dup4\n      add\n      gt\n      0x0100000000\n      dup3\n      gt\n      or\n      iszero\n      tag_64\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_64:\n      dup1\n      dup4\n      mstore\n      0x20\n      dup4\n      add\n      swap3\n      pop\n      pop\n      pop\n      swap1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      0x20\n      mul\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_65:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_67\n      jumpi\n      dup1\n      dup3\n      add\n      mload\n      dup2\n      dup5\n      add\n      mstore\n      0x20\n      dup2\n      add\n      swap1\n      pop\n      jump(tag_65)\n    tag_67:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      0x40\n      mstore\n      pop\n      pop\n      pop\n        /* \"contracts/libraries/UniswapV2.sol\":914:993  uint[] memory amounts = IUniswapV2Router01(router).getAmountsOut(amountIn,path) */\n      swap1\n      pop\n        /* \"contracts/libraries/UniswapV2.sol\":1009:1016  amounts */\n      dup1\n        /* \"contracts/libraries/UniswapV2.sol\":1017:1018  1 */\n      0x01\n        /* \"contracts/libraries/UniswapV2.sol\":1009:1019  amounts[1] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_68\n      jumpi\n      invalid\n    tag_68:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/libraries/UniswapV2.sol\":1002:1019  return amounts[1] */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/libraries/UniswapV2.sol\":674:1026  function Price(address router, address t0,address t1) external view returns (uint256){... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220793a6606958156e5307b5d536fdb2f5ad66a11decf01b4481d3b61a681e5fa6164736f6c63430007060033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "6109d5610026600b82828239805160001a60731461001957fe5b30600052607381538281f3fe730000000000000000000000000000000000000000301460806040526004361061004b5760003560e01c80638c39560e14610050578063bcbcaa29146100f2578063c361e0b1146101a0575b600080fd5b6100dc6004803603608081101561006657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610238565b6040518082815260200191505060405180910390f35b610188600480360360a081101561010857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803590602001909291905050506104a9565b60405180821515815260200191505060405180910390f35b610222600480360360608110156101b657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506106a3565b6040518082815260200191505060405180910390f35b600080600267ffffffffffffffff8111801561025357600080fd5b506040519080825280602002602001820160405280156102825781602001602082028036833780820191505090505b509050848160008151811061029357fe5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505083816001815181106102db57fe5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505060008673ffffffffffffffffffffffffffffffffffffffff1663d06ca61f85846040518363ffffffff1660e01b81526004018083815260200180602001828103825283818151815260200191508051906020019060200280838360005b8381101561038d578082015181840152602081019050610372565b50505050905001935050505060006040518083038186803b1580156103b157600080fd5b505afa1580156103c5573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525060208110156103ef57600080fd5b810190808051604051939291908464010000000082111561040f57600080fd5b8382019150602082018581111561042557600080fd5b825186602082028301116401000000008211171561044257600080fd5b8083526020830192505050908051906020019060200280838360005b8381101561047957808201518184015260208101905061045e565b5050505090500160405250505090508060018151811061049557fe5b602002602001015192505050949350505050565b6000808673ffffffffffffffffffffffffffffffffffffffff1663e6a4390587876040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1681526020019250505060206040518083038186803b15801561053157600080fd5b505afa158015610545573d6000803e3d6000fd5b505050506040513d602081101561055b57600080fd5b81019080805190602001909291905050509050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156105ad57600091505061069a565b6000808273ffffffffffffffffffffffffffffffffffffffff16630902f1ac6040518163ffffffff1660e01b815260040160606040518083038186803b1580156105f657600080fd5b505afa15801561060a573d6000803e3d6000fd5b505050506040513d606081101561062057600080fd5b810190808051906020019092919080519060200190929190805190602001909291905050505091509150816dffffffffffffffffffffffffffff1686111561066e576000935050505061069a565b806dffffffffffffffffffffffffffff16851115610692576000935050505061069a565b600193505050505b95945050505050565b6000808373ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b1580156106ec57600080fd5b505afa158015610700573d6000803e3d6000fd5b505050506040513d602081101561071657600080fd5b810190808051906020019092919050505060ff16600a0a90506000600267ffffffffffffffff8111801561074957600080fd5b506040519080825280602002602001820160405280156107785781602001602082028036833780820191505090505b509050848160008151811061078957fe5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505083816001815181106107d157fe5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505060008673ffffffffffffffffffffffffffffffffffffffff1663d06ca61f84846040518363ffffffff1660e01b81526004018083815260200180602001828103825283818151815260200191508051906020019060200280838360005b83811015610883578082015181840152602081019050610868565b50505050905001935050505060006040518083038186803b1580156108a757600080fd5b505afa1580156108bb573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525060208110156108e557600080fd5b810190808051604051939291908464010000000082111561090557600080fd5b8382019150602082018581111561091b57600080fd5b825186602082028301116401000000008211171561093857600080fd5b8083526020830192505050908051906020019060200280838360005b8381101561096f578082015181840152602081019050610954565b5050505090500160405250505090508060018151811061098b57fe5b60200260200101519350505050939250505056fea2646970667358221220793a6606958156e5307b5d536fdb2f5ad66a11decf01b4481d3b61a681e5fa6164736f6c63430007060033",
							"opcodes": "PUSH2 0x9D5 PUSH2 0x26 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH2 0x19 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8C39560E EQ PUSH2 0x50 JUMPI DUP1 PUSH4 0xBCBCAA29 EQ PUSH2 0xF2 JUMPI DUP1 PUSH4 0xC361E0B1 EQ PUSH2 0x1A0 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDC PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x80 DUP2 LT ISZERO PUSH2 0x66 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x238 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x188 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xA0 DUP2 LT ISZERO PUSH2 0x108 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x4A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x222 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x1B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x6A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0x253 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x282 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP DUP5 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x293 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP4 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x2DB JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xD06CA61F DUP6 DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x38D JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x372 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP4 POP POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3C5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH5 0x100000000 DUP3 GT ISZERO PUSH2 0x40F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH2 0x425 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD DUP7 PUSH1 0x20 DUP3 MUL DUP4 ADD GT PUSH5 0x100000000 DUP3 GT OR ISZERO PUSH2 0x442 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP3 POP POP POP SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x479 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x45E JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD PUSH1 0x40 MSTORE POP POP POP SWAP1 POP DUP1 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x495 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xE6A43905 DUP8 DUP8 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x531 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x545 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x55B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x5AD JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0x69A JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x902F1AC PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x5F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x60A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x620 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP POP SWAP2 POP SWAP2 POP DUP2 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 GT ISZERO PUSH2 0x66E JUMPI PUSH1 0x0 SWAP4 POP POP POP POP PUSH2 0x69A JUMP JUMPDEST DUP1 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 GT ISZERO PUSH2 0x692 JUMPI PUSH1 0x0 SWAP4 POP POP POP POP PUSH2 0x69A JUMP JUMPDEST PUSH1 0x1 SWAP4 POP POP POP POP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x6EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x700 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x716 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH1 0xFF AND PUSH1 0xA EXP SWAP1 POP PUSH1 0x0 PUSH1 0x2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0x749 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x778 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP DUP5 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x789 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP4 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x7D1 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xD06CA61F DUP5 DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x883 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x868 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP4 POP POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x8A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x8BB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x8E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH5 0x100000000 DUP3 GT ISZERO PUSH2 0x905 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH2 0x91B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD DUP7 PUSH1 0x20 DUP3 MUL DUP4 ADD GT PUSH5 0x100000000 DUP3 GT OR ISZERO PUSH2 0x938 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP3 POP POP POP SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x96F JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x954 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD PUSH1 0x40 MSTORE POP POP POP SWAP1 POP DUP1 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x98B JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP4 POP POP POP POP SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH26 0x3A6606958156E5307B5D536FDB2F5AD66A11DECF01B4481D3B61 0xA6 DUP2 0xE5 STATICCALL PUSH2 0x6473 PUSH16 0x6C634300070600330000000000000000 ",
							"sourceMap": "305:1169:17:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040526004361061004b5760003560e01c80638c39560e14610050578063bcbcaa29146100f2578063c361e0b1146101a0575b600080fd5b6100dc6004803603608081101561006657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610238565b6040518082815260200191505060405180910390f35b610188600480360360a081101561010857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803590602001909291905050506104a9565b60405180821515815260200191505060405180910390f35b610222600480360360608110156101b657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506106a3565b6040518082815260200191505060405180910390f35b600080600267ffffffffffffffff8111801561025357600080fd5b506040519080825280602002602001820160405280156102825781602001602082028036833780820191505090505b509050848160008151811061029357fe5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505083816001815181106102db57fe5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505060008673ffffffffffffffffffffffffffffffffffffffff1663d06ca61f85846040518363ffffffff1660e01b81526004018083815260200180602001828103825283818151815260200191508051906020019060200280838360005b8381101561038d578082015181840152602081019050610372565b50505050905001935050505060006040518083038186803b1580156103b157600080fd5b505afa1580156103c5573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525060208110156103ef57600080fd5b810190808051604051939291908464010000000082111561040f57600080fd5b8382019150602082018581111561042557600080fd5b825186602082028301116401000000008211171561044257600080fd5b8083526020830192505050908051906020019060200280838360005b8381101561047957808201518184015260208101905061045e565b5050505090500160405250505090508060018151811061049557fe5b602002602001015192505050949350505050565b6000808673ffffffffffffffffffffffffffffffffffffffff1663e6a4390587876040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1681526020019250505060206040518083038186803b15801561053157600080fd5b505afa158015610545573d6000803e3d6000fd5b505050506040513d602081101561055b57600080fd5b81019080805190602001909291905050509050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156105ad57600091505061069a565b6000808273ffffffffffffffffffffffffffffffffffffffff16630902f1ac6040518163ffffffff1660e01b815260040160606040518083038186803b1580156105f657600080fd5b505afa15801561060a573d6000803e3d6000fd5b505050506040513d606081101561062057600080fd5b810190808051906020019092919080519060200190929190805190602001909291905050505091509150816dffffffffffffffffffffffffffff1686111561066e576000935050505061069a565b806dffffffffffffffffffffffffffff16851115610692576000935050505061069a565b600193505050505b95945050505050565b6000808373ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b1580156106ec57600080fd5b505afa158015610700573d6000803e3d6000fd5b505050506040513d602081101561071657600080fd5b810190808051906020019092919050505060ff16600a0a90506000600267ffffffffffffffff8111801561074957600080fd5b506040519080825280602002602001820160405280156107785781602001602082028036833780820191505090505b509050848160008151811061078957fe5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505083816001815181106107d157fe5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505060008673ffffffffffffffffffffffffffffffffffffffff1663d06ca61f84846040518363ffffffff1660e01b81526004018083815260200180602001828103825283818151815260200191508051906020019060200280838360005b83811015610883578082015181840152602081019050610868565b50505050905001935050505060006040518083038186803b1580156108a757600080fd5b505afa1580156108bb573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525060208110156108e557600080fd5b810190808051604051939291908464010000000082111561090557600080fd5b8382019150602082018581111561091b57600080fd5b825186602082028301116401000000008211171561093857600080fd5b8083526020830192505050908051906020019060200280838360005b8381101561096f578082015181840152602081019050610954565b5050505090500160405250505090508060018151811061098b57fe5b60200260200101519350505050939250505056fea2646970667358221220793a6606958156e5307b5d536fdb2f5ad66a11decf01b4481d3b61a681e5fa6164736f6c63430007060033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8C39560E EQ PUSH2 0x50 JUMPI DUP1 PUSH4 0xBCBCAA29 EQ PUSH2 0xF2 JUMPI DUP1 PUSH4 0xC361E0B1 EQ PUSH2 0x1A0 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDC PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x80 DUP2 LT ISZERO PUSH2 0x66 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x238 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x188 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xA0 DUP2 LT ISZERO PUSH2 0x108 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x4A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x222 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x1B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x6A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0x253 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x282 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP DUP5 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x293 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP4 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x2DB JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xD06CA61F DUP6 DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x38D JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x372 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP4 POP POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3C5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH5 0x100000000 DUP3 GT ISZERO PUSH2 0x40F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH2 0x425 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD DUP7 PUSH1 0x20 DUP3 MUL DUP4 ADD GT PUSH5 0x100000000 DUP3 GT OR ISZERO PUSH2 0x442 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP3 POP POP POP SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x479 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x45E JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD PUSH1 0x40 MSTORE POP POP POP SWAP1 POP DUP1 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x495 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xE6A43905 DUP8 DUP8 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x531 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x545 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x55B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x5AD JUMPI PUSH1 0x0 SWAP2 POP POP PUSH2 0x69A JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x902F1AC PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x5F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x60A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x620 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP POP SWAP2 POP SWAP2 POP DUP2 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 GT ISZERO PUSH2 0x66E JUMPI PUSH1 0x0 SWAP4 POP POP POP POP PUSH2 0x69A JUMP JUMPDEST DUP1 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 GT ISZERO PUSH2 0x692 JUMPI PUSH1 0x0 SWAP4 POP POP POP POP PUSH2 0x69A JUMP JUMPDEST PUSH1 0x1 SWAP4 POP POP POP POP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x6EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x700 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x716 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH1 0xFF AND PUSH1 0xA EXP SWAP1 POP PUSH1 0x0 PUSH1 0x2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0x749 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x778 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP DUP5 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x789 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP4 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x7D1 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xD06CA61F DUP5 DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x883 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x868 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP4 POP POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x8A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x8BB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x8E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH5 0x100000000 DUP3 GT ISZERO PUSH2 0x905 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH2 0x91B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD DUP7 PUSH1 0x20 DUP3 MUL DUP4 ADD GT PUSH5 0x100000000 DUP3 GT OR ISZERO PUSH2 0x938 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP3 POP POP POP SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x96F JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x954 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD PUSH1 0x40 MSTORE POP POP POP SWAP1 POP DUP1 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x98B JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP4 POP POP POP POP SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH26 0x3A6606958156E5307B5D536FDB2F5AD66A11DECF01B4481D3B61 0xA6 DUP2 0xE5 STATICCALL PUSH2 0x6473 PUSH16 0x6C634300070600330000000000000000 ",
							"sourceMap": "305:1169:17:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;334:330;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1032:439;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;674:352;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;334:330;440:7;458:21;496:1;482:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;458:40;;518:2;508:4;513:1;508:7;;;;;;;;;;;;;:12;;;;;;;;;;;540:2;530:4;535:1;530:7;;;;;;;;;;;;;:12;;;;;;;;;;;552:21;595:6;576:40;;;617:8;626:4;576:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;552:79;;647:7;655:1;647:10;;;;;;;;;;;;;;640:17;;;;334:330;;;;;;:::o;1032:439::-;1134:4;1149:12;1182:7;1164:34;;;1199:2;1202;1164:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1149:56;;1235:1;1219:18;;:4;:18;;;1215:36;;;1246:5;1239:12;;;;;1215:36;1262:10;1274;1304:4;1289:32;;;:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1261:62;;;;;1345:2;1338:9;;:4;:9;1333:111;;;1370:5;1363:12;;;;;;;1333:111;1403:2;1396:9;;:4;:9;1392:52;;;1428:5;1421:12;;;;;;;1392:52;1460:4;1453:11;;;;;1032:439;;;;;;;;:::o;674:352::-;751:7;769:13;796:2;789:19;;;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;785:25;;:2;:25;769:41;;820:21;858:1;844:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;820:40;;880:2;870:4;875:1;870:7;;;;;;;;;;;;;:12;;;;;;;;;;;902:2;892:4;897:1;892:7;;;;;;;;;;;;;:12;;;;;;;;;;;914:21;957:6;938:40;;;979:8;988:4;938:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;914:79;;1009:7;1017:1;1009:10;;;;;;;;;;;;;;1002:17;;;;;674:352;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "503400",
								"executionCost": "562",
								"totalCost": "503962"
							},
							"external": {
								"EstimateAmountOut(address,address,address,uint256)": "infinite",
								"PoolExists(address,address,address,uint256,uint256)": "infinite",
								"Price(address,address,address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 305,
									"end": 1474,
									"name": "PUSH #[$]",
									"source": 17,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 305,
									"end": 1474,
									"name": "PUSH [$]",
									"source": 17,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 305,
									"end": 1474,
									"name": "PUSH",
									"source": 17,
									"value": "B"
								},
								{
									"begin": 305,
									"end": 1474,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 305,
									"end": 1474,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 305,
									"end": 1474,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 305,
									"end": 1474,
									"name": "CODECOPY",
									"source": 17
								},
								{
									"begin": 305,
									"end": 1474,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 305,
									"end": 1474,
									"name": "MLOAD",
									"source": 17
								},
								{
									"begin": 305,
									"end": 1474,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 305,
									"end": 1474,
									"name": "BYTE",
									"source": 17
								},
								{
									"begin": 305,
									"end": 1474,
									"name": "PUSH",
									"source": 17,
									"value": "73"
								},
								{
									"begin": 305,
									"end": 1474,
									"name": "EQ",
									"source": 17
								},
								{
									"begin": 305,
									"end": 1474,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "1"
								},
								{
									"begin": 305,
									"end": 1474,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 305,
									"end": 1474,
									"name": "INVALID",
									"source": 17
								},
								{
									"begin": 305,
									"end": 1474,
									"name": "tag",
									"source": 17,
									"value": "1"
								},
								{
									"begin": 305,
									"end": 1474,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 305,
									"end": 1474,
									"name": "ADDRESS",
									"source": 17
								},
								{
									"begin": 305,
									"end": 1474,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 305,
									"end": 1474,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 305,
									"end": 1474,
									"name": "PUSH",
									"source": 17,
									"value": "73"
								},
								{
									"begin": 305,
									"end": 1474,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 305,
									"end": 1474,
									"name": "MSTORE8",
									"source": 17
								},
								{
									"begin": 305,
									"end": 1474,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 305,
									"end": 1474,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 305,
									"end": 1474,
									"name": "RETURN",
									"source": 17
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220793a6606958156e5307b5d536fdb2f5ad66a11decf01b4481d3b61a681e5fa6164736f6c63430007060033",
									".code": [
										{
											"begin": 305,
											"end": 1474,
											"name": "PUSHDEPLOYADDRESS",
											"source": 17
										},
										{
											"begin": 305,
											"end": 1474,
											"name": "ADDRESS",
											"source": 17
										},
										{
											"begin": 305,
											"end": 1474,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 305,
											"end": 1474,
											"name": "PUSH",
											"source": 17,
											"value": "80"
										},
										{
											"begin": 305,
											"end": 1474,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 305,
											"end": 1474,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 305,
											"end": 1474,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 305,
											"end": 1474,
											"name": "CALLDATASIZE",
											"source": 17
										},
										{
											"begin": 305,
											"end": 1474,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 305,
											"end": 1474,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 305,
											"end": 1474,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 305,
											"end": 1474,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 305,
											"end": 1474,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 305,
											"end": 1474,
											"name": "PUSH",
											"source": 17,
											"value": "E0"
										},
										{
											"begin": 305,
											"end": 1474,
											"name": "SHR",
											"source": 17
										},
										{
											"begin": 305,
											"end": 1474,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 305,
											"end": 1474,
											"name": "PUSH",
											"source": 17,
											"value": "8C39560E"
										},
										{
											"begin": 305,
											"end": 1474,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 305,
											"end": 1474,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "2"
										},
										{
											"begin": 305,
											"end": 1474,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 305,
											"end": 1474,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 305,
											"end": 1474,
											"name": "PUSH",
											"source": 17,
											"value": "BCBCAA29"
										},
										{
											"begin": 305,
											"end": 1474,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 305,
											"end": 1474,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "3"
										},
										{
											"begin": 305,
											"end": 1474,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 305,
											"end": 1474,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 305,
											"end": 1474,
											"name": "PUSH",
											"source": 17,
											"value": "C361E0B1"
										},
										{
											"begin": 305,
											"end": 1474,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 305,
											"end": 1474,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 305,
											"end": 1474,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 305,
											"end": 1474,
											"name": "tag",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 305,
											"end": 1474,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 305,
											"end": 1474,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 305,
											"end": 1474,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 305,
											"end": 1474,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 334,
											"end": 664,
											"name": "tag",
											"source": 17,
											"value": "2"
										},
										{
											"begin": 334,
											"end": 664,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 334,
											"end": 664,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "5"
										},
										{
											"begin": 334,
											"end": 664,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 334,
											"end": 664,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 334,
											"end": 664,
											"name": "CALLDATASIZE",
											"source": 17
										},
										{
											"begin": 334,
											"end": 664,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 334,
											"end": 664,
											"name": "PUSH",
											"source": 17,
											"value": "80"
										},
										{
											"begin": 334,
											"end": 664,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 334,
											"end": 664,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 334,
											"end": 664,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 334,
											"end": 664,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "6"
										},
										{
											"begin": 334,
											"end": 664,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 334,
											"end": 664,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 334,
											"end": 664,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 334,
											"end": 664,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 334,
											"end": 664,
											"name": "tag",
											"source": 17,
											"value": "6"
										},
										{
											"begin": 334,
											"end": 664,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 334,
											"end": 664,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 334,
											"end": 664,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 334,
											"end": 664,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 334,
											"end": 664,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 334,
											"end": 664,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 334,
											"end": 664,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 334,
											"end": 664,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 334,
											"end": 664,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 334,
											"end": 664,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 334,
											"end": 664,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 334,
											"end": 664,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 334,
											"end": 664,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 334,
											"end": 664,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 334,
											"end": 664,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 334,
											"end": 664,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 334,
											"end": 664,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 334,
											"end": 664,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 334,
											"end": 664,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 334,
											"end": 664,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 334,
											"end": 664,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 334,
											"end": 664,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 334,
											"end": 664,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 334,
											"end": 664,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 334,
											"end": 664,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 334,
											"end": 664,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 334,
											"end": 664,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 334,
											"end": 664,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 334,
											"end": 664,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 334,
											"end": 664,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 334,
											"end": 664,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 334,
											"end": 664,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 334,
											"end": 664,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 334,
											"end": 664,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 334,
											"end": 664,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 334,
											"end": 664,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 334,
											"end": 664,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 334,
											"end": 664,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 334,
											"end": 664,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 334,
											"end": 664,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 334,
											"end": 664,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 334,
											"end": 664,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 334,
											"end": 664,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 334,
											"end": 664,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 334,
											"end": 664,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 334,
											"end": 664,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 334,
											"end": 664,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 334,
											"end": 664,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 334,
											"end": 664,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 334,
											"end": 664,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 334,
											"end": 664,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "7"
										},
										{
											"begin": 334,
											"end": 664,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 334,
											"end": 664,
											"name": "tag",
											"source": 17,
											"value": "5"
										},
										{
											"begin": 334,
											"end": 664,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 334,
											"end": 664,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 334,
											"end": 664,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 334,
											"end": 664,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 334,
											"end": 664,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 334,
											"end": 664,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 334,
											"end": 664,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 334,
											"end": 664,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 334,
											"end": 664,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 334,
											"end": 664,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 334,
											"end": 664,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 334,
											"end": 664,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 334,
											"end": 664,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 334,
											"end": 664,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 334,
											"end": 664,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 334,
											"end": 664,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 334,
											"end": 664,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 334,
											"end": 664,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 334,
											"end": 664,
											"name": "RETURN",
											"source": 17
										},
										{
											"begin": 1032,
											"end": 1471,
											"name": "tag",
											"source": 17,
											"value": "3"
										},
										{
											"begin": 1032,
											"end": 1471,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1032,
											"end": 1471,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "8"
										},
										{
											"begin": 1032,
											"end": 1471,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 1032,
											"end": 1471,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1032,
											"end": 1471,
											"name": "CALLDATASIZE",
											"source": 17
										},
										{
											"begin": 1032,
											"end": 1471,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 1032,
											"end": 1471,
											"name": "PUSH",
											"source": 17,
											"value": "A0"
										},
										{
											"begin": 1032,
											"end": 1471,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1032,
											"end": 1471,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 1032,
											"end": 1471,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 1032,
											"end": 1471,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "9"
										},
										{
											"begin": 1032,
											"end": 1471,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 1032,
											"end": 1471,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1032,
											"end": 1471,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1032,
											"end": 1471,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 1032,
											"end": 1471,
											"name": "tag",
											"source": 17,
											"value": "9"
										},
										{
											"begin": 1032,
											"end": 1471,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1032,
											"end": 1471,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1032,
											"end": 1471,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1032,
											"end": 1471,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1032,
											"end": 1471,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1032,
											"end": 1471,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1032,
											"end": 1471,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 1032,
											"end": 1471,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1032,
											"end": 1471,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 1032,
											"end": 1471,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1032,
											"end": 1471,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1032,
											"end": 1471,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1032,
											"end": 1471,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1032,
											"end": 1471,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 1032,
											"end": 1471,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1032,
											"end": 1471,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1032,
											"end": 1471,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1032,
											"end": 1471,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 1032,
											"end": 1471,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1032,
											"end": 1471,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 1032,
											"end": 1471,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1032,
											"end": 1471,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1032,
											"end": 1471,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1032,
											"end": 1471,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1032,
											"end": 1471,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 1032,
											"end": 1471,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1032,
											"end": 1471,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1032,
											"end": 1471,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1032,
											"end": 1471,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 1032,
											"end": 1471,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1032,
											"end": 1471,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 1032,
											"end": 1471,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1032,
											"end": 1471,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1032,
											"end": 1471,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1032,
											"end": 1471,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1032,
											"end": 1471,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 1032,
											"end": 1471,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1032,
											"end": 1471,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1032,
											"end": 1471,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1032,
											"end": 1471,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 1032,
											"end": 1471,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1032,
											"end": 1471,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1032,
											"end": 1471,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1032,
											"end": 1471,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1032,
											"end": 1471,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 1032,
											"end": 1471,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1032,
											"end": 1471,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1032,
											"end": 1471,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1032,
											"end": 1471,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 1032,
											"end": 1471,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1032,
											"end": 1471,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1032,
											"end": 1471,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1032,
											"end": 1471,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1032,
											"end": 1471,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 1032,
											"end": 1471,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1032,
											"end": 1471,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1032,
											"end": 1471,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1032,
											"end": 1471,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1032,
											"end": 1471,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1032,
											"end": 1471,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "10"
										},
										{
											"begin": 1032,
											"end": 1471,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 1032,
											"end": 1471,
											"name": "tag",
											"source": 17,
											"value": "8"
										},
										{
											"begin": 1032,
											"end": 1471,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1032,
											"end": 1471,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 1032,
											"end": 1471,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 1032,
											"end": 1471,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1032,
											"end": 1471,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 1032,
											"end": 1471,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 1032,
											"end": 1471,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 1032,
											"end": 1471,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1032,
											"end": 1471,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1032,
											"end": 1471,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1032,
											"end": 1471,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1032,
											"end": 1471,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1032,
											"end": 1471,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1032,
											"end": 1471,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1032,
											"end": 1471,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 1032,
											"end": 1471,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 1032,
											"end": 1471,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1032,
											"end": 1471,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1032,
											"end": 1471,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 1032,
											"end": 1471,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1032,
											"end": 1471,
											"name": "RETURN",
											"source": 17
										},
										{
											"begin": 674,
											"end": 1026,
											"name": "tag",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 674,
											"end": 1026,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 674,
											"end": 1026,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "11"
										},
										{
											"begin": 674,
											"end": 1026,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 674,
											"end": 1026,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 674,
											"end": 1026,
											"name": "CALLDATASIZE",
											"source": 17
										},
										{
											"begin": 674,
											"end": 1026,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 674,
											"end": 1026,
											"name": "PUSH",
											"source": 17,
											"value": "60"
										},
										{
											"begin": 674,
											"end": 1026,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 674,
											"end": 1026,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 674,
											"end": 1026,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 674,
											"end": 1026,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "12"
										},
										{
											"begin": 674,
											"end": 1026,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 674,
											"end": 1026,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 674,
											"end": 1026,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 674,
											"end": 1026,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 674,
											"end": 1026,
											"name": "tag",
											"source": 17,
											"value": "12"
										},
										{
											"begin": 674,
											"end": 1026,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 674,
											"end": 1026,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 674,
											"end": 1026,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 674,
											"end": 1026,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 674,
											"end": 1026,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 674,
											"end": 1026,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 674,
											"end": 1026,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 674,
											"end": 1026,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 674,
											"end": 1026,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 674,
											"end": 1026,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 674,
											"end": 1026,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 674,
											"end": 1026,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 674,
											"end": 1026,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 674,
											"end": 1026,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 674,
											"end": 1026,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 674,
											"end": 1026,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 674,
											"end": 1026,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 674,
											"end": 1026,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 674,
											"end": 1026,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 674,
											"end": 1026,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 674,
											"end": 1026,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 674,
											"end": 1026,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 674,
											"end": 1026,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 674,
											"end": 1026,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 674,
											"end": 1026,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 674,
											"end": 1026,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 674,
											"end": 1026,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 674,
											"end": 1026,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 674,
											"end": 1026,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 674,
											"end": 1026,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 674,
											"end": 1026,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 674,
											"end": 1026,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 674,
											"end": 1026,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 674,
											"end": 1026,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 674,
											"end": 1026,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 674,
											"end": 1026,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 674,
											"end": 1026,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 674,
											"end": 1026,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 674,
											"end": 1026,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 674,
											"end": 1026,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 674,
											"end": 1026,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 674,
											"end": 1026,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "13"
										},
										{
											"begin": 674,
											"end": 1026,
											"name": "JUMP",
											"source": 17,
											"value": "[in]"
										},
										{
											"begin": 674,
											"end": 1026,
											"name": "tag",
											"source": 17,
											"value": "11"
										},
										{
											"begin": 674,
											"end": 1026,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 674,
											"end": 1026,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 674,
											"end": 1026,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 674,
											"end": 1026,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 674,
											"end": 1026,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 674,
											"end": 1026,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 674,
											"end": 1026,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 674,
											"end": 1026,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 674,
											"end": 1026,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 674,
											"end": 1026,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 674,
											"end": 1026,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 674,
											"end": 1026,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 674,
											"end": 1026,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 674,
											"end": 1026,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 674,
											"end": 1026,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 674,
											"end": 1026,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 674,
											"end": 1026,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 674,
											"end": 1026,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 674,
											"end": 1026,
											"name": "RETURN",
											"source": 17
										},
										{
											"begin": 334,
											"end": 664,
											"name": "tag",
											"source": 17,
											"value": "7"
										},
										{
											"begin": 334,
											"end": 664,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 440,
											"end": 447,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 458,
											"end": 479,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 496,
											"end": 497,
											"name": "PUSH",
											"source": 17,
											"value": "2"
										},
										{
											"begin": 482,
											"end": 498,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 482,
											"end": 498,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 482,
											"end": 498,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 482,
											"end": 498,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 482,
											"end": 498,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 482,
											"end": 498,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "15"
										},
										{
											"begin": 482,
											"end": 498,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 482,
											"end": 498,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 482,
											"end": 498,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 482,
											"end": 498,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 482,
											"end": 498,
											"name": "tag",
											"source": 17,
											"value": "15"
										},
										{
											"begin": 482,
											"end": 498,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 482,
											"end": 498,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 482,
											"end": 498,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 482,
											"end": 498,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 482,
											"end": 498,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 482,
											"end": 498,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 482,
											"end": 498,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 482,
											"end": 498,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 482,
											"end": 498,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 482,
											"end": 498,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 482,
											"end": 498,
											"name": "MUL",
											"source": 17
										},
										{
											"begin": 482,
											"end": 498,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 482,
											"end": 498,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 482,
											"end": 498,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 482,
											"end": 498,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 482,
											"end": 498,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 482,
											"end": 498,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 482,
											"end": 498,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 482,
											"end": 498,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 482,
											"end": 498,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "16"
										},
										{
											"begin": 482,
											"end": 498,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 482,
											"end": 498,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 482,
											"end": 498,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 482,
											"end": 498,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 482,
											"end": 498,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 482,
											"end": 498,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 482,
											"end": 498,
											"name": "MUL",
											"source": 17
										},
										{
											"begin": 482,
											"end": 498,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 482,
											"end": 498,
											"name": "CALLDATASIZE",
											"source": 17
										},
										{
											"begin": 482,
											"end": 498,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 482,
											"end": 498,
											"name": "CALLDATACOPY",
											"source": 17
										},
										{
											"begin": 482,
											"end": 498,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 482,
											"end": 498,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 482,
											"end": 498,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 482,
											"end": 498,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 482,
											"end": 498,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 482,
											"end": 498,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 482,
											"end": 498,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 482,
											"end": 498,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 482,
											"end": 498,
											"name": "tag",
											"source": 17,
											"value": "16"
										},
										{
											"begin": 482,
											"end": 498,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 482,
											"end": 498,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 458,
											"end": 498,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 458,
											"end": 498,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 518,
											"end": 520,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 508,
											"end": 512,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 513,
											"end": 514,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 508,
											"end": 515,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 508,
											"end": 515,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 508,
											"end": 515,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 508,
											"end": 515,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 508,
											"end": 515,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "17"
										},
										{
											"begin": 508,
											"end": 515,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 508,
											"end": 515,
											"name": "INVALID",
											"source": 17
										},
										{
											"begin": 508,
											"end": 515,
											"name": "tag",
											"source": 17,
											"value": "17"
										},
										{
											"begin": 508,
											"end": 515,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 508,
											"end": 515,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 508,
											"end": 515,
											"name": "MUL",
											"source": 17
										},
										{
											"begin": 508,
											"end": 515,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 508,
											"end": 515,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 508,
											"end": 515,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 508,
											"end": 520,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 508,
											"end": 520,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 508,
											"end": 520,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 508,
											"end": 520,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 508,
											"end": 520,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 508,
											"end": 520,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 508,
											"end": 520,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 508,
											"end": 520,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 508,
											"end": 520,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 508,
											"end": 520,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 508,
											"end": 520,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 540,
											"end": 542,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 530,
											"end": 534,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 535,
											"end": 536,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 530,
											"end": 537,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 530,
											"end": 537,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 530,
											"end": 537,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 530,
											"end": 537,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 530,
											"end": 537,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "18"
										},
										{
											"begin": 530,
											"end": 537,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 530,
											"end": 537,
											"name": "INVALID",
											"source": 17
										},
										{
											"begin": 530,
											"end": 537,
											"name": "tag",
											"source": 17,
											"value": "18"
										},
										{
											"begin": 530,
											"end": 537,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 530,
											"end": 537,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 530,
											"end": 537,
											"name": "MUL",
											"source": 17
										},
										{
											"begin": 530,
											"end": 537,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 530,
											"end": 537,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 530,
											"end": 537,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 530,
											"end": 542,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 530,
											"end": 542,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 530,
											"end": 542,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 530,
											"end": 542,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 530,
											"end": 542,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 530,
											"end": 542,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 530,
											"end": 542,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 530,
											"end": 542,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 530,
											"end": 542,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 530,
											"end": 542,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 530,
											"end": 542,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 552,
											"end": 573,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 595,
											"end": 601,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 576,
											"end": 616,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 576,
											"end": 616,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 576,
											"end": 616,
											"name": "PUSH",
											"source": 17,
											"value": "D06CA61F"
										},
										{
											"begin": 617,
											"end": 625,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 626,
											"end": 630,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 576,
											"end": 631,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 576,
											"end": 631,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 576,
											"end": 631,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 576,
											"end": 631,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFF"
										},
										{
											"begin": 576,
											"end": 631,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 576,
											"end": 631,
											"name": "PUSH",
											"source": 17,
											"value": "E0"
										},
										{
											"begin": 576,
											"end": 631,
											"name": "SHL",
											"source": 17
										},
										{
											"begin": 576,
											"end": 631,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 576,
											"end": 631,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 576,
											"end": 631,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 576,
											"end": 631,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 576,
											"end": 631,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 576,
											"end": 631,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 576,
											"end": 631,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 576,
											"end": 631,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 576,
											"end": 631,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 576,
											"end": 631,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 576,
											"end": 631,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 576,
											"end": 631,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 576,
											"end": 631,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 576,
											"end": 631,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 576,
											"end": 631,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 576,
											"end": 631,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 576,
											"end": 631,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 576,
											"end": 631,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 576,
											"end": 631,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 576,
											"end": 631,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 576,
											"end": 631,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 576,
											"end": 631,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 576,
											"end": 631,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 576,
											"end": 631,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 576,
											"end": 631,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 576,
											"end": 631,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 576,
											"end": 631,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 576,
											"end": 631,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 576,
											"end": 631,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 576,
											"end": 631,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 576,
											"end": 631,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 576,
											"end": 631,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 576,
											"end": 631,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 576,
											"end": 631,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 576,
											"end": 631,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 576,
											"end": 631,
											"name": "MUL",
											"source": 17
										},
										{
											"begin": 576,
											"end": 631,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 576,
											"end": 631,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 576,
											"end": 631,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 576,
											"end": 631,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 576,
											"end": 631,
											"name": "tag",
											"source": 17,
											"value": "19"
										},
										{
											"begin": 576,
											"end": 631,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 576,
											"end": 631,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 576,
											"end": 631,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 576,
											"end": 631,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 576,
											"end": 631,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 576,
											"end": 631,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "21"
										},
										{
											"begin": 576,
											"end": 631,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 576,
											"end": 631,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 576,
											"end": 631,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 576,
											"end": 631,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 576,
											"end": 631,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 576,
											"end": 631,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 576,
											"end": 631,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 576,
											"end": 631,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 576,
											"end": 631,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 576,
											"end": 631,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 576,
											"end": 631,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 576,
											"end": 631,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 576,
											"end": 631,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 576,
											"end": 631,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 576,
											"end": 631,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "19"
										},
										{
											"begin": 576,
											"end": 631,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 576,
											"end": 631,
											"name": "tag",
											"source": 17,
											"value": "21"
										},
										{
											"begin": 576,
											"end": 631,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 576,
											"end": 631,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 576,
											"end": 631,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 576,
											"end": 631,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 576,
											"end": 631,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 576,
											"end": 631,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 576,
											"end": 631,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 576,
											"end": 631,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 576,
											"end": 631,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 576,
											"end": 631,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 576,
											"end": 631,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 576,
											"end": 631,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 576,
											"end": 631,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 576,
											"end": 631,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 576,
											"end": 631,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 576,
											"end": 631,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 576,
											"end": 631,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 576,
											"end": 631,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 576,
											"end": 631,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 576,
											"end": 631,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 576,
											"end": 631,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 576,
											"end": 631,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 576,
											"end": 631,
											"name": "EXTCODESIZE",
											"source": 17
										},
										{
											"begin": 576,
											"end": 631,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 576,
											"end": 631,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 576,
											"end": 631,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 576,
											"end": 631,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "22"
										},
										{
											"begin": 576,
											"end": 631,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 576,
											"end": 631,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 576,
											"end": 631,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 576,
											"end": 631,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 576,
											"end": 631,
											"name": "tag",
											"source": 17,
											"value": "22"
										},
										{
											"begin": 576,
											"end": 631,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 576,
											"end": 631,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 576,
											"end": 631,
											"name": "GAS",
											"source": 17
										},
										{
											"begin": 576,
											"end": 631,
											"name": "STATICCALL",
											"source": 17
										},
										{
											"begin": 576,
											"end": 631,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 576,
											"end": 631,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 576,
											"end": 631,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 576,
											"end": 631,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 576,
											"end": 631,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 576,
											"end": 631,
											"name": "RETURNDATASIZE",
											"source": 17
										},
										{
											"begin": 576,
											"end": 631,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 576,
											"end": 631,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 576,
											"end": 631,
											"name": "RETURNDATACOPY",
											"source": 17
										},
										{
											"begin": 576,
											"end": 631,
											"name": "RETURNDATASIZE",
											"source": 17
										},
										{
											"begin": 576,
											"end": 631,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 576,
											"end": 631,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 576,
											"end": 631,
											"name": "tag",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 576,
											"end": 631,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 576,
											"end": 631,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 576,
											"end": 631,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 576,
											"end": 631,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 576,
											"end": 631,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 576,
											"end": 631,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 576,
											"end": 631,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 576,
											"end": 631,
											"name": "RETURNDATASIZE",
											"source": 17
										},
										{
											"begin": 576,
											"end": 631,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 576,
											"end": 631,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 576,
											"end": 631,
											"name": "RETURNDATACOPY",
											"source": 17
										},
										{
											"begin": 576,
											"end": 631,
											"name": "RETURNDATASIZE",
											"source": 17
										},
										{
											"begin": 576,
											"end": 631,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 576,
											"end": 631,
											"name": "NOT",
											"source": 17
										},
										{
											"begin": 576,
											"end": 631,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 576,
											"end": 631,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 576,
											"end": 631,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 576,
											"end": 631,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 576,
											"end": 631,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 576,
											"end": 631,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 576,
											"end": 631,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 576,
											"end": 631,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 576,
											"end": 631,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 576,
											"end": 631,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 576,
											"end": 631,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 576,
											"end": 631,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 576,
											"end": 631,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 576,
											"end": 631,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 576,
											"end": 631,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "25"
										},
										{
											"begin": 576,
											"end": 631,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 576,
											"end": 631,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 576,
											"end": 631,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 576,
											"end": 631,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 576,
											"end": 631,
											"name": "tag",
											"source": 17,
											"value": "25"
										},
										{
											"begin": 576,
											"end": 631,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 576,
											"end": 631,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 576,
											"end": 631,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 576,
											"end": 631,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 576,
											"end": 631,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 576,
											"end": 631,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 576,
											"end": 631,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 576,
											"end": 631,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 576,
											"end": 631,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 576,
											"end": 631,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 576,
											"end": 631,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 576,
											"end": 631,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 576,
											"end": 631,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 576,
											"end": 631,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 576,
											"end": 631,
											"name": "PUSH",
											"source": 17,
											"value": "100000000"
										},
										{
											"begin": 576,
											"end": 631,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 576,
											"end": 631,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 576,
											"end": 631,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 576,
											"end": 631,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "26"
										},
										{
											"begin": 576,
											"end": 631,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 576,
											"end": 631,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 576,
											"end": 631,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 576,
											"end": 631,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 576,
											"end": 631,
											"name": "tag",
											"source": 17,
											"value": "26"
										},
										{
											"begin": 576,
											"end": 631,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 576,
											"end": 631,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 576,
											"end": 631,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 576,
											"end": 631,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 576,
											"end": 631,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 576,
											"end": 631,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 576,
											"end": 631,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 576,
											"end": 631,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 576,
											"end": 631,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 576,
											"end": 631,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 576,
											"end": 631,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 576,
											"end": 631,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 576,
											"end": 631,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 576,
											"end": 631,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "27"
										},
										{
											"begin": 576,
											"end": 631,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 576,
											"end": 631,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 576,
											"end": 631,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 576,
											"end": 631,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 576,
											"end": 631,
											"name": "tag",
											"source": 17,
											"value": "27"
										},
										{
											"begin": 576,
											"end": 631,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 576,
											"end": 631,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 576,
											"end": 631,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 576,
											"end": 631,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 576,
											"end": 631,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 576,
											"end": 631,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 576,
											"end": 631,
											"name": "MUL",
											"source": 17
										},
										{
											"begin": 576,
											"end": 631,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 576,
											"end": 631,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 576,
											"end": 631,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 576,
											"end": 631,
											"name": "PUSH",
											"source": 17,
											"value": "100000000"
										},
										{
											"begin": 576,
											"end": 631,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 576,
											"end": 631,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 576,
											"end": 631,
											"name": "OR",
											"source": 17
										},
										{
											"begin": 576,
											"end": 631,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 576,
											"end": 631,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "28"
										},
										{
											"begin": 576,
											"end": 631,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 576,
											"end": 631,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 576,
											"end": 631,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 576,
											"end": 631,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 576,
											"end": 631,
											"name": "tag",
											"source": 17,
											"value": "28"
										},
										{
											"begin": 576,
											"end": 631,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 576,
											"end": 631,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 576,
											"end": 631,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 576,
											"end": 631,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 576,
											"end": 631,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 576,
											"end": 631,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 576,
											"end": 631,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 576,
											"end": 631,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 576,
											"end": 631,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 576,
											"end": 631,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 576,
											"end": 631,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 576,
											"end": 631,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 576,
											"end": 631,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 576,
											"end": 631,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 576,
											"end": 631,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 576,
											"end": 631,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 576,
											"end": 631,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 576,
											"end": 631,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 576,
											"end": 631,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 576,
											"end": 631,
											"name": "MUL",
											"source": 17
										},
										{
											"begin": 576,
											"end": 631,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 576,
											"end": 631,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 576,
											"end": 631,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 576,
											"end": 631,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 576,
											"end": 631,
											"name": "tag",
											"source": 17,
											"value": "29"
										},
										{
											"begin": 576,
											"end": 631,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 576,
											"end": 631,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 576,
											"end": 631,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 576,
											"end": 631,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 576,
											"end": 631,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 576,
											"end": 631,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "31"
										},
										{
											"begin": 576,
											"end": 631,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 576,
											"end": 631,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 576,
											"end": 631,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 576,
											"end": 631,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 576,
											"end": 631,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 576,
											"end": 631,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 576,
											"end": 631,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 576,
											"end": 631,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 576,
											"end": 631,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 576,
											"end": 631,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 576,
											"end": 631,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 576,
											"end": 631,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 576,
											"end": 631,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 576,
											"end": 631,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 576,
											"end": 631,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "29"
										},
										{
											"begin": 576,
											"end": 631,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 576,
											"end": 631,
											"name": "tag",
											"source": 17,
											"value": "31"
										},
										{
											"begin": 576,
											"end": 631,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 576,
											"end": 631,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 576,
											"end": 631,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 576,
											"end": 631,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 576,
											"end": 631,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 576,
											"end": 631,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 576,
											"end": 631,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 576,
											"end": 631,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 576,
											"end": 631,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 576,
											"end": 631,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 576,
											"end": 631,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 576,
											"end": 631,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 576,
											"end": 631,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 552,
											"end": 631,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 552,
											"end": 631,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 647,
											"end": 654,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 655,
											"end": 656,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 647,
											"end": 657,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 647,
											"end": 657,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 647,
											"end": 657,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 647,
											"end": 657,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 647,
											"end": 657,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "32"
										},
										{
											"begin": 647,
											"end": 657,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 647,
											"end": 657,
											"name": "INVALID",
											"source": 17
										},
										{
											"begin": 647,
											"end": 657,
											"name": "tag",
											"source": 17,
											"value": "32"
										},
										{
											"begin": 647,
											"end": 657,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 647,
											"end": 657,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 647,
											"end": 657,
											"name": "MUL",
											"source": 17
										},
										{
											"begin": 647,
											"end": 657,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 647,
											"end": 657,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 647,
											"end": 657,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 647,
											"end": 657,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 640,
											"end": 657,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 640,
											"end": 657,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 640,
											"end": 657,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 640,
											"end": 657,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 334,
											"end": 664,
											"name": "SWAP5",
											"source": 17
										},
										{
											"begin": 334,
											"end": 664,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 334,
											"end": 664,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 334,
											"end": 664,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 334,
											"end": 664,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 334,
											"end": 664,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 334,
											"end": 664,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 1032,
											"end": 1471,
											"name": "tag",
											"source": 17,
											"value": "10"
										},
										{
											"begin": 1032,
											"end": 1471,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1134,
											"end": 1138,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1149,
											"end": 1161,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1182,
											"end": 1189,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 1164,
											"end": 1198,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1164,
											"end": 1198,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 1164,
											"end": 1198,
											"name": "PUSH",
											"source": 17,
											"value": "E6A43905"
										},
										{
											"begin": 1199,
											"end": 1201,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 1202,
											"end": 1204,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 1164,
											"end": 1205,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 1164,
											"end": 1205,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 1164,
											"end": 1205,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 1164,
											"end": 1205,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1164,
											"end": 1205,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 1164,
											"end": 1205,
											"name": "PUSH",
											"source": 17,
											"value": "E0"
										},
										{
											"begin": 1164,
											"end": 1205,
											"name": "SHL",
											"source": 17
										},
										{
											"begin": 1164,
											"end": 1205,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1164,
											"end": 1205,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1164,
											"end": 1205,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 1164,
											"end": 1205,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1164,
											"end": 1205,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1164,
											"end": 1205,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 1164,
											"end": 1205,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1164,
											"end": 1205,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 1164,
											"end": 1205,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1164,
											"end": 1205,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1164,
											"end": 1205,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1164,
											"end": 1205,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1164,
											"end": 1205,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 1164,
											"end": 1205,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1164,
											"end": 1205,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 1164,
											"end": 1205,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1164,
											"end": 1205,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1164,
											"end": 1205,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1164,
											"end": 1205,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1164,
											"end": 1205,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 1164,
											"end": 1205,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1164,
											"end": 1205,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1164,
											"end": 1205,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1164,
											"end": 1205,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1164,
											"end": 1205,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 1164,
											"end": 1205,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 1164,
											"end": 1205,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1164,
											"end": 1205,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 1164,
											"end": 1205,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 1164,
											"end": 1205,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1164,
											"end": 1205,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 1164,
											"end": 1205,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1164,
											"end": 1205,
											"name": "EXTCODESIZE",
											"source": 17
										},
										{
											"begin": 1164,
											"end": 1205,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 1164,
											"end": 1205,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1164,
											"end": 1205,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 1164,
											"end": 1205,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "34"
										},
										{
											"begin": 1164,
											"end": 1205,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 1164,
											"end": 1205,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1164,
											"end": 1205,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1164,
											"end": 1205,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 1164,
											"end": 1205,
											"name": "tag",
											"source": 17,
											"value": "34"
										},
										{
											"begin": 1164,
											"end": 1205,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1164,
											"end": 1205,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1164,
											"end": 1205,
											"name": "GAS",
											"source": 17
										},
										{
											"begin": 1164,
											"end": 1205,
											"name": "STATICCALL",
											"source": 17
										},
										{
											"begin": 1164,
											"end": 1205,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 1164,
											"end": 1205,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1164,
											"end": 1205,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 1164,
											"end": 1205,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "36"
										},
										{
											"begin": 1164,
											"end": 1205,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 1164,
											"end": 1205,
											"name": "RETURNDATASIZE",
											"source": 17
										},
										{
											"begin": 1164,
											"end": 1205,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1164,
											"end": 1205,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1164,
											"end": 1205,
											"name": "RETURNDATACOPY",
											"source": 17
										},
										{
											"begin": 1164,
											"end": 1205,
											"name": "RETURNDATASIZE",
											"source": 17
										},
										{
											"begin": 1164,
											"end": 1205,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1164,
											"end": 1205,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 1164,
											"end": 1205,
											"name": "tag",
											"source": 17,
											"value": "36"
										},
										{
											"begin": 1164,
											"end": 1205,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1164,
											"end": 1205,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1164,
											"end": 1205,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1164,
											"end": 1205,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1164,
											"end": 1205,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1164,
											"end": 1205,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 1164,
											"end": 1205,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 1164,
											"end": 1205,
											"name": "RETURNDATASIZE",
											"source": 17
										},
										{
											"begin": 1164,
											"end": 1205,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1164,
											"end": 1205,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1164,
											"end": 1205,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 1164,
											"end": 1205,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 1164,
											"end": 1205,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "37"
										},
										{
											"begin": 1164,
											"end": 1205,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 1164,
											"end": 1205,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1164,
											"end": 1205,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1164,
											"end": 1205,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 1164,
											"end": 1205,
											"name": "tag",
											"source": 17,
											"value": "37"
										},
										{
											"begin": 1164,
											"end": 1205,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1164,
											"end": 1205,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1164,
											"end": 1205,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1164,
											"end": 1205,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1164,
											"end": 1205,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1164,
											"end": 1205,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1164,
											"end": 1205,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 1164,
											"end": 1205,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1164,
											"end": 1205,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1164,
											"end": 1205,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1164,
											"end": 1205,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1164,
											"end": 1205,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 1164,
											"end": 1205,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1164,
											"end": 1205,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1164,
											"end": 1205,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1164,
											"end": 1205,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1164,
											"end": 1205,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1149,
											"end": 1205,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1149,
											"end": 1205,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1235,
											"end": 1236,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1219,
											"end": 1237,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1219,
											"end": 1237,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 1219,
											"end": 1223,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1219,
											"end": 1237,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1219,
											"end": 1237,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 1219,
											"end": 1237,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 1215,
											"end": 1251,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 1215,
											"end": 1251,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "38"
										},
										{
											"begin": 1215,
											"end": 1251,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 1246,
											"end": 1251,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1239,
											"end": 1251,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1239,
											"end": 1251,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1239,
											"end": 1251,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1239,
											"end": 1251,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "33"
										},
										{
											"begin": 1239,
											"end": 1251,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1215,
											"end": 1251,
											"name": "tag",
											"source": 17,
											"value": "38"
										},
										{
											"begin": 1215,
											"end": 1251,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1262,
											"end": 1272,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1274,
											"end": 1284,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1304,
											"end": 1308,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 1289,
											"end": 1321,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1289,
											"end": 1321,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 1289,
											"end": 1321,
											"name": "PUSH",
											"source": 17,
											"value": "902F1AC"
										},
										{
											"begin": 1289,
											"end": 1323,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 1289,
											"end": 1323,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 1289,
											"end": 1323,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1289,
											"end": 1323,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1289,
											"end": 1323,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 1289,
											"end": 1323,
											"name": "PUSH",
											"source": 17,
											"value": "E0"
										},
										{
											"begin": 1289,
											"end": 1323,
											"name": "SHL",
											"source": 17
										},
										{
											"begin": 1289,
											"end": 1323,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1289,
											"end": 1323,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1289,
											"end": 1323,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 1289,
											"end": 1323,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1289,
											"end": 1323,
											"name": "PUSH",
											"source": 17,
											"value": "60"
										},
										{
											"begin": 1289,
											"end": 1323,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 1289,
											"end": 1323,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 1289,
											"end": 1323,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1289,
											"end": 1323,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 1289,
											"end": 1323,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 1289,
											"end": 1323,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1289,
											"end": 1323,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 1289,
											"end": 1323,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1289,
											"end": 1323,
											"name": "EXTCODESIZE",
											"source": 17
										},
										{
											"begin": 1289,
											"end": 1323,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 1289,
											"end": 1323,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1289,
											"end": 1323,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 1289,
											"end": 1323,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "39"
										},
										{
											"begin": 1289,
											"end": 1323,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 1289,
											"end": 1323,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1289,
											"end": 1323,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1289,
											"end": 1323,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 1289,
											"end": 1323,
											"name": "tag",
											"source": 17,
											"value": "39"
										},
										{
											"begin": 1289,
											"end": 1323,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1289,
											"end": 1323,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1289,
											"end": 1323,
											"name": "GAS",
											"source": 17
										},
										{
											"begin": 1289,
											"end": 1323,
											"name": "STATICCALL",
											"source": 17
										},
										{
											"begin": 1289,
											"end": 1323,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 1289,
											"end": 1323,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1289,
											"end": 1323,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 1289,
											"end": 1323,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "41"
										},
										{
											"begin": 1289,
											"end": 1323,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 1289,
											"end": 1323,
											"name": "RETURNDATASIZE",
											"source": 17
										},
										{
											"begin": 1289,
											"end": 1323,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1289,
											"end": 1323,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1289,
											"end": 1323,
											"name": "RETURNDATACOPY",
											"source": 17
										},
										{
											"begin": 1289,
											"end": 1323,
											"name": "RETURNDATASIZE",
											"source": 17
										},
										{
											"begin": 1289,
											"end": 1323,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1289,
											"end": 1323,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 1289,
											"end": 1323,
											"name": "tag",
											"source": 17,
											"value": "41"
										},
										{
											"begin": 1289,
											"end": 1323,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1289,
											"end": 1323,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1289,
											"end": 1323,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1289,
											"end": 1323,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1289,
											"end": 1323,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1289,
											"end": 1323,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 1289,
											"end": 1323,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 1289,
											"end": 1323,
											"name": "RETURNDATASIZE",
											"source": 17
										},
										{
											"begin": 1289,
											"end": 1323,
											"name": "PUSH",
											"source": 17,
											"value": "60"
										},
										{
											"begin": 1289,
											"end": 1323,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1289,
											"end": 1323,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 1289,
											"end": 1323,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 1289,
											"end": 1323,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "42"
										},
										{
											"begin": 1289,
											"end": 1323,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 1289,
											"end": 1323,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1289,
											"end": 1323,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1289,
											"end": 1323,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 1289,
											"end": 1323,
											"name": "tag",
											"source": 17,
											"value": "42"
										},
										{
											"begin": 1289,
											"end": 1323,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1289,
											"end": 1323,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1289,
											"end": 1323,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1289,
											"end": 1323,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1289,
											"end": 1323,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1289,
											"end": 1323,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1289,
											"end": 1323,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 1289,
											"end": 1323,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1289,
											"end": 1323,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1289,
											"end": 1323,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1289,
											"end": 1323,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1289,
											"end": 1323,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 1289,
											"end": 1323,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1289,
											"end": 1323,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1289,
											"end": 1323,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1289,
											"end": 1323,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 1289,
											"end": 1323,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1289,
											"end": 1323,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1289,
											"end": 1323,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1289,
											"end": 1323,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1289,
											"end": 1323,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 1289,
											"end": 1323,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1289,
											"end": 1323,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1289,
											"end": 1323,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1289,
											"end": 1323,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 1289,
											"end": 1323,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1289,
											"end": 1323,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1289,
											"end": 1323,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1289,
											"end": 1323,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1289,
											"end": 1323,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 1289,
											"end": 1323,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1289,
											"end": 1323,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1289,
											"end": 1323,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1289,
											"end": 1323,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1289,
											"end": 1323,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1261,
											"end": 1323,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1261,
											"end": 1323,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1261,
											"end": 1323,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1261,
											"end": 1323,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1261,
											"end": 1323,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1345,
											"end": 1347,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1338,
											"end": 1347,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1338,
											"end": 1347,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 1338,
											"end": 1342,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 1338,
											"end": 1347,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 1333,
											"end": 1444,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 1333,
											"end": 1444,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "43"
										},
										{
											"begin": 1333,
											"end": 1444,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 1370,
											"end": 1375,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1363,
											"end": 1375,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 1363,
											"end": 1375,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1363,
											"end": 1375,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1363,
											"end": 1375,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1363,
											"end": 1375,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1363,
											"end": 1375,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "33"
										},
										{
											"begin": 1363,
											"end": 1375,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1333,
											"end": 1444,
											"name": "tag",
											"source": 17,
											"value": "43"
										},
										{
											"begin": 1333,
											"end": 1444,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1403,
											"end": 1405,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1396,
											"end": 1405,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1396,
											"end": 1405,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 1396,
											"end": 1400,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 1396,
											"end": 1405,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 1392,
											"end": 1444,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 1392,
											"end": 1444,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "45"
										},
										{
											"begin": 1392,
											"end": 1444,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 1428,
											"end": 1433,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1421,
											"end": 1433,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 1421,
											"end": 1433,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1421,
											"end": 1433,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1421,
											"end": 1433,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1421,
											"end": 1433,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1421,
											"end": 1433,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "33"
										},
										{
											"begin": 1421,
											"end": 1433,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1392,
											"end": 1444,
											"name": "tag",
											"source": 17,
											"value": "45"
										},
										{
											"begin": 1392,
											"end": 1444,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1460,
											"end": 1464,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 1453,
											"end": 1464,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 1453,
											"end": 1464,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1453,
											"end": 1464,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1453,
											"end": 1464,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1453,
											"end": 1464,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1032,
											"end": 1471,
											"name": "tag",
											"source": 17,
											"value": "33"
										},
										{
											"begin": 1032,
											"end": 1471,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1032,
											"end": 1471,
											"name": "SWAP6",
											"source": 17
										},
										{
											"begin": 1032,
											"end": 1471,
											"name": "SWAP5",
											"source": 17
										},
										{
											"begin": 1032,
											"end": 1471,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1032,
											"end": 1471,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1032,
											"end": 1471,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1032,
											"end": 1471,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1032,
											"end": 1471,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1032,
											"end": 1471,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										},
										{
											"begin": 674,
											"end": 1026,
											"name": "tag",
											"source": 17,
											"value": "13"
										},
										{
											"begin": 674,
											"end": 1026,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 751,
											"end": 758,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 769,
											"end": 782,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 796,
											"end": 798,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 789,
											"end": 808,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 789,
											"end": 808,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 789,
											"end": 808,
											"name": "PUSH",
											"source": 17,
											"value": "313CE567"
										},
										{
											"begin": 789,
											"end": 810,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 789,
											"end": 810,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 789,
											"end": 810,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 789,
											"end": 810,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFF"
										},
										{
											"begin": 789,
											"end": 810,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 789,
											"end": 810,
											"name": "PUSH",
											"source": 17,
											"value": "E0"
										},
										{
											"begin": 789,
											"end": 810,
											"name": "SHL",
											"source": 17
										},
										{
											"begin": 789,
											"end": 810,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 789,
											"end": 810,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 789,
											"end": 810,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 789,
											"end": 810,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 789,
											"end": 810,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 789,
											"end": 810,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 789,
											"end": 810,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 789,
											"end": 810,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 789,
											"end": 810,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 789,
											"end": 810,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 789,
											"end": 810,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 789,
											"end": 810,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 789,
											"end": 810,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 789,
											"end": 810,
											"name": "EXTCODESIZE",
											"source": 17
										},
										{
											"begin": 789,
											"end": 810,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 789,
											"end": 810,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 789,
											"end": 810,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 789,
											"end": 810,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "47"
										},
										{
											"begin": 789,
											"end": 810,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 789,
											"end": 810,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 789,
											"end": 810,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 789,
											"end": 810,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 789,
											"end": 810,
											"name": "tag",
											"source": 17,
											"value": "47"
										},
										{
											"begin": 789,
											"end": 810,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 789,
											"end": 810,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 789,
											"end": 810,
											"name": "GAS",
											"source": 17
										},
										{
											"begin": 789,
											"end": 810,
											"name": "STATICCALL",
											"source": 17
										},
										{
											"begin": 789,
											"end": 810,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 789,
											"end": 810,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 789,
											"end": 810,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 789,
											"end": 810,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "49"
										},
										{
											"begin": 789,
											"end": 810,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 789,
											"end": 810,
											"name": "RETURNDATASIZE",
											"source": 17
										},
										{
											"begin": 789,
											"end": 810,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 789,
											"end": 810,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 789,
											"end": 810,
											"name": "RETURNDATACOPY",
											"source": 17
										},
										{
											"begin": 789,
											"end": 810,
											"name": "RETURNDATASIZE",
											"source": 17
										},
										{
											"begin": 789,
											"end": 810,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 789,
											"end": 810,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 789,
											"end": 810,
											"name": "tag",
											"source": 17,
											"value": "49"
										},
										{
											"begin": 789,
											"end": 810,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 789,
											"end": 810,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 789,
											"end": 810,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 789,
											"end": 810,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 789,
											"end": 810,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 789,
											"end": 810,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 789,
											"end": 810,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 789,
											"end": 810,
											"name": "RETURNDATASIZE",
											"source": 17
										},
										{
											"begin": 789,
											"end": 810,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 789,
											"end": 810,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 789,
											"end": 810,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 789,
											"end": 810,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 789,
											"end": 810,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "50"
										},
										{
											"begin": 789,
											"end": 810,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 789,
											"end": 810,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 789,
											"end": 810,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 789,
											"end": 810,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 789,
											"end": 810,
											"name": "tag",
											"source": 17,
											"value": "50"
										},
										{
											"begin": 789,
											"end": 810,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 789,
											"end": 810,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 789,
											"end": 810,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 789,
											"end": 810,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 789,
											"end": 810,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 789,
											"end": 810,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 789,
											"end": 810,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 789,
											"end": 810,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 789,
											"end": 810,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 789,
											"end": 810,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 789,
											"end": 810,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 789,
											"end": 810,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 789,
											"end": 810,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 789,
											"end": 810,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 789,
											"end": 810,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 789,
											"end": 810,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 789,
											"end": 810,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 785,
											"end": 810,
											"name": "PUSH",
											"source": 17,
											"value": "FF"
										},
										{
											"begin": 785,
											"end": 810,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 785,
											"end": 787,
											"name": "PUSH",
											"source": 17,
											"value": "A"
										},
										{
											"begin": 785,
											"end": 810,
											"name": "EXP",
											"source": 17
										},
										{
											"begin": 769,
											"end": 810,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 769,
											"end": 810,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 820,
											"end": 841,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 858,
											"end": 859,
											"name": "PUSH",
											"source": 17,
											"value": "2"
										},
										{
											"begin": 844,
											"end": 860,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 844,
											"end": 860,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 844,
											"end": 860,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 844,
											"end": 860,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 844,
											"end": 860,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 844,
											"end": 860,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "51"
										},
										{
											"begin": 844,
											"end": 860,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 844,
											"end": 860,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 844,
											"end": 860,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 844,
											"end": 860,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 844,
											"end": 860,
											"name": "tag",
											"source": 17,
											"value": "51"
										},
										{
											"begin": 844,
											"end": 860,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 844,
											"end": 860,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 844,
											"end": 860,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 844,
											"end": 860,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 844,
											"end": 860,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 844,
											"end": 860,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 844,
											"end": 860,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 844,
											"end": 860,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 844,
											"end": 860,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 844,
											"end": 860,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 844,
											"end": 860,
											"name": "MUL",
											"source": 17
										},
										{
											"begin": 844,
											"end": 860,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 844,
											"end": 860,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 844,
											"end": 860,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 844,
											"end": 860,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 844,
											"end": 860,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 844,
											"end": 860,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 844,
											"end": 860,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 844,
											"end": 860,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 844,
											"end": 860,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "52"
										},
										{
											"begin": 844,
											"end": 860,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 844,
											"end": 860,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 844,
											"end": 860,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 844,
											"end": 860,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 844,
											"end": 860,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 844,
											"end": 860,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 844,
											"end": 860,
											"name": "MUL",
											"source": 17
										},
										{
											"begin": 844,
											"end": 860,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 844,
											"end": 860,
											"name": "CALLDATASIZE",
											"source": 17
										},
										{
											"begin": 844,
											"end": 860,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 844,
											"end": 860,
											"name": "CALLDATACOPY",
											"source": 17
										},
										{
											"begin": 844,
											"end": 860,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 844,
											"end": 860,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 844,
											"end": 860,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 844,
											"end": 860,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 844,
											"end": 860,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 844,
											"end": 860,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 844,
											"end": 860,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 844,
											"end": 860,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 844,
											"end": 860,
											"name": "tag",
											"source": 17,
											"value": "52"
										},
										{
											"begin": 844,
											"end": 860,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 844,
											"end": 860,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 820,
											"end": 860,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 820,
											"end": 860,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 880,
											"end": 882,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 870,
											"end": 874,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 875,
											"end": 876,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 870,
											"end": 877,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 870,
											"end": 877,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 870,
											"end": 877,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 870,
											"end": 877,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 870,
											"end": 877,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "53"
										},
										{
											"begin": 870,
											"end": 877,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 870,
											"end": 877,
											"name": "INVALID",
											"source": 17
										},
										{
											"begin": 870,
											"end": 877,
											"name": "tag",
											"source": 17,
											"value": "53"
										},
										{
											"begin": 870,
											"end": 877,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 870,
											"end": 877,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 870,
											"end": 877,
											"name": "MUL",
											"source": 17
										},
										{
											"begin": 870,
											"end": 877,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 870,
											"end": 877,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 870,
											"end": 877,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 870,
											"end": 882,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 870,
											"end": 882,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 870,
											"end": 882,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 870,
											"end": 882,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 870,
											"end": 882,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 870,
											"end": 882,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 870,
											"end": 882,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 870,
											"end": 882,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 870,
											"end": 882,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 870,
											"end": 882,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 870,
											"end": 882,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 902,
											"end": 904,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 892,
											"end": 896,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 897,
											"end": 898,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 892,
											"end": 899,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 892,
											"end": 899,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 892,
											"end": 899,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 892,
											"end": 899,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 892,
											"end": 899,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "54"
										},
										{
											"begin": 892,
											"end": 899,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 892,
											"end": 899,
											"name": "INVALID",
											"source": 17
										},
										{
											"begin": 892,
											"end": 899,
											"name": "tag",
											"source": 17,
											"value": "54"
										},
										{
											"begin": 892,
											"end": 899,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 892,
											"end": 899,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 892,
											"end": 899,
											"name": "MUL",
											"source": 17
										},
										{
											"begin": 892,
											"end": 899,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 892,
											"end": 899,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 892,
											"end": 899,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 892,
											"end": 904,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 892,
											"end": 904,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 892,
											"end": 904,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 892,
											"end": 904,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 892,
											"end": 904,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 892,
											"end": 904,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 892,
											"end": 904,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 892,
											"end": 904,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 892,
											"end": 904,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 892,
											"end": 904,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 892,
											"end": 904,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 914,
											"end": 935,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 957,
											"end": 963,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 938,
											"end": 978,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 938,
											"end": 978,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 938,
											"end": 978,
											"name": "PUSH",
											"source": 17,
											"value": "D06CA61F"
										},
										{
											"begin": 979,
											"end": 987,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 988,
											"end": 992,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 938,
											"end": 993,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 938,
											"end": 993,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 938,
											"end": 993,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 938,
											"end": 993,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFF"
										},
										{
											"begin": 938,
											"end": 993,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 938,
											"end": 993,
											"name": "PUSH",
											"source": 17,
											"value": "E0"
										},
										{
											"begin": 938,
											"end": 993,
											"name": "SHL",
											"source": 17
										},
										{
											"begin": 938,
											"end": 993,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 938,
											"end": 993,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 938,
											"end": 993,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 938,
											"end": 993,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 938,
											"end": 993,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 938,
											"end": 993,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 938,
											"end": 993,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 938,
											"end": 993,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 938,
											"end": 993,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 938,
											"end": 993,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 938,
											"end": 993,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 938,
											"end": 993,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 938,
											"end": 993,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 938,
											"end": 993,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 938,
											"end": 993,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 938,
											"end": 993,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 938,
											"end": 993,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 938,
											"end": 993,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 938,
											"end": 993,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 938,
											"end": 993,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 938,
											"end": 993,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 938,
											"end": 993,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 938,
											"end": 993,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 938,
											"end": 993,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 938,
											"end": 993,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 938,
											"end": 993,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 938,
											"end": 993,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 938,
											"end": 993,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 938,
											"end": 993,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 938,
											"end": 993,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 938,
											"end": 993,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 938,
											"end": 993,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 938,
											"end": 993,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 938,
											"end": 993,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 938,
											"end": 993,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 938,
											"end": 993,
											"name": "MUL",
											"source": 17
										},
										{
											"begin": 938,
											"end": 993,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 938,
											"end": 993,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 938,
											"end": 993,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 938,
											"end": 993,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 938,
											"end": 993,
											"name": "tag",
											"source": 17,
											"value": "55"
										},
										{
											"begin": 938,
											"end": 993,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 938,
											"end": 993,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 938,
											"end": 993,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 938,
											"end": 993,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 938,
											"end": 993,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 938,
											"end": 993,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "57"
										},
										{
											"begin": 938,
											"end": 993,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 938,
											"end": 993,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 938,
											"end": 993,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 938,
											"end": 993,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 938,
											"end": 993,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 938,
											"end": 993,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 938,
											"end": 993,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 938,
											"end": 993,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 938,
											"end": 993,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 938,
											"end": 993,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 938,
											"end": 993,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 938,
											"end": 993,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 938,
											"end": 993,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 938,
											"end": 993,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 938,
											"end": 993,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "55"
										},
										{
											"begin": 938,
											"end": 993,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 938,
											"end": 993,
											"name": "tag",
											"source": 17,
											"value": "57"
										},
										{
											"begin": 938,
											"end": 993,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 938,
											"end": 993,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 938,
											"end": 993,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 938,
											"end": 993,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 938,
											"end": 993,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 938,
											"end": 993,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 938,
											"end": 993,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 938,
											"end": 993,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 938,
											"end": 993,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 938,
											"end": 993,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 938,
											"end": 993,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 938,
											"end": 993,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 938,
											"end": 993,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 938,
											"end": 993,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 938,
											"end": 993,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 938,
											"end": 993,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 938,
											"end": 993,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 938,
											"end": 993,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 938,
											"end": 993,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 938,
											"end": 993,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 938,
											"end": 993,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 938,
											"end": 993,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 938,
											"end": 993,
											"name": "EXTCODESIZE",
											"source": 17
										},
										{
											"begin": 938,
											"end": 993,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 938,
											"end": 993,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 938,
											"end": 993,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 938,
											"end": 993,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "58"
										},
										{
											"begin": 938,
											"end": 993,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 938,
											"end": 993,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 938,
											"end": 993,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 938,
											"end": 993,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 938,
											"end": 993,
											"name": "tag",
											"source": 17,
											"value": "58"
										},
										{
											"begin": 938,
											"end": 993,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 938,
											"end": 993,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 938,
											"end": 993,
											"name": "GAS",
											"source": 17
										},
										{
											"begin": 938,
											"end": 993,
											"name": "STATICCALL",
											"source": 17
										},
										{
											"begin": 938,
											"end": 993,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 938,
											"end": 993,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 938,
											"end": 993,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 938,
											"end": 993,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "60"
										},
										{
											"begin": 938,
											"end": 993,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 938,
											"end": 993,
											"name": "RETURNDATASIZE",
											"source": 17
										},
										{
											"begin": 938,
											"end": 993,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 938,
											"end": 993,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 938,
											"end": 993,
											"name": "RETURNDATACOPY",
											"source": 17
										},
										{
											"begin": 938,
											"end": 993,
											"name": "RETURNDATASIZE",
											"source": 17
										},
										{
											"begin": 938,
											"end": 993,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 938,
											"end": 993,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 938,
											"end": 993,
											"name": "tag",
											"source": 17,
											"value": "60"
										},
										{
											"begin": 938,
											"end": 993,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 938,
											"end": 993,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 938,
											"end": 993,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 938,
											"end": 993,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 938,
											"end": 993,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 938,
											"end": 993,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 938,
											"end": 993,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 938,
											"end": 993,
											"name": "RETURNDATASIZE",
											"source": 17
										},
										{
											"begin": 938,
											"end": 993,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 938,
											"end": 993,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 938,
											"end": 993,
											"name": "RETURNDATACOPY",
											"source": 17
										},
										{
											"begin": 938,
											"end": 993,
											"name": "RETURNDATASIZE",
											"source": 17
										},
										{
											"begin": 938,
											"end": 993,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 938,
											"end": 993,
											"name": "NOT",
											"source": 17
										},
										{
											"begin": 938,
											"end": 993,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 938,
											"end": 993,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 938,
											"end": 993,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 938,
											"end": 993,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 938,
											"end": 993,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 938,
											"end": 993,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 938,
											"end": 993,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 938,
											"end": 993,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 938,
											"end": 993,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 938,
											"end": 993,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 938,
											"end": 993,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 938,
											"end": 993,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 938,
											"end": 993,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 938,
											"end": 993,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 938,
											"end": 993,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "61"
										},
										{
											"begin": 938,
											"end": 993,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 938,
											"end": 993,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 938,
											"end": 993,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 938,
											"end": 993,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 938,
											"end": 993,
											"name": "tag",
											"source": 17,
											"value": "61"
										},
										{
											"begin": 938,
											"end": 993,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 938,
											"end": 993,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 938,
											"end": 993,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 938,
											"end": 993,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 938,
											"end": 993,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 938,
											"end": 993,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 938,
											"end": 993,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 938,
											"end": 993,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 938,
											"end": 993,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 938,
											"end": 993,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 938,
											"end": 993,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 938,
											"end": 993,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 938,
											"end": 993,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 938,
											"end": 993,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 938,
											"end": 993,
											"name": "PUSH",
											"source": 17,
											"value": "100000000"
										},
										{
											"begin": 938,
											"end": 993,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 938,
											"end": 993,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 938,
											"end": 993,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 938,
											"end": 993,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "62"
										},
										{
											"begin": 938,
											"end": 993,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 938,
											"end": 993,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 938,
											"end": 993,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 938,
											"end": 993,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 938,
											"end": 993,
											"name": "tag",
											"source": 17,
											"value": "62"
										},
										{
											"begin": 938,
											"end": 993,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 938,
											"end": 993,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 938,
											"end": 993,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 938,
											"end": 993,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 938,
											"end": 993,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 938,
											"end": 993,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 938,
											"end": 993,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 938,
											"end": 993,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 938,
											"end": 993,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 938,
											"end": 993,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 938,
											"end": 993,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 938,
											"end": 993,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 938,
											"end": 993,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 938,
											"end": 993,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "63"
										},
										{
											"begin": 938,
											"end": 993,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 938,
											"end": 993,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 938,
											"end": 993,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 938,
											"end": 993,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 938,
											"end": 993,
											"name": "tag",
											"source": 17,
											"value": "63"
										},
										{
											"begin": 938,
											"end": 993,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 938,
											"end": 993,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 938,
											"end": 993,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 938,
											"end": 993,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 938,
											"end": 993,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 938,
											"end": 993,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 938,
											"end": 993,
											"name": "MUL",
											"source": 17
										},
										{
											"begin": 938,
											"end": 993,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 938,
											"end": 993,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 938,
											"end": 993,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 938,
											"end": 993,
											"name": "PUSH",
											"source": 17,
											"value": "100000000"
										},
										{
											"begin": 938,
											"end": 993,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 938,
											"end": 993,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 938,
											"end": 993,
											"name": "OR",
											"source": 17
										},
										{
											"begin": 938,
											"end": 993,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 938,
											"end": 993,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "64"
										},
										{
											"begin": 938,
											"end": 993,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 938,
											"end": 993,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 938,
											"end": 993,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 938,
											"end": 993,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 938,
											"end": 993,
											"name": "tag",
											"source": 17,
											"value": "64"
										},
										{
											"begin": 938,
											"end": 993,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 938,
											"end": 993,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 938,
											"end": 993,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 938,
											"end": 993,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 938,
											"end": 993,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 938,
											"end": 993,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 938,
											"end": 993,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 938,
											"end": 993,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 938,
											"end": 993,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 938,
											"end": 993,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 938,
											"end": 993,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 938,
											"end": 993,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 938,
											"end": 993,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 938,
											"end": 993,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 938,
											"end": 993,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 938,
											"end": 993,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 938,
											"end": 993,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 938,
											"end": 993,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 938,
											"end": 993,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 938,
											"end": 993,
											"name": "MUL",
											"source": 17
										},
										{
											"begin": 938,
											"end": 993,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 938,
											"end": 993,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 938,
											"end": 993,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 938,
											"end": 993,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 938,
											"end": 993,
											"name": "tag",
											"source": 17,
											"value": "65"
										},
										{
											"begin": 938,
											"end": 993,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 938,
											"end": 993,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 938,
											"end": 993,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 938,
											"end": 993,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 938,
											"end": 993,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 938,
											"end": 993,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "67"
										},
										{
											"begin": 938,
											"end": 993,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 938,
											"end": 993,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 938,
											"end": 993,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 938,
											"end": 993,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 938,
											"end": 993,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 938,
											"end": 993,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 938,
											"end": 993,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 938,
											"end": 993,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 938,
											"end": 993,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 938,
											"end": 993,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 938,
											"end": 993,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 938,
											"end": 993,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 938,
											"end": 993,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 938,
											"end": 993,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 938,
											"end": 993,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "65"
										},
										{
											"begin": 938,
											"end": 993,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 938,
											"end": 993,
											"name": "tag",
											"source": 17,
											"value": "67"
										},
										{
											"begin": 938,
											"end": 993,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 938,
											"end": 993,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 938,
											"end": 993,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 938,
											"end": 993,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 938,
											"end": 993,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 938,
											"end": 993,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 938,
											"end": 993,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 938,
											"end": 993,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 938,
											"end": 993,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 938,
											"end": 993,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 938,
											"end": 993,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 938,
											"end": 993,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 938,
											"end": 993,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 914,
											"end": 993,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 914,
											"end": 993,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1009,
											"end": 1016,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1017,
											"end": 1018,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 1009,
											"end": 1019,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1009,
											"end": 1019,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 1009,
											"end": 1019,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1009,
											"end": 1019,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 1009,
											"end": 1019,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "68"
										},
										{
											"begin": 1009,
											"end": 1019,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 1009,
											"end": 1019,
											"name": "INVALID",
											"source": 17
										},
										{
											"begin": 1009,
											"end": 1019,
											"name": "tag",
											"source": 17,
											"value": "68"
										},
										{
											"begin": 1009,
											"end": 1019,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1009,
											"end": 1019,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1009,
											"end": 1019,
											"name": "MUL",
											"source": 17
										},
										{
											"begin": 1009,
											"end": 1019,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1009,
											"end": 1019,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1009,
											"end": 1019,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1009,
											"end": 1019,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 1002,
											"end": 1019,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 1002,
											"end": 1019,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1002,
											"end": 1019,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1002,
											"end": 1019,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1002,
											"end": 1019,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 674,
											"end": 1026,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 674,
											"end": 1026,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 674,
											"end": 1026,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 674,
											"end": 1026,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 674,
											"end": 1026,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 674,
											"end": 1026,
											"name": "JUMP",
											"source": 17,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"EstimateAmountOut(address,address,address,uint256)": "8c39560e",
							"PoolExists(address,address,address,uint256,uint256)": "bcbcaa29",
							"Price(address,address,address)": "c361e0b1"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"router\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"name\":\"EstimateAmountOut\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"factory\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"t0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"t1\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"min0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"min1\",\"type\":\"uint256\"}],\"name\":\"PoolExists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"router\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"t0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"t1\",\"type\":\"address\"}],\"name\":\"Price\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/libraries/UniswapV2.sol\":\"UniswapV2\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v2-core/contracts/interfaces/IUniswapV2Factory.sol\":{\"keccak256\":\"0xe5905c0989cf5a865ed9bb7b9252536ca011c5b744017a82a7d4443b9c00a891\",\"urls\":[\"bzz-raw://5d2a90a0a796491507462a3da18c3f8819721d571572d765a2207c35bf0a0389\",\"dweb:/ipfs/Qmf9ACYiT3qzjgsYuhm866FBdiBpRMXAPpQhSFbgqcyhHt\"]},\"@uniswap/v2-core/contracts/interfaces/IUniswapV2Pair.sol\":{\"keccak256\":\"0x7c9bc70e5996c763e02ff38905282bc24fb242b0ef2519a003b36824fc524a4b\",\"urls\":[\"bzz-raw://85d5ad2dd23ee127f40907a12865a1e8cb5828814f6f2480285e1827dd72dedf\",\"dweb:/ipfs/QmayKQWJgWmr46DqWseADyUanmqxh662hPNdAkdHRjiQQH\"]},\"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol\":{\"keccak256\":\"0x8a3c5c449d4b7cd76513ed6995f4b86e4a86f222c770f8442f5fc128ce29b4d2\",\"urls\":[\"bzz-raw://1df63ca373dafae3bd0ee7fe70f890a1dc7c45ed869c01de68413e0e97ff9deb\",\"dweb:/ipfs/QmefJgEYGUL8KX7kQKYTrDweF8GB7yjy3nw5Bmqzryg7PG\"]},\"contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x7df9d93243a890a6dc175905d65495ae5726330faa50409ab8460c4c00c672e1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3ff91fe9d915b97343e152f1a15a46e5ff9477e90e90a4431dca38f79eb2cdba\",\"dweb:/ipfs/QmcHUAJs2MfcdbAFTzdQE1eGevxCGHNDXECiuGLDaUs34S\"]},\"contracts/libraries/UniswapV2.sol\":{\"keccak256\":\"0x20c122c32f799086c7bd4f2612823c16311c775e5f80dc530ca818558c81ffbd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bdc8bafae4fafd8edba5aa7be0832fd834a1d20179769b2856dfca4cfd54f22b\",\"dweb:/ipfs/QmXsFn9cDuH8JzUeGx9VEASiS5BLuzmk6t95icuo21t2Nq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/libraries/UniswapV3.sol": {
				"UniswapV3": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "factory",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tB",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								}
							],
							"name": "EstimateAmountOut",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "uint24",
									"name": "fee",
									"type": "uint24"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "factory",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "t0",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "t1",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "min0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "min1",
									"type": "uint256"
								}
							],
							"name": "PoolExists",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "factory",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "t0",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "t1",
									"type": "address"
								}
							],
							"name": "Price",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								},
								{
									"internalType": "uint24",
									"name": "fee",
									"type": "uint24"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/libraries/UniswapV3.sol\":260:2506  library UniswapV3 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/libraries/UniswapV3.sol\":260:2506  library UniswapV3 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8c39560e\n      eq\n      tag_2\n      jumpi\n      dup1\n      0xbcbcaa29\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xc361e0b1\n      eq\n      tag_4\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"contracts/libraries/UniswapV3.sol\":290:1024  function EstimateAmountOut(address factory,address tA,address tB,uint256 amountIn) external  view returns (uint256 amountOut,uint24 fee){... */\n    tag_2:\n      tag_5\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x80\n      dup2\n      lt\n      iszero\n      tag_6\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_6:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_7\n      jump\t// in\n    tag_5:\n      mload(0x40)\n      dup1\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      0xffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/libraries/UniswapV3.sol\":1972:2503  function PoolExists(address factory,address t0,address t1,uint min0,uint min1) external view returns (bool){... */\n    tag_3:\n      tag_8\n      0x04\n      dup1\n      calldatasize\n      sub\n      0xa0\n      dup2\n      lt\n      iszero\n      tag_9\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_9:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_10\n      jump\t// in\n    tag_8:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/libraries/UniswapV3.sol\":1034:1965  function Price(address factory,address t0,address t1) external view returns (uint256 price,uint24 fee){... */\n    tag_4:\n      tag_11\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x60\n      dup2\n      lt\n      iszero\n      tag_12\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_12:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_13\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      dup1\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      0xffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/libraries/UniswapV3.sol\":290:1024  function EstimateAmountOut(address factory,address tA,address tB,uint256 amountIn) external  view returns (uint256 amountOut,uint24 fee){... */\n    tag_7:\n        /* \"contracts/libraries/UniswapV3.sol\":397:414  uint256 amountOut */\n      0x00\n        /* \"contracts/libraries/UniswapV3.sol\":415:425  uint24 fee */\n      dup1\n        /* \"contracts/libraries/UniswapV3.sol\":440:461  uint16[4] memory fees */\n      0x00\n        /* \"contracts/libraries/UniswapV3.sol\":440:484  uint16[4] memory fees = [100,500,3000,10000] */\n      mload(0x40)\n      dup1\n      0x80\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/libraries/UniswapV3.sol\":465:468  100 */\n      0x64\n        /* \"contracts/libraries/UniswapV3.sol\":440:484  uint16[4] memory fees = [100,500,3000,10000] */\n      0xffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/libraries/UniswapV3.sol\":469:472  500 */\n      0x01f4\n        /* \"contracts/libraries/UniswapV3.sol\":440:484  uint16[4] memory fees = [100,500,3000,10000] */\n      0xffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/libraries/UniswapV3.sol\":473:477  3000 */\n      0x0bb8\n        /* \"contracts/libraries/UniswapV3.sol\":440:484  uint16[4] memory fees = [100,500,3000,10000] */\n      0xffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/libraries/UniswapV3.sol\":478:483  10000 */\n      0x2710\n        /* \"contracts/libraries/UniswapV3.sol\":440:484  uint16[4] memory fees = [100,500,3000,10000] */\n      0xffff\n      and\n      dup2\n      mstore\n      pop\n      swap1\n      pop\n        /* \"contracts/libraries/UniswapV3.sol\":502:509  uint8 i */\n      0x00\n        /* \"contracts/libraries/UniswapV3.sol\":498:1014  for(uint8 i=0;i<4;i++){... */\n    tag_15:\n        /* \"contracts/libraries/UniswapV3.sol\":514:515  4 */\n      0x04\n        /* \"contracts/libraries/UniswapV3.sol\":512:513  i */\n      dup2\n        /* \"contracts/libraries/UniswapV3.sol\":512:515  i<4 */\n      0xff\n      and\n      lt\n        /* \"contracts/libraries/UniswapV3.sol\":498:1014  for(uint8 i=0;i<4;i++){... */\n      iszero\n      tag_16\n      jumpi\n        /* \"contracts/libraries/UniswapV3.sol\":538:550  address pool */\n      0x00\n        /* \"contracts/libraries/UniswapV3.sol\":571:578  factory */\n      dup9\n        /* \"contracts/libraries/UniswapV3.sol\":553:587  IUniswapV3Factory(factory).getPool */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x1698ee82\n        /* \"contracts/libraries/UniswapV3.sol\":588:590  tA */\n      dup10\n        /* \"contracts/libraries/UniswapV3.sol\":591:593  tB */\n      dup10\n        /* \"contracts/libraries/UniswapV3.sol\":594:598  fees */\n      dup7\n        /* \"contracts/libraries/UniswapV3.sol\":599:600  i */\n      dup7\n        /* \"contracts/libraries/UniswapV3.sol\":594:601  fees[i] */\n      0xff\n      and\n      0x04\n      dup2\n      lt\n      tag_18\n      jumpi\n      invalid\n    tag_18:\n      0x20\n      mul\n      add\n      mload\n        /* \"contracts/libraries/UniswapV3.sol\":553:602  IUniswapV3Factory(factory).getPool(tA,tB,fees[i]) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup5\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      0xffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap4\n      pop\n      pop\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_19\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_19:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_21\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_21:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_22\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_22:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"contracts/libraries/UniswapV3.sol\":538:602  address pool = IUniswapV3Factory(factory).getPool(tA,tB,fees[i]) */\n      swap1\n      pop\n        /* \"contracts/libraries/UniswapV3.sol\":640:641  0 */\n      0x00\n        /* \"contracts/libraries/UniswapV3.sol\":624:642  pool == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/libraries/UniswapV3.sol\":624:628  pool */\n      dup2\n        /* \"contracts/libraries/UniswapV3.sol\":624:642  pool == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/libraries/UniswapV3.sol\":620:652  if (pool == address(0)) continue */\n      iszero\n      tag_23\n      jumpi\n        /* \"contracts/libraries/UniswapV3.sol\":644:652  continue */\n      pop\n      jump(tag_17)\n        /* \"contracts/libraries/UniswapV3.sol\":620:652  if (pool == address(0)) continue */\n    tag_23:\n        /* \"contracts/libraries/UniswapV3.sol\":704:712  amountIn */\n      dup6\n        /* \"contracts/libraries/UniswapV3.sol\":682:684  tA */\n      dup9\n        /* \"contracts/libraries/UniswapV3.sol\":675:695  IERC20(tA).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/libraries/UniswapV3.sol\":696:700  pool */\n      dup4\n        /* \"contracts/libraries/UniswapV3.sol\":675:701  IERC20(tA).balanceOf(pool) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_24\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_24:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_26\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_26:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_27\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_27:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"contracts/libraries/UniswapV3.sol\":675:712  IERC20(tA).balanceOf(pool) < amountIn */\n      lt\n        /* \"contracts/libraries/UniswapV3.sol\":671:722  if (IERC20(tA).balanceOf(pool) < amountIn) continue */\n      iszero\n      tag_28\n      jumpi\n        /* \"contracts/libraries/UniswapV3.sol\":714:722  continue */\n      pop\n      jump(tag_17)\n        /* \"contracts/libraries/UniswapV3.sol\":671:722  if (IERC20(tA).balanceOf(pool) < amountIn) continue */\n    tag_28:\n        /* \"contracts/libraries/UniswapV3.sol\":740:750  int24 tick */\n      0x00\n        /* \"contracts/libraries/UniswapV3.sol\":753:782  OracleLibrary.consult(pool,1) */\n      tag_29\n        /* \"contracts/libraries/UniswapV3.sol\":775:779  pool */\n      dup3\n        /* \"contracts/libraries/UniswapV3.sol\":780:781  1 */\n      0x01\n        /* \"contracts/libraries/UniswapV3.sol\":753:774  OracleLibrary.consult */\n      tag_30\n        /* \"contracts/libraries/UniswapV3.sol\":753:782  OracleLibrary.consult(pool,1) */\n      jump\t// in\n    tag_29:\n        /* \"contracts/libraries/UniswapV3.sol\":740:782  int24 tick = OracleLibrary.consult(pool,1) */\n      swap1\n      pop\n        /* \"contracts/libraries/UniswapV3.sol\":800:811  uint256 out */\n      0x00\n        /* \"contracts/libraries/UniswapV3.sol\":814:872  OracleLibrary.getQuoteAtTick(tick,uint128(amountIn),tA,tB) */\n      tag_31\n        /* \"contracts/libraries/UniswapV3.sol\":843:847  tick */\n      dup3\n        /* \"contracts/libraries/UniswapV3.sol\":856:864  amountIn */\n      dup10\n        /* \"contracts/libraries/UniswapV3.sol\":866:868  tA */\n      dup13\n        /* \"contracts/libraries/UniswapV3.sol\":869:871  tB */\n      dup13\n        /* \"contracts/libraries/UniswapV3.sol\":814:842  OracleLibrary.getQuoteAtTick */\n      tag_32\n        /* \"contracts/libraries/UniswapV3.sol\":814:872  OracleLibrary.getQuoteAtTick(tick,uint128(amountIn),tA,tB) */\n      jump\t// in\n    tag_31:\n        /* \"contracts/libraries/UniswapV3.sol\":800:872  uint256 out = OracleLibrary.getQuoteAtTick(tick,uint128(amountIn),tA,tB) */\n      swap1\n      pop\n        /* \"contracts/libraries/UniswapV3.sol\":900:909  amountOut */\n      dup7\n        /* \"contracts/libraries/UniswapV3.sol\":894:897  out */\n      dup2\n        /* \"contracts/libraries/UniswapV3.sol\":894:909  out > amountOut */\n      gt\n        /* \"contracts/libraries/UniswapV3.sol\":889:990  if ( out > amountOut) {... */\n      iszero\n      tag_33\n      jumpi\n        /* \"contracts/libraries/UniswapV3.sol\":941:944  out */\n      dup1\n        /* \"contracts/libraries/UniswapV3.sol\":929:944  amountOut = out */\n      swap7\n      pop\n        /* \"contracts/libraries/UniswapV3.sol\":968:972  fees */\n      dup5\n        /* \"contracts/libraries/UniswapV3.sol\":973:974  i */\n      dup5\n        /* \"contracts/libraries/UniswapV3.sol\":968:975  fees[i] */\n      0xff\n      and\n      0x04\n      dup2\n      lt\n      tag_34\n      jumpi\n      invalid\n    tag_34:\n      0x20\n      mul\n      add\n      mload\n        /* \"contracts/libraries/UniswapV3.sol\":962:975  fee = fees[i] */\n      0xffff\n      and\n      swap6\n      pop\n        /* \"contracts/libraries/UniswapV3.sol\":889:990  if ( out > amountOut) {... */\n    tag_33:\n        /* \"contracts/libraries/UniswapV3.sol\":498:1014  for(uint8 i=0;i<4;i++){... */\n      pop\n      pop\n      pop\n    tag_17:\n        /* \"contracts/libraries/UniswapV3.sol\":516:519  i++ */\n      dup1\n      dup1\n      0x01\n      add\n      swap2\n      pop\n      pop\n        /* \"contracts/libraries/UniswapV3.sol\":498:1014  for(uint8 i=0;i<4;i++){... */\n      jump(tag_15)\n    tag_16:\n      pop\n        /* \"contracts/libraries/UniswapV3.sol\":290:1024  function EstimateAmountOut(address factory,address tA,address tB,uint256 amountIn) external  view returns (uint256 amountOut,uint24 fee){... */\n      pop\n      swap5\n      pop\n      swap5\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/libraries/UniswapV3.sol\":1972:2503  function PoolExists(address factory,address t0,address t1,uint min0,uint min1) external view returns (bool){... */\n    tag_10:\n        /* \"contracts/libraries/UniswapV3.sol\":2074:2078  bool */\n      0x00\n        /* \"contracts/libraries/UniswapV3.sol\":2089:2110  uint16[4] memory fees */\n      dup1\n        /* \"contracts/libraries/UniswapV3.sol\":2089:2133  uint16[4] memory fees = [100,500,3000,10000] */\n      mload(0x40)\n      dup1\n      0x80\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/libraries/UniswapV3.sol\":2114:2117  100 */\n      0x64\n        /* \"contracts/libraries/UniswapV3.sol\":2089:2133  uint16[4] memory fees = [100,500,3000,10000] */\n      0xffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/libraries/UniswapV3.sol\":2118:2121  500 */\n      0x01f4\n        /* \"contracts/libraries/UniswapV3.sol\":2089:2133  uint16[4] memory fees = [100,500,3000,10000] */\n      0xffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/libraries/UniswapV3.sol\":2122:2126  3000 */\n      0x0bb8\n        /* \"contracts/libraries/UniswapV3.sol\":2089:2133  uint16[4] memory fees = [100,500,3000,10000] */\n      0xffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/libraries/UniswapV3.sol\":2127:2132  10000 */\n      0x2710\n        /* \"contracts/libraries/UniswapV3.sol\":2089:2133  uint16[4] memory fees = [100,500,3000,10000] */\n      0xffff\n      and\n      dup2\n      mstore\n      pop\n      swap1\n      pop\n        /* \"contracts/libraries/UniswapV3.sol\":2143:2162  uint16[4] memory fs */\n      tag_36\n      tag_37\n      jump\t// in\n    tag_36:\n        /* \"contracts/libraries/UniswapV3.sol\":2176:2183  uint8 i */\n      0x00\n        /* \"contracts/libraries/UniswapV3.sol\":2172:2475  for(uint8 i=0;i<4;i++){... */\n    tag_38:\n        /* \"contracts/libraries/UniswapV3.sol\":2188:2189  4 */\n      0x04\n        /* \"contracts/libraries/UniswapV3.sol\":2186:2187  i */\n      dup2\n        /* \"contracts/libraries/UniswapV3.sol\":2186:2189  i<4 */\n      0xff\n      and\n      lt\n        /* \"contracts/libraries/UniswapV3.sol\":2172:2475  for(uint8 i=0;i<4;i++){... */\n      iszero\n      tag_39\n      jumpi\n        /* \"contracts/libraries/UniswapV3.sol\":2207:2219  address pool */\n      0x00\n        /* \"contracts/libraries/UniswapV3.sol\":2240:2247  factory */\n      dup10\n        /* \"contracts/libraries/UniswapV3.sol\":2222:2256  IUniswapV3Factory(factory).getPool */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x1698ee82\n        /* \"contracts/libraries/UniswapV3.sol\":2257:2259  t0 */\n      dup11\n        /* \"contracts/libraries/UniswapV3.sol\":2260:2262  t1 */\n      dup11\n        /* \"contracts/libraries/UniswapV3.sol\":2263:2267  fees */\n      dup8\n        /* \"contracts/libraries/UniswapV3.sol\":2268:2269  i */\n      dup7\n        /* \"contracts/libraries/UniswapV3.sol\":2263:2270  fees[i] */\n      0xff\n      and\n      0x04\n      dup2\n      lt\n      tag_41\n      jumpi\n      invalid\n    tag_41:\n      0x20\n      mul\n      add\n      mload\n        /* \"contracts/libraries/UniswapV3.sol\":2222:2271  IUniswapV3Factory(factory).getPool(t0,t1,fees[i]) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup5\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      0xffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap4\n      pop\n      pop\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_42\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_42:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_44\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_44:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_45\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_45:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"contracts/libraries/UniswapV3.sol\":2207:2271  address pool = IUniswapV3Factory(factory).getPool(t0,t1,fees[i]) */\n      swap1\n      pop\n        /* \"contracts/libraries/UniswapV3.sol\":2304:2305  0 */\n      0x00\n        /* \"contracts/libraries/UniswapV3.sol\":2288:2306  pool == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/libraries/UniswapV3.sol\":2288:2292  pool */\n      dup2\n        /* \"contracts/libraries/UniswapV3.sol\":2288:2306  pool == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/libraries/UniswapV3.sol\":2284:2316  if (pool == address(0)) continue */\n      iszero\n      tag_46\n      jumpi\n        /* \"contracts/libraries/UniswapV3.sol\":2308:2316  continue */\n      pop\n      jump(tag_40)\n        /* \"contracts/libraries/UniswapV3.sol\":2284:2316  if (pool == address(0)) continue */\n    tag_46:\n        /* \"contracts/libraries/UniswapV3.sol\":2363:2367  min0 */\n      dup7\n        /* \"contracts/libraries/UniswapV3.sol\":2341:2343  t0 */\n      dup10\n        /* \"contracts/libraries/UniswapV3.sol\":2334:2354  IERC20(t0).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/libraries/UniswapV3.sol\":2355:2359  pool */\n      dup4\n        /* \"contracts/libraries/UniswapV3.sol\":2334:2360  IERC20(t0).balanceOf(pool) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_47\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_47:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_49\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_49:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_50\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_50:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"contracts/libraries/UniswapV3.sol\":2334:2367  IERC20(t0).balanceOf(pool) < min0 */\n      lt\n        /* \"contracts/libraries/UniswapV3.sol\":2330:2377  if (IERC20(t0).balanceOf(pool) < min0) continue */\n      iszero\n      tag_51\n      jumpi\n        /* \"contracts/libraries/UniswapV3.sol\":2369:2377  continue */\n      pop\n      jump(tag_40)\n        /* \"contracts/libraries/UniswapV3.sol\":2330:2377  if (IERC20(t0).balanceOf(pool) < min0) continue */\n    tag_51:\n        /* \"contracts/libraries/UniswapV3.sol\":2424:2428  min1 */\n      dup6\n        /* \"contracts/libraries/UniswapV3.sol\":2402:2404  t1 */\n      dup9\n        /* \"contracts/libraries/UniswapV3.sol\":2395:2415  IERC20(t1).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/libraries/UniswapV3.sol\":2416:2420  pool */\n      dup4\n        /* \"contracts/libraries/UniswapV3.sol\":2395:2421  IERC20(t1).balanceOf(pool) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_52\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_52:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_54\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_54:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_55\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_55:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"contracts/libraries/UniswapV3.sol\":2395:2428  IERC20(t1).balanceOf(pool) < min1 */\n      lt\n        /* \"contracts/libraries/UniswapV3.sol\":2391:2438  if (IERC20(t1).balanceOf(pool) < min1) continue */\n      iszero\n      tag_56\n      jumpi\n        /* \"contracts/libraries/UniswapV3.sol\":2430:2438  continue */\n      pop\n      jump(tag_40)\n        /* \"contracts/libraries/UniswapV3.sol\":2391:2438  if (IERC20(t1).balanceOf(pool) < min1) continue */\n    tag_56:\n        /* \"contracts/libraries/UniswapV3.sol\":2460:2464  true */\n      0x01\n        /* \"contracts/libraries/UniswapV3.sol\":2453:2464  return true */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump(tag_35)\n        /* \"contracts/libraries/UniswapV3.sol\":2172:2475  for(uint8 i=0;i<4;i++){... */\n    tag_40:\n        /* \"contracts/libraries/UniswapV3.sol\":2190:2193  i++ */\n      dup1\n      dup1\n      0x01\n      add\n      swap2\n      pop\n      pop\n        /* \"contracts/libraries/UniswapV3.sol\":2172:2475  for(uint8 i=0;i<4;i++){... */\n      jump(tag_38)\n    tag_39:\n      pop\n        /* \"contracts/libraries/UniswapV3.sol\":2491:2496  false */\n      0x00\n        /* \"contracts/libraries/UniswapV3.sol\":2484:2496  return false */\n      swap3\n      pop\n      pop\n      pop\n        /* \"contracts/libraries/UniswapV3.sol\":1972:2503  function PoolExists(address factory,address t0,address t1,uint min0,uint min1) external view returns (bool){... */\n    tag_35:\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/libraries/UniswapV3.sol\":1034:1965  function Price(address factory,address t0,address t1) external view returns (uint256 price,uint24 fee){... */\n    tag_13:\n        /* \"contracts/libraries/UniswapV3.sol\":1111:1124  uint256 price */\n      0x00\n        /* \"contracts/libraries/UniswapV3.sol\":1125:1135  uint24 fee */\n      dup1\n        /* \"contracts/libraries/UniswapV3.sol\":1146:1167  uint16[4] memory fees */\n      0x00\n        /* \"contracts/libraries/UniswapV3.sol\":1146:1190  uint16[4] memory fees = [100,500,3000,10000] */\n      mload(0x40)\n      dup1\n      0x80\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/libraries/UniswapV3.sol\":1171:1174  100 */\n      0x64\n        /* \"contracts/libraries/UniswapV3.sol\":1146:1190  uint16[4] memory fees = [100,500,3000,10000] */\n      0xffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/libraries/UniswapV3.sol\":1175:1178  500 */\n      0x01f4\n        /* \"contracts/libraries/UniswapV3.sol\":1146:1190  uint16[4] memory fees = [100,500,3000,10000] */\n      0xffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/libraries/UniswapV3.sol\":1179:1183  3000 */\n      0x0bb8\n        /* \"contracts/libraries/UniswapV3.sol\":1146:1190  uint16[4] memory fees = [100,500,3000,10000] */\n      0xffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/libraries/UniswapV3.sol\":1184:1189  10000 */\n      0x2710\n        /* \"contracts/libraries/UniswapV3.sol\":1146:1190  uint16[4] memory fees = [100,500,3000,10000] */\n      0xffff\n      and\n      dup2\n      mstore\n      pop\n      swap1\n      pop\n        /* \"contracts/libraries/UniswapV3.sol\":1204:1211  uint8 i */\n      0x00\n        /* \"contracts/libraries/UniswapV3.sol\":1200:1931  for(uint8 i=0;i<4;i++){... */\n    tag_58:\n        /* \"contracts/libraries/UniswapV3.sol\":1216:1217  4 */\n      0x04\n        /* \"contracts/libraries/UniswapV3.sol\":1214:1215  i */\n      dup2\n        /* \"contracts/libraries/UniswapV3.sol\":1214:1217  i<4 */\n      0xff\n      and\n      lt\n        /* \"contracts/libraries/UniswapV3.sol\":1200:1931  for(uint8 i=0;i<4;i++){... */\n      iszero\n      tag_59\n      jumpi\n        /* \"contracts/libraries/UniswapV3.sol\":1232:1244  address pool */\n      0x00\n        /* \"contracts/libraries/UniswapV3.sol\":1265:1272  factory */\n      dup8\n        /* \"contracts/libraries/UniswapV3.sol\":1247:1281  IUniswapV3Factory(factory).getPool */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x1698ee82\n        /* \"contracts/libraries/UniswapV3.sol\":1282:1284  t0 */\n      dup9\n        /* \"contracts/libraries/UniswapV3.sol\":1285:1287  t1 */\n      dup9\n        /* \"contracts/libraries/UniswapV3.sol\":1288:1292  fees */\n      dup7\n        /* \"contracts/libraries/UniswapV3.sol\":1293:1294  i */\n      dup7\n        /* \"contracts/libraries/UniswapV3.sol\":1288:1295  fees[i] */\n      0xff\n      and\n      0x04\n      dup2\n      lt\n      tag_61\n      jumpi\n      invalid\n    tag_61:\n      0x20\n      mul\n      add\n      mload\n        /* \"contracts/libraries/UniswapV3.sol\":1247:1296  IUniswapV3Factory(factory).getPool(t0,t1,fees[i]) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup5\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      0xffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap4\n      pop\n      pop\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_62\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_62:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_64\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_64:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_65\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_65:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"contracts/libraries/UniswapV3.sol\":1232:1296  address pool = IUniswapV3Factory(factory).getPool(t0,t1,fees[i]) */\n      swap1\n      pop\n        /* \"contracts/libraries/UniswapV3.sol\":1326:1327  0 */\n      0x00\n        /* \"contracts/libraries/UniswapV3.sol\":1310:1328  pool == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/libraries/UniswapV3.sol\":1310:1314  pool */\n      dup2\n        /* \"contracts/libraries/UniswapV3.sol\":1310:1328  pool == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/libraries/UniswapV3.sol\":1306:1338  if (pool == address(0)) continue */\n      iszero\n      tag_66\n      jumpi\n        /* \"contracts/libraries/UniswapV3.sol\":1330:1338  continue */\n      pop\n      jump(tag_60)\n        /* \"contracts/libraries/UniswapV3.sol\":1306:1338  if (pool == address(0)) continue */\n    tag_66:\n        /* \"contracts/libraries/UniswapV3.sol\":1358:1366  uint8 d0 */\n      0x00\n        /* \"contracts/libraries/UniswapV3.sol\":1376:1378  t0 */\n      dup8\n        /* \"contracts/libraries/UniswapV3.sol\":1369:1388  IERC20(t0).decimals */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x313ce567\n        /* \"contracts/libraries/UniswapV3.sol\":1369:1390  IERC20(t0).decimals() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_67\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_67:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_69\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_69:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_70\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_70:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"contracts/libraries/UniswapV3.sol\":1358:1390  uint8 d0 = IERC20(t0).decimals() */\n      swap1\n      pop\n        /* \"contracts/libraries/UniswapV3.sol\":1400:1408  uint8 d1 */\n      0x00\n        /* \"contracts/libraries/UniswapV3.sol\":1418:1420  t1 */\n      dup8\n        /* \"contracts/libraries/UniswapV3.sol\":1411:1430  IERC20(t1).decimals */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x313ce567\n        /* \"contracts/libraries/UniswapV3.sol\":1411:1432  IERC20(t1).decimals() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_71\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_71:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_73\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_73:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_74\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_74:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"contracts/libraries/UniswapV3.sol\":1400:1432  uint8 d1 = IERC20(t1).decimals() */\n      swap1\n      pop\n        /* \"contracts/libraries/UniswapV3.sol\":1488:1490  d0 */\n      dup2\n        /* \"contracts/libraries/UniswapV3.sol\":1484:1490  10**d0 */\n      0xff\n      and\n        /* \"contracts/libraries/UniswapV3.sol\":1484:1486  10 */\n      0x0a\n        /* \"contracts/libraries/UniswapV3.sol\":1484:1490  10**d0 */\n      exp\n        /* \"contracts/libraries/UniswapV3.sol\":1462:1464  t0 */\n      dup10\n        /* \"contracts/libraries/UniswapV3.sol\":1455:1475  IERC20(t0).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/libraries/UniswapV3.sol\":1476:1480  pool */\n      dup6\n        /* \"contracts/libraries/UniswapV3.sol\":1455:1481  IERC20(t0).balanceOf(pool) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_75\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_75:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_77\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_77:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_78\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_78:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"contracts/libraries/UniswapV3.sol\":1455:1490  IERC20(t0).balanceOf(pool) < 10**d0 */\n      lt\n        /* \"contracts/libraries/UniswapV3.sol\":1451:1500  if (IERC20(t0).balanceOf(pool) < 10**d0) continue */\n      iszero\n      tag_79\n      jumpi\n        /* \"contracts/libraries/UniswapV3.sol\":1492:1500  continue */\n      pop\n      pop\n      pop\n      jump(tag_60)\n        /* \"contracts/libraries/UniswapV3.sol\":1451:1500  if (IERC20(t0).balanceOf(pool) < 10**d0) continue */\n    tag_79:\n        /* \"contracts/libraries/UniswapV3.sol\":1548:1550  d1 */\n      dup1\n        /* \"contracts/libraries/UniswapV3.sol\":1544:1550  10**d1 */\n      0xff\n      and\n        /* \"contracts/libraries/UniswapV3.sol\":1544:1546  10 */\n      0x0a\n        /* \"contracts/libraries/UniswapV3.sol\":1544:1550  10**d1 */\n      exp\n        /* \"contracts/libraries/UniswapV3.sol\":1522:1524  t1 */\n      dup9\n        /* \"contracts/libraries/UniswapV3.sol\":1515:1535  IERC20(t1).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/libraries/UniswapV3.sol\":1536:1540  pool */\n      dup6\n        /* \"contracts/libraries/UniswapV3.sol\":1515:1541  IERC20(t1).balanceOf(pool) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_80\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_80:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_82\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_82:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_83\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_83:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"contracts/libraries/UniswapV3.sol\":1515:1550  IERC20(t1).balanceOf(pool) < 10**d1 */\n      lt\n        /* \"contracts/libraries/UniswapV3.sol\":1511:1560  if (IERC20(t1).balanceOf(pool) < 10**d1) continue */\n      iszero\n      tag_84\n      jumpi\n        /* \"contracts/libraries/UniswapV3.sol\":1552:1560  continue */\n      pop\n      pop\n      pop\n      jump(tag_60)\n        /* \"contracts/libraries/UniswapV3.sol\":1511:1560  if (IERC20(t1).balanceOf(pool) < 10**d1) continue */\n    tag_84:\n        /* \"contracts/libraries/UniswapV3.sol\":1573:1583  int24 tick */\n      0x00\n        /* \"contracts/libraries/UniswapV3.sol\":1586:1615  OracleLibrary.consult(pool,1) */\n      tag_85\n        /* \"contracts/libraries/UniswapV3.sol\":1608:1612  pool */\n      dup5\n        /* \"contracts/libraries/UniswapV3.sol\":1613:1614  1 */\n      0x01\n        /* \"contracts/libraries/UniswapV3.sol\":1586:1607  OracleLibrary.consult */\n      tag_30\n        /* \"contracts/libraries/UniswapV3.sol\":1586:1615  OracleLibrary.consult(pool,1) */\n      jump\t// in\n    tag_85:\n        /* \"contracts/libraries/UniswapV3.sol\":1573:1615  int24 tick = OracleLibrary.consult(pool,1) */\n      swap1\n      pop\n        /* \"contracts/libraries/UniswapV3.sol\":1625:1642  uint256 amountOut */\n      0x00\n        /* \"contracts/libraries/UniswapV3.sol\":1645:1701  OracleLibrary.getQuoteAtTick(tick,uint128(10**d0),t0,t1) */\n      tag_86\n        /* \"contracts/libraries/UniswapV3.sol\":1674:1678  tick */\n      dup3\n        /* \"contracts/libraries/UniswapV3.sol\":1691:1693  d0 */\n      dup6\n        /* \"contracts/libraries/UniswapV3.sol\":1687:1693  10**d0 */\n      0xff\n      and\n        /* \"contracts/libraries/UniswapV3.sol\":1687:1689  10 */\n      0x0a\n        /* \"contracts/libraries/UniswapV3.sol\":1687:1693  10**d0 */\n      exp\n        /* \"contracts/libraries/UniswapV3.sol\":1695:1697  t0 */\n      dup14\n        /* \"contracts/libraries/UniswapV3.sol\":1698:1700  t1 */\n      dup14\n        /* \"contracts/libraries/UniswapV3.sol\":1645:1673  OracleLibrary.getQuoteAtTick */\n      tag_32\n        /* \"contracts/libraries/UniswapV3.sol\":1645:1701  OracleLibrary.getQuoteAtTick(tick,uint128(10**d0),t0,t1) */\n      jump\t// in\n    tag_86:\n        /* \"contracts/libraries/UniswapV3.sol\":1625:1701  uint256 amountOut = OracleLibrary.getQuoteAtTick(tick,uint128(10**d0),t0,t1) */\n      swap1\n      pop\n        /* \"contracts/libraries/UniswapV3.sol\":1720:1721  0 */\n      0x00\n        /* \"contracts/libraries/UniswapV3.sol\":1715:1716  i */\n      dup7\n        /* \"contracts/libraries/UniswapV3.sol\":1715:1721  i == 0 */\n      0xff\n      and\n      eq\n        /* \"contracts/libraries/UniswapV3.sol\":1711:1791  if (i == 0){... */\n      iszero\n      tag_87\n      jumpi\n        /* \"contracts/libraries/UniswapV3.sol\":1744:1753  amountOut */\n      dup1\n        /* \"contracts/libraries/UniswapV3.sol\":1736:1753  price = amountOut */\n      swap9\n      pop\n        /* \"contracts/libraries/UniswapV3.sol\":1773:1777  fees */\n      dup7\n        /* \"contracts/libraries/UniswapV3.sol\":1778:1779  i */\n      dup7\n        /* \"contracts/libraries/UniswapV3.sol\":1773:1780  fees[i] */\n      0xff\n      and\n      0x04\n      dup2\n      lt\n      tag_88\n      jumpi\n      invalid\n    tag_88:\n      0x20\n      mul\n      add\n      mload\n        /* \"contracts/libraries/UniswapV3.sol\":1767:1780  fee = fees[i] */\n      0xffff\n      and\n      swap8\n      pop\n        /* \"contracts/libraries/UniswapV3.sol\":1711:1791  if (i == 0){... */\n    tag_87:\n        /* \"contracts/libraries/UniswapV3.sol\":1808:1809  0 */\n      0x00\n        /* \"contracts/libraries/UniswapV3.sol\":1804:1805  i */\n      dup7\n        /* \"contracts/libraries/UniswapV3.sol\":1804:1809  i > 0 */\n      0xff\n      and\n      gt\n        /* \"contracts/libraries/UniswapV3.sol\":1804:1846  i > 0 && (price == 0 || amountOut < price) */\n      dup1\n      iszero\n      tag_89\n      jumpi\n      pop\n        /* \"contracts/libraries/UniswapV3.sol\":1823:1824  0 */\n      0x00\n        /* \"contracts/libraries/UniswapV3.sol\":1814:1819  price */\n      dup10\n        /* \"contracts/libraries/UniswapV3.sol\":1814:1824  price == 0 */\n      eq\n        /* \"contracts/libraries/UniswapV3.sol\":1814:1845  price == 0 || amountOut < price */\n      dup1\n      tag_90\n      jumpi\n      pop\n        /* \"contracts/libraries/UniswapV3.sol\":1840:1845  price */\n      dup9\n        /* \"contracts/libraries/UniswapV3.sol\":1828:1837  amountOut */\n      dup2\n        /* \"contracts/libraries/UniswapV3.sol\":1828:1845  amountOut < price */\n      lt\n        /* \"contracts/libraries/UniswapV3.sol\":1814:1845  price == 0 || amountOut < price */\n    tag_90:\n        /* \"contracts/libraries/UniswapV3.sol\":1804:1846  i > 0 && (price == 0 || amountOut < price) */\n    tag_89:\n        /* \"contracts/libraries/UniswapV3.sol\":1800:1921  if (i > 0 && (price == 0 || amountOut < price)) {... */\n      iszero\n      tag_91\n      jumpi\n        /* \"contracts/libraries/UniswapV3.sol\":1870:1879  amountOut */\n      dup1\n        /* \"contracts/libraries/UniswapV3.sol\":1862:1879  price = amountOut */\n      swap9\n      pop\n        /* \"contracts/libraries/UniswapV3.sol\":1899:1903  fees */\n      dup7\n        /* \"contracts/libraries/UniswapV3.sol\":1904:1905  i */\n      dup7\n        /* \"contracts/libraries/UniswapV3.sol\":1899:1906  fees[i] */\n      0xff\n      and\n      0x04\n      dup2\n      lt\n      tag_92\n      jumpi\n      invalid\n    tag_92:\n      0x20\n      mul\n      add\n      mload\n        /* \"contracts/libraries/UniswapV3.sol\":1893:1906  fee = fees[i] */\n      0xffff\n      and\n      swap8\n      pop\n        /* \"contracts/libraries/UniswapV3.sol\":1800:1921  if (i > 0 && (price == 0 || amountOut < price)) {... */\n    tag_91:\n        /* \"contracts/libraries/UniswapV3.sol\":1200:1931  for(uint8 i=0;i<4;i++){... */\n      pop\n      pop\n      pop\n      pop\n      pop\n    tag_60:\n        /* \"contracts/libraries/UniswapV3.sol\":1218:1221  i++ */\n      dup1\n      dup1\n      0x01\n      add\n      swap2\n      pop\n      pop\n        /* \"contracts/libraries/UniswapV3.sol\":1200:1931  for(uint8 i=0;i<4;i++){... */\n      jump(tag_58)\n    tag_59:\n      pop\n        /* \"contracts/libraries/UniswapV3.sol\":1940:1958  return (price,fee) */\n      pop\n        /* \"contracts/libraries/UniswapV3.sol\":1034:1965  function Price(address factory,address t0,address t1) external view returns (uint256 price,uint24 fee){... */\n      swap4\n      pop\n      swap4\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/libraries/OracleLibrary.sol\":270:927  function consult(address pool, uint32 secondsAgo)... */\n    tag_30:\n        /* \"contracts/libraries/OracleLibrary.sol\":367:377  int24 tick */\n      0x00\n        /* \"contracts/libraries/OracleLibrary.sol\":415:416  0 */\n      dup1\n        /* \"contracts/libraries/OracleLibrary.sol\":401:411  secondsAgo */\n      dup3\n        /* \"contracts/libraries/OracleLibrary.sol\":401:416  secondsAgo != 0 */\n      0xffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/libraries/OracleLibrary.sol\":393:423  require(secondsAgo != 0, 'BP') */\n      tag_94\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x02\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4250000000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_94:\n        /* \"contracts/libraries/OracleLibrary.sol\":434:461  uint32[] memory secondsAgos */\n      0x00\n        /* \"contracts/libraries/OracleLibrary.sol\":477:478  2 */\n      0x02\n        /* \"contracts/libraries/OracleLibrary.sol\":464:479  new uint32[](2) */\n      0xffffffffffffffff\n      dup2\n      gt\n      dup1\n      iszero\n      tag_95\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_95:\n      pop\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_96\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_96:\n      pop\n        /* \"contracts/libraries/OracleLibrary.sol\":434:479  uint32[] memory secondsAgos = new uint32[](2) */\n      swap1\n      pop\n        /* \"contracts/libraries/OracleLibrary.sol\":506:516  secondsAgo */\n      dup3\n        /* \"contracts/libraries/OracleLibrary.sol\":489:500  secondsAgos */\n      dup2\n        /* \"contracts/libraries/OracleLibrary.sol\":501:502  0 */\n      0x00\n        /* \"contracts/libraries/OracleLibrary.sol\":489:503  secondsAgos[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_97\n      jumpi\n      invalid\n    tag_97:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"contracts/libraries/OracleLibrary.sol\":489:516  secondsAgos[0] = secondsAgo */\n      swap1\n      0xffffffff\n      and\n      swap1\n      dup2\n      0xffffffff\n      and\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/libraries/OracleLibrary.sol\":543:544  0 */\n      0x00\n        /* \"contracts/libraries/OracleLibrary.sol\":526:537  secondsAgos */\n      dup2\n        /* \"contracts/libraries/OracleLibrary.sol\":538:539  1 */\n      0x01\n        /* \"contracts/libraries/OracleLibrary.sol\":526:540  secondsAgos[1] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_98\n      jumpi\n      invalid\n    tag_98:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"contracts/libraries/OracleLibrary.sol\":526:544  secondsAgos[1] = 0 */\n      swap1\n      0xffffffff\n      and\n      swap1\n      dup2\n      0xffffffff\n      and\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/libraries/OracleLibrary.sol\":556:586  int56[] memory tickCumulatives */\n      0x00\n        /* \"contracts/libraries/OracleLibrary.sol\":619:623  pool */\n      dup5\n        /* \"contracts/libraries/OracleLibrary.sol\":604:632  IUniswapV3Pool(pool).observe */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x883bdbfd\n        /* \"contracts/libraries/OracleLibrary.sol\":633:644  secondsAgos */\n      dup4\n        /* \"contracts/libraries/OracleLibrary.sol\":604:645  IUniswapV3Pool(pool).observe(secondsAgos) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      0x20\n      mul\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_99:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_101\n      jumpi\n      dup1\n      dup3\n      add\n      mload\n      dup2\n      dup5\n      add\n      mstore\n      0x20\n      dup2\n      add\n      swap1\n      pop\n      jump(tag_99)\n    tag_101:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      swap3\n      pop\n      pop\n      pop\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_102\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_102:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_104\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_104:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x00\n      dup3\n      returndatacopy\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      0x40\n      dup2\n      lt\n      iszero\n      tag_105\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_105:\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      mload(0x40)\n      swap4\n      swap3\n      swap2\n      swap1\n      dup5\n      0x0100000000\n      dup3\n      gt\n      iszero\n      tag_106\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_106:\n      dup4\n      dup3\n      add\n      swap2\n      pop\n      0x20\n      dup3\n      add\n      dup6\n      dup2\n      gt\n      iszero\n      tag_107\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_107:\n      dup3\n      mload\n      dup7\n      0x20\n      dup3\n      mul\n      dup4\n      add\n      gt\n      0x0100000000\n      dup3\n      gt\n      or\n      iszero\n      tag_108\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_108:\n      dup1\n      dup4\n      mstore\n      0x20\n      dup4\n      add\n      swap3\n      pop\n      pop\n      pop\n      swap1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      0x20\n      mul\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_109:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_111\n      jumpi\n      dup1\n      dup3\n      add\n      mload\n      dup2\n      dup5\n      add\n      mstore\n      0x20\n      dup2\n      add\n      swap1\n      pop\n      jump(tag_109)\n    tag_111:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      0x40\n      mstore\n      0x20\n      add\n      dup1\n      mload\n      mload(0x40)\n      swap4\n      swap3\n      swap2\n      swap1\n      dup5\n      0x0100000000\n      dup3\n      gt\n      iszero\n      tag_112\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_112:\n      dup4\n      dup3\n      add\n      swap2\n      pop\n      0x20\n      dup3\n      add\n      dup6\n      dup2\n      gt\n      iszero\n      tag_113\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_113:\n      dup3\n      mload\n      dup7\n      0x20\n      dup3\n      mul\n      dup4\n      add\n      gt\n      0x0100000000\n      dup3\n      gt\n      or\n      iszero\n      tag_114\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_114:\n      dup1\n      dup4\n      mstore\n      0x20\n      dup4\n      add\n      swap3\n      pop\n      pop\n      pop\n      swap1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      0x20\n      mul\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_115:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_117\n      jumpi\n      dup1\n      dup3\n      add\n      mload\n      dup2\n      dup5\n      add\n      mstore\n      0x20\n      dup2\n      add\n      swap1\n      pop\n      jump(tag_115)\n    tag_117:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      0x40\n      mstore\n      pop\n      pop\n      pop\n        /* \"contracts/libraries/OracleLibrary.sol\":555:645  (int56[] memory tickCumulatives, ) =... */\n      pop\n      swap1\n      pop\n        /* \"contracts/libraries/OracleLibrary.sol\":656:682  int56 tickCumulativesDelta */\n      0x00\n        /* \"contracts/libraries/OracleLibrary.sol\":706:721  tickCumulatives */\n      dup2\n        /* \"contracts/libraries/OracleLibrary.sol\":722:723  0 */\n      0x00\n        /* \"contracts/libraries/OracleLibrary.sol\":706:724  tickCumulatives[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_118\n      jumpi\n      invalid\n    tag_118:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/libraries/OracleLibrary.sol\":685:700  tickCumulatives */\n      dup3\n        /* \"contracts/libraries/OracleLibrary.sol\":701:702  1 */\n      0x01\n        /* \"contracts/libraries/OracleLibrary.sol\":685:703  tickCumulatives[1] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_119\n      jumpi\n      invalid\n    tag_119:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/libraries/OracleLibrary.sol\":685:724  tickCumulatives[1] - tickCumulatives[0] */\n      sub\n        /* \"contracts/libraries/OracleLibrary.sol\":656:724  int56 tickCumulativesDelta = tickCumulatives[1] - tickCumulatives[0] */\n      swap1\n      pop\n        /* \"contracts/libraries/OracleLibrary.sol\":773:783  secondsAgo */\n      dup5\n        /* \"contracts/libraries/OracleLibrary.sol\":750:783  tickCumulativesDelta / secondsAgo */\n      0xffffffff\n      and\n        /* \"contracts/libraries/OracleLibrary.sol\":750:770  tickCumulativesDelta */\n      dup2\n        /* \"contracts/libraries/OracleLibrary.sol\":750:783  tickCumulativesDelta / secondsAgo */\n      0x06\n      signextend\n      dup2\n      tag_120\n      jumpi\n      invalid\n    tag_120:\n      sdiv\n        /* \"contracts/libraries/OracleLibrary.sol\":737:784  tick = int24(tickCumulativesDelta / secondsAgo) */\n      swap4\n      pop\n        /* \"contracts/libraries/OracleLibrary.sol\":866:867  0 */\n      0x00\n        /* \"contracts/libraries/OracleLibrary.sol\":843:863  tickCumulativesDelta */\n      dup2\n        /* \"contracts/libraries/OracleLibrary.sol\":843:867  tickCumulativesDelta < 0 */\n      0x06\n      signextend\n      slt\n        /* \"contracts/libraries/OracleLibrary.sol\":843:911  tickCumulativesDelta < 0 && (tickCumulativesDelta % secondsAgo != 0) */\n      dup1\n      iszero\n      tag_121\n      jumpi\n      pop\n        /* \"contracts/libraries/OracleLibrary.sol\":909:910  0 */\n      0x00\n        /* \"contracts/libraries/OracleLibrary.sol\":895:905  secondsAgo */\n      dup6\n        /* \"contracts/libraries/OracleLibrary.sol\":872:905  tickCumulativesDelta % secondsAgo */\n      0xffffffff\n      and\n        /* \"contracts/libraries/OracleLibrary.sol\":872:892  tickCumulativesDelta */\n      dup3\n        /* \"contracts/libraries/OracleLibrary.sol\":872:905  tickCumulativesDelta % secondsAgo */\n      0x06\n      signextend\n      dup2\n      tag_122\n      jumpi\n      invalid\n    tag_122:\n      smod\n        /* \"contracts/libraries/OracleLibrary.sol\":872:910  tickCumulativesDelta % secondsAgo != 0 */\n      0x06\n      signextend\n      eq\n      iszero\n        /* \"contracts/libraries/OracleLibrary.sol\":843:911  tickCumulativesDelta < 0 && (tickCumulativesDelta % secondsAgo != 0) */\n    tag_121:\n        /* \"contracts/libraries/OracleLibrary.sol\":839:919  if (tickCumulativesDelta < 0 && (tickCumulativesDelta % secondsAgo != 0)) tick-- */\n      iszero\n      tag_123\n      jumpi\n        /* \"contracts/libraries/OracleLibrary.sol\":913:919  tick-- */\n      dup4\n      dup1\n      0x01\n      swap1\n      sub\n      swap5\n      pop\n      pop\n        /* \"contracts/libraries/OracleLibrary.sol\":839:919  if (tickCumulativesDelta < 0 && (tickCumulativesDelta % secondsAgo != 0)) tick-- */\n    tag_123:\n        /* \"contracts/libraries/OracleLibrary.sol\":270:927  function consult(address pool, uint32 secondsAgo)... */\n      pop\n      pop\n      pop\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/libraries/OracleLibrary.sol\":934:1889  function getQuoteAtTick(... */\n    tag_32:\n        /* \"contracts/libraries/OracleLibrary.sol\":1090:1109  uint256 quoteAmount */\n      0x00\n        /* \"contracts/libraries/OracleLibrary.sol\":1121:1141  uint160 sqrtRatioX96 */\n      dup1\n        /* \"contracts/libraries/OracleLibrary.sol\":1144:1177  TickMath.getSqrtRatioAtTick(tick) */\n      tag_125\n        /* \"contracts/libraries/OracleLibrary.sol\":1172:1176  tick */\n      dup7\n        /* \"contracts/libraries/OracleLibrary.sol\":1144:1171  TickMath.getSqrtRatioAtTick */\n      tag_126\n        /* \"contracts/libraries/OracleLibrary.sol\":1144:1177  TickMath.getSqrtRatioAtTick(tick) */\n      jump\t// in\n    tag_125:\n        /* \"contracts/libraries/OracleLibrary.sol\":1121:1177  uint160 sqrtRatioX96 = TickMath.getSqrtRatioAtTick(tick) */\n      swap1\n      pop\n        /* \"contracts/libraries/OracleLibrary.sol\":1312:1329  type(uint128).max */\n      0xffffffffffffffffffffffffffffffff\n        /* \"contracts/libraries/OracleLibrary.sol\":1296:1329  sqrtRatioX96 <= type(uint128).max */\n      dup1\n      and\n        /* \"contracts/libraries/OracleLibrary.sol\":1296:1308  sqrtRatioX96 */\n      dup2\n        /* \"contracts/libraries/OracleLibrary.sol\":1296:1329  sqrtRatioX96 <= type(uint128).max */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      gt\n        /* \"contracts/libraries/OracleLibrary.sol\":1292:1883  if (sqrtRatioX96 <= type(uint128).max) {... */\n      tag_127\n      jumpi\n        /* \"contracts/libraries/OracleLibrary.sol\":1345:1362  uint256 ratioX192 */\n      0x00\n        /* \"contracts/libraries/OracleLibrary.sol\":1389:1401  sqrtRatioX96 */\n      dup2\n        /* \"contracts/libraries/OracleLibrary.sol\":1365:1401  uint256(sqrtRatioX96) * sqrtRatioX96 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/libraries/OracleLibrary.sol\":1373:1385  sqrtRatioX96 */\n      dup3\n        /* \"contracts/libraries/OracleLibrary.sol\":1365:1386  uint256(sqrtRatioX96) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/libraries/OracleLibrary.sol\":1365:1401  uint256(sqrtRatioX96) * sqrtRatioX96 */\n      mul\n        /* \"contracts/libraries/OracleLibrary.sol\":1345:1401  uint256 ratioX192 = uint256(sqrtRatioX96) * sqrtRatioX96 */\n      swap1\n      pop\n        /* \"contracts/libraries/OracleLibrary.sol\":1441:1451  quoteToken */\n      dup4\n        /* \"contracts/libraries/OracleLibrary.sol\":1429:1451  baseToken < quoteToken */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/libraries/OracleLibrary.sol\":1429:1438  baseToken */\n      dup6\n        /* \"contracts/libraries/OracleLibrary.sol\":1429:1451  baseToken < quoteToken */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      lt\n        /* \"contracts/libraries/OracleLibrary.sol\":1429:1585  baseToken < quoteToken... */\n      tag_128\n      jumpi\n        /* \"contracts/libraries/OracleLibrary.sol\":1537:1585  FullMath.mulDiv(1 << 192, baseAmount, ratioX192) */\n      tag_129\n        /* \"contracts/libraries/OracleLibrary.sol\":1553:1561  1 << 192 */\n      0x01000000000000000000000000000000000000000000000000\n        /* \"contracts/libraries/OracleLibrary.sol\":1563:1573  baseAmount */\n      dup8\n        /* \"contracts/libraries/OracleLibrary.sol\":1537:1585  FullMath.mulDiv(1 << 192, baseAmount, ratioX192) */\n      0xffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/libraries/OracleLibrary.sol\":1575:1584  ratioX192 */\n      dup4\n        /* \"contracts/libraries/OracleLibrary.sol\":1537:1552  FullMath.mulDiv */\n      tag_130\n        /* \"contracts/libraries/OracleLibrary.sol\":1537:1585  FullMath.mulDiv(1 << 192, baseAmount, ratioX192) */\n      jump\t// in\n    tag_129:\n        /* \"contracts/libraries/OracleLibrary.sol\":1429:1585  baseToken < quoteToken... */\n      jump(tag_131)\n    tag_128:\n        /* \"contracts/libraries/OracleLibrary.sol\":1470:1518  FullMath.mulDiv(ratioX192, baseAmount, 1 << 192) */\n      tag_132\n        /* \"contracts/libraries/OracleLibrary.sol\":1486:1495  ratioX192 */\n      dup2\n        /* \"contracts/libraries/OracleLibrary.sol\":1497:1507  baseAmount */\n      dup8\n        /* \"contracts/libraries/OracleLibrary.sol\":1470:1518  FullMath.mulDiv(ratioX192, baseAmount, 1 << 192) */\n      0xffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/libraries/OracleLibrary.sol\":1509:1517  1 << 192 */\n      0x01000000000000000000000000000000000000000000000000\n        /* \"contracts/libraries/OracleLibrary.sol\":1470:1485  FullMath.mulDiv */\n      tag_130\n        /* \"contracts/libraries/OracleLibrary.sol\":1470:1518  FullMath.mulDiv(ratioX192, baseAmount, 1 << 192) */\n      jump\t// in\n    tag_132:\n        /* \"contracts/libraries/OracleLibrary.sol\":1429:1585  baseToken < quoteToken... */\n    tag_131:\n        /* \"contracts/libraries/OracleLibrary.sol\":1415:1585  quoteAmount = baseToken < quoteToken... */\n      swap3\n      pop\n        /* \"contracts/libraries/OracleLibrary.sol\":1292:1883  if (sqrtRatioX96 <= type(uint128).max) {... */\n      pop\n      jump(tag_133)\n    tag_127:\n        /* \"contracts/libraries/OracleLibrary.sol\":1616:1633  uint256 ratioX128 */\n      0x00\n        /* \"contracts/libraries/OracleLibrary.sol\":1636:1688  FullMath.mulDiv(sqrtRatioX96, sqrtRatioX96, 1 << 64) */\n      tag_134\n        /* \"contracts/libraries/OracleLibrary.sol\":1652:1664  sqrtRatioX96 */\n      dup3\n        /* \"contracts/libraries/OracleLibrary.sol\":1636:1688  FullMath.mulDiv(sqrtRatioX96, sqrtRatioX96, 1 << 64) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/libraries/OracleLibrary.sol\":1666:1678  sqrtRatioX96 */\n      dup4\n        /* \"contracts/libraries/OracleLibrary.sol\":1636:1688  FullMath.mulDiv(sqrtRatioX96, sqrtRatioX96, 1 << 64) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/libraries/OracleLibrary.sol\":1680:1687  1 << 64 */\n      0x010000000000000000\n        /* \"contracts/libraries/OracleLibrary.sol\":1636:1651  FullMath.mulDiv */\n      tag_130\n        /* \"contracts/libraries/OracleLibrary.sol\":1636:1688  FullMath.mulDiv(sqrtRatioX96, sqrtRatioX96, 1 << 64) */\n      jump\t// in\n    tag_134:\n        /* \"contracts/libraries/OracleLibrary.sol\":1616:1688  uint256 ratioX128 = FullMath.mulDiv(sqrtRatioX96, sqrtRatioX96, 1 << 64) */\n      swap1\n      pop\n        /* \"contracts/libraries/OracleLibrary.sol\":1728:1738  quoteToken */\n      dup4\n        /* \"contracts/libraries/OracleLibrary.sol\":1716:1738  baseToken < quoteToken */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/libraries/OracleLibrary.sol\":1716:1725  baseToken */\n      dup6\n        /* \"contracts/libraries/OracleLibrary.sol\":1716:1738  baseToken < quoteToken */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      lt\n        /* \"contracts/libraries/OracleLibrary.sol\":1716:1872  baseToken < quoteToken... */\n      tag_135\n      jumpi\n        /* \"contracts/libraries/OracleLibrary.sol\":1824:1872  FullMath.mulDiv(1 << 128, baseAmount, ratioX128) */\n      tag_136\n        /* \"contracts/libraries/OracleLibrary.sol\":1840:1848  1 << 128 */\n      0x0100000000000000000000000000000000\n        /* \"contracts/libraries/OracleLibrary.sol\":1850:1860  baseAmount */\n      dup8\n        /* \"contracts/libraries/OracleLibrary.sol\":1824:1872  FullMath.mulDiv(1 << 128, baseAmount, ratioX128) */\n      0xffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/libraries/OracleLibrary.sol\":1862:1871  ratioX128 */\n      dup4\n        /* \"contracts/libraries/OracleLibrary.sol\":1824:1839  FullMath.mulDiv */\n      tag_130\n        /* \"contracts/libraries/OracleLibrary.sol\":1824:1872  FullMath.mulDiv(1 << 128, baseAmount, ratioX128) */\n      jump\t// in\n    tag_136:\n        /* \"contracts/libraries/OracleLibrary.sol\":1716:1872  baseToken < quoteToken... */\n      jump(tag_137)\n    tag_135:\n        /* \"contracts/libraries/OracleLibrary.sol\":1757:1805  FullMath.mulDiv(ratioX128, baseAmount, 1 << 128) */\n      tag_138\n        /* \"contracts/libraries/OracleLibrary.sol\":1773:1782  ratioX128 */\n      dup2\n        /* \"contracts/libraries/OracleLibrary.sol\":1784:1794  baseAmount */\n      dup8\n        /* \"contracts/libraries/OracleLibrary.sol\":1757:1805  FullMath.mulDiv(ratioX128, baseAmount, 1 << 128) */\n      0xffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/libraries/OracleLibrary.sol\":1796:1804  1 << 128 */\n      0x0100000000000000000000000000000000\n        /* \"contracts/libraries/OracleLibrary.sol\":1757:1772  FullMath.mulDiv */\n      tag_130\n        /* \"contracts/libraries/OracleLibrary.sol\":1757:1805  FullMath.mulDiv(ratioX128, baseAmount, 1 << 128) */\n      jump\t// in\n    tag_138:\n        /* \"contracts/libraries/OracleLibrary.sol\":1716:1872  baseToken < quoteToken... */\n    tag_137:\n        /* \"contracts/libraries/OracleLibrary.sol\":1702:1872  quoteAmount = baseToken < quoteToken... */\n      swap3\n      pop\n        /* \"contracts/libraries/OracleLibrary.sol\":1292:1883  if (sqrtRatioX96 <= type(uint128).max) {... */\n      pop\n    tag_133:\n        /* \"contracts/libraries/OracleLibrary.sol\":934:1889  function getQuoteAtTick(... */\n      pop\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":1362:3942  function getSqrtRatioAtTick(int24 tick) internal pure returns (uint160 sqrtPriceX96) {... */\n    tag_126:\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":1425:1445  uint160 sqrtPriceX96 */\n      0x00\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":1457:1472  uint256 absTick */\n      dup1\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":1482:1483  0 */\n      0x00\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":1475:1479  tick */\n      dup4\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":1475:1483  tick < 0 */\n      0x02\n      signextend\n      slt\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":1475:1532  tick < 0 ? uint256(-int256(tick)) : uint256(int256(tick)) */\n      tag_140\n      jumpi\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":1526:1530  tick */\n      dup3\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":1519:1531  int256(tick) */\n      0x02\n      signextend\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":1475:1532  tick < 0 ? uint256(-int256(tick)) : uint256(int256(tick)) */\n      jump(tag_141)\n    tag_140:\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":1502:1506  tick */\n      dup3\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":1495:1507  int256(tick) */\n      0x02\n      signextend\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":1494:1507  -int256(tick) */\n      0x00\n      sub\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":1475:1532  tick < 0 ? uint256(-int256(tick)) : uint256(int256(tick)) */\n    tag_141:\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":1457:1532  uint256 absTick = tick < 0 ? uint256(-int256(tick)) : uint256(int256(tick)) */\n      swap1\n      pop\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":484:491  -887272 */\n      0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffff27618\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":644:653  -MIN_TICK */\n      0x00\n      sub\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":1561:1578  uint256(MAX_TICK) */\n      0x02\n      signextend\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":1550:1557  absTick */\n      dup2\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":1550:1578  absTick <= uint256(MAX_TICK) */\n      gt\n      iszero\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":1542:1584  require(absTick <= uint256(MAX_TICK), 'T') */\n      tag_142\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x01\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x5400000000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_142:\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":1595:1608  uint256 ratio */\n      0x00\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":1628:1629  0 */\n      dup1\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":1621:1624  0x1 */\n      0x01\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":1611:1618  absTick */\n      dup4\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":1611:1624  absTick & 0x1 */\n      and\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":1611:1629  absTick & 0x1 != 0 */\n      eq\n      iszero\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":1611:1704  absTick & 0x1 != 0 ? 0xfffcb933bd6fad37aa2d162d1a594001 : 0x100000000000000000000000000000000 */\n      tag_143\n      jumpi\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":1669:1704  0x100000000000000000000000000000000 */\n      0x0100000000000000000000000000000000\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":1611:1704  absTick & 0x1 != 0 ? 0xfffcb933bd6fad37aa2d162d1a594001 : 0x100000000000000000000000000000000 */\n      jump(tag_144)\n    tag_143:\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":1632:1666  0xfffcb933bd6fad37aa2d162d1a594001 */\n      0xfffcb933bd6fad37aa2d162d1a594001\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":1611:1704  absTick & 0x1 != 0 ? 0xfffcb933bd6fad37aa2d162d1a594001 : 0x100000000000000000000000000000000 */\n    tag_144:\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":1595:1704  uint256 ratio = absTick & 0x1 != 0 ? 0xfffcb933bd6fad37aa2d162d1a594001 : 0x100000000000000000000000000000000 */\n      0xffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      pop\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":1735:1736  0 */\n      0x00\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":1728:1731  0x2 */\n      0x02\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":1718:1725  absTick */\n      dup4\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":1718:1731  absTick & 0x2 */\n      and\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":1718:1736  absTick & 0x2 != 0 */\n      eq\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":1714:1797  if (absTick & 0x2 != 0) ratio = (ratio * 0xfff97272373d413259a46990580e213a) >> 128 */\n      tag_145\n      jumpi\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":1794:1797  128 */\n      0x80\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":1755:1789  0xfff97272373d413259a46990580e213a */\n      0xfff97272373d413259a46990580e213a\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":1747:1752  ratio */\n      dup3\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":1747:1789  ratio * 0xfff97272373d413259a46990580e213a */\n      mul\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":1746:1797  (ratio * 0xfff97272373d413259a46990580e213a) >> 128 */\n      swap1\n      shr\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":1738:1797  ratio = (ratio * 0xfff97272373d413259a46990580e213a) >> 128 */\n      swap1\n      pop\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":1714:1797  if (absTick & 0x2 != 0) ratio = (ratio * 0xfff97272373d413259a46990580e213a) >> 128 */\n    tag_145:\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":1828:1829  0 */\n      0x00\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":1821:1824  0x4 */\n      0x04\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":1811:1818  absTick */\n      dup4\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":1811:1824  absTick & 0x4 */\n      and\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":1811:1829  absTick & 0x4 != 0 */\n      eq\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":1807:1890  if (absTick & 0x4 != 0) ratio = (ratio * 0xfff2e50f5f656932ef12357cf3c7fdcc) >> 128 */\n      tag_146\n      jumpi\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":1887:1890  128 */\n      0x80\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":1848:1882  0xfff2e50f5f656932ef12357cf3c7fdcc */\n      0xfff2e50f5f656932ef12357cf3c7fdcc\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":1840:1845  ratio */\n      dup3\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":1840:1882  ratio * 0xfff2e50f5f656932ef12357cf3c7fdcc */\n      mul\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":1839:1890  (ratio * 0xfff2e50f5f656932ef12357cf3c7fdcc) >> 128 */\n      swap1\n      shr\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":1831:1890  ratio = (ratio * 0xfff2e50f5f656932ef12357cf3c7fdcc) >> 128 */\n      swap1\n      pop\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":1807:1890  if (absTick & 0x4 != 0) ratio = (ratio * 0xfff2e50f5f656932ef12357cf3c7fdcc) >> 128 */\n    tag_146:\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":1921:1922  0 */\n      0x00\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":1914:1917  0x8 */\n      0x08\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":1904:1911  absTick */\n      dup4\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":1904:1917  absTick & 0x8 */\n      and\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":1904:1922  absTick & 0x8 != 0 */\n      eq\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":1900:1983  if (absTick & 0x8 != 0) ratio = (ratio * 0xffe5caca7e10e4e61c3624eaa0941cd0) >> 128 */\n      tag_147\n      jumpi\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":1980:1983  128 */\n      0x80\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":1941:1975  0xffe5caca7e10e4e61c3624eaa0941cd0 */\n      0xffe5caca7e10e4e61c3624eaa0941cd0\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":1933:1938  ratio */\n      dup3\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":1933:1975  ratio * 0xffe5caca7e10e4e61c3624eaa0941cd0 */\n      mul\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":1932:1983  (ratio * 0xffe5caca7e10e4e61c3624eaa0941cd0) >> 128 */\n      swap1\n      shr\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":1924:1983  ratio = (ratio * 0xffe5caca7e10e4e61c3624eaa0941cd0) >> 128 */\n      swap1\n      pop\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":1900:1983  if (absTick & 0x8 != 0) ratio = (ratio * 0xffe5caca7e10e4e61c3624eaa0941cd0) >> 128 */\n    tag_147:\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2015:2016  0 */\n      0x00\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2007:2011  0x10 */\n      0x10\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":1997:2004  absTick */\n      dup4\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":1997:2011  absTick & 0x10 */\n      and\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":1997:2016  absTick & 0x10 != 0 */\n      eq\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":1993:2077  if (absTick & 0x10 != 0) ratio = (ratio * 0xffcb9843d60f6159c9db58835c926644) >> 128 */\n      tag_148\n      jumpi\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2074:2077  128 */\n      0x80\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2035:2069  0xffcb9843d60f6159c9db58835c926644 */\n      0xffcb9843d60f6159c9db58835c926644\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2027:2032  ratio */\n      dup3\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2027:2069  ratio * 0xffcb9843d60f6159c9db58835c926644 */\n      mul\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2026:2077  (ratio * 0xffcb9843d60f6159c9db58835c926644) >> 128 */\n      swap1\n      shr\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2018:2077  ratio = (ratio * 0xffcb9843d60f6159c9db58835c926644) >> 128 */\n      swap1\n      pop\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":1993:2077  if (absTick & 0x10 != 0) ratio = (ratio * 0xffcb9843d60f6159c9db58835c926644) >> 128 */\n    tag_148:\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2109:2110  0 */\n      0x00\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2101:2105  0x20 */\n      0x20\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2091:2098  absTick */\n      dup4\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2091:2105  absTick & 0x20 */\n      and\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2091:2110  absTick & 0x20 != 0 */\n      eq\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2087:2171  if (absTick & 0x20 != 0) ratio = (ratio * 0xff973b41fa98c081472e6896dfb254c0) >> 128 */\n      tag_149\n      jumpi\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2168:2171  128 */\n      0x80\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2129:2163  0xff973b41fa98c081472e6896dfb254c0 */\n      0xff973b41fa98c081472e6896dfb254c0\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2121:2126  ratio */\n      dup3\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2121:2163  ratio * 0xff973b41fa98c081472e6896dfb254c0 */\n      mul\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2120:2171  (ratio * 0xff973b41fa98c081472e6896dfb254c0) >> 128 */\n      swap1\n      shr\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2112:2171  ratio = (ratio * 0xff973b41fa98c081472e6896dfb254c0) >> 128 */\n      swap1\n      pop\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2087:2171  if (absTick & 0x20 != 0) ratio = (ratio * 0xff973b41fa98c081472e6896dfb254c0) >> 128 */\n    tag_149:\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2203:2204  0 */\n      0x00\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2195:2199  0x40 */\n      0x40\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2185:2192  absTick */\n      dup4\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2185:2199  absTick & 0x40 */\n      and\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2185:2204  absTick & 0x40 != 0 */\n      eq\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2181:2265  if (absTick & 0x40 != 0) ratio = (ratio * 0xff2ea16466c96a3843ec78b326b52861) >> 128 */\n      tag_150\n      jumpi\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2262:2265  128 */\n      0x80\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2223:2257  0xff2ea16466c96a3843ec78b326b52861 */\n      0xff2ea16466c96a3843ec78b326b52861\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2215:2220  ratio */\n      dup3\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2215:2257  ratio * 0xff2ea16466c96a3843ec78b326b52861 */\n      mul\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2214:2265  (ratio * 0xff2ea16466c96a3843ec78b326b52861) >> 128 */\n      swap1\n      shr\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2206:2265  ratio = (ratio * 0xff2ea16466c96a3843ec78b326b52861) >> 128 */\n      swap1\n      pop\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2181:2265  if (absTick & 0x40 != 0) ratio = (ratio * 0xff2ea16466c96a3843ec78b326b52861) >> 128 */\n    tag_150:\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2297:2298  0 */\n      0x00\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2289:2293  0x80 */\n      0x80\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2279:2286  absTick */\n      dup4\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2279:2293  absTick & 0x80 */\n      and\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2279:2298  absTick & 0x80 != 0 */\n      eq\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2275:2359  if (absTick & 0x80 != 0) ratio = (ratio * 0xfe5dee046a99a2a811c461f1969c3053) >> 128 */\n      tag_151\n      jumpi\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2356:2359  128 */\n      0x80\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2317:2351  0xfe5dee046a99a2a811c461f1969c3053 */\n      0xfe5dee046a99a2a811c461f1969c3053\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2309:2314  ratio */\n      dup3\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2309:2351  ratio * 0xfe5dee046a99a2a811c461f1969c3053 */\n      mul\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2308:2359  (ratio * 0xfe5dee046a99a2a811c461f1969c3053) >> 128 */\n      swap1\n      shr\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2300:2359  ratio = (ratio * 0xfe5dee046a99a2a811c461f1969c3053) >> 128 */\n      swap1\n      pop\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2275:2359  if (absTick & 0x80 != 0) ratio = (ratio * 0xfe5dee046a99a2a811c461f1969c3053) >> 128 */\n    tag_151:\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2392:2393  0 */\n      0x00\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2383:2388  0x100 */\n      0x0100\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2373:2380  absTick */\n      dup4\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2373:2388  absTick & 0x100 */\n      and\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2373:2393  absTick & 0x100 != 0 */\n      eq\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2369:2454  if (absTick & 0x100 != 0) ratio = (ratio * 0xfcbe86c7900a88aedcffc83b479aa3a4) >> 128 */\n      tag_152\n      jumpi\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2451:2454  128 */\n      0x80\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2412:2446  0xfcbe86c7900a88aedcffc83b479aa3a4 */\n      0xfcbe86c7900a88aedcffc83b479aa3a4\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2404:2409  ratio */\n      dup3\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2404:2446  ratio * 0xfcbe86c7900a88aedcffc83b479aa3a4 */\n      mul\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2403:2454  (ratio * 0xfcbe86c7900a88aedcffc83b479aa3a4) >> 128 */\n      swap1\n      shr\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2395:2454  ratio = (ratio * 0xfcbe86c7900a88aedcffc83b479aa3a4) >> 128 */\n      swap1\n      pop\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2369:2454  if (absTick & 0x100 != 0) ratio = (ratio * 0xfcbe86c7900a88aedcffc83b479aa3a4) >> 128 */\n    tag_152:\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2487:2488  0 */\n      0x00\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2478:2483  0x200 */\n      0x0200\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2468:2475  absTick */\n      dup4\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2468:2483  absTick & 0x200 */\n      and\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2468:2488  absTick & 0x200 != 0 */\n      eq\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2464:2549  if (absTick & 0x200 != 0) ratio = (ratio * 0xf987a7253ac413176f2b074cf7815e54) >> 128 */\n      tag_153\n      jumpi\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2546:2549  128 */\n      0x80\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2507:2541  0xf987a7253ac413176f2b074cf7815e54 */\n      0xf987a7253ac413176f2b074cf7815e54\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2499:2504  ratio */\n      dup3\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2499:2541  ratio * 0xf987a7253ac413176f2b074cf7815e54 */\n      mul\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2498:2549  (ratio * 0xf987a7253ac413176f2b074cf7815e54) >> 128 */\n      swap1\n      shr\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2490:2549  ratio = (ratio * 0xf987a7253ac413176f2b074cf7815e54) >> 128 */\n      swap1\n      pop\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2464:2549  if (absTick & 0x200 != 0) ratio = (ratio * 0xf987a7253ac413176f2b074cf7815e54) >> 128 */\n    tag_153:\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2582:2583  0 */\n      0x00\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2573:2578  0x400 */\n      0x0400\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2563:2570  absTick */\n      dup4\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2563:2578  absTick & 0x400 */\n      and\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2563:2583  absTick & 0x400 != 0 */\n      eq\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2559:2644  if (absTick & 0x400 != 0) ratio = (ratio * 0xf3392b0822b70005940c7a398e4b70f3) >> 128 */\n      tag_154\n      jumpi\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2641:2644  128 */\n      0x80\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2602:2636  0xf3392b0822b70005940c7a398e4b70f3 */\n      0xf3392b0822b70005940c7a398e4b70f3\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2594:2599  ratio */\n      dup3\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2594:2636  ratio * 0xf3392b0822b70005940c7a398e4b70f3 */\n      mul\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2593:2644  (ratio * 0xf3392b0822b70005940c7a398e4b70f3) >> 128 */\n      swap1\n      shr\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2585:2644  ratio = (ratio * 0xf3392b0822b70005940c7a398e4b70f3) >> 128 */\n      swap1\n      pop\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2559:2644  if (absTick & 0x400 != 0) ratio = (ratio * 0xf3392b0822b70005940c7a398e4b70f3) >> 128 */\n    tag_154:\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2677:2678  0 */\n      0x00\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2668:2673  0x800 */\n      0x0800\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2658:2665  absTick */\n      dup4\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2658:2673  absTick & 0x800 */\n      and\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2658:2678  absTick & 0x800 != 0 */\n      eq\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2654:2739  if (absTick & 0x800 != 0) ratio = (ratio * 0xe7159475a2c29b7443b29c7fa6e889d9) >> 128 */\n      tag_155\n      jumpi\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2736:2739  128 */\n      0x80\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2697:2731  0xe7159475a2c29b7443b29c7fa6e889d9 */\n      0xe7159475a2c29b7443b29c7fa6e889d9\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2689:2694  ratio */\n      dup3\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2689:2731  ratio * 0xe7159475a2c29b7443b29c7fa6e889d9 */\n      mul\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2688:2739  (ratio * 0xe7159475a2c29b7443b29c7fa6e889d9) >> 128 */\n      swap1\n      shr\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2680:2739  ratio = (ratio * 0xe7159475a2c29b7443b29c7fa6e889d9) >> 128 */\n      swap1\n      pop\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2654:2739  if (absTick & 0x800 != 0) ratio = (ratio * 0xe7159475a2c29b7443b29c7fa6e889d9) >> 128 */\n    tag_155:\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2773:2774  0 */\n      0x00\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2763:2769  0x1000 */\n      0x1000\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2753:2760  absTick */\n      dup4\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2753:2769  absTick & 0x1000 */\n      and\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2753:2774  absTick & 0x1000 != 0 */\n      eq\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2749:2835  if (absTick & 0x1000 != 0) ratio = (ratio * 0xd097f3bdfd2022b8845ad8f792aa5825) >> 128 */\n      tag_156\n      jumpi\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2832:2835  128 */\n      0x80\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2793:2827  0xd097f3bdfd2022b8845ad8f792aa5825 */\n      0xd097f3bdfd2022b8845ad8f792aa5825\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2785:2790  ratio */\n      dup3\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2785:2827  ratio * 0xd097f3bdfd2022b8845ad8f792aa5825 */\n      mul\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2784:2835  (ratio * 0xd097f3bdfd2022b8845ad8f792aa5825) >> 128 */\n      swap1\n      shr\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2776:2835  ratio = (ratio * 0xd097f3bdfd2022b8845ad8f792aa5825) >> 128 */\n      swap1\n      pop\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2749:2835  if (absTick & 0x1000 != 0) ratio = (ratio * 0xd097f3bdfd2022b8845ad8f792aa5825) >> 128 */\n    tag_156:\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2869:2870  0 */\n      0x00\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2859:2865  0x2000 */\n      0x2000\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2849:2856  absTick */\n      dup4\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2849:2865  absTick & 0x2000 */\n      and\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2849:2870  absTick & 0x2000 != 0 */\n      eq\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2845:2931  if (absTick & 0x2000 != 0) ratio = (ratio * 0xa9f746462d870fdf8a65dc1f90e061e5) >> 128 */\n      tag_157\n      jumpi\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2928:2931  128 */\n      0x80\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2889:2923  0xa9f746462d870fdf8a65dc1f90e061e5 */\n      0xa9f746462d870fdf8a65dc1f90e061e5\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2881:2886  ratio */\n      dup3\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2881:2923  ratio * 0xa9f746462d870fdf8a65dc1f90e061e5 */\n      mul\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2880:2931  (ratio * 0xa9f746462d870fdf8a65dc1f90e061e5) >> 128 */\n      swap1\n      shr\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2872:2931  ratio = (ratio * 0xa9f746462d870fdf8a65dc1f90e061e5) >> 128 */\n      swap1\n      pop\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2845:2931  if (absTick & 0x2000 != 0) ratio = (ratio * 0xa9f746462d870fdf8a65dc1f90e061e5) >> 128 */\n    tag_157:\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2965:2966  0 */\n      0x00\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2955:2961  0x4000 */\n      0x4000\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2945:2952  absTick */\n      dup4\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2945:2961  absTick & 0x4000 */\n      and\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2945:2966  absTick & 0x4000 != 0 */\n      eq\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2941:3027  if (absTick & 0x4000 != 0) ratio = (ratio * 0x70d869a156d2a1b890bb3df62baf32f7) >> 128 */\n      tag_158\n      jumpi\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":3024:3027  128 */\n      0x80\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2985:3019  0x70d869a156d2a1b890bb3df62baf32f7 */\n      0x70d869a156d2a1b890bb3df62baf32f7\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2977:2982  ratio */\n      dup3\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2977:3019  ratio * 0x70d869a156d2a1b890bb3df62baf32f7 */\n      mul\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2976:3027  (ratio * 0x70d869a156d2a1b890bb3df62baf32f7) >> 128 */\n      swap1\n      shr\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2968:3027  ratio = (ratio * 0x70d869a156d2a1b890bb3df62baf32f7) >> 128 */\n      swap1\n      pop\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":2941:3027  if (absTick & 0x4000 != 0) ratio = (ratio * 0x70d869a156d2a1b890bb3df62baf32f7) >> 128 */\n    tag_158:\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":3061:3062  0 */\n      0x00\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":3051:3057  0x8000 */\n      0x8000\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":3041:3048  absTick */\n      dup4\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":3041:3057  absTick & 0x8000 */\n      and\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":3041:3062  absTick & 0x8000 != 0 */\n      eq\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":3037:3123  if (absTick & 0x8000 != 0) ratio = (ratio * 0x31be135f97d08fd981231505542fcfa6) >> 128 */\n      tag_159\n      jumpi\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":3120:3123  128 */\n      0x80\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":3081:3115  0x31be135f97d08fd981231505542fcfa6 */\n      0x31be135f97d08fd981231505542fcfa6\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":3073:3078  ratio */\n      dup3\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":3073:3115  ratio * 0x31be135f97d08fd981231505542fcfa6 */\n      mul\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":3072:3123  (ratio * 0x31be135f97d08fd981231505542fcfa6) >> 128 */\n      swap1\n      shr\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":3064:3123  ratio = (ratio * 0x31be135f97d08fd981231505542fcfa6) >> 128 */\n      swap1\n      pop\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":3037:3123  if (absTick & 0x8000 != 0) ratio = (ratio * 0x31be135f97d08fd981231505542fcfa6) >> 128 */\n    tag_159:\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":3158:3159  0 */\n      0x00\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":3147:3154  0x10000 */\n      0x010000\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":3137:3144  absTick */\n      dup4\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":3137:3154  absTick & 0x10000 */\n      and\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":3137:3159  absTick & 0x10000 != 0 */\n      eq\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":3133:3219  if (absTick & 0x10000 != 0) ratio = (ratio * 0x9aa508b5b7a84e1c677de54f3e99bc9) >> 128 */\n      tag_160\n      jumpi\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":3216:3219  128 */\n      0x80\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":3178:3211  0x9aa508b5b7a84e1c677de54f3e99bc9 */\n      0x09aa508b5b7a84e1c677de54f3e99bc9\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":3170:3175  ratio */\n      dup3\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":3170:3211  ratio * 0x9aa508b5b7a84e1c677de54f3e99bc9 */\n      mul\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":3169:3219  (ratio * 0x9aa508b5b7a84e1c677de54f3e99bc9) >> 128 */\n      swap1\n      shr\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":3161:3219  ratio = (ratio * 0x9aa508b5b7a84e1c677de54f3e99bc9) >> 128 */\n      swap1\n      pop\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":3133:3219  if (absTick & 0x10000 != 0) ratio = (ratio * 0x9aa508b5b7a84e1c677de54f3e99bc9) >> 128 */\n    tag_160:\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":3254:3255  0 */\n      0x00\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":3243:3250  0x20000 */\n      0x020000\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":3233:3240  absTick */\n      dup4\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":3233:3250  absTick & 0x20000 */\n      and\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":3233:3255  absTick & 0x20000 != 0 */\n      eq\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":3229:3314  if (absTick & 0x20000 != 0) ratio = (ratio * 0x5d6af8dedb81196699c329225ee604) >> 128 */\n      tag_161\n      jumpi\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":3311:3314  128 */\n      0x80\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":3274:3306  0x5d6af8dedb81196699c329225ee604 */\n      0x5d6af8dedb81196699c329225ee604\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":3266:3271  ratio */\n      dup3\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":3266:3306  ratio * 0x5d6af8dedb81196699c329225ee604 */\n      mul\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":3265:3314  (ratio * 0x5d6af8dedb81196699c329225ee604) >> 128 */\n      swap1\n      shr\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":3257:3314  ratio = (ratio * 0x5d6af8dedb81196699c329225ee604) >> 128 */\n      swap1\n      pop\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":3229:3314  if (absTick & 0x20000 != 0) ratio = (ratio * 0x5d6af8dedb81196699c329225ee604) >> 128 */\n    tag_161:\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":3349:3350  0 */\n      0x00\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":3338:3345  0x40000 */\n      0x040000\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":3328:3335  absTick */\n      dup4\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":3328:3345  absTick & 0x40000 */\n      and\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":3328:3350  absTick & 0x40000 != 0 */\n      eq\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":3324:3407  if (absTick & 0x40000 != 0) ratio = (ratio * 0x2216e584f5fa1ea926041bedfe98) >> 128 */\n      tag_162\n      jumpi\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":3404:3407  128 */\n      0x80\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":3369:3399  0x2216e584f5fa1ea926041bedfe98 */\n      0x2216e584f5fa1ea926041bedfe98\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":3361:3366  ratio */\n      dup3\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":3361:3399  ratio * 0x2216e584f5fa1ea926041bedfe98 */\n      mul\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":3360:3407  (ratio * 0x2216e584f5fa1ea926041bedfe98) >> 128 */\n      swap1\n      shr\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":3352:3407  ratio = (ratio * 0x2216e584f5fa1ea926041bedfe98) >> 128 */\n      swap1\n      pop\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":3324:3407  if (absTick & 0x40000 != 0) ratio = (ratio * 0x2216e584f5fa1ea926041bedfe98) >> 128 */\n    tag_162:\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":3442:3443  0 */\n      0x00\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":3431:3438  0x80000 */\n      0x080000\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":3421:3428  absTick */\n      dup4\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":3421:3438  absTick & 0x80000 */\n      and\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":3421:3443  absTick & 0x80000 != 0 */\n      eq\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":3417:3495  if (absTick & 0x80000 != 0) ratio = (ratio * 0x48a170391f7dc42444e8fa2) >> 128 */\n      tag_163\n      jumpi\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":3492:3495  128 */\n      0x80\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":3462:3487  0x48a170391f7dc42444e8fa2 */\n      0x048a170391f7dc42444e8fa2\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":3454:3459  ratio */\n      dup3\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":3454:3487  ratio * 0x48a170391f7dc42444e8fa2 */\n      mul\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":3453:3495  (ratio * 0x48a170391f7dc42444e8fa2) >> 128 */\n      swap1\n      shr\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":3445:3495  ratio = (ratio * 0x48a170391f7dc42444e8fa2) >> 128 */\n      swap1\n      pop\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":3417:3495  if (absTick & 0x80000 != 0) ratio = (ratio * 0x48a170391f7dc42444e8fa2) >> 128 */\n    tag_163:\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":3517:3518  0 */\n      0x00\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":3510:3514  tick */\n      dup5\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":3510:3518  tick > 0 */\n      0x02\n      signextend\n      sgt\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":3506:3553  if (tick > 0) ratio = type(uint256).max / ratio */\n      iszero\n      tag_164\n      jumpi\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":3548:3553  ratio */\n      dup1\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":3528:3545  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":3528:3553  type(uint256).max / ratio */\n      dup2\n      tag_165\n      jumpi\n      invalid\n    tag_165:\n      div\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":3520:3553  ratio = type(uint256).max / ratio */\n      swap1\n      pop\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":3506:3553  if (tick > 0) ratio = type(uint256).max / ratio */\n    tag_164:\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":3924:3925  0 */\n      0x00\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":3912:3919  1 << 32 */\n      0x0100000000\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":3903:3908  ratio */\n      dup3\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":3903:3920  ratio % (1 << 32) */\n      dup2\n      tag_166\n      jumpi\n      invalid\n    tag_166:\n      mod\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":3903:3925  ratio % (1 << 32) == 0 */\n      eq\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":3903:3933  ratio % (1 << 32) == 0 ? 0 : 1 */\n      tag_167\n      jumpi\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":3932:3933  1 */\n      0x01\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":3903:3933  ratio % (1 << 32) == 0 ? 0 : 1 */\n      jump(tag_168)\n    tag_167:\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":3928:3929  0 */\n      0x00\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":3903:3933  ratio % (1 << 32) == 0 ? 0 : 1 */\n    tag_168:\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":3886:3934  (ratio >> 32) + (ratio % (1 << 32) == 0 ? 0 : 1) */\n      0xff\n      and\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":3896:3898  32 */\n      0x20\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":3887:3892  ratio */\n      dup3\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":3887:3898  ratio >> 32 */\n      swap1\n      shr\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":3886:3934  (ratio >> 32) + (ratio % (1 << 32) == 0 ? 0 : 1) */\n      add\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":3863:3935  sqrtPriceX96 = uint160((ratio >> 32) + (ratio % (1 << 32) == 0 ? 0 : 1)) */\n      swap3\n      pop\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":1362:3942  function getSqrtRatioAtTick(int24 tick) internal pure returns (uint160 sqrtPriceX96) {... */\n      pop\n      pop\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":749:4525  function mulDiv(... */\n    tag_130:\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":861:875  uint256 result */\n      0x00\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":1190:1203  uint256 prod0 */\n      dup1\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":1258:1271  uint256 prod1 */\n      0x00\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":1375:1376  0 */\n      dup1\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":1371:1377  not(0) */\n      not\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":1368:1369  b */\n      dup6\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":1365:1366  a */\n      dup8\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":1358:1378  mulmod(a, b, not(0)) */\n      mulmod\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":1407:1408  b */\n      dup6\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":1404:1405  a */\n      dup8\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":1400:1409  mul(a, b) */\n      mul\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":1391:1409  prod0 := mul(a, b) */\n      swap3\n      pop\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":1458:1463  prod0 */\n      dup3\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":1454:1456  mm */\n      dup2\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":1451:1464  lt(mm, prod0) */\n      lt\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":1443:1448  prod0 */\n      dup4\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":1439:1441  mm */\n      dup3\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":1435:1449  sub(mm, prod0) */\n      sub\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":1431:1465  sub(sub(mm, prod0), lt(mm, prod0)) */\n      sub\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":1422:1465  prod1 := sub(sub(mm, prod0), lt(mm, prod0)) */\n      swap2\n      pop\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":1334:1475  {... */\n      pop\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":1556:1557  0 */\n      0x00\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":1547:1552  prod1 */\n      dup2\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":1547:1557  prod1 == 0 */\n      eq\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":1543:1722  if (prod1 == 0) {... */\n      iszero\n      tag_170\n      jumpi\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":1595:1596  0 */\n      0x00\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":1581:1592  denominator */\n      dup5\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":1581:1596  denominator > 0 */\n      gt\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":1573:1597  require(denominator > 0) */\n      tag_171\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_171:\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":1659:1670  denominator */\n      dup4\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":1652:1657  prod0 */\n      dup3\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":1648:1671  div(prod0, denominator) */\n      div\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":1638:1671  result := div(prod0, denominator) */\n      swap3\n      pop\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":1698:1711  return result */\n      pop\n      pop\n      jump(tag_169)\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":1543:1722  if (prod1 == 0) {... */\n    tag_170:\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":1849:1854  prod1 */\n      dup1\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":1835:1846  denominator */\n      dup5\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":1835:1854  denominator > prod1 */\n      gt\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":1827:1855  require(denominator > prod1) */\n      tag_172\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_172:\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":2132:2149  uint256 remainder */\n      0x00\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":2208:2219  denominator */\n      dup5\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":2205:2206  b */\n      dup7\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":2202:2203  a */\n      dup9\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":2195:2220  mulmod(a, b, denominator) */\n      mulmod\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":2182:2220  remainder := mulmod(a, b, denominator) */\n      swap1\n      pop\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":2351:2356  prod0 */\n      dup3\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":2340:2349  remainder */\n      dup2\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":2337:2357  gt(remainder, prod0) */\n      gt\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":2330:2335  prod1 */\n      dup3\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":2326:2358  sub(prod1, gt(remainder, prod0)) */\n      sub\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":2317:2358  prod1 := sub(prod1, gt(remainder, prod0)) */\n      swap2\n      pop\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":2391:2400  remainder */\n      dup1\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":2384:2389  prod0 */\n      dup4\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":2380:2401  sub(prod0, remainder) */\n      sub\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":2371:2401  prod0 := sub(prod0, remainder) */\n      swap3\n      pop\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":2560:2572  uint256 twos */\n      0x00\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":2590:2601  denominator */\n      dup6\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":2576:2587  denominator */\n      dup7\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":2575:2587  -denominator */\n      0x00\n      sub\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":2575:2601  -denominator & denominator */\n      and\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":2560:2601  uint256 twos = -denominator & denominator */\n      swap1\n      pop\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":2712:2716  twos */\n      dup1\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":2699:2710  denominator */\n      dup7\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":2695:2717  div(denominator, twos) */\n      div\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":2680:2717  denominator := div(denominator, twos) */\n      swap6\n      pop\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":2834:2838  twos */\n      dup1\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":2827:2832  prod0 */\n      dup5\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":2823:2839  div(prod0, twos) */\n      div\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":2814:2839  prod0 := div(prod0, twos) */\n      swap4\n      pop\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":3088:3089  1 */\n      0x01\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":3081:3085  twos */\n      dup2\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":3074:3078  twos */\n      dup3\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":3071:3072  0 */\n      0x00\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":3067:3079  sub(0, twos) */\n      sub\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":3063:3086  div(sub(0, twos), twos) */\n      div\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":3059:3090  add(div(sub(0, twos), twos), 1) */\n      add\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":3051:3090  twos := add(div(sub(0, twos), twos), 1) */\n      swap1\n      pop\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":3126:3130  twos */\n      dup1\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":3118:3123  prod1 */\n      dup4\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":3118:3130  prod1 * twos */\n      mul\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":3109:3130  prod0 |= prod1 * twos */\n      dup5\n      or\n      swap4\n      pop\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":3464:3475  uint256 inv */\n      0x00\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":3498:3499  2 */\n      0x02\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":3483:3494  denominator */\n      dup8\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":3479:3480  3 */\n      0x03\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":3479:3494  3 * denominator */\n      mul\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":3478:3499  (3 * denominator) ^ 2 */\n      xor\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":3464:3499  uint256 inv = (3 * denominator) ^ 2 */\n      swap1\n      pop\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":3739:3742  inv */\n      dup1\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":3725:3736  denominator */\n      dup8\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":3725:3742  denominator * inv */\n      mul\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":3721:3722  2 */\n      0x02\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":3721:3742  2 - denominator * inv */\n      sub\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":3714:3742  inv *= 2 - denominator * inv */\n      dup2\n      mul\n      swap1\n      pop\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":3797:3800  inv */\n      dup1\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":3783:3794  denominator */\n      dup8\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":3783:3800  denominator * inv */\n      mul\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":3779:3780  2 */\n      0x02\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":3779:3800  2 - denominator * inv */\n      sub\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":3772:3800  inv *= 2 - denominator * inv */\n      dup2\n      mul\n      swap1\n      pop\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":3856:3859  inv */\n      dup1\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":3842:3853  denominator */\n      dup8\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":3842:3859  denominator * inv */\n      mul\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":3838:3839  2 */\n      0x02\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":3838:3859  2 - denominator * inv */\n      sub\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":3831:3859  inv *= 2 - denominator * inv */\n      dup2\n      mul\n      swap1\n      pop\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":3915:3918  inv */\n      dup1\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":3901:3912  denominator */\n      dup8\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":3901:3918  denominator * inv */\n      mul\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":3897:3898  2 */\n      0x02\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":3897:3918  2 - denominator * inv */\n      sub\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":3890:3918  inv *= 2 - denominator * inv */\n      dup2\n      mul\n      swap1\n      pop\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":3974:3977  inv */\n      dup1\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":3960:3971  denominator */\n      dup8\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":3960:3977  denominator * inv */\n      mul\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":3956:3957  2 */\n      0x02\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":3956:3977  2 - denominator * inv */\n      sub\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":3949:3977  inv *= 2 - denominator * inv */\n      dup2\n      mul\n      swap1\n      pop\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":4034:4037  inv */\n      dup1\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":4020:4031  denominator */\n      dup8\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":4020:4037  denominator * inv */\n      mul\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":4016:4017  2 */\n      0x02\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":4016:4037  2 - denominator * inv */\n      sub\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":4009:4037  inv *= 2 - denominator * inv */\n      dup2\n      mul\n      swap1\n      pop\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":4492:4495  inv */\n      dup1\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":4484:4489  prod0 */\n      dup6\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":4484:4495  prod0 * inv */\n      mul\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":4475:4495  result = prod0 * inv */\n      swap6\n      pop\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":4505:4518  return result */\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"@uniswap/v3-core/contracts/libraries/FullMath.sol\":749:4525  function mulDiv(... */\n    tag_169:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n    tag_37:\n      mload(0x40)\n      dup1\n      0x80\n      add\n      0x40\n      mstore\n      dup1\n      0x04\n      swap1\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n      pop\n      swap1\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220f3f6ae6982dfb80d107d6c14ce1262f819d472fbeb6e015df3c349ee2a73330164736f6c63430007060033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "611766610026600b82828239805160001a60731461001957fe5b30600052607381538281f3fe730000000000000000000000000000000000000000301460806040526004361061004b5760003560e01c80638c39560e14610050578063bcbcaa29146100fe578063c361e0b1146101ac575b600080fd5b6100dc6004803603608081101561006657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610250565b604051808381526020018262ffffff1681526020019250505060405180910390f35b610194600480360360a081101561011457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803590602001909291905050506104cc565b60405180821515815260200191505060405180910390f35b61022e600480360360608110156101c257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506107c7565b604051808381526020018262ffffff1681526020019250505060405180910390f35b60008060006040518060800160405280606461ffff1681526020016101f461ffff168152602001610bb861ffff16815260200161271061ffff16815250905060005b60048160ff1610156104c15760008873ffffffffffffffffffffffffffffffffffffffff16631698ee828989868660ff16600481106102cd57fe5b60200201516040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1681526020018261ffff168152602001935050505060206040518083038186803b15801561034457600080fd5b505afa158015610358573d6000803e3d6000fd5b505050506040513d602081101561036e57600080fd5b81019080805190602001909291905050509050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156103bc57506104b4565b858873ffffffffffffffffffffffffffffffffffffffff166370a08231836040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561042457600080fd5b505afa158015610438573d6000803e3d6000fd5b505050506040513d602081101561044e57600080fd5b8101908080519060200190929190505050101561046b57506104b4565b6000610478826001610c57565b9050600061048882898c8c610ff6565b9050868111156104b057809650848460ff16600481106104a457fe5b602002015161ffff1695505b5050505b8080600101915050610292565b505094509492505050565b6000806040518060800160405280606461ffff1681526020016101f461ffff168152602001610bb861ffff16815260200161271061ffff16815250905061051161170e565b60005b60048160ff1610156107b65760008973ffffffffffffffffffffffffffffffffffffffff16631698ee828a8a878660ff166004811061054f57fe5b60200201516040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1681526020018261ffff168152602001935050505060206040518083038186803b1580156105c657600080fd5b505afa1580156105da573d6000803e3d6000fd5b505050506040513d60208110156105f057600080fd5b81019080805190602001909291905050509050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561063e57506107a9565b868973ffffffffffffffffffffffffffffffffffffffff166370a08231836040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b1580156106a657600080fd5b505afa1580156106ba573d6000803e3d6000fd5b505050506040513d60208110156106d057600080fd5b810190808051906020019092919050505010156106ed57506107a9565b858873ffffffffffffffffffffffffffffffffffffffff166370a08231836040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561075557600080fd5b505afa158015610769573d6000803e3d6000fd5b505050506040513d602081101561077f57600080fd5b8101908080519060200190929190505050101561079c57506107a9565b60019450505050506107be565b8080600101915050610514565b506000925050505b95945050505050565b60008060006040518060800160405280606461ffff1681526020016101f461ffff168152602001610bb861ffff16815260200161271061ffff16815250905060005b60048160ff161015610c4d5760008773ffffffffffffffffffffffffffffffffffffffff16631698ee828888868660ff166004811061084457fe5b60200201516040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1681526020018261ffff168152602001935050505060206040518083038186803b1580156108bb57600080fd5b505afa1580156108cf573d6000803e3d6000fd5b505050506040513d60208110156108e557600080fd5b81019080805190602001909291905050509050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156109335750610c40565b60008773ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b15801561097b57600080fd5b505afa15801561098f573d6000803e3d6000fd5b505050506040513d60208110156109a557600080fd5b8101908080519060200190929190505050905060008773ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b158015610a0057600080fd5b505afa158015610a14573d6000803e3d6000fd5b505050506040513d6020811015610a2a57600080fd5b810190808051906020019092919050505090508160ff16600a0a8973ffffffffffffffffffffffffffffffffffffffff166370a08231856040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b158015610aab57600080fd5b505afa158015610abf573d6000803e3d6000fd5b505050506040513d6020811015610ad557600080fd5b81019080805190602001909291905050501015610af457505050610c40565b8060ff16600a0a8873ffffffffffffffffffffffffffffffffffffffff166370a08231856040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b158015610b6257600080fd5b505afa158015610b76573d6000803e3d6000fd5b505050506040513d6020811015610b8c57600080fd5b81019080805190602001909291905050501015610bab57505050610c40565b6000610bb8846001610c57565b90506000610bce828560ff16600a0a8d8d610ff6565b905060008660ff161415610bfa57809850868660ff1660048110610bee57fe5b602002015161ffff1697505b60008660ff16118015610c1757506000891480610c1657508881105b5b15610c3a57809850868660ff1660048110610c2e57fe5b602002015161ffff1697505b50505050505b8080600101915050610809565b5050935093915050565b6000808263ffffffff161415610cd5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260028152602001807f425000000000000000000000000000000000000000000000000000000000000081525060200191505060405180910390fd5b6000600267ffffffffffffffff81118015610cef57600080fd5b50604051908082528060200260200182016040528015610d1e5781602001602082028036833780820191505090505b5090508281600081518110610d2f57fe5b602002602001019063ffffffff16908163ffffffff1681525050600081600181518110610d5857fe5b602002602001019063ffffffff16908163ffffffff168152505060008473ffffffffffffffffffffffffffffffffffffffff1663883bdbfd836040518263ffffffff1660e01b81526004018080602001828103825283818151815260200191508051906020019060200280838360005b83811015610de3578082015181840152602081019050610dc8565b505050509050019250505060006040518083038186803b158015610e0657600080fd5b505afa158015610e1a573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052506040811015610e4457600080fd5b8101908080516040519392919084640100000000821115610e6457600080fd5b83820191506020820185811115610e7a57600080fd5b8251866020820283011164010000000082111715610e9757600080fd5b8083526020830192505050908051906020019060200280838360005b83811015610ece578082015181840152602081019050610eb3565b5050505090500160405260200180516040519392919084640100000000821115610ef757600080fd5b83820191506020820185811115610f0d57600080fd5b8251866020820283011164010000000082111715610f2a57600080fd5b8083526020830192505050908051906020019060200280838360005b83811015610f61578082015181840152602081019050610f46565b50505050905001604052505050509050600081600081518110610f8057fe5b602002602001015182600181518110610f9557fe5b60200260200101510390508463ffffffff168160060b81610fb257fe5b05935060008160060b128015610fde575060008563ffffffff168260060b81610fd757fe5b0760060b14155b15610fed578380600190039450505b50505092915050565b600080611002866111f9565b90506fffffffffffffffffffffffffffffffff80168173ffffffffffffffffffffffffffffffffffffffff16116111135760008173ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160290508373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16106110d4576110cf7801000000000000000000000000000000000000000000000000876fffffffffffffffffffffffffffffffff1683611634565b61110b565b61110a81876fffffffffffffffffffffffffffffffff167801000000000000000000000000000000000000000000000000611634565b5b9250506111f0565b60006111558273ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1668010000000000000000611634565b90508373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16106111bd576111b8700100000000000000000000000000000000876fffffffffffffffffffffffffffffffff1683611634565b6111ec565b6111eb81876fffffffffffffffffffffffffffffffff16700100000000000000000000000000000000611634565b5b9250505b50949350505050565b60008060008360020b12611210578260020b611218565b8260020b6000035b90507ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff2761860000360020b8111156112b6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260018152602001807f540000000000000000000000000000000000000000000000000000000000000081525060200191505060405180910390fd5b6000806001831614156112da577001000000000000000000000000000000006112ec565b6ffffcb933bd6fad37aa2d162d1a5940015b70ffffffffffffffffffffffffffffffffff169050600060028316146113265760806ffff97272373d413259a46990580e213a8202901c90505b6000600483161461134b5760806ffff2e50f5f656932ef12357cf3c7fdcc8202901c90505b600060088316146113705760806fffe5caca7e10e4e61c3624eaa0941cd08202901c90505b600060108316146113955760806fffcb9843d60f6159c9db58835c9266448202901c90505b600060208316146113ba5760806fff973b41fa98c081472e6896dfb254c08202901c90505b600060408316146113df5760806fff2ea16466c96a3843ec78b326b528618202901c90505b600060808316146114045760806ffe5dee046a99a2a811c461f1969c30538202901c90505b600061010083161461142a5760806ffcbe86c7900a88aedcffc83b479aa3a48202901c90505b60006102008316146114505760806ff987a7253ac413176f2b074cf7815e548202901c90505b60006104008316146114765760806ff3392b0822b70005940c7a398e4b70f38202901c90505b600061080083161461149c5760806fe7159475a2c29b7443b29c7fa6e889d98202901c90505b60006110008316146114c25760806fd097f3bdfd2022b8845ad8f792aa58258202901c90505b60006120008316146114e85760806fa9f746462d870fdf8a65dc1f90e061e58202901c90505b600061400083161461150e5760806f70d869a156d2a1b890bb3df62baf32f78202901c90505b60006180008316146115345760806f31be135f97d08fd981231505542fcfa68202901c90505b60006201000083161461155b5760806f09aa508b5b7a84e1c677de54f3e99bc98202901c90505b6000620200008316146115815760806e5d6af8dedb81196699c329225ee6048202901c90505b6000620400008316146115a65760806d2216e584f5fa1ea926041bedfe988202901c90505b6000620800008316146115c95760806b048a170391f7dc42444e8fa28202901c90505b60008460020b131561160257807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff816115fe57fe5b0490505b6000640100000000828161161257fe5b061461161f576001611622565b60005b60ff16602082901c0192505050919050565b60008060008019858709858702925082811083820303915050600081141561166f576000841161166357600080fd5b83820492505050611707565b80841161167b57600080fd5b600084868809905082811182039150808303925060008586600003169050808604955080840493506001818260000304019050808302841793506000600287600302189050808702600203810290508087026002038102905080870260020381029050808702600203810290508087026002038102905080870260020381029050808502955050505050505b9392505050565b604051806080016040528060049060208202803683378082019150509050509056fea2646970667358221220f3f6ae6982dfb80d107d6c14ce1262f819d472fbeb6e015df3c349ee2a73330164736f6c63430007060033",
							"opcodes": "PUSH2 0x1766 PUSH2 0x26 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH2 0x19 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8C39560E EQ PUSH2 0x50 JUMPI DUP1 PUSH4 0xBCBCAA29 EQ PUSH2 0xFE JUMPI DUP1 PUSH4 0xC361E0B1 EQ PUSH2 0x1AC JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDC PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x80 DUP2 LT ISZERO PUSH2 0x66 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x250 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH3 0xFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x194 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xA0 DUP2 LT ISZERO PUSH2 0x114 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x4CC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x22E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x1C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x7C7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH3 0xFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x64 PUSH2 0xFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1F4 PUSH2 0xFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBB8 PUSH2 0xFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2710 PUSH2 0xFFFF AND DUP2 MSTORE POP SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x4 DUP2 PUSH1 0xFF AND LT ISZERO PUSH2 0x4C1 JUMPI PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x1698EE82 DUP10 DUP10 DUP7 DUP7 PUSH1 0xFF AND PUSH1 0x4 DUP2 LT PUSH2 0x2CD JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH2 0xFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x344 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x358 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x36E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x3BC JUMPI POP PUSH2 0x4B4 JUMP JUMPDEST DUP6 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x424 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x438 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x44E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP LT ISZERO PUSH2 0x46B JUMPI POP PUSH2 0x4B4 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x478 DUP3 PUSH1 0x1 PUSH2 0xC57 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x488 DUP3 DUP10 DUP13 DUP13 PUSH2 0xFF6 JUMP JUMPDEST SWAP1 POP DUP7 DUP2 GT ISZERO PUSH2 0x4B0 JUMPI DUP1 SWAP7 POP DUP5 DUP5 PUSH1 0xFF AND PUSH1 0x4 DUP2 LT PUSH2 0x4A4 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH2 0xFFFF AND SWAP6 POP JUMPDEST POP POP POP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x292 JUMP JUMPDEST POP POP SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x64 PUSH2 0xFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1F4 PUSH2 0xFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBB8 PUSH2 0xFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2710 PUSH2 0xFFFF AND DUP2 MSTORE POP SWAP1 POP PUSH2 0x511 PUSH2 0x170E JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x4 DUP2 PUSH1 0xFF AND LT ISZERO PUSH2 0x7B6 JUMPI PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x1698EE82 DUP11 DUP11 DUP8 DUP7 PUSH1 0xFF AND PUSH1 0x4 DUP2 LT PUSH2 0x54F JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH2 0xFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x5C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x5DA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x5F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x63E JUMPI POP PUSH2 0x7A9 JUMP JUMPDEST DUP7 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x6A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x6BA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x6D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP LT ISZERO PUSH2 0x6ED JUMPI POP PUSH2 0x7A9 JUMP JUMPDEST DUP6 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x755 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x769 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x77F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP LT ISZERO PUSH2 0x79C JUMPI POP PUSH2 0x7A9 JUMP JUMPDEST PUSH1 0x1 SWAP5 POP POP POP POP POP PUSH2 0x7BE JUMP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x514 JUMP JUMPDEST POP PUSH1 0x0 SWAP3 POP POP POP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x64 PUSH2 0xFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1F4 PUSH2 0xFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBB8 PUSH2 0xFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2710 PUSH2 0xFFFF AND DUP2 MSTORE POP SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x4 DUP2 PUSH1 0xFF AND LT ISZERO PUSH2 0xC4D JUMPI PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x1698EE82 DUP9 DUP9 DUP7 DUP7 PUSH1 0xFF AND PUSH1 0x4 DUP2 LT PUSH2 0x844 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH2 0xFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x8BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x8CF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x8E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x933 JUMPI POP PUSH2 0xC40 JUMP JUMPDEST PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x97B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x98F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x9A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA00 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA14 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xA2A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP DUP2 PUSH1 0xFF AND PUSH1 0xA EXP DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 DUP6 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xAAB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xABF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xAD5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP LT ISZERO PUSH2 0xAF4 JUMPI POP POP POP PUSH2 0xC40 JUMP JUMPDEST DUP1 PUSH1 0xFF AND PUSH1 0xA EXP DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 DUP6 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB62 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB76 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xB8C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP LT ISZERO PUSH2 0xBAB JUMPI POP POP POP PUSH2 0xC40 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBB8 DUP5 PUSH1 0x1 PUSH2 0xC57 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xBCE DUP3 DUP6 PUSH1 0xFF AND PUSH1 0xA EXP DUP14 DUP14 PUSH2 0xFF6 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP7 PUSH1 0xFF AND EQ ISZERO PUSH2 0xBFA JUMPI DUP1 SWAP9 POP DUP7 DUP7 PUSH1 0xFF AND PUSH1 0x4 DUP2 LT PUSH2 0xBEE JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH2 0xFFFF AND SWAP8 POP JUMPDEST PUSH1 0x0 DUP7 PUSH1 0xFF AND GT DUP1 ISZERO PUSH2 0xC17 JUMPI POP PUSH1 0x0 DUP10 EQ DUP1 PUSH2 0xC16 JUMPI POP DUP9 DUP2 LT JUMPDEST JUMPDEST ISZERO PUSH2 0xC3A JUMPI DUP1 SWAP9 POP DUP7 DUP7 PUSH1 0xFF AND PUSH1 0x4 DUP2 LT PUSH2 0xC2E JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH2 0xFFFF AND SWAP8 POP JUMPDEST POP POP POP POP POP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x809 JUMP JUMPDEST POP POP SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH4 0xFFFFFFFF AND EQ ISZERO PUSH2 0xCD5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4250000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0xCEF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xD1E JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP DUP3 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xD2F JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH4 0xFFFFFFFF AND SWAP1 DUP2 PUSH4 0xFFFFFFFF AND DUP2 MSTORE POP POP PUSH1 0x0 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0xD58 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH4 0xFFFFFFFF AND SWAP1 DUP2 PUSH4 0xFFFFFFFF AND DUP2 MSTORE POP POP PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x883BDBFD DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xDE3 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xDC8 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP3 POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE06 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xE1A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP PUSH1 0x40 DUP2 LT ISZERO PUSH2 0xE44 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH5 0x100000000 DUP3 GT ISZERO PUSH2 0xE64 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH2 0xE7A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD DUP7 PUSH1 0x20 DUP3 MUL DUP4 ADD GT PUSH5 0x100000000 DUP3 GT OR ISZERO PUSH2 0xE97 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP3 POP POP POP SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xECE JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xEB3 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD PUSH1 0x40 MSTORE PUSH1 0x20 ADD DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH5 0x100000000 DUP3 GT ISZERO PUSH2 0xEF7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH2 0xF0D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD DUP7 PUSH1 0x20 DUP3 MUL DUP4 ADD GT PUSH5 0x100000000 DUP3 GT OR ISZERO PUSH2 0xF2A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP3 POP POP POP SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xF61 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xF46 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD PUSH1 0x40 MSTORE POP POP POP POP SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xF80 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP3 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0xF95 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SUB SWAP1 POP DUP5 PUSH4 0xFFFFFFFF AND DUP2 PUSH1 0x6 SIGNEXTEND DUP2 PUSH2 0xFB2 JUMPI INVALID JUMPDEST SDIV SWAP4 POP PUSH1 0x0 DUP2 PUSH1 0x6 SIGNEXTEND SLT DUP1 ISZERO PUSH2 0xFDE JUMPI POP PUSH1 0x0 DUP6 PUSH4 0xFFFFFFFF AND DUP3 PUSH1 0x6 SIGNEXTEND DUP2 PUSH2 0xFD7 JUMPI INVALID JUMPDEST SMOD PUSH1 0x6 SIGNEXTEND EQ ISZERO JUMPDEST ISZERO PUSH2 0xFED JUMPI DUP4 DUP1 PUSH1 0x1 SWAP1 SUB SWAP5 POP POP JUMPDEST POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1002 DUP7 PUSH2 0x11F9 JUMP JUMPDEST SWAP1 POP PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND GT PUSH2 0x1113 JUMPI PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL SWAP1 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND LT PUSH2 0x10D4 JUMPI PUSH2 0x10CF PUSH25 0x1000000000000000000000000000000000000000000000000 DUP8 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH2 0x1634 JUMP JUMPDEST PUSH2 0x110B JUMP JUMPDEST PUSH2 0x110A DUP2 DUP8 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH25 0x1000000000000000000000000000000000000000000000000 PUSH2 0x1634 JUMP JUMPDEST JUMPDEST SWAP3 POP POP PUSH2 0x11F0 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1155 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH9 0x10000000000000000 PUSH2 0x1634 JUMP JUMPDEST SWAP1 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND LT PUSH2 0x11BD JUMPI PUSH2 0x11B8 PUSH17 0x100000000000000000000000000000000 DUP8 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH2 0x1634 JUMP JUMPDEST PUSH2 0x11EC JUMP JUMPDEST PUSH2 0x11EB DUP2 DUP8 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH17 0x100000000000000000000000000000000 PUSH2 0x1634 JUMP JUMPDEST JUMPDEST SWAP3 POP POP JUMPDEST POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH1 0x2 SIGNEXTEND SLT PUSH2 0x1210 JUMPI DUP3 PUSH1 0x2 SIGNEXTEND PUSH2 0x1218 JUMP JUMPDEST DUP3 PUSH1 0x2 SIGNEXTEND PUSH1 0x0 SUB JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF27618 PUSH1 0x0 SUB PUSH1 0x2 SIGNEXTEND DUP2 GT ISZERO PUSH2 0x12B6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x5400000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 DUP4 AND EQ ISZERO PUSH2 0x12DA JUMPI PUSH17 0x100000000000000000000000000000000 PUSH2 0x12EC JUMP JUMPDEST PUSH16 0xFFFCB933BD6FAD37AA2D162D1A594001 JUMPDEST PUSH17 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH1 0x2 DUP4 AND EQ PUSH2 0x1326 JUMPI PUSH1 0x80 PUSH16 0xFFF97272373D413259A46990580E213A DUP3 MUL SWAP1 SHR SWAP1 POP JUMPDEST PUSH1 0x0 PUSH1 0x4 DUP4 AND EQ PUSH2 0x134B JUMPI PUSH1 0x80 PUSH16 0xFFF2E50F5F656932EF12357CF3C7FDCC DUP3 MUL SWAP1 SHR SWAP1 POP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 AND EQ PUSH2 0x1370 JUMPI PUSH1 0x80 PUSH16 0xFFE5CACA7E10E4E61C3624EAA0941CD0 DUP3 MUL SWAP1 SHR SWAP1 POP JUMPDEST PUSH1 0x0 PUSH1 0x10 DUP4 AND EQ PUSH2 0x1395 JUMPI PUSH1 0x80 PUSH16 0xFFCB9843D60F6159C9DB58835C926644 DUP3 MUL SWAP1 SHR SWAP1 POP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP4 AND EQ PUSH2 0x13BA JUMPI PUSH1 0x80 PUSH16 0xFF973B41FA98C081472E6896DFB254C0 DUP3 MUL SWAP1 SHR SWAP1 POP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP4 AND EQ PUSH2 0x13DF JUMPI PUSH1 0x80 PUSH16 0xFF2EA16466C96A3843EC78B326B52861 DUP3 MUL SWAP1 SHR SWAP1 POP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP4 AND EQ PUSH2 0x1404 JUMPI PUSH1 0x80 PUSH16 0xFE5DEE046A99A2A811C461F1969C3053 DUP3 MUL SWAP1 SHR SWAP1 POP JUMPDEST PUSH1 0x0 PUSH2 0x100 DUP4 AND EQ PUSH2 0x142A JUMPI PUSH1 0x80 PUSH16 0xFCBE86C7900A88AEDCFFC83B479AA3A4 DUP3 MUL SWAP1 SHR SWAP1 POP JUMPDEST PUSH1 0x0 PUSH2 0x200 DUP4 AND EQ PUSH2 0x1450 JUMPI PUSH1 0x80 PUSH16 0xF987A7253AC413176F2B074CF7815E54 DUP3 MUL SWAP1 SHR SWAP1 POP JUMPDEST PUSH1 0x0 PUSH2 0x400 DUP4 AND EQ PUSH2 0x1476 JUMPI PUSH1 0x80 PUSH16 0xF3392B0822B70005940C7A398E4B70F3 DUP3 MUL SWAP1 SHR SWAP1 POP JUMPDEST PUSH1 0x0 PUSH2 0x800 DUP4 AND EQ PUSH2 0x149C JUMPI PUSH1 0x80 PUSH16 0xE7159475A2C29B7443B29C7FA6E889D9 DUP3 MUL SWAP1 SHR SWAP1 POP JUMPDEST PUSH1 0x0 PUSH2 0x1000 DUP4 AND EQ PUSH2 0x14C2 JUMPI PUSH1 0x80 PUSH16 0xD097F3BDFD2022B8845AD8F792AA5825 DUP3 MUL SWAP1 SHR SWAP1 POP JUMPDEST PUSH1 0x0 PUSH2 0x2000 DUP4 AND EQ PUSH2 0x14E8 JUMPI PUSH1 0x80 PUSH16 0xA9F746462D870FDF8A65DC1F90E061E5 DUP3 MUL SWAP1 SHR SWAP1 POP JUMPDEST PUSH1 0x0 PUSH2 0x4000 DUP4 AND EQ PUSH2 0x150E JUMPI PUSH1 0x80 PUSH16 0x70D869A156D2A1B890BB3DF62BAF32F7 DUP3 MUL SWAP1 SHR SWAP1 POP JUMPDEST PUSH1 0x0 PUSH2 0x8000 DUP4 AND EQ PUSH2 0x1534 JUMPI PUSH1 0x80 PUSH16 0x31BE135F97D08FD981231505542FCFA6 DUP3 MUL SWAP1 SHR SWAP1 POP JUMPDEST PUSH1 0x0 PUSH3 0x10000 DUP4 AND EQ PUSH2 0x155B JUMPI PUSH1 0x80 PUSH16 0x9AA508B5B7A84E1C677DE54F3E99BC9 DUP3 MUL SWAP1 SHR SWAP1 POP JUMPDEST PUSH1 0x0 PUSH3 0x20000 DUP4 AND EQ PUSH2 0x1581 JUMPI PUSH1 0x80 PUSH15 0x5D6AF8DEDB81196699C329225EE604 DUP3 MUL SWAP1 SHR SWAP1 POP JUMPDEST PUSH1 0x0 PUSH3 0x40000 DUP4 AND EQ PUSH2 0x15A6 JUMPI PUSH1 0x80 PUSH14 0x2216E584F5FA1EA926041BEDFE98 DUP3 MUL SWAP1 SHR SWAP1 POP JUMPDEST PUSH1 0x0 PUSH3 0x80000 DUP4 AND EQ PUSH2 0x15C9 JUMPI PUSH1 0x80 PUSH12 0x48A170391F7DC42444E8FA2 DUP3 MUL SWAP1 SHR SWAP1 POP JUMPDEST PUSH1 0x0 DUP5 PUSH1 0x2 SIGNEXTEND SGT ISZERO PUSH2 0x1602 JUMPI DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 PUSH2 0x15FE JUMPI INVALID JUMPDEST DIV SWAP1 POP JUMPDEST PUSH1 0x0 PUSH5 0x100000000 DUP3 DUP2 PUSH2 0x1612 JUMPI INVALID JUMPDEST MOD EQ PUSH2 0x161F JUMPI PUSH1 0x1 PUSH2 0x1622 JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0xFF AND PUSH1 0x20 DUP3 SWAP1 SHR ADD SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 NOT DUP6 DUP8 MULMOD DUP6 DUP8 MUL SWAP3 POP DUP3 DUP2 LT DUP4 DUP3 SUB SUB SWAP2 POP POP PUSH1 0x0 DUP2 EQ ISZERO PUSH2 0x166F JUMPI PUSH1 0x0 DUP5 GT PUSH2 0x1663 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP3 DIV SWAP3 POP POP POP PUSH2 0x1707 JUMP JUMPDEST DUP1 DUP5 GT PUSH2 0x167B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP5 DUP7 DUP9 MULMOD SWAP1 POP DUP3 DUP2 GT DUP3 SUB SWAP2 POP DUP1 DUP4 SUB SWAP3 POP PUSH1 0x0 DUP6 DUP7 PUSH1 0x0 SUB AND SWAP1 POP DUP1 DUP7 DIV SWAP6 POP DUP1 DUP5 DIV SWAP4 POP PUSH1 0x1 DUP2 DUP3 PUSH1 0x0 SUB DIV ADD SWAP1 POP DUP1 DUP4 MUL DUP5 OR SWAP4 POP PUSH1 0x0 PUSH1 0x2 DUP8 PUSH1 0x3 MUL XOR SWAP1 POP DUP1 DUP8 MUL PUSH1 0x2 SUB DUP2 MUL SWAP1 POP DUP1 DUP8 MUL PUSH1 0x2 SUB DUP2 MUL SWAP1 POP DUP1 DUP8 MUL PUSH1 0x2 SUB DUP2 MUL SWAP1 POP DUP1 DUP8 MUL PUSH1 0x2 SUB DUP2 MUL SWAP1 POP DUP1 DUP8 MUL PUSH1 0x2 SUB DUP2 MUL SWAP1 POP DUP1 DUP8 MUL PUSH1 0x2 SUB DUP2 MUL SWAP1 POP DUP1 DUP6 MUL SWAP6 POP POP POP POP POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 SWAP1 PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP POP SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURN 0xF6 0xAE PUSH10 0x82DFB80D107D6C14CE12 PUSH3 0xF819D4 PUSH19 0xFBEB6E015DF3C349EE2A73330164736F6C6343 STOP SMOD MOD STOP CALLER ",
							"sourceMap": "260:2246:18:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8C39560E EQ PUSH2 0x50 JUMPI DUP1 PUSH4 0xBCBCAA29 EQ PUSH2 0xFE JUMPI DUP1 PUSH4 0xC361E0B1 EQ PUSH2 0x1AC JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDC PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x80 DUP2 LT ISZERO PUSH2 0x66 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x250 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH3 0xFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x194 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xA0 DUP2 LT ISZERO PUSH2 0x114 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x4CC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x22E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x1C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x7C7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH3 0xFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x64 PUSH2 0xFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1F4 PUSH2 0xFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBB8 PUSH2 0xFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2710 PUSH2 0xFFFF AND DUP2 MSTORE POP SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x4 DUP2 PUSH1 0xFF AND LT ISZERO PUSH2 0x4C1 JUMPI PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x1698EE82 DUP10 DUP10 DUP7 DUP7 PUSH1 0xFF AND PUSH1 0x4 DUP2 LT PUSH2 0x2CD JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH2 0xFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x344 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x358 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x36E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x3BC JUMPI POP PUSH2 0x4B4 JUMP JUMPDEST DUP6 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x424 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x438 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x44E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP LT ISZERO PUSH2 0x46B JUMPI POP PUSH2 0x4B4 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x478 DUP3 PUSH1 0x1 PUSH2 0xC57 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x488 DUP3 DUP10 DUP13 DUP13 PUSH2 0xFF6 JUMP JUMPDEST SWAP1 POP DUP7 DUP2 GT ISZERO PUSH2 0x4B0 JUMPI DUP1 SWAP7 POP DUP5 DUP5 PUSH1 0xFF AND PUSH1 0x4 DUP2 LT PUSH2 0x4A4 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH2 0xFFFF AND SWAP6 POP JUMPDEST POP POP POP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x292 JUMP JUMPDEST POP POP SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x64 PUSH2 0xFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1F4 PUSH2 0xFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBB8 PUSH2 0xFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2710 PUSH2 0xFFFF AND DUP2 MSTORE POP SWAP1 POP PUSH2 0x511 PUSH2 0x170E JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x4 DUP2 PUSH1 0xFF AND LT ISZERO PUSH2 0x7B6 JUMPI PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x1698EE82 DUP11 DUP11 DUP8 DUP7 PUSH1 0xFF AND PUSH1 0x4 DUP2 LT PUSH2 0x54F JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH2 0xFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x5C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x5DA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x5F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x63E JUMPI POP PUSH2 0x7A9 JUMP JUMPDEST DUP7 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x6A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x6BA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x6D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP LT ISZERO PUSH2 0x6ED JUMPI POP PUSH2 0x7A9 JUMP JUMPDEST DUP6 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x755 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x769 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x77F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP LT ISZERO PUSH2 0x79C JUMPI POP PUSH2 0x7A9 JUMP JUMPDEST PUSH1 0x1 SWAP5 POP POP POP POP POP PUSH2 0x7BE JUMP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x514 JUMP JUMPDEST POP PUSH1 0x0 SWAP3 POP POP POP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x64 PUSH2 0xFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1F4 PUSH2 0xFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBB8 PUSH2 0xFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2710 PUSH2 0xFFFF AND DUP2 MSTORE POP SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x4 DUP2 PUSH1 0xFF AND LT ISZERO PUSH2 0xC4D JUMPI PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x1698EE82 DUP9 DUP9 DUP7 DUP7 PUSH1 0xFF AND PUSH1 0x4 DUP2 LT PUSH2 0x844 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH2 0xFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x8BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x8CF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x8E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x933 JUMPI POP PUSH2 0xC40 JUMP JUMPDEST PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x97B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x98F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x9A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA00 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA14 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xA2A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP1 POP DUP2 PUSH1 0xFF AND PUSH1 0xA EXP DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 DUP6 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xAAB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xABF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xAD5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP LT ISZERO PUSH2 0xAF4 JUMPI POP POP POP PUSH2 0xC40 JUMP JUMPDEST DUP1 PUSH1 0xFF AND PUSH1 0xA EXP DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 DUP6 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB62 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB76 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xB8C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP LT ISZERO PUSH2 0xBAB JUMPI POP POP POP PUSH2 0xC40 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBB8 DUP5 PUSH1 0x1 PUSH2 0xC57 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xBCE DUP3 DUP6 PUSH1 0xFF AND PUSH1 0xA EXP DUP14 DUP14 PUSH2 0xFF6 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP7 PUSH1 0xFF AND EQ ISZERO PUSH2 0xBFA JUMPI DUP1 SWAP9 POP DUP7 DUP7 PUSH1 0xFF AND PUSH1 0x4 DUP2 LT PUSH2 0xBEE JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH2 0xFFFF AND SWAP8 POP JUMPDEST PUSH1 0x0 DUP7 PUSH1 0xFF AND GT DUP1 ISZERO PUSH2 0xC17 JUMPI POP PUSH1 0x0 DUP10 EQ DUP1 PUSH2 0xC16 JUMPI POP DUP9 DUP2 LT JUMPDEST JUMPDEST ISZERO PUSH2 0xC3A JUMPI DUP1 SWAP9 POP DUP7 DUP7 PUSH1 0xFF AND PUSH1 0x4 DUP2 LT PUSH2 0xC2E JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH2 0xFFFF AND SWAP8 POP JUMPDEST POP POP POP POP POP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x809 JUMP JUMPDEST POP POP SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH4 0xFFFFFFFF AND EQ ISZERO PUSH2 0xCD5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4250000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0xCEF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xD1E JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP DUP3 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xD2F JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH4 0xFFFFFFFF AND SWAP1 DUP2 PUSH4 0xFFFFFFFF AND DUP2 MSTORE POP POP PUSH1 0x0 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0xD58 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH4 0xFFFFFFFF AND SWAP1 DUP2 PUSH4 0xFFFFFFFF AND DUP2 MSTORE POP POP PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x883BDBFD DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xDE3 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xDC8 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD SWAP3 POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE06 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xE1A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP PUSH1 0x40 DUP2 LT ISZERO PUSH2 0xE44 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH5 0x100000000 DUP3 GT ISZERO PUSH2 0xE64 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH2 0xE7A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD DUP7 PUSH1 0x20 DUP3 MUL DUP4 ADD GT PUSH5 0x100000000 DUP3 GT OR ISZERO PUSH2 0xE97 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP3 POP POP POP SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xECE JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xEB3 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD PUSH1 0x40 MSTORE PUSH1 0x20 ADD DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH5 0x100000000 DUP3 GT ISZERO PUSH2 0xEF7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH2 0xF0D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD DUP7 PUSH1 0x20 DUP3 MUL DUP4 ADD GT PUSH5 0x100000000 DUP3 GT OR ISZERO PUSH2 0xF2A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP3 POP POP POP SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH1 0x20 MUL DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xF61 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xF46 JUMP JUMPDEST POP POP POP POP SWAP1 POP ADD PUSH1 0x40 MSTORE POP POP POP POP SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xF80 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP3 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0xF95 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SUB SWAP1 POP DUP5 PUSH4 0xFFFFFFFF AND DUP2 PUSH1 0x6 SIGNEXTEND DUP2 PUSH2 0xFB2 JUMPI INVALID JUMPDEST SDIV SWAP4 POP PUSH1 0x0 DUP2 PUSH1 0x6 SIGNEXTEND SLT DUP1 ISZERO PUSH2 0xFDE JUMPI POP PUSH1 0x0 DUP6 PUSH4 0xFFFFFFFF AND DUP3 PUSH1 0x6 SIGNEXTEND DUP2 PUSH2 0xFD7 JUMPI INVALID JUMPDEST SMOD PUSH1 0x6 SIGNEXTEND EQ ISZERO JUMPDEST ISZERO PUSH2 0xFED JUMPI DUP4 DUP1 PUSH1 0x1 SWAP1 SUB SWAP5 POP POP JUMPDEST POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1002 DUP7 PUSH2 0x11F9 JUMP JUMPDEST SWAP1 POP PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP1 AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND GT PUSH2 0x1113 JUMPI PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL SWAP1 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND LT PUSH2 0x10D4 JUMPI PUSH2 0x10CF PUSH25 0x1000000000000000000000000000000000000000000000000 DUP8 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH2 0x1634 JUMP JUMPDEST PUSH2 0x110B JUMP JUMPDEST PUSH2 0x110A DUP2 DUP8 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH25 0x1000000000000000000000000000000000000000000000000 PUSH2 0x1634 JUMP JUMPDEST JUMPDEST SWAP3 POP POP PUSH2 0x11F0 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1155 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH9 0x10000000000000000 PUSH2 0x1634 JUMP JUMPDEST SWAP1 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND LT PUSH2 0x11BD JUMPI PUSH2 0x11B8 PUSH17 0x100000000000000000000000000000000 DUP8 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH2 0x1634 JUMP JUMPDEST PUSH2 0x11EC JUMP JUMPDEST PUSH2 0x11EB DUP2 DUP8 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH17 0x100000000000000000000000000000000 PUSH2 0x1634 JUMP JUMPDEST JUMPDEST SWAP3 POP POP JUMPDEST POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH1 0x2 SIGNEXTEND SLT PUSH2 0x1210 JUMPI DUP3 PUSH1 0x2 SIGNEXTEND PUSH2 0x1218 JUMP JUMPDEST DUP3 PUSH1 0x2 SIGNEXTEND PUSH1 0x0 SUB JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF27618 PUSH1 0x0 SUB PUSH1 0x2 SIGNEXTEND DUP2 GT ISZERO PUSH2 0x12B6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x5400000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 DUP4 AND EQ ISZERO PUSH2 0x12DA JUMPI PUSH17 0x100000000000000000000000000000000 PUSH2 0x12EC JUMP JUMPDEST PUSH16 0xFFFCB933BD6FAD37AA2D162D1A594001 JUMPDEST PUSH17 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x0 PUSH1 0x2 DUP4 AND EQ PUSH2 0x1326 JUMPI PUSH1 0x80 PUSH16 0xFFF97272373D413259A46990580E213A DUP3 MUL SWAP1 SHR SWAP1 POP JUMPDEST PUSH1 0x0 PUSH1 0x4 DUP4 AND EQ PUSH2 0x134B JUMPI PUSH1 0x80 PUSH16 0xFFF2E50F5F656932EF12357CF3C7FDCC DUP3 MUL SWAP1 SHR SWAP1 POP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 AND EQ PUSH2 0x1370 JUMPI PUSH1 0x80 PUSH16 0xFFE5CACA7E10E4E61C3624EAA0941CD0 DUP3 MUL SWAP1 SHR SWAP1 POP JUMPDEST PUSH1 0x0 PUSH1 0x10 DUP4 AND EQ PUSH2 0x1395 JUMPI PUSH1 0x80 PUSH16 0xFFCB9843D60F6159C9DB58835C926644 DUP3 MUL SWAP1 SHR SWAP1 POP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP4 AND EQ PUSH2 0x13BA JUMPI PUSH1 0x80 PUSH16 0xFF973B41FA98C081472E6896DFB254C0 DUP3 MUL SWAP1 SHR SWAP1 POP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP4 AND EQ PUSH2 0x13DF JUMPI PUSH1 0x80 PUSH16 0xFF2EA16466C96A3843EC78B326B52861 DUP3 MUL SWAP1 SHR SWAP1 POP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP4 AND EQ PUSH2 0x1404 JUMPI PUSH1 0x80 PUSH16 0xFE5DEE046A99A2A811C461F1969C3053 DUP3 MUL SWAP1 SHR SWAP1 POP JUMPDEST PUSH1 0x0 PUSH2 0x100 DUP4 AND EQ PUSH2 0x142A JUMPI PUSH1 0x80 PUSH16 0xFCBE86C7900A88AEDCFFC83B479AA3A4 DUP3 MUL SWAP1 SHR SWAP1 POP JUMPDEST PUSH1 0x0 PUSH2 0x200 DUP4 AND EQ PUSH2 0x1450 JUMPI PUSH1 0x80 PUSH16 0xF987A7253AC413176F2B074CF7815E54 DUP3 MUL SWAP1 SHR SWAP1 POP JUMPDEST PUSH1 0x0 PUSH2 0x400 DUP4 AND EQ PUSH2 0x1476 JUMPI PUSH1 0x80 PUSH16 0xF3392B0822B70005940C7A398E4B70F3 DUP3 MUL SWAP1 SHR SWAP1 POP JUMPDEST PUSH1 0x0 PUSH2 0x800 DUP4 AND EQ PUSH2 0x149C JUMPI PUSH1 0x80 PUSH16 0xE7159475A2C29B7443B29C7FA6E889D9 DUP3 MUL SWAP1 SHR SWAP1 POP JUMPDEST PUSH1 0x0 PUSH2 0x1000 DUP4 AND EQ PUSH2 0x14C2 JUMPI PUSH1 0x80 PUSH16 0xD097F3BDFD2022B8845AD8F792AA5825 DUP3 MUL SWAP1 SHR SWAP1 POP JUMPDEST PUSH1 0x0 PUSH2 0x2000 DUP4 AND EQ PUSH2 0x14E8 JUMPI PUSH1 0x80 PUSH16 0xA9F746462D870FDF8A65DC1F90E061E5 DUP3 MUL SWAP1 SHR SWAP1 POP JUMPDEST PUSH1 0x0 PUSH2 0x4000 DUP4 AND EQ PUSH2 0x150E JUMPI PUSH1 0x80 PUSH16 0x70D869A156D2A1B890BB3DF62BAF32F7 DUP3 MUL SWAP1 SHR SWAP1 POP JUMPDEST PUSH1 0x0 PUSH2 0x8000 DUP4 AND EQ PUSH2 0x1534 JUMPI PUSH1 0x80 PUSH16 0x31BE135F97D08FD981231505542FCFA6 DUP3 MUL SWAP1 SHR SWAP1 POP JUMPDEST PUSH1 0x0 PUSH3 0x10000 DUP4 AND EQ PUSH2 0x155B JUMPI PUSH1 0x80 PUSH16 0x9AA508B5B7A84E1C677DE54F3E99BC9 DUP3 MUL SWAP1 SHR SWAP1 POP JUMPDEST PUSH1 0x0 PUSH3 0x20000 DUP4 AND EQ PUSH2 0x1581 JUMPI PUSH1 0x80 PUSH15 0x5D6AF8DEDB81196699C329225EE604 DUP3 MUL SWAP1 SHR SWAP1 POP JUMPDEST PUSH1 0x0 PUSH3 0x40000 DUP4 AND EQ PUSH2 0x15A6 JUMPI PUSH1 0x80 PUSH14 0x2216E584F5FA1EA926041BEDFE98 DUP3 MUL SWAP1 SHR SWAP1 POP JUMPDEST PUSH1 0x0 PUSH3 0x80000 DUP4 AND EQ PUSH2 0x15C9 JUMPI PUSH1 0x80 PUSH12 0x48A170391F7DC42444E8FA2 DUP3 MUL SWAP1 SHR SWAP1 POP JUMPDEST PUSH1 0x0 DUP5 PUSH1 0x2 SIGNEXTEND SGT ISZERO PUSH2 0x1602 JUMPI DUP1 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 PUSH2 0x15FE JUMPI INVALID JUMPDEST DIV SWAP1 POP JUMPDEST PUSH1 0x0 PUSH5 0x100000000 DUP3 DUP2 PUSH2 0x1612 JUMPI INVALID JUMPDEST MOD EQ PUSH2 0x161F JUMPI PUSH1 0x1 PUSH2 0x1622 JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0xFF AND PUSH1 0x20 DUP3 SWAP1 SHR ADD SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 NOT DUP6 DUP8 MULMOD DUP6 DUP8 MUL SWAP3 POP DUP3 DUP2 LT DUP4 DUP3 SUB SUB SWAP2 POP POP PUSH1 0x0 DUP2 EQ ISZERO PUSH2 0x166F JUMPI PUSH1 0x0 DUP5 GT PUSH2 0x1663 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP3 DIV SWAP3 POP POP POP PUSH2 0x1707 JUMP JUMPDEST DUP1 DUP5 GT PUSH2 0x167B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP5 DUP7 DUP9 MULMOD SWAP1 POP DUP3 DUP2 GT DUP3 SUB SWAP2 POP DUP1 DUP4 SUB SWAP3 POP PUSH1 0x0 DUP6 DUP7 PUSH1 0x0 SUB AND SWAP1 POP DUP1 DUP7 DIV SWAP6 POP DUP1 DUP5 DIV SWAP4 POP PUSH1 0x1 DUP2 DUP3 PUSH1 0x0 SUB DIV ADD SWAP1 POP DUP1 DUP4 MUL DUP5 OR SWAP4 POP PUSH1 0x0 PUSH1 0x2 DUP8 PUSH1 0x3 MUL XOR SWAP1 POP DUP1 DUP8 MUL PUSH1 0x2 SUB DUP2 MUL SWAP1 POP DUP1 DUP8 MUL PUSH1 0x2 SUB DUP2 MUL SWAP1 POP DUP1 DUP8 MUL PUSH1 0x2 SUB DUP2 MUL SWAP1 POP DUP1 DUP8 MUL PUSH1 0x2 SUB DUP2 MUL SWAP1 POP DUP1 DUP8 MUL PUSH1 0x2 SUB DUP2 MUL SWAP1 POP DUP1 DUP8 MUL PUSH1 0x2 SUB DUP2 MUL SWAP1 POP DUP1 DUP6 MUL SWAP6 POP POP POP POP POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 SWAP1 PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP POP SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURN 0xF6 0xAE PUSH10 0x82DFB80D107D6C14CE12 PUSH3 0xF819D4 PUSH19 0xFBEB6E015DF3C349EE2A73330164736F6C6343 STOP SMOD MOD STOP CALLER ",
							"sourceMap": "260:2246:18:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;290:734;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;1972:531;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;1034:931;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;290:734;397:17;415:10;440:21;:44;;;;;;;;465:3;440:44;;;;;;469:3;440:44;;;;;;473:4;440:44;;;;;;478:5;440:44;;;;;;;502:7;498:516;514:1;512;:3;;;498:516;;;538:12;571:7;553:34;;;588:2;591;594:4;599:1;594:7;;;;;;;;;;;;;553:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;538:64;;640:1;624:18;;:4;:18;;;620:32;;;644:8;;;620:32;704:8;682:2;675:20;;;696:4;675:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:37;671:51;;;714:8;;;671:51;740:10;753:29;775:4;780:1;753:21;:29::i;:::-;740:42;;800:11;814:58;843:4;856:8;866:2;869;814:28;:58::i;:::-;800:72;;900:9;894:3;:15;889:101;;;941:3;929:15;;968:4;973:1;968:7;;;;;;;;;;;;;962:13;;;;889:101;498:516;;;;516:3;;;;;;;498:516;;;;290:734;;;;;;;;:::o;1972:531::-;2074:4;2089:21;:44;;;;;;;;2114:3;2089:44;;;;;;2118:3;2089:44;;;;;;2122:4;2089:44;;;;;;2127:5;2089:44;;;;;;;2143:19;;:::i;:::-;2176:7;2172:303;2188:1;2186;:3;;;2172:303;;;2207:12;2240:7;2222:34;;;2257:2;2260;2263:4;2268:1;2263:7;;;;;;;;;;;;;2222:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2207:64;;2304:1;2288:18;;:4;:18;;;2284:32;;;2308:8;;;2284:32;2363:4;2341:2;2334:20;;;2355:4;2334:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:33;2330:47;;;2369:8;;;2330:47;2424:4;2402:2;2395:20;;;2416:4;2395:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:33;2391:47;;;2430:8;;;2391:47;2460:4;2453:11;;;;;;;;2172:303;2190:3;;;;;;;2172:303;;;;2491:5;2484:12;;;;1972:531;;;;;;;;:::o;1034:931::-;1111:13;1125:10;1146:21;:44;;;;;;;;1171:3;1146:44;;;;;;1175:3;1146:44;;;;;;1179:4;1146:44;;;;;;1184:5;1146:44;;;;;;;1204:7;1200:731;1216:1;1214;:3;;;1200:731;;;1232:12;1265:7;1247:34;;;1282:2;1285;1288:4;1293:1;1288:7;;;;;;;;;;;;;1247:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1232:64;;1326:1;1310:18;;:4;:18;;;1306:32;;;1330:8;;;1306:32;1358:8;1376:2;1369:19;;;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1358:32;;1400:8;1418:2;1411:19;;;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1400:32;;1488:2;1484:6;;:2;:6;1462:2;1455:20;;;1476:4;1455:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:35;1451:49;;;1492:8;;;;;1451:49;1548:2;1544:6;;:2;:6;1522:2;1515:20;;;1536:4;1515:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:35;1511:49;;;1552:8;;;;;1511:49;1573:10;1586:29;1608:4;1613:1;1586:21;:29::i;:::-;1573:42;;1625:17;1645:56;1674:4;1691:2;1687:6;;:2;:6;1695:2;1698;1645:28;:56::i;:::-;1625:76;;1720:1;1715;:6;;;1711:80;;;1744:9;1736:17;;1773:4;1778:1;1773:7;;;;;;;;;;;;;1767:13;;;;1711:80;1808:1;1804;:5;;;:42;;;;;1823:1;1814:5;:10;:31;;;;1840:5;1828:9;:17;1814:31;1804:42;1800:121;;;1870:9;1862:17;;1899:4;1904:1;1899:7;;;;;;;;;;;;;1893:13;;;;1800:121;1200:731;;;;;;1218:3;;;;;;;1200:731;;;;1940:18;1034:931;;;;;;:::o;270:657:16:-;367:10;415:1;401:10;:15;;;;393:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;434:27;477:1;464:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;434:45;;506:10;489:11;501:1;489:14;;;;;;;;;;;;;:27;;;;;;;;;;;543:1;526:11;538:1;526:14;;;;;;;;;;;;;:18;;;;;;;;;;;556:30;619:4;604:28;;;633:11;604:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;555:90;;;656:26;706:15;722:1;706:18;;;;;;;;;;;;;;685:15;701:1;685:18;;;;;;;;;;;;;;:39;656:68;;773:10;750:33;;:20;:33;;;;;;;;737:47;;866:1;843:20;:24;;;:68;;;;;909:1;895:10;872:33;;:20;:33;;;;;;;;:38;;;;843:68;839:80;;;913:6;;;;;;;;839:80;270:657;;;;;;;:::o;934:955::-;1090:19;1121:20;1144:33;1172:4;1144:27;:33::i;:::-;1121:56;;1312:17;1296:33;;:12;:33;;;1292:591;;1345:17;1389:12;1365:36;;1373:12;1365:21;;:36;1345:56;;1441:10;1429:22;;:9;:22;;;:156;;1537:48;1553:8;1563:10;1537:48;;1575:9;1537:15;:48::i;:::-;1429:156;;;1470:48;1486:9;1497:10;1470:48;;1509:8;1470:15;:48::i;:::-;1429:156;1415:170;;1292:591;;;;1616:17;1636:52;1652:12;1636:52;;1666:12;1636:52;;1680:7;1636:15;:52::i;:::-;1616:72;;1728:10;1716:22;;:9;:22;;;:156;;1824:48;1840:8;1850:10;1824:48;;1862:9;1824:15;:48::i;:::-;1716:156;;;1757:48;1773:9;1784:10;1757:48;;1796:8;1757:15;:48::i;:::-;1716:156;1702:170;;1292:591;;934:955;;;;;;;:::o;1362:2580:12:-;1425:20;1457:15;1482:1;1475:4;:8;;;:57;;1526:4;1519:12;;1475:57;;;1502:4;1495:12;;1494:13;;1475:57;1457:75;;484:7;644:9;;1561:17;;1550:7;:28;;1542:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1595:13;1628:1;1621:3;1611:7;:13;:18;;:93;;1669:35;1611:93;;;1632:34;1611:93;1595:109;;;;1735:1;1728:3;1718:7;:13;:18;1714:83;;1794:3;1755:34;1747:5;:42;1746:51;;1738:59;;1714:83;1828:1;1821:3;1811:7;:13;:18;1807:83;;1887:3;1848:34;1840:5;:42;1839:51;;1831:59;;1807:83;1921:1;1914:3;1904:7;:13;:18;1900:83;;1980:3;1941:34;1933:5;:42;1932:51;;1924:59;;1900:83;2015:1;2007:4;1997:7;:14;:19;1993:84;;2074:3;2035:34;2027:5;:42;2026:51;;2018:59;;1993:84;2109:1;2101:4;2091:7;:14;:19;2087:84;;2168:3;2129:34;2121:5;:42;2120:51;;2112:59;;2087:84;2203:1;2195:4;2185:7;:14;:19;2181:84;;2262:3;2223:34;2215:5;:42;2214:51;;2206:59;;2181:84;2297:1;2289:4;2279:7;:14;:19;2275:84;;2356:3;2317:34;2309:5;:42;2308:51;;2300:59;;2275:84;2392:1;2383:5;2373:7;:15;:20;2369:85;;2451:3;2412:34;2404:5;:42;2403:51;;2395:59;;2369:85;2487:1;2478:5;2468:7;:15;:20;2464:85;;2546:3;2507:34;2499:5;:42;2498:51;;2490:59;;2464:85;2582:1;2573:5;2563:7;:15;:20;2559:85;;2641:3;2602:34;2594:5;:42;2593:51;;2585:59;;2559:85;2677:1;2668:5;2658:7;:15;:20;2654:85;;2736:3;2697:34;2689:5;:42;2688:51;;2680:59;;2654:85;2773:1;2763:6;2753:7;:16;:21;2749:86;;2832:3;2793:34;2785:5;:42;2784:51;;2776:59;;2749:86;2869:1;2859:6;2849:7;:16;:21;2845:86;;2928:3;2889:34;2881:5;:42;2880:51;;2872:59;;2845:86;2965:1;2955:6;2945:7;:16;:21;2941:86;;3024:3;2985:34;2977:5;:42;2976:51;;2968:59;;2941:86;3061:1;3051:6;3041:7;:16;:21;3037:86;;3120:3;3081:34;3073:5;:42;3072:51;;3064:59;;3037:86;3158:1;3147:7;3137;:17;:22;3133:86;;3216:3;3178:33;3170:5;:41;3169:50;;3161:58;;3133:86;3254:1;3243:7;3233;:17;:22;3229:85;;3311:3;3274:32;3266:5;:40;3265:49;;3257:57;;3229:85;3349:1;3338:7;3328;:17;:22;3324:83;;3404:3;3369:30;3361:5;:38;3360:47;;3352:55;;3324:83;3442:1;3431:7;3421;:17;:22;3417:78;;3492:3;3462:25;3454:5;:33;3453:42;;3445:50;;3417:78;3517:1;3510:4;:8;;;3506:47;;;3548:5;3528:17;:25;;;;;;3520:33;;3506:47;3924:1;3912:7;3903:5;:17;;;;;;:22;:30;;3932:1;3903:30;;;3928:1;3903:30;3886:48;;3896:2;3887:5;:11;;3886:48;3863:72;;1362:2580;;;;;:::o;749:3776:11:-;861:14;1190:13;1258;1375:1;1371:6;1368:1;1365;1358:20;1407:1;1404;1400:9;1391:18;;1458:5;1454:2;1451:13;1443:5;1439:2;1435:14;1431:34;1422:43;;1334:141;1556:1;1547:5;:10;1543:179;;;1595:1;1581:11;:15;1573:24;;;;;;1659:11;1652:5;1648:23;1638:33;;1698:13;;;;1543:179;1849:5;1835:11;:19;1827:28;;;;;;2132:17;2208:11;2205:1;2202;2195:25;2182:38;;2351:5;2340:9;2337:20;2330:5;2326:32;2317:41;;2391:9;2384:5;2380:21;2371:30;;2560:12;2590:11;2576;2575:12;;:26;2560:41;;2712:4;2699:11;2695:22;2680:37;;2834:4;2827:5;2823:16;2814:25;;3088:1;3081:4;3074;3071:1;3067:12;3063:23;3059:31;3051:39;;3126:4;3118:5;:12;3109:21;;;;3464:11;3498:1;3483:11;3479:1;:15;3478:21;3464:35;;3739:3;3725:11;:17;3721:1;:21;3714:28;;;;3797:3;3783:11;:17;3779:1;:21;3772:28;;;;3856:3;3842:11;:17;3838:1;:21;3831:28;;;;3915:3;3901:11;:17;3897:1;:21;3890:28;;;;3974:3;3960:11;:17;3956:1;:21;3949:28;;;;4034:3;4020:11;:17;4016:1;:21;4009:28;;;;4492:3;4484:5;:11;4475:20;;4505:13;;;;;749:3776;;;;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1198000",
								"executionCost": "1273",
								"totalCost": "1199273"
							},
							"external": {
								"EstimateAmountOut(address,address,address,uint256)": "infinite",
								"PoolExists(address,address,address,uint256,uint256)": "infinite",
								"Price(address,address,address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 260,
									"end": 2506,
									"name": "PUSH #[$]",
									"source": 18,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 260,
									"end": 2506,
									"name": "PUSH [$]",
									"source": 18,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 260,
									"end": 2506,
									"name": "PUSH",
									"source": 18,
									"value": "B"
								},
								{
									"begin": 260,
									"end": 2506,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 260,
									"end": 2506,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 260,
									"end": 2506,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 260,
									"end": 2506,
									"name": "CODECOPY",
									"source": 18
								},
								{
									"begin": 260,
									"end": 2506,
									"name": "DUP1",
									"source": 18
								},
								{
									"begin": 260,
									"end": 2506,
									"name": "MLOAD",
									"source": 18
								},
								{
									"begin": 260,
									"end": 2506,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 260,
									"end": 2506,
									"name": "BYTE",
									"source": 18
								},
								{
									"begin": 260,
									"end": 2506,
									"name": "PUSH",
									"source": 18,
									"value": "73"
								},
								{
									"begin": 260,
									"end": 2506,
									"name": "EQ",
									"source": 18
								},
								{
									"begin": 260,
									"end": 2506,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "1"
								},
								{
									"begin": 260,
									"end": 2506,
									"name": "JUMPI",
									"source": 18
								},
								{
									"begin": 260,
									"end": 2506,
									"name": "INVALID",
									"source": 18
								},
								{
									"begin": 260,
									"end": 2506,
									"name": "tag",
									"source": 18,
									"value": "1"
								},
								{
									"begin": 260,
									"end": 2506,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 260,
									"end": 2506,
									"name": "ADDRESS",
									"source": 18
								},
								{
									"begin": 260,
									"end": 2506,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 260,
									"end": 2506,
									"name": "MSTORE",
									"source": 18
								},
								{
									"begin": 260,
									"end": 2506,
									"name": "PUSH",
									"source": 18,
									"value": "73"
								},
								{
									"begin": 260,
									"end": 2506,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 260,
									"end": 2506,
									"name": "MSTORE8",
									"source": 18
								},
								{
									"begin": 260,
									"end": 2506,
									"name": "DUP3",
									"source": 18
								},
								{
									"begin": 260,
									"end": 2506,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 260,
									"end": 2506,
									"name": "RETURN",
									"source": 18
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f3f6ae6982dfb80d107d6c14ce1262f819d472fbeb6e015df3c349ee2a73330164736f6c63430007060033",
									".code": [
										{
											"begin": 260,
											"end": 2506,
											"name": "PUSHDEPLOYADDRESS",
											"source": 18
										},
										{
											"begin": 260,
											"end": 2506,
											"name": "ADDRESS",
											"source": 18
										},
										{
											"begin": 260,
											"end": 2506,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 260,
											"end": 2506,
											"name": "PUSH",
											"source": 18,
											"value": "80"
										},
										{
											"begin": 260,
											"end": 2506,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 260,
											"end": 2506,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 260,
											"end": 2506,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 260,
											"end": 2506,
											"name": "CALLDATASIZE",
											"source": 18
										},
										{
											"begin": 260,
											"end": 2506,
											"name": "LT",
											"source": 18
										},
										{
											"begin": 260,
											"end": 2506,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 260,
											"end": 2506,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 260,
											"end": 2506,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 260,
											"end": 2506,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": 260,
											"end": 2506,
											"name": "PUSH",
											"source": 18,
											"value": "E0"
										},
										{
											"begin": 260,
											"end": 2506,
											"name": "SHR",
											"source": 18
										},
										{
											"begin": 260,
											"end": 2506,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 260,
											"end": 2506,
											"name": "PUSH",
											"source": 18,
											"value": "8C39560E"
										},
										{
											"begin": 260,
											"end": 2506,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 260,
											"end": 2506,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "2"
										},
										{
											"begin": 260,
											"end": 2506,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 260,
											"end": 2506,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 260,
											"end": 2506,
											"name": "PUSH",
											"source": 18,
											"value": "BCBCAA29"
										},
										{
											"begin": 260,
											"end": 2506,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 260,
											"end": 2506,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "3"
										},
										{
											"begin": 260,
											"end": 2506,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 260,
											"end": 2506,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 260,
											"end": 2506,
											"name": "PUSH",
											"source": 18,
											"value": "C361E0B1"
										},
										{
											"begin": 260,
											"end": 2506,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 260,
											"end": 2506,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 260,
											"end": 2506,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 260,
											"end": 2506,
											"name": "tag",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 260,
											"end": 2506,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 260,
											"end": 2506,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 260,
											"end": 2506,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 260,
											"end": 2506,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 290,
											"end": 1024,
											"name": "tag",
											"source": 18,
											"value": "2"
										},
										{
											"begin": 290,
											"end": 1024,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 290,
											"end": 1024,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "5"
										},
										{
											"begin": 290,
											"end": 1024,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 290,
											"end": 1024,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 290,
											"end": 1024,
											"name": "CALLDATASIZE",
											"source": 18
										},
										{
											"begin": 290,
											"end": 1024,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 290,
											"end": 1024,
											"name": "PUSH",
											"source": 18,
											"value": "80"
										},
										{
											"begin": 290,
											"end": 1024,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 290,
											"end": 1024,
											"name": "LT",
											"source": 18
										},
										{
											"begin": 290,
											"end": 1024,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 290,
											"end": 1024,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "6"
										},
										{
											"begin": 290,
											"end": 1024,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 290,
											"end": 1024,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 290,
											"end": 1024,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 290,
											"end": 1024,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 290,
											"end": 1024,
											"name": "tag",
											"source": 18,
											"value": "6"
										},
										{
											"begin": 290,
											"end": 1024,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 290,
											"end": 1024,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 290,
											"end": 1024,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 290,
											"end": 1024,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 290,
											"end": 1024,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 290,
											"end": 1024,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 290,
											"end": 1024,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": 290,
											"end": 1024,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 290,
											"end": 1024,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 290,
											"end": 1024,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 290,
											"end": 1024,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 290,
											"end": 1024,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 290,
											"end": 1024,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 290,
											"end": 1024,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 290,
											"end": 1024,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 290,
											"end": 1024,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 290,
											"end": 1024,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 290,
											"end": 1024,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": 290,
											"end": 1024,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 290,
											"end": 1024,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 290,
											"end": 1024,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 290,
											"end": 1024,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 290,
											"end": 1024,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 290,
											"end": 1024,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 290,
											"end": 1024,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 290,
											"end": 1024,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 290,
											"end": 1024,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 290,
											"end": 1024,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 290,
											"end": 1024,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": 290,
											"end": 1024,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 290,
											"end": 1024,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 290,
											"end": 1024,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 290,
											"end": 1024,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 290,
											"end": 1024,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 290,
											"end": 1024,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 290,
											"end": 1024,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 290,
											"end": 1024,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 290,
											"end": 1024,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 290,
											"end": 1024,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 290,
											"end": 1024,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": 290,
											"end": 1024,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 290,
											"end": 1024,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 290,
											"end": 1024,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 290,
											"end": 1024,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 290,
											"end": 1024,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 290,
											"end": 1024,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 290,
											"end": 1024,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 290,
											"end": 1024,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 290,
											"end": 1024,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 290,
											"end": 1024,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 290,
											"end": 1024,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "7"
										},
										{
											"begin": 290,
											"end": 1024,
											"name": "JUMP",
											"source": 18,
											"value": "[in]"
										},
										{
											"begin": 290,
											"end": 1024,
											"name": "tag",
											"source": 18,
											"value": "5"
										},
										{
											"begin": 290,
											"end": 1024,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 290,
											"end": 1024,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 290,
											"end": 1024,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 290,
											"end": 1024,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 290,
											"end": 1024,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 290,
											"end": 1024,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 290,
											"end": 1024,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 290,
											"end": 1024,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 290,
											"end": 1024,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 290,
											"end": 1024,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 290,
											"end": 1024,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFF"
										},
										{
											"begin": 290,
											"end": 1024,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 290,
											"end": 1024,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 290,
											"end": 1024,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 290,
											"end": 1024,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 290,
											"end": 1024,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 290,
											"end": 1024,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 290,
											"end": 1024,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 290,
											"end": 1024,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 290,
											"end": 1024,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 290,
											"end": 1024,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 290,
											"end": 1024,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 290,
											"end": 1024,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 290,
											"end": 1024,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 290,
											"end": 1024,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 290,
											"end": 1024,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 290,
											"end": 1024,
											"name": "RETURN",
											"source": 18
										},
										{
											"begin": 1972,
											"end": 2503,
											"name": "tag",
											"source": 18,
											"value": "3"
										},
										{
											"begin": 1972,
											"end": 2503,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1972,
											"end": 2503,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "8"
										},
										{
											"begin": 1972,
											"end": 2503,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 1972,
											"end": 2503,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1972,
											"end": 2503,
											"name": "CALLDATASIZE",
											"source": 18
										},
										{
											"begin": 1972,
											"end": 2503,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 1972,
											"end": 2503,
											"name": "PUSH",
											"source": 18,
											"value": "A0"
										},
										{
											"begin": 1972,
											"end": 2503,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1972,
											"end": 2503,
											"name": "LT",
											"source": 18
										},
										{
											"begin": 1972,
											"end": 2503,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 1972,
											"end": 2503,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "9"
										},
										{
											"begin": 1972,
											"end": 2503,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 1972,
											"end": 2503,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1972,
											"end": 2503,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1972,
											"end": 2503,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 1972,
											"end": 2503,
											"name": "tag",
											"source": 18,
											"value": "9"
										},
										{
											"begin": 1972,
											"end": 2503,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1972,
											"end": 2503,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1972,
											"end": 2503,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1972,
											"end": 2503,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1972,
											"end": 2503,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1972,
											"end": 2503,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1972,
											"end": 2503,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": 1972,
											"end": 2503,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1972,
											"end": 2503,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 1972,
											"end": 2503,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1972,
											"end": 2503,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 1972,
											"end": 2503,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1972,
											"end": 2503,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1972,
											"end": 2503,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 1972,
											"end": 2503,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1972,
											"end": 2503,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1972,
											"end": 2503,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1972,
											"end": 2503,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": 1972,
											"end": 2503,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1972,
											"end": 2503,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 1972,
											"end": 2503,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1972,
											"end": 2503,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 1972,
											"end": 2503,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1972,
											"end": 2503,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1972,
											"end": 2503,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 1972,
											"end": 2503,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1972,
											"end": 2503,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1972,
											"end": 2503,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1972,
											"end": 2503,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": 1972,
											"end": 2503,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1972,
											"end": 2503,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 1972,
											"end": 2503,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1972,
											"end": 2503,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 1972,
											"end": 2503,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1972,
											"end": 2503,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1972,
											"end": 2503,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 1972,
											"end": 2503,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1972,
											"end": 2503,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1972,
											"end": 2503,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1972,
											"end": 2503,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": 1972,
											"end": 2503,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1972,
											"end": 2503,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 1972,
											"end": 2503,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1972,
											"end": 2503,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1972,
											"end": 2503,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 1972,
											"end": 2503,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1972,
											"end": 2503,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1972,
											"end": 2503,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1972,
											"end": 2503,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": 1972,
											"end": 2503,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1972,
											"end": 2503,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 1972,
											"end": 2503,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1972,
											"end": 2503,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1972,
											"end": 2503,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 1972,
											"end": 2503,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1972,
											"end": 2503,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1972,
											"end": 2503,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1972,
											"end": 2503,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1972,
											"end": 2503,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1972,
											"end": 2503,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "10"
										},
										{
											"begin": 1972,
											"end": 2503,
											"name": "JUMP",
											"source": 18,
											"value": "[in]"
										},
										{
											"begin": 1972,
											"end": 2503,
											"name": "tag",
											"source": 18,
											"value": "8"
										},
										{
											"begin": 1972,
											"end": 2503,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1972,
											"end": 2503,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 1972,
											"end": 2503,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 1972,
											"end": 2503,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1972,
											"end": 2503,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 1972,
											"end": 2503,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 1972,
											"end": 2503,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 1972,
											"end": 2503,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1972,
											"end": 2503,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1972,
											"end": 2503,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 1972,
											"end": 2503,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1972,
											"end": 2503,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1972,
											"end": 2503,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1972,
											"end": 2503,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1972,
											"end": 2503,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 1972,
											"end": 2503,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 1972,
											"end": 2503,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1972,
											"end": 2503,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1972,
											"end": 2503,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 1972,
											"end": 2503,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1972,
											"end": 2503,
											"name": "RETURN",
											"source": 18
										},
										{
											"begin": 1034,
											"end": 1965,
											"name": "tag",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 1034,
											"end": 1965,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1034,
											"end": 1965,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "11"
										},
										{
											"begin": 1034,
											"end": 1965,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 1034,
											"end": 1965,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1034,
											"end": 1965,
											"name": "CALLDATASIZE",
											"source": 18
										},
										{
											"begin": 1034,
											"end": 1965,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 1034,
											"end": 1965,
											"name": "PUSH",
											"source": 18,
											"value": "60"
										},
										{
											"begin": 1034,
											"end": 1965,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1034,
											"end": 1965,
											"name": "LT",
											"source": 18
										},
										{
											"begin": 1034,
											"end": 1965,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 1034,
											"end": 1965,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "12"
										},
										{
											"begin": 1034,
											"end": 1965,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 1034,
											"end": 1965,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1034,
											"end": 1965,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1034,
											"end": 1965,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 1034,
											"end": 1965,
											"name": "tag",
											"source": 18,
											"value": "12"
										},
										{
											"begin": 1034,
											"end": 1965,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1034,
											"end": 1965,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1034,
											"end": 1965,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1034,
											"end": 1965,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1034,
											"end": 1965,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1034,
											"end": 1965,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1034,
											"end": 1965,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": 1034,
											"end": 1965,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1034,
											"end": 1965,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 1034,
											"end": 1965,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1034,
											"end": 1965,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 1034,
											"end": 1965,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1034,
											"end": 1965,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1034,
											"end": 1965,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 1034,
											"end": 1965,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1034,
											"end": 1965,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1034,
											"end": 1965,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1034,
											"end": 1965,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": 1034,
											"end": 1965,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1034,
											"end": 1965,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 1034,
											"end": 1965,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1034,
											"end": 1965,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 1034,
											"end": 1965,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1034,
											"end": 1965,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1034,
											"end": 1965,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 1034,
											"end": 1965,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1034,
											"end": 1965,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1034,
											"end": 1965,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1034,
											"end": 1965,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": 1034,
											"end": 1965,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1034,
											"end": 1965,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 1034,
											"end": 1965,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1034,
											"end": 1965,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 1034,
											"end": 1965,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1034,
											"end": 1965,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1034,
											"end": 1965,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 1034,
											"end": 1965,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1034,
											"end": 1965,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1034,
											"end": 1965,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1034,
											"end": 1965,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1034,
											"end": 1965,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1034,
											"end": 1965,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "13"
										},
										{
											"begin": 1034,
											"end": 1965,
											"name": "JUMP",
											"source": 18,
											"value": "[in]"
										},
										{
											"begin": 1034,
											"end": 1965,
											"name": "tag",
											"source": 18,
											"value": "11"
										},
										{
											"begin": 1034,
											"end": 1965,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1034,
											"end": 1965,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 1034,
											"end": 1965,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 1034,
											"end": 1965,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1034,
											"end": 1965,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 1034,
											"end": 1965,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1034,
											"end": 1965,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1034,
											"end": 1965,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 1034,
											"end": 1965,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1034,
											"end": 1965,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 1034,
											"end": 1965,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFF"
										},
										{
											"begin": 1034,
											"end": 1965,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 1034,
											"end": 1965,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1034,
											"end": 1965,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1034,
											"end": 1965,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 1034,
											"end": 1965,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1034,
											"end": 1965,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 1034,
											"end": 1965,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1034,
											"end": 1965,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1034,
											"end": 1965,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1034,
											"end": 1965,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 1034,
											"end": 1965,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 1034,
											"end": 1965,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1034,
											"end": 1965,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1034,
											"end": 1965,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 1034,
											"end": 1965,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1034,
											"end": 1965,
											"name": "RETURN",
											"source": 18
										},
										{
											"begin": 290,
											"end": 1024,
											"name": "tag",
											"source": 18,
											"value": "7"
										},
										{
											"begin": 290,
											"end": 1024,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 397,
											"end": 414,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 415,
											"end": 425,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 440,
											"end": 461,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 440,
											"end": 484,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 440,
											"end": 484,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 440,
											"end": 484,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 440,
											"end": 484,
											"name": "PUSH",
											"source": 18,
											"value": "80"
										},
										{
											"begin": 440,
											"end": 484,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 440,
											"end": 484,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 440,
											"end": 484,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 440,
											"end": 484,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 465,
											"end": 468,
											"name": "PUSH",
											"source": 18,
											"value": "64"
										},
										{
											"begin": 440,
											"end": 484,
											"name": "PUSH",
											"source": 18,
											"value": "FFFF"
										},
										{
											"begin": 440,
											"end": 484,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 440,
											"end": 484,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 440,
											"end": 484,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 440,
											"end": 484,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 440,
											"end": 484,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 469,
											"end": 472,
											"name": "PUSH",
											"source": 18,
											"value": "1F4"
										},
										{
											"begin": 440,
											"end": 484,
											"name": "PUSH",
											"source": 18,
											"value": "FFFF"
										},
										{
											"begin": 440,
											"end": 484,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 440,
											"end": 484,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 440,
											"end": 484,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 440,
											"end": 484,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 440,
											"end": 484,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 473,
											"end": 477,
											"name": "PUSH",
											"source": 18,
											"value": "BB8"
										},
										{
											"begin": 440,
											"end": 484,
											"name": "PUSH",
											"source": 18,
											"value": "FFFF"
										},
										{
											"begin": 440,
											"end": 484,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 440,
											"end": 484,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 440,
											"end": 484,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 440,
											"end": 484,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 440,
											"end": 484,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 478,
											"end": 483,
											"name": "PUSH",
											"source": 18,
											"value": "2710"
										},
										{
											"begin": 440,
											"end": 484,
											"name": "PUSH",
											"source": 18,
											"value": "FFFF"
										},
										{
											"begin": 440,
											"end": 484,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 440,
											"end": 484,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 440,
											"end": 484,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 440,
											"end": 484,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 440,
											"end": 484,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 440,
											"end": 484,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 502,
											"end": 509,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 498,
											"end": 1014,
											"name": "tag",
											"source": 18,
											"value": "15"
										},
										{
											"begin": 498,
											"end": 1014,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 514,
											"end": 515,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 512,
											"end": 513,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 512,
											"end": 515,
											"name": "PUSH",
											"source": 18,
											"value": "FF"
										},
										{
											"begin": 512,
											"end": 515,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 512,
											"end": 515,
											"name": "LT",
											"source": 18
										},
										{
											"begin": 498,
											"end": 1014,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 498,
											"end": 1014,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "16"
										},
										{
											"begin": 498,
											"end": 1014,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 538,
											"end": 550,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 571,
											"end": 578,
											"name": "DUP9",
											"source": 18
										},
										{
											"begin": 553,
											"end": 587,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 553,
											"end": 587,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 553,
											"end": 587,
											"name": "PUSH",
											"source": 18,
											"value": "1698EE82"
										},
										{
											"begin": 588,
											"end": 590,
											"name": "DUP10",
											"source": 18
										},
										{
											"begin": 591,
											"end": 593,
											"name": "DUP10",
											"source": 18
										},
										{
											"begin": 594,
											"end": 598,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 599,
											"end": 600,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 594,
											"end": 601,
											"name": "PUSH",
											"source": 18,
											"value": "FF"
										},
										{
											"begin": 594,
											"end": 601,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 594,
											"end": 601,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 594,
											"end": 601,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 594,
											"end": 601,
											"name": "LT",
											"source": 18
										},
										{
											"begin": 594,
											"end": 601,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "18"
										},
										{
											"begin": 594,
											"end": 601,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 594,
											"end": 601,
											"name": "INVALID",
											"source": 18
										},
										{
											"begin": 594,
											"end": 601,
											"name": "tag",
											"source": 18,
											"value": "18"
										},
										{
											"begin": 594,
											"end": 601,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 594,
											"end": 601,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 594,
											"end": 601,
											"name": "MUL",
											"source": 18
										},
										{
											"begin": 594,
											"end": 601,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 594,
											"end": 601,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 553,
											"end": 602,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 553,
											"end": 602,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 553,
											"end": 602,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 553,
											"end": 602,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFF"
										},
										{
											"begin": 553,
											"end": 602,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 553,
											"end": 602,
											"name": "PUSH",
											"source": 18,
											"value": "E0"
										},
										{
											"begin": 553,
											"end": 602,
											"name": "SHL",
											"source": 18
										},
										{
											"begin": 553,
											"end": 602,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 553,
											"end": 602,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 553,
											"end": 602,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 553,
											"end": 602,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 553,
											"end": 602,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 553,
											"end": 602,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 553,
											"end": 602,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 553,
											"end": 602,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 553,
											"end": 602,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 553,
											"end": 602,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 553,
											"end": 602,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 553,
											"end": 602,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 553,
											"end": 602,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 553,
											"end": 602,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 553,
											"end": 602,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 553,
											"end": 602,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 553,
											"end": 602,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 553,
											"end": 602,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 553,
											"end": 602,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 553,
											"end": 602,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 553,
											"end": 602,
											"name": "PUSH",
											"source": 18,
											"value": "FFFF"
										},
										{
											"begin": 553,
											"end": 602,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 553,
											"end": 602,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 553,
											"end": 602,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 553,
											"end": 602,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 553,
											"end": 602,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 553,
											"end": 602,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 553,
											"end": 602,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 553,
											"end": 602,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 553,
											"end": 602,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 553,
											"end": 602,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 553,
											"end": 602,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 553,
											"end": 602,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 553,
											"end": 602,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 553,
											"end": 602,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 553,
											"end": 602,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 553,
											"end": 602,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 553,
											"end": 602,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 553,
											"end": 602,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 553,
											"end": 602,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 553,
											"end": 602,
											"name": "EXTCODESIZE",
											"source": 18
										},
										{
											"begin": 553,
											"end": 602,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 553,
											"end": 602,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 553,
											"end": 602,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 553,
											"end": 602,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "19"
										},
										{
											"begin": 553,
											"end": 602,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 553,
											"end": 602,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 553,
											"end": 602,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 553,
											"end": 602,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 553,
											"end": 602,
											"name": "tag",
											"source": 18,
											"value": "19"
										},
										{
											"begin": 553,
											"end": 602,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 553,
											"end": 602,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 553,
											"end": 602,
											"name": "GAS",
											"source": 18
										},
										{
											"begin": 553,
											"end": 602,
											"name": "STATICCALL",
											"source": 18
										},
										{
											"begin": 553,
											"end": 602,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 553,
											"end": 602,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 553,
											"end": 602,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 553,
											"end": 602,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "21"
										},
										{
											"begin": 553,
											"end": 602,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 553,
											"end": 602,
											"name": "RETURNDATASIZE",
											"source": 18
										},
										{
											"begin": 553,
											"end": 602,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 553,
											"end": 602,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 553,
											"end": 602,
											"name": "RETURNDATACOPY",
											"source": 18
										},
										{
											"begin": 553,
											"end": 602,
											"name": "RETURNDATASIZE",
											"source": 18
										},
										{
											"begin": 553,
											"end": 602,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 553,
											"end": 602,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 553,
											"end": 602,
											"name": "tag",
											"source": 18,
											"value": "21"
										},
										{
											"begin": 553,
											"end": 602,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 553,
											"end": 602,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 553,
											"end": 602,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 553,
											"end": 602,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 553,
											"end": 602,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 553,
											"end": 602,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 553,
											"end": 602,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 553,
											"end": 602,
											"name": "RETURNDATASIZE",
											"source": 18
										},
										{
											"begin": 553,
											"end": 602,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 553,
											"end": 602,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 553,
											"end": 602,
											"name": "LT",
											"source": 18
										},
										{
											"begin": 553,
											"end": 602,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 553,
											"end": 602,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "22"
										},
										{
											"begin": 553,
											"end": 602,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 553,
											"end": 602,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 553,
											"end": 602,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 553,
											"end": 602,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 553,
											"end": 602,
											"name": "tag",
											"source": 18,
											"value": "22"
										},
										{
											"begin": 553,
											"end": 602,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 553,
											"end": 602,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 553,
											"end": 602,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 553,
											"end": 602,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 553,
											"end": 602,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 553,
											"end": 602,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 553,
											"end": 602,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 553,
											"end": 602,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 553,
											"end": 602,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 553,
											"end": 602,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 553,
											"end": 602,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 553,
											"end": 602,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 553,
											"end": 602,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 553,
											"end": 602,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 553,
											"end": 602,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 553,
											"end": 602,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 553,
											"end": 602,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 538,
											"end": 602,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 538,
											"end": 602,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 640,
											"end": 641,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 624,
											"end": 642,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 624,
											"end": 642,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 624,
											"end": 628,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 624,
											"end": 642,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 624,
											"end": 642,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 624,
											"end": 642,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 620,
											"end": 652,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 620,
											"end": 652,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "23"
										},
										{
											"begin": 620,
											"end": 652,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 644,
											"end": 652,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 644,
											"end": 652,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "17"
										},
										{
											"begin": 644,
											"end": 652,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 620,
											"end": 652,
											"name": "tag",
											"source": 18,
											"value": "23"
										},
										{
											"begin": 620,
											"end": 652,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 704,
											"end": 712,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 682,
											"end": 684,
											"name": "DUP9",
											"source": 18
										},
										{
											"begin": 675,
											"end": 695,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 675,
											"end": 695,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 675,
											"end": 695,
											"name": "PUSH",
											"source": 18,
											"value": "70A08231"
										},
										{
											"begin": 696,
											"end": 700,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 675,
											"end": 701,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 675,
											"end": 701,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 675,
											"end": 701,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 675,
											"end": 701,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFF"
										},
										{
											"begin": 675,
											"end": 701,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 675,
											"end": 701,
											"name": "PUSH",
											"source": 18,
											"value": "E0"
										},
										{
											"begin": 675,
											"end": 701,
											"name": "SHL",
											"source": 18
										},
										{
											"begin": 675,
											"end": 701,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 675,
											"end": 701,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 675,
											"end": 701,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 675,
											"end": 701,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 675,
											"end": 701,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 675,
											"end": 701,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 675,
											"end": 701,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 675,
											"end": 701,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 675,
											"end": 701,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 675,
											"end": 701,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 675,
											"end": 701,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 675,
											"end": 701,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 675,
											"end": 701,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 675,
											"end": 701,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 675,
											"end": 701,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 675,
											"end": 701,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 675,
											"end": 701,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 675,
											"end": 701,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 675,
											"end": 701,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 675,
											"end": 701,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 675,
											"end": 701,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 675,
											"end": 701,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 675,
											"end": 701,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 675,
											"end": 701,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 675,
											"end": 701,
											"name": "EXTCODESIZE",
											"source": 18
										},
										{
											"begin": 675,
											"end": 701,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 675,
											"end": 701,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 675,
											"end": 701,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 675,
											"end": 701,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 675,
											"end": 701,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 675,
											"end": 701,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 675,
											"end": 701,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 675,
											"end": 701,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 675,
											"end": 701,
											"name": "tag",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 675,
											"end": 701,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 675,
											"end": 701,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 675,
											"end": 701,
											"name": "GAS",
											"source": 18
										},
										{
											"begin": 675,
											"end": 701,
											"name": "STATICCALL",
											"source": 18
										},
										{
											"begin": 675,
											"end": 701,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 675,
											"end": 701,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 675,
											"end": 701,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 675,
											"end": 701,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "26"
										},
										{
											"begin": 675,
											"end": 701,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 675,
											"end": 701,
											"name": "RETURNDATASIZE",
											"source": 18
										},
										{
											"begin": 675,
											"end": 701,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 675,
											"end": 701,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 675,
											"end": 701,
											"name": "RETURNDATACOPY",
											"source": 18
										},
										{
											"begin": 675,
											"end": 701,
											"name": "RETURNDATASIZE",
											"source": 18
										},
										{
											"begin": 675,
											"end": 701,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 675,
											"end": 701,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 675,
											"end": 701,
											"name": "tag",
											"source": 18,
											"value": "26"
										},
										{
											"begin": 675,
											"end": 701,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 675,
											"end": 701,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 675,
											"end": 701,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 675,
											"end": 701,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 675,
											"end": 701,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 675,
											"end": 701,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 675,
											"end": 701,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 675,
											"end": 701,
											"name": "RETURNDATASIZE",
											"source": 18
										},
										{
											"begin": 675,
											"end": 701,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 675,
											"end": 701,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 675,
											"end": 701,
											"name": "LT",
											"source": 18
										},
										{
											"begin": 675,
											"end": 701,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 675,
											"end": 701,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "27"
										},
										{
											"begin": 675,
											"end": 701,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 675,
											"end": 701,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 675,
											"end": 701,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 675,
											"end": 701,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 675,
											"end": 701,
											"name": "tag",
											"source": 18,
											"value": "27"
										},
										{
											"begin": 675,
											"end": 701,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 675,
											"end": 701,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 675,
											"end": 701,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 675,
											"end": 701,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 675,
											"end": 701,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 675,
											"end": 701,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 675,
											"end": 701,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 675,
											"end": 701,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 675,
											"end": 701,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 675,
											"end": 701,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 675,
											"end": 701,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 675,
											"end": 701,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 675,
											"end": 701,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 675,
											"end": 701,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 675,
											"end": 701,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 675,
											"end": 701,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 675,
											"end": 701,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 675,
											"end": 712,
											"name": "LT",
											"source": 18
										},
										{
											"begin": 671,
											"end": 722,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 671,
											"end": 722,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "28"
										},
										{
											"begin": 671,
											"end": 722,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 714,
											"end": 722,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 714,
											"end": 722,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "17"
										},
										{
											"begin": 714,
											"end": 722,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 671,
											"end": 722,
											"name": "tag",
											"source": 18,
											"value": "28"
										},
										{
											"begin": 671,
											"end": 722,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 740,
											"end": 750,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 753,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "29"
										},
										{
											"begin": 775,
											"end": 779,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 780,
											"end": 781,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 753,
											"end": 774,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "30"
										},
										{
											"begin": 753,
											"end": 782,
											"name": "JUMP",
											"source": 18,
											"value": "[in]"
										},
										{
											"begin": 753,
											"end": 782,
											"name": "tag",
											"source": 18,
											"value": "29"
										},
										{
											"begin": 753,
											"end": 782,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 740,
											"end": 782,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 740,
											"end": 782,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 800,
											"end": 811,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 814,
											"end": 872,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "31"
										},
										{
											"begin": 843,
											"end": 847,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 856,
											"end": 864,
											"name": "DUP10",
											"source": 18
										},
										{
											"begin": 866,
											"end": 868,
											"name": "DUP13",
											"source": 18
										},
										{
											"begin": 869,
											"end": 871,
											"name": "DUP13",
											"source": 18
										},
										{
											"begin": 814,
											"end": 842,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "32"
										},
										{
											"begin": 814,
											"end": 872,
											"name": "JUMP",
											"source": 18,
											"value": "[in]"
										},
										{
											"begin": 814,
											"end": 872,
											"name": "tag",
											"source": 18,
											"value": "31"
										},
										{
											"begin": 814,
											"end": 872,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 800,
											"end": 872,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 800,
											"end": 872,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 900,
											"end": 909,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 894,
											"end": 897,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 894,
											"end": 909,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 889,
											"end": 990,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 889,
											"end": 990,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "33"
										},
										{
											"begin": 889,
											"end": 990,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 941,
											"end": 944,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 929,
											"end": 944,
											"name": "SWAP7",
											"source": 18
										},
										{
											"begin": 929,
											"end": 944,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 968,
											"end": 972,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 973,
											"end": 974,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 968,
											"end": 975,
											"name": "PUSH",
											"source": 18,
											"value": "FF"
										},
										{
											"begin": 968,
											"end": 975,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 968,
											"end": 975,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 968,
											"end": 975,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 968,
											"end": 975,
											"name": "LT",
											"source": 18
										},
										{
											"begin": 968,
											"end": 975,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "34"
										},
										{
											"begin": 968,
											"end": 975,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 968,
											"end": 975,
											"name": "INVALID",
											"source": 18
										},
										{
											"begin": 968,
											"end": 975,
											"name": "tag",
											"source": 18,
											"value": "34"
										},
										{
											"begin": 968,
											"end": 975,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 968,
											"end": 975,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 968,
											"end": 975,
											"name": "MUL",
											"source": 18
										},
										{
											"begin": 968,
											"end": 975,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 968,
											"end": 975,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 962,
											"end": 975,
											"name": "PUSH",
											"source": 18,
											"value": "FFFF"
										},
										{
											"begin": 962,
											"end": 975,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 962,
											"end": 975,
											"name": "SWAP6",
											"source": 18
										},
										{
											"begin": 962,
											"end": 975,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 889,
											"end": 990,
											"name": "tag",
											"source": 18,
											"value": "33"
										},
										{
											"begin": 889,
											"end": 990,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 498,
											"end": 1014,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 498,
											"end": 1014,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 498,
											"end": 1014,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 498,
											"end": 1014,
											"name": "tag",
											"source": 18,
											"value": "17"
										},
										{
											"begin": 498,
											"end": 1014,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 516,
											"end": 519,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 516,
											"end": 519,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 516,
											"end": 519,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 516,
											"end": 519,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 516,
											"end": 519,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 516,
											"end": 519,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 516,
											"end": 519,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 498,
											"end": 1014,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "15"
										},
										{
											"begin": 498,
											"end": 1014,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 498,
											"end": 1014,
											"name": "tag",
											"source": 18,
											"value": "16"
										},
										{
											"begin": 498,
											"end": 1014,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 498,
											"end": 1014,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 290,
											"end": 1024,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 290,
											"end": 1024,
											"name": "SWAP5",
											"source": 18
										},
										{
											"begin": 290,
											"end": 1024,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 290,
											"end": 1024,
											"name": "SWAP5",
											"source": 18
										},
										{
											"begin": 290,
											"end": 1024,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 290,
											"end": 1024,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 290,
											"end": 1024,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 290,
											"end": 1024,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 290,
											"end": 1024,
											"name": "JUMP",
											"source": 18,
											"value": "[out]"
										},
										{
											"begin": 1972,
											"end": 2503,
											"name": "tag",
											"source": 18,
											"value": "10"
										},
										{
											"begin": 1972,
											"end": 2503,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2074,
											"end": 2078,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2089,
											"end": 2110,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2089,
											"end": 2133,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 2089,
											"end": 2133,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 2089,
											"end": 2133,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2089,
											"end": 2133,
											"name": "PUSH",
											"source": 18,
											"value": "80"
										},
										{
											"begin": 2089,
											"end": 2133,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2089,
											"end": 2133,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 2089,
											"end": 2133,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 2089,
											"end": 2133,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2114,
											"end": 2117,
											"name": "PUSH",
											"source": 18,
											"value": "64"
										},
										{
											"begin": 2089,
											"end": 2133,
											"name": "PUSH",
											"source": 18,
											"value": "FFFF"
										},
										{
											"begin": 2089,
											"end": 2133,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 2089,
											"end": 2133,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2089,
											"end": 2133,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 2089,
											"end": 2133,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 2089,
											"end": 2133,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2118,
											"end": 2121,
											"name": "PUSH",
											"source": 18,
											"value": "1F4"
										},
										{
											"begin": 2089,
											"end": 2133,
											"name": "PUSH",
											"source": 18,
											"value": "FFFF"
										},
										{
											"begin": 2089,
											"end": 2133,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 2089,
											"end": 2133,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2089,
											"end": 2133,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 2089,
											"end": 2133,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 2089,
											"end": 2133,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2122,
											"end": 2126,
											"name": "PUSH",
											"source": 18,
											"value": "BB8"
										},
										{
											"begin": 2089,
											"end": 2133,
											"name": "PUSH",
											"source": 18,
											"value": "FFFF"
										},
										{
											"begin": 2089,
											"end": 2133,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 2089,
											"end": 2133,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2089,
											"end": 2133,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 2089,
											"end": 2133,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 2089,
											"end": 2133,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2127,
											"end": 2132,
											"name": "PUSH",
											"source": 18,
											"value": "2710"
										},
										{
											"begin": 2089,
											"end": 2133,
											"name": "PUSH",
											"source": 18,
											"value": "FFFF"
										},
										{
											"begin": 2089,
											"end": 2133,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 2089,
											"end": 2133,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2089,
											"end": 2133,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 2089,
											"end": 2133,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2089,
											"end": 2133,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2089,
											"end": 2133,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2143,
											"end": 2162,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "36"
										},
										{
											"begin": 2143,
											"end": 2162,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "37"
										},
										{
											"begin": 2143,
											"end": 2162,
											"name": "JUMP",
											"source": 18,
											"value": "[in]"
										},
										{
											"begin": 2143,
											"end": 2162,
											"name": "tag",
											"source": 18,
											"value": "36"
										},
										{
											"begin": 2143,
											"end": 2162,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2176,
											"end": 2183,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2172,
											"end": 2475,
											"name": "tag",
											"source": 18,
											"value": "38"
										},
										{
											"begin": 2172,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2188,
											"end": 2189,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 2186,
											"end": 2187,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2186,
											"end": 2189,
											"name": "PUSH",
											"source": 18,
											"value": "FF"
										},
										{
											"begin": 2186,
											"end": 2189,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 2186,
											"end": 2189,
											"name": "LT",
											"source": 18
										},
										{
											"begin": 2172,
											"end": 2475,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 2172,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "39"
										},
										{
											"begin": 2172,
											"end": 2475,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 2207,
											"end": 2219,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2240,
											"end": 2247,
											"name": "DUP10",
											"source": 18
										},
										{
											"begin": 2222,
											"end": 2256,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2222,
											"end": 2256,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 2222,
											"end": 2256,
											"name": "PUSH",
											"source": 18,
											"value": "1698EE82"
										},
										{
											"begin": 2257,
											"end": 2259,
											"name": "DUP11",
											"source": 18
										},
										{
											"begin": 2260,
											"end": 2262,
											"name": "DUP11",
											"source": 18
										},
										{
											"begin": 2263,
											"end": 2267,
											"name": "DUP8",
											"source": 18
										},
										{
											"begin": 2268,
											"end": 2269,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 2263,
											"end": 2270,
											"name": "PUSH",
											"source": 18,
											"value": "FF"
										},
										{
											"begin": 2263,
											"end": 2270,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 2263,
											"end": 2270,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 2263,
											"end": 2270,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2263,
											"end": 2270,
											"name": "LT",
											"source": 18
										},
										{
											"begin": 2263,
											"end": 2270,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "41"
										},
										{
											"begin": 2263,
											"end": 2270,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 2263,
											"end": 2270,
											"name": "INVALID",
											"source": 18
										},
										{
											"begin": 2263,
											"end": 2270,
											"name": "tag",
											"source": 18,
											"value": "41"
										},
										{
											"begin": 2263,
											"end": 2270,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2263,
											"end": 2270,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 2263,
											"end": 2270,
											"name": "MUL",
											"source": 18
										},
										{
											"begin": 2263,
											"end": 2270,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2263,
											"end": 2270,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 2222,
											"end": 2271,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 2222,
											"end": 2271,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 2222,
											"end": 2271,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 2222,
											"end": 2271,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2222,
											"end": 2271,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 2222,
											"end": 2271,
											"name": "PUSH",
											"source": 18,
											"value": "E0"
										},
										{
											"begin": 2222,
											"end": 2271,
											"name": "SHL",
											"source": 18
										},
										{
											"begin": 2222,
											"end": 2271,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2222,
											"end": 2271,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 2222,
											"end": 2271,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 2222,
											"end": 2271,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2222,
											"end": 2271,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2222,
											"end": 2271,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 2222,
											"end": 2271,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2222,
											"end": 2271,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 2222,
											"end": 2271,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2222,
											"end": 2271,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 2222,
											"end": 2271,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 2222,
											"end": 2271,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2222,
											"end": 2271,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 2222,
											"end": 2271,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2222,
											"end": 2271,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 2222,
											"end": 2271,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2222,
											"end": 2271,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 2222,
											"end": 2271,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 2222,
											"end": 2271,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2222,
											"end": 2271,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 2222,
											"end": 2271,
											"name": "PUSH",
											"source": 18,
											"value": "FFFF"
										},
										{
											"begin": 2222,
											"end": 2271,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 2222,
											"end": 2271,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2222,
											"end": 2271,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 2222,
											"end": 2271,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 2222,
											"end": 2271,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2222,
											"end": 2271,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 2222,
											"end": 2271,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2222,
											"end": 2271,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2222,
											"end": 2271,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2222,
											"end": 2271,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2222,
											"end": 2271,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 2222,
											"end": 2271,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 2222,
											"end": 2271,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 2222,
											"end": 2271,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2222,
											"end": 2271,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 2222,
											"end": 2271,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 2222,
											"end": 2271,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2222,
											"end": 2271,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 2222,
											"end": 2271,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2222,
											"end": 2271,
											"name": "EXTCODESIZE",
											"source": 18
										},
										{
											"begin": 2222,
											"end": 2271,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 2222,
											"end": 2271,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2222,
											"end": 2271,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 2222,
											"end": 2271,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "42"
										},
										{
											"begin": 2222,
											"end": 2271,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 2222,
											"end": 2271,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2222,
											"end": 2271,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2222,
											"end": 2271,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 2222,
											"end": 2271,
											"name": "tag",
											"source": 18,
											"value": "42"
										},
										{
											"begin": 2222,
											"end": 2271,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2222,
											"end": 2271,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2222,
											"end": 2271,
											"name": "GAS",
											"source": 18
										},
										{
											"begin": 2222,
											"end": 2271,
											"name": "STATICCALL",
											"source": 18
										},
										{
											"begin": 2222,
											"end": 2271,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 2222,
											"end": 2271,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2222,
											"end": 2271,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 2222,
											"end": 2271,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "44"
										},
										{
											"begin": 2222,
											"end": 2271,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 2222,
											"end": 2271,
											"name": "RETURNDATASIZE",
											"source": 18
										},
										{
											"begin": 2222,
											"end": 2271,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2222,
											"end": 2271,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2222,
											"end": 2271,
											"name": "RETURNDATACOPY",
											"source": 18
										},
										{
											"begin": 2222,
											"end": 2271,
											"name": "RETURNDATASIZE",
											"source": 18
										},
										{
											"begin": 2222,
											"end": 2271,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2222,
											"end": 2271,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 2222,
											"end": 2271,
											"name": "tag",
											"source": 18,
											"value": "44"
										},
										{
											"begin": 2222,
											"end": 2271,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2222,
											"end": 2271,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2222,
											"end": 2271,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2222,
											"end": 2271,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2222,
											"end": 2271,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2222,
											"end": 2271,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 2222,
											"end": 2271,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 2222,
											"end": 2271,
											"name": "RETURNDATASIZE",
											"source": 18
										},
										{
											"begin": 2222,
											"end": 2271,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 2222,
											"end": 2271,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2222,
											"end": 2271,
											"name": "LT",
											"source": 18
										},
										{
											"begin": 2222,
											"end": 2271,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 2222,
											"end": 2271,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "45"
										},
										{
											"begin": 2222,
											"end": 2271,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 2222,
											"end": 2271,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2222,
											"end": 2271,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2222,
											"end": 2271,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 2222,
											"end": 2271,
											"name": "tag",
											"source": 18,
											"value": "45"
										},
										{
											"begin": 2222,
											"end": 2271,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2222,
											"end": 2271,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2222,
											"end": 2271,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2222,
											"end": 2271,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2222,
											"end": 2271,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2222,
											"end": 2271,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2222,
											"end": 2271,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 2222,
											"end": 2271,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2222,
											"end": 2271,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 2222,
											"end": 2271,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2222,
											"end": 2271,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2222,
											"end": 2271,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 2222,
											"end": 2271,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 2222,
											"end": 2271,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2222,
											"end": 2271,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2222,
											"end": 2271,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2222,
											"end": 2271,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2207,
											"end": 2271,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2207,
											"end": 2271,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2304,
											"end": 2305,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2288,
											"end": 2306,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2288,
											"end": 2306,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 2288,
											"end": 2292,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2288,
											"end": 2306,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2288,
											"end": 2306,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 2288,
											"end": 2306,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 2284,
											"end": 2316,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 2284,
											"end": 2316,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "46"
										},
										{
											"begin": 2284,
											"end": 2316,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 2308,
											"end": 2316,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2308,
											"end": 2316,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 2308,
											"end": 2316,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2284,
											"end": 2316,
											"name": "tag",
											"source": 18,
											"value": "46"
										},
										{
											"begin": 2284,
											"end": 2316,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2363,
											"end": 2367,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 2341,
											"end": 2343,
											"name": "DUP10",
											"source": 18
										},
										{
											"begin": 2334,
											"end": 2354,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2334,
											"end": 2354,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 2334,
											"end": 2354,
											"name": "PUSH",
											"source": 18,
											"value": "70A08231"
										},
										{
											"begin": 2355,
											"end": 2359,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 2334,
											"end": 2360,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 2334,
											"end": 2360,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 2334,
											"end": 2360,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 2334,
											"end": 2360,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2334,
											"end": 2360,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 2334,
											"end": 2360,
											"name": "PUSH",
											"source": 18,
											"value": "E0"
										},
										{
											"begin": 2334,
											"end": 2360,
											"name": "SHL",
											"source": 18
										},
										{
											"begin": 2334,
											"end": 2360,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2334,
											"end": 2360,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 2334,
											"end": 2360,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 2334,
											"end": 2360,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2334,
											"end": 2360,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2334,
											"end": 2360,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 2334,
											"end": 2360,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2334,
											"end": 2360,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 2334,
											"end": 2360,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2334,
											"end": 2360,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 2334,
											"end": 2360,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 2334,
											"end": 2360,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2334,
											"end": 2360,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 2334,
											"end": 2360,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2334,
											"end": 2360,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2334,
											"end": 2360,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 2334,
											"end": 2360,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 2334,
											"end": 2360,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 2334,
											"end": 2360,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2334,
											"end": 2360,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 2334,
											"end": 2360,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 2334,
											"end": 2360,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2334,
											"end": 2360,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 2334,
											"end": 2360,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2334,
											"end": 2360,
											"name": "EXTCODESIZE",
											"source": 18
										},
										{
											"begin": 2334,
											"end": 2360,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 2334,
											"end": 2360,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2334,
											"end": 2360,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 2334,
											"end": 2360,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "47"
										},
										{
											"begin": 2334,
											"end": 2360,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 2334,
											"end": 2360,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2334,
											"end": 2360,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2334,
											"end": 2360,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 2334,
											"end": 2360,
											"name": "tag",
											"source": 18,
											"value": "47"
										},
										{
											"begin": 2334,
											"end": 2360,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2334,
											"end": 2360,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2334,
											"end": 2360,
											"name": "GAS",
											"source": 18
										},
										{
											"begin": 2334,
											"end": 2360,
											"name": "STATICCALL",
											"source": 18
										},
										{
											"begin": 2334,
											"end": 2360,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 2334,
											"end": 2360,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2334,
											"end": 2360,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 2334,
											"end": 2360,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "49"
										},
										{
											"begin": 2334,
											"end": 2360,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 2334,
											"end": 2360,
											"name": "RETURNDATASIZE",
											"source": 18
										},
										{
											"begin": 2334,
											"end": 2360,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2334,
											"end": 2360,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2334,
											"end": 2360,
											"name": "RETURNDATACOPY",
											"source": 18
										},
										{
											"begin": 2334,
											"end": 2360,
											"name": "RETURNDATASIZE",
											"source": 18
										},
										{
											"begin": 2334,
											"end": 2360,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2334,
											"end": 2360,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 2334,
											"end": 2360,
											"name": "tag",
											"source": 18,
											"value": "49"
										},
										{
											"begin": 2334,
											"end": 2360,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2334,
											"end": 2360,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2334,
											"end": 2360,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2334,
											"end": 2360,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2334,
											"end": 2360,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2334,
											"end": 2360,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 2334,
											"end": 2360,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 2334,
											"end": 2360,
											"name": "RETURNDATASIZE",
											"source": 18
										},
										{
											"begin": 2334,
											"end": 2360,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 2334,
											"end": 2360,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2334,
											"end": 2360,
											"name": "LT",
											"source": 18
										},
										{
											"begin": 2334,
											"end": 2360,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 2334,
											"end": 2360,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "50"
										},
										{
											"begin": 2334,
											"end": 2360,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 2334,
											"end": 2360,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2334,
											"end": 2360,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2334,
											"end": 2360,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 2334,
											"end": 2360,
											"name": "tag",
											"source": 18,
											"value": "50"
										},
										{
											"begin": 2334,
											"end": 2360,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2334,
											"end": 2360,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2334,
											"end": 2360,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2334,
											"end": 2360,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2334,
											"end": 2360,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2334,
											"end": 2360,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2334,
											"end": 2360,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 2334,
											"end": 2360,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2334,
											"end": 2360,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 2334,
											"end": 2360,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2334,
											"end": 2360,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2334,
											"end": 2360,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 2334,
											"end": 2360,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 2334,
											"end": 2360,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2334,
											"end": 2360,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2334,
											"end": 2360,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2334,
											"end": 2360,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2334,
											"end": 2367,
											"name": "LT",
											"source": 18
										},
										{
											"begin": 2330,
											"end": 2377,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 2330,
											"end": 2377,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "51"
										},
										{
											"begin": 2330,
											"end": 2377,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 2369,
											"end": 2377,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2369,
											"end": 2377,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 2369,
											"end": 2377,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2330,
											"end": 2377,
											"name": "tag",
											"source": 18,
											"value": "51"
										},
										{
											"begin": 2330,
											"end": 2377,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2424,
											"end": 2428,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 2402,
											"end": 2404,
											"name": "DUP9",
											"source": 18
										},
										{
											"begin": 2395,
											"end": 2415,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2395,
											"end": 2415,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 2395,
											"end": 2415,
											"name": "PUSH",
											"source": 18,
											"value": "70A08231"
										},
										{
											"begin": 2416,
											"end": 2420,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 2395,
											"end": 2421,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 2395,
											"end": 2421,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 2395,
											"end": 2421,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 2395,
											"end": 2421,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2395,
											"end": 2421,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 2395,
											"end": 2421,
											"name": "PUSH",
											"source": 18,
											"value": "E0"
										},
										{
											"begin": 2395,
											"end": 2421,
											"name": "SHL",
											"source": 18
										},
										{
											"begin": 2395,
											"end": 2421,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2395,
											"end": 2421,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 2395,
											"end": 2421,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 2395,
											"end": 2421,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2395,
											"end": 2421,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2395,
											"end": 2421,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 2395,
											"end": 2421,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2395,
											"end": 2421,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 2395,
											"end": 2421,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2395,
											"end": 2421,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 2395,
											"end": 2421,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 2395,
											"end": 2421,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2395,
											"end": 2421,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 2395,
											"end": 2421,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2395,
											"end": 2421,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2395,
											"end": 2421,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 2395,
											"end": 2421,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 2395,
											"end": 2421,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 2395,
											"end": 2421,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2395,
											"end": 2421,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 2395,
											"end": 2421,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 2395,
											"end": 2421,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2395,
											"end": 2421,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 2395,
											"end": 2421,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2395,
											"end": 2421,
											"name": "EXTCODESIZE",
											"source": 18
										},
										{
											"begin": 2395,
											"end": 2421,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 2395,
											"end": 2421,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2395,
											"end": 2421,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 2395,
											"end": 2421,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "52"
										},
										{
											"begin": 2395,
											"end": 2421,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 2395,
											"end": 2421,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2395,
											"end": 2421,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2395,
											"end": 2421,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 2395,
											"end": 2421,
											"name": "tag",
											"source": 18,
											"value": "52"
										},
										{
											"begin": 2395,
											"end": 2421,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2395,
											"end": 2421,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2395,
											"end": 2421,
											"name": "GAS",
											"source": 18
										},
										{
											"begin": 2395,
											"end": 2421,
											"name": "STATICCALL",
											"source": 18
										},
										{
											"begin": 2395,
											"end": 2421,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 2395,
											"end": 2421,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2395,
											"end": 2421,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 2395,
											"end": 2421,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "54"
										},
										{
											"begin": 2395,
											"end": 2421,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 2395,
											"end": 2421,
											"name": "RETURNDATASIZE",
											"source": 18
										},
										{
											"begin": 2395,
											"end": 2421,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2395,
											"end": 2421,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2395,
											"end": 2421,
											"name": "RETURNDATACOPY",
											"source": 18
										},
										{
											"begin": 2395,
											"end": 2421,
											"name": "RETURNDATASIZE",
											"source": 18
										},
										{
											"begin": 2395,
											"end": 2421,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2395,
											"end": 2421,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 2395,
											"end": 2421,
											"name": "tag",
											"source": 18,
											"value": "54"
										},
										{
											"begin": 2395,
											"end": 2421,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2395,
											"end": 2421,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2395,
											"end": 2421,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2395,
											"end": 2421,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2395,
											"end": 2421,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2395,
											"end": 2421,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 2395,
											"end": 2421,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 2395,
											"end": 2421,
											"name": "RETURNDATASIZE",
											"source": 18
										},
										{
											"begin": 2395,
											"end": 2421,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 2395,
											"end": 2421,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2395,
											"end": 2421,
											"name": "LT",
											"source": 18
										},
										{
											"begin": 2395,
											"end": 2421,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 2395,
											"end": 2421,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "55"
										},
										{
											"begin": 2395,
											"end": 2421,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 2395,
											"end": 2421,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2395,
											"end": 2421,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2395,
											"end": 2421,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 2395,
											"end": 2421,
											"name": "tag",
											"source": 18,
											"value": "55"
										},
										{
											"begin": 2395,
											"end": 2421,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2395,
											"end": 2421,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2395,
											"end": 2421,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2395,
											"end": 2421,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2395,
											"end": 2421,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2395,
											"end": 2421,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2395,
											"end": 2421,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 2395,
											"end": 2421,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2395,
											"end": 2421,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 2395,
											"end": 2421,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2395,
											"end": 2421,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2395,
											"end": 2421,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 2395,
											"end": 2421,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 2395,
											"end": 2421,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2395,
											"end": 2421,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2395,
											"end": 2421,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2395,
											"end": 2421,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2395,
											"end": 2428,
											"name": "LT",
											"source": 18
										},
										{
											"begin": 2391,
											"end": 2438,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 2391,
											"end": 2438,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "56"
										},
										{
											"begin": 2391,
											"end": 2438,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 2430,
											"end": 2438,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2430,
											"end": 2438,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 2430,
											"end": 2438,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2391,
											"end": 2438,
											"name": "tag",
											"source": 18,
											"value": "56"
										},
										{
											"begin": 2391,
											"end": 2438,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2460,
											"end": 2464,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 2453,
											"end": 2464,
											"name": "SWAP5",
											"source": 18
										},
										{
											"begin": 2453,
											"end": 2464,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2453,
											"end": 2464,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2453,
											"end": 2464,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2453,
											"end": 2464,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2453,
											"end": 2464,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2453,
											"end": 2464,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "35"
										},
										{
											"begin": 2453,
											"end": 2464,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2172,
											"end": 2475,
											"name": "tag",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 2172,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2190,
											"end": 2193,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2190,
											"end": 2193,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2190,
											"end": 2193,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 2190,
											"end": 2193,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2190,
											"end": 2193,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 2190,
											"end": 2193,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2190,
											"end": 2193,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2172,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "38"
										},
										{
											"begin": 2172,
											"end": 2475,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2172,
											"end": 2475,
											"name": "tag",
											"source": 18,
											"value": "39"
										},
										{
											"begin": 2172,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2172,
											"end": 2475,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2491,
											"end": 2496,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2484,
											"end": 2496,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 2484,
											"end": 2496,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2484,
											"end": 2496,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2484,
											"end": 2496,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1972,
											"end": 2503,
											"name": "tag",
											"source": 18,
											"value": "35"
										},
										{
											"begin": 1972,
											"end": 2503,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1972,
											"end": 2503,
											"name": "SWAP6",
											"source": 18
										},
										{
											"begin": 1972,
											"end": 2503,
											"name": "SWAP5",
											"source": 18
										},
										{
											"begin": 1972,
											"end": 2503,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1972,
											"end": 2503,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1972,
											"end": 2503,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1972,
											"end": 2503,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1972,
											"end": 2503,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1972,
											"end": 2503,
											"name": "JUMP",
											"source": 18,
											"value": "[out]"
										},
										{
											"begin": 1034,
											"end": 1965,
											"name": "tag",
											"source": 18,
											"value": "13"
										},
										{
											"begin": 1034,
											"end": 1965,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1111,
											"end": 1124,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1125,
											"end": 1135,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1146,
											"end": 1167,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1146,
											"end": 1190,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 1146,
											"end": 1190,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 1146,
											"end": 1190,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1146,
											"end": 1190,
											"name": "PUSH",
											"source": 18,
											"value": "80"
										},
										{
											"begin": 1146,
											"end": 1190,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1146,
											"end": 1190,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 1146,
											"end": 1190,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1146,
											"end": 1190,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1171,
											"end": 1174,
											"name": "PUSH",
											"source": 18,
											"value": "64"
										},
										{
											"begin": 1146,
											"end": 1190,
											"name": "PUSH",
											"source": 18,
											"value": "FFFF"
										},
										{
											"begin": 1146,
											"end": 1190,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 1146,
											"end": 1190,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1146,
											"end": 1190,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1146,
											"end": 1190,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 1146,
											"end": 1190,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1175,
											"end": 1178,
											"name": "PUSH",
											"source": 18,
											"value": "1F4"
										},
										{
											"begin": 1146,
											"end": 1190,
											"name": "PUSH",
											"source": 18,
											"value": "FFFF"
										},
										{
											"begin": 1146,
											"end": 1190,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 1146,
											"end": 1190,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1146,
											"end": 1190,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1146,
											"end": 1190,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 1146,
											"end": 1190,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1179,
											"end": 1183,
											"name": "PUSH",
											"source": 18,
											"value": "BB8"
										},
										{
											"begin": 1146,
											"end": 1190,
											"name": "PUSH",
											"source": 18,
											"value": "FFFF"
										},
										{
											"begin": 1146,
											"end": 1190,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 1146,
											"end": 1190,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1146,
											"end": 1190,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1146,
											"end": 1190,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 1146,
											"end": 1190,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1184,
											"end": 1189,
											"name": "PUSH",
											"source": 18,
											"value": "2710"
										},
										{
											"begin": 1146,
											"end": 1190,
											"name": "PUSH",
											"source": 18,
											"value": "FFFF"
										},
										{
											"begin": 1146,
											"end": 1190,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 1146,
											"end": 1190,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1146,
											"end": 1190,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1146,
											"end": 1190,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1146,
											"end": 1190,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1146,
											"end": 1190,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1204,
											"end": 1211,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1200,
											"end": 1931,
											"name": "tag",
											"source": 18,
											"value": "58"
										},
										{
											"begin": 1200,
											"end": 1931,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1216,
											"end": 1217,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 1214,
											"end": 1215,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1214,
											"end": 1217,
											"name": "PUSH",
											"source": 18,
											"value": "FF"
										},
										{
											"begin": 1214,
											"end": 1217,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 1214,
											"end": 1217,
											"name": "LT",
											"source": 18
										},
										{
											"begin": 1200,
											"end": 1931,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 1200,
											"end": 1931,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "59"
										},
										{
											"begin": 1200,
											"end": 1931,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 1232,
											"end": 1244,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1265,
											"end": 1272,
											"name": "DUP8",
											"source": 18
										},
										{
											"begin": 1247,
											"end": 1281,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1247,
											"end": 1281,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 1247,
											"end": 1281,
											"name": "PUSH",
											"source": 18,
											"value": "1698EE82"
										},
										{
											"begin": 1282,
											"end": 1284,
											"name": "DUP9",
											"source": 18
										},
										{
											"begin": 1285,
											"end": 1287,
											"name": "DUP9",
											"source": 18
										},
										{
											"begin": 1288,
											"end": 1292,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 1293,
											"end": 1294,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 1288,
											"end": 1295,
											"name": "PUSH",
											"source": 18,
											"value": "FF"
										},
										{
											"begin": 1288,
											"end": 1295,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 1288,
											"end": 1295,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 1288,
											"end": 1295,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1288,
											"end": 1295,
											"name": "LT",
											"source": 18
										},
										{
											"begin": 1288,
											"end": 1295,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "61"
										},
										{
											"begin": 1288,
											"end": 1295,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 1288,
											"end": 1295,
											"name": "INVALID",
											"source": 18
										},
										{
											"begin": 1288,
											"end": 1295,
											"name": "tag",
											"source": 18,
											"value": "61"
										},
										{
											"begin": 1288,
											"end": 1295,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1288,
											"end": 1295,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 1288,
											"end": 1295,
											"name": "MUL",
											"source": 18
										},
										{
											"begin": 1288,
											"end": 1295,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1288,
											"end": 1295,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 1247,
											"end": 1296,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 1247,
											"end": 1296,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 1247,
											"end": 1296,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 1247,
											"end": 1296,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1247,
											"end": 1296,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 1247,
											"end": 1296,
											"name": "PUSH",
											"source": 18,
											"value": "E0"
										},
										{
											"begin": 1247,
											"end": 1296,
											"name": "SHL",
											"source": 18
										},
										{
											"begin": 1247,
											"end": 1296,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1247,
											"end": 1296,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1247,
											"end": 1296,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 1247,
											"end": 1296,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1247,
											"end": 1296,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1247,
											"end": 1296,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 1247,
											"end": 1296,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1247,
											"end": 1296,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 1247,
											"end": 1296,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1247,
											"end": 1296,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1247,
											"end": 1296,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 1247,
											"end": 1296,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1247,
											"end": 1296,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 1247,
											"end": 1296,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1247,
											"end": 1296,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 1247,
											"end": 1296,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1247,
											"end": 1296,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1247,
											"end": 1296,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 1247,
											"end": 1296,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1247,
											"end": 1296,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 1247,
											"end": 1296,
											"name": "PUSH",
											"source": 18,
											"value": "FFFF"
										},
										{
											"begin": 1247,
											"end": 1296,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 1247,
											"end": 1296,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1247,
											"end": 1296,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1247,
											"end": 1296,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 1247,
											"end": 1296,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1247,
											"end": 1296,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 1247,
											"end": 1296,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1247,
											"end": 1296,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1247,
											"end": 1296,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1247,
											"end": 1296,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1247,
											"end": 1296,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 1247,
											"end": 1296,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 1247,
											"end": 1296,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 1247,
											"end": 1296,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1247,
											"end": 1296,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 1247,
											"end": 1296,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 1247,
											"end": 1296,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1247,
											"end": 1296,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 1247,
											"end": 1296,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1247,
											"end": 1296,
											"name": "EXTCODESIZE",
											"source": 18
										},
										{
											"begin": 1247,
											"end": 1296,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 1247,
											"end": 1296,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1247,
											"end": 1296,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 1247,
											"end": 1296,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "62"
										},
										{
											"begin": 1247,
											"end": 1296,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 1247,
											"end": 1296,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1247,
											"end": 1296,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1247,
											"end": 1296,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 1247,
											"end": 1296,
											"name": "tag",
											"source": 18,
											"value": "62"
										},
										{
											"begin": 1247,
											"end": 1296,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1247,
											"end": 1296,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1247,
											"end": 1296,
											"name": "GAS",
											"source": 18
										},
										{
											"begin": 1247,
											"end": 1296,
											"name": "STATICCALL",
											"source": 18
										},
										{
											"begin": 1247,
											"end": 1296,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 1247,
											"end": 1296,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1247,
											"end": 1296,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 1247,
											"end": 1296,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "64"
										},
										{
											"begin": 1247,
											"end": 1296,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 1247,
											"end": 1296,
											"name": "RETURNDATASIZE",
											"source": 18
										},
										{
											"begin": 1247,
											"end": 1296,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1247,
											"end": 1296,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1247,
											"end": 1296,
											"name": "RETURNDATACOPY",
											"source": 18
										},
										{
											"begin": 1247,
											"end": 1296,
											"name": "RETURNDATASIZE",
											"source": 18
										},
										{
											"begin": 1247,
											"end": 1296,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1247,
											"end": 1296,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 1247,
											"end": 1296,
											"name": "tag",
											"source": 18,
											"value": "64"
										},
										{
											"begin": 1247,
											"end": 1296,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1247,
											"end": 1296,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1247,
											"end": 1296,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1247,
											"end": 1296,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1247,
											"end": 1296,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1247,
											"end": 1296,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 1247,
											"end": 1296,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 1247,
											"end": 1296,
											"name": "RETURNDATASIZE",
											"source": 18
										},
										{
											"begin": 1247,
											"end": 1296,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 1247,
											"end": 1296,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1247,
											"end": 1296,
											"name": "LT",
											"source": 18
										},
										{
											"begin": 1247,
											"end": 1296,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 1247,
											"end": 1296,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "65"
										},
										{
											"begin": 1247,
											"end": 1296,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 1247,
											"end": 1296,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1247,
											"end": 1296,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1247,
											"end": 1296,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 1247,
											"end": 1296,
											"name": "tag",
											"source": 18,
											"value": "65"
										},
										{
											"begin": 1247,
											"end": 1296,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1247,
											"end": 1296,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1247,
											"end": 1296,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1247,
											"end": 1296,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1247,
											"end": 1296,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1247,
											"end": 1296,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1247,
											"end": 1296,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 1247,
											"end": 1296,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1247,
											"end": 1296,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 1247,
											"end": 1296,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1247,
											"end": 1296,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1247,
											"end": 1296,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 1247,
											"end": 1296,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1247,
											"end": 1296,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1247,
											"end": 1296,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1247,
											"end": 1296,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1247,
											"end": 1296,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1232,
											"end": 1296,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1232,
											"end": 1296,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1326,
											"end": 1327,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1310,
											"end": 1328,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1310,
											"end": 1328,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 1310,
											"end": 1314,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1310,
											"end": 1328,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1310,
											"end": 1328,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 1310,
											"end": 1328,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 1306,
											"end": 1338,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 1306,
											"end": 1338,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "66"
										},
										{
											"begin": 1306,
											"end": 1338,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 1330,
											"end": 1338,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1330,
											"end": 1338,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "60"
										},
										{
											"begin": 1330,
											"end": 1338,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1306,
											"end": 1338,
											"name": "tag",
											"source": 18,
											"value": "66"
										},
										{
											"begin": 1306,
											"end": 1338,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1358,
											"end": 1366,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1376,
											"end": 1378,
											"name": "DUP8",
											"source": 18
										},
										{
											"begin": 1369,
											"end": 1388,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1369,
											"end": 1388,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 1369,
											"end": 1388,
											"name": "PUSH",
											"source": 18,
											"value": "313CE567"
										},
										{
											"begin": 1369,
											"end": 1390,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 1369,
											"end": 1390,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 1369,
											"end": 1390,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1369,
											"end": 1390,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1369,
											"end": 1390,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 1369,
											"end": 1390,
											"name": "PUSH",
											"source": 18,
											"value": "E0"
										},
										{
											"begin": 1369,
											"end": 1390,
											"name": "SHL",
											"source": 18
										},
										{
											"begin": 1369,
											"end": 1390,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1369,
											"end": 1390,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1369,
											"end": 1390,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 1369,
											"end": 1390,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1369,
											"end": 1390,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 1369,
											"end": 1390,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 1369,
											"end": 1390,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 1369,
											"end": 1390,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1369,
											"end": 1390,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 1369,
											"end": 1390,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 1369,
											"end": 1390,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1369,
											"end": 1390,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 1369,
											"end": 1390,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1369,
											"end": 1390,
											"name": "EXTCODESIZE",
											"source": 18
										},
										{
											"begin": 1369,
											"end": 1390,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 1369,
											"end": 1390,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1369,
											"end": 1390,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 1369,
											"end": 1390,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "67"
										},
										{
											"begin": 1369,
											"end": 1390,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 1369,
											"end": 1390,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1369,
											"end": 1390,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1369,
											"end": 1390,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 1369,
											"end": 1390,
											"name": "tag",
											"source": 18,
											"value": "67"
										},
										{
											"begin": 1369,
											"end": 1390,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1369,
											"end": 1390,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1369,
											"end": 1390,
											"name": "GAS",
											"source": 18
										},
										{
											"begin": 1369,
											"end": 1390,
											"name": "STATICCALL",
											"source": 18
										},
										{
											"begin": 1369,
											"end": 1390,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 1369,
											"end": 1390,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1369,
											"end": 1390,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 1369,
											"end": 1390,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "69"
										},
										{
											"begin": 1369,
											"end": 1390,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 1369,
											"end": 1390,
											"name": "RETURNDATASIZE",
											"source": 18
										},
										{
											"begin": 1369,
											"end": 1390,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1369,
											"end": 1390,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1369,
											"end": 1390,
											"name": "RETURNDATACOPY",
											"source": 18
										},
										{
											"begin": 1369,
											"end": 1390,
											"name": "RETURNDATASIZE",
											"source": 18
										},
										{
											"begin": 1369,
											"end": 1390,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1369,
											"end": 1390,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 1369,
											"end": 1390,
											"name": "tag",
											"source": 18,
											"value": "69"
										},
										{
											"begin": 1369,
											"end": 1390,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1369,
											"end": 1390,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1369,
											"end": 1390,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1369,
											"end": 1390,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1369,
											"end": 1390,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1369,
											"end": 1390,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 1369,
											"end": 1390,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 1369,
											"end": 1390,
											"name": "RETURNDATASIZE",
											"source": 18
										},
										{
											"begin": 1369,
											"end": 1390,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 1369,
											"end": 1390,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1369,
											"end": 1390,
											"name": "LT",
											"source": 18
										},
										{
											"begin": 1369,
											"end": 1390,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 1369,
											"end": 1390,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "70"
										},
										{
											"begin": 1369,
											"end": 1390,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 1369,
											"end": 1390,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1369,
											"end": 1390,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1369,
											"end": 1390,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 1369,
											"end": 1390,
											"name": "tag",
											"source": 18,
											"value": "70"
										},
										{
											"begin": 1369,
											"end": 1390,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1369,
											"end": 1390,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1369,
											"end": 1390,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1369,
											"end": 1390,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1369,
											"end": 1390,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1369,
											"end": 1390,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1369,
											"end": 1390,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 1369,
											"end": 1390,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1369,
											"end": 1390,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 1369,
											"end": 1390,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1369,
											"end": 1390,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1369,
											"end": 1390,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 1369,
											"end": 1390,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1369,
											"end": 1390,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1369,
											"end": 1390,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1369,
											"end": 1390,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1369,
											"end": 1390,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1358,
											"end": 1390,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1358,
											"end": 1390,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1400,
											"end": 1408,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1418,
											"end": 1420,
											"name": "DUP8",
											"source": 18
										},
										{
											"begin": 1411,
											"end": 1430,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1411,
											"end": 1430,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 1411,
											"end": 1430,
											"name": "PUSH",
											"source": 18,
											"value": "313CE567"
										},
										{
											"begin": 1411,
											"end": 1432,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 1411,
											"end": 1432,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 1411,
											"end": 1432,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1411,
											"end": 1432,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1411,
											"end": 1432,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 1411,
											"end": 1432,
											"name": "PUSH",
											"source": 18,
											"value": "E0"
										},
										{
											"begin": 1411,
											"end": 1432,
											"name": "SHL",
											"source": 18
										},
										{
											"begin": 1411,
											"end": 1432,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1411,
											"end": 1432,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1411,
											"end": 1432,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 1411,
											"end": 1432,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1411,
											"end": 1432,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 1411,
											"end": 1432,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 1411,
											"end": 1432,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 1411,
											"end": 1432,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1411,
											"end": 1432,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 1411,
											"end": 1432,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 1411,
											"end": 1432,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1411,
											"end": 1432,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 1411,
											"end": 1432,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1411,
											"end": 1432,
											"name": "EXTCODESIZE",
											"source": 18
										},
										{
											"begin": 1411,
											"end": 1432,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 1411,
											"end": 1432,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1411,
											"end": 1432,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 1411,
											"end": 1432,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "71"
										},
										{
											"begin": 1411,
											"end": 1432,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 1411,
											"end": 1432,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1411,
											"end": 1432,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1411,
											"end": 1432,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 1411,
											"end": 1432,
											"name": "tag",
											"source": 18,
											"value": "71"
										},
										{
											"begin": 1411,
											"end": 1432,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1411,
											"end": 1432,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1411,
											"end": 1432,
											"name": "GAS",
											"source": 18
										},
										{
											"begin": 1411,
											"end": 1432,
											"name": "STATICCALL",
											"source": 18
										},
										{
											"begin": 1411,
											"end": 1432,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 1411,
											"end": 1432,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1411,
											"end": 1432,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 1411,
											"end": 1432,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "73"
										},
										{
											"begin": 1411,
											"end": 1432,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 1411,
											"end": 1432,
											"name": "RETURNDATASIZE",
											"source": 18
										},
										{
											"begin": 1411,
											"end": 1432,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1411,
											"end": 1432,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1411,
											"end": 1432,
											"name": "RETURNDATACOPY",
											"source": 18
										},
										{
											"begin": 1411,
											"end": 1432,
											"name": "RETURNDATASIZE",
											"source": 18
										},
										{
											"begin": 1411,
											"end": 1432,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1411,
											"end": 1432,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 1411,
											"end": 1432,
											"name": "tag",
											"source": 18,
											"value": "73"
										},
										{
											"begin": 1411,
											"end": 1432,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1411,
											"end": 1432,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1411,
											"end": 1432,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1411,
											"end": 1432,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1411,
											"end": 1432,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1411,
											"end": 1432,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 1411,
											"end": 1432,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 1411,
											"end": 1432,
											"name": "RETURNDATASIZE",
											"source": 18
										},
										{
											"begin": 1411,
											"end": 1432,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 1411,
											"end": 1432,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1411,
											"end": 1432,
											"name": "LT",
											"source": 18
										},
										{
											"begin": 1411,
											"end": 1432,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 1411,
											"end": 1432,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "74"
										},
										{
											"begin": 1411,
											"end": 1432,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 1411,
											"end": 1432,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1411,
											"end": 1432,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1411,
											"end": 1432,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 1411,
											"end": 1432,
											"name": "tag",
											"source": 18,
											"value": "74"
										},
										{
											"begin": 1411,
											"end": 1432,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1411,
											"end": 1432,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1411,
											"end": 1432,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1411,
											"end": 1432,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1411,
											"end": 1432,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1411,
											"end": 1432,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1411,
											"end": 1432,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 1411,
											"end": 1432,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1411,
											"end": 1432,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 1411,
											"end": 1432,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1411,
											"end": 1432,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1411,
											"end": 1432,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 1411,
											"end": 1432,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1411,
											"end": 1432,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1411,
											"end": 1432,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1411,
											"end": 1432,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1411,
											"end": 1432,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1400,
											"end": 1432,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1400,
											"end": 1432,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1488,
											"end": 1490,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1484,
											"end": 1490,
											"name": "PUSH",
											"source": 18,
											"value": "FF"
										},
										{
											"begin": 1484,
											"end": 1490,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 1484,
											"end": 1486,
											"name": "PUSH",
											"source": 18,
											"value": "A"
										},
										{
											"begin": 1484,
											"end": 1490,
											"name": "EXP",
											"source": 18
										},
										{
											"begin": 1462,
											"end": 1464,
											"name": "DUP10",
											"source": 18
										},
										{
											"begin": 1455,
											"end": 1475,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1455,
											"end": 1475,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 1455,
											"end": 1475,
											"name": "PUSH",
											"source": 18,
											"value": "70A08231"
										},
										{
											"begin": 1476,
											"end": 1480,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 1455,
											"end": 1481,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 1455,
											"end": 1481,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 1455,
											"end": 1481,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 1455,
											"end": 1481,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1455,
											"end": 1481,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 1455,
											"end": 1481,
											"name": "PUSH",
											"source": 18,
											"value": "E0"
										},
										{
											"begin": 1455,
											"end": 1481,
											"name": "SHL",
											"source": 18
										},
										{
											"begin": 1455,
											"end": 1481,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1455,
											"end": 1481,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1455,
											"end": 1481,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 1455,
											"end": 1481,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1455,
											"end": 1481,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1455,
											"end": 1481,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 1455,
											"end": 1481,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1455,
											"end": 1481,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 1455,
											"end": 1481,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1455,
											"end": 1481,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1455,
											"end": 1481,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 1455,
											"end": 1481,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1455,
											"end": 1481,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1455,
											"end": 1481,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1455,
											"end": 1481,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1455,
											"end": 1481,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 1455,
											"end": 1481,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 1455,
											"end": 1481,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 1455,
											"end": 1481,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1455,
											"end": 1481,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 1455,
											"end": 1481,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 1455,
											"end": 1481,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1455,
											"end": 1481,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 1455,
											"end": 1481,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1455,
											"end": 1481,
											"name": "EXTCODESIZE",
											"source": 18
										},
										{
											"begin": 1455,
											"end": 1481,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 1455,
											"end": 1481,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1455,
											"end": 1481,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 1455,
											"end": 1481,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "75"
										},
										{
											"begin": 1455,
											"end": 1481,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 1455,
											"end": 1481,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1455,
											"end": 1481,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1455,
											"end": 1481,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 1455,
											"end": 1481,
											"name": "tag",
											"source": 18,
											"value": "75"
										},
										{
											"begin": 1455,
											"end": 1481,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1455,
											"end": 1481,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1455,
											"end": 1481,
											"name": "GAS",
											"source": 18
										},
										{
											"begin": 1455,
											"end": 1481,
											"name": "STATICCALL",
											"source": 18
										},
										{
											"begin": 1455,
											"end": 1481,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 1455,
											"end": 1481,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1455,
											"end": 1481,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 1455,
											"end": 1481,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "77"
										},
										{
											"begin": 1455,
											"end": 1481,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 1455,
											"end": 1481,
											"name": "RETURNDATASIZE",
											"source": 18
										},
										{
											"begin": 1455,
											"end": 1481,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1455,
											"end": 1481,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1455,
											"end": 1481,
											"name": "RETURNDATACOPY",
											"source": 18
										},
										{
											"begin": 1455,
											"end": 1481,
											"name": "RETURNDATASIZE",
											"source": 18
										},
										{
											"begin": 1455,
											"end": 1481,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1455,
											"end": 1481,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 1455,
											"end": 1481,
											"name": "tag",
											"source": 18,
											"value": "77"
										},
										{
											"begin": 1455,
											"end": 1481,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1455,
											"end": 1481,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1455,
											"end": 1481,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1455,
											"end": 1481,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1455,
											"end": 1481,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1455,
											"end": 1481,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 1455,
											"end": 1481,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 1455,
											"end": 1481,
											"name": "RETURNDATASIZE",
											"source": 18
										},
										{
											"begin": 1455,
											"end": 1481,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 1455,
											"end": 1481,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1455,
											"end": 1481,
											"name": "LT",
											"source": 18
										},
										{
											"begin": 1455,
											"end": 1481,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 1455,
											"end": 1481,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "78"
										},
										{
											"begin": 1455,
											"end": 1481,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 1455,
											"end": 1481,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1455,
											"end": 1481,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1455,
											"end": 1481,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 1455,
											"end": 1481,
											"name": "tag",
											"source": 18,
											"value": "78"
										},
										{
											"begin": 1455,
											"end": 1481,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1455,
											"end": 1481,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1455,
											"end": 1481,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1455,
											"end": 1481,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1455,
											"end": 1481,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1455,
											"end": 1481,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1455,
											"end": 1481,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 1455,
											"end": 1481,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1455,
											"end": 1481,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 1455,
											"end": 1481,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1455,
											"end": 1481,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1455,
											"end": 1481,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 1455,
											"end": 1481,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1455,
											"end": 1481,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1455,
											"end": 1481,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1455,
											"end": 1481,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1455,
											"end": 1481,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1455,
											"end": 1490,
											"name": "LT",
											"source": 18
										},
										{
											"begin": 1451,
											"end": 1500,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 1451,
											"end": 1500,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "79"
										},
										{
											"begin": 1451,
											"end": 1500,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 1492,
											"end": 1500,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1492,
											"end": 1500,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1492,
											"end": 1500,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1492,
											"end": 1500,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "60"
										},
										{
											"begin": 1492,
											"end": 1500,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1451,
											"end": 1500,
											"name": "tag",
											"source": 18,
											"value": "79"
										},
										{
											"begin": 1451,
											"end": 1500,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1548,
											"end": 1550,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1544,
											"end": 1550,
											"name": "PUSH",
											"source": 18,
											"value": "FF"
										},
										{
											"begin": 1544,
											"end": 1550,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 1544,
											"end": 1546,
											"name": "PUSH",
											"source": 18,
											"value": "A"
										},
										{
											"begin": 1544,
											"end": 1550,
											"name": "EXP",
											"source": 18
										},
										{
											"begin": 1522,
											"end": 1524,
											"name": "DUP9",
											"source": 18
										},
										{
											"begin": 1515,
											"end": 1535,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1515,
											"end": 1535,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 1515,
											"end": 1535,
											"name": "PUSH",
											"source": 18,
											"value": "70A08231"
										},
										{
											"begin": 1536,
											"end": 1540,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 1515,
											"end": 1541,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 1515,
											"end": 1541,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 1515,
											"end": 1541,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 1515,
											"end": 1541,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1515,
											"end": 1541,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 1515,
											"end": 1541,
											"name": "PUSH",
											"source": 18,
											"value": "E0"
										},
										{
											"begin": 1515,
											"end": 1541,
											"name": "SHL",
											"source": 18
										},
										{
											"begin": 1515,
											"end": 1541,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1515,
											"end": 1541,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1515,
											"end": 1541,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 1515,
											"end": 1541,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1515,
											"end": 1541,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1515,
											"end": 1541,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 1515,
											"end": 1541,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1515,
											"end": 1541,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 1515,
											"end": 1541,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1515,
											"end": 1541,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1515,
											"end": 1541,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 1515,
											"end": 1541,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1515,
											"end": 1541,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1515,
											"end": 1541,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1515,
											"end": 1541,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1515,
											"end": 1541,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 1515,
											"end": 1541,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 1515,
											"end": 1541,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 1515,
											"end": 1541,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1515,
											"end": 1541,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 1515,
											"end": 1541,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 1515,
											"end": 1541,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1515,
											"end": 1541,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 1515,
											"end": 1541,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1515,
											"end": 1541,
											"name": "EXTCODESIZE",
											"source": 18
										},
										{
											"begin": 1515,
											"end": 1541,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 1515,
											"end": 1541,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1515,
											"end": 1541,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 1515,
											"end": 1541,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "80"
										},
										{
											"begin": 1515,
											"end": 1541,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 1515,
											"end": 1541,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1515,
											"end": 1541,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1515,
											"end": 1541,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 1515,
											"end": 1541,
											"name": "tag",
											"source": 18,
											"value": "80"
										},
										{
											"begin": 1515,
											"end": 1541,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1515,
											"end": 1541,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1515,
											"end": 1541,
											"name": "GAS",
											"source": 18
										},
										{
											"begin": 1515,
											"end": 1541,
											"name": "STATICCALL",
											"source": 18
										},
										{
											"begin": 1515,
											"end": 1541,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 1515,
											"end": 1541,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1515,
											"end": 1541,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 1515,
											"end": 1541,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "82"
										},
										{
											"begin": 1515,
											"end": 1541,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 1515,
											"end": 1541,
											"name": "RETURNDATASIZE",
											"source": 18
										},
										{
											"begin": 1515,
											"end": 1541,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1515,
											"end": 1541,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1515,
											"end": 1541,
											"name": "RETURNDATACOPY",
											"source": 18
										},
										{
											"begin": 1515,
											"end": 1541,
											"name": "RETURNDATASIZE",
											"source": 18
										},
										{
											"begin": 1515,
											"end": 1541,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1515,
											"end": 1541,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 1515,
											"end": 1541,
											"name": "tag",
											"source": 18,
											"value": "82"
										},
										{
											"begin": 1515,
											"end": 1541,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1515,
											"end": 1541,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1515,
											"end": 1541,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1515,
											"end": 1541,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1515,
											"end": 1541,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1515,
											"end": 1541,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 1515,
											"end": 1541,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 1515,
											"end": 1541,
											"name": "RETURNDATASIZE",
											"source": 18
										},
										{
											"begin": 1515,
											"end": 1541,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 1515,
											"end": 1541,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1515,
											"end": 1541,
											"name": "LT",
											"source": 18
										},
										{
											"begin": 1515,
											"end": 1541,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 1515,
											"end": 1541,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "83"
										},
										{
											"begin": 1515,
											"end": 1541,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 1515,
											"end": 1541,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1515,
											"end": 1541,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1515,
											"end": 1541,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 1515,
											"end": 1541,
											"name": "tag",
											"source": 18,
											"value": "83"
										},
										{
											"begin": 1515,
											"end": 1541,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1515,
											"end": 1541,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1515,
											"end": 1541,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1515,
											"end": 1541,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1515,
											"end": 1541,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1515,
											"end": 1541,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1515,
											"end": 1541,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 1515,
											"end": 1541,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1515,
											"end": 1541,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 1515,
											"end": 1541,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1515,
											"end": 1541,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1515,
											"end": 1541,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 1515,
											"end": 1541,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1515,
											"end": 1541,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1515,
											"end": 1541,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1515,
											"end": 1541,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1515,
											"end": 1541,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1515,
											"end": 1550,
											"name": "LT",
											"source": 18
										},
										{
											"begin": 1511,
											"end": 1560,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 1511,
											"end": 1560,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "84"
										},
										{
											"begin": 1511,
											"end": 1560,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 1552,
											"end": 1560,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1552,
											"end": 1560,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1552,
											"end": 1560,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1552,
											"end": 1560,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "60"
										},
										{
											"begin": 1552,
											"end": 1560,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1511,
											"end": 1560,
											"name": "tag",
											"source": 18,
											"value": "84"
										},
										{
											"begin": 1511,
											"end": 1560,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1573,
											"end": 1583,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1586,
											"end": 1615,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "85"
										},
										{
											"begin": 1608,
											"end": 1612,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 1613,
											"end": 1614,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 1586,
											"end": 1607,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "30"
										},
										{
											"begin": 1586,
											"end": 1615,
											"name": "JUMP",
											"source": 18,
											"value": "[in]"
										},
										{
											"begin": 1586,
											"end": 1615,
											"name": "tag",
											"source": 18,
											"value": "85"
										},
										{
											"begin": 1586,
											"end": 1615,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1573,
											"end": 1615,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1573,
											"end": 1615,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1625,
											"end": 1642,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1645,
											"end": 1701,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "86"
										},
										{
											"begin": 1674,
											"end": 1678,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 1691,
											"end": 1693,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 1687,
											"end": 1693,
											"name": "PUSH",
											"source": 18,
											"value": "FF"
										},
										{
											"begin": 1687,
											"end": 1693,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 1687,
											"end": 1689,
											"name": "PUSH",
											"source": 18,
											"value": "A"
										},
										{
											"begin": 1687,
											"end": 1693,
											"name": "EXP",
											"source": 18
										},
										{
											"begin": 1695,
											"end": 1697,
											"name": "DUP14",
											"source": 18
										},
										{
											"begin": 1698,
											"end": 1700,
											"name": "DUP14",
											"source": 18
										},
										{
											"begin": 1645,
											"end": 1673,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "32"
										},
										{
											"begin": 1645,
											"end": 1701,
											"name": "JUMP",
											"source": 18,
											"value": "[in]"
										},
										{
											"begin": 1645,
											"end": 1701,
											"name": "tag",
											"source": 18,
											"value": "86"
										},
										{
											"begin": 1645,
											"end": 1701,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1625,
											"end": 1701,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1625,
											"end": 1701,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1720,
											"end": 1721,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1715,
											"end": 1716,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 1715,
											"end": 1721,
											"name": "PUSH",
											"source": 18,
											"value": "FF"
										},
										{
											"begin": 1715,
											"end": 1721,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 1715,
											"end": 1721,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 1711,
											"end": 1791,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 1711,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "87"
										},
										{
											"begin": 1711,
											"end": 1791,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 1744,
											"end": 1753,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1736,
											"end": 1753,
											"name": "SWAP9",
											"source": 18
										},
										{
											"begin": 1736,
											"end": 1753,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1773,
											"end": 1777,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 1778,
											"end": 1779,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 1773,
											"end": 1780,
											"name": "PUSH",
											"source": 18,
											"value": "FF"
										},
										{
											"begin": 1773,
											"end": 1780,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 1773,
											"end": 1780,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 1773,
											"end": 1780,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1773,
											"end": 1780,
											"name": "LT",
											"source": 18
										},
										{
											"begin": 1773,
											"end": 1780,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "88"
										},
										{
											"begin": 1773,
											"end": 1780,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 1773,
											"end": 1780,
											"name": "INVALID",
											"source": 18
										},
										{
											"begin": 1773,
											"end": 1780,
											"name": "tag",
											"source": 18,
											"value": "88"
										},
										{
											"begin": 1773,
											"end": 1780,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1773,
											"end": 1780,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 1773,
											"end": 1780,
											"name": "MUL",
											"source": 18
										},
										{
											"begin": 1773,
											"end": 1780,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1773,
											"end": 1780,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 1767,
											"end": 1780,
											"name": "PUSH",
											"source": 18,
											"value": "FFFF"
										},
										{
											"begin": 1767,
											"end": 1780,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 1767,
											"end": 1780,
											"name": "SWAP8",
											"source": 18
										},
										{
											"begin": 1767,
											"end": 1780,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1711,
											"end": 1791,
											"name": "tag",
											"source": 18,
											"value": "87"
										},
										{
											"begin": 1711,
											"end": 1791,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1808,
											"end": 1809,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1804,
											"end": 1805,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 1804,
											"end": 1809,
											"name": "PUSH",
											"source": 18,
											"value": "FF"
										},
										{
											"begin": 1804,
											"end": 1809,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 1804,
											"end": 1809,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 1804,
											"end": 1846,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1804,
											"end": 1846,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 1804,
											"end": 1846,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "89"
										},
										{
											"begin": 1804,
											"end": 1846,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 1804,
											"end": 1846,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1823,
											"end": 1824,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1814,
											"end": 1819,
											"name": "DUP10",
											"source": 18
										},
										{
											"begin": 1814,
											"end": 1824,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 1814,
											"end": 1845,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1814,
											"end": 1845,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "90"
										},
										{
											"begin": 1814,
											"end": 1845,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 1814,
											"end": 1845,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1840,
											"end": 1845,
											"name": "DUP9",
											"source": 18
										},
										{
											"begin": 1828,
											"end": 1837,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1828,
											"end": 1845,
											"name": "LT",
											"source": 18
										},
										{
											"begin": 1814,
											"end": 1845,
											"name": "tag",
											"source": 18,
											"value": "90"
										},
										{
											"begin": 1814,
											"end": 1845,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1804,
											"end": 1846,
											"name": "tag",
											"source": 18,
											"value": "89"
										},
										{
											"begin": 1804,
											"end": 1846,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1800,
											"end": 1921,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 1800,
											"end": 1921,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "91"
										},
										{
											"begin": 1800,
											"end": 1921,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 1870,
											"end": 1879,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1862,
											"end": 1879,
											"name": "SWAP9",
											"source": 18
										},
										{
											"begin": 1862,
											"end": 1879,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1899,
											"end": 1903,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 1904,
											"end": 1905,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 1899,
											"end": 1906,
											"name": "PUSH",
											"source": 18,
											"value": "FF"
										},
										{
											"begin": 1899,
											"end": 1906,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 1899,
											"end": 1906,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 1899,
											"end": 1906,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1899,
											"end": 1906,
											"name": "LT",
											"source": 18
										},
										{
											"begin": 1899,
											"end": 1906,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "92"
										},
										{
											"begin": 1899,
											"end": 1906,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 1899,
											"end": 1906,
											"name": "INVALID",
											"source": 18
										},
										{
											"begin": 1899,
											"end": 1906,
											"name": "tag",
											"source": 18,
											"value": "92"
										},
										{
											"begin": 1899,
											"end": 1906,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1899,
											"end": 1906,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 1899,
											"end": 1906,
											"name": "MUL",
											"source": 18
										},
										{
											"begin": 1899,
											"end": 1906,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1899,
											"end": 1906,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 1893,
											"end": 1906,
											"name": "PUSH",
											"source": 18,
											"value": "FFFF"
										},
										{
											"begin": 1893,
											"end": 1906,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 1893,
											"end": 1906,
											"name": "SWAP8",
											"source": 18
										},
										{
											"begin": 1893,
											"end": 1906,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1800,
											"end": 1921,
											"name": "tag",
											"source": 18,
											"value": "91"
										},
										{
											"begin": 1800,
											"end": 1921,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1200,
											"end": 1931,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1200,
											"end": 1931,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1200,
											"end": 1931,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1200,
											"end": 1931,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1200,
											"end": 1931,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1200,
											"end": 1931,
											"name": "tag",
											"source": 18,
											"value": "60"
										},
										{
											"begin": 1200,
											"end": 1931,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1218,
											"end": 1221,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1218,
											"end": 1221,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1218,
											"end": 1221,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 1218,
											"end": 1221,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1218,
											"end": 1221,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1218,
											"end": 1221,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1218,
											"end": 1221,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1200,
											"end": 1931,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "58"
										},
										{
											"begin": 1200,
											"end": 1931,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1200,
											"end": 1931,
											"name": "tag",
											"source": 18,
											"value": "59"
										},
										{
											"begin": 1200,
											"end": 1931,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1200,
											"end": 1931,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1940,
											"end": 1958,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1034,
											"end": 1965,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 1034,
											"end": 1965,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1034,
											"end": 1965,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 1034,
											"end": 1965,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1034,
											"end": 1965,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1034,
											"end": 1965,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1034,
											"end": 1965,
											"name": "JUMP",
											"source": 18,
											"value": "[out]"
										},
										{
											"begin": 270,
											"end": 927,
											"name": "tag",
											"source": 16,
											"value": "30"
										},
										{
											"begin": 270,
											"end": 927,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 367,
											"end": 377,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 415,
											"end": 416,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 401,
											"end": 411,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 401,
											"end": 416,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFF"
										},
										{
											"begin": 401,
											"end": 416,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 401,
											"end": 416,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 401,
											"end": 416,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 393,
											"end": 423,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "94"
										},
										{
											"begin": 393,
											"end": 423,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 393,
											"end": 423,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 393,
											"end": 423,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 393,
											"end": 423,
											"name": "PUSH",
											"source": 16,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 393,
											"end": 423,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 393,
											"end": 423,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 393,
											"end": 423,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 393,
											"end": 423,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 393,
											"end": 423,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 393,
											"end": 423,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 393,
											"end": 423,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 393,
											"end": 423,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 393,
											"end": 423,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 393,
											"end": 423,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 393,
											"end": 423,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 393,
											"end": 423,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 393,
											"end": 423,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 393,
											"end": 423,
											"name": "PUSH",
											"source": 16,
											"value": "2"
										},
										{
											"begin": 393,
											"end": 423,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 393,
											"end": 423,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 393,
											"end": 423,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 393,
											"end": 423,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 393,
											"end": 423,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 393,
											"end": 423,
											"name": "PUSH",
											"source": 16,
											"value": "4250000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 393,
											"end": 423,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 393,
											"end": 423,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 393,
											"end": 423,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 393,
											"end": 423,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 393,
											"end": 423,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 393,
											"end": 423,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 393,
											"end": 423,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 393,
											"end": 423,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 393,
											"end": 423,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 393,
											"end": 423,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 393,
											"end": 423,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 393,
											"end": 423,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 393,
											"end": 423,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 393,
											"end": 423,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 393,
											"end": 423,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 393,
											"end": 423,
											"name": "tag",
											"source": 16,
											"value": "94"
										},
										{
											"begin": 393,
											"end": 423,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 434,
											"end": 461,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 477,
											"end": 478,
											"name": "PUSH",
											"source": 16,
											"value": "2"
										},
										{
											"begin": 464,
											"end": 479,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 464,
											"end": 479,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 464,
											"end": 479,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 464,
											"end": 479,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 464,
											"end": 479,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 464,
											"end": 479,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "95"
										},
										{
											"begin": 464,
											"end": 479,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 464,
											"end": 479,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 464,
											"end": 479,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 464,
											"end": 479,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 464,
											"end": 479,
											"name": "tag",
											"source": 16,
											"value": "95"
										},
										{
											"begin": 464,
											"end": 479,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 464,
											"end": 479,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 464,
											"end": 479,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 464,
											"end": 479,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 464,
											"end": 479,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 464,
											"end": 479,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 464,
											"end": 479,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 464,
											"end": 479,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 464,
											"end": 479,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 464,
											"end": 479,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 464,
											"end": 479,
											"name": "MUL",
											"source": 16
										},
										{
											"begin": 464,
											"end": 479,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 464,
											"end": 479,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 464,
											"end": 479,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 464,
											"end": 479,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 464,
											"end": 479,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 464,
											"end": 479,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 464,
											"end": 479,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 464,
											"end": 479,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 464,
											"end": 479,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "96"
										},
										{
											"begin": 464,
											"end": 479,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 464,
											"end": 479,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 464,
											"end": 479,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 464,
											"end": 479,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 464,
											"end": 479,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 464,
											"end": 479,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 464,
											"end": 479,
											"name": "MUL",
											"source": 16
										},
										{
											"begin": 464,
											"end": 479,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 464,
											"end": 479,
											"name": "CALLDATASIZE",
											"source": 16
										},
										{
											"begin": 464,
											"end": 479,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 464,
											"end": 479,
											"name": "CALLDATACOPY",
											"source": 16
										},
										{
											"begin": 464,
											"end": 479,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 464,
											"end": 479,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 464,
											"end": 479,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 464,
											"end": 479,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 464,
											"end": 479,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 464,
											"end": 479,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 464,
											"end": 479,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 464,
											"end": 479,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 464,
											"end": 479,
											"name": "tag",
											"source": 16,
											"value": "96"
										},
										{
											"begin": 464,
											"end": 479,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 464,
											"end": 479,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 434,
											"end": 479,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 434,
											"end": 479,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 506,
											"end": 516,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 489,
											"end": 500,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 501,
											"end": 502,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 489,
											"end": 503,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 489,
											"end": 503,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 489,
											"end": 503,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 489,
											"end": 503,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 489,
											"end": 503,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "97"
										},
										{
											"begin": 489,
											"end": 503,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 489,
											"end": 503,
											"name": "INVALID",
											"source": 16
										},
										{
											"begin": 489,
											"end": 503,
											"name": "tag",
											"source": 16,
											"value": "97"
										},
										{
											"begin": 489,
											"end": 503,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 489,
											"end": 503,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 489,
											"end": 503,
											"name": "MUL",
											"source": 16
										},
										{
											"begin": 489,
											"end": 503,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 489,
											"end": 503,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 489,
											"end": 503,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 489,
											"end": 516,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 489,
											"end": 516,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFF"
										},
										{
											"begin": 489,
											"end": 516,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 489,
											"end": 516,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 489,
											"end": 516,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 489,
											"end": 516,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFF"
										},
										{
											"begin": 489,
											"end": 516,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 489,
											"end": 516,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 489,
											"end": 516,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 489,
											"end": 516,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 489,
											"end": 516,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 543,
											"end": 544,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 526,
											"end": 537,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 538,
											"end": 539,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 526,
											"end": 540,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 526,
											"end": 540,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 526,
											"end": 540,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 526,
											"end": 540,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 526,
											"end": 540,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "98"
										},
										{
											"begin": 526,
											"end": 540,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 526,
											"end": 540,
											"name": "INVALID",
											"source": 16
										},
										{
											"begin": 526,
											"end": 540,
											"name": "tag",
											"source": 16,
											"value": "98"
										},
										{
											"begin": 526,
											"end": 540,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 526,
											"end": 540,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 526,
											"end": 540,
											"name": "MUL",
											"source": 16
										},
										{
											"begin": 526,
											"end": 540,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 526,
											"end": 540,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 526,
											"end": 540,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 526,
											"end": 544,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 526,
											"end": 544,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFF"
										},
										{
											"begin": 526,
											"end": 544,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 526,
											"end": 544,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 526,
											"end": 544,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 526,
											"end": 544,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFF"
										},
										{
											"begin": 526,
											"end": 544,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 526,
											"end": 544,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 526,
											"end": 544,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 526,
											"end": 544,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 526,
											"end": 544,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 556,
											"end": 586,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 619,
											"end": 623,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 604,
											"end": 632,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 604,
											"end": 632,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 604,
											"end": 632,
											"name": "PUSH",
											"source": 16,
											"value": "883BDBFD"
										},
										{
											"begin": 633,
											"end": 644,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 604,
											"end": 645,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFF"
										},
										{
											"begin": 604,
											"end": 645,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "PUSH",
											"source": 16,
											"value": "E0"
										},
										{
											"begin": 604,
											"end": 645,
											"name": "SHL",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 604,
											"end": 645,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 604,
											"end": 645,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 604,
											"end": 645,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 604,
											"end": 645,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 604,
											"end": 645,
											"name": "MUL",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 604,
											"end": 645,
											"name": "tag",
											"source": 16,
											"value": "99"
										},
										{
											"begin": 604,
											"end": 645,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "101"
										},
										{
											"begin": 604,
											"end": 645,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 604,
											"end": 645,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "99"
										},
										{
											"begin": 604,
											"end": 645,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "tag",
											"source": 16,
											"value": "101"
										},
										{
											"begin": 604,
											"end": 645,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 604,
											"end": 645,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 604,
											"end": 645,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "EXTCODESIZE",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "102"
										},
										{
											"begin": 604,
											"end": 645,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 604,
											"end": 645,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "tag",
											"source": 16,
											"value": "102"
										},
										{
											"begin": 604,
											"end": 645,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "GAS",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "STATICCALL",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "104"
										},
										{
											"begin": 604,
											"end": 645,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "RETURNDATASIZE",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 604,
											"end": 645,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "RETURNDATACOPY",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "RETURNDATASIZE",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 604,
											"end": 645,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "tag",
											"source": 16,
											"value": "104"
										},
										{
											"begin": 604,
											"end": 645,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 604,
											"end": 645,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "RETURNDATASIZE",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 604,
											"end": 645,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "RETURNDATACOPY",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "RETURNDATASIZE",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "PUSH",
											"source": 16,
											"value": "1F"
										},
										{
											"begin": 604,
											"end": 645,
											"name": "NOT",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "PUSH",
											"source": 16,
											"value": "1F"
										},
										{
											"begin": 604,
											"end": 645,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 604,
											"end": 645,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 604,
											"end": 645,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "105"
										},
										{
											"begin": 604,
											"end": 645,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 604,
											"end": 645,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "tag",
											"source": 16,
											"value": "105"
										},
										{
											"begin": 604,
											"end": 645,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 604,
											"end": 645,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "PUSH",
											"source": 16,
											"value": "100000000"
										},
										{
											"begin": 604,
											"end": 645,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "106"
										},
										{
											"begin": 604,
											"end": 645,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 604,
											"end": 645,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "tag",
											"source": 16,
											"value": "106"
										},
										{
											"begin": 604,
											"end": 645,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 604,
											"end": 645,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "107"
										},
										{
											"begin": 604,
											"end": 645,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 604,
											"end": 645,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "tag",
											"source": 16,
											"value": "107"
										},
										{
											"begin": 604,
											"end": 645,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 604,
											"end": 645,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "MUL",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "PUSH",
											"source": 16,
											"value": "100000000"
										},
										{
											"begin": 604,
											"end": 645,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "OR",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "108"
										},
										{
											"begin": 604,
											"end": 645,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 604,
											"end": 645,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "tag",
											"source": 16,
											"value": "108"
										},
										{
											"begin": 604,
											"end": 645,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 604,
											"end": 645,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 604,
											"end": 645,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 604,
											"end": 645,
											"name": "MUL",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 604,
											"end": 645,
											"name": "tag",
											"source": 16,
											"value": "109"
										},
										{
											"begin": 604,
											"end": 645,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "111"
										},
										{
											"begin": 604,
											"end": 645,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 604,
											"end": 645,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "109"
										},
										{
											"begin": 604,
											"end": 645,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "tag",
											"source": 16,
											"value": "111"
										},
										{
											"begin": 604,
											"end": 645,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 604,
											"end": 645,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 604,
											"end": 645,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 604,
											"end": 645,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "PUSH",
											"source": 16,
											"value": "100000000"
										},
										{
											"begin": 604,
											"end": 645,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "112"
										},
										{
											"begin": 604,
											"end": 645,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 604,
											"end": 645,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "tag",
											"source": 16,
											"value": "112"
										},
										{
											"begin": 604,
											"end": 645,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 604,
											"end": 645,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "113"
										},
										{
											"begin": 604,
											"end": 645,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 604,
											"end": 645,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "tag",
											"source": 16,
											"value": "113"
										},
										{
											"begin": 604,
											"end": 645,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 604,
											"end": 645,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "MUL",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "PUSH",
											"source": 16,
											"value": "100000000"
										},
										{
											"begin": 604,
											"end": 645,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "OR",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "114"
										},
										{
											"begin": 604,
											"end": 645,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 604,
											"end": 645,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "tag",
											"source": 16,
											"value": "114"
										},
										{
											"begin": 604,
											"end": 645,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 604,
											"end": 645,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 604,
											"end": 645,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 604,
											"end": 645,
											"name": "MUL",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 604,
											"end": 645,
											"name": "tag",
											"source": 16,
											"value": "115"
										},
										{
											"begin": 604,
											"end": 645,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "117"
										},
										{
											"begin": 604,
											"end": 645,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 604,
											"end": 645,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "115"
										},
										{
											"begin": 604,
											"end": 645,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "tag",
											"source": 16,
											"value": "117"
										},
										{
											"begin": 604,
											"end": 645,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 604,
											"end": 645,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 604,
											"end": 645,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 555,
											"end": 645,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 555,
											"end": 645,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 555,
											"end": 645,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 656,
											"end": 682,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 706,
											"end": 721,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 722,
											"end": 723,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 706,
											"end": 724,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 706,
											"end": 724,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 706,
											"end": 724,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 706,
											"end": 724,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 706,
											"end": 724,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "118"
										},
										{
											"begin": 706,
											"end": 724,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 706,
											"end": 724,
											"name": "INVALID",
											"source": 16
										},
										{
											"begin": 706,
											"end": 724,
											"name": "tag",
											"source": 16,
											"value": "118"
										},
										{
											"begin": 706,
											"end": 724,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 706,
											"end": 724,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 706,
											"end": 724,
											"name": "MUL",
											"source": 16
										},
										{
											"begin": 706,
											"end": 724,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 706,
											"end": 724,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 706,
											"end": 724,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 706,
											"end": 724,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 685,
											"end": 700,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 701,
											"end": 702,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 685,
											"end": 703,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 685,
											"end": 703,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 685,
											"end": 703,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 685,
											"end": 703,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 685,
											"end": 703,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "119"
										},
										{
											"begin": 685,
											"end": 703,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 685,
											"end": 703,
											"name": "INVALID",
											"source": 16
										},
										{
											"begin": 685,
											"end": 703,
											"name": "tag",
											"source": 16,
											"value": "119"
										},
										{
											"begin": 685,
											"end": 703,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 685,
											"end": 703,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 685,
											"end": 703,
											"name": "MUL",
											"source": 16
										},
										{
											"begin": 685,
											"end": 703,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 685,
											"end": 703,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 685,
											"end": 703,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 685,
											"end": 703,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 685,
											"end": 724,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 656,
											"end": 724,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 656,
											"end": 724,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 773,
											"end": 783,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 750,
											"end": 783,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFF"
										},
										{
											"begin": 750,
											"end": 783,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 750,
											"end": 770,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 750,
											"end": 783,
											"name": "PUSH",
											"source": 16,
											"value": "6"
										},
										{
											"begin": 750,
											"end": 783,
											"name": "SIGNEXTEND",
											"source": 16
										},
										{
											"begin": 750,
											"end": 783,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 750,
											"end": 783,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "120"
										},
										{
											"begin": 750,
											"end": 783,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 750,
											"end": 783,
											"name": "INVALID",
											"source": 16
										},
										{
											"begin": 750,
											"end": 783,
											"name": "tag",
											"source": 16,
											"value": "120"
										},
										{
											"begin": 750,
											"end": 783,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 750,
											"end": 783,
											"name": "SDIV",
											"source": 16
										},
										{
											"begin": 737,
											"end": 784,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 737,
											"end": 784,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 866,
											"end": 867,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 843,
											"end": 863,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 843,
											"end": 867,
											"name": "PUSH",
											"source": 16,
											"value": "6"
										},
										{
											"begin": 843,
											"end": 867,
											"name": "SIGNEXTEND",
											"source": 16
										},
										{
											"begin": 843,
											"end": 867,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 843,
											"end": 911,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 843,
											"end": 911,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 843,
											"end": 911,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "121"
										},
										{
											"begin": 843,
											"end": 911,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 843,
											"end": 911,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 909,
											"end": 910,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 895,
											"end": 905,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 872,
											"end": 905,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFF"
										},
										{
											"begin": 872,
											"end": 905,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 872,
											"end": 892,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 872,
											"end": 905,
											"name": "PUSH",
											"source": 16,
											"value": "6"
										},
										{
											"begin": 872,
											"end": 905,
											"name": "SIGNEXTEND",
											"source": 16
										},
										{
											"begin": 872,
											"end": 905,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 872,
											"end": 905,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "122"
										},
										{
											"begin": 872,
											"end": 905,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 872,
											"end": 905,
											"name": "INVALID",
											"source": 16
										},
										{
											"begin": 872,
											"end": 905,
											"name": "tag",
											"source": 16,
											"value": "122"
										},
										{
											"begin": 872,
											"end": 905,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 872,
											"end": 905,
											"name": "SMOD",
											"source": 16
										},
										{
											"begin": 872,
											"end": 910,
											"name": "PUSH",
											"source": 16,
											"value": "6"
										},
										{
											"begin": 872,
											"end": 910,
											"name": "SIGNEXTEND",
											"source": 16
										},
										{
											"begin": 872,
											"end": 910,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 872,
											"end": 910,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 843,
											"end": 911,
											"name": "tag",
											"source": 16,
											"value": "121"
										},
										{
											"begin": 843,
											"end": 911,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 839,
											"end": 919,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 839,
											"end": 919,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "123"
										},
										{
											"begin": 839,
											"end": 919,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 913,
											"end": 919,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 913,
											"end": 919,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 913,
											"end": 919,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 913,
											"end": 919,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 913,
											"end": 919,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 913,
											"end": 919,
											"name": "SWAP5",
											"source": 16
										},
										{
											"begin": 913,
											"end": 919,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 913,
											"end": 919,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 839,
											"end": 919,
											"name": "tag",
											"source": 16,
											"value": "123"
										},
										{
											"begin": 839,
											"end": 919,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 270,
											"end": 927,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 270,
											"end": 927,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 270,
											"end": 927,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 270,
											"end": 927,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 270,
											"end": 927,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 270,
											"end": 927,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 270,
											"end": 927,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 270,
											"end": 927,
											"name": "JUMP",
											"source": 16,
											"value": "[out]"
										},
										{
											"begin": 934,
											"end": 1889,
											"name": "tag",
											"source": 16,
											"value": "32"
										},
										{
											"begin": 934,
											"end": 1889,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1090,
											"end": 1109,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1121,
											"end": 1141,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1144,
											"end": 1177,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "125"
										},
										{
											"begin": 1172,
											"end": 1176,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 1144,
											"end": 1171,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "126"
										},
										{
											"begin": 1144,
											"end": 1177,
											"name": "JUMP",
											"source": 16,
											"value": "[in]"
										},
										{
											"begin": 1144,
											"end": 1177,
											"name": "tag",
											"source": 16,
											"value": "125"
										},
										{
											"begin": 1144,
											"end": 1177,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1121,
											"end": 1177,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1121,
											"end": 1177,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1312,
											"end": 1329,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1296,
											"end": 1329,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1296,
											"end": 1329,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 1296,
											"end": 1308,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1296,
											"end": 1329,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1296,
											"end": 1329,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 1296,
											"end": 1329,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 1292,
											"end": 1883,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "127"
										},
										{
											"begin": 1292,
											"end": 1883,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 1345,
											"end": 1362,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1389,
											"end": 1401,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1365,
											"end": 1401,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1365,
											"end": 1401,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 1373,
											"end": 1385,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 1365,
											"end": 1386,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1365,
											"end": 1386,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 1365,
											"end": 1401,
											"name": "MUL",
											"source": 16
										},
										{
											"begin": 1345,
											"end": 1401,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1345,
											"end": 1401,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1441,
											"end": 1451,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 1429,
											"end": 1451,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1429,
											"end": 1451,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 1429,
											"end": 1438,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 1429,
											"end": 1451,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1429,
											"end": 1451,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 1429,
											"end": 1451,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 1429,
											"end": 1585,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "128"
										},
										{
											"begin": 1429,
											"end": 1585,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 1537,
											"end": 1585,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "129"
										},
										{
											"begin": 1553,
											"end": 1561,
											"name": "PUSH",
											"source": 16,
											"value": "1000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1563,
											"end": 1573,
											"name": "DUP8",
											"source": 16
										},
										{
											"begin": 1537,
											"end": 1585,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1537,
											"end": 1585,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 1575,
											"end": 1584,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 1537,
											"end": 1552,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "130"
										},
										{
											"begin": 1537,
											"end": 1585,
											"name": "JUMP",
											"source": 16,
											"value": "[in]"
										},
										{
											"begin": 1537,
											"end": 1585,
											"name": "tag",
											"source": 16,
											"value": "129"
										},
										{
											"begin": 1537,
											"end": 1585,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1429,
											"end": 1585,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "131"
										},
										{
											"begin": 1429,
											"end": 1585,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1429,
											"end": 1585,
											"name": "tag",
											"source": 16,
											"value": "128"
										},
										{
											"begin": 1429,
											"end": 1585,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1470,
											"end": 1518,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "132"
										},
										{
											"begin": 1486,
											"end": 1495,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1497,
											"end": 1507,
											"name": "DUP8",
											"source": 16
										},
										{
											"begin": 1470,
											"end": 1518,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1470,
											"end": 1518,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 1509,
											"end": 1517,
											"name": "PUSH",
											"source": 16,
											"value": "1000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1470,
											"end": 1485,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "130"
										},
										{
											"begin": 1470,
											"end": 1518,
											"name": "JUMP",
											"source": 16,
											"value": "[in]"
										},
										{
											"begin": 1470,
											"end": 1518,
											"name": "tag",
											"source": 16,
											"value": "132"
										},
										{
											"begin": 1470,
											"end": 1518,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1429,
											"end": 1585,
											"name": "tag",
											"source": 16,
											"value": "131"
										},
										{
											"begin": 1429,
											"end": 1585,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1415,
											"end": 1585,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 1415,
											"end": 1585,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1292,
											"end": 1883,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1292,
											"end": 1883,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "133"
										},
										{
											"begin": 1292,
											"end": 1883,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1292,
											"end": 1883,
											"name": "tag",
											"source": 16,
											"value": "127"
										},
										{
											"begin": 1292,
											"end": 1883,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1616,
											"end": 1633,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1636,
											"end": 1688,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "134"
										},
										{
											"begin": 1652,
											"end": 1664,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 1636,
											"end": 1688,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1636,
											"end": 1688,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 1666,
											"end": 1678,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 1636,
											"end": 1688,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1636,
											"end": 1688,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 1680,
											"end": 1687,
											"name": "PUSH",
											"source": 16,
											"value": "10000000000000000"
										},
										{
											"begin": 1636,
											"end": 1651,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "130"
										},
										{
											"begin": 1636,
											"end": 1688,
											"name": "JUMP",
											"source": 16,
											"value": "[in]"
										},
										{
											"begin": 1636,
											"end": 1688,
											"name": "tag",
											"source": 16,
											"value": "134"
										},
										{
											"begin": 1636,
											"end": 1688,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1616,
											"end": 1688,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1616,
											"end": 1688,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1728,
											"end": 1738,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 1716,
											"end": 1738,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1716,
											"end": 1738,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 1716,
											"end": 1725,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 1716,
											"end": 1738,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1716,
											"end": 1738,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 1716,
											"end": 1738,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 1716,
											"end": 1872,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "135"
										},
										{
											"begin": 1716,
											"end": 1872,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 1824,
											"end": 1872,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "136"
										},
										{
											"begin": 1840,
											"end": 1848,
											"name": "PUSH",
											"source": 16,
											"value": "100000000000000000000000000000000"
										},
										{
											"begin": 1850,
											"end": 1860,
											"name": "DUP8",
											"source": 16
										},
										{
											"begin": 1824,
											"end": 1872,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1824,
											"end": 1872,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 1862,
											"end": 1871,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 1824,
											"end": 1839,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "130"
										},
										{
											"begin": 1824,
											"end": 1872,
											"name": "JUMP",
											"source": 16,
											"value": "[in]"
										},
										{
											"begin": 1824,
											"end": 1872,
											"name": "tag",
											"source": 16,
											"value": "136"
										},
										{
											"begin": 1824,
											"end": 1872,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1716,
											"end": 1872,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "137"
										},
										{
											"begin": 1716,
											"end": 1872,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1716,
											"end": 1872,
											"name": "tag",
											"source": 16,
											"value": "135"
										},
										{
											"begin": 1716,
											"end": 1872,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1757,
											"end": 1805,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "138"
										},
										{
											"begin": 1773,
											"end": 1782,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1784,
											"end": 1794,
											"name": "DUP8",
											"source": 16
										},
										{
											"begin": 1757,
											"end": 1805,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1757,
											"end": 1805,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 1796,
											"end": 1804,
											"name": "PUSH",
											"source": 16,
											"value": "100000000000000000000000000000000"
										},
										{
											"begin": 1757,
											"end": 1772,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "130"
										},
										{
											"begin": 1757,
											"end": 1805,
											"name": "JUMP",
											"source": 16,
											"value": "[in]"
										},
										{
											"begin": 1757,
											"end": 1805,
											"name": "tag",
											"source": 16,
											"value": "138"
										},
										{
											"begin": 1757,
											"end": 1805,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1716,
											"end": 1872,
											"name": "tag",
											"source": 16,
											"value": "137"
										},
										{
											"begin": 1716,
											"end": 1872,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1702,
											"end": 1872,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 1702,
											"end": 1872,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1292,
											"end": 1883,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1292,
											"end": 1883,
											"name": "tag",
											"source": 16,
											"value": "133"
										},
										{
											"begin": 1292,
											"end": 1883,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 934,
											"end": 1889,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 934,
											"end": 1889,
											"name": "SWAP5",
											"source": 16
										},
										{
											"begin": 934,
											"end": 1889,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 934,
											"end": 1889,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 934,
											"end": 1889,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 934,
											"end": 1889,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 934,
											"end": 1889,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 934,
											"end": 1889,
											"name": "JUMP",
											"source": 16,
											"value": "[out]"
										},
										{
											"begin": 1362,
											"end": 3942,
											"name": "tag",
											"source": 12,
											"value": "126"
										},
										{
											"begin": 1362,
											"end": 3942,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1425,
											"end": 1445,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1457,
											"end": 1472,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1482,
											"end": 1483,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1475,
											"end": 1479,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1475,
											"end": 1483,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 1475,
											"end": 1483,
											"name": "SIGNEXTEND",
											"source": 12
										},
										{
											"begin": 1475,
											"end": 1483,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 1475,
											"end": 1532,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "140"
										},
										{
											"begin": 1475,
											"end": 1532,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1526,
											"end": 1530,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1519,
											"end": 1531,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 1519,
											"end": 1531,
											"name": "SIGNEXTEND",
											"source": 12
										},
										{
											"begin": 1475,
											"end": 1532,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "141"
										},
										{
											"begin": 1475,
											"end": 1532,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1475,
											"end": 1532,
											"name": "tag",
											"source": 12,
											"value": "140"
										},
										{
											"begin": 1475,
											"end": 1532,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1502,
											"end": 1506,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1495,
											"end": 1507,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 1495,
											"end": 1507,
											"name": "SIGNEXTEND",
											"source": 12
										},
										{
											"begin": 1494,
											"end": 1507,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1494,
											"end": 1507,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1475,
											"end": 1532,
											"name": "tag",
											"source": 12,
											"value": "141"
										},
										{
											"begin": 1475,
											"end": 1532,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1457,
											"end": 1532,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1457,
											"end": 1532,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 484,
											"end": 491,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF27618"
										},
										{
											"begin": 644,
											"end": 653,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 644,
											"end": 653,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1561,
											"end": 1578,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 1561,
											"end": 1578,
											"name": "SIGNEXTEND",
											"source": 12
										},
										{
											"begin": 1550,
											"end": 1557,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1550,
											"end": 1578,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 1550,
											"end": 1578,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1542,
											"end": 1584,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "142"
										},
										{
											"begin": 1542,
											"end": 1584,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1542,
											"end": 1584,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1542,
											"end": 1584,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1542,
											"end": 1584,
											"name": "PUSH",
											"source": 12,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1542,
											"end": 1584,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1542,
											"end": 1584,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1542,
											"end": 1584,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1542,
											"end": 1584,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1542,
											"end": 1584,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1542,
											"end": 1584,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1542,
											"end": 1584,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1542,
											"end": 1584,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1542,
											"end": 1584,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1542,
											"end": 1584,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1542,
											"end": 1584,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1542,
											"end": 1584,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1542,
											"end": 1584,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1542,
											"end": 1584,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 1542,
											"end": 1584,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1542,
											"end": 1584,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1542,
											"end": 1584,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1542,
											"end": 1584,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1542,
											"end": 1584,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1542,
											"end": 1584,
											"name": "PUSH",
											"source": 12,
											"value": "5400000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1542,
											"end": 1584,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1542,
											"end": 1584,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1542,
											"end": 1584,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1542,
											"end": 1584,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1542,
											"end": 1584,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1542,
											"end": 1584,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1542,
											"end": 1584,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1542,
											"end": 1584,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1542,
											"end": 1584,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1542,
											"end": 1584,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1542,
											"end": 1584,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1542,
											"end": 1584,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1542,
											"end": 1584,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1542,
											"end": 1584,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1542,
											"end": 1584,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1542,
											"end": 1584,
											"name": "tag",
											"source": 12,
											"value": "142"
										},
										{
											"begin": 1542,
											"end": 1584,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1595,
											"end": 1608,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1628,
											"end": 1629,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1621,
											"end": 1624,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 1611,
											"end": 1618,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1611,
											"end": 1624,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1611,
											"end": 1629,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 1611,
											"end": 1629,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1611,
											"end": 1704,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "143"
										},
										{
											"begin": 1611,
											"end": 1704,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1669,
											"end": 1704,
											"name": "PUSH",
											"source": 12,
											"value": "100000000000000000000000000000000"
										},
										{
											"begin": 1611,
											"end": 1704,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "144"
										},
										{
											"begin": 1611,
											"end": 1704,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1611,
											"end": 1704,
											"name": "tag",
											"source": 12,
											"value": "143"
										},
										{
											"begin": 1611,
											"end": 1704,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1632,
											"end": 1666,
											"name": "PUSH",
											"source": 12,
											"value": "FFFCB933BD6FAD37AA2D162D1A594001"
										},
										{
											"begin": 1611,
											"end": 1704,
											"name": "tag",
											"source": 12,
											"value": "144"
										},
										{
											"begin": 1611,
											"end": 1704,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1595,
											"end": 1704,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1595,
											"end": 1704,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1595,
											"end": 1704,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1595,
											"end": 1704,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1735,
											"end": 1736,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1728,
											"end": 1731,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 1718,
											"end": 1725,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1718,
											"end": 1731,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1718,
											"end": 1736,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 1714,
											"end": 1797,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "145"
										},
										{
											"begin": 1714,
											"end": 1797,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1794,
											"end": 1797,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 1755,
											"end": 1789,
											"name": "PUSH",
											"source": 12,
											"value": "FFF97272373D413259A46990580E213A"
										},
										{
											"begin": 1747,
											"end": 1752,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1747,
											"end": 1789,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 1746,
											"end": 1797,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1746,
											"end": 1797,
											"name": "SHR",
											"source": 12
										},
										{
											"begin": 1738,
											"end": 1797,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1738,
											"end": 1797,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1714,
											"end": 1797,
											"name": "tag",
											"source": 12,
											"value": "145"
										},
										{
											"begin": 1714,
											"end": 1797,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1828,
											"end": 1829,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1821,
											"end": 1824,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 1811,
											"end": 1818,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1811,
											"end": 1824,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1811,
											"end": 1829,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 1807,
											"end": 1890,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "146"
										},
										{
											"begin": 1807,
											"end": 1890,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1887,
											"end": 1890,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 1848,
											"end": 1882,
											"name": "PUSH",
											"source": 12,
											"value": "FFF2E50F5F656932EF12357CF3C7FDCC"
										},
										{
											"begin": 1840,
											"end": 1845,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1840,
											"end": 1882,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 1839,
											"end": 1890,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1839,
											"end": 1890,
											"name": "SHR",
											"source": 12
										},
										{
											"begin": 1831,
											"end": 1890,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1831,
											"end": 1890,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1807,
											"end": 1890,
											"name": "tag",
											"source": 12,
											"value": "146"
										},
										{
											"begin": 1807,
											"end": 1890,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1921,
											"end": 1922,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1914,
											"end": 1917,
											"name": "PUSH",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 1904,
											"end": 1911,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1904,
											"end": 1917,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1904,
											"end": 1922,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 1900,
											"end": 1983,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "147"
										},
										{
											"begin": 1900,
											"end": 1983,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1980,
											"end": 1983,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 1941,
											"end": 1975,
											"name": "PUSH",
											"source": 12,
											"value": "FFE5CACA7E10E4E61C3624EAA0941CD0"
										},
										{
											"begin": 1933,
											"end": 1938,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1933,
											"end": 1975,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 1932,
											"end": 1983,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1932,
											"end": 1983,
											"name": "SHR",
											"source": 12
										},
										{
											"begin": 1924,
											"end": 1983,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1924,
											"end": 1983,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1900,
											"end": 1983,
											"name": "tag",
											"source": 12,
											"value": "147"
										},
										{
											"begin": 1900,
											"end": 1983,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2015,
											"end": 2016,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2007,
											"end": 2011,
											"name": "PUSH",
											"source": 12,
											"value": "10"
										},
										{
											"begin": 1997,
											"end": 2004,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1997,
											"end": 2011,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1997,
											"end": 2016,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 1993,
											"end": 2077,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "148"
										},
										{
											"begin": 1993,
											"end": 2077,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2074,
											"end": 2077,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 2035,
											"end": 2069,
											"name": "PUSH",
											"source": 12,
											"value": "FFCB9843D60F6159C9DB58835C926644"
										},
										{
											"begin": 2027,
											"end": 2032,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2027,
											"end": 2069,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 2026,
											"end": 2077,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2026,
											"end": 2077,
											"name": "SHR",
											"source": 12
										},
										{
											"begin": 2018,
											"end": 2077,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2018,
											"end": 2077,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1993,
											"end": 2077,
											"name": "tag",
											"source": 12,
											"value": "148"
										},
										{
											"begin": 1993,
											"end": 2077,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2109,
											"end": 2110,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2101,
											"end": 2105,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2091,
											"end": 2098,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2091,
											"end": 2105,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2091,
											"end": 2110,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 2087,
											"end": 2171,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "149"
										},
										{
											"begin": 2087,
											"end": 2171,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2168,
											"end": 2171,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 2129,
											"end": 2163,
											"name": "PUSH",
											"source": 12,
											"value": "FF973B41FA98C081472E6896DFB254C0"
										},
										{
											"begin": 2121,
											"end": 2126,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2121,
											"end": 2163,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 2120,
											"end": 2171,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2120,
											"end": 2171,
											"name": "SHR",
											"source": 12
										},
										{
											"begin": 2112,
											"end": 2171,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2112,
											"end": 2171,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2087,
											"end": 2171,
											"name": "tag",
											"source": 12,
											"value": "149"
										},
										{
											"begin": 2087,
											"end": 2171,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2203,
											"end": 2204,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2195,
											"end": 2199,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2185,
											"end": 2192,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2185,
											"end": 2199,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2185,
											"end": 2204,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 2181,
											"end": 2265,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "150"
										},
										{
											"begin": 2181,
											"end": 2265,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2262,
											"end": 2265,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 2223,
											"end": 2257,
											"name": "PUSH",
											"source": 12,
											"value": "FF2EA16466C96A3843EC78B326B52861"
										},
										{
											"begin": 2215,
											"end": 2220,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2215,
											"end": 2257,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 2214,
											"end": 2265,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2214,
											"end": 2265,
											"name": "SHR",
											"source": 12
										},
										{
											"begin": 2206,
											"end": 2265,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2206,
											"end": 2265,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2181,
											"end": 2265,
											"name": "tag",
											"source": 12,
											"value": "150"
										},
										{
											"begin": 2181,
											"end": 2265,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2297,
											"end": 2298,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2289,
											"end": 2293,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 2279,
											"end": 2286,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2279,
											"end": 2293,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2279,
											"end": 2298,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 2275,
											"end": 2359,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "151"
										},
										{
											"begin": 2275,
											"end": 2359,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2356,
											"end": 2359,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 2317,
											"end": 2351,
											"name": "PUSH",
											"source": 12,
											"value": "FE5DEE046A99A2A811C461F1969C3053"
										},
										{
											"begin": 2309,
											"end": 2314,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2309,
											"end": 2351,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 2308,
											"end": 2359,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2308,
											"end": 2359,
											"name": "SHR",
											"source": 12
										},
										{
											"begin": 2300,
											"end": 2359,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2300,
											"end": 2359,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2275,
											"end": 2359,
											"name": "tag",
											"source": 12,
											"value": "151"
										},
										{
											"begin": 2275,
											"end": 2359,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2392,
											"end": 2393,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2383,
											"end": 2388,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 2373,
											"end": 2380,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2373,
											"end": 2388,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2373,
											"end": 2393,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 2369,
											"end": 2454,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "152"
										},
										{
											"begin": 2369,
											"end": 2454,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2451,
											"end": 2454,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 2412,
											"end": 2446,
											"name": "PUSH",
											"source": 12,
											"value": "FCBE86C7900A88AEDCFFC83B479AA3A4"
										},
										{
											"begin": 2404,
											"end": 2409,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2404,
											"end": 2446,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 2403,
											"end": 2454,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2403,
											"end": 2454,
											"name": "SHR",
											"source": 12
										},
										{
											"begin": 2395,
											"end": 2454,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2395,
											"end": 2454,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2369,
											"end": 2454,
											"name": "tag",
											"source": 12,
											"value": "152"
										},
										{
											"begin": 2369,
											"end": 2454,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2487,
											"end": 2488,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2478,
											"end": 2483,
											"name": "PUSH",
											"source": 12,
											"value": "200"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2468,
											"end": 2483,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2468,
											"end": 2488,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 2464,
											"end": 2549,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "153"
										},
										{
											"begin": 2464,
											"end": 2549,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2546,
											"end": 2549,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 2507,
											"end": 2541,
											"name": "PUSH",
											"source": 12,
											"value": "F987A7253AC413176F2B074CF7815E54"
										},
										{
											"begin": 2499,
											"end": 2504,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2499,
											"end": 2541,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 2498,
											"end": 2549,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2498,
											"end": 2549,
											"name": "SHR",
											"source": 12
										},
										{
											"begin": 2490,
											"end": 2549,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2490,
											"end": 2549,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2464,
											"end": 2549,
											"name": "tag",
											"source": 12,
											"value": "153"
										},
										{
											"begin": 2464,
											"end": 2549,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2582,
											"end": 2583,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2573,
											"end": 2578,
											"name": "PUSH",
											"source": 12,
											"value": "400"
										},
										{
											"begin": 2563,
											"end": 2570,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2563,
											"end": 2578,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2563,
											"end": 2583,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 2559,
											"end": 2644,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "154"
										},
										{
											"begin": 2559,
											"end": 2644,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2641,
											"end": 2644,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 2602,
											"end": 2636,
											"name": "PUSH",
											"source": 12,
											"value": "F3392B0822B70005940C7A398E4B70F3"
										},
										{
											"begin": 2594,
											"end": 2599,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2594,
											"end": 2636,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 2593,
											"end": 2644,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2593,
											"end": 2644,
											"name": "SHR",
											"source": 12
										},
										{
											"begin": 2585,
											"end": 2644,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2585,
											"end": 2644,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2559,
											"end": 2644,
											"name": "tag",
											"source": 12,
											"value": "154"
										},
										{
											"begin": 2559,
											"end": 2644,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2677,
											"end": 2678,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2668,
											"end": 2673,
											"name": "PUSH",
											"source": 12,
											"value": "800"
										},
										{
											"begin": 2658,
											"end": 2665,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2658,
											"end": 2673,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2658,
											"end": 2678,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 2654,
											"end": 2739,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "155"
										},
										{
											"begin": 2654,
											"end": 2739,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2736,
											"end": 2739,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 2697,
											"end": 2731,
											"name": "PUSH",
											"source": 12,
											"value": "E7159475A2C29B7443B29C7FA6E889D9"
										},
										{
											"begin": 2689,
											"end": 2694,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2689,
											"end": 2731,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 2688,
											"end": 2739,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2688,
											"end": 2739,
											"name": "SHR",
											"source": 12
										},
										{
											"begin": 2680,
											"end": 2739,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2680,
											"end": 2739,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2654,
											"end": 2739,
											"name": "tag",
											"source": 12,
											"value": "155"
										},
										{
											"begin": 2654,
											"end": 2739,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2773,
											"end": 2774,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2763,
											"end": 2769,
											"name": "PUSH",
											"source": 12,
											"value": "1000"
										},
										{
											"begin": 2753,
											"end": 2760,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2753,
											"end": 2769,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2753,
											"end": 2774,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 2749,
											"end": 2835,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "156"
										},
										{
											"begin": 2749,
											"end": 2835,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2832,
											"end": 2835,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 2793,
											"end": 2827,
											"name": "PUSH",
											"source": 12,
											"value": "D097F3BDFD2022B8845AD8F792AA5825"
										},
										{
											"begin": 2785,
											"end": 2790,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2785,
											"end": 2827,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 2784,
											"end": 2835,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2784,
											"end": 2835,
											"name": "SHR",
											"source": 12
										},
										{
											"begin": 2776,
											"end": 2835,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2776,
											"end": 2835,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2749,
											"end": 2835,
											"name": "tag",
											"source": 12,
											"value": "156"
										},
										{
											"begin": 2749,
											"end": 2835,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2869,
											"end": 2870,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2859,
											"end": 2865,
											"name": "PUSH",
											"source": 12,
											"value": "2000"
										},
										{
											"begin": 2849,
											"end": 2856,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2849,
											"end": 2865,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2849,
											"end": 2870,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 2845,
											"end": 2931,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "157"
										},
										{
											"begin": 2845,
											"end": 2931,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2928,
											"end": 2931,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 2889,
											"end": 2923,
											"name": "PUSH",
											"source": 12,
											"value": "A9F746462D870FDF8A65DC1F90E061E5"
										},
										{
											"begin": 2881,
											"end": 2886,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2881,
											"end": 2923,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 2880,
											"end": 2931,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2880,
											"end": 2931,
											"name": "SHR",
											"source": 12
										},
										{
											"begin": 2872,
											"end": 2931,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2872,
											"end": 2931,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2845,
											"end": 2931,
											"name": "tag",
											"source": 12,
											"value": "157"
										},
										{
											"begin": 2845,
											"end": 2931,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2965,
											"end": 2966,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2955,
											"end": 2961,
											"name": "PUSH",
											"source": 12,
											"value": "4000"
										},
										{
											"begin": 2945,
											"end": 2952,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2945,
											"end": 2961,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2945,
											"end": 2966,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 2941,
											"end": 3027,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "158"
										},
										{
											"begin": 2941,
											"end": 3027,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3024,
											"end": 3027,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 2985,
											"end": 3019,
											"name": "PUSH",
											"source": 12,
											"value": "70D869A156D2A1B890BB3DF62BAF32F7"
										},
										{
											"begin": 2977,
											"end": 2982,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2977,
											"end": 3019,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 2976,
											"end": 3027,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2976,
											"end": 3027,
											"name": "SHR",
											"source": 12
										},
										{
											"begin": 2968,
											"end": 3027,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2968,
											"end": 3027,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2941,
											"end": 3027,
											"name": "tag",
											"source": 12,
											"value": "158"
										},
										{
											"begin": 2941,
											"end": 3027,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3061,
											"end": 3062,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3051,
											"end": 3057,
											"name": "PUSH",
											"source": 12,
											"value": "8000"
										},
										{
											"begin": 3041,
											"end": 3048,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3041,
											"end": 3057,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3041,
											"end": 3062,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 3037,
											"end": 3123,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "159"
										},
										{
											"begin": 3037,
											"end": 3123,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3120,
											"end": 3123,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 3081,
											"end": 3115,
											"name": "PUSH",
											"source": 12,
											"value": "31BE135F97D08FD981231505542FCFA6"
										},
										{
											"begin": 3073,
											"end": 3078,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3073,
											"end": 3115,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 3072,
											"end": 3123,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3072,
											"end": 3123,
											"name": "SHR",
											"source": 12
										},
										{
											"begin": 3064,
											"end": 3123,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3064,
											"end": 3123,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3037,
											"end": 3123,
											"name": "tag",
											"source": 12,
											"value": "159"
										},
										{
											"begin": 3037,
											"end": 3123,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3158,
											"end": 3159,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3147,
											"end": 3154,
											"name": "PUSH",
											"source": 12,
											"value": "10000"
										},
										{
											"begin": 3137,
											"end": 3144,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3137,
											"end": 3154,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3137,
											"end": 3159,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 3133,
											"end": 3219,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "160"
										},
										{
											"begin": 3133,
											"end": 3219,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3216,
											"end": 3219,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 3178,
											"end": 3211,
											"name": "PUSH",
											"source": 12,
											"value": "9AA508B5B7A84E1C677DE54F3E99BC9"
										},
										{
											"begin": 3170,
											"end": 3175,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3170,
											"end": 3211,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 3169,
											"end": 3219,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3169,
											"end": 3219,
											"name": "SHR",
											"source": 12
										},
										{
											"begin": 3161,
											"end": 3219,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3161,
											"end": 3219,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3133,
											"end": 3219,
											"name": "tag",
											"source": 12,
											"value": "160"
										},
										{
											"begin": 3133,
											"end": 3219,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3254,
											"end": 3255,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3243,
											"end": 3250,
											"name": "PUSH",
											"source": 12,
											"value": "20000"
										},
										{
											"begin": 3233,
											"end": 3240,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3233,
											"end": 3250,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3233,
											"end": 3255,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 3229,
											"end": 3314,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "161"
										},
										{
											"begin": 3229,
											"end": 3314,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3311,
											"end": 3314,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 3274,
											"end": 3306,
											"name": "PUSH",
											"source": 12,
											"value": "5D6AF8DEDB81196699C329225EE604"
										},
										{
											"begin": 3266,
											"end": 3271,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3266,
											"end": 3306,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 3265,
											"end": 3314,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3265,
											"end": 3314,
											"name": "SHR",
											"source": 12
										},
										{
											"begin": 3257,
											"end": 3314,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3257,
											"end": 3314,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3229,
											"end": 3314,
											"name": "tag",
											"source": 12,
											"value": "161"
										},
										{
											"begin": 3229,
											"end": 3314,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3349,
											"end": 3350,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3338,
											"end": 3345,
											"name": "PUSH",
											"source": 12,
											"value": "40000"
										},
										{
											"begin": 3328,
											"end": 3335,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3328,
											"end": 3345,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3328,
											"end": 3350,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 3324,
											"end": 3407,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "162"
										},
										{
											"begin": 3324,
											"end": 3407,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3404,
											"end": 3407,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 3369,
											"end": 3399,
											"name": "PUSH",
											"source": 12,
											"value": "2216E584F5FA1EA926041BEDFE98"
										},
										{
											"begin": 3361,
											"end": 3366,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3361,
											"end": 3399,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 3360,
											"end": 3407,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3360,
											"end": 3407,
											"name": "SHR",
											"source": 12
										},
										{
											"begin": 3352,
											"end": 3407,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3352,
											"end": 3407,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3324,
											"end": 3407,
											"name": "tag",
											"source": 12,
											"value": "162"
										},
										{
											"begin": 3324,
											"end": 3407,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3442,
											"end": 3443,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3431,
											"end": 3438,
											"name": "PUSH",
											"source": 12,
											"value": "80000"
										},
										{
											"begin": 3421,
											"end": 3428,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3421,
											"end": 3438,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3421,
											"end": 3443,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 3417,
											"end": 3495,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "163"
										},
										{
											"begin": 3417,
											"end": 3495,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3492,
											"end": 3495,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 3462,
											"end": 3487,
											"name": "PUSH",
											"source": 12,
											"value": "48A170391F7DC42444E8FA2"
										},
										{
											"begin": 3454,
											"end": 3459,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3454,
											"end": 3487,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 3453,
											"end": 3495,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3453,
											"end": 3495,
											"name": "SHR",
											"source": 12
										},
										{
											"begin": 3445,
											"end": 3495,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3445,
											"end": 3495,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3417,
											"end": 3495,
											"name": "tag",
											"source": 12,
											"value": "163"
										},
										{
											"begin": 3417,
											"end": 3495,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3517,
											"end": 3518,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3510,
											"end": 3514,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3510,
											"end": 3518,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 3510,
											"end": 3518,
											"name": "SIGNEXTEND",
											"source": 12
										},
										{
											"begin": 3510,
											"end": 3518,
											"name": "SGT",
											"source": 12
										},
										{
											"begin": 3506,
											"end": 3553,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3506,
											"end": 3553,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "164"
										},
										{
											"begin": 3506,
											"end": 3553,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3548,
											"end": 3553,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 3528,
											"end": 3545,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3528,
											"end": 3553,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3528,
											"end": 3553,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "165"
										},
										{
											"begin": 3528,
											"end": 3553,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3528,
											"end": 3553,
											"name": "INVALID",
											"source": 12
										},
										{
											"begin": 3528,
											"end": 3553,
											"name": "tag",
											"source": 12,
											"value": "165"
										},
										{
											"begin": 3528,
											"end": 3553,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3528,
											"end": 3553,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 3520,
											"end": 3553,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3520,
											"end": 3553,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3506,
											"end": 3553,
											"name": "tag",
											"source": 12,
											"value": "164"
										},
										{
											"begin": 3506,
											"end": 3553,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3924,
											"end": 3925,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3912,
											"end": 3919,
											"name": "PUSH",
											"source": 12,
											"value": "100000000"
										},
										{
											"begin": 3903,
											"end": 3908,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3903,
											"end": 3920,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3903,
											"end": 3920,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "166"
										},
										{
											"begin": 3903,
											"end": 3920,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3903,
											"end": 3920,
											"name": "INVALID",
											"source": 12
										},
										{
											"begin": 3903,
											"end": 3920,
											"name": "tag",
											"source": 12,
											"value": "166"
										},
										{
											"begin": 3903,
											"end": 3920,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3903,
											"end": 3920,
											"name": "MOD",
											"source": 12
										},
										{
											"begin": 3903,
											"end": 3925,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 3903,
											"end": 3933,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "167"
										},
										{
											"begin": 3903,
											"end": 3933,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3932,
											"end": 3933,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 3903,
											"end": 3933,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "168"
										},
										{
											"begin": 3903,
											"end": 3933,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3903,
											"end": 3933,
											"name": "tag",
											"source": 12,
											"value": "167"
										},
										{
											"begin": 3903,
											"end": 3933,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3928,
											"end": 3929,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3903,
											"end": 3933,
											"name": "tag",
											"source": 12,
											"value": "168"
										},
										{
											"begin": 3903,
											"end": 3933,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3886,
											"end": 3934,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 3886,
											"end": 3934,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3896,
											"end": 3898,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3887,
											"end": 3892,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3887,
											"end": 3898,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3887,
											"end": 3898,
											"name": "SHR",
											"source": 12
										},
										{
											"begin": 3886,
											"end": 3934,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3863,
											"end": 3935,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3863,
											"end": 3935,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1362,
											"end": 3942,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1362,
											"end": 3942,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1362,
											"end": 3942,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1362,
											"end": 3942,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1362,
											"end": 3942,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1362,
											"end": 3942,
											"name": "JUMP",
											"source": 12,
											"value": "[out]"
										},
										{
											"begin": 749,
											"end": 4525,
											"name": "tag",
											"source": 11,
											"value": "130"
										},
										{
											"begin": 749,
											"end": 4525,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 861,
											"end": 875,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1190,
											"end": 1203,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1258,
											"end": 1271,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1375,
											"end": 1376,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1371,
											"end": 1377,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 1368,
											"end": 1369,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 1365,
											"end": 1366,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 1358,
											"end": 1378,
											"name": "MULMOD",
											"source": 11
										},
										{
											"begin": 1407,
											"end": 1408,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 1404,
											"end": 1405,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 1400,
											"end": 1409,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 1391,
											"end": 1409,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1391,
											"end": 1409,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1458,
											"end": 1463,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1454,
											"end": 1456,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1451,
											"end": 1464,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 1443,
											"end": 1448,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1439,
											"end": 1441,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1435,
											"end": 1449,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1431,
											"end": 1465,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1422,
											"end": 1465,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1422,
											"end": 1465,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1334,
											"end": 1475,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1556,
											"end": 1557,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1547,
											"end": 1552,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1547,
											"end": 1557,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 1543,
											"end": 1722,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1543,
											"end": 1722,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "170"
										},
										{
											"begin": 1543,
											"end": 1722,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1595,
											"end": 1596,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1581,
											"end": 1592,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 1581,
											"end": 1596,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 1573,
											"end": 1597,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "171"
										},
										{
											"begin": 1573,
											"end": 1597,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1573,
											"end": 1597,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1573,
											"end": 1597,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1573,
											"end": 1597,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1573,
											"end": 1597,
											"name": "tag",
											"source": 11,
											"value": "171"
										},
										{
											"begin": 1573,
											"end": 1597,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1659,
											"end": 1670,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1652,
											"end": 1657,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1648,
											"end": 1671,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 1638,
											"end": 1671,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1638,
											"end": 1671,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1698,
											"end": 1711,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1698,
											"end": 1711,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1698,
											"end": 1711,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "169"
										},
										{
											"begin": 1698,
											"end": 1711,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1543,
											"end": 1722,
											"name": "tag",
											"source": 11,
											"value": "170"
										},
										{
											"begin": 1543,
											"end": 1722,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1849,
											"end": 1854,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1835,
											"end": 1846,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 1835,
											"end": 1854,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 1827,
											"end": 1855,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "172"
										},
										{
											"begin": 1827,
											"end": 1855,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1827,
											"end": 1855,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1827,
											"end": 1855,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1827,
											"end": 1855,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1827,
											"end": 1855,
											"name": "tag",
											"source": 11,
											"value": "172"
										},
										{
											"begin": 1827,
											"end": 1855,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2132,
											"end": 2149,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2208,
											"end": 2219,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 2205,
											"end": 2206,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 2202,
											"end": 2203,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 2195,
											"end": 2220,
											"name": "MULMOD",
											"source": 11
										},
										{
											"begin": 2182,
											"end": 2220,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2182,
											"end": 2220,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2351,
											"end": 2356,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2340,
											"end": 2349,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2337,
											"end": 2357,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 2330,
											"end": 2335,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2326,
											"end": 2358,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2317,
											"end": 2358,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2317,
											"end": 2358,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2391,
											"end": 2400,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2384,
											"end": 2389,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2380,
											"end": 2401,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2371,
											"end": 2401,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2371,
											"end": 2401,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2560,
											"end": 2572,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2590,
											"end": 2601,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 2576,
											"end": 2587,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 2575,
											"end": 2587,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2575,
											"end": 2587,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2575,
											"end": 2601,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2560,
											"end": 2601,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2560,
											"end": 2601,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2712,
											"end": 2716,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2699,
											"end": 2710,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 2695,
											"end": 2717,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 2680,
											"end": 2717,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": 2680,
											"end": 2717,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2834,
											"end": 2838,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2827,
											"end": 2832,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 2823,
											"end": 2839,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 2814,
											"end": 2839,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 2814,
											"end": 2839,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3088,
											"end": 3089,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 3081,
											"end": 3085,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3074,
											"end": 3078,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3071,
											"end": 3072,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3067,
											"end": 3079,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3063,
											"end": 3086,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 3059,
											"end": 3090,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3051,
											"end": 3090,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3051,
											"end": 3090,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3126,
											"end": 3130,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3118,
											"end": 3123,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3118,
											"end": 3130,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 3109,
											"end": 3130,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 3109,
											"end": 3130,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 3109,
											"end": 3130,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 3109,
											"end": 3130,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3464,
											"end": 3475,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3498,
											"end": 3499,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 3483,
											"end": 3494,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 3479,
											"end": 3480,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 3479,
											"end": 3494,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 3478,
											"end": 3499,
											"name": "XOR",
											"source": 11
										},
										{
											"begin": 3464,
											"end": 3499,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3464,
											"end": 3499,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3739,
											"end": 3742,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3725,
											"end": 3736,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 3725,
											"end": 3742,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 3721,
											"end": 3722,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 3721,
											"end": 3742,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3714,
											"end": 3742,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3714,
											"end": 3742,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 3714,
											"end": 3742,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3714,
											"end": 3742,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3797,
											"end": 3800,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3783,
											"end": 3794,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 3783,
											"end": 3800,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 3779,
											"end": 3780,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 3779,
											"end": 3800,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3772,
											"end": 3800,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3772,
											"end": 3800,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 3772,
											"end": 3800,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3772,
											"end": 3800,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3856,
											"end": 3859,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3842,
											"end": 3853,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 3842,
											"end": 3859,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 3838,
											"end": 3839,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 3838,
											"end": 3859,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3831,
											"end": 3859,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3831,
											"end": 3859,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 3831,
											"end": 3859,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3831,
											"end": 3859,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3915,
											"end": 3918,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3901,
											"end": 3912,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 3901,
											"end": 3918,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 3897,
											"end": 3898,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 3897,
											"end": 3918,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3890,
											"end": 3918,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3890,
											"end": 3918,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 3890,
											"end": 3918,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3890,
											"end": 3918,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3974,
											"end": 3977,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3960,
											"end": 3971,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 3960,
											"end": 3977,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 3956,
											"end": 3957,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 3956,
											"end": 3977,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3949,
											"end": 3977,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3949,
											"end": 3977,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 3949,
											"end": 3977,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3949,
											"end": 3977,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4034,
											"end": 4037,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4020,
											"end": 4031,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 4020,
											"end": 4037,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 4016,
											"end": 4017,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 4016,
											"end": 4037,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4009,
											"end": 4037,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4009,
											"end": 4037,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 4009,
											"end": 4037,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4009,
											"end": 4037,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4492,
											"end": 4495,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4484,
											"end": 4489,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 4484,
											"end": 4495,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 4475,
											"end": 4495,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": 4475,
											"end": 4495,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4505,
											"end": 4518,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4505,
											"end": 4518,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4505,
											"end": 4518,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4505,
											"end": 4518,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4505,
											"end": 4518,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 749,
											"end": 4525,
											"name": "tag",
											"source": 11,
											"value": "169"
										},
										{
											"begin": 749,
											"end": 4525,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 749,
											"end": 4525,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 749,
											"end": 4525,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 749,
											"end": 4525,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 749,
											"end": 4525,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 749,
											"end": 4525,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 749,
											"end": 4525,
											"name": "JUMP",
											"source": 11,
											"value": "[out]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "37"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CALLDATASIZE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CALLDATACOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"EstimateAmountOut(address,address,address,uint256)": "8c39560e",
							"PoolExists(address,address,address,uint256,uint256)": "bcbcaa29",
							"Price(address,address,address)": "c361e0b1"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"factory\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"name\":\"EstimateAmountOut\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"factory\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"t0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"t1\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"min0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"min1\",\"type\":\"uint256\"}],\"name\":\"PoolExists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"factory\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"t0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"t1\",\"type\":\"address\"}],\"name\":\"Price\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/libraries/UniswapV3.sol\":\"UniswapV3\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol\":{\"keccak256\":\"0xcc3d0c93fc9ac0febbe09f941b465b57f750bcf3b48432da0b97dc289cfdc489\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b9379ad954680c44a0bc523b314ae4c4da735f9fe1d02aa56ea5bdba6f1136f2\",\"dweb:/ipfs/QmZXdgQNXKAckrXWz9R3mc47F1fvDvr28a2ewJrwNAw71B\"]},\"@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol\":{\"keccak256\":\"0xfe6113d518466cd6652c85b111e01f33eb62157f49ae5ed7d5a3947a2044adb1\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://1c42b9e6f5902ac38dd43e25750939baa7e0c1425dc75afd717c4412731065d5\",\"dweb:/ipfs/QmWaoacnzsucTvBME2o7YgZBZMhaHv7fkj83htHMVWJKWh\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol\":{\"keccak256\":\"0x9453dd0e7442188667d01d9b65de3f1e14e9511ff3e303179a15f6fc267f7634\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://982f4328f956c3e60e67501e759eb292ac487f76460c774c50e9ae4fcc92aae5\",\"dweb:/ipfs/QmRnzEDsaqtd9PJEVcgQi7p5aV5pMSvRUoGZJAdwFUJxgZ\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol\":{\"keccak256\":\"0xe603ac5b17ecdee73ba2b27efdf386c257a19c14206e87eee77e2017b742d9e5\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://8febc9bdb399a4d94bb89f5377732652e2400e4a8dee808201ade6848f9004e7\",\"dweb:/ipfs/QmaKDqYYFU4d2W2iN77aDHptfbFmYZRrMYXHeGpJmM8C1c\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol\":{\"keccak256\":\"0x8071514d0fe5d17d6fbd31c191cdfb703031c24e0ece3621d88ab10e871375cd\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://d0b571930cc7488b1d546a7e9cea7c52d8b3c4e207da657ed0e0db7343b8cd03\",\"dweb:/ipfs/QmaGK6vVwB95QSTR1XMYvrh7ivYAYZxi3fD7v6VMA4jZ39\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol\":{\"keccak256\":\"0xf6e5d2cd1139c4c276bdbc8e1d2b256e456c866a91f1b868da265c6d2685c3f7\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://b99c8c9ae8e27ee6559e5866bea82cbc9ffc8247f8d15b7422a4deb287d4d047\",\"dweb:/ipfs/QmfL8gaqt3ffAnm6nVj5ksuNpLygXuL3xq5VBqrkwC2JJ3\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol\":{\"keccak256\":\"0x759b78a2918af9e99e246dc3af084f654e48ef32bb4e4cb8a966aa3dcaece235\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://64144fb96e1c7fdba87305acadb98a198d26a3d46c097cb3a666e567f6f29735\",\"dweb:/ipfs/QmUnWVwN9FKB9uV5Pr8YfLpWZnYM2DENnRMaadZ492JS9u\"]},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol\":{\"keccak256\":\"0x852dc1f5df7dcf7f11e7bb3eed79f0cea72ad4b25f6a9d2c35aafb48925fd49f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://ed63907c38ff36b0e22bc9ffc53e791ea74f0d4f0e7c257fdfb5aaf8825b1f0f\",\"dweb:/ipfs/QmSQrckghEjs6HVsA5GVgpNpZWvTXMY5eQLF7cN6deFeEg\"]},\"@uniswap/v3-core/contracts/libraries/FullMath.sol\":{\"keccak256\":\"0x50e87f7a3197525d1c6f7e04290060e848677c8a4e86c554bc6ace4a4d0d476d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3874093a6b37d8e68f9475a91f8eb0a1c808cb6153c84cfe6c37909505a4d24e\",\"dweb:/ipfs/QmUqGpQqvSHX4SwUvcBCs9g4ZhR9JPhgD3615oUigAhtjj\"]},\"@uniswap/v3-core/contracts/libraries/TickMath.sol\":{\"keccak256\":\"0xda8c2c0b12d2976acfd364453ba5f5bf0117ba3c91175ee9e1067d3fb26944d9\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://3f3d2d7c2723c91830c74d96292f28fc1cfe28d388cdb9c1a5ebadb4c2b96f81\",\"dweb:/ipfs/QmYU4wk8MEm33wVWR38LoncvR7b8PP1mLuGBKX3dUpYJVE\"]},\"contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x7df9d93243a890a6dc175905d65495ae5726330faa50409ab8460c4c00c672e1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3ff91fe9d915b97343e152f1a15a46e5ff9477e90e90a4431dca38f79eb2cdba\",\"dweb:/ipfs/QmcHUAJs2MfcdbAFTzdQE1eGevxCGHNDXECiuGLDaUs34S\"]},\"contracts/libraries/OracleLibrary.sol\":{\"keccak256\":\"0xfe374d779a9fdb16c102035c181002ffd393138a38acc916e9f4e98139f5b399\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://497ed18360c8fef9ca485f60669fa56247b2a46a464483b2d93fe24792d68d1f\",\"dweb:/ipfs/QmY6gSGfuAi5BQnJxhQKLHwqmo7ZG3WVqXqAmPRZRyapGv\"]},\"contracts/libraries/UniswapV3.sol\":{\"keccak256\":\"0xa53c1a29ac5fb459643b01e91e26d2652d02e6bccf58c461bdd0b4d739658a23\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b0bb59a244ee383481516b2b3fbe44ba8aaf01774c96ea168626a3639909574d\",\"dweb:/ipfs/QmShBmmJERR8T68xcnsx3kVvec6m64XJVahg6TQ51NJbS8\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "@uniswap/v2-core/contracts/interfaces/IUniswapV2Factory.sol: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "@uniswap/v2-core/contracts/interfaces/IUniswapV2Factory.sol",
					"start": -1
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "@uniswap/v2-core/contracts/interfaces/IUniswapV2Pair.sol: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "@uniswap/v2-core/contracts/interfaces/IUniswapV2Pair.sol",
					"start": -1
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol",
					"start": -1
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2072",
				"formattedMessage": "contracts/libraries/UniswapV3.sol:56:9: Warning: Unused local variable.\n        uint16[4] memory fs;\n        ^-----------------^\n",
				"message": "Unused local variable.",
				"severity": "warning",
				"sourceLocation": {
					"end": 2162,
					"file": "contracts/libraries/UniswapV3.sol",
					"start": 2143
				},
				"type": "Warning"
			}
		],
		"sources": {
			"@uniswap/v2-core/contracts/interfaces/IUniswapV2Factory.sol": {
				"ast": {
					"absolutePath": "@uniswap/v2-core/contracts/interfaces/IUniswapV2Factory.sol",
					"exportedSymbols": {
						"IUniswapV2Factory": [
							62
						]
					},
					"id": 63,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 62,
							"linearizedBaseContracts": [
								62
							],
							"name": "IUniswapV2Factory",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"id": 11,
									"name": "PairCreated",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3,
												"indexed": true,
												"mutability": "mutable",
												"name": "token0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "78:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "78:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 5,
												"indexed": true,
												"mutability": "mutable",
												"name": "token1",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "102:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "102:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"indexed": false,
												"mutability": "mutable",
												"name": "pair",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "126:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "126:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"indexed": false,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "140:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "140:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "77:68:0"
									},
									"src": "60:86:0"
								},
								{
									"functionSelector": "017e7e58",
									"id": 16,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "feeTo",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "166:2:0"
									},
									"returnParameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "192:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "192:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "191:9:0"
									},
									"scope": 62,
									"src": "152:49:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "094b7415",
									"id": 21,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "feeToSetter",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "226:2:0"
									},
									"returnParameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 21,
												"src": "252:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 18,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "252:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "251:9:0"
									},
									"scope": 62,
									"src": "206:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "e6a43905",
									"id": 30,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getPair",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 26,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 23,
												"mutability": "mutable",
												"name": "tokenA",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "284:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 22,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "284:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 25,
												"mutability": "mutable",
												"name": "tokenB",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "300:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 24,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "300:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "283:32:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "pair",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "339:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 27,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "339:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "338:14:0"
									},
									"scope": 62,
									"src": "267:86:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "1e3dd18b",
									"id": 37,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allPairs",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 37,
												"src": "376:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 31,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "376:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "375:6:0"
									},
									"returnParameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "pair",
												"nodeType": "VariableDeclaration",
												"scope": 37,
												"src": "405:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 34,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:14:0"
									},
									"scope": 62,
									"src": "358:61:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "574f2ba3",
									"id": 42,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allPairsLength",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 38,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "447:2:0"
									},
									"returnParameters": {
										"id": 41,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 40,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "473:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 39,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "473:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "472:6:0"
									},
									"scope": 62,
									"src": "424:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "c9c65396",
									"id": 51,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "createPair",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 47,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 44,
												"mutability": "mutable",
												"name": "tokenA",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "505:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 43,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "505:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 46,
												"mutability": "mutable",
												"name": "tokenB",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "521:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 45,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "521:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "504:32:0"
									},
									"returnParameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "pair",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "555:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "555:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "554:14:0"
									},
									"scope": 62,
									"src": "485:84:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "f46901ed",
									"id": 56,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setFeeTo",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 54,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 53,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 56,
												"src": "593:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 52,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "593:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "592:9:0"
									},
									"returnParameters": {
										"id": 55,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "610:0:0"
									},
									"scope": 62,
									"src": "575:36:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a2e74af6",
									"id": 61,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setFeeToSetter",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 58,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "640:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 57,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "640:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "639:9:0"
									},
									"returnParameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "657:0:0"
									},
									"scope": 62,
									"src": "616:42:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 63,
							"src": "26:634:0"
						}
					],
					"src": "0:661:0"
				},
				"id": 0
			},
			"@uniswap/v2-core/contracts/interfaces/IUniswapV2Pair.sol": {
				"ast": {
					"absolutePath": "@uniswap/v2-core/contracts/interfaces/IUniswapV2Pair.sol",
					"exportedSymbols": {
						"IUniswapV2Pair": [
							304
						]
					},
					"id": 305,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 64,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 304,
							"linearizedBaseContracts": [
								304
							],
							"name": "IUniswapV2Pair",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"id": 72,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 71,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 66,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 72,
												"src": "72:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 65,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "72:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 68,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 72,
												"src": "95:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 67,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "95:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 70,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 72,
												"src": "120:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 69,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "120:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "71:60:1"
									},
									"src": "57:75:1"
								},
								{
									"anonymous": false,
									"id": 80,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 79,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "152:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 73,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "152:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 76,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "174:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 75,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "174:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 78,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "194:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 77,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "194:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "151:54:1"
									},
									"src": "137:69:1"
								},
								{
									"functionSelector": "06fdde03",
									"id": 85,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 81,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "225:2:1"
									},
									"returnParameters": {
										"id": 84,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 83,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 85,
												"src": "251:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 82,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "251:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "250:15:1"
									},
									"scope": 304,
									"src": "212:54:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "95d89b41",
									"id": 90,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "286:2:1"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 88,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "312:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 87,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "312:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "311:15:1"
									},
									"scope": 304,
									"src": "271:56:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "313ce567",
									"id": 95,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 91,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "349:2:1"
									},
									"returnParameters": {
										"id": 94,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 95,
												"src": "375:5:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 92,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "375:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "374:7:1"
									},
									"scope": 304,
									"src": "332:50:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "18160ddd",
									"id": 100,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "407:2:1"
									},
									"returnParameters": {
										"id": 99,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 98,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 100,
												"src": "433:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 97,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "433:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "432:6:1"
									},
									"scope": 304,
									"src": "387:52:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "70a08231",
									"id": 107,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 103,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 102,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 107,
												"src": "463:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 101,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "463:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "462:15:1"
									},
									"returnParameters": {
										"id": 106,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 105,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 107,
												"src": "501:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 104,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "501:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "500:6:1"
									},
									"scope": 304,
									"src": "444:63:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "dd62ed3e",
									"id": 116,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 112,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 116,
												"src": "531:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 108,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "531:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 111,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 116,
												"src": "546:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 110,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "546:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "530:32:1"
									},
									"returnParameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 116,
												"src": "586:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 113,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "586:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "585:6:1"
									},
									"scope": 304,
									"src": "512:80:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "095ea7b3",
									"id": 125,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 118,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 125,
												"src": "615:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 117,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "615:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 120,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 125,
												"src": "632:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 119,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "632:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "614:29:1"
									},
									"returnParameters": {
										"id": 124,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 123,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 125,
												"src": "662:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 122,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "662:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "661:6:1"
									},
									"scope": 304,
									"src": "598:70:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a9059cbb",
									"id": 134,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 127,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 134,
												"src": "691:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 126,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "691:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 134,
												"src": "703:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 128,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "703:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "690:24:1"
									},
									"returnParameters": {
										"id": 133,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 132,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 134,
												"src": "733:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 131,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "733:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "732:6:1"
									},
									"scope": 304,
									"src": "673:66:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "23b872dd",
									"id": 145,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 141,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 136,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 145,
												"src": "766:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 135,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "766:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 138,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 145,
												"src": "780:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 137,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "780:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 140,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 145,
												"src": "792:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 139,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "792:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "765:38:1"
									},
									"returnParameters": {
										"id": 144,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 143,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 145,
												"src": "822:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 142,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "822:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "821:6:1"
									},
									"scope": 304,
									"src": "744:84:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "3644e515",
									"id": 150,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 146,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "859:2:1"
									},
									"returnParameters": {
										"id": 149,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 148,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "885:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 147,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "885:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "884:9:1"
									},
									"scope": 304,
									"src": "834:60:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "30adf81f",
									"id": 155,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "PERMIT_TYPEHASH",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "923:2:1"
									},
									"returnParameters": {
										"id": 154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 155,
												"src": "949:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 152,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "949:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "948:9:1"
									},
									"scope": 304,
									"src": "899:59:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "7ecebe00",
									"id": 162,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 162,
												"src": "979:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 156,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "979:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "978:15:1"
									},
									"returnParameters": {
										"id": 161,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 160,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 162,
												"src": "1017:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 159,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1017:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1016:6:1"
									},
									"scope": 304,
									"src": "963:60:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "d505accf",
									"id": 179,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 164,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 179,
												"src": "1045:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 163,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1045:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 166,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 179,
												"src": "1060:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 165,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1060:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 168,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 179,
												"src": "1077:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 167,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1077:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 170,
												"mutability": "mutable",
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 179,
												"src": "1089:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 169,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1089:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "v",
												"nodeType": "VariableDeclaration",
												"scope": 179,
												"src": "1104:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 171,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1104:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "r",
												"nodeType": "VariableDeclaration",
												"scope": 179,
												"src": "1113:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 173,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1113:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "s",
												"nodeType": "VariableDeclaration",
												"scope": 179,
												"src": "1124:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 175,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1124:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1044:90:1"
									},
									"returnParameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1143:0:1"
									},
									"scope": 304,
									"src": "1029:115:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"id": 187,
									"name": "Mint",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 186,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 187,
												"src": "1161:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1161:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 183,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 187,
												"src": "1185:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 182,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1185:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 185,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 187,
												"src": "1199:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 184,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1199:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1160:52:1"
									},
									"src": "1150:63:1"
								},
								{
									"anonymous": false,
									"id": 197,
									"name": "Burn",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 189,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 197,
												"src": "1229:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 188,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1229:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 191,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 197,
												"src": "1253:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 190,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1253:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 193,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 197,
												"src": "1267:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 192,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 195,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 197,
												"src": "1281:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 194,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1281:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1228:72:1"
									},
									"src": "1218:83:1"
								},
								{
									"anonymous": false,
									"id": 211,
									"name": "Swap",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 210,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 199,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 211,
												"src": "1326:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 198,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1326:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 201,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0In",
												"nodeType": "VariableDeclaration",
												"scope": 211,
												"src": "1358:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 200,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1358:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 203,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1In",
												"nodeType": "VariableDeclaration",
												"scope": 211,
												"src": "1382:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 202,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1382:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0Out",
												"nodeType": "VariableDeclaration",
												"scope": 211,
												"src": "1406:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1406:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1Out",
												"nodeType": "VariableDeclaration",
												"scope": 211,
												"src": "1431:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 206,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1431:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 209,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 211,
												"src": "1456:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 208,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1456:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1316:164:1"
									},
									"src": "1306:175:1"
								},
								{
									"anonymous": false,
									"id": 217,
									"name": "Sync",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 216,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 213,
												"indexed": false,
												"mutability": "mutable",
												"name": "reserve0",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "1497:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 212,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "1497:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 215,
												"indexed": false,
												"mutability": "mutable",
												"name": "reserve1",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "1515:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 214,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "1515:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1496:36:1"
									},
									"src": "1486:47:1"
								},
								{
									"functionSelector": "ba9a7a56",
									"id": 222,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "MINIMUM_LIQUIDITY",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1565:2:1"
									},
									"returnParameters": {
										"id": 221,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 222,
												"src": "1591:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 219,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1591:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1590:6:1"
									},
									"scope": 304,
									"src": "1539:58:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "c45a0155",
									"id": 227,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "factory",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1618:2:1"
									},
									"returnParameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "1644:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 224,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1644:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1643:9:1"
									},
									"scope": 304,
									"src": "1602:51:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "0dfe1681",
									"id": 232,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "token0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 228,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1673:2:1"
									},
									"returnParameters": {
										"id": 231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 230,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 232,
												"src": "1699:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 229,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1699:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1698:9:1"
									},
									"scope": 304,
									"src": "1658:50:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "d21220a7",
									"id": 237,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "token1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 233,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1728:2:1"
									},
									"returnParameters": {
										"id": 236,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 235,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "1754:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 234,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1754:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1753:9:1"
									},
									"scope": 304,
									"src": "1713:50:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "0902f1ac",
									"id": 246,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getReserves",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 238,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1788:2:1"
									},
									"returnParameters": {
										"id": 245,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "reserve0",
												"nodeType": "VariableDeclaration",
												"scope": 246,
												"src": "1814:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 239,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "1814:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "reserve1",
												"nodeType": "VariableDeclaration",
												"scope": 246,
												"src": "1832:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 241,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "1832:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 244,
												"mutability": "mutable",
												"name": "blockTimestampLast",
												"nodeType": "VariableDeclaration",
												"scope": 246,
												"src": "1850:25:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 243,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "1850:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1813:63:1"
									},
									"scope": 304,
									"src": "1768:109:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "5909c0d5",
									"id": 251,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "price0CumulativeLast",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 247,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1911:2:1"
									},
									"returnParameters": {
										"id": 250,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 249,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 251,
												"src": "1937:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 248,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1937:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1936:6:1"
									},
									"scope": 304,
									"src": "1882:61:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "5a3d5493",
									"id": 256,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "price1CumulativeLast",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 252,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1977:2:1"
									},
									"returnParameters": {
										"id": 255,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 254,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 256,
												"src": "2003:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 253,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2003:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2002:6:1"
									},
									"scope": 304,
									"src": "1948:61:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "7464fc3d",
									"id": 261,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "kLast",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 257,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2028:2:1"
									},
									"returnParameters": {
										"id": 260,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 259,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "2054:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 258,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2054:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2053:6:1"
									},
									"scope": 304,
									"src": "2014:46:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "6a627842",
									"id": 268,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 264,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 263,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "2080:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 262,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2080:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2079:12:1"
									},
									"returnParameters": {
										"id": 267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 266,
												"mutability": "mutable",
												"name": "liquidity",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "2110:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 265,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2110:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2109:16:1"
									},
									"scope": 304,
									"src": "2066:60:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "89afcb44",
									"id": 277,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 271,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 270,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 277,
												"src": "2145:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 269,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2145:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2144:12:1"
									},
									"returnParameters": {
										"id": 276,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 273,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 277,
												"src": "2175:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 272,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2175:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 275,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 277,
												"src": "2189:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 274,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2189:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2174:28:1"
									},
									"scope": 304,
									"src": "2131:72:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "022c0d9f",
									"id": 288,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swap",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 286,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "amount0Out",
												"nodeType": "VariableDeclaration",
												"scope": 288,
												"src": "2222:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 278,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2222:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "amount1Out",
												"nodeType": "VariableDeclaration",
												"scope": 288,
												"src": "2239:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 280,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2239:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 283,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 288,
												"src": "2256:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 282,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2256:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 285,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 288,
												"src": "2268:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 284,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2268:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2221:67:1"
									},
									"returnParameters": {
										"id": 287,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2297:0:1"
									},
									"scope": 304,
									"src": "2208:90:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "bc25cf77",
									"id": 293,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "skim",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 291,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 290,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 293,
												"src": "2317:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 289,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2317:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2316:12:1"
									},
									"returnParameters": {
										"id": 292,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2337:0:1"
									},
									"scope": 304,
									"src": "2303:35:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "fff6cae9",
									"id": 296,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "sync",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 294,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2356:2:1"
									},
									"returnParameters": {
										"id": 295,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2367:0:1"
									},
									"scope": 304,
									"src": "2343:25:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "485cc955",
									"id": 303,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "initialize",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 301,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 298,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 303,
												"src": "2394:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 297,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2394:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 300,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 303,
												"src": "2403:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 299,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2403:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2393:18:1"
									},
									"returnParameters": {
										"id": 302,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2420:0:1"
									},
									"scope": 304,
									"src": "2374:47:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 305,
							"src": "26:2397:1"
						}
					],
					"src": "0:2424:1"
				},
				"id": 1
			},
			"@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol": {
				"ast": {
					"absolutePath": "@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol",
					"exportedSymbols": {
						"IUniswapV2Router01": [
							612
						]
					},
					"id": 613,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 306,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 612,
							"linearizedBaseContracts": [
								612
							],
							"name": "IUniswapV2Router01",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "c45a0155",
									"id": 311,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "factory",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 307,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "77:2:2"
									},
									"returnParameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 309,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 311,
												"src": "103:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 308,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "103:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "102:9:2"
									},
									"scope": 612,
									"src": "61:51:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "ad5c4648",
									"id": 316,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "WETH",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 312,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "130:2:2"
									},
									"returnParameters": {
										"id": 315,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 314,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 316,
												"src": "156:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 313,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "156:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "155:9:2"
									},
									"scope": 612,
									"src": "117:48:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "e8e33700",
									"id": 341,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "addLiquidity",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 333,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 318,
												"mutability": "mutable",
												"name": "tokenA",
												"nodeType": "VariableDeclaration",
												"scope": 341,
												"src": "202:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 317,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "202:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 320,
												"mutability": "mutable",
												"name": "tokenB",
												"nodeType": "VariableDeclaration",
												"scope": 341,
												"src": "226:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 319,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "226:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "amountADesired",
												"nodeType": "VariableDeclaration",
												"scope": 341,
												"src": "250:19:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 321,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "250:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 324,
												"mutability": "mutable",
												"name": "amountBDesired",
												"nodeType": "VariableDeclaration",
												"scope": 341,
												"src": "279:19:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 323,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "279:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 326,
												"mutability": "mutable",
												"name": "amountAMin",
												"nodeType": "VariableDeclaration",
												"scope": 341,
												"src": "308:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 325,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "308:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 328,
												"mutability": "mutable",
												"name": "amountBMin",
												"nodeType": "VariableDeclaration",
												"scope": 341,
												"src": "333:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 327,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "333:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 330,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 341,
												"src": "358:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 329,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "358:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 332,
												"mutability": "mutable",
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 341,
												"src": "378:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 331,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "378:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "192:205:2"
									},
									"returnParameters": {
										"id": 340,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 335,
												"mutability": "mutable",
												"name": "amountA",
												"nodeType": "VariableDeclaration",
												"scope": 341,
												"src": "416:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 334,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "416:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 337,
												"mutability": "mutable",
												"name": "amountB",
												"nodeType": "VariableDeclaration",
												"scope": 341,
												"src": "430:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 336,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "430:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 339,
												"mutability": "mutable",
												"name": "liquidity",
												"nodeType": "VariableDeclaration",
												"scope": 341,
												"src": "444:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 338,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "444:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "415:44:2"
									},
									"scope": 612,
									"src": "171:289:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "f305d719",
									"id": 362,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "addLiquidityETH",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 354,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 343,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 362,
												"src": "499:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 342,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "499:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 345,
												"mutability": "mutable",
												"name": "amountTokenDesired",
												"nodeType": "VariableDeclaration",
												"scope": 362,
												"src": "522:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 344,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "522:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 347,
												"mutability": "mutable",
												"name": "amountTokenMin",
												"nodeType": "VariableDeclaration",
												"scope": 362,
												"src": "555:19:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 346,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "555:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "amountETHMin",
												"nodeType": "VariableDeclaration",
												"scope": 362,
												"src": "584:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 348,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "584:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 351,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 362,
												"src": "611:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 350,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "611:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 353,
												"mutability": "mutable",
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 362,
												"src": "631:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 352,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "631:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "489:161:2"
									},
									"returnParameters": {
										"id": 361,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 356,
												"mutability": "mutable",
												"name": "amountToken",
												"nodeType": "VariableDeclaration",
												"scope": 362,
												"src": "677:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 355,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "677:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "amountETH",
												"nodeType": "VariableDeclaration",
												"scope": 362,
												"src": "695:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 357,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "695:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 360,
												"mutability": "mutable",
												"name": "liquidity",
												"nodeType": "VariableDeclaration",
												"scope": 362,
												"src": "711:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 359,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "711:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "676:50:2"
									},
									"scope": 612,
									"src": "465:262:2",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "baa2abde",
									"id": 383,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeLiquidity",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 377,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 364,
												"mutability": "mutable",
												"name": "tokenA",
												"nodeType": "VariableDeclaration",
												"scope": 383,
												"src": "766:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 363,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "766:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 366,
												"mutability": "mutable",
												"name": "tokenB",
												"nodeType": "VariableDeclaration",
												"scope": 383,
												"src": "790:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 365,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "790:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 368,
												"mutability": "mutable",
												"name": "liquidity",
												"nodeType": "VariableDeclaration",
												"scope": 383,
												"src": "814:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 367,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "814:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 370,
												"mutability": "mutable",
												"name": "amountAMin",
												"nodeType": "VariableDeclaration",
												"scope": 383,
												"src": "838:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 369,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "838:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 372,
												"mutability": "mutable",
												"name": "amountBMin",
												"nodeType": "VariableDeclaration",
												"scope": 383,
												"src": "863:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 371,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "863:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 374,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 383,
												"src": "888:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 373,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "888:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 376,
												"mutability": "mutable",
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 383,
												"src": "908:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 375,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "908:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "756:171:2"
									},
									"returnParameters": {
										"id": 382,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 379,
												"mutability": "mutable",
												"name": "amountA",
												"nodeType": "VariableDeclaration",
												"scope": 383,
												"src": "946:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 378,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "946:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 381,
												"mutability": "mutable",
												"name": "amountB",
												"nodeType": "VariableDeclaration",
												"scope": 383,
												"src": "960:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 380,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "960:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "945:28:2"
									},
									"scope": 612,
									"src": "732:242:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "02751cec",
									"id": 402,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeLiquidityETH",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 396,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 385,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "1016:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 384,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1016:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 387,
												"mutability": "mutable",
												"name": "liquidity",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "1039:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 386,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1039:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 389,
												"mutability": "mutable",
												"name": "amountTokenMin",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "1063:19:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 388,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1063:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 391,
												"mutability": "mutable",
												"name": "amountETHMin",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "1092:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 390,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1092:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "1119:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 392,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1119:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 395,
												"mutability": "mutable",
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "1139:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 394,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1139:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1006:152:2"
									},
									"returnParameters": {
										"id": 401,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 398,
												"mutability": "mutable",
												"name": "amountToken",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "1177:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 397,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1177:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 400,
												"mutability": "mutable",
												"name": "amountETH",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "1195:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 399,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1195:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1176:34:2"
									},
									"scope": 612,
									"src": "979:232:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "2195995c",
									"id": 431,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeLiquidityWithPermit",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 425,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 404,
												"mutability": "mutable",
												"name": "tokenA",
												"nodeType": "VariableDeclaration",
												"scope": 431,
												"src": "1260:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 403,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1260:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 406,
												"mutability": "mutable",
												"name": "tokenB",
												"nodeType": "VariableDeclaration",
												"scope": 431,
												"src": "1284:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 405,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1284:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 408,
												"mutability": "mutable",
												"name": "liquidity",
												"nodeType": "VariableDeclaration",
												"scope": 431,
												"src": "1308:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 407,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1308:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 410,
												"mutability": "mutable",
												"name": "amountAMin",
												"nodeType": "VariableDeclaration",
												"scope": 431,
												"src": "1332:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 409,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1332:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 412,
												"mutability": "mutable",
												"name": "amountBMin",
												"nodeType": "VariableDeclaration",
												"scope": 431,
												"src": "1357:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 411,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1357:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 431,
												"src": "1382:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 413,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1382:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 416,
												"mutability": "mutable",
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 431,
												"src": "1402:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 415,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1402:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 418,
												"mutability": "mutable",
												"name": "approveMax",
												"nodeType": "VariableDeclaration",
												"scope": 431,
												"src": "1425:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 417,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1425:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 420,
												"mutability": "mutable",
												"name": "v",
												"nodeType": "VariableDeclaration",
												"scope": 431,
												"src": "1442:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 419,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1442:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 422,
												"mutability": "mutable",
												"name": "r",
												"nodeType": "VariableDeclaration",
												"scope": 431,
												"src": "1451:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 421,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1451:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 424,
												"mutability": "mutable",
												"name": "s",
												"nodeType": "VariableDeclaration",
												"scope": 431,
												"src": "1462:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 423,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1462:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1250:227:2"
									},
									"returnParameters": {
										"id": 430,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 427,
												"mutability": "mutable",
												"name": "amountA",
												"nodeType": "VariableDeclaration",
												"scope": 431,
												"src": "1496:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 426,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1496:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "amountB",
												"nodeType": "VariableDeclaration",
												"scope": 431,
												"src": "1510:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 428,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1510:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1495:28:2"
									},
									"scope": 612,
									"src": "1216:308:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "ded9382a",
									"id": 458,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeLiquidityETHWithPermit",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 452,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 433,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "1576:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 432,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1576:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 435,
												"mutability": "mutable",
												"name": "liquidity",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "1599:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 434,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1599:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 437,
												"mutability": "mutable",
												"name": "amountTokenMin",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "1623:19:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 436,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1623:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 439,
												"mutability": "mutable",
												"name": "amountETHMin",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "1652:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 438,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1652:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 441,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "1679:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 440,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1679:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 443,
												"mutability": "mutable",
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "1699:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 442,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1699:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 445,
												"mutability": "mutable",
												"name": "approveMax",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "1722:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 444,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1722:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 447,
												"mutability": "mutable",
												"name": "v",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "1739:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 446,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1739:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 449,
												"mutability": "mutable",
												"name": "r",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "1748:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 448,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1748:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 451,
												"mutability": "mutable",
												"name": "s",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "1759:9:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 450,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1759:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:208:2"
									},
									"returnParameters": {
										"id": 457,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 454,
												"mutability": "mutable",
												"name": "amountToken",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "1793:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 453,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1793:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 456,
												"mutability": "mutable",
												"name": "amountETH",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "1811:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 455,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1811:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1792:34:2"
									},
									"scope": 612,
									"src": "1529:298:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "38ed1739",
									"id": 475,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactTokensForTokens",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 470,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "amountIn",
												"nodeType": "VariableDeclaration",
												"scope": 475,
												"src": "1875:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 459,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1875:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 462,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nodeType": "VariableDeclaration",
												"scope": 475,
												"src": "1898:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 461,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1898:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 465,
												"mutability": "mutable",
												"name": "path",
												"nodeType": "VariableDeclaration",
												"scope": 475,
												"src": "1925:23:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 463,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1925:7:2",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 464,
													"nodeType": "ArrayTypeName",
													"src": "1925:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 467,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 475,
												"src": "1958:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 466,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1958:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 469,
												"mutability": "mutable",
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 475,
												"src": "1978:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 468,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1978:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1865:132:2"
									},
									"returnParameters": {
										"id": 474,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 473,
												"mutability": "mutable",
												"name": "amounts",
												"nodeType": "VariableDeclaration",
												"scope": 475,
												"src": "2016:21:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 471,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "2016:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 472,
													"nodeType": "ArrayTypeName",
													"src": "2016:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2015:23:2"
									},
									"scope": 612,
									"src": "1832:207:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "8803dbee",
									"id": 492,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapTokensForExactTokens",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 487,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 477,
												"mutability": "mutable",
												"name": "amountOut",
												"nodeType": "VariableDeclaration",
												"scope": 492,
												"src": "2087:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 476,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2087:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 479,
												"mutability": "mutable",
												"name": "amountInMax",
												"nodeType": "VariableDeclaration",
												"scope": 492,
												"src": "2111:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 478,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2111:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 482,
												"mutability": "mutable",
												"name": "path",
												"nodeType": "VariableDeclaration",
												"scope": 492,
												"src": "2137:23:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 480,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2137:7:2",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 481,
													"nodeType": "ArrayTypeName",
													"src": "2137:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 484,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 492,
												"src": "2170:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 483,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2170:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 486,
												"mutability": "mutable",
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 492,
												"src": "2190:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 485,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2190:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2077:132:2"
									},
									"returnParameters": {
										"id": 491,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 490,
												"mutability": "mutable",
												"name": "amounts",
												"nodeType": "VariableDeclaration",
												"scope": 492,
												"src": "2228:21:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 488,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "2228:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 489,
													"nodeType": "ArrayTypeName",
													"src": "2228:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2227:23:2"
									},
									"scope": 612,
									"src": "2044:207:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "7ff36ab5",
									"id": 507,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactETHForTokens",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 502,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 494,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nodeType": "VariableDeclaration",
												"scope": 507,
												"src": "2287:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 493,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2287:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 497,
												"mutability": "mutable",
												"name": "path",
												"nodeType": "VariableDeclaration",
												"scope": 507,
												"src": "2306:23:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 495,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2306:7:2",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 496,
													"nodeType": "ArrayTypeName",
													"src": "2306:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 499,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 507,
												"src": "2331:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 498,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2331:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 501,
												"mutability": "mutable",
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 507,
												"src": "2343:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 500,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2343:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2286:71:2"
									},
									"returnParameters": {
										"id": 506,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 505,
												"mutability": "mutable",
												"name": "amounts",
												"nodeType": "VariableDeclaration",
												"scope": 507,
												"src": "2408:21:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 503,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "2408:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 504,
													"nodeType": "ArrayTypeName",
													"src": "2408:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2407:23:2"
									},
									"scope": 612,
									"src": "2256:175:2",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "4a25d94a",
									"id": 524,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapTokensForExactETH",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 519,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 509,
												"mutability": "mutable",
												"name": "amountOut",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "2467:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 508,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2467:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 511,
												"mutability": "mutable",
												"name": "amountInMax",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "2483:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 510,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2483:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 514,
												"mutability": "mutable",
												"name": "path",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "2501:23:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 512,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2501:7:2",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 513,
													"nodeType": "ArrayTypeName",
													"src": "2501:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 516,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "2526:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 515,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2526:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 518,
												"mutability": "mutable",
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "2538:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 517,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2538:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2466:86:2"
									},
									"returnParameters": {
										"id": 523,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 522,
												"mutability": "mutable",
												"name": "amounts",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "2587:21:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 520,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "2587:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 521,
													"nodeType": "ArrayTypeName",
													"src": "2587:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2586:23:2"
									},
									"scope": 612,
									"src": "2436:174:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "18cbafe5",
									"id": 541,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapExactTokensForETH",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 536,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 526,
												"mutability": "mutable",
												"name": "amountIn",
												"nodeType": "VariableDeclaration",
												"scope": 541,
												"src": "2646:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 525,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2646:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 528,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nodeType": "VariableDeclaration",
												"scope": 541,
												"src": "2661:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 527,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2661:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 531,
												"mutability": "mutable",
												"name": "path",
												"nodeType": "VariableDeclaration",
												"scope": 541,
												"src": "2680:23:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 529,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2680:7:2",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 530,
													"nodeType": "ArrayTypeName",
													"src": "2680:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 533,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 541,
												"src": "2705:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 532,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2705:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 535,
												"mutability": "mutable",
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 541,
												"src": "2717:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 534,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2717:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2645:86:2"
									},
									"returnParameters": {
										"id": 540,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 539,
												"mutability": "mutable",
												"name": "amounts",
												"nodeType": "VariableDeclaration",
												"scope": 541,
												"src": "2766:21:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 537,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "2766:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 538,
													"nodeType": "ArrayTypeName",
													"src": "2766:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2765:23:2"
									},
									"scope": 612,
									"src": "2615:174:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "fb3bdb41",
									"id": 556,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swapETHForExactTokens",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 551,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 543,
												"mutability": "mutable",
												"name": "amountOut",
												"nodeType": "VariableDeclaration",
												"scope": 556,
												"src": "2825:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 542,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2825:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 546,
												"mutability": "mutable",
												"name": "path",
												"nodeType": "VariableDeclaration",
												"scope": 556,
												"src": "2841:23:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 544,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2841:7:2",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 545,
													"nodeType": "ArrayTypeName",
													"src": "2841:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 548,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 556,
												"src": "2866:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 547,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2866:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 550,
												"mutability": "mutable",
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 556,
												"src": "2878:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 549,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2878:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2824:68:2"
									},
									"returnParameters": {
										"id": 555,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 554,
												"mutability": "mutable",
												"name": "amounts",
												"nodeType": "VariableDeclaration",
												"scope": 556,
												"src": "2943:21:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 552,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "2943:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 553,
													"nodeType": "ArrayTypeName",
													"src": "2943:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2942:23:2"
									},
									"scope": 612,
									"src": "2794:172:2",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "ad615dec",
									"id": 567,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "quote",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 563,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 558,
												"mutability": "mutable",
												"name": "amountA",
												"nodeType": "VariableDeclaration",
												"scope": 567,
												"src": "2987:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 557,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2987:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 560,
												"mutability": "mutable",
												"name": "reserveA",
												"nodeType": "VariableDeclaration",
												"scope": 567,
												"src": "3001:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 559,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3001:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 562,
												"mutability": "mutable",
												"name": "reserveB",
												"nodeType": "VariableDeclaration",
												"scope": 567,
												"src": "3016:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 561,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3016:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2986:44:2"
									},
									"returnParameters": {
										"id": 566,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 565,
												"mutability": "mutable",
												"name": "amountB",
												"nodeType": "VariableDeclaration",
												"scope": 567,
												"src": "3054:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 564,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3054:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3053:14:2"
									},
									"scope": 612,
									"src": "2972:96:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "054d50d4",
									"id": 578,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountOut",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 574,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 569,
												"mutability": "mutable",
												"name": "amountIn",
												"nodeType": "VariableDeclaration",
												"scope": 578,
												"src": "3095:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 568,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3095:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 571,
												"mutability": "mutable",
												"name": "reserveIn",
												"nodeType": "VariableDeclaration",
												"scope": 578,
												"src": "3110:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 570,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3110:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 573,
												"mutability": "mutable",
												"name": "reserveOut",
												"nodeType": "VariableDeclaration",
												"scope": 578,
												"src": "3126:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 572,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3126:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3094:48:2"
									},
									"returnParameters": {
										"id": 577,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 576,
												"mutability": "mutable",
												"name": "amountOut",
												"nodeType": "VariableDeclaration",
												"scope": 578,
												"src": "3166:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 575,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3166:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3165:16:2"
									},
									"scope": 612,
									"src": "3073:109:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "85f8c259",
									"id": 589,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountIn",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 585,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 580,
												"mutability": "mutable",
												"name": "amountOut",
												"nodeType": "VariableDeclaration",
												"scope": 589,
												"src": "3208:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 579,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3208:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 582,
												"mutability": "mutable",
												"name": "reserveIn",
												"nodeType": "VariableDeclaration",
												"scope": 589,
												"src": "3224:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 581,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3224:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 584,
												"mutability": "mutable",
												"name": "reserveOut",
												"nodeType": "VariableDeclaration",
												"scope": 589,
												"src": "3240:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 583,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3240:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3207:49:2"
									},
									"returnParameters": {
										"id": 588,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 587,
												"mutability": "mutable",
												"name": "amountIn",
												"nodeType": "VariableDeclaration",
												"scope": 589,
												"src": "3280:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 586,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3280:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3279:15:2"
									},
									"scope": 612,
									"src": "3187:108:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "d06ca61f",
									"id": 600,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountsOut",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 595,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 591,
												"mutability": "mutable",
												"name": "amountIn",
												"nodeType": "VariableDeclaration",
												"scope": 600,
												"src": "3323:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 590,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3323:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 594,
												"mutability": "mutable",
												"name": "path",
												"nodeType": "VariableDeclaration",
												"scope": 600,
												"src": "3338:23:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 592,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "3338:7:2",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 593,
													"nodeType": "ArrayTypeName",
													"src": "3338:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3322:40:2"
									},
									"returnParameters": {
										"id": 599,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 598,
												"mutability": "mutable",
												"name": "amounts",
												"nodeType": "VariableDeclaration",
												"scope": 600,
												"src": "3386:21:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 596,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "3386:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 597,
													"nodeType": "ArrayTypeName",
													"src": "3386:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3385:23:2"
									},
									"scope": 612,
									"src": "3300:109:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "1f00ca74",
									"id": 611,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountsIn",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 606,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 602,
												"mutability": "mutable",
												"name": "amountOut",
												"nodeType": "VariableDeclaration",
												"scope": 611,
												"src": "3436:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 601,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3436:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 605,
												"mutability": "mutable",
												"name": "path",
												"nodeType": "VariableDeclaration",
												"scope": 611,
												"src": "3452:23:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 603,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "3452:7:2",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 604,
													"nodeType": "ArrayTypeName",
													"src": "3452:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3435:41:2"
									},
									"returnParameters": {
										"id": 610,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "amounts",
												"nodeType": "VariableDeclaration",
												"scope": 611,
												"src": "3500:21:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 607,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "3500:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 608,
													"nodeType": "ArrayTypeName",
													"src": "3500:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3499:23:2"
									},
									"scope": 612,
									"src": "3414:109:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 613,
							"src": "26:3499:2"
						}
					],
					"src": "0:3526:2"
				},
				"id": 2
			},
			"@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol": {
				"ast": {
					"absolutePath": "@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol",
					"exportedSymbols": {
						"IUniswapV3Factory": [
							695
						]
					},
					"id": 696,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 614,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 615,
								"nodeType": "StructuredDocumentation",
								"src": "71:163:3",
								"text": "@title The interface for the Uniswap V3 Factory\n @notice The Uniswap V3 Factory facilitates creation of Uniswap V3 pools and control over the protocol fees"
							},
							"fullyImplemented": false,
							"id": 695,
							"linearizedBaseContracts": [
								695
							],
							"name": "IUniswapV3Factory",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 616,
										"nodeType": "StructuredDocumentation",
										"src": "268:185:3",
										"text": "@notice Emitted when the owner of the factory is changed\n @param oldOwner The owner before the owner was changed\n @param newOwner The owner after the owner was changed"
									},
									"id": 622,
									"name": "OwnerChanged",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 621,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 618,
												"indexed": true,
												"mutability": "mutable",
												"name": "oldOwner",
												"nodeType": "VariableDeclaration",
												"scope": 622,
												"src": "477:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 617,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "477:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 620,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 622,
												"src": "503:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 619,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "503:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "476:52:3"
									},
									"src": "458:71:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 623,
										"nodeType": "StructuredDocumentation",
										"src": "535:421:3",
										"text": "@notice Emitted when a pool is created\n @param token0 The first token of the pool by address sort order\n @param token1 The second token of the pool by address sort order\n @param fee The fee collected upon every swap in the pool, denominated in hundredths of a bip\n @param tickSpacing The minimum number of ticks between initialized ticks\n @param pool The address of the created pool"
									},
									"id": 635,
									"name": "PoolCreated",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 634,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 625,
												"indexed": true,
												"mutability": "mutable",
												"name": "token0",
												"nodeType": "VariableDeclaration",
												"scope": 635,
												"src": "988:22:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 624,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "988:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 627,
												"indexed": true,
												"mutability": "mutable",
												"name": "token1",
												"nodeType": "VariableDeclaration",
												"scope": 635,
												"src": "1020:22:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 626,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1020:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 629,
												"indexed": true,
												"mutability": "mutable",
												"name": "fee",
												"nodeType": "VariableDeclaration",
												"scope": 635,
												"src": "1052:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 628,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "1052:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 631,
												"indexed": false,
												"mutability": "mutable",
												"name": "tickSpacing",
												"nodeType": "VariableDeclaration",
												"scope": 635,
												"src": "1080:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 630,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1080:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 633,
												"indexed": false,
												"mutability": "mutable",
												"name": "pool",
												"nodeType": "VariableDeclaration",
												"scope": 635,
												"src": "1107:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 632,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1107:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "978:147:3"
									},
									"src": "961:165:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 636,
										"nodeType": "StructuredDocumentation",
										"src": "1132:275:3",
										"text": "@notice Emitted when a new fee amount is enabled for pool creation via the factory\n @param fee The enabled fee, denominated in hundredths of a bip\n @param tickSpacing The minimum number of ticks between initialized ticks for pools created with the given fee"
									},
									"id": 642,
									"name": "FeeAmountEnabled",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 641,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 638,
												"indexed": true,
												"mutability": "mutable",
												"name": "fee",
												"nodeType": "VariableDeclaration",
												"scope": 642,
												"src": "1435:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 637,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "1435:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 640,
												"indexed": true,
												"mutability": "mutable",
												"name": "tickSpacing",
												"nodeType": "VariableDeclaration",
												"scope": 642,
												"src": "1455:25:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 639,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1455:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1434:47:3"
									},
									"src": "1412:70:3"
								},
								{
									"documentation": {
										"id": 643,
										"nodeType": "StructuredDocumentation",
										"src": "1488:163:3",
										"text": "@notice Returns the current owner of the factory\n @dev Can be changed by the current owner via setOwner\n @return The address of the factory owner"
									},
									"functionSelector": "8da5cb5b",
									"id": 648,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 644,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1670:2:3"
									},
									"returnParameters": {
										"id": 647,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 646,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 648,
												"src": "1696:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 645,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1696:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1695:9:3"
									},
									"scope": 695,
									"src": "1656:49:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 649,
										"nodeType": "StructuredDocumentation",
										"src": "1711:348:3",
										"text": "@notice Returns the tick spacing for a given fee amount, if enabled, or 0 if not enabled\n @dev A fee amount can never be removed, so this value should be hard coded or cached in the calling context\n @param fee The enabled fee, denominated in hundredths of a bip. Returns 0 in case of unenabled fee\n @return The tick spacing"
									},
									"functionSelector": "22afcccb",
									"id": 656,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "feeAmountTickSpacing",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 652,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 651,
												"mutability": "mutable",
												"name": "fee",
												"nodeType": "VariableDeclaration",
												"scope": 656,
												"src": "2094:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 650,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "2094:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2093:12:3"
									},
									"returnParameters": {
										"id": 655,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 654,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 656,
												"src": "2129:5:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 653,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "2129:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2128:7:3"
									},
									"scope": 695,
									"src": "2064:72:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 657,
										"nodeType": "StructuredDocumentation",
										"src": "2142:471:3",
										"text": "@notice Returns the pool address for a given pair of tokens and a fee, or address 0 if it does not exist\n @dev tokenA and tokenB may be passed in either token0/token1 or token1/token0 order\n @param tokenA The contract address of either token0 or token1\n @param tokenB The contract address of the other token\n @param fee The fee collected upon every swap in the pool, denominated in hundredths of a bip\n @return pool The pool address"
									},
									"functionSelector": "1698ee82",
									"id": 668,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getPool",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 664,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 659,
												"mutability": "mutable",
												"name": "tokenA",
												"nodeType": "VariableDeclaration",
												"scope": 668,
												"src": "2644:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 658,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2644:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 661,
												"mutability": "mutable",
												"name": "tokenB",
												"nodeType": "VariableDeclaration",
												"scope": 668,
												"src": "2668:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 660,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2668:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 663,
												"mutability": "mutable",
												"name": "fee",
												"nodeType": "VariableDeclaration",
												"scope": 668,
												"src": "2692:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 662,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "2692:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2634:74:3"
									},
									"returnParameters": {
										"id": 667,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 666,
												"mutability": "mutable",
												"name": "pool",
												"nodeType": "VariableDeclaration",
												"scope": 668,
												"src": "2732:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 665,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2732:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2731:14:3"
									},
									"scope": 695,
									"src": "2618:128:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 669,
										"nodeType": "StructuredDocumentation",
										"src": "2752:554:3",
										"text": "@notice Creates a pool for the given two tokens and fee\n @param tokenA One of the two tokens in the desired pool\n @param tokenB The other of the two tokens in the desired pool\n @param fee The desired fee for the pool\n @dev tokenA and tokenB may be passed in either order: token0/token1 or token1/token0. tickSpacing is retrieved\n from the fee. The call will revert if the pool already exists, the fee is invalid, or the token arguments\n are invalid.\n @return pool The address of the newly created pool"
									},
									"functionSelector": "a1671295",
									"id": 680,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "createPool",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 676,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 671,
												"mutability": "mutable",
												"name": "tokenA",
												"nodeType": "VariableDeclaration",
												"scope": 680,
												"src": "3340:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 670,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3340:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 673,
												"mutability": "mutable",
												"name": "tokenB",
												"nodeType": "VariableDeclaration",
												"scope": 680,
												"src": "3364:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 672,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3364:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 675,
												"mutability": "mutable",
												"name": "fee",
												"nodeType": "VariableDeclaration",
												"scope": 680,
												"src": "3388:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 674,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "3388:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3330:74:3"
									},
									"returnParameters": {
										"id": 679,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 678,
												"mutability": "mutable",
												"name": "pool",
												"nodeType": "VariableDeclaration",
												"scope": 680,
												"src": "3423:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 677,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3423:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3422:14:3"
									},
									"scope": 695,
									"src": "3311:126:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 681,
										"nodeType": "StructuredDocumentation",
										"src": "3443:144:3",
										"text": "@notice Updates the owner of the factory\n @dev Must be called by the current owner\n @param _owner The new owner of the factory"
									},
									"functionSelector": "13af4035",
									"id": 686,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setOwner",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 684,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 683,
												"mutability": "mutable",
												"name": "_owner",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "3610:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 682,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3610:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3609:16:3"
									},
									"returnParameters": {
										"id": 685,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3634:0:3"
									},
									"scope": 695,
									"src": "3592:43:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 687,
										"nodeType": "StructuredDocumentation",
										"src": "3641:326:3",
										"text": "@notice Enables a fee amount with the given tickSpacing\n @dev Fee amounts may never be removed once enabled\n @param fee The fee amount to enable, denominated in hundredths of a bip (i.e. 1e-6)\n @param tickSpacing The spacing between ticks to be enforced for all pools created with the given fee amount"
									},
									"functionSelector": "8a7c195f",
									"id": 694,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "enableFeeAmount",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 692,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 689,
												"mutability": "mutable",
												"name": "fee",
												"nodeType": "VariableDeclaration",
												"scope": 694,
												"src": "3997:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 688,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "3997:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 691,
												"mutability": "mutable",
												"name": "tickSpacing",
												"nodeType": "VariableDeclaration",
												"scope": 694,
												"src": "4009:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 690,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "4009:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3996:31:3"
									},
									"returnParameters": {
										"id": 693,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4036:0:3"
									},
									"scope": 695,
									"src": "3972:65:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 696,
							"src": "234:3805:3"
						}
					],
					"src": "45:3995:3"
				},
				"id": 3
			},
			"@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol": {
				"ast": {
					"absolutePath": "@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol",
					"exportedSymbols": {
						"IUniswapV3Pool": [
							717
						],
						"IUniswapV3PoolActions": [
							813
						],
						"IUniswapV3PoolDerivedState": [
							844
						],
						"IUniswapV3PoolEvents": [
							963
						],
						"IUniswapV3PoolImmutables": [
							1003
						],
						"IUniswapV3PoolOwnerActions": [
							1029
						],
						"IUniswapV3PoolState": [
							1137
						]
					},
					"id": 718,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 697,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:4"
						},
						{
							"absolutePath": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol",
							"file": "./pool/IUniswapV3PoolImmutables.sol",
							"id": 698,
							"nodeType": "ImportDirective",
							"scope": 718,
							"sourceUnit": 1004,
							"src": "71:45:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol",
							"file": "./pool/IUniswapV3PoolState.sol",
							"id": 699,
							"nodeType": "ImportDirective",
							"scope": 718,
							"sourceUnit": 1138,
							"src": "117:40:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol",
							"file": "./pool/IUniswapV3PoolDerivedState.sol",
							"id": 700,
							"nodeType": "ImportDirective",
							"scope": 718,
							"sourceUnit": 845,
							"src": "158:47:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol",
							"file": "./pool/IUniswapV3PoolActions.sol",
							"id": 701,
							"nodeType": "ImportDirective",
							"scope": 718,
							"sourceUnit": 814,
							"src": "206:42:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol",
							"file": "./pool/IUniswapV3PoolOwnerActions.sol",
							"id": 702,
							"nodeType": "ImportDirective",
							"scope": 718,
							"sourceUnit": 1030,
							"src": "249:47:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol",
							"file": "./pool/IUniswapV3PoolEvents.sol",
							"id": 703,
							"nodeType": "ImportDirective",
							"scope": 718,
							"sourceUnit": 964,
							"src": "297:41:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 705,
										"name": "IUniswapV3PoolImmutables",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1003,
										"src": "637:24:4",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IUniswapV3PoolImmutables_$1003",
											"typeString": "contract IUniswapV3PoolImmutables"
										}
									},
									"id": 706,
									"nodeType": "InheritanceSpecifier",
									"src": "637:24:4"
								},
								{
									"baseName": {
										"id": 707,
										"name": "IUniswapV3PoolState",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1137,
										"src": "667:19:4",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IUniswapV3PoolState_$1137",
											"typeString": "contract IUniswapV3PoolState"
										}
									},
									"id": 708,
									"nodeType": "InheritanceSpecifier",
									"src": "667:19:4"
								},
								{
									"baseName": {
										"id": 709,
										"name": "IUniswapV3PoolDerivedState",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 844,
										"src": "692:26:4",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IUniswapV3PoolDerivedState_$844",
											"typeString": "contract IUniswapV3PoolDerivedState"
										}
									},
									"id": 710,
									"nodeType": "InheritanceSpecifier",
									"src": "692:26:4"
								},
								{
									"baseName": {
										"id": 711,
										"name": "IUniswapV3PoolActions",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 813,
										"src": "724:21:4",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IUniswapV3PoolActions_$813",
											"typeString": "contract IUniswapV3PoolActions"
										}
									},
									"id": 712,
									"nodeType": "InheritanceSpecifier",
									"src": "724:21:4"
								},
								{
									"baseName": {
										"id": 713,
										"name": "IUniswapV3PoolOwnerActions",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1029,
										"src": "751:26:4",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IUniswapV3PoolOwnerActions_$1029",
											"typeString": "contract IUniswapV3PoolOwnerActions"
										}
									},
									"id": 714,
									"nodeType": "InheritanceSpecifier",
									"src": "751:26:4"
								},
								{
									"baseName": {
										"id": 715,
										"name": "IUniswapV3PoolEvents",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 963,
										"src": "783:20:4",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IUniswapV3PoolEvents_$963",
											"typeString": "contract IUniswapV3PoolEvents"
										}
									},
									"id": 716,
									"nodeType": "InheritanceSpecifier",
									"src": "783:20:4"
								}
							],
							"contractDependencies": [
								813,
								844,
								963,
								1003,
								1029,
								1137
							],
							"contractKind": "interface",
							"documentation": {
								"id": 704,
								"nodeType": "StructuredDocumentation",
								"src": "340:265:4",
								"text": "@title The interface for a Uniswap V3 Pool\n @notice A Uniswap pool facilitates swapping and automated market making between any two assets that strictly conform\n to the ERC20 specification\n @dev The pool interface is broken up into many smaller pieces"
							},
							"fullyImplemented": false,
							"id": 717,
							"linearizedBaseContracts": [
								717,
								963,
								1029,
								813,
								844,
								1137,
								1003
							],
							"name": "IUniswapV3Pool",
							"nodeType": "ContractDefinition",
							"nodes": [],
							"scope": 718,
							"src": "605:203:4"
						}
					],
					"src": "45:764:4"
				},
				"id": 4
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol": {
				"ast": {
					"absolutePath": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol",
					"exportedSymbols": {
						"IUniswapV3PoolActions": [
							813
						]
					},
					"id": 814,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 719,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 720,
								"nodeType": "StructuredDocumentation",
								"src": "71:102:5",
								"text": "@title Permissionless pool actions\n @notice Contains pool methods that can be called by anyone"
							},
							"fullyImplemented": false,
							"id": 813,
							"linearizedBaseContracts": [
								813
							],
							"name": "IUniswapV3PoolActions",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 721,
										"nodeType": "StructuredDocumentation",
										"src": "211:206:5",
										"text": "@notice Sets the initial price for the pool\n @dev Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value\n @param sqrtPriceX96 the initial sqrt price of the pool as a Q64.96"
									},
									"functionSelector": "f637731d",
									"id": 726,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "initialize",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 724,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 723,
												"mutability": "mutable",
												"name": "sqrtPriceX96",
												"nodeType": "VariableDeclaration",
												"scope": 726,
												"src": "442:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 722,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "442:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "441:22:5"
									},
									"returnParameters": {
										"id": 725,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "472:0:5"
									},
									"scope": 813,
									"src": "422:51:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 727,
										"nodeType": "StructuredDocumentation",
										"src": "479:1029:5",
										"text": "@notice Adds liquidity for the given recipient/tickLower/tickUpper position\n @dev The caller of this method receives a callback in the form of IUniswapV3MintCallback#uniswapV3MintCallback\n in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends\n on tickLower, tickUpper, the amount of liquidity, and the current price.\n @param recipient The address for which the liquidity will be created\n @param tickLower The lower tick of the position in which to add liquidity\n @param tickUpper The upper tick of the position in which to add liquidity\n @param amount The amount of liquidity to mint\n @param data Any data that should be passed through to the callback\n @return amount0 The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback\n @return amount1 The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback"
									},
									"functionSelector": "3c8a7d8d",
									"id": 744,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 738,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 729,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 744,
												"src": "1536:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 728,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1536:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 731,
												"mutability": "mutable",
												"name": "tickLower",
												"nodeType": "VariableDeclaration",
												"scope": 744,
												"src": "1563:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 730,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1563:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 733,
												"mutability": "mutable",
												"name": "tickUpper",
												"nodeType": "VariableDeclaration",
												"scope": 744,
												"src": "1588:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 732,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1588:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 735,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 744,
												"src": "1613:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 734,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1613:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 737,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 744,
												"src": "1637:19:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 736,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1637:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1526:136:5"
									},
									"returnParameters": {
										"id": 743,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 740,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 744,
												"src": "1681:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 739,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1681:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 742,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 744,
												"src": "1698:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 741,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1698:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1680:34:5"
									},
									"scope": 813,
									"src": "1513:202:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 745,
										"nodeType": "StructuredDocumentation",
										"src": "1721:1053:5",
										"text": "@notice Collects tokens owed to a position\n @dev Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity.\n Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or\n amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the\n actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.\n @param recipient The address which should receive the fees collected\n @param tickLower The lower tick of the position for which to collect fees\n @param tickUpper The upper tick of the position for which to collect fees\n @param amount0Requested How much token0 should be withdrawn from the fees owed\n @param amount1Requested How much token1 should be withdrawn from the fees owed\n @return amount0 The amount of fees collected in token0\n @return amount1 The amount of fees collected in token1"
									},
									"functionSelector": "4f1eb3d8",
									"id": 762,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "collect",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 756,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 747,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 762,
												"src": "2805:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 746,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2805:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 749,
												"mutability": "mutable",
												"name": "tickLower",
												"nodeType": "VariableDeclaration",
												"scope": 762,
												"src": "2832:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 748,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "2832:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 751,
												"mutability": "mutable",
												"name": "tickUpper",
												"nodeType": "VariableDeclaration",
												"scope": 762,
												"src": "2857:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 750,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "2857:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 753,
												"mutability": "mutable",
												"name": "amount0Requested",
												"nodeType": "VariableDeclaration",
												"scope": 762,
												"src": "2882:24:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 752,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2882:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 755,
												"mutability": "mutable",
												"name": "amount1Requested",
												"nodeType": "VariableDeclaration",
												"scope": 762,
												"src": "2916:24:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 754,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2916:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2795:151:5"
									},
									"returnParameters": {
										"id": 761,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 758,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 762,
												"src": "2965:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 757,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2965:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 760,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 762,
												"src": "2982:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 759,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2982:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2964:34:5"
									},
									"scope": 813,
									"src": "2779:220:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 763,
										"nodeType": "StructuredDocumentation",
										"src": "3005:631:5",
										"text": "@notice Burn liquidity from the sender and account tokens owed for the liquidity to the position\n @dev Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0\n @dev Fees must be collected separately via a call to #collect\n @param tickLower The lower tick of the position for which to burn liquidity\n @param tickUpper The upper tick of the position for which to burn liquidity\n @param amount How much liquidity to burn\n @return amount0 The amount of token0 sent to the recipient\n @return amount1 The amount of token1 sent to the recipient"
									},
									"functionSelector": "a34123a7",
									"id": 776,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 770,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 765,
												"mutability": "mutable",
												"name": "tickLower",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "3664:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 764,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "3664:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 767,
												"mutability": "mutable",
												"name": "tickUpper",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "3689:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 766,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "3689:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 769,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "3714:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 768,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "3714:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3654:80:5"
									},
									"returnParameters": {
										"id": 775,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 772,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "3753:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 771,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3753:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 774,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "3770:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 773,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3770:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3752:34:5"
									},
									"scope": 813,
									"src": "3641:146:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 777,
										"nodeType": "StructuredDocumentation",
										"src": "3793:1015:5",
										"text": "@notice Swap token0 for token1, or token1 for token0\n @dev The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback\n @param recipient The address to receive the output of the swap\n @param zeroForOne The direction of the swap, true for token0 to token1, false for token1 to token0\n @param amountSpecified The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)\n @param sqrtPriceLimitX96 The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this\n value after the swap. If one for zero, the price cannot be greater than this value after the swap\n @param data Any data to be passed through to the callback\n @return amount0 The delta of the balance of token0 of the pool, exact when negative, minimum when positive\n @return amount1 The delta of the balance of token1 of the pool, exact when negative, minimum when positive"
									},
									"functionSelector": "128acb08",
									"id": 794,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swap",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 788,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 779,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 794,
												"src": "4836:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 778,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4836:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 781,
												"mutability": "mutable",
												"name": "zeroForOne",
												"nodeType": "VariableDeclaration",
												"scope": 794,
												"src": "4863:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 780,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4863:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 783,
												"mutability": "mutable",
												"name": "amountSpecified",
												"nodeType": "VariableDeclaration",
												"scope": 794,
												"src": "4888:22:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 782,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "4888:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 785,
												"mutability": "mutable",
												"name": "sqrtPriceLimitX96",
												"nodeType": "VariableDeclaration",
												"scope": 794,
												"src": "4920:25:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 784,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "4920:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 787,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 794,
												"src": "4955:19:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 786,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4955:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4826:154:5"
									},
									"returnParameters": {
										"id": 793,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 790,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 794,
												"src": "4999:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 789,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "4999:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 792,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 794,
												"src": "5015:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 791,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "5015:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4998:32:5"
									},
									"scope": 813,
									"src": "4813:218:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 795,
										"nodeType": "StructuredDocumentation",
										"src": "5037:657:5",
										"text": "@notice Receive token0 and/or token1 and pay it back, plus a fee, in the callback\n @dev The caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallback\n @dev Can be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling\n with 0 amount{0,1} and sending the donation amount(s) from the callback\n @param recipient The address which will receive the token0 and token1 amounts\n @param amount0 The amount of token0 to send\n @param amount1 The amount of token1 to send\n @param data Any data to be passed through to the callback"
									},
									"functionSelector": "490e6cbc",
									"id": 806,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "flash",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 804,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 797,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 806,
												"src": "5723:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 796,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5723:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 799,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 806,
												"src": "5750:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 798,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5750:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 801,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 806,
												"src": "5775:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 800,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5775:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 803,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 806,
												"src": "5800:19:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 802,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5800:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5713:112:5"
									},
									"returnParameters": {
										"id": 805,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5834:0:5"
									},
									"scope": 813,
									"src": "5699:136:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 807,
										"nodeType": "StructuredDocumentation",
										"src": "5841:367:5",
										"text": "@notice Increase the maximum number of price and liquidity observations that this pool will store\n @dev This method is no-op if the pool already has an observationCardinalityNext greater than or equal to\n the input observationCardinalityNext.\n @param observationCardinalityNext The desired minimum number of observations for the pool to store"
									},
									"functionSelector": "32148f67",
									"id": 812,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "increaseObservationCardinalityNext",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 810,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 809,
												"mutability": "mutable",
												"name": "observationCardinalityNext",
												"nodeType": "VariableDeclaration",
												"scope": 812,
												"src": "6257:33:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 808,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "6257:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6256:35:5"
									},
									"returnParameters": {
										"id": 811,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6300:0:5"
									},
									"scope": 813,
									"src": "6213:88:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 814,
							"src": "173:6130:5"
						}
					],
					"src": "45:6259:5"
				},
				"id": 5
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol": {
				"ast": {
					"absolutePath": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol",
					"exportedSymbols": {
						"IUniswapV3PoolDerivedState": [
							844
						]
					},
					"id": 845,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 815,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 816,
								"nodeType": "StructuredDocumentation",
								"src": "71:222:6",
								"text": "@title Pool state that is not stored\n @notice Contains view functions to provide information about the pool that is computed rather than stored on the\n blockchain. The functions here may have variable gas costs."
							},
							"fullyImplemented": false,
							"id": 844,
							"linearizedBaseContracts": [
								844
							],
							"name": "IUniswapV3PoolDerivedState",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 817,
										"nodeType": "StructuredDocumentation",
										"src": "336:1045:6",
										"text": "@notice Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp\n @dev To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing\n the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick,\n you must call it with secondsAgos = [3600, 0].\n @dev The time weighted average tick represents the geometric time weighted average price of the pool, in\n log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.\n @param secondsAgos From how long ago each cumulative tick and liquidity value should be returned\n @return tickCumulatives Cumulative tick values as of each `secondsAgos` from the current block timestamp\n @return secondsPerLiquidityCumulativeX128s Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block\n timestamp"
									},
									"functionSelector": "883bdbfd",
									"id": 829,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "observe",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 821,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 820,
												"mutability": "mutable",
												"name": "secondsAgos",
												"nodeType": "VariableDeclaration",
												"scope": 829,
												"src": "1403:29:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint32_$dyn_calldata_ptr",
													"typeString": "uint32[]"
												},
												"typeName": {
													"baseType": {
														"id": 818,
														"name": "uint32",
														"nodeType": "ElementaryTypeName",
														"src": "1403:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"id": 819,
													"nodeType": "ArrayTypeName",
													"src": "1403:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint32_$dyn_storage_ptr",
														"typeString": "uint32[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1402:31:6"
									},
									"returnParameters": {
										"id": 828,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 824,
												"mutability": "mutable",
												"name": "tickCumulatives",
												"nodeType": "VariableDeclaration",
												"scope": 829,
												"src": "1481:30:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_int56_$dyn_memory_ptr",
													"typeString": "int56[]"
												},
												"typeName": {
													"baseType": {
														"id": 822,
														"name": "int56",
														"nodeType": "ElementaryTypeName",
														"src": "1481:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_int56",
															"typeString": "int56"
														}
													},
													"id": 823,
													"nodeType": "ArrayTypeName",
													"src": "1481:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_int56_$dyn_storage_ptr",
														"typeString": "int56[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 827,
												"mutability": "mutable",
												"name": "secondsPerLiquidityCumulativeX128s",
												"nodeType": "VariableDeclaration",
												"scope": 829,
												"src": "1513:51:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint160_$dyn_memory_ptr",
													"typeString": "uint160[]"
												},
												"typeName": {
													"baseType": {
														"id": 825,
														"name": "uint160",
														"nodeType": "ElementaryTypeName",
														"src": "1513:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"id": 826,
													"nodeType": "ArrayTypeName",
													"src": "1513:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint160_$dyn_storage_ptr",
														"typeString": "uint160[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1480:85:6"
									},
									"scope": 844,
									"src": "1386:180:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 830,
										"nodeType": "StructuredDocumentation",
										"src": "1572:771:6",
										"text": "@notice Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range\n @dev Snapshots must only be compared to other snapshots, taken over a period for which a position existed.\n I.e., snapshots cannot be compared if a position is not held for the entire period between when the first\n snapshot is taken and the second snapshot is taken.\n @param tickLower The lower tick of the range\n @param tickUpper The upper tick of the range\n @return tickCumulativeInside The snapshot of the tick accumulator for the range\n @return secondsPerLiquidityInsideX128 The snapshot of seconds per liquidity for the range\n @return secondsInside The snapshot of seconds per liquidity for the range"
									},
									"functionSelector": "a38807f2",
									"id": 843,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "snapshotCumulativesInside",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 835,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 832,
												"mutability": "mutable",
												"name": "tickLower",
												"nodeType": "VariableDeclaration",
												"scope": 843,
												"src": "2383:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 831,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "2383:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 834,
												"mutability": "mutable",
												"name": "tickUpper",
												"nodeType": "VariableDeclaration",
												"scope": 843,
												"src": "2400:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 833,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "2400:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2382:34:6"
									},
									"returnParameters": {
										"id": 842,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 837,
												"mutability": "mutable",
												"name": "tickCumulativeInside",
												"nodeType": "VariableDeclaration",
												"scope": 843,
												"src": "2477:26:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int56",
													"typeString": "int56"
												},
												"typeName": {
													"id": 836,
													"name": "int56",
													"nodeType": "ElementaryTypeName",
													"src": "2477:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_int56",
														"typeString": "int56"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 839,
												"mutability": "mutable",
												"name": "secondsPerLiquidityInsideX128",
												"nodeType": "VariableDeclaration",
												"scope": 843,
												"src": "2517:37:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 838,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "2517:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 841,
												"mutability": "mutable",
												"name": "secondsInside",
												"nodeType": "VariableDeclaration",
												"scope": 843,
												"src": "2568:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 840,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "2568:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2463:135:6"
									},
									"scope": 844,
									"src": "2348:251:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 845,
							"src": "293:2308:6"
						}
					],
					"src": "45:2557:6"
				},
				"id": 6
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol": {
				"ast": {
					"absolutePath": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol",
					"exportedSymbols": {
						"IUniswapV3PoolEvents": [
							963
						]
					},
					"id": 964,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 846,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 847,
								"nodeType": "StructuredDocumentation",
								"src": "71:88:7",
								"text": "@title Events emitted by a pool\n @notice Contains all events emitted by the pool"
							},
							"fullyImplemented": true,
							"id": 963,
							"linearizedBaseContracts": [
								963
							],
							"name": "IUniswapV3PoolEvents",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 848,
										"nodeType": "StructuredDocumentation",
										"src": "196:344:7",
										"text": "@notice Emitted exactly once by a pool when #initialize is first called on the pool\n @dev Mint/Burn/Swap cannot be emitted by the pool before Initialize\n @param sqrtPriceX96 The initial sqrt price of the pool, as a Q64.96\n @param tick The initial tick of the pool, i.e. log base 1.0001 of the starting price of the pool"
									},
									"id": 854,
									"name": "Initialize",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 853,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 850,
												"indexed": false,
												"mutability": "mutable",
												"name": "sqrtPriceX96",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "562:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 849,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "562:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 852,
												"indexed": false,
												"mutability": "mutable",
												"name": "tick",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "584:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 851,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "584:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "561:34:7"
									},
									"src": "545:51:7"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 855,
										"nodeType": "StructuredDocumentation",
										"src": "602:551:7",
										"text": "@notice Emitted when liquidity is minted for a given position\n @param sender The address that minted the liquidity\n @param owner The owner of the position and recipient of any minted liquidity\n @param tickLower The lower tick of the position\n @param tickUpper The upper tick of the position\n @param amount The amount of liquidity minted to the position range\n @param amount0 How much token0 was required for the minted liquidity\n @param amount1 How much token1 was required for the minted liquidity"
									},
									"id": 871,
									"name": "Mint",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 870,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 857,
												"indexed": false,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 871,
												"src": "1178:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 856,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1178:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 859,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 871,
												"src": "1202:21:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 858,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1202:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 861,
												"indexed": true,
												"mutability": "mutable",
												"name": "tickLower",
												"nodeType": "VariableDeclaration",
												"scope": 871,
												"src": "1233:23:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 860,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1233:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 863,
												"indexed": true,
												"mutability": "mutable",
												"name": "tickUpper",
												"nodeType": "VariableDeclaration",
												"scope": 871,
												"src": "1266:23:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 862,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1266:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 865,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 871,
												"src": "1299:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 864,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1299:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 867,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 871,
												"src": "1323:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 866,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1323:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 869,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 871,
												"src": "1348:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 868,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1348:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1168:201:7"
									},
									"src": "1158:212:7"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 872,
										"nodeType": "StructuredDocumentation",
										"src": "1376:493:7",
										"text": "@notice Emitted when fees are collected by the owner of a position\n @dev Collect events may be emitted with zero amount0 and amount1 when the caller chooses not to collect fees\n @param owner The owner of the position for which fees are collected\n @param tickLower The lower tick of the position\n @param tickUpper The upper tick of the position\n @param amount0 The amount of token0 fees collected\n @param amount1 The amount of token1 fees collected"
									},
									"id": 886,
									"name": "Collect",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 885,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 874,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 886,
												"src": "1897:21:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 873,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1897:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 876,
												"indexed": false,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 886,
												"src": "1928:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 875,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1928:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 878,
												"indexed": true,
												"mutability": "mutable",
												"name": "tickLower",
												"nodeType": "VariableDeclaration",
												"scope": 886,
												"src": "1955:23:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 877,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1955:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 880,
												"indexed": true,
												"mutability": "mutable",
												"name": "tickUpper",
												"nodeType": "VariableDeclaration",
												"scope": 886,
												"src": "1988:23:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 879,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1988:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 882,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 886,
												"src": "2021:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 881,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2021:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 884,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 886,
												"src": "2046:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 883,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2046:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1887:180:7"
									},
									"src": "1874:194:7"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 887,
										"nodeType": "StructuredDocumentation",
										"src": "2074:523:7",
										"text": "@notice Emitted when a position's liquidity is removed\n @dev Does not withdraw any fees earned by the liquidity position, which must be withdrawn via #collect\n @param owner The owner of the position for which liquidity is removed\n @param tickLower The lower tick of the position\n @param tickUpper The upper tick of the position\n @param amount The amount of liquidity to remove\n @param amount0 The amount of token0 withdrawn\n @param amount1 The amount of token1 withdrawn"
									},
									"id": 901,
									"name": "Burn",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 900,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 889,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 901,
												"src": "2622:21:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 888,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2622:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 891,
												"indexed": true,
												"mutability": "mutable",
												"name": "tickLower",
												"nodeType": "VariableDeclaration",
												"scope": 901,
												"src": "2653:23:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 890,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "2653:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 893,
												"indexed": true,
												"mutability": "mutable",
												"name": "tickUpper",
												"nodeType": "VariableDeclaration",
												"scope": 901,
												"src": "2686:23:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 892,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "2686:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 895,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 901,
												"src": "2719:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 894,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2719:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 897,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 901,
												"src": "2743:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 896,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2743:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 899,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 901,
												"src": "2768:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 898,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2768:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2612:177:7"
									},
									"src": "2602:188:7"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 902,
										"nodeType": "StructuredDocumentation",
										"src": "2796:600:7",
										"text": "@notice Emitted by the pool for any swaps between token0 and token1\n @param sender The address that initiated the swap call, and that received the callback\n @param recipient The address that received the output of the swap\n @param amount0 The delta of the token0 balance of the pool\n @param amount1 The delta of the token1 balance of the pool\n @param sqrtPriceX96 The sqrt(price) of the pool after the swap, as a Q64.96\n @param liquidity The liquidity of the pool after the swap\n @param tick The log base 1.0001 of price of the pool after the swap"
									},
									"id": 918,
									"name": "Swap",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 917,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 904,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 918,
												"src": "3421:22:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 903,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3421:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 906,
												"indexed": true,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 918,
												"src": "3453:25:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 905,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3453:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 908,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 918,
												"src": "3488:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 907,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "3488:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 910,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 918,
												"src": "3512:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 909,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "3512:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 912,
												"indexed": false,
												"mutability": "mutable",
												"name": "sqrtPriceX96",
												"nodeType": "VariableDeclaration",
												"scope": 918,
												"src": "3536:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 911,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "3536:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 914,
												"indexed": false,
												"mutability": "mutable",
												"name": "liquidity",
												"nodeType": "VariableDeclaration",
												"scope": 918,
												"src": "3566:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 913,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "3566:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 916,
												"indexed": false,
												"mutability": "mutable",
												"name": "tick",
												"nodeType": "VariableDeclaration",
												"scope": 918,
												"src": "3593:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 915,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "3593:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3411:198:7"
									},
									"src": "3401:209:7"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 919,
										"nodeType": "StructuredDocumentation",
										"src": "3616:562:7",
										"text": "@notice Emitted by the pool for any flashes of token0/token1\n @param sender The address that initiated the swap call, and that received the callback\n @param recipient The address that received the tokens from flash\n @param amount0 The amount of token0 that was flashed\n @param amount1 The amount of token1 that was flashed\n @param paid0 The amount of token0 paid for the flash, which can exceed the amount0 plus the fee\n @param paid1 The amount of token1 paid for the flash, which can exceed the amount1 plus the fee"
									},
									"id": 933,
									"name": "Flash",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 932,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 921,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 933,
												"src": "4204:22:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 920,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4204:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 923,
												"indexed": true,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 933,
												"src": "4236:25:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 922,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4236:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 925,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 933,
												"src": "4271:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 924,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4271:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 927,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 933,
												"src": "4296:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 926,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4296:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 929,
												"indexed": false,
												"mutability": "mutable",
												"name": "paid0",
												"nodeType": "VariableDeclaration",
												"scope": 933,
												"src": "4321:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 928,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4321:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 931,
												"indexed": false,
												"mutability": "mutable",
												"name": "paid1",
												"nodeType": "VariableDeclaration",
												"scope": 933,
												"src": "4344:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 930,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4344:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4194:169:7"
									},
									"src": "4183:181:7"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 934,
										"nodeType": "StructuredDocumentation",
										"src": "4370:451:7",
										"text": "@notice Emitted by the pool for increases to the number of observations that can be stored\n @dev observationCardinalityNext is not the observation cardinality until an observation is written at the index\n just before a mint/swap/burn.\n @param observationCardinalityNextOld The previous value of the next observation cardinality\n @param observationCardinalityNextNew The updated value of the next observation cardinality"
									},
									"id": 940,
									"name": "IncreaseObservationCardinalityNext",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 939,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 936,
												"indexed": false,
												"mutability": "mutable",
												"name": "observationCardinalityNextOld",
												"nodeType": "VariableDeclaration",
												"scope": 940,
												"src": "4876:36:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 935,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "4876:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 938,
												"indexed": false,
												"mutability": "mutable",
												"name": "observationCardinalityNextNew",
												"nodeType": "VariableDeclaration",
												"scope": 940,
												"src": "4922:36:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 937,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "4922:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4866:98:7"
									},
									"src": "4826:139:7"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 941,
										"nodeType": "StructuredDocumentation",
										"src": "4971:370:7",
										"text": "@notice Emitted when the protocol fee is changed by the pool\n @param feeProtocol0Old The previous value of the token0 protocol fee\n @param feeProtocol1Old The previous value of the token1 protocol fee\n @param feeProtocol0New The updated value of the token0 protocol fee\n @param feeProtocol1New The updated value of the token1 protocol fee"
									},
									"id": 951,
									"name": "SetFeeProtocol",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 950,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 943,
												"indexed": false,
												"mutability": "mutable",
												"name": "feeProtocol0Old",
												"nodeType": "VariableDeclaration",
												"scope": 951,
												"src": "5367:21:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 942,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "5367:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 945,
												"indexed": false,
												"mutability": "mutable",
												"name": "feeProtocol1Old",
												"nodeType": "VariableDeclaration",
												"scope": 951,
												"src": "5390:21:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 944,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "5390:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 947,
												"indexed": false,
												"mutability": "mutable",
												"name": "feeProtocol0New",
												"nodeType": "VariableDeclaration",
												"scope": 951,
												"src": "5413:21:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 946,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "5413:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 949,
												"indexed": false,
												"mutability": "mutable",
												"name": "feeProtocol1New",
												"nodeType": "VariableDeclaration",
												"scope": 951,
												"src": "5436:21:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 948,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "5436:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5366:92:7"
									},
									"src": "5346:113:7"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 952,
										"nodeType": "StructuredDocumentation",
										"src": "5465:384:7",
										"text": "@notice Emitted when the collected protocol fees are withdrawn by the factory owner\n @param sender The address that collects the protocol fees\n @param recipient The address that receives the collected protocol fees\n @param amount0 The amount of token0 protocol fees that is withdrawn\n @param amount0 The amount of token1 protocol fees that is withdrawn"
									},
									"id": 962,
									"name": "CollectProtocol",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 961,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 954,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 962,
												"src": "5876:22:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 953,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5876:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 956,
												"indexed": true,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 962,
												"src": "5900:25:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 955,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5900:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 958,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 962,
												"src": "5927:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 957,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "5927:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 960,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 962,
												"src": "5944:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 959,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "5944:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5875:85:7"
									},
									"src": "5854:107:7"
								}
							],
							"scope": 964,
							"src": "159:5804:7"
						}
					],
					"src": "45:5919:7"
				},
				"id": 7
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol": {
				"ast": {
					"absolutePath": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol",
					"exportedSymbols": {
						"IUniswapV3PoolImmutables": [
							1003
						]
					},
					"id": 1004,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 965,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 966,
								"nodeType": "StructuredDocumentation",
								"src": "71:153:8",
								"text": "@title Pool state that never changes\n @notice These parameters are fixed for a pool forever, i.e., the methods will always return the same values"
							},
							"fullyImplemented": false,
							"id": 1003,
							"linearizedBaseContracts": [
								1003
							],
							"name": "IUniswapV3PoolImmutables",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 967,
										"nodeType": "StructuredDocumentation",
										"src": "265:138:8",
										"text": "@notice The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface\n @return The contract address"
									},
									"functionSelector": "c45a0155",
									"id": 972,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "factory",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 968,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "424:2:8"
									},
									"returnParameters": {
										"id": 971,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 970,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 972,
												"src": "450:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 969,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "450:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "449:9:8"
									},
									"scope": 1003,
									"src": "408:51:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 973,
										"nodeType": "StructuredDocumentation",
										"src": "465:113:8",
										"text": "@notice The first of the two tokens of the pool, sorted by address\n @return The token contract address"
									},
									"functionSelector": "0dfe1681",
									"id": 978,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "token0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 974,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "598:2:8"
									},
									"returnParameters": {
										"id": 977,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 976,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 978,
												"src": "624:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 975,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "624:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "623:9:8"
									},
									"scope": 1003,
									"src": "583:50:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 979,
										"nodeType": "StructuredDocumentation",
										"src": "639:114:8",
										"text": "@notice The second of the two tokens of the pool, sorted by address\n @return The token contract address"
									},
									"functionSelector": "d21220a7",
									"id": 984,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "token1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 980,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "773:2:8"
									},
									"returnParameters": {
										"id": 983,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 982,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 984,
												"src": "799:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 981,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "799:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "798:9:8"
									},
									"scope": 1003,
									"src": "758:50:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 985,
										"nodeType": "StructuredDocumentation",
										"src": "814:84:8",
										"text": "@notice The pool's fee in hundredths of a bip, i.e. 1e-6\n @return The fee"
									},
									"functionSelector": "ddca3f43",
									"id": 990,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "fee",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 986,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "915:2:8"
									},
									"returnParameters": {
										"id": 989,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 988,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 990,
												"src": "941:6:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 987,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "941:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "940:8:8"
									},
									"scope": 1003,
									"src": "903:46:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 991,
										"nodeType": "StructuredDocumentation",
										"src": "955:358:8",
										"text": "@notice The pool tick spacing\n @dev Ticks can only be used at multiples of this value, minimum of 1 and always positive\n e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ...\n This value is an int24 to avoid casting even though it is always positive.\n @return The tick spacing"
									},
									"functionSelector": "d0c93a7c",
									"id": 996,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tickSpacing",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 992,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1338:2:8"
									},
									"returnParameters": {
										"id": 995,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 994,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 996,
												"src": "1364:5:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 993,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1364:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1363:7:8"
									},
									"scope": 1003,
									"src": "1318:53:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 997,
										"nodeType": "StructuredDocumentation",
										"src": "1377:363:8",
										"text": "@notice The maximum amount of position liquidity that can use any tick in the range\n @dev This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and\n also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool\n @return The max amount of liquidity per tick"
									},
									"functionSelector": "70cf754a",
									"id": 1002,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "maxLiquidityPerTick",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 998,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1773:2:8"
									},
									"returnParameters": {
										"id": 1001,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1000,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1002,
												"src": "1799:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 999,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1799:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1798:9:8"
									},
									"scope": 1003,
									"src": "1745:63:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1004,
							"src": "224:1586:8"
						}
					],
					"src": "45:1766:8"
				},
				"id": 8
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol": {
				"ast": {
					"absolutePath": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol",
					"exportedSymbols": {
						"IUniswapV3PoolOwnerActions": [
							1029
						]
					},
					"id": 1030,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1005,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1006,
								"nodeType": "StructuredDocumentation",
								"src": "71:116:9",
								"text": "@title Permissioned pool actions\n @notice Contains pool methods that may only be called by the factory owner"
							},
							"fullyImplemented": false,
							"id": 1029,
							"linearizedBaseContracts": [
								1029
							],
							"name": "IUniswapV3PoolOwnerActions",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1007,
										"nodeType": "StructuredDocumentation",
										"src": "230:205:9",
										"text": "@notice Set the denominator of the protocol's % share of the fees\n @param feeProtocol0 new protocol fee for token0 of the pool\n @param feeProtocol1 new protocol fee for token1 of the pool"
									},
									"functionSelector": "8206a4d1",
									"id": 1014,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setFeeProtocol",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1012,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1009,
												"mutability": "mutable",
												"name": "feeProtocol0",
												"nodeType": "VariableDeclaration",
												"scope": 1014,
												"src": "464:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1008,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "464:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1011,
												"mutability": "mutable",
												"name": "feeProtocol1",
												"nodeType": "VariableDeclaration",
												"scope": 1014,
												"src": "484:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1010,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "484:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "463:40:9"
									},
									"returnParameters": {
										"id": 1013,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "512:0:9"
									},
									"scope": 1029,
									"src": "440:73:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1015,
										"nodeType": "StructuredDocumentation",
										"src": "519:483:9",
										"text": "@notice Collect the protocol fee accrued to the pool\n @param recipient The address to which collected protocol fees should be sent\n @param amount0Requested The maximum amount of token0 to send, can be 0 to collect fees in only token1\n @param amount1Requested The maximum amount of token1 to send, can be 0 to collect fees in only token0\n @return amount0 The protocol fee collected in token0\n @return amount1 The protocol fee collected in token1"
									},
									"functionSelector": "85b66729",
									"id": 1028,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "collectProtocol",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1022,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1017,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 1028,
												"src": "1041:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1016,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1041:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1019,
												"mutability": "mutable",
												"name": "amount0Requested",
												"nodeType": "VariableDeclaration",
												"scope": 1028,
												"src": "1068:24:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1018,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1068:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1021,
												"mutability": "mutable",
												"name": "amount1Requested",
												"nodeType": "VariableDeclaration",
												"scope": 1028,
												"src": "1102:24:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1020,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1102:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1031:101:9"
									},
									"returnParameters": {
										"id": 1027,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1024,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 1028,
												"src": "1151:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1023,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1151:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1026,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 1028,
												"src": "1168:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1025,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1168:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1150:34:9"
									},
									"scope": 1029,
									"src": "1007:178:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1030,
							"src": "187:1000:9"
						}
					],
					"src": "45:1143:9"
				},
				"id": 9
			},
			"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol": {
				"ast": {
					"absolutePath": "@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol",
					"exportedSymbols": {
						"IUniswapV3PoolState": [
							1137
						]
					},
					"id": 1138,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1031,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:24:10"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1032,
								"nodeType": "StructuredDocumentation",
								"src": "71:169:10",
								"text": "@title Pool state that can change\n @notice These methods compose the pool's state, and can change with any frequency including multiple times\n per transaction"
							},
							"fullyImplemented": false,
							"id": 1137,
							"linearizedBaseContracts": [
								1137
							],
							"name": "IUniswapV3PoolState",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1033,
										"nodeType": "StructuredDocumentation",
										"src": "276:1140:10",
										"text": "@notice The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas\n when accessed externally.\n @return sqrtPriceX96 The current price of the pool as a sqrt(token1/token0) Q64.96 value\n tick The current tick of the pool, i.e. according to the last tick transition that was run.\n This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick\n boundary.\n observationIndex The index of the last oracle observation that was written,\n observationCardinality The current maximum number of observations stored in the pool,\n observationCardinalityNext The next maximum number of observations, to be updated when the observation.\n feeProtocol The protocol fee for both tokens of the pool.\n Encoded as two 4 bit values, where the protocol fee of token1 is shifted 4 bits and the protocol fee of token0\n is the lower 4 bits. Used as the denominator of a fraction of the swap fee, e.g. 4 means 1/4th of the swap fee.\n unlocked Whether the pool is currently locked to reentrancy"
									},
									"functionSelector": "3850c7bd",
									"id": 1050,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "slot0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1034,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1435:2:10"
									},
									"returnParameters": {
										"id": 1049,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1036,
												"mutability": "mutable",
												"name": "sqrtPriceX96",
												"nodeType": "VariableDeclaration",
												"scope": 1050,
												"src": "1498:20:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 1035,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "1498:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1038,
												"mutability": "mutable",
												"name": "tick",
												"nodeType": "VariableDeclaration",
												"scope": 1050,
												"src": "1532:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1037,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1532:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1040,
												"mutability": "mutable",
												"name": "observationIndex",
												"nodeType": "VariableDeclaration",
												"scope": 1050,
												"src": "1556:23:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1039,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "1556:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1042,
												"mutability": "mutable",
												"name": "observationCardinality",
												"nodeType": "VariableDeclaration",
												"scope": 1050,
												"src": "1593:29:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1041,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "1593:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1044,
												"mutability": "mutable",
												"name": "observationCardinalityNext",
												"nodeType": "VariableDeclaration",
												"scope": 1050,
												"src": "1636:33:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1043,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "1636:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1046,
												"mutability": "mutable",
												"name": "feeProtocol",
												"nodeType": "VariableDeclaration",
												"scope": 1050,
												"src": "1683:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1045,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1683:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1048,
												"mutability": "mutable",
												"name": "unlocked",
												"nodeType": "VariableDeclaration",
												"scope": 1050,
												"src": "1714:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1047,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1714:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1484:253:10"
									},
									"scope": 1137,
									"src": "1421:317:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1051,
										"nodeType": "StructuredDocumentation",
										"src": "1744:168:10",
										"text": "@notice The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool\n @dev This value can overflow the uint256"
									},
									"functionSelector": "f3058399",
									"id": 1056,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "feeGrowthGlobal0X128",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1052,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1946:2:10"
									},
									"returnParameters": {
										"id": 1055,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1054,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1056,
												"src": "1972:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1053,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1972:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1971:9:10"
									},
									"scope": 1137,
									"src": "1917:64:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1057,
										"nodeType": "StructuredDocumentation",
										"src": "1987:168:10",
										"text": "@notice The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool\n @dev This value can overflow the uint256"
									},
									"functionSelector": "46141319",
									"id": 1062,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "feeGrowthGlobal1X128",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1058,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2189:2:10"
									},
									"returnParameters": {
										"id": 1061,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1060,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1062,
												"src": "2215:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1059,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2215:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2214:9:10"
									},
									"scope": 1137,
									"src": "2160:64:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1063,
										"nodeType": "StructuredDocumentation",
										"src": "2230:147:10",
										"text": "@notice The amounts of token0 and token1 that are owed to the protocol\n @dev Protocol fees will never exceed uint128 max in either token"
									},
									"functionSelector": "1ad8b03b",
									"id": 1070,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "protocolFees",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1064,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2403:2:10"
									},
									"returnParameters": {
										"id": 1069,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1066,
												"mutability": "mutable",
												"name": "token0",
												"nodeType": "VariableDeclaration",
												"scope": 1070,
												"src": "2429:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1065,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2429:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1068,
												"mutability": "mutable",
												"name": "token1",
												"nodeType": "VariableDeclaration",
												"scope": 1070,
												"src": "2445:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1067,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2445:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2428:32:10"
									},
									"scope": 1137,
									"src": "2382:79:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1071,
										"nodeType": "StructuredDocumentation",
										"src": "2467:150:10",
										"text": "@notice The currently in range liquidity available to the pool\n @dev This value has no relationship to the total liquidity across all ticks"
									},
									"functionSelector": "1a686502",
									"id": 1076,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "liquidity",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1072,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2640:2:10"
									},
									"returnParameters": {
										"id": 1075,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1074,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1076,
												"src": "2666:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1073,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2666:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2665:9:10"
									},
									"scope": 1137,
									"src": "2622:53:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1077,
										"nodeType": "StructuredDocumentation",
										"src": "2681:1244:10",
										"text": "@notice Look up information about a specific tick in the pool\n @param tick The tick to look up\n @return liquidityGross the total amount of position liquidity that uses the pool either as tick lower or\n tick upper,\n liquidityNet how much liquidity changes when the pool price crosses the tick,\n feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0,\n feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1,\n tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick\n secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick,\n secondsOutside the seconds spent on the other side of the tick from the current tick,\n initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false.\n Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0.\n In addition, these values are only relative and must be used only in comparison to previous snapshots for\n a specific position."
									},
									"functionSelector": "f30dba93",
									"id": 1098,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ticks",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1080,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1079,
												"mutability": "mutable",
												"name": "tick",
												"nodeType": "VariableDeclaration",
												"scope": 1098,
												"src": "3945:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1078,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "3945:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3944:12:10"
									},
									"returnParameters": {
										"id": 1097,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1082,
												"mutability": "mutable",
												"name": "liquidityGross",
												"nodeType": "VariableDeclaration",
												"scope": 1098,
												"src": "4017:22:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1081,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "4017:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1084,
												"mutability": "mutable",
												"name": "liquidityNet",
												"nodeType": "VariableDeclaration",
												"scope": 1098,
												"src": "4053:19:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int128",
													"typeString": "int128"
												},
												"typeName": {
													"id": 1083,
													"name": "int128",
													"nodeType": "ElementaryTypeName",
													"src": "4053:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1086,
												"mutability": "mutable",
												"name": "feeGrowthOutside0X128",
												"nodeType": "VariableDeclaration",
												"scope": 1098,
												"src": "4086:29:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1085,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4086:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1088,
												"mutability": "mutable",
												"name": "feeGrowthOutside1X128",
												"nodeType": "VariableDeclaration",
												"scope": 1098,
												"src": "4129:29:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1087,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4129:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1090,
												"mutability": "mutable",
												"name": "tickCumulativeOutside",
												"nodeType": "VariableDeclaration",
												"scope": 1098,
												"src": "4172:27:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int56",
													"typeString": "int56"
												},
												"typeName": {
													"id": 1089,
													"name": "int56",
													"nodeType": "ElementaryTypeName",
													"src": "4172:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int56",
														"typeString": "int56"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1092,
												"mutability": "mutable",
												"name": "secondsPerLiquidityOutsideX128",
												"nodeType": "VariableDeclaration",
												"scope": 1098,
												"src": "4213:38:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 1091,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "4213:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1094,
												"mutability": "mutable",
												"name": "secondsOutside",
												"nodeType": "VariableDeclaration",
												"scope": 1098,
												"src": "4265:21:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 1093,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "4265:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1096,
												"mutability": "mutable",
												"name": "initialized",
												"nodeType": "VariableDeclaration",
												"scope": 1098,
												"src": "4300:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1095,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4300:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4003:323:10"
									},
									"scope": 1137,
									"src": "3930:397:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1099,
										"nodeType": "StructuredDocumentation",
										"src": "4333:99:10",
										"text": "@notice Returns 256 packed tick initialized boolean values. See TickBitmap for more information"
									},
									"functionSelector": "5339c296",
									"id": 1106,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tickBitmap",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1101,
												"mutability": "mutable",
												"name": "wordPosition",
												"nodeType": "VariableDeclaration",
												"scope": 1106,
												"src": "4457:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int16",
													"typeString": "int16"
												},
												"typeName": {
													"id": 1100,
													"name": "int16",
													"nodeType": "ElementaryTypeName",
													"src": "4457:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int16",
														"typeString": "int16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4456:20:10"
									},
									"returnParameters": {
										"id": 1105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1104,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1106,
												"src": "4500:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1103,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4500:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4499:9:10"
									},
									"scope": 1137,
									"src": "4437:72:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1107,
										"nodeType": "StructuredDocumentation",
										"src": "4515:700:10",
										"text": "@notice Returns the information about a position by the position's key\n @param key The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper\n @return _liquidity The amount of liquidity in the position,\n Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke,\n Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke,\n Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke,\n Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke"
									},
									"functionSelector": "514ea4bf",
									"id": 1122,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "positions",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1109,
												"mutability": "mutable",
												"name": "key",
												"nodeType": "VariableDeclaration",
												"scope": 1122,
												"src": "5239:11:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1108,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5239:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5238:13:10"
									},
									"returnParameters": {
										"id": 1121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1112,
												"mutability": "mutable",
												"name": "_liquidity",
												"nodeType": "VariableDeclaration",
												"scope": 1122,
												"src": "5312:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1111,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "5312:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1114,
												"mutability": "mutable",
												"name": "feeGrowthInside0LastX128",
												"nodeType": "VariableDeclaration",
												"scope": 1122,
												"src": "5344:32:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1113,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5344:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1116,
												"mutability": "mutable",
												"name": "feeGrowthInside1LastX128",
												"nodeType": "VariableDeclaration",
												"scope": 1122,
												"src": "5390:32:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1115,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5390:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1118,
												"mutability": "mutable",
												"name": "tokensOwed0",
												"nodeType": "VariableDeclaration",
												"scope": 1122,
												"src": "5436:19:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1117,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "5436:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1120,
												"mutability": "mutable",
												"name": "tokensOwed1",
												"nodeType": "VariableDeclaration",
												"scope": 1122,
												"src": "5469:19:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1119,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "5469:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5298:200:10"
									},
									"scope": 1137,
									"src": "5220:279:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1123,
										"nodeType": "StructuredDocumentation",
										"src": "5505:749:10",
										"text": "@notice Returns data about a specific observation index\n @param index The element of the observations array to fetch\n @dev You most likely want to use #observe() instead of this method to get an observation as of some amount of time\n ago, rather than at a specific index in the array.\n @return blockTimestamp The timestamp of the observation,\n Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp,\n Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp,\n Returns initialized whether the observation has been initialized and the values are safe to use"
									},
									"functionSelector": "252c09d7",
									"id": 1136,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "observations",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1126,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1125,
												"mutability": "mutable",
												"name": "index",
												"nodeType": "VariableDeclaration",
												"scope": 1136,
												"src": "6281:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1124,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6281:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6280:15:10"
									},
									"returnParameters": {
										"id": 1135,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1128,
												"mutability": "mutable",
												"name": "blockTimestamp",
												"nodeType": "VariableDeclaration",
												"scope": 1136,
												"src": "6356:21:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 1127,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "6356:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1130,
												"mutability": "mutable",
												"name": "tickCumulative",
												"nodeType": "VariableDeclaration",
												"scope": 1136,
												"src": "6391:20:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int56",
													"typeString": "int56"
												},
												"typeName": {
													"id": 1129,
													"name": "int56",
													"nodeType": "ElementaryTypeName",
													"src": "6391:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int56",
														"typeString": "int56"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1132,
												"mutability": "mutable",
												"name": "secondsPerLiquidityCumulativeX128",
												"nodeType": "VariableDeclaration",
												"scope": 1136,
												"src": "6425:41:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 1131,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "6425:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1134,
												"mutability": "mutable",
												"name": "initialized",
												"nodeType": "VariableDeclaration",
												"scope": 1136,
												"src": "6480:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1133,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6480:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6342:164:10"
									},
									"scope": 1137,
									"src": "6259:248:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1138,
							"src": "240:6269:10"
						}
					],
					"src": "45:6465:10"
				},
				"id": 10
			},
			"@uniswap/v3-core/contracts/libraries/FullMath.sol": {
				"ast": {
					"absolutePath": "@uniswap/v3-core/contracts/libraries/FullMath.sol",
					"exportedSymbols": {
						"FullMath": [
							1310
						]
					},
					"id": 1311,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1139,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:31:11"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1140,
								"nodeType": "StructuredDocumentation",
								"src": "65:297:11",
								"text": "@title Contains 512-bit math functions\n @notice Facilitates multiplication and division that can have overflow of an intermediate value without any loss of precision\n @dev Handles \"phantom overflow\" i.e., allows multiplication and division where an intermediate value overflows 256 bits"
							},
							"fullyImplemented": true,
							"id": 1310,
							"linearizedBaseContracts": [
								1310
							],
							"name": "FullMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1265,
										"nodeType": "Block",
										"src": "877:3648:11",
										"statements": [
											{
												"assignments": [
													1153
												],
												"declarations": [
													{
														"constant": false,
														"id": 1153,
														"mutability": "mutable",
														"name": "prod0",
														"nodeType": "VariableDeclaration",
														"scope": 1265,
														"src": "1190:13:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1152,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1190:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1154,
												"nodeType": "VariableDeclarationStatement",
												"src": "1190:13:11"
											},
											{
												"assignments": [
													1156
												],
												"declarations": [
													{
														"constant": false,
														"id": 1156,
														"mutability": "mutable",
														"name": "prod1",
														"nodeType": "VariableDeclaration",
														"scope": 1265,
														"src": "1258:13:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1155,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1258:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1157,
												"nodeType": "VariableDeclarationStatement",
												"src": "1258:13:11"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1334:141:11",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1348:30:11",
															"value": {
																"arguments": [
																	{
																		"name": "a",
																		"nodeType": "YulIdentifier",
																		"src": "1365:1:11"
																	},
																	{
																		"name": "b",
																		"nodeType": "YulIdentifier",
																		"src": "1368:1:11"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1375:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "1371:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1371:6:11"
																	}
																],
																"functionName": {
																	"name": "mulmod",
																	"nodeType": "YulIdentifier",
																	"src": "1358:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1358:20:11"
															},
															"variables": [
																{
																	"name": "mm",
																	"nodeType": "YulTypedName",
																	"src": "1352:2:11",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1391:18:11",
															"value": {
																"arguments": [
																	{
																		"name": "a",
																		"nodeType": "YulIdentifier",
																		"src": "1404:1:11"
																	},
																	{
																		"name": "b",
																		"nodeType": "YulIdentifier",
																		"src": "1407:1:11"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "1400:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1400:9:11"
															},
															"variableNames": [
																{
																	"name": "prod0",
																	"nodeType": "YulIdentifier",
																	"src": "1391:5:11"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1422:43:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "mm",
																				"nodeType": "YulIdentifier",
																				"src": "1439:2:11"
																			},
																			{
																				"name": "prod0",
																				"nodeType": "YulIdentifier",
																				"src": "1443:5:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1435:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1435:14:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mm",
																				"nodeType": "YulIdentifier",
																				"src": "1454:2:11"
																			},
																			{
																				"name": "prod0",
																				"nodeType": "YulIdentifier",
																				"src": "1458:5:11"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1451:2:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1451:13:11"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "1431:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1431:34:11"
															},
															"variableNames": [
																{
																	"name": "prod1",
																	"nodeType": "YulIdentifier",
																	"src": "1422:5:11"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 1143,
														"isOffset": false,
														"isSlot": false,
														"src": "1365:1:11",
														"valueSize": 1
													},
													{
														"declaration": 1143,
														"isOffset": false,
														"isSlot": false,
														"src": "1404:1:11",
														"valueSize": 1
													},
													{
														"declaration": 1145,
														"isOffset": false,
														"isSlot": false,
														"src": "1368:1:11",
														"valueSize": 1
													},
													{
														"declaration": 1145,
														"isOffset": false,
														"isSlot": false,
														"src": "1407:1:11",
														"valueSize": 1
													},
													{
														"declaration": 1153,
														"isOffset": false,
														"isSlot": false,
														"src": "1391:5:11",
														"valueSize": 1
													},
													{
														"declaration": 1153,
														"isOffset": false,
														"isSlot": false,
														"src": "1443:5:11",
														"valueSize": 1
													},
													{
														"declaration": 1153,
														"isOffset": false,
														"isSlot": false,
														"src": "1458:5:11",
														"valueSize": 1
													},
													{
														"declaration": 1156,
														"isOffset": false,
														"isSlot": false,
														"src": "1422:5:11",
														"valueSize": 1
													}
												],
												"id": 1158,
												"nodeType": "InlineAssembly",
												"src": "1325:150:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1161,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1159,
														"name": "prod1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1156,
														"src": "1547:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1160,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1556:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1547:10:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1172,
												"nodeType": "IfStatement",
												"src": "1543:179:11",
												"trueBody": {
													"id": 1171,
													"nodeType": "Block",
													"src": "1559:163:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1165,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1163,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1147,
																			"src": "1581:11:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1164,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1595:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1581:15:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 1162,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "1573:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
																		"typeString": "function (bool) pure"
																	}
																},
																"id": 1166,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1573:24:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1167,
															"nodeType": "ExpressionStatement",
															"src": "1573:24:11"
														},
														{
															"AST": {
																"nodeType": "YulBlock",
																"src": "1620:65:11",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1638:33:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "prod0",
																					"nodeType": "YulIdentifier",
																					"src": "1652:5:11"
																				},
																				{
																					"name": "denominator",
																					"nodeType": "YulIdentifier",
																					"src": "1659:11:11"
																				}
																			],
																			"functionName": {
																				"name": "div",
																				"nodeType": "YulIdentifier",
																				"src": "1648:3:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1648:23:11"
																		},
																		"variableNames": [
																			{
																				"name": "result",
																				"nodeType": "YulIdentifier",
																				"src": "1638:6:11"
																			}
																		]
																	}
																]
															},
															"evmVersion": "istanbul",
															"externalReferences": [
																{
																	"declaration": 1147,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "1659:11:11",
																	"valueSize": 1
																},
																{
																	"declaration": 1153,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "1652:5:11",
																	"valueSize": 1
																},
																{
																	"declaration": 1150,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "1638:6:11",
																	"valueSize": 1
																}
															],
															"id": 1168,
															"nodeType": "InlineAssembly",
															"src": "1611:74:11"
														},
														{
															"expression": {
																"id": 1169,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1150,
																"src": "1705:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1151,
															"id": 1170,
															"nodeType": "Return",
															"src": "1698:13:11"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1176,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1174,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1147,
																"src": "1835:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 1175,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1156,
																"src": "1849:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1835:19:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1173,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1827:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1177,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1827:28:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1178,
												"nodeType": "ExpressionStatement",
												"src": "1827:28:11"
											},
											{
												"assignments": [
													1180
												],
												"declarations": [
													{
														"constant": false,
														"id": 1180,
														"mutability": "mutable",
														"name": "remainder",
														"nodeType": "VariableDeclaration",
														"scope": 1265,
														"src": "2132:17:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1179,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2132:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1181,
												"nodeType": "VariableDeclarationStatement",
												"src": "2132:17:11"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "2168:62:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2182:38:11",
															"value": {
																"arguments": [
																	{
																		"name": "a",
																		"nodeType": "YulIdentifier",
																		"src": "2202:1:11"
																	},
																	{
																		"name": "b",
																		"nodeType": "YulIdentifier",
																		"src": "2205:1:11"
																	},
																	{
																		"name": "denominator",
																		"nodeType": "YulIdentifier",
																		"src": "2208:11:11"
																	}
																],
																"functionName": {
																	"name": "mulmod",
																	"nodeType": "YulIdentifier",
																	"src": "2195:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2195:25:11"
															},
															"variableNames": [
																{
																	"name": "remainder",
																	"nodeType": "YulIdentifier",
																	"src": "2182:9:11"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 1143,
														"isOffset": false,
														"isSlot": false,
														"src": "2202:1:11",
														"valueSize": 1
													},
													{
														"declaration": 1145,
														"isOffset": false,
														"isSlot": false,
														"src": "2205:1:11",
														"valueSize": 1
													},
													{
														"declaration": 1147,
														"isOffset": false,
														"isSlot": false,
														"src": "2208:11:11",
														"valueSize": 1
													},
													{
														"declaration": 1180,
														"isOffset": false,
														"isSlot": false,
														"src": "2182:9:11",
														"valueSize": 1
													}
												],
												"id": 1182,
												"nodeType": "InlineAssembly",
												"src": "2159:71:11"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "2303:108:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2317:41:11",
															"value": {
																"arguments": [
																	{
																		"name": "prod1",
																		"nodeType": "YulIdentifier",
																		"src": "2330:5:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "remainder",
																				"nodeType": "YulIdentifier",
																				"src": "2340:9:11"
																			},
																			{
																				"name": "prod0",
																				"nodeType": "YulIdentifier",
																				"src": "2351:5:11"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "2337:2:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2337:20:11"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "2326:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2326:32:11"
															},
															"variableNames": [
																{
																	"name": "prod1",
																	"nodeType": "YulIdentifier",
																	"src": "2317:5:11"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2371:30:11",
															"value": {
																"arguments": [
																	{
																		"name": "prod0",
																		"nodeType": "YulIdentifier",
																		"src": "2384:5:11"
																	},
																	{
																		"name": "remainder",
																		"nodeType": "YulIdentifier",
																		"src": "2391:9:11"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "2380:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2380:21:11"
															},
															"variableNames": [
																{
																	"name": "prod0",
																	"nodeType": "YulIdentifier",
																	"src": "2371:5:11"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 1153,
														"isOffset": false,
														"isSlot": false,
														"src": "2351:5:11",
														"valueSize": 1
													},
													{
														"declaration": 1153,
														"isOffset": false,
														"isSlot": false,
														"src": "2371:5:11",
														"valueSize": 1
													},
													{
														"declaration": 1153,
														"isOffset": false,
														"isSlot": false,
														"src": "2384:5:11",
														"valueSize": 1
													},
													{
														"declaration": 1156,
														"isOffset": false,
														"isSlot": false,
														"src": "2317:5:11",
														"valueSize": 1
													},
													{
														"declaration": 1156,
														"isOffset": false,
														"isSlot": false,
														"src": "2330:5:11",
														"valueSize": 1
													},
													{
														"declaration": 1180,
														"isOffset": false,
														"isSlot": false,
														"src": "2340:9:11",
														"valueSize": 1
													},
													{
														"declaration": 1180,
														"isOffset": false,
														"isSlot": false,
														"src": "2391:9:11",
														"valueSize": 1
													}
												],
												"id": 1183,
												"nodeType": "InlineAssembly",
												"src": "2294:117:11"
											},
											{
												"assignments": [
													1185
												],
												"declarations": [
													{
														"constant": false,
														"id": 1185,
														"mutability": "mutable",
														"name": "twos",
														"nodeType": "VariableDeclaration",
														"scope": 1265,
														"src": "2560:12:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1184,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2560:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1190,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1189,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1187,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "-",
														"prefix": true,
														"src": "2575:12:11",
														"subExpression": {
															"id": 1186,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1147,
															"src": "2576:11:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&",
													"rightExpression": {
														"id": 1188,
														"name": "denominator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1147,
														"src": "2590:11:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2575:26:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2560:41:11"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "2666:61:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2680:37:11",
															"value": {
																"arguments": [
																	{
																		"name": "denominator",
																		"nodeType": "YulIdentifier",
																		"src": "2699:11:11"
																	},
																	{
																		"name": "twos",
																		"nodeType": "YulIdentifier",
																		"src": "2712:4:11"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "2695:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2695:22:11"
															},
															"variableNames": [
																{
																	"name": "denominator",
																	"nodeType": "YulIdentifier",
																	"src": "2680:11:11"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 1147,
														"isOffset": false,
														"isSlot": false,
														"src": "2680:11:11",
														"valueSize": 1
													},
													{
														"declaration": 1147,
														"isOffset": false,
														"isSlot": false,
														"src": "2699:11:11",
														"valueSize": 1
													},
													{
														"declaration": 1185,
														"isOffset": false,
														"isSlot": false,
														"src": "2712:4:11",
														"valueSize": 1
													}
												],
												"id": 1191,
												"nodeType": "InlineAssembly",
												"src": "2657:70:11"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "2800:49:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2814:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "prod0",
																		"nodeType": "YulIdentifier",
																		"src": "2827:5:11"
																	},
																	{
																		"name": "twos",
																		"nodeType": "YulIdentifier",
																		"src": "2834:4:11"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "2823:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2823:16:11"
															},
															"variableNames": [
																{
																	"name": "prod0",
																	"nodeType": "YulIdentifier",
																	"src": "2814:5:11"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 1153,
														"isOffset": false,
														"isSlot": false,
														"src": "2814:5:11",
														"valueSize": 1
													},
													{
														"declaration": 1153,
														"isOffset": false,
														"isSlot": false,
														"src": "2827:5:11",
														"valueSize": 1
													},
													{
														"declaration": 1185,
														"isOffset": false,
														"isSlot": false,
														"src": "2834:4:11",
														"valueSize": 1
													}
												],
												"id": 1192,
												"nodeType": "InlineAssembly",
												"src": "2791:58:11"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "3037:63:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3051:39:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3071:1:11",
																						"type": "",
																						"value": "0"
																					},
																					{
																						"name": "twos",
																						"nodeType": "YulIdentifier",
																						"src": "3074:4:11"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "3067:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3067:12:11"
																			},
																			{
																				"name": "twos",
																				"nodeType": "YulIdentifier",
																				"src": "3081:4:11"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "3063:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3063:23:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3088:1:11",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3059:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3059:31:11"
															},
															"variableNames": [
																{
																	"name": "twos",
																	"nodeType": "YulIdentifier",
																	"src": "3051:4:11"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 1185,
														"isOffset": false,
														"isSlot": false,
														"src": "3051:4:11",
														"valueSize": 1
													},
													{
														"declaration": 1185,
														"isOffset": false,
														"isSlot": false,
														"src": "3074:4:11",
														"valueSize": 1
													},
													{
														"declaration": 1185,
														"isOffset": false,
														"isSlot": false,
														"src": "3081:4:11",
														"valueSize": 1
													}
												],
												"id": 1193,
												"nodeType": "InlineAssembly",
												"src": "3028:72:11"
											},
											{
												"expression": {
													"id": 1198,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1194,
														"name": "prod0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1153,
														"src": "3109:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "|=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1197,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1195,
															"name": "prod1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1156,
															"src": "3118:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"id": 1196,
															"name": "twos",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1185,
															"src": "3126:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3118:12:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3109:21:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1199,
												"nodeType": "ExpressionStatement",
												"src": "3109:21:11"
											},
											{
												"assignments": [
													1201
												],
												"declarations": [
													{
														"constant": false,
														"id": 1201,
														"mutability": "mutable",
														"name": "inv",
														"nodeType": "VariableDeclaration",
														"scope": 1265,
														"src": "3464:11:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1200,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3464:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1208,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1207,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1204,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "33",
																	"id": 1202,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3479:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_3_by_1",
																		"typeString": "int_const 3"
																	},
																	"value": "3"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1203,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1147,
																	"src": "3483:11:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3479:15:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1205,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "3478:17:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "^",
													"rightExpression": {
														"hexValue": "32",
														"id": 1206,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3498:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "2"
													},
													"src": "3478:21:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3464:35:11"
											},
											{
												"expression": {
													"id": 1215,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1209,
														"name": "inv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1201,
														"src": "3714:3:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "*=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1214,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "32",
															"id": 1210,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3721:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1213,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1211,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1147,
																"src": "3725:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1212,
																"name": "inv",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1201,
																"src": "3739:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3725:17:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3721:21:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3714:28:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1216,
												"nodeType": "ExpressionStatement",
												"src": "3714:28:11"
											},
											{
												"expression": {
													"id": 1223,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1217,
														"name": "inv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1201,
														"src": "3772:3:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "*=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1222,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "32",
															"id": 1218,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3779:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1221,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1219,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1147,
																"src": "3783:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1220,
																"name": "inv",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1201,
																"src": "3797:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3783:17:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3779:21:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3772:28:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1224,
												"nodeType": "ExpressionStatement",
												"src": "3772:28:11"
											},
											{
												"expression": {
													"id": 1231,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1225,
														"name": "inv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1201,
														"src": "3831:3:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "*=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1230,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "32",
															"id": 1226,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3838:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1229,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1227,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1147,
																"src": "3842:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1228,
																"name": "inv",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1201,
																"src": "3856:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3842:17:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3838:21:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3831:28:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1232,
												"nodeType": "ExpressionStatement",
												"src": "3831:28:11"
											},
											{
												"expression": {
													"id": 1239,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1233,
														"name": "inv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1201,
														"src": "3890:3:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "*=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1238,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "32",
															"id": 1234,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3897:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1237,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1235,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1147,
																"src": "3901:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1236,
																"name": "inv",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1201,
																"src": "3915:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3901:17:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3897:21:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3890:28:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1240,
												"nodeType": "ExpressionStatement",
												"src": "3890:28:11"
											},
											{
												"expression": {
													"id": 1247,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1241,
														"name": "inv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1201,
														"src": "3949:3:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "*=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1246,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "32",
															"id": 1242,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3956:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1245,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1243,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1147,
																"src": "3960:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1244,
																"name": "inv",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1201,
																"src": "3974:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3960:17:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3956:21:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3949:28:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1248,
												"nodeType": "ExpressionStatement",
												"src": "3949:28:11"
											},
											{
												"expression": {
													"id": 1255,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1249,
														"name": "inv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1201,
														"src": "4009:3:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "*=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1254,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"hexValue": "32",
															"id": 1250,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4016:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1253,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1251,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1147,
																"src": "4020:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1252,
																"name": "inv",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1201,
																"src": "4034:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4020:17:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "4016:21:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4009:28:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1256,
												"nodeType": "ExpressionStatement",
												"src": "4009:28:11"
											},
											{
												"expression": {
													"id": 1261,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1257,
														"name": "result",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1150,
														"src": "4475:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1260,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1258,
															"name": "prod0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1153,
															"src": "4484:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"id": 1259,
															"name": "inv",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1201,
															"src": "4492:3:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "4484:11:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4475:20:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1262,
												"nodeType": "ExpressionStatement",
												"src": "4475:20:11"
											},
											{
												"expression": {
													"id": 1263,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1150,
													"src": "4512:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1151,
												"id": 1264,
												"nodeType": "Return",
												"src": "4505:13:11"
											}
										]
									},
									"documentation": {
										"id": 1141,
										"nodeType": "StructuredDocumentation",
										"src": "385:359:11",
										"text": "@notice Calculates floor(a×b÷denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n @param a The multiplicand\n @param b The multiplier\n @param denominator The divisor\n @return result The 256-bit result\n @dev Credit to Remco Bloemen under MIT license https://xn--2-umb.com/21/muldiv"
									},
									"id": 1266,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1148,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1143,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 1266,
												"src": "774:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1142,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "774:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1145,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 1266,
												"src": "793:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1144,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "793:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1147,
												"mutability": "mutable",
												"name": "denominator",
												"nodeType": "VariableDeclaration",
												"scope": 1266,
												"src": "812:19:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1146,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "812:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "764:73:11"
									},
									"returnParameters": {
										"id": 1151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1150,
												"mutability": "mutable",
												"name": "result",
												"nodeType": "VariableDeclaration",
												"scope": 1266,
												"src": "861:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1149,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "861:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "860:16:11"
									},
									"scope": 1310,
									"src": "749:3776:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1308,
										"nodeType": "Block",
										"src": "4945:177:11",
										"statements": [
											{
												"expression": {
													"id": 1284,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1278,
														"name": "result",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1276,
														"src": "4955:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1280,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1269,
																"src": "4971:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 1281,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1271,
																"src": "4974:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 1282,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1273,
																"src": "4977:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1279,
															"name": "mulDiv",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1266,
															"src": "4964:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1283,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4964:25:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4955:34:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1285,
												"nodeType": "ExpressionStatement",
												"src": "4955:34:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1292,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 1287,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1269,
																"src": "5010:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 1288,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1271,
																"src": "5013:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 1289,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1273,
																"src": "5016:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1286,
															"name": "mulmod",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967280,
															"src": "5003:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1290,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5003:25:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1291,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5031:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5003:29:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1307,
												"nodeType": "IfStatement",
												"src": "4999:117:11",
												"trueBody": {
													"id": 1306,
													"nodeType": "Block",
													"src": "5034:82:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1300,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1294,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1276,
																			"src": "5056:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<",
																		"rightExpression": {
																			"expression": {
																				"arguments": [
																					{
																						"id": 1297,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "5070:7:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_uint256_$",
																							"typeString": "type(uint256)"
																						},
																						"typeName": {
																							"id": 1296,
																							"name": "uint256",
																							"nodeType": "ElementaryTypeName",
																							"src": "5070:7:11",
																							"typeDescriptions": {}
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_type$_t_uint256_$",
																							"typeString": "type(uint256)"
																						}
																					],
																					"id": 1295,
																					"name": "type",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967269,
																					"src": "5065:4:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																						"typeString": "function () pure"
																					}
																				},
																				"id": 1298,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "5065:13:11",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_meta_type_t_uint256",
																					"typeString": "type(uint256)"
																				}
																			},
																			"id": 1299,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberName": "max",
																			"nodeType": "MemberAccess",
																			"src": "5065:17:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "5056:26:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 1293,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "5048:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
																		"typeString": "function (bool) pure"
																	}
																},
																"id": 1301,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5048:35:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1302,
															"nodeType": "ExpressionStatement",
															"src": "5048:35:11"
														},
														{
															"expression": {
																"id": 1304,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "5097:8:11",
																"subExpression": {
																	"id": 1303,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1276,
																	"src": "5097:6:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1305,
															"nodeType": "ExpressionStatement",
															"src": "5097:8:11"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1267,
										"nodeType": "StructuredDocumentation",
										"src": "4531:271:11",
										"text": "@notice Calculates ceil(a×b÷denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n @param a The multiplicand\n @param b The multiplier\n @param denominator The divisor\n @return result The 256-bit result"
									},
									"id": 1309,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDivRoundingUp",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1274,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1269,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 1309,
												"src": "4842:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1268,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4842:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1271,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 1309,
												"src": "4861:9:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1270,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4861:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1273,
												"mutability": "mutable",
												"name": "denominator",
												"nodeType": "VariableDeclaration",
												"scope": 1309,
												"src": "4880:19:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1272,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4880:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4832:73:11"
									},
									"returnParameters": {
										"id": 1277,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1276,
												"mutability": "mutable",
												"name": "result",
												"nodeType": "VariableDeclaration",
												"scope": 1309,
												"src": "4929:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1275,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4929:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4928:16:11"
									},
									"scope": 1310,
									"src": "4807:315:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1311,
							"src": "362:4762:11"
						}
					],
					"src": "32:5093:11"
				},
				"id": 11
			},
			"@uniswap/v3-core/contracts/libraries/TickMath.sol": {
				"ast": {
					"absolutePath": "@uniswap/v3-core/contracts/libraries/TickMath.sol",
					"exportedSymbols": {
						"TickMath": [
							1845
						]
					},
					"id": 1846,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1312,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:31:12"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1313,
								"nodeType": "StructuredDocumentation",
								"src": "78:235:12",
								"text": "@title Math library for computing sqrt prices from ticks and vice versa\n @notice Computes sqrt price for ticks of size 1.0001, i.e. sqrt(1.0001^tick) as fixed point Q64.96 numbers. Supports\n prices between 2**-128 and 2**128"
							},
							"fullyImplemented": true,
							"id": 1845,
							"linearizedBaseContracts": [
								1845
							],
							"name": "TickMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"documentation": {
										"id": 1314,
										"nodeType": "StructuredDocumentation",
										"src": "336:108:12",
										"text": "@dev The minimum tick that may be passed to #getSqrtRatioAtTick computed from log base 1.0001 of 2**-128"
									},
									"id": 1318,
									"mutability": "constant",
									"name": "MIN_TICK",
									"nodeType": "VariableDeclaration",
									"scope": 1845,
									"src": "449:42:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int24",
										"typeString": "int24"
									},
									"typeName": {
										"id": 1315,
										"name": "int24",
										"nodeType": "ElementaryTypeName",
										"src": "449:5:12",
										"typeDescriptions": {
											"typeIdentifier": "t_int24",
											"typeString": "int24"
										}
									},
									"value": {
										"id": 1317,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"nodeType": "UnaryOperation",
										"operator": "-",
										"prefix": true,
										"src": "484:7:12",
										"subExpression": {
											"hexValue": "383837323732",
											"id": 1316,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "485:6:12",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_887272_by_1",
												"typeString": "int_const 887272"
											},
											"value": "887272"
										},
										"typeDescriptions": {
											"typeIdentifier": "t_rational_minus_887272_by_1",
											"typeString": "int_const -887272"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 1319,
										"nodeType": "StructuredDocumentation",
										"src": "497:107:12",
										"text": "@dev The maximum tick that may be passed to #getSqrtRatioAtTick computed from log base 1.0001 of 2**128"
									},
									"id": 1323,
									"mutability": "constant",
									"name": "MAX_TICK",
									"nodeType": "VariableDeclaration",
									"scope": 1845,
									"src": "609:44:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int24",
										"typeString": "int24"
									},
									"typeName": {
										"id": 1320,
										"name": "int24",
										"nodeType": "ElementaryTypeName",
										"src": "609:5:12",
										"typeDescriptions": {
											"typeIdentifier": "t_int24",
											"typeString": "int24"
										}
									},
									"value": {
										"id": 1322,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"nodeType": "UnaryOperation",
										"operator": "-",
										"prefix": true,
										"src": "644:9:12",
										"subExpression": {
											"id": 1321,
											"name": "MIN_TICK",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 1318,
											"src": "645:8:12",
											"typeDescriptions": {
												"typeIdentifier": "t_int24",
												"typeString": "int24"
											}
										},
										"typeDescriptions": {
											"typeIdentifier": "t_int24",
											"typeString": "int24"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 1324,
										"nodeType": "StructuredDocumentation",
										"src": "660:116:12",
										"text": "@dev The minimum value that can be returned from #getSqrtRatioAtTick. Equivalent to getSqrtRatioAtTick(MIN_TICK)"
									},
									"id": 1327,
									"mutability": "constant",
									"name": "MIN_SQRT_RATIO",
									"nodeType": "VariableDeclaration",
									"scope": 1845,
									"src": "781:53:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint160",
										"typeString": "uint160"
									},
									"typeName": {
										"id": 1325,
										"name": "uint160",
										"nodeType": "ElementaryTypeName",
										"src": "781:7:12",
										"typeDescriptions": {
											"typeIdentifier": "t_uint160",
											"typeString": "uint160"
										}
									},
									"value": {
										"hexValue": "34323935313238373339",
										"id": 1326,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "824:10:12",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_4295128739_by_1",
											"typeString": "int_const 4295128739"
										},
										"value": "4295128739"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 1328,
										"nodeType": "StructuredDocumentation",
										"src": "840:116:12",
										"text": "@dev The maximum value that can be returned from #getSqrtRatioAtTick. Equivalent to getSqrtRatioAtTick(MAX_TICK)"
									},
									"id": 1331,
									"mutability": "constant",
									"name": "MAX_SQRT_RATIO",
									"nodeType": "VariableDeclaration",
									"scope": 1845,
									"src": "961:92:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint160",
										"typeString": "uint160"
									},
									"typeName": {
										"id": 1329,
										"name": "uint160",
										"nodeType": "ElementaryTypeName",
										"src": "961:7:12",
										"typeDescriptions": {
											"typeIdentifier": "t_uint160",
											"typeString": "uint160"
										}
									},
									"value": {
										"hexValue": "31343631343436373033343835323130313033323837323733303532323033393838383232333738373233393730333432",
										"id": 1330,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1004:49:12",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1461446703485210103287273052203988822378723970342_by_1",
											"typeString": "int_const 1461...(41 digits omitted)...0342"
										},
										"value": "1461446703485210103287273052203988822378723970342"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1704,
										"nodeType": "Block",
										"src": "1447:2495:12",
										"statements": [
											{
												"assignments": [
													1340
												],
												"declarations": [
													{
														"constant": false,
														"id": 1340,
														"mutability": "mutable",
														"name": "absTick",
														"nodeType": "VariableDeclaration",
														"scope": 1704,
														"src": "1457:15:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1339,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1457:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1360,
												"initialValue": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														},
														"id": 1343,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1341,
															"name": "tick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1334,
															"src": "1475:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"hexValue": "30",
															"id": 1342,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1482:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "1475:8:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1356,
																		"name": "tick",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1334,
																		"src": "1526:4:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		}
																	],
																	"id": 1355,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1519:6:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_int256_$",
																		"typeString": "type(int256)"
																	},
																	"typeName": {
																		"id": 1354,
																		"name": "int256",
																		"nodeType": "ElementaryTypeName",
																		"src": "1519:6:12",
																		"typeDescriptions": {}
																	}
																},
																"id": 1357,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1519:12:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 1353,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1511:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 1352,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1511:7:12",
																"typeDescriptions": {}
															}
														},
														"id": 1358,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1511:21:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1359,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "1475:57:12",
													"trueExpression": {
														"arguments": [
															{
																"id": 1350,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "-",
																"prefix": true,
																"src": "1494:13:12",
																"subExpression": {
																	"arguments": [
																		{
																			"id": 1348,
																			"name": "tick",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1334,
																			"src": "1502:4:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int24",
																				"typeString": "int24"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_int24",
																				"typeString": "int24"
																			}
																		],
																		"id": 1347,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1495:6:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int256_$",
																			"typeString": "type(int256)"
																		},
																		"typeName": {
																			"id": 1346,
																			"name": "int256",
																			"nodeType": "ElementaryTypeName",
																			"src": "1495:6:12",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1349,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1495:12:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 1345,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1486:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 1344,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1486:7:12",
																"typeDescriptions": {}
															}
														},
														"id": 1351,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1486:22:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1457:75:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1367,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1362,
																"name": "absTick",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1340,
																"src": "1550:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 1365,
																		"name": "MAX_TICK",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1323,
																		"src": "1569:8:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		}
																	],
																	"id": 1364,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1561:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 1363,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "1561:7:12",
																		"typeDescriptions": {}
																	}
																},
																"id": 1366,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1561:17:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1550:28:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "54",
															"id": 1368,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1580:3:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_846b7b6deb1cfa110d0ea7ec6162a7123b761785528db70cceed5143183b11fc",
																"typeString": "literal_string \"T\""
															},
															"value": "T"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_846b7b6deb1cfa110d0ea7ec6162a7123b761785528db70cceed5143183b11fc",
																"typeString": "literal_string \"T\""
															}
														],
														"id": 1361,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1542:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1369,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1542:42:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1370,
												"nodeType": "ExpressionStatement",
												"src": "1542:42:12"
											},
											{
												"assignments": [
													1372
												],
												"declarations": [
													{
														"constant": false,
														"id": 1372,
														"mutability": "mutable",
														"name": "ratio",
														"nodeType": "VariableDeclaration",
														"scope": 1704,
														"src": "1595:13:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1371,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1595:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1381,
												"initialValue": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1377,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1375,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1373,
																"name": "absTick",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1340,
																"src": "1611:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"hexValue": "307831",
																"id": 1374,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1621:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "0x1"
															},
															"src": "1611:13:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "30",
															"id": 1376,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1628:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "1611:18:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "3078313030303030303030303030303030303030303030303030303030303030303030",
														"id": 1379,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1669:35:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_340282366920938463463374607431768211456_by_1",
															"typeString": "int_const 3402...(31 digits omitted)...1456"
														},
														"value": "0x100000000000000000000000000000000"
													},
													"id": 1380,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "1611:93:12",
													"trueExpression": {
														"hexValue": "30786666666362393333626436666164333761613264313632643161353934303031",
														"id": 1378,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1632:34:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_340265354078544963557816517032075149313_by_1",
															"typeString": "int_const 3402...(31 digits omitted)...9313"
														},
														"value": "0xfffcb933bd6fad37aa2d162d1a594001"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint136",
														"typeString": "uint136"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1595:109:12"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1386,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1384,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1382,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1340,
															"src": "1718:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "307832",
															"id": 1383,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1728:3:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "0x2"
														},
														"src": "1718:13:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1385,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1735:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1718:18:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1396,
												"nodeType": "IfStatement",
												"src": "1714:83:12",
												"trueBody": {
													"expression": {
														"id": 1394,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 1387,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1372,
															"src": "1738:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1393,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1390,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1388,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1372,
																			"src": "1747:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30786666663937323732333733643431333235396134363939303538306532313361",
																			"id": 1389,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1755:34:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_340248342086729790484326174814286782778_by_1",
																				"typeString": "int_const 3402...(31 digits omitted)...2778"
																			},
																			"value": "0xfff97272373d413259a46990580e213a"
																		},
																		"src": "1747:42:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1391,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1746:44:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 1392,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1794:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "1746:51:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1738:59:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1395,
													"nodeType": "ExpressionStatement",
													"src": "1738:59:12"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1401,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1399,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1397,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1340,
															"src": "1811:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "307834",
															"id": 1398,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1821:3:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_4_by_1",
																"typeString": "int_const 4"
															},
															"value": "0x4"
														},
														"src": "1811:13:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1400,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1828:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1811:18:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1411,
												"nodeType": "IfStatement",
												"src": "1807:83:12",
												"trueBody": {
													"expression": {
														"id": 1409,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 1402,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1372,
															"src": "1831:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1408,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1405,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1403,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1372,
																			"src": "1840:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30786666663265353066356636353639333265663132333537636633633766646363",
																			"id": 1404,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1848:34:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_340214320654664324051920982716015181260_by_1",
																				"typeString": "int_const 3402...(31 digits omitted)...1260"
																			},
																			"value": "0xfff2e50f5f656932ef12357cf3c7fdcc"
																		},
																		"src": "1840:42:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1406,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1839:44:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 1407,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1887:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "1839:51:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1831:59:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1410,
													"nodeType": "ExpressionStatement",
													"src": "1831:59:12"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1416,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1414,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1412,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1340,
															"src": "1904:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "307838",
															"id": 1413,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1914:3:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_8_by_1",
																"typeString": "int_const 8"
															},
															"value": "0x8"
														},
														"src": "1904:13:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1415,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1921:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1904:18:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1426,
												"nodeType": "IfStatement",
												"src": "1900:83:12",
												"trueBody": {
													"expression": {
														"id": 1424,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 1417,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1372,
															"src": "1924:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1423,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1420,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1418,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1372,
																			"src": "1933:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30786666653563616361376531306534653631633336323465616130393431636430",
																			"id": 1419,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1941:34:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_340146287995602323631171512101879684304_by_1",
																				"typeString": "int_const 3401...(31 digits omitted)...4304"
																			},
																			"value": "0xffe5caca7e10e4e61c3624eaa0941cd0"
																		},
																		"src": "1933:42:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1421,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1932:44:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 1422,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1980:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "1932:51:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1924:59:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1425,
													"nodeType": "ExpressionStatement",
													"src": "1924:59:12"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1431,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1429,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1427,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1340,
															"src": "1997:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "30783130",
															"id": 1428,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2007:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_16_by_1",
																"typeString": "int_const 16"
															},
															"value": "0x10"
														},
														"src": "1997:14:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1430,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2015:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1997:19:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1441,
												"nodeType": "IfStatement",
												"src": "1993:84:12",
												"trueBody": {
													"expression": {
														"id": 1439,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 1432,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1372,
															"src": "2018:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1438,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1435,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1433,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1372,
																			"src": "2027:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30786666636239383433643630663631353963396462353838333563393236363434",
																			"id": 1434,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2035:34:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_340010263488231146823593991679159461444_by_1",
																				"typeString": "int_const 3400...(31 digits omitted)...1444"
																			},
																			"value": "0xffcb9843d60f6159c9db58835c926644"
																		},
																		"src": "2027:42:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1436,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2026:44:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 1437,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2074:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "2026:51:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2018:59:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1440,
													"nodeType": "ExpressionStatement",
													"src": "2018:59:12"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1446,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1444,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1442,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1340,
															"src": "2091:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "30783230",
															"id": 1443,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2101:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_32_by_1",
																"typeString": "int_const 32"
															},
															"value": "0x20"
														},
														"src": "2091:14:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1445,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2109:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2091:19:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1456,
												"nodeType": "IfStatement",
												"src": "2087:84:12",
												"trueBody": {
													"expression": {
														"id": 1454,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 1447,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1372,
															"src": "2112:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1453,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1450,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1448,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1372,
																			"src": "2121:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30786666393733623431666139386330383134373265363839366466623235346330",
																			"id": 1449,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2129:34:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_339738377640345403697157401104375502016_by_1",
																				"typeString": "int_const 3397...(31 digits omitted)...2016"
																			},
																			"value": "0xff973b41fa98c081472e6896dfb254c0"
																		},
																		"src": "2121:42:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1451,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2120:44:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 1452,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2168:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "2120:51:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2112:59:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1455,
													"nodeType": "ExpressionStatement",
													"src": "2112:59:12"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1461,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1459,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1457,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1340,
															"src": "2185:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "30783430",
															"id": 1458,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2195:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_64_by_1",
																"typeString": "int_const 64"
															},
															"value": "0x40"
														},
														"src": "2185:14:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1460,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2203:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2185:19:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1471,
												"nodeType": "IfStatement",
												"src": "2181:84:12",
												"trueBody": {
													"expression": {
														"id": 1469,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 1462,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1372,
															"src": "2206:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1468,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1465,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1463,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1372,
																			"src": "2215:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30786666326561313634363663393661333834336563373862333236623532383631",
																			"id": 1464,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2223:34:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_339195258003219555707034227454543997025_by_1",
																				"typeString": "int_const 3391...(31 digits omitted)...7025"
																			},
																			"value": "0xff2ea16466c96a3843ec78b326b52861"
																		},
																		"src": "2215:42:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1466,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2214:44:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 1467,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2262:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "2214:51:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2206:59:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1470,
													"nodeType": "ExpressionStatement",
													"src": "2206:59:12"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1476,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1474,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1472,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1340,
															"src": "2279:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "30783830",
															"id": 1473,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2289:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_128_by_1",
																"typeString": "int_const 128"
															},
															"value": "0x80"
														},
														"src": "2279:14:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1475,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2297:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2279:19:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1486,
												"nodeType": "IfStatement",
												"src": "2275:84:12",
												"trueBody": {
													"expression": {
														"id": 1484,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 1477,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1372,
															"src": "2300:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1483,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1480,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1478,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1372,
																			"src": "2309:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30786665356465653034366139396132613831316334363166313936396333303533",
																			"id": 1479,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2317:34:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_338111622100601834656805679988414885971_by_1",
																				"typeString": "int_const 3381...(31 digits omitted)...5971"
																			},
																			"value": "0xfe5dee046a99a2a811c461f1969c3053"
																		},
																		"src": "2309:42:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1481,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2308:44:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 1482,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2356:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "2308:51:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2300:59:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1485,
													"nodeType": "ExpressionStatement",
													"src": "2300:59:12"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1491,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1489,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1487,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1340,
															"src": "2373:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "3078313030",
															"id": 1488,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2383:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_256_by_1",
																"typeString": "int_const 256"
															},
															"value": "0x100"
														},
														"src": "2373:15:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1490,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2392:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2373:20:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1501,
												"nodeType": "IfStatement",
												"src": "2369:85:12",
												"trueBody": {
													"expression": {
														"id": 1499,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 1492,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1372,
															"src": "2395:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1498,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1495,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1493,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1372,
																			"src": "2404:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30786663626538366337393030613838616564636666633833623437396161336134",
																			"id": 1494,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2412:34:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_335954724994790223023589805789778977700_by_1",
																				"typeString": "int_const 3359...(31 digits omitted)...7700"
																			},
																			"value": "0xfcbe86c7900a88aedcffc83b479aa3a4"
																		},
																		"src": "2404:42:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1496,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2403:44:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 1497,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2451:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "2403:51:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2395:59:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1500,
													"nodeType": "ExpressionStatement",
													"src": "2395:59:12"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1506,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1504,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1502,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1340,
															"src": "2468:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "3078323030",
															"id": 1503,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2478:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_512_by_1",
																"typeString": "int_const 512"
															},
															"value": "0x200"
														},
														"src": "2468:15:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1505,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2487:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2468:20:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1516,
												"nodeType": "IfStatement",
												"src": "2464:85:12",
												"trueBody": {
													"expression": {
														"id": 1514,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 1507,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1372,
															"src": "2490:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1513,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1510,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1508,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1372,
																			"src": "2499:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30786639383761373235336163343133313736663262303734636637383135653534",
																			"id": 1509,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2507:34:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_331682121138379247127172139078559817300_by_1",
																				"typeString": "int_const 3316...(31 digits omitted)...7300"
																			},
																			"value": "0xf987a7253ac413176f2b074cf7815e54"
																		},
																		"src": "2499:42:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1511,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2498:44:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 1512,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2546:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "2498:51:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2490:59:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1515,
													"nodeType": "ExpressionStatement",
													"src": "2490:59:12"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1521,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1519,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1517,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1340,
															"src": "2563:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "3078343030",
															"id": 1518,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2573:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1024_by_1",
																"typeString": "int_const 1024"
															},
															"value": "0x400"
														},
														"src": "2563:15:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1520,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2582:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2563:20:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1531,
												"nodeType": "IfStatement",
												"src": "2559:85:12",
												"trueBody": {
													"expression": {
														"id": 1529,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 1522,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1372,
															"src": "2585:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1528,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1525,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1523,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1372,
																			"src": "2594:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30786633333932623038323262373030303539343063376133393865346237306633",
																			"id": 1524,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2602:34:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_323299236684853023288211250268160618739_by_1",
																				"typeString": "int_const 3232...(31 digits omitted)...8739"
																			},
																			"value": "0xf3392b0822b70005940c7a398e4b70f3"
																		},
																		"src": "2594:42:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1526,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2593:44:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 1527,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2641:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "2593:51:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2585:59:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1530,
													"nodeType": "ExpressionStatement",
													"src": "2585:59:12"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1536,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1534,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1532,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1340,
															"src": "2658:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "3078383030",
															"id": 1533,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2668:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2048_by_1",
																"typeString": "int_const 2048"
															},
															"value": "0x800"
														},
														"src": "2658:15:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1535,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2677:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2658:20:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1546,
												"nodeType": "IfStatement",
												"src": "2654:85:12",
												"trueBody": {
													"expression": {
														"id": 1544,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 1537,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1372,
															"src": "2680:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1543,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1540,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1538,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1372,
																			"src": "2689:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30786537313539343735613263323962373434336232396337666136653838396439",
																			"id": 1539,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2697:34:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_307163716377032989948697243942600083929_by_1",
																				"typeString": "int_const 3071...(31 digits omitted)...3929"
																			},
																			"value": "0xe7159475a2c29b7443b29c7fa6e889d9"
																		},
																		"src": "2689:42:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1541,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2688:44:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 1542,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2736:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "2688:51:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2680:59:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1545,
													"nodeType": "ExpressionStatement",
													"src": "2680:59:12"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1551,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1549,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1547,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1340,
															"src": "2753:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "307831303030",
															"id": 1548,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2763:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_4096_by_1",
																"typeString": "int_const 4096"
															},
															"value": "0x1000"
														},
														"src": "2753:16:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1550,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2773:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2753:21:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1561,
												"nodeType": "IfStatement",
												"src": "2749:86:12",
												"trueBody": {
													"expression": {
														"id": 1559,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 1552,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1372,
															"src": "2776:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1558,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1555,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1553,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1372,
																			"src": "2785:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30786430393766336264666432303232623838343561643866373932616135383235",
																			"id": 1554,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2793:34:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_277268403626896220162999269216087595045_by_1",
																				"typeString": "int_const 2772...(31 digits omitted)...5045"
																			},
																			"value": "0xd097f3bdfd2022b8845ad8f792aa5825"
																		},
																		"src": "2785:42:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1556,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2784:44:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 1557,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2832:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "2784:51:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2776:59:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1560,
													"nodeType": "ExpressionStatement",
													"src": "2776:59:12"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1566,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1564,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1562,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1340,
															"src": "2849:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "307832303030",
															"id": 1563,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2859:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_8192_by_1",
																"typeString": "int_const 8192"
															},
															"value": "0x2000"
														},
														"src": "2849:16:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1565,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2869:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2849:21:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1576,
												"nodeType": "IfStatement",
												"src": "2845:86:12",
												"trueBody": {
													"expression": {
														"id": 1574,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 1567,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1372,
															"src": "2872:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1573,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1570,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1568,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1372,
																			"src": "2881:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30786139663734363436326438373066646638613635646331663930653036316535",
																			"id": 1569,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2889:34:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_225923453940442621947126027127485391333_by_1",
																				"typeString": "int_const 2259...(31 digits omitted)...1333"
																			},
																			"value": "0xa9f746462d870fdf8a65dc1f90e061e5"
																		},
																		"src": "2881:42:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1571,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2880:44:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 1572,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2928:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "2880:51:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2872:59:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1575,
													"nodeType": "ExpressionStatement",
													"src": "2872:59:12"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1581,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1579,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1577,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1340,
															"src": "2945:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "307834303030",
															"id": 1578,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2955:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_16384_by_1",
																"typeString": "int_const 16384"
															},
															"value": "0x4000"
														},
														"src": "2945:16:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1580,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2965:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2945:21:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1591,
												"nodeType": "IfStatement",
												"src": "2941:86:12",
												"trueBody": {
													"expression": {
														"id": 1589,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 1582,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1372,
															"src": "2968:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1588,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1585,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1583,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1372,
																			"src": "2977:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30783730643836396131353664326131623839306262336466363262616633326637",
																			"id": 1584,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2985:34:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_149997214084966997727330242082538205943_by_1",
																				"typeString": "int_const 1499...(31 digits omitted)...5943"
																			},
																			"value": "0x70d869a156d2a1b890bb3df62baf32f7"
																		},
																		"src": "2977:42:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1586,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2976:44:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 1587,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3024:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "2976:51:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2968:59:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1590,
													"nodeType": "ExpressionStatement",
													"src": "2968:59:12"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1596,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1594,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1592,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1340,
															"src": "3041:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "307838303030",
															"id": 1593,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3051:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_32768_by_1",
																"typeString": "int_const 32768"
															},
															"value": "0x8000"
														},
														"src": "3041:16:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1595,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3061:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3041:21:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1606,
												"nodeType": "IfStatement",
												"src": "3037:86:12",
												"trueBody": {
													"expression": {
														"id": 1604,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 1597,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1372,
															"src": "3064:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1603,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1600,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1598,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1372,
																			"src": "3073:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30783331626531333566393764303866643938313233313530353534326663666136",
																			"id": 1599,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3081:34:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_66119101136024775622716233608466517926_by_1",
																				"typeString": "int_const 6611...(30 digits omitted)...7926"
																			},
																			"value": "0x31be135f97d08fd981231505542fcfa6"
																		},
																		"src": "3073:42:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1601,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3072:44:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 1602,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3120:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "3072:51:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3064:59:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1605,
													"nodeType": "ExpressionStatement",
													"src": "3064:59:12"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1611,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1609,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1607,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1340,
															"src": "3137:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "30783130303030",
															"id": 1608,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3147:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_65536_by_1",
																"typeString": "int_const 65536"
															},
															"value": "0x10000"
														},
														"src": "3137:17:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1610,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3158:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3137:22:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1621,
												"nodeType": "IfStatement",
												"src": "3133:86:12",
												"trueBody": {
													"expression": {
														"id": 1619,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 1612,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1372,
															"src": "3161:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1618,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1615,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1613,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1372,
																			"src": "3170:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "307839616135303862356237613834653163363737646535346633653939626339",
																			"id": 1614,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3178:33:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_12847376061809297530290974190478138313_by_1",
																				"typeString": "int_const 1284...(30 digits omitted)...8313"
																			},
																			"value": "0x9aa508b5b7a84e1c677de54f3e99bc9"
																		},
																		"src": "3170:41:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1616,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3169:43:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 1617,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3216:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "3169:50:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3161:58:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1620,
													"nodeType": "ExpressionStatement",
													"src": "3161:58:12"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1626,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1624,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1622,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1340,
															"src": "3233:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "30783230303030",
															"id": 1623,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3243:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_131072_by_1",
																"typeString": "int_const 131072"
															},
															"value": "0x20000"
														},
														"src": "3233:17:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1625,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3254:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3233:22:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1636,
												"nodeType": "IfStatement",
												"src": "3229:85:12",
												"trueBody": {
													"expression": {
														"id": 1634,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 1627,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1372,
															"src": "3257:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1633,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1630,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1628,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1372,
																			"src": "3266:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "3078356436616638646564623831313936363939633332393232356565363034",
																			"id": 1629,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3274:32:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_485053260817066172746253684029974020_by_1",
																				"typeString": "int_const 4850...(28 digits omitted)...4020"
																			},
																			"value": "0x5d6af8dedb81196699c329225ee604"
																		},
																		"src": "3266:40:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1631,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3265:42:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 1632,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3311:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "3265:49:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3257:57:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1635,
													"nodeType": "ExpressionStatement",
													"src": "3257:57:12"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1641,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1639,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1637,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1340,
															"src": "3328:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "30783430303030",
															"id": 1638,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3338:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_262144_by_1",
																"typeString": "int_const 262144"
															},
															"value": "0x40000"
														},
														"src": "3328:17:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1640,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3349:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3328:22:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1651,
												"nodeType": "IfStatement",
												"src": "3324:83:12",
												"trueBody": {
													"expression": {
														"id": 1649,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 1642,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1372,
															"src": "3352:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1648,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1645,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1643,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1372,
																			"src": "3361:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "307832323136653538346635666131656139323630343162656466653938",
																			"id": 1644,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3369:30:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_691415978906521570653435304214168_by_1",
																				"typeString": "int_const 6914...(25 digits omitted)...4168"
																			},
																			"value": "0x2216e584f5fa1ea926041bedfe98"
																		},
																		"src": "3361:38:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1646,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3360:40:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 1647,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3404:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "3360:47:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3352:55:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1650,
													"nodeType": "ExpressionStatement",
													"src": "3352:55:12"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1656,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1654,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1652,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1340,
															"src": "3421:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "30783830303030",
															"id": 1653,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3431:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_524288_by_1",
																"typeString": "int_const 524288"
															},
															"value": "0x80000"
														},
														"src": "3421:17:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1655,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3442:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3421:22:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1666,
												"nodeType": "IfStatement",
												"src": "3417:78:12",
												"trueBody": {
													"expression": {
														"id": 1664,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 1657,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1372,
															"src": "3445:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1663,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1660,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1658,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1372,
																			"src": "3454:5:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30783438613137303339316637646334323434346538666132",
																			"id": 1659,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3462:25:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1404880482679654955896180642_by_1",
																				"typeString": "int_const 1404880482679654955896180642"
																			},
																			"value": "0x48a170391f7dc42444e8fa2"
																		},
																		"src": "3454:33:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1661,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3453:35:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 1662,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3492:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "3453:42:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3445:50:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1665,
													"nodeType": "ExpressionStatement",
													"src": "3445:50:12"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													},
													"id": 1669,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1667,
														"name": "tick",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1334,
														"src": "3510:4:12",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1668,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3517:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3510:8:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1680,
												"nodeType": "IfStatement",
												"src": "3506:47:12",
												"trueBody": {
													"expression": {
														"id": 1678,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 1670,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1372,
															"src": "3520:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1677,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1673,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3533:7:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint256_$",
																				"typeString": "type(uint256)"
																			},
																			"typeName": {
																				"id": 1672,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "3533:7:12",
																				"typeDescriptions": {}
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_uint256_$",
																				"typeString": "type(uint256)"
																			}
																		],
																		"id": 1671,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "3528:4:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 1674,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3528:13:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_uint256",
																		"typeString": "type(uint256)"
																	}
																},
																"id": 1675,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "max",
																"nodeType": "MemberAccess",
																"src": "3528:17:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 1676,
																"name": "ratio",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1372,
																"src": "3548:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3528:25:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3520:33:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1679,
													"nodeType": "ExpressionStatement",
													"src": "3520:33:12"
												}
											},
											{
												"expression": {
													"id": 1702,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1681,
														"name": "sqrtPriceX96",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1337,
														"src": "3863:12:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1700,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1686,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1684,
																				"name": "ratio",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1372,
																				"src": "3887:5:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">>",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 1685,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3896:2:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "3887:11:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1687,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "3886:13:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"components": [
																		{
																			"condition": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1695,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1693,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1688,
																						"name": "ratio",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1372,
																						"src": "3903:5:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "%",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_rational_4294967296_by_1",
																									"typeString": "int_const 4294967296"
																								},
																								"id": 1691,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"lValueRequested": false,
																								"leftExpression": {
																									"hexValue": "31",
																									"id": 1689,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "3912:1:12",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_1_by_1",
																										"typeString": "int_const 1"
																									},
																									"value": "1"
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "<<",
																								"rightExpression": {
																									"hexValue": "3332",
																									"id": 1690,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "3917:2:12",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_32_by_1",
																										"typeString": "int_const 32"
																									},
																									"value": "32"
																								},
																								"src": "3912:7:12",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_4294967296_by_1",
																									"typeString": "int_const 4294967296"
																								}
																							}
																						],
																						"id": 1692,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "3911:9:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_4294967296_by_1",
																							"typeString": "int_const 4294967296"
																						}
																					},
																					"src": "3903:17:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"hexValue": "30",
																					"id": 1694,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "3924:1:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				},
																				"src": "3903:22:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"falseExpression": {
																				"hexValue": "31",
																				"id": 1697,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3932:1:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"id": 1698,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "Conditional",
																			"src": "3903:30:12",
																			"trueExpression": {
																				"hexValue": "30",
																				"id": 1696,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3928:1:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		}
																	],
																	"id": 1699,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "3902:32:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "3886:48:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1683,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3878:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint160_$",
																"typeString": "type(uint160)"
															},
															"typeName": {
																"id": 1682,
																"name": "uint160",
																"nodeType": "ElementaryTypeName",
																"src": "3878:7:12",
																"typeDescriptions": {}
															}
														},
														"id": 1701,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3878:57:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"src": "3863:72:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"id": 1703,
												"nodeType": "ExpressionStatement",
												"src": "3863:72:12"
											}
										]
									},
									"documentation": {
										"id": 1332,
										"nodeType": "StructuredDocumentation",
										"src": "1060:297:12",
										"text": "@notice Calculates sqrt(1.0001^tick) * 2^96\n @dev Throws if |tick| > max tick\n @param tick The input tick for the above formula\n @return sqrtPriceX96 A Fixed point Q64.96 number representing the sqrt of the ratio of the two assets (token1/token0)\n at the given tick"
									},
									"id": 1705,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getSqrtRatioAtTick",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1335,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1334,
												"mutability": "mutable",
												"name": "tick",
												"nodeType": "VariableDeclaration",
												"scope": 1705,
												"src": "1390:10:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1333,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1390:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1389:12:12"
									},
									"returnParameters": {
										"id": 1338,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1337,
												"mutability": "mutable",
												"name": "sqrtPriceX96",
												"nodeType": "VariableDeclaration",
												"scope": 1705,
												"src": "1425:20:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 1336,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "1425:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1424:22:12"
									},
									"scope": 1845,
									"src": "1362:2580:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1843,
										"nodeType": "Block",
										"src": "4446:4196:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1720,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																},
																"id": 1716,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1714,
																	"name": "sqrtPriceX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1708,
																	"src": "4563:12:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"id": 1715,
																	"name": "MIN_SQRT_RATIO",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1327,
																	"src": "4579:14:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																"src": "4563:30:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																},
																"id": 1719,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1717,
																	"name": "sqrtPriceX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1708,
																	"src": "4597:12:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 1718,
																	"name": "MAX_SQRT_RATIO",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1331,
																	"src": "4612:14:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																"src": "4597:29:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "4563:63:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "52",
															"id": 1721,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4628:3:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ef22bddd350b943170a67d35191c27e310709a28c38b5762a152ff640108f5b2",
																"typeString": "literal_string \"R\""
															},
															"value": "R"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ef22bddd350b943170a67d35191c27e310709a28c38b5762a152ff640108f5b2",
																"typeString": "literal_string \"R\""
															}
														],
														"id": 1713,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4555:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1722,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4555:77:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1723,
												"nodeType": "ExpressionStatement",
												"src": "4555:77:12"
											},
											{
												"assignments": [
													1725
												],
												"declarations": [
													{
														"constant": false,
														"id": 1725,
														"mutability": "mutable",
														"name": "ratio",
														"nodeType": "VariableDeclaration",
														"scope": 1843,
														"src": "4642:13:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1724,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4642:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1732,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1731,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 1728,
																"name": "sqrtPriceX96",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1708,
																"src": "4666:12:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															],
															"id": 1727,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4658:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 1726,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "4658:7:12",
																"typeDescriptions": {}
															}
														},
														"id": 1729,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4658:21:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"hexValue": "3332",
														"id": 1730,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4683:2:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_32_by_1",
															"typeString": "int_const 32"
														},
														"value": "32"
													},
													"src": "4658:27:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4642:43:12"
											},
											{
												"assignments": [
													1734
												],
												"declarations": [
													{
														"constant": false,
														"id": 1734,
														"mutability": "mutable",
														"name": "r",
														"nodeType": "VariableDeclaration",
														"scope": 1843,
														"src": "4696:9:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1733,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4696:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1736,
												"initialValue": {
													"id": 1735,
													"name": "ratio",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1725,
													"src": "4708:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4696:17:12"
											},
											{
												"assignments": [
													1738
												],
												"declarations": [
													{
														"constant": false,
														"id": 1738,
														"mutability": "mutable",
														"name": "msb",
														"nodeType": "VariableDeclaration",
														"scope": 1843,
														"src": "4723:11:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1737,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4723:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1740,
												"initialValue": {
													"hexValue": "30",
													"id": 1739,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4737:1:12",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4723:15:12"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "4758:139:12",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4772:58:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4785:1:12",
																		"type": "",
																		"value": "7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "4791:1:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4794:34:12",
																				"type": "",
																				"value": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "4788:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4788:41:12"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "4781:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4781:49:12"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "4776:1:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4843:17:12",
															"value": {
																"arguments": [
																	{
																		"name": "msb",
																		"nodeType": "YulIdentifier",
																		"src": "4853:3:12"
																	},
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "4858:1:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "4850:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4850:10:12"
															},
															"variableNames": [
																{
																	"name": "msb",
																	"nodeType": "YulIdentifier",
																	"src": "4843:3:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4873:14:12",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "4882:1:12"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "4885:1:12"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "4878:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4878:9:12"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "4873:1:12"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 1738,
														"isOffset": false,
														"isSlot": false,
														"src": "4843:3:12",
														"valueSize": 1
													},
													{
														"declaration": 1738,
														"isOffset": false,
														"isSlot": false,
														"src": "4853:3:12",
														"valueSize": 1
													},
													{
														"declaration": 1734,
														"isOffset": false,
														"isSlot": false,
														"src": "4791:1:12",
														"valueSize": 1
													},
													{
														"declaration": 1734,
														"isOffset": false,
														"isSlot": false,
														"src": "4873:1:12",
														"valueSize": 1
													},
													{
														"declaration": 1734,
														"isOffset": false,
														"isSlot": false,
														"src": "4885:1:12",
														"valueSize": 1
													}
												],
												"id": 1741,
												"nodeType": "InlineAssembly",
												"src": "4749:148:12"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "4915:123:12",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4929:42:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4942:1:12",
																		"type": "",
																		"value": "6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "4948:1:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4951:18:12",
																				"type": "",
																				"value": "0xFFFFFFFFFFFFFFFF"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "4945:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4945:25:12"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "4938:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4938:33:12"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "4933:1:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4984:17:12",
															"value": {
																"arguments": [
																	{
																		"name": "msb",
																		"nodeType": "YulIdentifier",
																		"src": "4994:3:12"
																	},
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "4999:1:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "4991:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "4991:10:12"
															},
															"variableNames": [
																{
																	"name": "msb",
																	"nodeType": "YulIdentifier",
																	"src": "4984:3:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5014:14:12",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "5023:1:12"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "5026:1:12"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "5019:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5019:9:12"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "5014:1:12"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 1738,
														"isOffset": false,
														"isSlot": false,
														"src": "4984:3:12",
														"valueSize": 1
													},
													{
														"declaration": 1738,
														"isOffset": false,
														"isSlot": false,
														"src": "4994:3:12",
														"valueSize": 1
													},
													{
														"declaration": 1734,
														"isOffset": false,
														"isSlot": false,
														"src": "4948:1:12",
														"valueSize": 1
													},
													{
														"declaration": 1734,
														"isOffset": false,
														"isSlot": false,
														"src": "5014:1:12",
														"valueSize": 1
													},
													{
														"declaration": 1734,
														"isOffset": false,
														"isSlot": false,
														"src": "5026:1:12",
														"valueSize": 1
													}
												],
												"id": 1742,
												"nodeType": "InlineAssembly",
												"src": "4906:132:12"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "5056:115:12",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5070:34:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5083:1:12",
																		"type": "",
																		"value": "5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "5089:1:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5092:10:12",
																				"type": "",
																				"value": "0xFFFFFFFF"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "5086:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5086:17:12"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "5079:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5079:25:12"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "5074:1:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5117:17:12",
															"value": {
																"arguments": [
																	{
																		"name": "msb",
																		"nodeType": "YulIdentifier",
																		"src": "5127:3:12"
																	},
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "5132:1:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "5124:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5124:10:12"
															},
															"variableNames": [
																{
																	"name": "msb",
																	"nodeType": "YulIdentifier",
																	"src": "5117:3:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5147:14:12",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "5156:1:12"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "5159:1:12"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "5152:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5152:9:12"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "5147:1:12"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 1738,
														"isOffset": false,
														"isSlot": false,
														"src": "5117:3:12",
														"valueSize": 1
													},
													{
														"declaration": 1738,
														"isOffset": false,
														"isSlot": false,
														"src": "5127:3:12",
														"valueSize": 1
													},
													{
														"declaration": 1734,
														"isOffset": false,
														"isSlot": false,
														"src": "5089:1:12",
														"valueSize": 1
													},
													{
														"declaration": 1734,
														"isOffset": false,
														"isSlot": false,
														"src": "5147:1:12",
														"valueSize": 1
													},
													{
														"declaration": 1734,
														"isOffset": false,
														"isSlot": false,
														"src": "5159:1:12",
														"valueSize": 1
													}
												],
												"id": 1743,
												"nodeType": "InlineAssembly",
												"src": "5047:124:12"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "5189:111:12",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5203:30:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5216:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "5222:1:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5225:6:12",
																				"type": "",
																				"value": "0xFFFF"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "5219:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5219:13:12"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "5212:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5212:21:12"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "5207:1:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5246:17:12",
															"value": {
																"arguments": [
																	{
																		"name": "msb",
																		"nodeType": "YulIdentifier",
																		"src": "5256:3:12"
																	},
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "5261:1:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "5253:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5253:10:12"
															},
															"variableNames": [
																{
																	"name": "msb",
																	"nodeType": "YulIdentifier",
																	"src": "5246:3:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5276:14:12",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "5285:1:12"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "5288:1:12"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "5281:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5281:9:12"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "5276:1:12"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 1738,
														"isOffset": false,
														"isSlot": false,
														"src": "5246:3:12",
														"valueSize": 1
													},
													{
														"declaration": 1738,
														"isOffset": false,
														"isSlot": false,
														"src": "5256:3:12",
														"valueSize": 1
													},
													{
														"declaration": 1734,
														"isOffset": false,
														"isSlot": false,
														"src": "5222:1:12",
														"valueSize": 1
													},
													{
														"declaration": 1734,
														"isOffset": false,
														"isSlot": false,
														"src": "5276:1:12",
														"valueSize": 1
													},
													{
														"declaration": 1734,
														"isOffset": false,
														"isSlot": false,
														"src": "5288:1:12",
														"valueSize": 1
													}
												],
												"id": 1744,
												"nodeType": "InlineAssembly",
												"src": "5180:120:12"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "5318:109:12",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5332:28:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5345:1:12",
																		"type": "",
																		"value": "3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "5351:1:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5354:4:12",
																				"type": "",
																				"value": "0xFF"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "5348:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5348:11:12"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "5341:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5341:19:12"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "5336:1:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5373:17:12",
															"value": {
																"arguments": [
																	{
																		"name": "msb",
																		"nodeType": "YulIdentifier",
																		"src": "5383:3:12"
																	},
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "5388:1:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "5380:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5380:10:12"
															},
															"variableNames": [
																{
																	"name": "msb",
																	"nodeType": "YulIdentifier",
																	"src": "5373:3:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5403:14:12",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "5412:1:12"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "5415:1:12"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "5408:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5408:9:12"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "5403:1:12"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 1738,
														"isOffset": false,
														"isSlot": false,
														"src": "5373:3:12",
														"valueSize": 1
													},
													{
														"declaration": 1738,
														"isOffset": false,
														"isSlot": false,
														"src": "5383:3:12",
														"valueSize": 1
													},
													{
														"declaration": 1734,
														"isOffset": false,
														"isSlot": false,
														"src": "5351:1:12",
														"valueSize": 1
													},
													{
														"declaration": 1734,
														"isOffset": false,
														"isSlot": false,
														"src": "5403:1:12",
														"valueSize": 1
													},
													{
														"declaration": 1734,
														"isOffset": false,
														"isSlot": false,
														"src": "5415:1:12",
														"valueSize": 1
													}
												],
												"id": 1745,
												"nodeType": "InlineAssembly",
												"src": "5309:118:12"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "5445:108:12",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5459:27:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5472:1:12",
																		"type": "",
																		"value": "2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "5478:1:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5481:3:12",
																				"type": "",
																				"value": "0xF"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "5475:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5475:10:12"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "5468:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5468:18:12"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "5463:1:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5499:17:12",
															"value": {
																"arguments": [
																	{
																		"name": "msb",
																		"nodeType": "YulIdentifier",
																		"src": "5509:3:12"
																	},
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "5514:1:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "5506:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5506:10:12"
															},
															"variableNames": [
																{
																	"name": "msb",
																	"nodeType": "YulIdentifier",
																	"src": "5499:3:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5529:14:12",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "5538:1:12"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "5541:1:12"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "5534:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5534:9:12"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "5529:1:12"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 1738,
														"isOffset": false,
														"isSlot": false,
														"src": "5499:3:12",
														"valueSize": 1
													},
													{
														"declaration": 1738,
														"isOffset": false,
														"isSlot": false,
														"src": "5509:3:12",
														"valueSize": 1
													},
													{
														"declaration": 1734,
														"isOffset": false,
														"isSlot": false,
														"src": "5478:1:12",
														"valueSize": 1
													},
													{
														"declaration": 1734,
														"isOffset": false,
														"isSlot": false,
														"src": "5529:1:12",
														"valueSize": 1
													},
													{
														"declaration": 1734,
														"isOffset": false,
														"isSlot": false,
														"src": "5541:1:12",
														"valueSize": 1
													}
												],
												"id": 1746,
												"nodeType": "InlineAssembly",
												"src": "5436:117:12"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "5571:108:12",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5585:27:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5598:1:12",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "5604:1:12"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5607:3:12",
																				"type": "",
																				"value": "0x3"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "5601:2:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5601:10:12"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "5594:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5594:18:12"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "5589:1:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5625:17:12",
															"value": {
																"arguments": [
																	{
																		"name": "msb",
																		"nodeType": "YulIdentifier",
																		"src": "5635:3:12"
																	},
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "5640:1:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "5632:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5632:10:12"
															},
															"variableNames": [
																{
																	"name": "msb",
																	"nodeType": "YulIdentifier",
																	"src": "5625:3:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5655:14:12",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "5664:1:12"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "5667:1:12"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "5660:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5660:9:12"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "5655:1:12"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 1738,
														"isOffset": false,
														"isSlot": false,
														"src": "5625:3:12",
														"valueSize": 1
													},
													{
														"declaration": 1738,
														"isOffset": false,
														"isSlot": false,
														"src": "5635:3:12",
														"valueSize": 1
													},
													{
														"declaration": 1734,
														"isOffset": false,
														"isSlot": false,
														"src": "5604:1:12",
														"valueSize": 1
													},
													{
														"declaration": 1734,
														"isOffset": false,
														"isSlot": false,
														"src": "5655:1:12",
														"valueSize": 1
													},
													{
														"declaration": 1734,
														"isOffset": false,
														"isSlot": false,
														"src": "5667:1:12",
														"valueSize": 1
													}
												],
												"id": 1747,
												"nodeType": "InlineAssembly",
												"src": "5562:117:12"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "5697:73:12",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5711:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "5723:1:12"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5726:3:12",
																		"type": "",
																		"value": "0x1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5720:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5720:10:12"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "5715:1:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5743:17:12",
															"value": {
																"arguments": [
																	{
																		"name": "msb",
																		"nodeType": "YulIdentifier",
																		"src": "5753:3:12"
																	},
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "5758:1:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "5750:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5750:10:12"
															},
															"variableNames": [
																{
																	"name": "msb",
																	"nodeType": "YulIdentifier",
																	"src": "5743:3:12"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 1738,
														"isOffset": false,
														"isSlot": false,
														"src": "5743:3:12",
														"valueSize": 1
													},
													{
														"declaration": 1738,
														"isOffset": false,
														"isSlot": false,
														"src": "5753:3:12",
														"valueSize": 1
													},
													{
														"declaration": 1734,
														"isOffset": false,
														"isSlot": false,
														"src": "5723:1:12",
														"valueSize": 1
													}
												],
												"id": 1748,
												"nodeType": "InlineAssembly",
												"src": "5688:82:12"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1751,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1749,
														"name": "msb",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1738,
														"src": "5784:3:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"hexValue": "313238",
														"id": 1750,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5791:3:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_128_by_1",
															"typeString": "int_const 128"
														},
														"value": "128"
													},
													"src": "5784:10:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"expression": {
														"id": 1768,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 1761,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1734,
															"src": "5835:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1767,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1762,
																"name": "ratio",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1725,
																"src": "5839:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<<",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1765,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "313237",
																			"id": 1763,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5849:3:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_127_by_1",
																				"typeString": "int_const 127"
																			},
																			"value": "127"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 1764,
																			"name": "msb",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1738,
																			"src": "5855:3:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "5849:9:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1766,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "5848:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5839:20:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "5835:24:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1769,
													"nodeType": "ExpressionStatement",
													"src": "5835:24:12"
												},
												"id": 1770,
												"nodeType": "IfStatement",
												"src": "5780:79:12",
												"trueBody": {
													"expression": {
														"id": 1759,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 1752,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1734,
															"src": "5796:1:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1758,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1753,
																"name": "ratio",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1725,
																"src": "5800:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1756,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1754,
																			"name": "msb",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1738,
																			"src": "5810:3:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "313237",
																			"id": 1755,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5816:3:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_127_by_1",
																				"typeString": "int_const 127"
																			},
																			"value": "127"
																		},
																		"src": "5810:9:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1757,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "5809:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5800:20:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "5796:24:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1760,
													"nodeType": "ExpressionStatement",
													"src": "5796:24:12"
												}
											},
											{
												"assignments": [
													1772
												],
												"declarations": [
													{
														"constant": false,
														"id": 1772,
														"mutability": "mutable",
														"name": "log_2",
														"nodeType": "VariableDeclaration",
														"scope": 1843,
														"src": "5870:12:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 1771,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "5870:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1782,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 1781,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 1778,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 1775,
																			"name": "msb",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1738,
																			"src": "5893:3:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1774,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5886:6:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int256_$",
																			"typeString": "type(int256)"
																		},
																		"typeName": {
																			"id": 1773,
																			"name": "int256",
																			"nodeType": "ElementaryTypeName",
																			"src": "5886:6:12",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1776,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5886:11:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 1777,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5900:3:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "5886:17:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 1779,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "5885:19:12",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"hexValue": "3634",
														"id": 1780,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5908:2:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_64_by_1",
															"typeString": "int_const 64"
														},
														"value": "64"
													},
													"src": "5885:25:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5870:40:12"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "5930:151:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5944:24:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5953:3:12",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "5962:1:12"
																			},
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "5965:1:12"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "5958:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5958:9:12"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "5949:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5949:19:12"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "5944:1:12"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5981:20:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5994:3:12",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "5999:1:12"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "5990:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "5990:11:12"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "5985:1:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6014:30:12",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nodeType": "YulIdentifier",
																		"src": "6026:5:12"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6037:2:12",
																				"type": "",
																				"value": "63"
																			},
																			{
																				"name": "f",
																				"nodeType": "YulIdentifier",
																				"src": "6041:1:12"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "6033:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6033:10:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "6023:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6023:21:12"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nodeType": "YulIdentifier",
																	"src": "6014:5:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6057:14:12",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "6066:1:12"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "6069:1:12"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6062:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6062:9:12"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "6057:1:12"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 1772,
														"isOffset": false,
														"isSlot": false,
														"src": "6014:5:12",
														"valueSize": 1
													},
													{
														"declaration": 1772,
														"isOffset": false,
														"isSlot": false,
														"src": "6026:5:12",
														"valueSize": 1
													},
													{
														"declaration": 1734,
														"isOffset": false,
														"isSlot": false,
														"src": "5944:1:12",
														"valueSize": 1
													},
													{
														"declaration": 1734,
														"isOffset": false,
														"isSlot": false,
														"src": "5962:1:12",
														"valueSize": 1
													},
													{
														"declaration": 1734,
														"isOffset": false,
														"isSlot": false,
														"src": "5965:1:12",
														"valueSize": 1
													},
													{
														"declaration": 1734,
														"isOffset": false,
														"isSlot": false,
														"src": "5999:1:12",
														"valueSize": 1
													},
													{
														"declaration": 1734,
														"isOffset": false,
														"isSlot": false,
														"src": "6057:1:12",
														"valueSize": 1
													},
													{
														"declaration": 1734,
														"isOffset": false,
														"isSlot": false,
														"src": "6069:1:12",
														"valueSize": 1
													}
												],
												"id": 1783,
												"nodeType": "InlineAssembly",
												"src": "5921:160:12"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "6099:151:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6113:24:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6122:3:12",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "6131:1:12"
																			},
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "6134:1:12"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "6127:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6127:9:12"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6118:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6118:19:12"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "6113:1:12"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6150:20:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6163:3:12",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "6168:1:12"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6159:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6159:11:12"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "6154:1:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6183:30:12",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nodeType": "YulIdentifier",
																		"src": "6195:5:12"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6206:2:12",
																				"type": "",
																				"value": "62"
																			},
																			{
																				"name": "f",
																				"nodeType": "YulIdentifier",
																				"src": "6210:1:12"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "6202:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6202:10:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "6192:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6192:21:12"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nodeType": "YulIdentifier",
																	"src": "6183:5:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6226:14:12",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "6235:1:12"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "6238:1:12"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6231:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6231:9:12"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "6226:1:12"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 1772,
														"isOffset": false,
														"isSlot": false,
														"src": "6183:5:12",
														"valueSize": 1
													},
													{
														"declaration": 1772,
														"isOffset": false,
														"isSlot": false,
														"src": "6195:5:12",
														"valueSize": 1
													},
													{
														"declaration": 1734,
														"isOffset": false,
														"isSlot": false,
														"src": "6113:1:12",
														"valueSize": 1
													},
													{
														"declaration": 1734,
														"isOffset": false,
														"isSlot": false,
														"src": "6131:1:12",
														"valueSize": 1
													},
													{
														"declaration": 1734,
														"isOffset": false,
														"isSlot": false,
														"src": "6134:1:12",
														"valueSize": 1
													},
													{
														"declaration": 1734,
														"isOffset": false,
														"isSlot": false,
														"src": "6168:1:12",
														"valueSize": 1
													},
													{
														"declaration": 1734,
														"isOffset": false,
														"isSlot": false,
														"src": "6226:1:12",
														"valueSize": 1
													},
													{
														"declaration": 1734,
														"isOffset": false,
														"isSlot": false,
														"src": "6238:1:12",
														"valueSize": 1
													}
												],
												"id": 1784,
												"nodeType": "InlineAssembly",
												"src": "6090:160:12"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "6268:151:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6282:24:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6291:3:12",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "6300:1:12"
																			},
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "6303:1:12"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "6296:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6296:9:12"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6287:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6287:19:12"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "6282:1:12"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6319:20:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6332:3:12",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "6337:1:12"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6328:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6328:11:12"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "6323:1:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6352:30:12",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nodeType": "YulIdentifier",
																		"src": "6364:5:12"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6375:2:12",
																				"type": "",
																				"value": "61"
																			},
																			{
																				"name": "f",
																				"nodeType": "YulIdentifier",
																				"src": "6379:1:12"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "6371:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6371:10:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "6361:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6361:21:12"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nodeType": "YulIdentifier",
																	"src": "6352:5:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6395:14:12",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "6404:1:12"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "6407:1:12"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6400:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6400:9:12"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "6395:1:12"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 1772,
														"isOffset": false,
														"isSlot": false,
														"src": "6352:5:12",
														"valueSize": 1
													},
													{
														"declaration": 1772,
														"isOffset": false,
														"isSlot": false,
														"src": "6364:5:12",
														"valueSize": 1
													},
													{
														"declaration": 1734,
														"isOffset": false,
														"isSlot": false,
														"src": "6282:1:12",
														"valueSize": 1
													},
													{
														"declaration": 1734,
														"isOffset": false,
														"isSlot": false,
														"src": "6300:1:12",
														"valueSize": 1
													},
													{
														"declaration": 1734,
														"isOffset": false,
														"isSlot": false,
														"src": "6303:1:12",
														"valueSize": 1
													},
													{
														"declaration": 1734,
														"isOffset": false,
														"isSlot": false,
														"src": "6337:1:12",
														"valueSize": 1
													},
													{
														"declaration": 1734,
														"isOffset": false,
														"isSlot": false,
														"src": "6395:1:12",
														"valueSize": 1
													},
													{
														"declaration": 1734,
														"isOffset": false,
														"isSlot": false,
														"src": "6407:1:12",
														"valueSize": 1
													}
												],
												"id": 1785,
												"nodeType": "InlineAssembly",
												"src": "6259:160:12"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "6437:151:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6451:24:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6460:3:12",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "6469:1:12"
																			},
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "6472:1:12"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "6465:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6465:9:12"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6456:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6456:19:12"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "6451:1:12"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6488:20:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6501:3:12",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "6506:1:12"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6497:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6497:11:12"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "6492:1:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6521:30:12",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nodeType": "YulIdentifier",
																		"src": "6533:5:12"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6544:2:12",
																				"type": "",
																				"value": "60"
																			},
																			{
																				"name": "f",
																				"nodeType": "YulIdentifier",
																				"src": "6548:1:12"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "6540:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6540:10:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "6530:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6530:21:12"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nodeType": "YulIdentifier",
																	"src": "6521:5:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6564:14:12",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "6573:1:12"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "6576:1:12"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6569:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6569:9:12"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "6564:1:12"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 1772,
														"isOffset": false,
														"isSlot": false,
														"src": "6521:5:12",
														"valueSize": 1
													},
													{
														"declaration": 1772,
														"isOffset": false,
														"isSlot": false,
														"src": "6533:5:12",
														"valueSize": 1
													},
													{
														"declaration": 1734,
														"isOffset": false,
														"isSlot": false,
														"src": "6451:1:12",
														"valueSize": 1
													},
													{
														"declaration": 1734,
														"isOffset": false,
														"isSlot": false,
														"src": "6469:1:12",
														"valueSize": 1
													},
													{
														"declaration": 1734,
														"isOffset": false,
														"isSlot": false,
														"src": "6472:1:12",
														"valueSize": 1
													},
													{
														"declaration": 1734,
														"isOffset": false,
														"isSlot": false,
														"src": "6506:1:12",
														"valueSize": 1
													},
													{
														"declaration": 1734,
														"isOffset": false,
														"isSlot": false,
														"src": "6564:1:12",
														"valueSize": 1
													},
													{
														"declaration": 1734,
														"isOffset": false,
														"isSlot": false,
														"src": "6576:1:12",
														"valueSize": 1
													}
												],
												"id": 1786,
												"nodeType": "InlineAssembly",
												"src": "6428:160:12"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "6606:151:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6620:24:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6629:3:12",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "6638:1:12"
																			},
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "6641:1:12"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "6634:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6634:9:12"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6625:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6625:19:12"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "6620:1:12"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6657:20:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6670:3:12",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "6675:1:12"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6666:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6666:11:12"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "6661:1:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6690:30:12",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nodeType": "YulIdentifier",
																		"src": "6702:5:12"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6713:2:12",
																				"type": "",
																				"value": "59"
																			},
																			{
																				"name": "f",
																				"nodeType": "YulIdentifier",
																				"src": "6717:1:12"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "6709:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6709:10:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "6699:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6699:21:12"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nodeType": "YulIdentifier",
																	"src": "6690:5:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6733:14:12",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "6742:1:12"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "6745:1:12"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6738:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6738:9:12"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "6733:1:12"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 1772,
														"isOffset": false,
														"isSlot": false,
														"src": "6690:5:12",
														"valueSize": 1
													},
													{
														"declaration": 1772,
														"isOffset": false,
														"isSlot": false,
														"src": "6702:5:12",
														"valueSize": 1
													},
													{
														"declaration": 1734,
														"isOffset": false,
														"isSlot": false,
														"src": "6620:1:12",
														"valueSize": 1
													},
													{
														"declaration": 1734,
														"isOffset": false,
														"isSlot": false,
														"src": "6638:1:12",
														"valueSize": 1
													},
													{
														"declaration": 1734,
														"isOffset": false,
														"isSlot": false,
														"src": "6641:1:12",
														"valueSize": 1
													},
													{
														"declaration": 1734,
														"isOffset": false,
														"isSlot": false,
														"src": "6675:1:12",
														"valueSize": 1
													},
													{
														"declaration": 1734,
														"isOffset": false,
														"isSlot": false,
														"src": "6733:1:12",
														"valueSize": 1
													},
													{
														"declaration": 1734,
														"isOffset": false,
														"isSlot": false,
														"src": "6745:1:12",
														"valueSize": 1
													}
												],
												"id": 1787,
												"nodeType": "InlineAssembly",
												"src": "6597:160:12"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "6775:151:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6789:24:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6798:3:12",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "6807:1:12"
																			},
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "6810:1:12"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "6803:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6803:9:12"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6794:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6794:19:12"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "6789:1:12"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6826:20:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6839:3:12",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "6844:1:12"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6835:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6835:11:12"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "6830:1:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6859:30:12",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nodeType": "YulIdentifier",
																		"src": "6871:5:12"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6882:2:12",
																				"type": "",
																				"value": "58"
																			},
																			{
																				"name": "f",
																				"nodeType": "YulIdentifier",
																				"src": "6886:1:12"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "6878:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6878:10:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "6868:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6868:21:12"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nodeType": "YulIdentifier",
																	"src": "6859:5:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6902:14:12",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "6911:1:12"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "6914:1:12"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6907:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6907:9:12"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "6902:1:12"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 1772,
														"isOffset": false,
														"isSlot": false,
														"src": "6859:5:12",
														"valueSize": 1
													},
													{
														"declaration": 1772,
														"isOffset": false,
														"isSlot": false,
														"src": "6871:5:12",
														"valueSize": 1
													},
													{
														"declaration": 1734,
														"isOffset": false,
														"isSlot": false,
														"src": "6789:1:12",
														"valueSize": 1
													},
													{
														"declaration": 1734,
														"isOffset": false,
														"isSlot": false,
														"src": "6807:1:12",
														"valueSize": 1
													},
													{
														"declaration": 1734,
														"isOffset": false,
														"isSlot": false,
														"src": "6810:1:12",
														"valueSize": 1
													},
													{
														"declaration": 1734,
														"isOffset": false,
														"isSlot": false,
														"src": "6844:1:12",
														"valueSize": 1
													},
													{
														"declaration": 1734,
														"isOffset": false,
														"isSlot": false,
														"src": "6902:1:12",
														"valueSize": 1
													},
													{
														"declaration": 1734,
														"isOffset": false,
														"isSlot": false,
														"src": "6914:1:12",
														"valueSize": 1
													}
												],
												"id": 1788,
												"nodeType": "InlineAssembly",
												"src": "6766:160:12"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "6944:151:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6958:24:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6967:3:12",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "6976:1:12"
																			},
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "6979:1:12"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "6972:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6972:9:12"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6963:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "6963:19:12"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "6958:1:12"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6995:20:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7008:3:12",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "7013:1:12"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7004:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7004:11:12"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "6999:1:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7028:30:12",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nodeType": "YulIdentifier",
																		"src": "7040:5:12"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7051:2:12",
																				"type": "",
																				"value": "57"
																			},
																			{
																				"name": "f",
																				"nodeType": "YulIdentifier",
																				"src": "7055:1:12"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "7047:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7047:10:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "7037:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7037:21:12"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nodeType": "YulIdentifier",
																	"src": "7028:5:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7071:14:12",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "7080:1:12"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "7083:1:12"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7076:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7076:9:12"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "7071:1:12"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 1772,
														"isOffset": false,
														"isSlot": false,
														"src": "7028:5:12",
														"valueSize": 1
													},
													{
														"declaration": 1772,
														"isOffset": false,
														"isSlot": false,
														"src": "7040:5:12",
														"valueSize": 1
													},
													{
														"declaration": 1734,
														"isOffset": false,
														"isSlot": false,
														"src": "6958:1:12",
														"valueSize": 1
													},
													{
														"declaration": 1734,
														"isOffset": false,
														"isSlot": false,
														"src": "6976:1:12",
														"valueSize": 1
													},
													{
														"declaration": 1734,
														"isOffset": false,
														"isSlot": false,
														"src": "6979:1:12",
														"valueSize": 1
													},
													{
														"declaration": 1734,
														"isOffset": false,
														"isSlot": false,
														"src": "7013:1:12",
														"valueSize": 1
													},
													{
														"declaration": 1734,
														"isOffset": false,
														"isSlot": false,
														"src": "7071:1:12",
														"valueSize": 1
													},
													{
														"declaration": 1734,
														"isOffset": false,
														"isSlot": false,
														"src": "7083:1:12",
														"valueSize": 1
													}
												],
												"id": 1789,
												"nodeType": "InlineAssembly",
												"src": "6935:160:12"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "7113:151:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7127:24:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7136:3:12",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "7145:1:12"
																			},
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "7148:1:12"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "7141:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7141:9:12"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7132:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7132:19:12"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "7127:1:12"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7164:20:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7177:3:12",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "7182:1:12"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7173:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7173:11:12"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "7168:1:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7197:30:12",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nodeType": "YulIdentifier",
																		"src": "7209:5:12"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7220:2:12",
																				"type": "",
																				"value": "56"
																			},
																			{
																				"name": "f",
																				"nodeType": "YulIdentifier",
																				"src": "7224:1:12"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "7216:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7216:10:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "7206:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7206:21:12"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nodeType": "YulIdentifier",
																	"src": "7197:5:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7240:14:12",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "7249:1:12"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "7252:1:12"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7245:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7245:9:12"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "7240:1:12"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 1772,
														"isOffset": false,
														"isSlot": false,
														"src": "7197:5:12",
														"valueSize": 1
													},
													{
														"declaration": 1772,
														"isOffset": false,
														"isSlot": false,
														"src": "7209:5:12",
														"valueSize": 1
													},
													{
														"declaration": 1734,
														"isOffset": false,
														"isSlot": false,
														"src": "7127:1:12",
														"valueSize": 1
													},
													{
														"declaration": 1734,
														"isOffset": false,
														"isSlot": false,
														"src": "7145:1:12",
														"valueSize": 1
													},
													{
														"declaration": 1734,
														"isOffset": false,
														"isSlot": false,
														"src": "7148:1:12",
														"valueSize": 1
													},
													{
														"declaration": 1734,
														"isOffset": false,
														"isSlot": false,
														"src": "7182:1:12",
														"valueSize": 1
													},
													{
														"declaration": 1734,
														"isOffset": false,
														"isSlot": false,
														"src": "7240:1:12",
														"valueSize": 1
													},
													{
														"declaration": 1734,
														"isOffset": false,
														"isSlot": false,
														"src": "7252:1:12",
														"valueSize": 1
													}
												],
												"id": 1790,
												"nodeType": "InlineAssembly",
												"src": "7104:160:12"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "7282:151:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7296:24:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7305:3:12",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "7314:1:12"
																			},
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "7317:1:12"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "7310:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7310:9:12"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7301:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7301:19:12"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "7296:1:12"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7333:20:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7346:3:12",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "7351:1:12"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7342:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7342:11:12"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "7337:1:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7366:30:12",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nodeType": "YulIdentifier",
																		"src": "7378:5:12"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7389:2:12",
																				"type": "",
																				"value": "55"
																			},
																			{
																				"name": "f",
																				"nodeType": "YulIdentifier",
																				"src": "7393:1:12"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "7385:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7385:10:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "7375:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7375:21:12"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nodeType": "YulIdentifier",
																	"src": "7366:5:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7409:14:12",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "7418:1:12"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "7421:1:12"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7414:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7414:9:12"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "7409:1:12"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 1772,
														"isOffset": false,
														"isSlot": false,
														"src": "7366:5:12",
														"valueSize": 1
													},
													{
														"declaration": 1772,
														"isOffset": false,
														"isSlot": false,
														"src": "7378:5:12",
														"valueSize": 1
													},
													{
														"declaration": 1734,
														"isOffset": false,
														"isSlot": false,
														"src": "7296:1:12",
														"valueSize": 1
													},
													{
														"declaration": 1734,
														"isOffset": false,
														"isSlot": false,
														"src": "7314:1:12",
														"valueSize": 1
													},
													{
														"declaration": 1734,
														"isOffset": false,
														"isSlot": false,
														"src": "7317:1:12",
														"valueSize": 1
													},
													{
														"declaration": 1734,
														"isOffset": false,
														"isSlot": false,
														"src": "7351:1:12",
														"valueSize": 1
													},
													{
														"declaration": 1734,
														"isOffset": false,
														"isSlot": false,
														"src": "7409:1:12",
														"valueSize": 1
													},
													{
														"declaration": 1734,
														"isOffset": false,
														"isSlot": false,
														"src": "7421:1:12",
														"valueSize": 1
													}
												],
												"id": 1791,
												"nodeType": "InlineAssembly",
												"src": "7273:160:12"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "7451:151:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7465:24:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7474:3:12",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "7483:1:12"
																			},
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "7486:1:12"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "7479:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7479:9:12"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7470:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7470:19:12"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "7465:1:12"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7502:20:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7515:3:12",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "7520:1:12"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7511:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7511:11:12"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "7506:1:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7535:30:12",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nodeType": "YulIdentifier",
																		"src": "7547:5:12"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7558:2:12",
																				"type": "",
																				"value": "54"
																			},
																			{
																				"name": "f",
																				"nodeType": "YulIdentifier",
																				"src": "7562:1:12"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "7554:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7554:10:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "7544:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7544:21:12"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nodeType": "YulIdentifier",
																	"src": "7535:5:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7578:14:12",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "7587:1:12"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "7590:1:12"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7583:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7583:9:12"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "7578:1:12"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 1772,
														"isOffset": false,
														"isSlot": false,
														"src": "7535:5:12",
														"valueSize": 1
													},
													{
														"declaration": 1772,
														"isOffset": false,
														"isSlot": false,
														"src": "7547:5:12",
														"valueSize": 1
													},
													{
														"declaration": 1734,
														"isOffset": false,
														"isSlot": false,
														"src": "7465:1:12",
														"valueSize": 1
													},
													{
														"declaration": 1734,
														"isOffset": false,
														"isSlot": false,
														"src": "7483:1:12",
														"valueSize": 1
													},
													{
														"declaration": 1734,
														"isOffset": false,
														"isSlot": false,
														"src": "7486:1:12",
														"valueSize": 1
													},
													{
														"declaration": 1734,
														"isOffset": false,
														"isSlot": false,
														"src": "7520:1:12",
														"valueSize": 1
													},
													{
														"declaration": 1734,
														"isOffset": false,
														"isSlot": false,
														"src": "7578:1:12",
														"valueSize": 1
													},
													{
														"declaration": 1734,
														"isOffset": false,
														"isSlot": false,
														"src": "7590:1:12",
														"valueSize": 1
													}
												],
												"id": 1792,
												"nodeType": "InlineAssembly",
												"src": "7442:160:12"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "7620:151:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7634:24:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7643:3:12",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "7652:1:12"
																			},
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "7655:1:12"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "7648:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7648:9:12"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7639:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7639:19:12"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "7634:1:12"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7671:20:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7684:3:12",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "7689:1:12"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7680:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7680:11:12"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "7675:1:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7704:30:12",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nodeType": "YulIdentifier",
																		"src": "7716:5:12"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7727:2:12",
																				"type": "",
																				"value": "53"
																			},
																			{
																				"name": "f",
																				"nodeType": "YulIdentifier",
																				"src": "7731:1:12"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "7723:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7723:10:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "7713:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7713:21:12"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nodeType": "YulIdentifier",
																	"src": "7704:5:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7747:14:12",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "7756:1:12"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "7759:1:12"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7752:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7752:9:12"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "7747:1:12"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 1772,
														"isOffset": false,
														"isSlot": false,
														"src": "7704:5:12",
														"valueSize": 1
													},
													{
														"declaration": 1772,
														"isOffset": false,
														"isSlot": false,
														"src": "7716:5:12",
														"valueSize": 1
													},
													{
														"declaration": 1734,
														"isOffset": false,
														"isSlot": false,
														"src": "7634:1:12",
														"valueSize": 1
													},
													{
														"declaration": 1734,
														"isOffset": false,
														"isSlot": false,
														"src": "7652:1:12",
														"valueSize": 1
													},
													{
														"declaration": 1734,
														"isOffset": false,
														"isSlot": false,
														"src": "7655:1:12",
														"valueSize": 1
													},
													{
														"declaration": 1734,
														"isOffset": false,
														"isSlot": false,
														"src": "7689:1:12",
														"valueSize": 1
													},
													{
														"declaration": 1734,
														"isOffset": false,
														"isSlot": false,
														"src": "7747:1:12",
														"valueSize": 1
													},
													{
														"declaration": 1734,
														"isOffset": false,
														"isSlot": false,
														"src": "7759:1:12",
														"valueSize": 1
													}
												],
												"id": 1793,
												"nodeType": "InlineAssembly",
												"src": "7611:160:12"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "7789:151:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7803:24:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7812:3:12",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "7821:1:12"
																			},
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "7824:1:12"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "7817:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7817:9:12"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7808:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7808:19:12"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "7803:1:12"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7840:20:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7853:3:12",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "7858:1:12"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7849:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7849:11:12"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "7844:1:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7873:30:12",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nodeType": "YulIdentifier",
																		"src": "7885:5:12"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7896:2:12",
																				"type": "",
																				"value": "52"
																			},
																			{
																				"name": "f",
																				"nodeType": "YulIdentifier",
																				"src": "7900:1:12"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "7892:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7892:10:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "7882:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7882:21:12"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nodeType": "YulIdentifier",
																	"src": "7873:5:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7916:14:12",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "7925:1:12"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "7928:1:12"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7921:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7921:9:12"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "7916:1:12"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 1772,
														"isOffset": false,
														"isSlot": false,
														"src": "7873:5:12",
														"valueSize": 1
													},
													{
														"declaration": 1772,
														"isOffset": false,
														"isSlot": false,
														"src": "7885:5:12",
														"valueSize": 1
													},
													{
														"declaration": 1734,
														"isOffset": false,
														"isSlot": false,
														"src": "7803:1:12",
														"valueSize": 1
													},
													{
														"declaration": 1734,
														"isOffset": false,
														"isSlot": false,
														"src": "7821:1:12",
														"valueSize": 1
													},
													{
														"declaration": 1734,
														"isOffset": false,
														"isSlot": false,
														"src": "7824:1:12",
														"valueSize": 1
													},
													{
														"declaration": 1734,
														"isOffset": false,
														"isSlot": false,
														"src": "7858:1:12",
														"valueSize": 1
													},
													{
														"declaration": 1734,
														"isOffset": false,
														"isSlot": false,
														"src": "7916:1:12",
														"valueSize": 1
													},
													{
														"declaration": 1734,
														"isOffset": false,
														"isSlot": false,
														"src": "7928:1:12",
														"valueSize": 1
													}
												],
												"id": 1794,
												"nodeType": "InlineAssembly",
												"src": "7780:160:12"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "7958:151:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7972:24:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7981:3:12",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "7990:1:12"
																			},
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "7993:1:12"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "7986:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7986:9:12"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7977:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "7977:19:12"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "7972:1:12"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8009:20:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8022:3:12",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "8027:1:12"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "8018:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8018:11:12"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "8013:1:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8042:30:12",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nodeType": "YulIdentifier",
																		"src": "8054:5:12"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8065:2:12",
																				"type": "",
																				"value": "51"
																			},
																			{
																				"name": "f",
																				"nodeType": "YulIdentifier",
																				"src": "8069:1:12"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "8061:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8061:10:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "8051:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8051:21:12"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nodeType": "YulIdentifier",
																	"src": "8042:5:12"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8085:14:12",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "8094:1:12"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "8097:1:12"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "8090:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8090:9:12"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "8085:1:12"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 1772,
														"isOffset": false,
														"isSlot": false,
														"src": "8042:5:12",
														"valueSize": 1
													},
													{
														"declaration": 1772,
														"isOffset": false,
														"isSlot": false,
														"src": "8054:5:12",
														"valueSize": 1
													},
													{
														"declaration": 1734,
														"isOffset": false,
														"isSlot": false,
														"src": "7972:1:12",
														"valueSize": 1
													},
													{
														"declaration": 1734,
														"isOffset": false,
														"isSlot": false,
														"src": "7990:1:12",
														"valueSize": 1
													},
													{
														"declaration": 1734,
														"isOffset": false,
														"isSlot": false,
														"src": "7993:1:12",
														"valueSize": 1
													},
													{
														"declaration": 1734,
														"isOffset": false,
														"isSlot": false,
														"src": "8027:1:12",
														"valueSize": 1
													},
													{
														"declaration": 1734,
														"isOffset": false,
														"isSlot": false,
														"src": "8085:1:12",
														"valueSize": 1
													},
													{
														"declaration": 1734,
														"isOffset": false,
														"isSlot": false,
														"src": "8097:1:12",
														"valueSize": 1
													}
												],
												"id": 1795,
												"nodeType": "InlineAssembly",
												"src": "7949:160:12"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "8127:124:12",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8141:24:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8150:3:12",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "8159:1:12"
																			},
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "8162:1:12"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "8155:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8155:9:12"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "8146:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8146:19:12"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "8141:1:12"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8178:20:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8191:3:12",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "8196:1:12"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "8187:3:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8187:11:12"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "8182:1:12",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8211:30:12",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nodeType": "YulIdentifier",
																		"src": "8223:5:12"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8234:2:12",
																				"type": "",
																				"value": "50"
																			},
																			{
																				"name": "f",
																				"nodeType": "YulIdentifier",
																				"src": "8238:1:12"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "8230:3:12"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8230:10:12"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "8220:2:12"
																},
																"nodeType": "YulFunctionCall",
																"src": "8220:21:12"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nodeType": "YulIdentifier",
																	"src": "8211:5:12"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 1772,
														"isOffset": false,
														"isSlot": false,
														"src": "8211:5:12",
														"valueSize": 1
													},
													{
														"declaration": 1772,
														"isOffset": false,
														"isSlot": false,
														"src": "8223:5:12",
														"valueSize": 1
													},
													{
														"declaration": 1734,
														"isOffset": false,
														"isSlot": false,
														"src": "8141:1:12",
														"valueSize": 1
													},
													{
														"declaration": 1734,
														"isOffset": false,
														"isSlot": false,
														"src": "8159:1:12",
														"valueSize": 1
													},
													{
														"declaration": 1734,
														"isOffset": false,
														"isSlot": false,
														"src": "8162:1:12",
														"valueSize": 1
													},
													{
														"declaration": 1734,
														"isOffset": false,
														"isSlot": false,
														"src": "8196:1:12",
														"valueSize": 1
													}
												],
												"id": 1796,
												"nodeType": "InlineAssembly",
												"src": "8118:133:12"
											},
											{
												"assignments": [
													1798
												],
												"declarations": [
													{
														"constant": false,
														"id": 1798,
														"mutability": "mutable",
														"name": "log_sqrt10001",
														"nodeType": "VariableDeclaration",
														"scope": 1843,
														"src": "8261:20:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 1797,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "8261:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1802,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 1801,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1799,
														"name": "log_2",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1772,
														"src": "8284:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"hexValue": "323535373338393538393939363033383236333437313431",
														"id": 1800,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8292:24:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_255738958999603826347141_by_1",
															"typeString": "int_const 255738958999603826347141"
														},
														"value": "255738958999603826347141"
													},
													"src": "8284:32:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8261:55:12"
											},
											{
												"assignments": [
													1804
												],
												"declarations": [
													{
														"constant": false,
														"id": 1804,
														"mutability": "mutable",
														"name": "tickLow",
														"nodeType": "VariableDeclaration",
														"scope": 1843,
														"src": "8345:13:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														},
														"typeName": {
															"id": 1803,
															"name": "int24",
															"nodeType": "ElementaryTypeName",
															"src": "8345:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1814,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 1812,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 1809,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1807,
																			"name": "log_sqrt10001",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1798,
																			"src": "8368:13:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "33343032393932393536383039313332343138353936313430313030363630323437323130",
																			"id": 1808,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8384:37:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3402992956809132418596140100660247210_by_1",
																				"typeString": "int_const 3402...(29 digits omitted)...7210"
																			},
																			"value": "3402992956809132418596140100660247210"
																		},
																		"src": "8368:53:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"id": 1810,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "8367:55:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 1811,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8426:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "8367:62:12",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														],
														"id": 1806,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "8361:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_int24_$",
															"typeString": "type(int24)"
														},
														"typeName": {
															"id": 1805,
															"name": "int24",
															"nodeType": "ElementaryTypeName",
															"src": "8361:5:12",
															"typeDescriptions": {}
														}
													},
													"id": 1813,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8361:69:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8345:85:12"
											},
											{
												"assignments": [
													1816
												],
												"declarations": [
													{
														"constant": false,
														"id": 1816,
														"mutability": "mutable",
														"name": "tickHi",
														"nodeType": "VariableDeclaration",
														"scope": 1843,
														"src": "8440:12:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														},
														"typeName": {
															"id": 1815,
															"name": "int24",
															"nodeType": "ElementaryTypeName",
															"src": "8440:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1826,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 1824,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 1821,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1819,
																			"name": "log_sqrt10001",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1798,
																			"src": "8462:13:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"hexValue": "323931333339343634373731393839363232393037303237363231313533333938303838343935",
																			"id": 1820,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8478:39:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_291339464771989622907027621153398088495_by_1",
																				"typeString": "int_const 2913...(31 digits omitted)...8495"
																			},
																			"value": "291339464771989622907027621153398088495"
																		},
																		"src": "8462:55:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"id": 1822,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "8461:57:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 1823,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8522:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "8461:64:12",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														],
														"id": 1818,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "8455:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_int24_$",
															"typeString": "type(int24)"
														},
														"typeName": {
															"id": 1817,
															"name": "int24",
															"nodeType": "ElementaryTypeName",
															"src": "8455:5:12",
															"typeDescriptions": {}
														}
													},
													"id": 1825,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8455:71:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8440:86:12"
											},
											{
												"expression": {
													"id": 1841,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1827,
														"name": "tick",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1711,
														"src": "8537:4:12",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"condition": {
															"commonType": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															},
															"id": 1830,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1828,
																"name": "tickLow",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1804,
																"src": "8544:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 1829,
																"name": "tickHi",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1816,
																"src": "8555:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																}
															},
															"src": "8544:17:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseExpression": {
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																},
																"id": 1836,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 1833,
																			"name": "tickHi",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1816,
																			"src": "8593:6:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int24",
																				"typeString": "int24"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_int24",
																				"typeString": "int24"
																			}
																		],
																		"id": 1832,
																		"name": "getSqrtRatioAtTick",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1705,
																		"src": "8574:18:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_int24_$returns$_t_uint160_$",
																			"typeString": "function (int24) pure returns (uint160)"
																		}
																	},
																	"id": 1834,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8574:26:12",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"id": 1835,
																	"name": "sqrtPriceX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1708,
																	"src": "8604:12:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																"src": "8574:42:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseExpression": {
																"id": 1838,
																"name": "tickLow",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1804,
																"src": "8628:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																}
															},
															"id": 1839,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "Conditional",
															"src": "8574:61:12",
															"trueExpression": {
																"id": 1837,
																"name": "tickHi",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1816,
																"src": "8619:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														},
														"id": 1840,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "Conditional",
														"src": "8544:91:12",
														"trueExpression": {
															"id": 1831,
															"name": "tickLow",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1804,
															"src": "8564:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"src": "8537:98:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"id": 1842,
												"nodeType": "ExpressionStatement",
												"src": "8537:98:12"
											}
										]
									},
									"documentation": {
										"id": 1706,
										"nodeType": "StructuredDocumentation",
										"src": "3948:408:12",
										"text": "@notice Calculates the greatest tick value such that getRatioAtTick(tick) <= ratio\n @dev Throws in case sqrtPriceX96 < MIN_SQRT_RATIO, as MIN_SQRT_RATIO is the lowest value getRatioAtTick may\n ever return.\n @param sqrtPriceX96 The sqrt ratio for which to compute the tick as a Q64.96\n @return tick The greatest tick for which the ratio is less than or equal to the input ratio"
									},
									"id": 1844,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTickAtSqrtRatio",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1709,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1708,
												"mutability": "mutable",
												"name": "sqrtPriceX96",
												"nodeType": "VariableDeclaration",
												"scope": 1844,
												"src": "4389:20:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 1707,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "4389:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4388:22:12"
									},
									"returnParameters": {
										"id": 1712,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1711,
												"mutability": "mutable",
												"name": "tick",
												"nodeType": "VariableDeclaration",
												"scope": 1844,
												"src": "4434:10:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1710,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "4434:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4433:12:12"
									},
									"scope": 1845,
									"src": "4361:4281:12",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1846,
							"src": "313:8331:12"
						}
					],
					"src": "45:8600:12"
				},
				"id": 12
			},
			"contracts/PriceAggregator.sol": {
				"ast": {
					"absolutePath": "contracts/PriceAggregator.sol",
					"exportedSymbols": {
						"FullMath": [
							1310
						],
						"IERC20": [
							2240
						],
						"IPriceAggregator": [
							2317
						],
						"IUniswapV2Factory": [
							62
						],
						"IUniswapV2Pair": [
							304
						],
						"IUniswapV2Router01": [
							612
						],
						"IUniswapV3Factory": [
							695
						],
						"IUniswapV3Pool": [
							717
						],
						"IUniswapV3PoolActions": [
							813
						],
						"IUniswapV3PoolDerivedState": [
							844
						],
						"IUniswapV3PoolEvents": [
							963
						],
						"IUniswapV3PoolImmutables": [
							1003
						],
						"IUniswapV3PoolOwnerActions": [
							1029
						],
						"IUniswapV3PoolState": [
							1137
						],
						"OracleLibrary": [
							2505
						],
						"PriceAggregator": [
							2148
						],
						"TickMath": [
							1845
						],
						"UniswapV2": [
							2689
						],
						"UniswapV3": [
							3060
						]
					},
					"id": 2149,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1847,
							"literals": [
								"solidity",
								"0.7",
								".6"
							],
							"nodeType": "PragmaDirective",
							"src": "32:22:13"
						},
						{
							"id": 1848,
							"literals": [
								"abicoder",
								"v2"
							],
							"nodeType": "PragmaDirective",
							"src": "55:19:13"
						},
						{
							"absolutePath": "@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol",
							"file": "@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol",
							"id": 1849,
							"nodeType": "ImportDirective",
							"scope": 2149,
							"sourceUnit": 613,
							"src": "76:75:13",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/interfaces/IPriceAggregator.sol",
							"file": "./interfaces/IPriceAggregator.sol",
							"id": 1850,
							"nodeType": "ImportDirective",
							"scope": 2149,
							"sourceUnit": 2318,
							"src": "152:43:13",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/libraries/UniswapV2.sol",
							"file": "./libraries/UniswapV2.sol",
							"id": 1851,
							"nodeType": "ImportDirective",
							"scope": 2149,
							"sourceUnit": 2690,
							"src": "196:35:13",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/libraries/UniswapV3.sol",
							"file": "./libraries/UniswapV3.sol",
							"id": 1852,
							"nodeType": "ImportDirective",
							"scope": 2149,
							"sourceUnit": 3061,
							"src": "232:35:13",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1853,
										"name": "IPriceAggregator",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 2317,
										"src": "298:16:13",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IPriceAggregator_$2317",
											"typeString": "contract IPriceAggregator"
										}
									},
									"id": 1854,
									"nodeType": "InheritanceSpecifier",
									"src": "298:16:13"
								}
							],
							"contractDependencies": [
								2317
							],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2148,
							"linearizedBaseContracts": [
								2148,
								2317
							],
							"name": "PriceAggregator",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										2307
									],
									"body": {
										"id": 1970,
										"nodeType": "Block",
										"src": "416:602:13",
										"statements": [
											{
												"assignments": [
													1867
												],
												"declarations": [
													{
														"constant": false,
														"id": 1867,
														"mutability": "mutable",
														"name": "outputs",
														"nodeType": "VariableDeclaration",
														"scope": 1970,
														"src": "426:25:13",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_priceOut_$2261_memory_ptr_$dyn_memory_ptr",
															"typeString": "struct IPriceAggregator.priceOut[]"
														},
														"typeName": {
															"baseType": {
																"id": 1865,
																"name": "priceOut",
																"nodeType": "UserDefinedTypeName",
																"referencedDeclaration": 2261,
																"src": "426:8:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_priceOut_$2261_storage_ptr",
																	"typeString": "struct IPriceAggregator.priceOut"
																}
															},
															"id": 1866,
															"nodeType": "ArrayTypeName",
															"src": "426:10:13",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_priceOut_$2261_storage_$dyn_storage_ptr",
																"typeString": "struct IPriceAggregator.priceOut[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1874,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1871,
																"name": "inputs",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1857,
																"src": "469:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_priceIn_$2254_memory_ptr_$dyn_memory_ptr",
																	"typeString": "struct IPriceAggregator.priceIn memory[] memory"
																}
															},
															"id": 1872,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "469:13:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1870,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "454:14:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_priceOut_$2261_memory_ptr_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (struct IPriceAggregator.priceOut memory[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 1868,
																"name": "priceOut",
																"nodeType": "UserDefinedTypeName",
																"referencedDeclaration": 2261,
																"src": "458:8:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_priceOut_$2261_storage_ptr",
																	"typeString": "struct IPriceAggregator.priceOut"
																}
															},
															"id": 1869,
															"nodeType": "ArrayTypeName",
															"src": "458:10:13",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_priceOut_$2261_storage_$dyn_storage_ptr",
																"typeString": "struct IPriceAggregator.priceOut[]"
															}
														}
													},
													"id": 1873,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "454:29:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_priceOut_$2261_memory_ptr_$dyn_memory_ptr",
														"typeString": "struct IPriceAggregator.priceOut memory[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "426:57:13"
											},
											{
												"body": {
													"id": 1966,
													"nodeType": "Block",
													"src": "526:458:13",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																},
																"id": 1891,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"baseExpression": {
																			"id": 1886,
																			"name": "inputs",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1857,
																			"src": "540:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_struct$_priceIn_$2254_memory_ptr_$dyn_memory_ptr",
																				"typeString": "struct IPriceAggregator.priceIn memory[] memory"
																			}
																		},
																		"id": 1888,
																		"indexExpression": {
																			"id": 1887,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1876,
																			"src": "547:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "540:9:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_priceIn_$2254_memory_ptr",
																			"typeString": "struct IPriceAggregator.priceIn memory"
																		}
																	},
																	"id": 1889,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "providerVersion",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2253,
																	"src": "540:25:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 1890,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "569:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "540:30:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	},
																	"id": 1929,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 1924,
																				"name": "inputs",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1857,
																				"src": "754:6:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_struct$_priceIn_$2254_memory_ptr_$dyn_memory_ptr",
																					"typeString": "struct IPriceAggregator.priceIn memory[] memory"
																				}
																			},
																			"id": 1926,
																			"indexExpression": {
																				"id": 1925,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1876,
																				"src": "761:1:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "754:9:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_priceIn_$2254_memory_ptr",
																				"typeString": "struct IPriceAggregator.priceIn memory"
																			}
																		},
																		"id": 1927,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "providerVersion",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2253,
																		"src": "754:25:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "33",
																		"id": 1928,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "783:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_3_by_1",
																			"typeString": "int_const 3"
																		},
																		"value": "3"
																	},
																	"src": "754:30:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"id": 1964,
																"nodeType": "IfStatement",
																"src": "750:225:13",
																"trueBody": {
																	"id": 1963,
																	"nodeType": "Block",
																	"src": "786:189:13",
																	"statements": [
																		{
																			"assignments": [
																				1931,
																				1933
																			],
																			"declarations": [
																				{
																					"constant": false,
																					"id": 1931,
																					"mutability": "mutable",
																					"name": "price",
																					"nodeType": "VariableDeclaration",
																					"scope": 1963,
																					"src": "801:13:13",
																					"stateVariable": false,
																					"storageLocation": "default",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"typeName": {
																						"id": 1930,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "801:7:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"visibility": "internal"
																				},
																				{
																					"constant": false,
																					"id": 1933,
																					"mutability": "mutable",
																					"name": "fee",
																					"nodeType": "VariableDeclaration",
																					"scope": 1963,
																					"src": "815:10:13",
																					"stateVariable": false,
																					"storageLocation": "default",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint24",
																						"typeString": "uint24"
																					},
																					"typeName": {
																						"id": 1932,
																						"name": "uint24",
																						"nodeType": "ElementaryTypeName",
																						"src": "815:6:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint24",
																							"typeString": "uint24"
																						}
																					},
																					"visibility": "internal"
																				}
																			],
																			"id": 1949,
																			"initialValue": {
																				"arguments": [
																					{
																						"expression": {
																							"baseExpression": {
																								"id": 1936,
																								"name": "inputs",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1857,
																								"src": "845:6:13",
																								"typeDescriptions": {
																									"typeIdentifier": "t_array$_t_struct$_priceIn_$2254_memory_ptr_$dyn_memory_ptr",
																									"typeString": "struct IPriceAggregator.priceIn memory[] memory"
																								}
																							},
																							"id": 1938,
																							"indexExpression": {
																								"id": 1937,
																								"name": "i",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1876,
																								"src": "852:1:13",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "845:9:13",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_priceIn_$2254_memory_ptr",
																								"typeString": "struct IPriceAggregator.priceIn memory"
																							}
																						},
																						"id": 1939,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "provider",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 2251,
																						"src": "845:18:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"expression": {
																							"baseExpression": {
																								"id": 1940,
																								"name": "inputs",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1857,
																								"src": "864:6:13",
																								"typeDescriptions": {
																									"typeIdentifier": "t_array$_t_struct$_priceIn_$2254_memory_ptr_$dyn_memory_ptr",
																									"typeString": "struct IPriceAggregator.priceIn memory[] memory"
																								}
																							},
																							"id": 1942,
																							"indexExpression": {
																								"id": 1941,
																								"name": "i",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1876,
																								"src": "871:1:13",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "864:9:13",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_priceIn_$2254_memory_ptr",
																								"typeString": "struct IPriceAggregator.priceIn memory"
																							}
																						},
																						"id": 1943,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "t0",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 2247,
																						"src": "864:12:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"expression": {
																							"baseExpression": {
																								"id": 1944,
																								"name": "inputs",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1857,
																								"src": "877:6:13",
																								"typeDescriptions": {
																									"typeIdentifier": "t_array$_t_struct$_priceIn_$2254_memory_ptr_$dyn_memory_ptr",
																									"typeString": "struct IPriceAggregator.priceIn memory[] memory"
																								}
																							},
																							"id": 1946,
																							"indexExpression": {
																								"id": 1945,
																								"name": "i",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1876,
																								"src": "884:1:13",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "877:9:13",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_priceIn_$2254_memory_ptr",
																								"typeString": "struct IPriceAggregator.priceIn memory"
																							}
																						},
																						"id": 1947,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "t1",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 2249,
																						"src": "877:12:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						},
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						},
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					],
																					"expression": {
																						"id": 1934,
																						"name": "UniswapV3",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3060,
																						"src": "829:9:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_contract$_UniswapV3_$3060_$",
																							"typeString": "type(library UniswapV3)"
																						}
																					},
																					"id": 1935,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "Price",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2967,
																					"src": "829:15:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_delegatecall_view$_t_address_$_t_address_$_t_address_$returns$_t_uint256_$_t_uint24_$",
																						"typeString": "function (address,address,address) view returns (uint256,uint24)"
																					}
																				},
																				"id": 1948,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "829:61:13",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$_t_uint256_$_t_uint24_$",
																					"typeString": "tuple(uint256,uint24)"
																				}
																			},
																			"nodeType": "VariableDeclarationStatement",
																			"src": "800:90:13"
																		},
																		{
																			"expression": {
																				"id": 1961,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftHandSide": {
																					"baseExpression": {
																						"id": 1950,
																						"name": "outputs",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1867,
																						"src": "904:7:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_struct$_priceOut_$2261_memory_ptr_$dyn_memory_ptr",
																							"typeString": "struct IPriceAggregator.priceOut memory[] memory"
																						}
																					},
																					"id": 1952,
																					"indexExpression": {
																						"id": 1951,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1876,
																						"src": "912:1:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": true,
																					"nodeType": "IndexAccess",
																					"src": "904:10:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_priceOut_$2261_memory_ptr",
																						"typeString": "struct IPriceAggregator.priceOut memory"
																					}
																				},
																				"nodeType": "Assignment",
																				"operator": "=",
																				"rightHandSide": {
																					"arguments": [
																						{
																							"expression": {
																								"baseExpression": {
																									"id": 1954,
																									"name": "inputs",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1857,
																									"src": "926:6:13",
																									"typeDescriptions": {
																										"typeIdentifier": "t_array$_t_struct$_priceIn_$2254_memory_ptr_$dyn_memory_ptr",
																										"typeString": "struct IPriceAggregator.priceIn memory[] memory"
																									}
																								},
																								"id": 1956,
																								"indexExpression": {
																									"id": 1955,
																									"name": "i",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1876,
																									"src": "933:1:13",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "IndexAccess",
																								"src": "926:9:13",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_priceIn_$2254_memory_ptr",
																									"typeString": "struct IPriceAggregator.priceIn memory"
																								}
																							},
																							"id": 1957,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "index",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 2245,
																							"src": "926:15:13",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						{
																							"id": 1958,
																							"name": "price",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1931,
																							"src": "942:5:13",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						{
																							"id": 1959,
																							"name": "fee",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1933,
																							"src": "948:3:13",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint24",
																								"typeString": "uint24"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							{
																								"typeIdentifier": "t_uint24",
																								"typeString": "uint24"
																							}
																						],
																						"id": 1953,
																						"name": "priceOut",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2261,
																						"src": "917:8:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_struct$_priceOut_$2261_storage_ptr_$",
																							"typeString": "type(struct IPriceAggregator.priceOut storage pointer)"
																						}
																					},
																					"id": 1960,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "structConstructorCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "917:35:13",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_priceOut_$2261_memory_ptr",
																						"typeString": "struct IPriceAggregator.priceOut memory"
																					}
																				},
																				"src": "904:48:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_priceOut_$2261_memory_ptr",
																					"typeString": "struct IPriceAggregator.priceOut memory"
																				}
																			},
																			"id": 1962,
																			"nodeType": "ExpressionStatement",
																			"src": "904:48:13"
																		}
																	]
																}
															},
															"id": 1965,
															"nodeType": "IfStatement",
															"src": "536:439:13",
															"trueBody": {
																"id": 1923,
																"nodeType": "Block",
																"src": "572:172:13",
																"statements": [
																	{
																		"assignments": [
																			1893
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1893,
																				"mutability": "mutable",
																				"name": "price",
																				"nodeType": "VariableDeclaration",
																				"scope": 1923,
																				"src": "586:13:13",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 1892,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "586:7:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 1909,
																		"initialValue": {
																			"arguments": [
																				{
																					"expression": {
																						"baseExpression": {
																							"id": 1896,
																							"name": "inputs",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1857,
																							"src": "618:6:13",
																							"typeDescriptions": {
																								"typeIdentifier": "t_array$_t_struct$_priceIn_$2254_memory_ptr_$dyn_memory_ptr",
																								"typeString": "struct IPriceAggregator.priceIn memory[] memory"
																							}
																						},
																						"id": 1898,
																						"indexExpression": {
																							"id": 1897,
																							"name": "i",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1876,
																							"src": "625:1:13",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "618:9:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_priceIn_$2254_memory_ptr",
																							"typeString": "struct IPriceAggregator.priceIn memory"
																						}
																					},
																					"id": 1899,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "provider",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2251,
																					"src": "618:18:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"expression": {
																						"baseExpression": {
																							"id": 1900,
																							"name": "inputs",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1857,
																							"src": "637:6:13",
																							"typeDescriptions": {
																								"typeIdentifier": "t_array$_t_struct$_priceIn_$2254_memory_ptr_$dyn_memory_ptr",
																								"typeString": "struct IPriceAggregator.priceIn memory[] memory"
																							}
																						},
																						"id": 1902,
																						"indexExpression": {
																							"id": 1901,
																							"name": "i",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1876,
																							"src": "644:1:13",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "637:9:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_priceIn_$2254_memory_ptr",
																							"typeString": "struct IPriceAggregator.priceIn memory"
																						}
																					},
																					"id": 1903,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "t0",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2247,
																					"src": "637:12:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"expression": {
																						"baseExpression": {
																							"id": 1904,
																							"name": "inputs",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1857,
																							"src": "650:6:13",
																							"typeDescriptions": {
																								"typeIdentifier": "t_array$_t_struct$_priceIn_$2254_memory_ptr_$dyn_memory_ptr",
																								"typeString": "struct IPriceAggregator.priceIn memory[] memory"
																							}
																						},
																						"id": 1906,
																						"indexExpression": {
																							"id": 1905,
																							"name": "i",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1876,
																							"src": "657:1:13",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "650:9:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_priceIn_$2254_memory_ptr",
																							"typeString": "struct IPriceAggregator.priceIn memory"
																						}
																					},
																					"id": 1907,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "t1",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2249,
																					"src": "650:12:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"id": 1894,
																					"name": "UniswapV2",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2689,
																					"src": "602:9:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_UniswapV2_$2689_$",
																						"typeString": "type(library UniswapV2)"
																					}
																				},
																				"id": 1895,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "Price",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2627,
																				"src": "602:15:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_delegatecall_view$_t_address_$_t_address_$_t_address_$returns$_t_uint256_$",
																					"typeString": "function (address,address,address) view returns (uint256)"
																				}
																			},
																			"id": 1908,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "602:61:13",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "586:77:13"
																	},
																	{
																		"expression": {
																			"id": 1921,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"id": 1910,
																					"name": "outputs",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1867,
																					"src": "677:7:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_struct$_priceOut_$2261_memory_ptr_$dyn_memory_ptr",
																						"typeString": "struct IPriceAggregator.priceOut memory[] memory"
																					}
																				},
																				"id": 1912,
																				"indexExpression": {
																					"id": 1911,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1876,
																					"src": "685:1:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "677:10:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_priceOut_$2261_memory_ptr",
																					"typeString": "struct IPriceAggregator.priceOut memory"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"arguments": [
																					{
																						"expression": {
																							"baseExpression": {
																								"id": 1914,
																								"name": "inputs",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1857,
																								"src": "699:6:13",
																								"typeDescriptions": {
																									"typeIdentifier": "t_array$_t_struct$_priceIn_$2254_memory_ptr_$dyn_memory_ptr",
																									"typeString": "struct IPriceAggregator.priceIn memory[] memory"
																								}
																							},
																							"id": 1916,
																							"indexExpression": {
																								"id": 1915,
																								"name": "i",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1876,
																								"src": "706:1:13",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "699:9:13",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_priceIn_$2254_memory_ptr",
																								"typeString": "struct IPriceAggregator.priceIn memory"
																							}
																						},
																						"id": 1917,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "index",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 2245,
																						"src": "699:15:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					{
																						"id": 1918,
																						"name": "price",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1893,
																						"src": "715:5:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					{
																						"hexValue": "30",
																						"id": 1919,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "721:1:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						{
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						}
																					],
																					"id": 1913,
																					"name": "priceOut",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2261,
																					"src": "690:8:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_struct$_priceOut_$2261_storage_ptr_$",
																						"typeString": "type(struct IPriceAggregator.priceOut storage pointer)"
																					}
																				},
																				"id": 1920,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "structConstructorCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "690:33:13",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_priceOut_$2261_memory_ptr",
																					"typeString": "struct IPriceAggregator.priceOut memory"
																				}
																			},
																			"src": "677:46:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_priceOut_$2261_memory_ptr",
																				"typeString": "struct IPriceAggregator.priceOut memory"
																			}
																		},
																		"id": 1922,
																		"nodeType": "ExpressionStatement",
																		"src": "677:46:13"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1882,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1879,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1876,
														"src": "506:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1880,
															"name": "inputs",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1857,
															"src": "508:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_priceIn_$2254_memory_ptr_$dyn_memory_ptr",
																"typeString": "struct IPriceAggregator.priceIn memory[] memory"
															}
														},
														"id": 1881,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "508:13:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "506:15:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1967,
												"initializationExpression": {
													"assignments": [
														1876
													],
													"declarations": [
														{
															"constant": false,
															"id": 1876,
															"mutability": "mutable",
															"name": "i",
															"nodeType": "VariableDeclaration",
															"scope": 1967,
															"src": "497:6:13",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1875,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "497:4:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1878,
													"initialValue": {
														"hexValue": "30",
														"id": 1877,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "504:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "497:8:13"
												},
												"loopExpression": {
													"expression": {
														"id": 1884,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "522:3:13",
														"subExpression": {
															"id": 1883,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1876,
															"src": "522:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1885,
													"nodeType": "ExpressionStatement",
													"src": "522:3:13"
												},
												"nodeType": "ForStatement",
												"src": "492:492:13"
											},
											{
												"expression": {
													"id": 1968,
													"name": "outputs",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1867,
													"src": "1004:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_priceOut_$2261_memory_ptr_$dyn_memory_ptr",
														"typeString": "struct IPriceAggregator.priceOut memory[] memory"
													}
												},
												"functionReturnParameters": 1863,
												"id": 1969,
												"nodeType": "Return",
												"src": "997:14:13"
											}
										]
									},
									"functionSelector": "ea8650c5",
									"id": 1971,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getPrices",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1859,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "374:8:13"
									},
									"parameters": {
										"id": 1858,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1857,
												"mutability": "mutable",
												"name": "inputs",
												"nodeType": "VariableDeclaration",
												"scope": 1971,
												"src": "342:23:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_priceIn_$2254_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct IPriceAggregator.priceIn[]"
												},
												"typeName": {
													"baseType": {
														"id": 1855,
														"name": "priceIn",
														"nodeType": "UserDefinedTypeName",
														"referencedDeclaration": 2254,
														"src": "342:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_priceIn_$2254_storage_ptr",
															"typeString": "struct IPriceAggregator.priceIn"
														}
													},
													"id": 1856,
													"nodeType": "ArrayTypeName",
													"src": "342:9:13",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_priceIn_$2254_storage_$dyn_storage_ptr",
														"typeString": "struct IPriceAggregator.priceIn[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "341:25:13"
									},
									"returnParameters": {
										"id": 1863,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1862,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1971,
												"src": "397:17:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_priceOut_$2261_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct IPriceAggregator.priceOut[]"
												},
												"typeName": {
													"baseType": {
														"id": 1860,
														"name": "priceOut",
														"nodeType": "UserDefinedTypeName",
														"referencedDeclaration": 2261,
														"src": "397:8:13",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_priceOut_$2261_storage_ptr",
															"typeString": "struct IPriceAggregator.priceOut"
														}
													},
													"id": 1861,
													"nodeType": "ArrayTypeName",
													"src": "397:10:13",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_priceOut_$2261_storage_$dyn_storage_ptr",
														"typeString": "struct IPriceAggregator.priceOut[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "396:19:13"
									},
									"scope": 2148,
									"src": "323:695:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2316
									],
									"body": {
										"id": 2099,
										"nodeType": "Block",
										"src": "1122:637:13",
										"statements": [
											{
												"assignments": [
													1984
												],
												"declarations": [
													{
														"constant": false,
														"id": 1984,
														"mutability": "mutable",
														"name": "outputs",
														"nodeType": "VariableDeclaration",
														"scope": 2099,
														"src": "1132:26:13",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_existsOut_$2281_memory_ptr_$dyn_memory_ptr",
															"typeString": "struct IPriceAggregator.existsOut[]"
														},
														"typeName": {
															"baseType": {
																"id": 1982,
																"name": "existsOut",
																"nodeType": "UserDefinedTypeName",
																"referencedDeclaration": 2281,
																"src": "1132:9:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_existsOut_$2281_storage_ptr",
																	"typeString": "struct IPriceAggregator.existsOut"
																}
															},
															"id": 1983,
															"nodeType": "ArrayTypeName",
															"src": "1132:11:13",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_existsOut_$2281_storage_$dyn_storage_ptr",
																"typeString": "struct IPriceAggregator.existsOut[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1991,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1988,
																"name": "inputs",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1974,
																"src": "1177:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_existsIn_$2276_memory_ptr_$dyn_memory_ptr",
																	"typeString": "struct IPriceAggregator.existsIn memory[] memory"
																}
															},
															"id": 1989,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "1177:13:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1987,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "1161:15:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_existsOut_$2281_memory_ptr_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (struct IPriceAggregator.existsOut memory[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 1985,
																"name": "existsOut",
																"nodeType": "UserDefinedTypeName",
																"referencedDeclaration": 2281,
																"src": "1165:9:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_existsOut_$2281_storage_ptr",
																	"typeString": "struct IPriceAggregator.existsOut"
																}
															},
															"id": 1986,
															"nodeType": "ArrayTypeName",
															"src": "1165:11:13",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_existsOut_$2281_storage_$dyn_storage_ptr",
																"typeString": "struct IPriceAggregator.existsOut[]"
															}
														}
													},
													"id": 1990,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1161:30:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_existsOut_$2281_memory_ptr_$dyn_memory_ptr",
														"typeString": "struct IPriceAggregator.existsOut memory[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1132:59:13"
											},
											{
												"body": {
													"id": 2095,
													"nodeType": "Block",
													"src": "1231:502:13",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																},
																"id": 2008,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"baseExpression": {
																			"id": 2003,
																			"name": "inputs",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1974,
																			"src": "1245:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_struct$_existsIn_$2276_memory_ptr_$dyn_memory_ptr",
																				"typeString": "struct IPriceAggregator.existsIn memory[] memory"
																			}
																		},
																		"id": 2005,
																		"indexExpression": {
																			"id": 2004,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1993,
																			"src": "1252:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "1245:9:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_existsIn_$2276_memory_ptr",
																			"typeString": "struct IPriceAggregator.existsIn memory"
																		}
																	},
																	"id": 2006,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "providerVersion",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2271,
																	"src": "1245:25:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2007,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1274:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "1245:30:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2048,
															"nodeType": "IfStatement",
															"src": "1241:231:13",
															"trueBody": {
																"id": 2047,
																"nodeType": "Block",
																"src": "1277:195:13",
																"statements": [
																	{
																		"assignments": [
																			2010
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 2010,
																				"mutability": "mutable",
																				"name": "exists",
																				"nodeType": "VariableDeclaration",
																				"scope": 2047,
																				"src": "1291:11:13",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"typeName": {
																					"id": 2009,
																					"name": "bool",
																					"nodeType": "ElementaryTypeName",
																					"src": "1291:4:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 2034,
																		"initialValue": {
																			"arguments": [
																				{
																					"expression": {
																						"baseExpression": {
																							"id": 2013,
																							"name": "inputs",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1974,
																							"src": "1326:6:13",
																							"typeDescriptions": {
																								"typeIdentifier": "t_array$_t_struct$_existsIn_$2276_memory_ptr_$dyn_memory_ptr",
																								"typeString": "struct IPriceAggregator.existsIn memory[] memory"
																							}
																						},
																						"id": 2015,
																						"indexExpression": {
																							"id": 2014,
																							"name": "i",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1993,
																							"src": "1333:1:13",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "1326:9:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_existsIn_$2276_memory_ptr",
																							"typeString": "struct IPriceAggregator.existsIn memory"
																						}
																					},
																					"id": 2016,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "provider",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2269,
																					"src": "1326:18:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"expression": {
																						"baseExpression": {
																							"id": 2017,
																							"name": "inputs",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1974,
																							"src": "1345:6:13",
																							"typeDescriptions": {
																								"typeIdentifier": "t_array$_t_struct$_existsIn_$2276_memory_ptr_$dyn_memory_ptr",
																								"typeString": "struct IPriceAggregator.existsIn memory[] memory"
																							}
																						},
																						"id": 2019,
																						"indexExpression": {
																							"id": 2018,
																							"name": "i",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1993,
																							"src": "1352:1:13",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "1345:9:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_existsIn_$2276_memory_ptr",
																							"typeString": "struct IPriceAggregator.existsIn memory"
																						}
																					},
																					"id": 2020,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "t0",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2265,
																					"src": "1345:12:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"expression": {
																						"baseExpression": {
																							"id": 2021,
																							"name": "inputs",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1974,
																							"src": "1358:6:13",
																							"typeDescriptions": {
																								"typeIdentifier": "t_array$_t_struct$_existsIn_$2276_memory_ptr_$dyn_memory_ptr",
																								"typeString": "struct IPriceAggregator.existsIn memory[] memory"
																							}
																						},
																						"id": 2023,
																						"indexExpression": {
																							"id": 2022,
																							"name": "i",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1993,
																							"src": "1365:1:13",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "1358:9:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_existsIn_$2276_memory_ptr",
																							"typeString": "struct IPriceAggregator.existsIn memory"
																						}
																					},
																					"id": 2024,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "t1",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2267,
																					"src": "1358:12:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"expression": {
																						"baseExpression": {
																							"id": 2025,
																							"name": "inputs",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1974,
																							"src": "1371:6:13",
																							"typeDescriptions": {
																								"typeIdentifier": "t_array$_t_struct$_existsIn_$2276_memory_ptr_$dyn_memory_ptr",
																								"typeString": "struct IPriceAggregator.existsIn memory[] memory"
																							}
																						},
																						"id": 2027,
																						"indexExpression": {
																							"id": 2026,
																							"name": "i",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1993,
																							"src": "1378:1:13",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "1371:9:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_existsIn_$2276_memory_ptr",
																							"typeString": "struct IPriceAggregator.existsIn memory"
																						}
																					},
																					"id": 2028,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "min0",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2273,
																					"src": "1371:14:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"expression": {
																						"baseExpression": {
																							"id": 2029,
																							"name": "inputs",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1974,
																							"src": "1386:6:13",
																							"typeDescriptions": {
																								"typeIdentifier": "t_array$_t_struct$_existsIn_$2276_memory_ptr_$dyn_memory_ptr",
																								"typeString": "struct IPriceAggregator.existsIn memory[] memory"
																							}
																						},
																						"id": 2031,
																						"indexExpression": {
																							"id": 2030,
																							"name": "i",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1993,
																							"src": "1393:1:13",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "1386:9:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_existsIn_$2276_memory_ptr",
																							"typeString": "struct IPriceAggregator.existsIn memory"
																						}
																					},
																					"id": 2032,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "min1",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2275,
																					"src": "1386:14:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 2011,
																					"name": "UniswapV2",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2689,
																					"src": "1305:9:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_UniswapV2_$2689_$",
																						"typeString": "type(library UniswapV2)"
																					}
																				},
																				"id": 2012,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "PoolExists",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2688,
																				"src": "1305:20:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_delegatecall_view$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,address,address,uint256,uint256) view returns (bool)"
																				}
																			},
																			"id": 2033,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1305:96:13",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "1291:110:13"
																	},
																	{
																		"expression": {
																			"id": 2045,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"id": 2035,
																					"name": "outputs",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1984,
																					"src": "1415:7:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_struct$_existsOut_$2281_memory_ptr_$dyn_memory_ptr",
																						"typeString": "struct IPriceAggregator.existsOut memory[] memory"
																					}
																				},
																				"id": 2037,
																				"indexExpression": {
																					"id": 2036,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1993,
																					"src": "1423:1:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "1415:10:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_existsOut_$2281_memory_ptr",
																					"typeString": "struct IPriceAggregator.existsOut memory"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"arguments": [
																					{
																						"expression": {
																							"baseExpression": {
																								"id": 2039,
																								"name": "inputs",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1974,
																								"src": "1438:6:13",
																								"typeDescriptions": {
																									"typeIdentifier": "t_array$_t_struct$_existsIn_$2276_memory_ptr_$dyn_memory_ptr",
																									"typeString": "struct IPriceAggregator.existsIn memory[] memory"
																								}
																							},
																							"id": 2041,
																							"indexExpression": {
																								"id": 2040,
																								"name": "i",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1993,
																								"src": "1445:1:13",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "1438:9:13",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_existsIn_$2276_memory_ptr",
																								"typeString": "struct IPriceAggregator.existsIn memory"
																							}
																						},
																						"id": 2042,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "index",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 2263,
																						"src": "1438:15:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					{
																						"id": 2043,
																						"name": "exists",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2010,
																						"src": "1454:6:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						{
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					],
																					"id": 2038,
																					"name": "existsOut",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2281,
																					"src": "1428:9:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_struct$_existsOut_$2281_storage_ptr_$",
																						"typeString": "type(struct IPriceAggregator.existsOut storage pointer)"
																					}
																				},
																				"id": 2044,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "structConstructorCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "1428:33:13",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_existsOut_$2281_memory_ptr",
																					"typeString": "struct IPriceAggregator.existsOut memory"
																				}
																			},
																			"src": "1415:46:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_existsOut_$2281_memory_ptr",
																				"typeString": "struct IPriceAggregator.existsOut memory"
																			}
																		},
																		"id": 2046,
																		"nodeType": "ExpressionStatement",
																		"src": "1415:46:13"
																	}
																]
															}
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																},
																"id": 2054,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"baseExpression": {
																			"id": 2049,
																			"name": "inputs",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1974,
																			"src": "1477:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_struct$_existsIn_$2276_memory_ptr_$dyn_memory_ptr",
																				"typeString": "struct IPriceAggregator.existsIn memory[] memory"
																			}
																		},
																		"id": 2051,
																		"indexExpression": {
																			"id": 2050,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1993,
																			"src": "1484:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "1477:9:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_existsIn_$2276_memory_ptr",
																			"typeString": "struct IPriceAggregator.existsIn memory"
																		}
																	},
																	"id": 2052,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "providerVersion",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2271,
																	"src": "1477:25:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "33",
																	"id": 2053,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1506:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_3_by_1",
																		"typeString": "int_const 3"
																	},
																	"value": "3"
																},
																"src": "1477:30:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2094,
															"nodeType": "IfStatement",
															"src": "1473:231:13",
															"trueBody": {
																"id": 2093,
																"nodeType": "Block",
																"src": "1509:195:13",
																"statements": [
																	{
																		"assignments": [
																			2056
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 2056,
																				"mutability": "mutable",
																				"name": "exists",
																				"nodeType": "VariableDeclaration",
																				"scope": 2093,
																				"src": "1523:11:13",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"typeName": {
																					"id": 2055,
																					"name": "bool",
																					"nodeType": "ElementaryTypeName",
																					"src": "1523:4:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 2080,
																		"initialValue": {
																			"arguments": [
																				{
																					"expression": {
																						"baseExpression": {
																							"id": 2059,
																							"name": "inputs",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1974,
																							"src": "1558:6:13",
																							"typeDescriptions": {
																								"typeIdentifier": "t_array$_t_struct$_existsIn_$2276_memory_ptr_$dyn_memory_ptr",
																								"typeString": "struct IPriceAggregator.existsIn memory[] memory"
																							}
																						},
																						"id": 2061,
																						"indexExpression": {
																							"id": 2060,
																							"name": "i",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1993,
																							"src": "1565:1:13",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "1558:9:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_existsIn_$2276_memory_ptr",
																							"typeString": "struct IPriceAggregator.existsIn memory"
																						}
																					},
																					"id": 2062,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "provider",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2269,
																					"src": "1558:18:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"expression": {
																						"baseExpression": {
																							"id": 2063,
																							"name": "inputs",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1974,
																							"src": "1577:6:13",
																							"typeDescriptions": {
																								"typeIdentifier": "t_array$_t_struct$_existsIn_$2276_memory_ptr_$dyn_memory_ptr",
																								"typeString": "struct IPriceAggregator.existsIn memory[] memory"
																							}
																						},
																						"id": 2065,
																						"indexExpression": {
																							"id": 2064,
																							"name": "i",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1993,
																							"src": "1584:1:13",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "1577:9:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_existsIn_$2276_memory_ptr",
																							"typeString": "struct IPriceAggregator.existsIn memory"
																						}
																					},
																					"id": 2066,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "t0",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2265,
																					"src": "1577:12:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"expression": {
																						"baseExpression": {
																							"id": 2067,
																							"name": "inputs",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1974,
																							"src": "1590:6:13",
																							"typeDescriptions": {
																								"typeIdentifier": "t_array$_t_struct$_existsIn_$2276_memory_ptr_$dyn_memory_ptr",
																								"typeString": "struct IPriceAggregator.existsIn memory[] memory"
																							}
																						},
																						"id": 2069,
																						"indexExpression": {
																							"id": 2068,
																							"name": "i",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1993,
																							"src": "1597:1:13",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "1590:9:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_existsIn_$2276_memory_ptr",
																							"typeString": "struct IPriceAggregator.existsIn memory"
																						}
																					},
																					"id": 2070,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "t1",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2267,
																					"src": "1590:12:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"expression": {
																						"baseExpression": {
																							"id": 2071,
																							"name": "inputs",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1974,
																							"src": "1603:6:13",
																							"typeDescriptions": {
																								"typeIdentifier": "t_array$_t_struct$_existsIn_$2276_memory_ptr_$dyn_memory_ptr",
																								"typeString": "struct IPriceAggregator.existsIn memory[] memory"
																							}
																						},
																						"id": 2073,
																						"indexExpression": {
																							"id": 2072,
																							"name": "i",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1993,
																							"src": "1610:1:13",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "1603:9:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_existsIn_$2276_memory_ptr",
																							"typeString": "struct IPriceAggregator.existsIn memory"
																						}
																					},
																					"id": 2074,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "min0",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2273,
																					"src": "1603:14:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"expression": {
																						"baseExpression": {
																							"id": 2075,
																							"name": "inputs",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1974,
																							"src": "1618:6:13",
																							"typeDescriptions": {
																								"typeIdentifier": "t_array$_t_struct$_existsIn_$2276_memory_ptr_$dyn_memory_ptr",
																								"typeString": "struct IPriceAggregator.existsIn memory[] memory"
																							}
																						},
																						"id": 2077,
																						"indexExpression": {
																							"id": 2076,
																							"name": "i",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1993,
																							"src": "1625:1:13",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "1618:9:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_existsIn_$2276_memory_ptr",
																							"typeString": "struct IPriceAggregator.existsIn memory"
																						}
																					},
																					"id": 2078,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "min1",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2275,
																					"src": "1618:14:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 2057,
																					"name": "UniswapV3",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3060,
																					"src": "1537:9:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_UniswapV3_$3060_$",
																						"typeString": "type(library UniswapV3)"
																					}
																				},
																				"id": 2058,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "PoolExists",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 3059,
																				"src": "1537:20:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_delegatecall_view$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,address,address,uint256,uint256) view returns (bool)"
																				}
																			},
																			"id": 2079,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1537:96:13",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "1523:110:13"
																	},
																	{
																		"expression": {
																			"id": 2091,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"id": 2081,
																					"name": "outputs",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1984,
																					"src": "1647:7:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_struct$_existsOut_$2281_memory_ptr_$dyn_memory_ptr",
																						"typeString": "struct IPriceAggregator.existsOut memory[] memory"
																					}
																				},
																				"id": 2083,
																				"indexExpression": {
																					"id": 2082,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1993,
																					"src": "1655:1:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "1647:10:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_existsOut_$2281_memory_ptr",
																					"typeString": "struct IPriceAggregator.existsOut memory"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"arguments": [
																					{
																						"expression": {
																							"baseExpression": {
																								"id": 2085,
																								"name": "inputs",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1974,
																								"src": "1670:6:13",
																								"typeDescriptions": {
																									"typeIdentifier": "t_array$_t_struct$_existsIn_$2276_memory_ptr_$dyn_memory_ptr",
																									"typeString": "struct IPriceAggregator.existsIn memory[] memory"
																								}
																							},
																							"id": 2087,
																							"indexExpression": {
																								"id": 2086,
																								"name": "i",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1993,
																								"src": "1677:1:13",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "1670:9:13",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_existsIn_$2276_memory_ptr",
																								"typeString": "struct IPriceAggregator.existsIn memory"
																							}
																						},
																						"id": 2088,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "index",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 2263,
																						"src": "1670:15:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					{
																						"id": 2089,
																						"name": "exists",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2056,
																						"src": "1686:6:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						{
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					],
																					"id": 2084,
																					"name": "existsOut",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2281,
																					"src": "1660:9:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_struct$_existsOut_$2281_storage_ptr_$",
																						"typeString": "type(struct IPriceAggregator.existsOut storage pointer)"
																					}
																				},
																				"id": 2090,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "structConstructorCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "1660:33:13",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_existsOut_$2281_memory_ptr",
																					"typeString": "struct IPriceAggregator.existsOut memory"
																				}
																			},
																			"src": "1647:46:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_existsOut_$2281_memory_ptr",
																				"typeString": "struct IPriceAggregator.existsOut memory"
																			}
																		},
																		"id": 2092,
																		"nodeType": "ExpressionStatement",
																		"src": "1647:46:13"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1999,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1996,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1993,
														"src": "1211:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1997,
															"name": "inputs",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1974,
															"src": "1213:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_existsIn_$2276_memory_ptr_$dyn_memory_ptr",
																"typeString": "struct IPriceAggregator.existsIn memory[] memory"
															}
														},
														"id": 1998,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1213:13:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1211:15:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2096,
												"initializationExpression": {
													"assignments": [
														1993
													],
													"declarations": [
														{
															"constant": false,
															"id": 1993,
															"mutability": "mutable",
															"name": "i",
															"nodeType": "VariableDeclaration",
															"scope": 2096,
															"src": "1202:6:13",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1992,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "1202:4:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1995,
													"initialValue": {
														"hexValue": "30",
														"id": 1994,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1209:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1202:8:13"
												},
												"loopExpression": {
													"expression": {
														"id": 2001,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "1227:3:13",
														"subExpression": {
															"id": 2000,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1993,
															"src": "1227:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2002,
													"nodeType": "ExpressionStatement",
													"src": "1227:3:13"
												},
												"nodeType": "ForStatement",
												"src": "1197:536:13"
											},
											{
												"expression": {
													"id": 2097,
													"name": "outputs",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1984,
													"src": "1745:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_existsOut_$2281_memory_ptr_$dyn_memory_ptr",
														"typeString": "struct IPriceAggregator.existsOut memory[] memory"
													}
												},
												"functionReturnParameters": 1980,
												"id": 2098,
												"nodeType": "Return",
												"src": "1738:14:13"
											}
										]
									},
									"functionSelector": "3d157a46",
									"id": 2100,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "poolsExists",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1976,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1080:8:13"
									},
									"parameters": {
										"id": 1975,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1974,
												"mutability": "mutable",
												"name": "inputs",
												"nodeType": "VariableDeclaration",
												"scope": 2100,
												"src": "1045:24:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_existsIn_$2276_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct IPriceAggregator.existsIn[]"
												},
												"typeName": {
													"baseType": {
														"id": 1972,
														"name": "existsIn",
														"nodeType": "UserDefinedTypeName",
														"referencedDeclaration": 2276,
														"src": "1045:8:13",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_existsIn_$2276_storage_ptr",
															"typeString": "struct IPriceAggregator.existsIn"
														}
													},
													"id": 1973,
													"nodeType": "ArrayTypeName",
													"src": "1045:10:13",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_existsIn_$2276_storage_$dyn_storage_ptr",
														"typeString": "struct IPriceAggregator.existsIn[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1044:26:13"
									},
									"returnParameters": {
										"id": 1980,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1979,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2100,
												"src": "1103:18:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_existsOut_$2281_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct IPriceAggregator.existsOut[]"
												},
												"typeName": {
													"baseType": {
														"id": 1977,
														"name": "existsOut",
														"nodeType": "UserDefinedTypeName",
														"referencedDeclaration": 2281,
														"src": "1103:9:13",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_existsOut_$2281_storage_ptr",
															"typeString": "struct IPriceAggregator.existsOut"
														}
													},
													"id": 1978,
													"nodeType": "ArrayTypeName",
													"src": "1103:11:13",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_existsOut_$2281_storage_$dyn_storage_ptr",
														"typeString": "struct IPriceAggregator.existsOut[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1102:20:13"
									},
									"scope": 2148,
									"src": "1024:735:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										2298
									],
									"body": {
										"id": 2146,
										"nodeType": "Block",
										"src": "1926:235:13",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 2120,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2118,
														"name": "version",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2110,
														"src": "1940:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "32",
														"id": 2119,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1951:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "2"
													},
													"src": "1940:12:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"id": 2134,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2132,
															"name": "version",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2110,
															"src": "2053:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "33",
															"id": 2133,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2064:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_3_by_1",
																"typeString": "int_const 3"
															},
															"value": "3"
														},
														"src": "2053:12:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 2144,
													"nodeType": "IfStatement",
													"src": "2049:105:13",
													"trueBody": {
														"id": 2143,
														"nodeType": "Block",
														"src": "2067:87:13",
														"statements": [
															{
																"expression": {
																	"arguments": [
																		{
																			"id": 2137,
																			"name": "provider",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2102,
																			"src": "2116:8:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 2138,
																			"name": "tA",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2104,
																			"src": "2126:2:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 2139,
																			"name": "tB",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2106,
																			"src": "2130:2:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 2140,
																			"name": "amountIn",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2108,
																			"src": "2134:8:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 2135,
																			"name": "UniswapV3",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3060,
																			"src": "2088:9:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_UniswapV3_$3060_$",
																				"typeString": "type(library UniswapV3)"
																			}
																		},
																		"id": 2136,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "EstimateAmountOut",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2802,
																		"src": "2088:27:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_delegatecall_view$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$_t_uint24_$",
																			"typeString": "function (address,address,address,uint256) view returns (uint256,uint24)"
																		}
																	},
																	"id": 2141,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2088:55:13",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_uint256_$_t_uint24_$",
																		"typeString": "tuple(uint256,uint24)"
																	}
																},
																"functionReturnParameters": 2117,
																"id": 2142,
																"nodeType": "Return",
																"src": "2081:62:13"
															}
														]
													}
												},
												"id": 2145,
												"nodeType": "IfStatement",
												"src": "1936:218:13",
												"trueBody": {
													"id": 2131,
													"nodeType": "Block",
													"src": "1954:90:13",
													"statements": [
														{
															"expression": {
																"components": [
																	{
																		"arguments": [
																			{
																				"id": 2123,
																				"name": "provider",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2102,
																				"src": "2004:8:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 2124,
																				"name": "tA",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2104,
																				"src": "2014:2:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 2125,
																				"name": "tB",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2106,
																				"src": "2018:2:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 2126,
																				"name": "amountIn",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2108,
																				"src": "2021:8:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 2121,
																				"name": "UniswapV2",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2689,
																				"src": "1976:9:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_UniswapV2_$2689_$",
																					"typeString": "type(library UniswapV2)"
																				}
																			},
																			"id": 2122,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "EstimateAmountOut",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2565,
																			"src": "1976:27:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_delegatecall_view$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (address,address,address,uint256) view returns (uint256)"
																			}
																		},
																		"id": 2127,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1976:54:13",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"hexValue": "30",
																		"id": 2128,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2031:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2129,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1975:58:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_uint256_$_t_rational_0_by_1_$",
																	"typeString": "tuple(uint256,int_const 0)"
																}
															},
															"functionReturnParameters": 2117,
															"id": 2130,
															"nodeType": "Return",
															"src": "1968:65:13"
														}
													]
												}
											}
										]
									},
									"functionSelector": "6110358d",
									"id": 2147,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "estimateAmountOut",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2112,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1873:8:13"
									},
									"parameters": {
										"id": 2111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2102,
												"mutability": "mutable",
												"name": "provider",
												"nodeType": "VariableDeclaration",
												"scope": 2147,
												"src": "1793:16:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2101,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1793:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2104,
												"mutability": "mutable",
												"name": "tA",
												"nodeType": "VariableDeclaration",
												"scope": 2147,
												"src": "1810:10:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2103,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1810:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2106,
												"mutability": "mutable",
												"name": "tB",
												"nodeType": "VariableDeclaration",
												"scope": 2147,
												"src": "1821:10:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2105,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1821:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2108,
												"mutability": "mutable",
												"name": "amountIn",
												"nodeType": "VariableDeclaration",
												"scope": 2147,
												"src": "1832:16:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2107,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1832:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2110,
												"mutability": "mutable",
												"name": "version",
												"nodeType": "VariableDeclaration",
												"scope": 2147,
												"src": "1849:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2109,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1849:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1792:71:13"
									},
									"returnParameters": {
										"id": 2117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2114,
												"mutability": "mutable",
												"name": "amountOut",
												"nodeType": "VariableDeclaration",
												"scope": 2147,
												"src": "1897:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2113,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1897:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2116,
												"mutability": "mutable",
												"name": "fee",
												"nodeType": "VariableDeclaration",
												"scope": 2147,
												"src": "1915:10:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 2115,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "1915:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1896:30:13"
									},
									"scope": 2148,
									"src": "1766:395:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2149,
							"src": "270:1894:13"
						}
					],
					"src": "32:2133:13"
				},
				"id": 13
			},
			"contracts/interfaces/IERC20.sol": {
				"ast": {
					"absolutePath": "contracts/interfaces/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							2240
						]
					},
					"id": 2241,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2150,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".6"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:14"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 2240,
							"linearizedBaseContracts": [
								2240
							],
							"name": "IERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"id": 2158,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2157,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2152,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 2158,
												"src": "96:21:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2151,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "96:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2154,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 2158,
												"src": "119:23:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2153,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "119:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2156,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 2158,
												"src": "144:10:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2155,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "144:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "95:60:14"
									},
									"src": "81:75:14"
								},
								{
									"anonymous": false,
									"id": 2166,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2165,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2160,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 2166,
												"src": "176:20:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2159,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "176:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2162,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 2166,
												"src": "198:18:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "198:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2164,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 2166,
												"src": "218:10:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2163,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "218:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "175:54:14"
									},
									"src": "161:69:14"
								},
								{
									"functionSelector": "06fdde03",
									"id": 2171,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2167,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "249:2:14"
									},
									"returnParameters": {
										"id": 2170,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2169,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2171,
												"src": "275:13:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2168,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "275:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "274:15:14"
									},
									"scope": 2240,
									"src": "236:54:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "95d89b41",
									"id": 2176,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2172,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "310:2:14"
									},
									"returnParameters": {
										"id": 2175,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2174,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2176,
												"src": "336:13:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2173,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "336:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "335:15:14"
									},
									"scope": 2240,
									"src": "295:56:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "313ce567",
									"id": 2181,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2177,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "373:2:14"
									},
									"returnParameters": {
										"id": 2180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2179,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2181,
												"src": "399:5:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2178,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "399:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "398:7:14"
									},
									"scope": 2240,
									"src": "356:50:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "18160ddd",
									"id": 2186,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2182,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "431:2:14"
									},
									"returnParameters": {
										"id": 2185,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2184,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2186,
												"src": "457:4:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2183,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "457:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "456:6:14"
									},
									"scope": 2240,
									"src": "411:52:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "70a08231",
									"id": 2193,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2189,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2188,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 2193,
												"src": "487:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2187,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "487:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "486:15:14"
									},
									"returnParameters": {
										"id": 2192,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2191,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2193,
												"src": "525:4:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2190,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "525:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "524:6:14"
									},
									"scope": 2240,
									"src": "468:63:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "dd62ed3e",
									"id": 2202,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2198,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2195,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 2202,
												"src": "555:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2194,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "555:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2197,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 2202,
												"src": "570:15:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2196,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "570:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "554:32:14"
									},
									"returnParameters": {
										"id": 2201,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2200,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2202,
												"src": "610:4:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2199,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "610:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "609:6:14"
									},
									"scope": 2240,
									"src": "536:80:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "095ea7b3",
									"id": 2211,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2207,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2204,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 2211,
												"src": "639:15:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2203,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "639:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2206,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 2211,
												"src": "656:10:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2205,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "656:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "638:29:14"
									},
									"returnParameters": {
										"id": 2210,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2209,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2211,
												"src": "686:4:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2208,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "686:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "685:6:14"
									},
									"scope": 2240,
									"src": "622:70:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a9059cbb",
									"id": 2220,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2216,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2213,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 2220,
												"src": "715:10:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2212,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "715:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2215,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 2220,
												"src": "727:10:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2214,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "727:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "714:24:14"
									},
									"returnParameters": {
										"id": 2219,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2218,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2220,
												"src": "757:4:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2217,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "757:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "756:6:14"
									},
									"scope": 2240,
									"src": "697:66:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "23b872dd",
									"id": 2231,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2222,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 2231,
												"src": "790:12:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "790:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2224,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 2231,
												"src": "804:10:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2223,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "804:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2226,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 2231,
												"src": "816:10:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2225,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "816:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "789:38:14"
									},
									"returnParameters": {
										"id": 2230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2229,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2231,
												"src": "846:4:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2228,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "846:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "845:6:14"
									},
									"scope": 2240,
									"src": "768:84:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "d0e30db0",
									"id": 2234,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "deposit",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2232,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "873:2:14"
									},
									"returnParameters": {
										"id": 2233,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:0:14"
									},
									"scope": 2240,
									"src": "857:36:14",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "2e1a7d4d",
									"id": 2239,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2236,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2239,
												"src": "916:4:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2235,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "916:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "915:6:14"
									},
									"returnParameters": {
										"id": 2238,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "930:0:14"
									},
									"scope": 2240,
									"src": "898:33:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2241,
							"src": "58:875:14"
						}
					],
					"src": "32:901:14"
				},
				"id": 14
			},
			"contracts/interfaces/IPriceAggregator.sol": {
				"ast": {
					"absolutePath": "contracts/interfaces/IPriceAggregator.sol",
					"exportedSymbols": {
						"IPriceAggregator": [
							2317
						]
					},
					"id": 2318,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2242,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".6"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:15"
						},
						{
							"id": 2243,
							"literals": [
								"abicoder",
								"v2"
							],
							"nodeType": "PragmaDirective",
							"src": "57:19:15"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 2317,
							"linearizedBaseContracts": [
								2317
							],
							"name": "IPriceAggregator",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "IPriceAggregator.priceIn",
									"id": 2254,
									"members": [
										{
											"constant": false,
											"id": 2245,
											"mutability": "mutable",
											"name": "index",
											"nodeType": "VariableDeclaration",
											"scope": 2254,
											"src": "140:10:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2244,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "140:4:15",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2247,
											"mutability": "mutable",
											"name": "t0",
											"nodeType": "VariableDeclaration",
											"scope": 2254,
											"src": "160:10:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2246,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "160:7:15",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2249,
											"mutability": "mutable",
											"name": "t1",
											"nodeType": "VariableDeclaration",
											"scope": 2254,
											"src": "180:10:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2248,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "180:7:15",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2251,
											"mutability": "mutable",
											"name": "provider",
											"nodeType": "VariableDeclaration",
											"scope": 2254,
											"src": "200:16:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2250,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "200:7:15",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2253,
											"mutability": "mutable",
											"name": "providerVersion",
											"nodeType": "VariableDeclaration",
											"scope": 2254,
											"src": "226:21:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 2252,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "226:5:15",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "priceIn",
									"nodeType": "StructDefinition",
									"scope": 2317,
									"src": "116:138:15",
									"visibility": "public"
								},
								{
									"canonicalName": "IPriceAggregator.priceOut",
									"id": 2261,
									"members": [
										{
											"constant": false,
											"id": 2256,
											"mutability": "mutable",
											"name": "index",
											"nodeType": "VariableDeclaration",
											"scope": 2261,
											"src": "286:10:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2255,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "286:4:15",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2258,
											"mutability": "mutable",
											"name": "price",
											"nodeType": "VariableDeclaration",
											"scope": 2261,
											"src": "306:13:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2257,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "306:7:15",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2260,
											"mutability": "mutable",
											"name": "fee",
											"nodeType": "VariableDeclaration",
											"scope": 2261,
											"src": "329:10:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint24",
												"typeString": "uint24"
											},
											"typeName": {
												"id": 2259,
												"name": "uint24",
												"nodeType": "ElementaryTypeName",
												"src": "329:6:15",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "priceOut",
									"nodeType": "StructDefinition",
									"scope": 2317,
									"src": "260:86:15",
									"visibility": "public"
								},
								{
									"canonicalName": "IPriceAggregator.existsIn",
									"id": 2276,
									"members": [
										{
											"constant": false,
											"id": 2263,
											"mutability": "mutable",
											"name": "index",
											"nodeType": "VariableDeclaration",
											"scope": 2276,
											"src": "377:10:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2262,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "377:4:15",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2265,
											"mutability": "mutable",
											"name": "t0",
											"nodeType": "VariableDeclaration",
											"scope": 2276,
											"src": "397:10:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2264,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "397:7:15",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2267,
											"mutability": "mutable",
											"name": "t1",
											"nodeType": "VariableDeclaration",
											"scope": 2276,
											"src": "417:10:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2266,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "417:7:15",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2269,
											"mutability": "mutable",
											"name": "provider",
											"nodeType": "VariableDeclaration",
											"scope": 2276,
											"src": "437:16:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2268,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "437:7:15",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2271,
											"mutability": "mutable",
											"name": "providerVersion",
											"nodeType": "VariableDeclaration",
											"scope": 2276,
											"src": "463:21:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 2270,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "463:5:15",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2273,
											"mutability": "mutable",
											"name": "min0",
											"nodeType": "VariableDeclaration",
											"scope": 2276,
											"src": "494:9:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2272,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "494:4:15",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2275,
											"mutability": "mutable",
											"name": "min1",
											"nodeType": "VariableDeclaration",
											"scope": 2276,
											"src": "513:9:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2274,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "513:4:15",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "existsIn",
									"nodeType": "StructDefinition",
									"scope": 2317,
									"src": "352:178:15",
									"visibility": "public"
								},
								{
									"canonicalName": "IPriceAggregator.existsOut",
									"id": 2281,
									"members": [
										{
											"constant": false,
											"id": 2278,
											"mutability": "mutable",
											"name": "index",
											"nodeType": "VariableDeclaration",
											"scope": 2281,
											"src": "563:10:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2277,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "563:4:15",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2280,
											"mutability": "mutable",
											"name": "exists",
											"nodeType": "VariableDeclaration",
											"scope": 2281,
											"src": "583:11:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 2279,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "583:4:15",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "existsOut",
									"nodeType": "StructDefinition",
									"scope": 2317,
									"src": "536:65:15",
									"visibility": "public"
								},
								{
									"functionSelector": "6110358d",
									"id": 2298,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "estimateAmountOut",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2292,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2283,
												"mutability": "mutable",
												"name": "provider",
												"nodeType": "VariableDeclaration",
												"scope": 2298,
												"src": "635:16:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2282,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2285,
												"mutability": "mutable",
												"name": "tA",
												"nodeType": "VariableDeclaration",
												"scope": 2298,
												"src": "652:10:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2284,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2287,
												"mutability": "mutable",
												"name": "tB",
												"nodeType": "VariableDeclaration",
												"scope": 2298,
												"src": "663:10:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2286,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "663:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2289,
												"mutability": "mutable",
												"name": "amountIn",
												"nodeType": "VariableDeclaration",
												"scope": 2298,
												"src": "674:16:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2288,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "674:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2291,
												"mutability": "mutable",
												"name": "version",
												"nodeType": "VariableDeclaration",
												"scope": 2298,
												"src": "691:13:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2290,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "691:5:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:71:15"
									},
									"returnParameters": {
										"id": 2297,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2294,
												"mutability": "mutable",
												"name": "amountOut",
												"nodeType": "VariableDeclaration",
												"scope": 2298,
												"src": "729:17:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2293,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "729:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2296,
												"mutability": "mutable",
												"name": "fee",
												"nodeType": "VariableDeclaration",
												"scope": 2298,
												"src": "747:10:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 2295,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "747:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "728:30:15"
									},
									"scope": 2317,
									"src": "608:151:15",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "ea8650c5",
									"id": 2307,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getPrices",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2302,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2301,
												"mutability": "mutable",
												"name": "inputs",
												"nodeType": "VariableDeclaration",
												"scope": 2307,
												"src": "783:23:15",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_priceIn_$2254_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct IPriceAggregator.priceIn[]"
												},
												"typeName": {
													"baseType": {
														"id": 2299,
														"name": "priceIn",
														"nodeType": "UserDefinedTypeName",
														"referencedDeclaration": 2254,
														"src": "783:7:15",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_priceIn_$2254_storage_ptr",
															"typeString": "struct IPriceAggregator.priceIn"
														}
													},
													"id": 2300,
													"nodeType": "ArrayTypeName",
													"src": "783:9:15",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_priceIn_$2254_storage_$dyn_storage_ptr",
														"typeString": "struct IPriceAggregator.priceIn[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "782:25:15"
									},
									"returnParameters": {
										"id": 2306,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2305,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2307,
												"src": "831:17:15",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_priceOut_$2261_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct IPriceAggregator.priceOut[]"
												},
												"typeName": {
													"baseType": {
														"id": 2303,
														"name": "priceOut",
														"nodeType": "UserDefinedTypeName",
														"referencedDeclaration": 2261,
														"src": "831:8:15",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_priceOut_$2261_storage_ptr",
															"typeString": "struct IPriceAggregator.priceOut"
														}
													},
													"id": 2304,
													"nodeType": "ArrayTypeName",
													"src": "831:10:15",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_priceOut_$2261_storage_$dyn_storage_ptr",
														"typeString": "struct IPriceAggregator.priceOut[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "830:19:15"
									},
									"scope": 2317,
									"src": "764:86:15",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "3d157a46",
									"id": 2316,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "poolsExists",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2311,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2310,
												"mutability": "mutable",
												"name": "inputs",
												"nodeType": "VariableDeclaration",
												"scope": 2316,
												"src": "876:24:15",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_existsIn_$2276_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct IPriceAggregator.existsIn[]"
												},
												"typeName": {
													"baseType": {
														"id": 2308,
														"name": "existsIn",
														"nodeType": "UserDefinedTypeName",
														"referencedDeclaration": 2276,
														"src": "876:8:15",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_existsIn_$2276_storage_ptr",
															"typeString": "struct IPriceAggregator.existsIn"
														}
													},
													"id": 2309,
													"nodeType": "ArrayTypeName",
													"src": "876:10:15",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_existsIn_$2276_storage_$dyn_storage_ptr",
														"typeString": "struct IPriceAggregator.existsIn[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "875:26:15"
									},
									"returnParameters": {
										"id": 2315,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2314,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2316,
												"src": "925:18:15",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_existsOut_$2281_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct IPriceAggregator.existsOut[]"
												},
												"typeName": {
													"baseType": {
														"id": 2312,
														"name": "existsOut",
														"nodeType": "UserDefinedTypeName",
														"referencedDeclaration": 2281,
														"src": "925:9:15",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_existsOut_$2281_storage_ptr",
															"typeString": "struct IPriceAggregator.existsOut"
														}
													},
													"id": 2313,
													"nodeType": "ArrayTypeName",
													"src": "925:11:15",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_existsOut_$2281_storage_$dyn_storage_ptr",
														"typeString": "struct IPriceAggregator.existsOut[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "924:20:15"
									},
									"scope": 2317,
									"src": "855:90:15",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2318,
							"src": "78:869:15"
						}
					],
					"src": "32:917:15"
				},
				"id": 15
			},
			"contracts/libraries/OracleLibrary.sol": {
				"ast": {
					"absolutePath": "contracts/libraries/OracleLibrary.sol",
					"exportedSymbols": {
						"FullMath": [
							1310
						],
						"IUniswapV3Pool": [
							717
						],
						"IUniswapV3PoolActions": [
							813
						],
						"IUniswapV3PoolDerivedState": [
							844
						],
						"IUniswapV3PoolEvents": [
							963
						],
						"IUniswapV3PoolImmutables": [
							1003
						],
						"IUniswapV3PoolOwnerActions": [
							1029
						],
						"IUniswapV3PoolState": [
							1137
						],
						"OracleLibrary": [
							2505
						],
						"TickMath": [
							1845
						]
					},
					"id": 2506,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2319,
							"literals": [
								"solidity",
								"0.7",
								".6"
							],
							"nodeType": "PragmaDirective",
							"src": "32:22:16"
						},
						{
							"absolutePath": "@uniswap/v3-core/contracts/libraries/FullMath.sol",
							"file": "@uniswap/v3-core/contracts/libraries/FullMath.sol",
							"id": 2320,
							"nodeType": "ImportDirective",
							"scope": 2506,
							"sourceUnit": 1311,
							"src": "56:59:16",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@uniswap/v3-core/contracts/libraries/TickMath.sol",
							"file": "@uniswap/v3-core/contracts/libraries/TickMath.sol",
							"id": 2321,
							"nodeType": "ImportDirective",
							"scope": 2506,
							"sourceUnit": 1846,
							"src": "116:59:16",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol",
							"file": "@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol",
							"id": 2322,
							"nodeType": "ImportDirective",
							"scope": 2506,
							"sourceUnit": 718,
							"src": "176:66:16",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 2505,
							"linearizedBaseContracts": [
								2505
							],
							"name": "OracleLibrary",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2406,
										"nodeType": "Block",
										"src": "383:544:16",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															},
															"id": 2334,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2332,
																"name": "secondsAgo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2326,
																"src": "401:10:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 2333,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "415:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "401:15:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4250",
															"id": 2335,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "418:4:16",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6f8c752f16a50d13ae873620fdefd90c2c58e0d13a068366e5a1b685076b71bb",
																"typeString": "literal_string \"BP\""
															},
															"value": "BP"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6f8c752f16a50d13ae873620fdefd90c2c58e0d13a068366e5a1b685076b71bb",
																"typeString": "literal_string \"BP\""
															}
														],
														"id": 2331,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "393:7:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2336,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "393:30:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2337,
												"nodeType": "ExpressionStatement",
												"src": "393:30:16"
											},
											{
												"assignments": [
													2342
												],
												"declarations": [
													{
														"constant": false,
														"id": 2342,
														"mutability": "mutable",
														"name": "secondsAgos",
														"nodeType": "VariableDeclaration",
														"scope": 2406,
														"src": "434:27:16",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint32_$dyn_memory_ptr",
															"typeString": "uint32[]"
														},
														"typeName": {
															"baseType": {
																"id": 2340,
																"name": "uint32",
																"nodeType": "ElementaryTypeName",
																"src": "434:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															},
															"id": 2341,
															"nodeType": "ArrayTypeName",
															"src": "434:8:16",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint32_$dyn_storage_ptr",
																"typeString": "uint32[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2348,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "32",
															"id": 2346,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "477:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															}
														],
														"id": 2345,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "464:12:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint32_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint32[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 2343,
																"name": "uint32",
																"nodeType": "ElementaryTypeName",
																"src": "468:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															},
															"id": 2344,
															"nodeType": "ArrayTypeName",
															"src": "468:8:16",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint32_$dyn_storage_ptr",
																"typeString": "uint32[]"
															}
														}
													},
													"id": 2347,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "464:15:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint32_$dyn_memory_ptr",
														"typeString": "uint32[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "434:45:16"
											},
											{
												"expression": {
													"id": 2353,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2349,
															"name": "secondsAgos",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2342,
															"src": "489:11:16",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint32_$dyn_memory_ptr",
																"typeString": "uint32[] memory"
															}
														},
														"id": 2351,
														"indexExpression": {
															"hexValue": "30",
															"id": 2350,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "501:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "489:14:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2352,
														"name": "secondsAgo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2326,
														"src": "506:10:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"src": "489:27:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"id": 2354,
												"nodeType": "ExpressionStatement",
												"src": "489:27:16"
											},
											{
												"expression": {
													"id": 2359,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2355,
															"name": "secondsAgos",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2342,
															"src": "526:11:16",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint32_$dyn_memory_ptr",
																"typeString": "uint32[] memory"
															}
														},
														"id": 2357,
														"indexExpression": {
															"hexValue": "31",
															"id": 2356,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "538:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "526:14:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 2358,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "543:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "526:18:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"id": 2360,
												"nodeType": "ExpressionStatement",
												"src": "526:18:16"
											},
											{
												"assignments": [
													2365,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 2365,
														"mutability": "mutable",
														"name": "tickCumulatives",
														"nodeType": "VariableDeclaration",
														"scope": 2406,
														"src": "556:30:16",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_int56_$dyn_memory_ptr",
															"typeString": "int56[]"
														},
														"typeName": {
															"baseType": {
																"id": 2363,
																"name": "int56",
																"nodeType": "ElementaryTypeName",
																"src": "556:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_int56",
																	"typeString": "int56"
																}
															},
															"id": 2364,
															"nodeType": "ArrayTypeName",
															"src": "556:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_int56_$dyn_storage_ptr",
																"typeString": "int56[]"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 2372,
												"initialValue": {
													"arguments": [
														{
															"id": 2370,
															"name": "secondsAgos",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2342,
															"src": "633:11:16",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint32_$dyn_memory_ptr",
																"typeString": "uint32[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_array$_t_uint32_$dyn_memory_ptr",
																"typeString": "uint32[] memory"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 2367,
																	"name": "pool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2324,
																	"src": "619:4:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2366,
																"name": "IUniswapV3Pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 717,
																"src": "604:14:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IUniswapV3Pool_$717_$",
																	"typeString": "type(contract IUniswapV3Pool)"
																}
															},
															"id": 2368,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "604:20:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IUniswapV3Pool_$717",
																"typeString": "contract IUniswapV3Pool"
															}
														},
														"id": 2369,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "observe",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 829,
														"src": "604:28:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_array$_t_uint32_$dyn_memory_ptr_$returns$_t_array$_t_int56_$dyn_memory_ptr_$_t_array$_t_uint160_$dyn_memory_ptr_$",
															"typeString": "function (uint32[] memory) view external returns (int56[] memory,uint160[] memory)"
														}
													},
													"id": 2371,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "604:41:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_array$_t_int56_$dyn_memory_ptr_$_t_array$_t_uint160_$dyn_memory_ptr_$",
														"typeString": "tuple(int56[] memory,uint160[] memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "555:90:16"
											},
											{
												"assignments": [
													2374
												],
												"declarations": [
													{
														"constant": false,
														"id": 2374,
														"mutability": "mutable",
														"name": "tickCumulativesDelta",
														"nodeType": "VariableDeclaration",
														"scope": 2406,
														"src": "656:26:16",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int56",
															"typeString": "int56"
														},
														"typeName": {
															"id": 2373,
															"name": "int56",
															"nodeType": "ElementaryTypeName",
															"src": "656:5:16",
															"typeDescriptions": {
																"typeIdentifier": "t_int56",
																"typeString": "int56"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2382,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int56",
														"typeString": "int56"
													},
													"id": 2381,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 2375,
															"name": "tickCumulatives",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2365,
															"src": "685:15:16",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_int56_$dyn_memory_ptr",
																"typeString": "int56[] memory"
															}
														},
														"id": 2377,
														"indexExpression": {
															"hexValue": "31",
															"id": 2376,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "701:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "685:18:16",
														"typeDescriptions": {
															"typeIdentifier": "t_int56",
															"typeString": "int56"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"baseExpression": {
															"id": 2378,
															"name": "tickCumulatives",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2365,
															"src": "706:15:16",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_int56_$dyn_memory_ptr",
																"typeString": "int56[] memory"
															}
														},
														"id": 2380,
														"indexExpression": {
															"hexValue": "30",
															"id": 2379,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "722:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "706:18:16",
														"typeDescriptions": {
															"typeIdentifier": "t_int56",
															"typeString": "int56"
														}
													},
													"src": "685:39:16",
													"typeDescriptions": {
														"typeIdentifier": "t_int56",
														"typeString": "int56"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "656:68:16"
											},
											{
												"expression": {
													"id": 2390,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2383,
														"name": "tick",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2329,
														"src": "737:4:16",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"commonType": {
																	"typeIdentifier": "t_int56",
																	"typeString": "int56"
																},
																"id": 2388,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2386,
																	"name": "tickCumulativesDelta",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2374,
																	"src": "750:20:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int56",
																		"typeString": "int56"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 2387,
																	"name": "secondsAgo",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2326,
																	"src": "773:10:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"src": "750:33:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_int56",
																	"typeString": "int56"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int56",
																	"typeString": "int56"
																}
															],
															"id": 2385,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "744:5:16",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int24_$",
																"typeString": "type(int24)"
															},
															"typeName": {
																"id": 2384,
																"name": "int24",
																"nodeType": "ElementaryTypeName",
																"src": "744:5:16",
																"typeDescriptions": {}
															}
														},
														"id": 2389,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "744:40:16",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"src": "737:47:16",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"id": 2391,
												"nodeType": "ExpressionStatement",
												"src": "737:47:16"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2401,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_int56",
															"typeString": "int56"
														},
														"id": 2394,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2392,
															"name": "tickCumulativesDelta",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2374,
															"src": "843:20:16",
															"typeDescriptions": {
																"typeIdentifier": "t_int56",
																"typeString": "int56"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"hexValue": "30",
															"id": 2393,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "866:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "843:24:16",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int56",
																	"typeString": "int56"
																},
																"id": 2399,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_int56",
																		"typeString": "int56"
																	},
																	"id": 2397,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2395,
																		"name": "tickCumulativesDelta",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2374,
																		"src": "872:20:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int56",
																			"typeString": "int56"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 2396,
																		"name": "secondsAgo",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2326,
																		"src": "895:10:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	},
																	"src": "872:33:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int56",
																		"typeString": "int56"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 2398,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "909:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "872:38:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 2400,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "871:40:16",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "843:68:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2405,
												"nodeType": "IfStatement",
												"src": "839:80:16",
												"trueBody": {
													"expression": {
														"id": 2403,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": false,
														"src": "913:6:16",
														"subExpression": {
															"id": 2402,
															"name": "tick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2329,
															"src": "913:4:16",
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"id": 2404,
													"nodeType": "ExpressionStatement",
													"src": "913:6:16"
												}
											}
										]
									},
									"id": 2407,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "consult",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2327,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2324,
												"mutability": "mutable",
												"name": "pool",
												"nodeType": "VariableDeclaration",
												"scope": 2407,
												"src": "287:12:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2323,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "287:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2326,
												"mutability": "mutable",
												"name": "secondsAgo",
												"nodeType": "VariableDeclaration",
												"scope": 2407,
												"src": "301:17:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 2325,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "301:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "286:33:16"
									},
									"returnParameters": {
										"id": 2330,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2329,
												"mutability": "mutable",
												"name": "tick",
												"nodeType": "VariableDeclaration",
												"scope": 2407,
												"src": "367:10:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 2328,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "367:5:16",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "366:12:16"
									},
									"scope": 2505,
									"src": "270:657:16",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2503,
										"nodeType": "Block",
										"src": "1111:778:16",
										"statements": [
											{
												"assignments": [
													2421
												],
												"declarations": [
													{
														"constant": false,
														"id": 2421,
														"mutability": "mutable",
														"name": "sqrtRatioX96",
														"nodeType": "VariableDeclaration",
														"scope": 2503,
														"src": "1121:20:16",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														},
														"typeName": {
															"id": 2420,
															"name": "uint160",
															"nodeType": "ElementaryTypeName",
															"src": "1121:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2426,
												"initialValue": {
													"arguments": [
														{
															"id": 2424,
															"name": "tick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2409,
															"src": "1172:4:16",
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														],
														"expression": {
															"id": 2422,
															"name": "TickMath",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1845,
															"src": "1144:8:16",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_TickMath_$1845_$",
																"typeString": "type(library TickMath)"
															}
														},
														"id": 2423,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "getSqrtRatioAtTick",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1705,
														"src": "1144:27:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_int24_$returns$_t_uint160_$",
															"typeString": "function (int24) pure returns (uint160)"
														}
													},
													"id": 2425,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1144:33:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1121:56:16"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													},
													"id": 2433,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2427,
														"name": "sqrtRatioX96",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2421,
														"src": "1296:12:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2430,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1317:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint128_$",
																		"typeString": "type(uint128)"
																	},
																	"typeName": {
																		"id": 2429,
																		"name": "uint128",
																		"nodeType": "ElementaryTypeName",
																		"src": "1317:7:16",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint128_$",
																		"typeString": "type(uint128)"
																	}
																],
																"id": 2428,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "1312:4:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2431,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1312:13:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint128",
																"typeString": "type(uint128)"
															}
														},
														"id": 2432,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "1312:17:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														}
													},
													"src": "1296:33:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2501,
													"nodeType": "Block",
													"src": "1602:281:16",
													"statements": [
														{
															"assignments": [
																2468
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2468,
																	"mutability": "mutable",
																	"name": "ratioX128",
																	"nodeType": "VariableDeclaration",
																	"scope": 2501,
																	"src": "1616:17:16",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2467,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "1616:7:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2477,
															"initialValue": {
																"arguments": [
																	{
																		"id": 2471,
																		"name": "sqrtRatioX96",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2421,
																		"src": "1652:12:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint160",
																			"typeString": "uint160"
																		}
																	},
																	{
																		"id": 2472,
																		"name": "sqrtRatioX96",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2421,
																		"src": "1666:12:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint160",
																			"typeString": "uint160"
																		}
																	},
																	{
																		"commonType": {
																			"typeIdentifier": "t_rational_18446744073709551616_by_1",
																			"typeString": "int_const 18446744073709551616"
																		},
																		"id": 2475,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "31",
																			"id": 2473,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1680:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<<",
																		"rightExpression": {
																			"hexValue": "3634",
																			"id": 2474,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1685:2:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "1680:7:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_18446744073709551616_by_1",
																			"typeString": "int_const 18446744073709551616"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint160",
																			"typeString": "uint160"
																		},
																		{
																			"typeIdentifier": "t_uint160",
																			"typeString": "uint160"
																		},
																		{
																			"typeIdentifier": "t_rational_18446744073709551616_by_1",
																			"typeString": "int_const 18446744073709551616"
																		}
																	],
																	"expression": {
																		"id": 2469,
																		"name": "FullMath",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1310,
																		"src": "1636:8:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_FullMath_$1310_$",
																			"typeString": "type(library FullMath)"
																		}
																	},
																	"id": 2470,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "mulDiv",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1266,
																	"src": "1636:15:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 2476,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1636:52:16",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "1616:72:16"
														},
														{
															"expression": {
																"id": 2499,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2478,
																	"name": "quoteAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2418,
																	"src": "1702:11:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 2481,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2479,
																			"name": "baseToken",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2413,
																			"src": "1716:9:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<",
																		"rightExpression": {
																			"id": 2480,
																			"name": "quoteToken",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2415,
																			"src": "1728:10:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "1716:22:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"arguments": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_rational_340282366920938463463374607431768211456_by_1",
																					"typeString": "int_const 3402...(31 digits omitted)...1456"
																				},
																				"id": 2494,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"leftExpression": {
																					"hexValue": "31",
																					"id": 2492,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "1840:1:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<<",
																				"rightExpression": {
																					"hexValue": "313238",
																					"id": 2493,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "1845:3:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_128_by_1",
																						"typeString": "int_const 128"
																					},
																					"value": "128"
																				},
																				"src": "1840:8:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_340282366920938463463374607431768211456_by_1",
																					"typeString": "int_const 3402...(31 digits omitted)...1456"
																				}
																			},
																			{
																				"id": 2495,
																				"name": "baseAmount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2411,
																				"src": "1850:10:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint128",
																					"typeString": "uint128"
																				}
																			},
																			{
																				"id": 2496,
																				"name": "ratioX128",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2468,
																				"src": "1862:9:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_340282366920938463463374607431768211456_by_1",
																					"typeString": "int_const 3402...(31 digits omitted)...1456"
																				},
																				{
																					"typeIdentifier": "t_uint128",
																					"typeString": "uint128"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 2490,
																				"name": "FullMath",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1310,
																				"src": "1824:8:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_FullMath_$1310_$",
																					"typeString": "type(library FullMath)"
																				}
																			},
																			"id": 2491,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "mulDiv",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1266,
																			"src": "1824:15:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 2497,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1824:48:16",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2498,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "1716:156:16",
																	"trueExpression": {
																		"arguments": [
																			{
																				"id": 2484,
																				"name": "ratioX128",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2468,
																				"src": "1773:9:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 2485,
																				"name": "baseAmount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2411,
																				"src": "1784:10:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint128",
																					"typeString": "uint128"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_rational_340282366920938463463374607431768211456_by_1",
																					"typeString": "int_const 3402...(31 digits omitted)...1456"
																				},
																				"id": 2488,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"leftExpression": {
																					"hexValue": "31",
																					"id": 2486,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "1796:1:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<<",
																				"rightExpression": {
																					"hexValue": "313238",
																					"id": 2487,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "1801:3:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_128_by_1",
																						"typeString": "int_const 128"
																					},
																					"value": "128"
																				},
																				"src": "1796:8:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_340282366920938463463374607431768211456_by_1",
																					"typeString": "int_const 3402...(31 digits omitted)...1456"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint128",
																					"typeString": "uint128"
																				},
																				{
																					"typeIdentifier": "t_rational_340282366920938463463374607431768211456_by_1",
																					"typeString": "int_const 3402...(31 digits omitted)...1456"
																				}
																			],
																			"expression": {
																				"id": 2482,
																				"name": "FullMath",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1310,
																				"src": "1757:8:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_FullMath_$1310_$",
																					"typeString": "type(library FullMath)"
																				}
																			},
																			"id": 2483,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "mulDiv",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1266,
																			"src": "1757:15:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 2489,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1757:48:16",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1702:170:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2500,
															"nodeType": "ExpressionStatement",
															"src": "1702:170:16"
														}
													]
												},
												"id": 2502,
												"nodeType": "IfStatement",
												"src": "1292:591:16",
												"trueBody": {
													"id": 2466,
													"nodeType": "Block",
													"src": "1331:265:16",
													"statements": [
														{
															"assignments": [
																2435
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2435,
																	"mutability": "mutable",
																	"name": "ratioX192",
																	"nodeType": "VariableDeclaration",
																	"scope": 2466,
																	"src": "1345:17:16",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2434,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "1345:7:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2442,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2441,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 2438,
																			"name": "sqrtRatioX96",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2421,
																			"src": "1373:12:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		],
																		"id": 2437,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1365:7:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 2436,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "1365:7:16",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2439,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1365:21:16",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2440,
																	"name": "sqrtRatioX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2421,
																	"src": "1389:12:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																"src": "1365:36:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "1345:56:16"
														},
														{
															"expression": {
																"id": 2464,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2443,
																	"name": "quoteAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2418,
																	"src": "1415:11:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 2446,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2444,
																			"name": "baseToken",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2413,
																			"src": "1429:9:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<",
																		"rightExpression": {
																			"id": 2445,
																			"name": "quoteToken",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2415,
																			"src": "1441:10:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "1429:22:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"arguments": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_rational_6277101735386680763835789423207666416102355444464034512896_by_1",
																					"typeString": "int_const 6277...(50 digits omitted)...2896"
																				},
																				"id": 2459,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"leftExpression": {
																					"hexValue": "31",
																					"id": 2457,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "1553:1:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<<",
																				"rightExpression": {
																					"hexValue": "313932",
																					"id": 2458,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "1558:3:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_192_by_1",
																						"typeString": "int_const 192"
																					},
																					"value": "192"
																				},
																				"src": "1553:8:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_6277101735386680763835789423207666416102355444464034512896_by_1",
																					"typeString": "int_const 6277...(50 digits omitted)...2896"
																				}
																			},
																			{
																				"id": 2460,
																				"name": "baseAmount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2411,
																				"src": "1563:10:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint128",
																					"typeString": "uint128"
																				}
																			},
																			{
																				"id": 2461,
																				"name": "ratioX192",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2435,
																				"src": "1575:9:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_6277101735386680763835789423207666416102355444464034512896_by_1",
																					"typeString": "int_const 6277...(50 digits omitted)...2896"
																				},
																				{
																					"typeIdentifier": "t_uint128",
																					"typeString": "uint128"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 2455,
																				"name": "FullMath",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1310,
																				"src": "1537:8:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_FullMath_$1310_$",
																					"typeString": "type(library FullMath)"
																				}
																			},
																			"id": 2456,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "mulDiv",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1266,
																			"src": "1537:15:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 2462,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1537:48:16",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2463,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "1429:156:16",
																	"trueExpression": {
																		"arguments": [
																			{
																				"id": 2449,
																				"name": "ratioX192",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2435,
																				"src": "1486:9:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 2450,
																				"name": "baseAmount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2411,
																				"src": "1497:10:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint128",
																					"typeString": "uint128"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_rational_6277101735386680763835789423207666416102355444464034512896_by_1",
																					"typeString": "int_const 6277...(50 digits omitted)...2896"
																				},
																				"id": 2453,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"leftExpression": {
																					"hexValue": "31",
																					"id": 2451,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "1509:1:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<<",
																				"rightExpression": {
																					"hexValue": "313932",
																					"id": 2452,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "1514:3:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_192_by_1",
																						"typeString": "int_const 192"
																					},
																					"value": "192"
																				},
																				"src": "1509:8:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_6277101735386680763835789423207666416102355444464034512896_by_1",
																					"typeString": "int_const 6277...(50 digits omitted)...2896"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint128",
																					"typeString": "uint128"
																				},
																				{
																					"typeIdentifier": "t_rational_6277101735386680763835789423207666416102355444464034512896_by_1",
																					"typeString": "int_const 6277...(50 digits omitted)...2896"
																				}
																			],
																			"expression": {
																				"id": 2447,
																				"name": "FullMath",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1310,
																				"src": "1470:8:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_FullMath_$1310_$",
																					"typeString": "type(library FullMath)"
																				}
																			},
																			"id": 2448,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "mulDiv",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1266,
																			"src": "1470:15:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 2454,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1470:48:16",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1415:170:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2465,
															"nodeType": "ExpressionStatement",
															"src": "1415:170:16"
														}
													]
												}
											}
										]
									},
									"id": 2504,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getQuoteAtTick",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2416,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2409,
												"mutability": "mutable",
												"name": "tick",
												"nodeType": "VariableDeclaration",
												"scope": 2504,
												"src": "967:10:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 2408,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "967:5:16",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2411,
												"mutability": "mutable",
												"name": "baseAmount",
												"nodeType": "VariableDeclaration",
												"scope": 2504,
												"src": "987:18:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 2410,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "987:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2413,
												"mutability": "mutable",
												"name": "baseToken",
												"nodeType": "VariableDeclaration",
												"scope": 2504,
												"src": "1015:17:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2412,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1015:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2415,
												"mutability": "mutable",
												"name": "quoteToken",
												"nodeType": "VariableDeclaration",
												"scope": 2504,
												"src": "1042:18:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2414,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "957:109:16"
									},
									"returnParameters": {
										"id": 2419,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2418,
												"mutability": "mutable",
												"name": "quoteAmount",
												"nodeType": "VariableDeclaration",
												"scope": 2504,
												"src": "1090:19:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2417,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1090:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1089:21:16"
									},
									"scope": 2505,
									"src": "934:955:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2506,
							"src": "244:1647:16"
						}
					],
					"src": "32:1860:16"
				},
				"id": 16
			},
			"contracts/libraries/UniswapV2.sol": {
				"ast": {
					"absolutePath": "contracts/libraries/UniswapV2.sol",
					"exportedSymbols": {
						"IERC20": [
							2240
						],
						"IUniswapV2Factory": [
							62
						],
						"IUniswapV2Pair": [
							304
						],
						"IUniswapV2Router01": [
							612
						],
						"UniswapV2": [
							2689
						]
					},
					"id": 2690,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2507,
							"literals": [
								"solidity",
								"0.7",
								".6"
							],
							"nodeType": "PragmaDirective",
							"src": "32:22:17"
						},
						{
							"absolutePath": "contracts/interfaces/IERC20.sol",
							"file": "../interfaces/IERC20.sol",
							"id": 2508,
							"nodeType": "ImportDirective",
							"scope": 2690,
							"sourceUnit": 2241,
							"src": "56:34:17",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol",
							"file": "@uniswap/v2-periphery/contracts/interfaces/IUniswapV2Router01.sol",
							"id": 2509,
							"nodeType": "ImportDirective",
							"scope": 2690,
							"sourceUnit": 613,
							"src": "91:75:17",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@uniswap/v2-core/contracts/interfaces/IUniswapV2Pair.sol",
							"file": "@uniswap/v2-core/contracts/interfaces/IUniswapV2Pair.sol",
							"id": 2510,
							"nodeType": "ImportDirective",
							"scope": 2690,
							"sourceUnit": 305,
							"src": "167:66:17",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@uniswap/v2-core/contracts/interfaces/IUniswapV2Factory.sol",
							"file": "@uniswap/v2-core/contracts/interfaces/IUniswapV2Factory.sol",
							"id": 2511,
							"nodeType": "ImportDirective",
							"scope": 2690,
							"sourceUnit": 63,
							"src": "234:69:17",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 2689,
							"linearizedBaseContracts": [
								2689
							],
							"name": "UniswapV2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2564,
										"nodeType": "Block",
										"src": "448:216:17",
										"statements": [
											{
												"assignments": [
													2528
												],
												"declarations": [
													{
														"constant": false,
														"id": 2528,
														"mutability": "mutable",
														"name": "path",
														"nodeType": "VariableDeclaration",
														"scope": 2564,
														"src": "458:21:17",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
															"typeString": "address[]"
														},
														"typeName": {
															"baseType": {
																"id": 2526,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "458:7:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 2527,
															"nodeType": "ArrayTypeName",
															"src": "458:9:17",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																"typeString": "address[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2534,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "32",
															"id": 2532,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "496:1:17",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															}
														],
														"id": 2531,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "482:13:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (address[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 2529,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "486:7:17",
																"stateMutability": "nonpayable",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 2530,
															"nodeType": "ArrayTypeName",
															"src": "486:9:17",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																"typeString": "address[]"
															}
														}
													},
													"id": 2533,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "482:16:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
														"typeString": "address[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "458:40:17"
											},
											{
												"expression": {
													"id": 2539,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2535,
															"name": "path",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2528,
															"src": "508:4:17",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 2537,
														"indexExpression": {
															"hexValue": "30",
															"id": 2536,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "513:1:17",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "508:7:17",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2538,
														"name": "tA",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2515,
														"src": "518:2:17",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "508:12:17",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2540,
												"nodeType": "ExpressionStatement",
												"src": "508:12:17"
											},
											{
												"expression": {
													"id": 2545,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2541,
															"name": "path",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2528,
															"src": "530:4:17",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 2543,
														"indexExpression": {
															"hexValue": "31",
															"id": 2542,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "535:1:17",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "530:7:17",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2544,
														"name": "tB",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2517,
														"src": "540:2:17",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "530:12:17",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2546,
												"nodeType": "ExpressionStatement",
												"src": "530:12:17"
											},
											{
												"assignments": [
													2551
												],
												"declarations": [
													{
														"constant": false,
														"id": 2551,
														"mutability": "mutable",
														"name": "amounts",
														"nodeType": "VariableDeclaration",
														"scope": 2564,
														"src": "552:21:17",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 2549,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "552:4:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2550,
															"nodeType": "ArrayTypeName",
															"src": "552:6:17",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2559,
												"initialValue": {
													"arguments": [
														{
															"id": 2556,
															"name": "amountIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2519,
															"src": "617:8:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2557,
															"name": "path",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2528,
															"src": "626:4:17",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 2553,
																	"name": "router",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2513,
																	"src": "595:6:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2552,
																"name": "IUniswapV2Router01",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 612,
																"src": "576:18:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IUniswapV2Router01_$612_$",
																	"typeString": "type(contract IUniswapV2Router01)"
																}
															},
															"id": 2554,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "576:26:17",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IUniswapV2Router01_$612",
																"typeString": "contract IUniswapV2Router01"
															}
														},
														"id": 2555,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "getAmountsOut",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 600,
														"src": "576:40:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256,address[] memory) view external returns (uint256[] memory)"
														}
													},
													"id": 2558,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "576:55:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "552:79:17"
											},
											{
												"expression": {
													"baseExpression": {
														"id": 2560,
														"name": "amounts",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2551,
														"src": "647:7:17",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[] memory"
														}
													},
													"id": 2562,
													"indexExpression": {
														"hexValue": "31",
														"id": 2561,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "655:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "647:10:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2523,
												"id": 2563,
												"nodeType": "Return",
												"src": "640:17:17"
											}
										]
									},
									"functionSelector": "8c39560e",
									"id": 2565,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "EstimateAmountOut",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2520,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2513,
												"mutability": "mutable",
												"name": "router",
												"nodeType": "VariableDeclaration",
												"scope": 2565,
												"src": "361:14:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2512,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "361:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2515,
												"mutability": "mutable",
												"name": "tA",
												"nodeType": "VariableDeclaration",
												"scope": 2565,
												"src": "376:10:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2514,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "376:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2517,
												"mutability": "mutable",
												"name": "tB",
												"nodeType": "VariableDeclaration",
												"scope": 2565,
												"src": "388:10:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2516,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "388:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2519,
												"mutability": "mutable",
												"name": "amountIn",
												"nodeType": "VariableDeclaration",
												"scope": 2565,
												"src": "399:16:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2518,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "399:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "360:56:17"
									},
									"returnParameters": {
										"id": 2523,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2522,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2565,
												"src": "440:7:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2521,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "440:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "439:9:17"
									},
									"scope": 2689,
									"src": "334:330:17",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2626,
										"nodeType": "Block",
										"src": "759:267:17",
										"statements": [
											{
												"assignments": [
													2577
												],
												"declarations": [
													{
														"constant": false,
														"id": 2577,
														"mutability": "mutable",
														"name": "amountIn",
														"nodeType": "VariableDeclaration",
														"scope": 2626,
														"src": "769:13:17",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2576,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "769:4:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2585,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2584,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "3130",
														"id": 2578,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "785:2:17",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10_by_1",
															"typeString": "int_const 10"
														},
														"value": "10"
													},
													"nodeType": "BinaryOperation",
													"operator": "**",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"arguments": [
																	{
																		"id": 2580,
																		"name": "t0",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2569,
																		"src": "796:2:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2579,
																	"name": "IERC20",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2240,
																	"src": "789:6:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC20_$2240_$",
																		"typeString": "type(contract IERC20)"
																	}
																},
																"id": 2581,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "789:10:17",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$2240",
																	"typeString": "contract IERC20"
																}
															},
															"id": 2582,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "decimals",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2181,
															"src": "789:19:17",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
																"typeString": "function () view external returns (uint8)"
															}
														},
														"id": 2583,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "789:21:17",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "785:25:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "769:41:17"
											},
											{
												"assignments": [
													2590
												],
												"declarations": [
													{
														"constant": false,
														"id": 2590,
														"mutability": "mutable",
														"name": "path",
														"nodeType": "VariableDeclaration",
														"scope": 2626,
														"src": "820:21:17",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
															"typeString": "address[]"
														},
														"typeName": {
															"baseType": {
																"id": 2588,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "820:7:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 2589,
															"nodeType": "ArrayTypeName",
															"src": "820:9:17",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																"typeString": "address[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2596,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "32",
															"id": 2594,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "858:1:17",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															}
														],
														"id": 2593,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "844:13:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (address[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 2591,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "848:7:17",
																"stateMutability": "nonpayable",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 2592,
															"nodeType": "ArrayTypeName",
															"src": "848:9:17",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																"typeString": "address[]"
															}
														}
													},
													"id": 2595,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "844:16:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
														"typeString": "address[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "820:40:17"
											},
											{
												"expression": {
													"id": 2601,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2597,
															"name": "path",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2590,
															"src": "870:4:17",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 2599,
														"indexExpression": {
															"hexValue": "30",
															"id": 2598,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "875:1:17",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "870:7:17",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2600,
														"name": "t0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2569,
														"src": "880:2:17",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "870:12:17",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2602,
												"nodeType": "ExpressionStatement",
												"src": "870:12:17"
											},
											{
												"expression": {
													"id": 2607,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2603,
															"name": "path",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2590,
															"src": "892:4:17",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 2605,
														"indexExpression": {
															"hexValue": "31",
															"id": 2604,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "897:1:17",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "892:7:17",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2606,
														"name": "t1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2571,
														"src": "902:2:17",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "892:12:17",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2608,
												"nodeType": "ExpressionStatement",
												"src": "892:12:17"
											},
											{
												"assignments": [
													2613
												],
												"declarations": [
													{
														"constant": false,
														"id": 2613,
														"mutability": "mutable",
														"name": "amounts",
														"nodeType": "VariableDeclaration",
														"scope": 2626,
														"src": "914:21:17",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 2611,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "914:4:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2612,
															"nodeType": "ArrayTypeName",
															"src": "914:6:17",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2621,
												"initialValue": {
													"arguments": [
														{
															"id": 2618,
															"name": "amountIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2577,
															"src": "979:8:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2619,
															"name": "path",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2590,
															"src": "988:4:17",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 2615,
																	"name": "router",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2567,
																	"src": "957:6:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2614,
																"name": "IUniswapV2Router01",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 612,
																"src": "938:18:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IUniswapV2Router01_$612_$",
																	"typeString": "type(contract IUniswapV2Router01)"
																}
															},
															"id": 2616,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "938:26:17",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IUniswapV2Router01_$612",
																"typeString": "contract IUniswapV2Router01"
															}
														},
														"id": 2617,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "getAmountsOut",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 600,
														"src": "938:40:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256,address[] memory) view external returns (uint256[] memory)"
														}
													},
													"id": 2620,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "938:55:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "914:79:17"
											},
											{
												"expression": {
													"baseExpression": {
														"id": 2622,
														"name": "amounts",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2613,
														"src": "1009:7:17",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[] memory"
														}
													},
													"id": 2624,
													"indexExpression": {
														"hexValue": "31",
														"id": 2623,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1017:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1009:10:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2575,
												"id": 2625,
												"nodeType": "Return",
												"src": "1002:17:17"
											}
										]
									},
									"functionSelector": "c361e0b1",
									"id": 2627,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "Price",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2572,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2567,
												"mutability": "mutable",
												"name": "router",
												"nodeType": "VariableDeclaration",
												"scope": 2627,
												"src": "689:14:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2566,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "689:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2569,
												"mutability": "mutable",
												"name": "t0",
												"nodeType": "VariableDeclaration",
												"scope": 2627,
												"src": "705:10:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2568,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "705:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2571,
												"mutability": "mutable",
												"name": "t1",
												"nodeType": "VariableDeclaration",
												"scope": 2627,
												"src": "716:10:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2570,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "716:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "688:39:17"
									},
									"returnParameters": {
										"id": 2575,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2574,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2627,
												"src": "751:7:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2573,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "751:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "750:9:17"
									},
									"scope": 2689,
									"src": "674:352:17",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2687,
										"nodeType": "Block",
										"src": "1139:332:17",
										"statements": [
											{
												"assignments": [
													2643
												],
												"declarations": [
													{
														"constant": false,
														"id": 2643,
														"mutability": "mutable",
														"name": "pool",
														"nodeType": "VariableDeclaration",
														"scope": 2687,
														"src": "1149:12:17",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2642,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1149:7:17",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2651,
												"initialValue": {
													"arguments": [
														{
															"id": 2648,
															"name": "t0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2631,
															"src": "1199:2:17",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2649,
															"name": "t1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2633,
															"src": "1202:2:17",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 2645,
																	"name": "factory",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2629,
																	"src": "1182:7:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2644,
																"name": "IUniswapV2Factory",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 62,
																"src": "1164:17:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IUniswapV2Factory_$62_$",
																	"typeString": "type(contract IUniswapV2Factory)"
																}
															},
															"id": 2646,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1164:26:17",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IUniswapV2Factory_$62",
																"typeString": "contract IUniswapV2Factory"
															}
														},
														"id": 2647,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "getPair",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 30,
														"src": "1164:34:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,address) view external returns (address)"
														}
													},
													"id": 2650,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1164:41:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1149:56:17"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2657,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2652,
														"name": "pool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2643,
														"src": "1219:4:17",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2655,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1235:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2654,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1227:7:17",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2653,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1227:7:17",
																"typeDescriptions": {}
															}
														},
														"id": 2656,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1227:10:17",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "1219:18:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2660,
												"nodeType": "IfStatement",
												"src": "1215:36:17",
												"trueBody": {
													"expression": {
														"hexValue": "66616c7365",
														"id": 2658,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1246:5:17",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"functionReturnParameters": 2641,
													"id": 2659,
													"nodeType": "Return",
													"src": "1239:12:17"
												}
											},
											{
												"assignments": [
													2662,
													2664,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 2662,
														"mutability": "mutable",
														"name": "r0",
														"nodeType": "VariableDeclaration",
														"scope": 2687,
														"src": "1262:10:17",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint112",
															"typeString": "uint112"
														},
														"typeName": {
															"id": 2661,
															"name": "uint112",
															"nodeType": "ElementaryTypeName",
															"src": "1262:7:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2664,
														"mutability": "mutable",
														"name": "r1",
														"nodeType": "VariableDeclaration",
														"scope": 2687,
														"src": "1274:10:17",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint112",
															"typeString": "uint112"
														},
														"typeName": {
															"id": 2663,
															"name": "uint112",
															"nodeType": "ElementaryTypeName",
															"src": "1274:7:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 2670,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"arguments": [
																{
																	"id": 2666,
																	"name": "pool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2643,
																	"src": "1304:4:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2665,
																"name": "IUniswapV2Pair",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 304,
																"src": "1289:14:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IUniswapV2Pair_$304_$",
																	"typeString": "type(contract IUniswapV2Pair)"
																}
															},
															"id": 2667,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1289:20:17",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IUniswapV2Pair_$304",
																"typeString": "contract IUniswapV2Pair"
															}
														},
														"id": 2668,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "getReserves",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 246,
														"src": "1289:32:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint112_$_t_uint112_$_t_uint32_$",
															"typeString": "function () view external returns (uint112,uint112,uint32)"
														}
													},
													"id": 2669,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1289:34:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint112_$_t_uint112_$_t_uint32_$",
														"typeString": "tuple(uint112,uint112,uint32)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1261:62:17"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2673,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2671,
														"name": "min0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2635,
														"src": "1338:4:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 2672,
														"name": "r0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2662,
														"src": "1345:2:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint112",
															"typeString": "uint112"
														}
													},
													"src": "1338:9:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2679,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2677,
															"name": "min1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2637,
															"src": "1396:4:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 2678,
															"name": "r1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2664,
															"src": "1403:2:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint112",
																"typeString": "uint112"
															}
														},
														"src": "1396:9:17",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 2683,
													"nodeType": "IfStatement",
													"src": "1392:52:17",
													"trueBody": {
														"id": 2682,
														"nodeType": "Block",
														"src": "1407:37:17",
														"statements": [
															{
																"expression": {
																	"hexValue": "66616c7365",
																	"id": 2680,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1428:5:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"functionReturnParameters": 2641,
																"id": 2681,
																"nodeType": "Return",
																"src": "1421:12:17"
															}
														]
													}
												},
												"id": 2684,
												"nodeType": "IfStatement",
												"src": "1333:111:17",
												"trueBody": {
													"id": 2676,
													"nodeType": "Block",
													"src": "1349:37:17",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 2674,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1370:5:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 2641,
															"id": 2675,
															"nodeType": "Return",
															"src": "1363:12:17"
														}
													]
												}
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 2685,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1460:4:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 2641,
												"id": 2686,
												"nodeType": "Return",
												"src": "1453:11:17"
											}
										]
									},
									"functionSelector": "bcbcaa29",
									"id": 2688,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "PoolExists",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2638,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2629,
												"mutability": "mutable",
												"name": "factory",
												"nodeType": "VariableDeclaration",
												"scope": 2688,
												"src": "1052:15:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2628,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1052:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2631,
												"mutability": "mutable",
												"name": "t0",
												"nodeType": "VariableDeclaration",
												"scope": 2688,
												"src": "1068:10:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2630,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1068:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2633,
												"mutability": "mutable",
												"name": "t1",
												"nodeType": "VariableDeclaration",
												"scope": 2688,
												"src": "1079:10:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2632,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1079:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2635,
												"mutability": "mutable",
												"name": "min0",
												"nodeType": "VariableDeclaration",
												"scope": 2688,
												"src": "1090:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2634,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1090:4:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2637,
												"mutability": "mutable",
												"name": "min1",
												"nodeType": "VariableDeclaration",
												"scope": 2688,
												"src": "1100:9:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2636,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1100:4:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1051:59:17"
									},
									"returnParameters": {
										"id": 2641,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2640,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2688,
												"src": "1134:4:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2639,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1134:4:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1133:6:17"
									},
									"scope": 2689,
									"src": "1032:439:17",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2690,
							"src": "305:1169:17"
						}
					],
					"src": "32:1443:17"
				},
				"id": 17
			},
			"contracts/libraries/UniswapV3.sol": {
				"ast": {
					"absolutePath": "contracts/libraries/UniswapV3.sol",
					"exportedSymbols": {
						"FullMath": [
							1310
						],
						"IERC20": [
							2240
						],
						"IUniswapV3Factory": [
							695
						],
						"IUniswapV3Pool": [
							717
						],
						"IUniswapV3PoolActions": [
							813
						],
						"IUniswapV3PoolDerivedState": [
							844
						],
						"IUniswapV3PoolEvents": [
							963
						],
						"IUniswapV3PoolImmutables": [
							1003
						],
						"IUniswapV3PoolOwnerActions": [
							1029
						],
						"IUniswapV3PoolState": [
							1137
						],
						"OracleLibrary": [
							2505
						],
						"TickMath": [
							1845
						],
						"UniswapV3": [
							3060
						]
					},
					"id": 3061,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2691,
							"literals": [
								"solidity",
								"0.7",
								".6"
							],
							"nodeType": "PragmaDirective",
							"src": "32:22:18"
						},
						{
							"absolutePath": "@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol",
							"file": "@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol",
							"id": 2692,
							"nodeType": "ImportDirective",
							"scope": 3061,
							"sourceUnit": 718,
							"src": "56:66:18",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol",
							"file": "@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol",
							"id": 2693,
							"nodeType": "ImportDirective",
							"scope": 3061,
							"sourceUnit": 696,
							"src": "123:69:18",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/libraries/OracleLibrary.sol",
							"file": "./OracleLibrary.sol",
							"id": 2694,
							"nodeType": "ImportDirective",
							"scope": 3061,
							"sourceUnit": 2506,
							"src": "193:29:18",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/interfaces/IERC20.sol",
							"file": "../interfaces/IERC20.sol",
							"id": 2695,
							"nodeType": "ImportDirective",
							"scope": 3061,
							"sourceUnit": 2241,
							"src": "224:34:18",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 3060,
							"linearizedBaseContracts": [
								3060
							],
							"name": "UniswapV3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2801,
										"nodeType": "Block",
										"src": "426:598:18",
										"statements": [
											{
												"assignments": [
													2715
												],
												"declarations": [
													{
														"constant": false,
														"id": 2715,
														"mutability": "mutable",
														"name": "fees",
														"nodeType": "VariableDeclaration",
														"scope": 2801,
														"src": "440:21:18",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint16_$4_memory_ptr",
															"typeString": "uint16[4]"
														},
														"typeName": {
															"baseType": {
																"id": 2713,
																"name": "uint16",
																"nodeType": "ElementaryTypeName",
																"src": "440:6:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																}
															},
															"id": 2714,
															"length": {
																"hexValue": "34",
																"id": 2712,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "447:1:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_4_by_1",
																	"typeString": "int_const 4"
																},
																"value": "4"
															},
															"nodeType": "ArrayTypeName",
															"src": "440:9:18",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint16_$4_storage_ptr",
																"typeString": "uint16[4]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2721,
												"initialValue": {
													"components": [
														{
															"hexValue": "313030",
															"id": 2716,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "465:3:18",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_100_by_1",
																"typeString": "int_const 100"
															},
															"value": "100"
														},
														{
															"hexValue": "353030",
															"id": 2717,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "469:3:18",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_500_by_1",
																"typeString": "int_const 500"
															},
															"value": "500"
														},
														{
															"hexValue": "33303030",
															"id": 2718,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "473:4:18",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_3000_by_1",
																"typeString": "int_const 3000"
															},
															"value": "3000"
														},
														{
															"hexValue": "3130303030",
															"id": 2719,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "478:5:18",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_10000_by_1",
																"typeString": "int_const 10000"
															},
															"value": "10000"
														}
													],
													"id": 2720,
													"isConstant": false,
													"isInlineArray": true,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "464:20:18",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint16_$4_memory_ptr",
														"typeString": "uint16[4] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "440:44:18"
											},
											{
												"body": {
													"id": 2799,
													"nodeType": "Block",
													"src": "520:494:18",
													"statements": [
														{
															"assignments": [
																2733
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2733,
																	"mutability": "mutable",
																	"name": "pool",
																	"nodeType": "VariableDeclaration",
																	"scope": 2799,
																	"src": "538:12:18",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"typeName": {
																		"id": 2732,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "538:7:18",
																		"stateMutability": "nonpayable",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2744,
															"initialValue": {
																"arguments": [
																	{
																		"id": 2738,
																		"name": "tA",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2699,
																		"src": "588:2:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2739,
																		"name": "tB",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2701,
																		"src": "591:2:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"baseExpression": {
																			"id": 2740,
																			"name": "fees",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2715,
																			"src": "594:4:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint16_$4_memory_ptr",
																				"typeString": "uint16[4] memory"
																			}
																		},
																		"id": 2742,
																		"indexExpression": {
																			"id": 2741,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2723,
																			"src": "599:1:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "594:7:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint16",
																			"typeString": "uint16"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint16",
																			"typeString": "uint16"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 2735,
																				"name": "factory",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2697,
																				"src": "571:7:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 2734,
																			"name": "IUniswapV3Factory",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 695,
																			"src": "553:17:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IUniswapV3Factory_$695_$",
																				"typeString": "type(contract IUniswapV3Factory)"
																			}
																		},
																		"id": 2736,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "553:26:18",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IUniswapV3Factory_$695",
																			"typeString": "contract IUniswapV3Factory"
																		}
																	},
																	"id": 2737,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "getPool",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 668,
																	"src": "553:34:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$_t_uint24_$returns$_t_address_$",
																		"typeString": "function (address,address,uint24) view external returns (address)"
																	}
																},
																"id": 2743,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "553:49:18",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "538:64:18"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 2750,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2745,
																	"name": "pool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2733,
																	"src": "624:4:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 2748,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "640:1:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 2747,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "632:7:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 2746,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "632:7:18",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2749,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "632:10:18",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"src": "624:18:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2752,
															"nodeType": "IfStatement",
															"src": "620:32:18",
															"trueBody": {
																"id": 2751,
																"nodeType": "Continue",
																"src": "644:8:18"
															}
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2760,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 2757,
																			"name": "pool",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2733,
																			"src": "696:4:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"expression": {
																			"arguments": [
																				{
																					"id": 2754,
																					"name": "tA",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2699,
																					"src": "682:2:18",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 2753,
																				"name": "IERC20",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2240,
																				"src": "675:6:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_IERC20_$2240_$",
																					"typeString": "type(contract IERC20)"
																				}
																			},
																			"id": 2755,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "675:10:18",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$2240",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 2756,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "balanceOf",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2193,
																		"src": "675:20:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																			"typeString": "function (address) view external returns (uint256)"
																		}
																	},
																	"id": 2758,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "675:26:18",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 2759,
																	"name": "amountIn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2703,
																	"src": "704:8:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "675:37:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2762,
															"nodeType": "IfStatement",
															"src": "671:51:18",
															"trueBody": {
																"id": 2761,
																"nodeType": "Continue",
																"src": "714:8:18"
															}
														},
														{
															"assignments": [
																2764
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2764,
																	"mutability": "mutable",
																	"name": "tick",
																	"nodeType": "VariableDeclaration",
																	"scope": 2799,
																	"src": "740:10:18",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int24",
																		"typeString": "int24"
																	},
																	"typeName": {
																		"id": 2763,
																		"name": "int24",
																		"nodeType": "ElementaryTypeName",
																		"src": "740:5:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2770,
															"initialValue": {
																"arguments": [
																	{
																		"id": 2767,
																		"name": "pool",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2733,
																		"src": "775:4:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"hexValue": "31",
																		"id": 2768,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "780:1:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		}
																	],
																	"expression": {
																		"id": 2765,
																		"name": "OracleLibrary",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2505,
																		"src": "753:13:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_OracleLibrary_$2505_$",
																			"typeString": "type(library OracleLibrary)"
																		}
																	},
																	"id": 2766,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "consult",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2407,
																	"src": "753:21:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint32_$returns$_t_int24_$",
																		"typeString": "function (address,uint32) view returns (int24)"
																	}
																},
																"id": 2769,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "753:29:18",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "740:42:18"
														},
														{
															"assignments": [
																2772
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2772,
																	"mutability": "mutable",
																	"name": "out",
																	"nodeType": "VariableDeclaration",
																	"scope": 2799,
																	"src": "800:11:18",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2771,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "800:7:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2783,
															"initialValue": {
																"arguments": [
																	{
																		"id": 2775,
																		"name": "tick",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2764,
																		"src": "843:4:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 2778,
																				"name": "amountIn",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2703,
																				"src": "856:8:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 2777,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "848:7:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint128_$",
																				"typeString": "type(uint128)"
																			},
																			"typeName": {
																				"id": 2776,
																				"name": "uint128",
																				"nodeType": "ElementaryTypeName",
																				"src": "848:7:18",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2779,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "848:17:18",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint128",
																			"typeString": "uint128"
																		}
																	},
																	{
																		"id": 2780,
																		"name": "tA",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2699,
																		"src": "866:2:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2781,
																		"name": "tB",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2701,
																		"src": "869:2:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		},
																		{
																			"typeIdentifier": "t_uint128",
																			"typeString": "uint128"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 2773,
																		"name": "OracleLibrary",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2505,
																		"src": "814:13:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_OracleLibrary_$2505_$",
																			"typeString": "type(library OracleLibrary)"
																		}
																	},
																	"id": 2774,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "getQuoteAtTick",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2504,
																	"src": "814:28:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_int24_$_t_uint128_$_t_address_$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (int24,uint128,address,address) pure returns (uint256)"
																	}
																},
																"id": 2782,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "814:58:18",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "800:72:18"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2786,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2784,
																	"name": "out",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2772,
																	"src": "894:3:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"id": 2785,
																	"name": "amountOut",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2706,
																	"src": "900:9:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "894:15:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2798,
															"nodeType": "IfStatement",
															"src": "889:101:18",
															"trueBody": {
																"id": 2797,
																"nodeType": "Block",
																"src": "911:79:18",
																"statements": [
																	{
																		"expression": {
																			"id": 2789,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 2787,
																				"name": "amountOut",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2706,
																				"src": "929:9:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 2788,
																				"name": "out",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2772,
																				"src": "941:3:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "929:15:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2790,
																		"nodeType": "ExpressionStatement",
																		"src": "929:15:18"
																	},
																	{
																		"expression": {
																			"id": 2795,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 2791,
																				"name": "fee",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2708,
																				"src": "962:3:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint24",
																					"typeString": "uint24"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"baseExpression": {
																					"id": 2792,
																					"name": "fees",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2715,
																					"src": "968:4:18",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint16_$4_memory_ptr",
																						"typeString": "uint16[4] memory"
																					}
																				},
																				"id": 2794,
																				"indexExpression": {
																					"id": 2793,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2723,
																					"src": "973:1:18",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint8",
																						"typeString": "uint8"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "968:7:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint16",
																					"typeString": "uint16"
																				}
																			},
																			"src": "962:13:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint24",
																				"typeString": "uint24"
																			}
																		},
																		"id": 2796,
																		"nodeType": "ExpressionStatement",
																		"src": "962:13:18"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 2728,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2726,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2723,
														"src": "512:1:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"hexValue": "34",
														"id": 2727,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "514:1:18",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_4_by_1",
															"typeString": "int_const 4"
														},
														"value": "4"
													},
													"src": "512:3:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2800,
												"initializationExpression": {
													"assignments": [
														2723
													],
													"declarations": [
														{
															"constant": false,
															"id": 2723,
															"mutability": "mutable",
															"name": "i",
															"nodeType": "VariableDeclaration",
															"scope": 2800,
															"src": "502:7:18",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															"typeName": {
																"id": 2722,
																"name": "uint8",
																"nodeType": "ElementaryTypeName",
																"src": "502:5:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 2725,
													"initialValue": {
														"hexValue": "30",
														"id": 2724,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "510:1:18",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "502:9:18"
												},
												"loopExpression": {
													"expression": {
														"id": 2730,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "516:3:18",
														"subExpression": {
															"id": 2729,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2723,
															"src": "516:1:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"id": 2731,
													"nodeType": "ExpressionStatement",
													"src": "516:3:18"
												},
												"nodeType": "ForStatement",
												"src": "498:516:18"
											}
										]
									},
									"functionSelector": "8c39560e",
									"id": 2802,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "EstimateAmountOut",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2704,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2697,
												"mutability": "mutable",
												"name": "factory",
												"nodeType": "VariableDeclaration",
												"scope": 2802,
												"src": "317:15:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2696,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "317:7:18",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2699,
												"mutability": "mutable",
												"name": "tA",
												"nodeType": "VariableDeclaration",
												"scope": 2802,
												"src": "333:10:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2698,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "333:7:18",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2701,
												"mutability": "mutable",
												"name": "tB",
												"nodeType": "VariableDeclaration",
												"scope": 2802,
												"src": "344:10:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2700,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "344:7:18",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2703,
												"mutability": "mutable",
												"name": "amountIn",
												"nodeType": "VariableDeclaration",
												"scope": 2802,
												"src": "355:16:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2702,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "355:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "316:56:18"
									},
									"returnParameters": {
										"id": 2709,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2706,
												"mutability": "mutable",
												"name": "amountOut",
												"nodeType": "VariableDeclaration",
												"scope": 2802,
												"src": "397:17:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2705,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "397:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2708,
												"mutability": "mutable",
												"name": "fee",
												"nodeType": "VariableDeclaration",
												"scope": 2802,
												"src": "415:10:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 2707,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "415:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "396:30:18"
									},
									"scope": 3060,
									"src": "290:734:18",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2966,
										"nodeType": "Block",
										"src": "1136:829:18",
										"statements": [
											{
												"assignments": [
													2820
												],
												"declarations": [
													{
														"constant": false,
														"id": 2820,
														"mutability": "mutable",
														"name": "fees",
														"nodeType": "VariableDeclaration",
														"scope": 2966,
														"src": "1146:21:18",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint16_$4_memory_ptr",
															"typeString": "uint16[4]"
														},
														"typeName": {
															"baseType": {
																"id": 2818,
																"name": "uint16",
																"nodeType": "ElementaryTypeName",
																"src": "1146:6:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																}
															},
															"id": 2819,
															"length": {
																"hexValue": "34",
																"id": 2817,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1153:1:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_4_by_1",
																	"typeString": "int_const 4"
																},
																"value": "4"
															},
															"nodeType": "ArrayTypeName",
															"src": "1146:9:18",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint16_$4_storage_ptr",
																"typeString": "uint16[4]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2826,
												"initialValue": {
													"components": [
														{
															"hexValue": "313030",
															"id": 2821,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1171:3:18",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_100_by_1",
																"typeString": "int_const 100"
															},
															"value": "100"
														},
														{
															"hexValue": "353030",
															"id": 2822,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1175:3:18",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_500_by_1",
																"typeString": "int_const 500"
															},
															"value": "500"
														},
														{
															"hexValue": "33303030",
															"id": 2823,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1179:4:18",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_3000_by_1",
																"typeString": "int_const 3000"
															},
															"value": "3000"
														},
														{
															"hexValue": "3130303030",
															"id": 2824,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1184:5:18",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_10000_by_1",
																"typeString": "int_const 10000"
															},
															"value": "10000"
														}
													],
													"id": 2825,
													"isConstant": false,
													"isInlineArray": true,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "1170:20:18",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint16_$4_memory_ptr",
														"typeString": "uint16[4] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1146:44:18"
											},
											{
												"body": {
													"id": 2960,
													"nodeType": "Block",
													"src": "1222:709:18",
													"statements": [
														{
															"assignments": [
																2838
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2838,
																	"mutability": "mutable",
																	"name": "pool",
																	"nodeType": "VariableDeclaration",
																	"scope": 2960,
																	"src": "1232:12:18",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"typeName": {
																		"id": 2837,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1232:7:18",
																		"stateMutability": "nonpayable",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2849,
															"initialValue": {
																"arguments": [
																	{
																		"id": 2843,
																		"name": "t0",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2806,
																		"src": "1282:2:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2844,
																		"name": "t1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2808,
																		"src": "1285:2:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"baseExpression": {
																			"id": 2845,
																			"name": "fees",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2820,
																			"src": "1288:4:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint16_$4_memory_ptr",
																				"typeString": "uint16[4] memory"
																			}
																		},
																		"id": 2847,
																		"indexExpression": {
																			"id": 2846,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2828,
																			"src": "1293:1:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "1288:7:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint16",
																			"typeString": "uint16"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint16",
																			"typeString": "uint16"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 2840,
																				"name": "factory",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2804,
																				"src": "1265:7:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 2839,
																			"name": "IUniswapV3Factory",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 695,
																			"src": "1247:17:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IUniswapV3Factory_$695_$",
																				"typeString": "type(contract IUniswapV3Factory)"
																			}
																		},
																		"id": 2841,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1247:26:18",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IUniswapV3Factory_$695",
																			"typeString": "contract IUniswapV3Factory"
																		}
																	},
																	"id": 2842,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "getPool",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 668,
																	"src": "1247:34:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$_t_uint24_$returns$_t_address_$",
																		"typeString": "function (address,address,uint24) view external returns (address)"
																	}
																},
																"id": 2848,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1247:49:18",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "1232:64:18"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 2855,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2850,
																	"name": "pool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2838,
																	"src": "1310:4:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 2853,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1326:1:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 2852,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1318:7:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 2851,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "1318:7:18",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2854,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1318:10:18",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"src": "1310:18:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2857,
															"nodeType": "IfStatement",
															"src": "1306:32:18",
															"trueBody": {
																"id": 2856,
																"nodeType": "Continue",
																"src": "1330:8:18"
															}
														},
														{
															"assignments": [
																2859
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2859,
																	"mutability": "mutable",
																	"name": "d0",
																	"nodeType": "VariableDeclaration",
																	"scope": 2960,
																	"src": "1358:8:18",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	},
																	"typeName": {
																		"id": 2858,
																		"name": "uint8",
																		"nodeType": "ElementaryTypeName",
																		"src": "1358:5:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2865,
															"initialValue": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"arguments": [
																			{
																				"id": 2861,
																				"name": "t0",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2806,
																				"src": "1376:2:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 2860,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2240,
																			"src": "1369:6:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$2240_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 2862,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1369:10:18",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$2240",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 2863,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "decimals",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2181,
																	"src": "1369:19:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
																		"typeString": "function () view external returns (uint8)"
																	}
																},
																"id": 2864,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1369:21:18",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "1358:32:18"
														},
														{
															"assignments": [
																2867
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2867,
																	"mutability": "mutable",
																	"name": "d1",
																	"nodeType": "VariableDeclaration",
																	"scope": 2960,
																	"src": "1400:8:18",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	},
																	"typeName": {
																		"id": 2866,
																		"name": "uint8",
																		"nodeType": "ElementaryTypeName",
																		"src": "1400:5:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2873,
															"initialValue": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"arguments": [
																			{
																				"id": 2869,
																				"name": "t1",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2808,
																				"src": "1418:2:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 2868,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2240,
																			"src": "1411:6:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$2240_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 2870,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1411:10:18",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$2240",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 2871,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "decimals",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2181,
																	"src": "1411:19:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
																		"typeString": "function () view external returns (uint8)"
																	}
																},
																"id": 2872,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1411:21:18",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "1400:32:18"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2883,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 2878,
																			"name": "pool",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2838,
																			"src": "1476:4:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"expression": {
																			"arguments": [
																				{
																					"id": 2875,
																					"name": "t0",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2806,
																					"src": "1462:2:18",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 2874,
																				"name": "IERC20",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2240,
																				"src": "1455:6:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_IERC20_$2240_$",
																					"typeString": "type(contract IERC20)"
																				}
																			},
																			"id": 2876,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1455:10:18",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$2240",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 2877,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "balanceOf",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2193,
																		"src": "1455:20:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																			"typeString": "function (address) view external returns (uint256)"
																		}
																	},
																	"id": 2879,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1455:26:18",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2882,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"hexValue": "3130",
																		"id": 2880,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1484:2:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_10_by_1",
																			"typeString": "int_const 10"
																		},
																		"value": "10"
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "**",
																	"rightExpression": {
																		"id": 2881,
																		"name": "d0",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2859,
																		"src": "1488:2:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"src": "1484:6:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1455:35:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2885,
															"nodeType": "IfStatement",
															"src": "1451:49:18",
															"trueBody": {
																"id": 2884,
																"nodeType": "Continue",
																"src": "1492:8:18"
															}
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2895,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 2890,
																			"name": "pool",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2838,
																			"src": "1536:4:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"expression": {
																			"arguments": [
																				{
																					"id": 2887,
																					"name": "t1",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2808,
																					"src": "1522:2:18",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 2886,
																				"name": "IERC20",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2240,
																				"src": "1515:6:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_IERC20_$2240_$",
																					"typeString": "type(contract IERC20)"
																				}
																			},
																			"id": 2888,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1515:10:18",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$2240",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 2889,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "balanceOf",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2193,
																		"src": "1515:20:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																			"typeString": "function (address) view external returns (uint256)"
																		}
																	},
																	"id": 2891,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1515:26:18",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2894,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"hexValue": "3130",
																		"id": 2892,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1544:2:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_10_by_1",
																			"typeString": "int_const 10"
																		},
																		"value": "10"
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "**",
																	"rightExpression": {
																		"id": 2893,
																		"name": "d1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2867,
																		"src": "1548:2:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"src": "1544:6:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1515:35:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2897,
															"nodeType": "IfStatement",
															"src": "1511:49:18",
															"trueBody": {
																"id": 2896,
																"nodeType": "Continue",
																"src": "1552:8:18"
															}
														},
														{
															"assignments": [
																2899
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2899,
																	"mutability": "mutable",
																	"name": "tick",
																	"nodeType": "VariableDeclaration",
																	"scope": 2960,
																	"src": "1573:10:18",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int24",
																		"typeString": "int24"
																	},
																	"typeName": {
																		"id": 2898,
																		"name": "int24",
																		"nodeType": "ElementaryTypeName",
																		"src": "1573:5:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2905,
															"initialValue": {
																"arguments": [
																	{
																		"id": 2902,
																		"name": "pool",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2838,
																		"src": "1608:4:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"hexValue": "31",
																		"id": 2903,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1613:1:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		}
																	],
																	"expression": {
																		"id": 2900,
																		"name": "OracleLibrary",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2505,
																		"src": "1586:13:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_OracleLibrary_$2505_$",
																			"typeString": "type(library OracleLibrary)"
																		}
																	},
																	"id": 2901,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "consult",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2407,
																	"src": "1586:21:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint32_$returns$_t_int24_$",
																		"typeString": "function (address,uint32) view returns (int24)"
																	}
																},
																"id": 2904,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1586:29:18",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "1573:42:18"
														},
														{
															"assignments": [
																2907
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2907,
																	"mutability": "mutable",
																	"name": "amountOut",
																	"nodeType": "VariableDeclaration",
																	"scope": 2960,
																	"src": "1625:17:18",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2906,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "1625:7:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2920,
															"initialValue": {
																"arguments": [
																	{
																		"id": 2910,
																		"name": "tick",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2899,
																		"src": "1674:4:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2915,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"hexValue": "3130",
																					"id": 2913,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "1687:2:18",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_10_by_1",
																						"typeString": "int_const 10"
																					},
																					"value": "10"
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "**",
																				"rightExpression": {
																					"id": 2914,
																					"name": "d0",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2859,
																					"src": "1691:2:18",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint8",
																						"typeString": "uint8"
																					}
																				},
																				"src": "1687:6:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 2912,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1679:7:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint128_$",
																				"typeString": "type(uint128)"
																			},
																			"typeName": {
																				"id": 2911,
																				"name": "uint128",
																				"nodeType": "ElementaryTypeName",
																				"src": "1679:7:18",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2916,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1679:15:18",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint128",
																			"typeString": "uint128"
																		}
																	},
																	{
																		"id": 2917,
																		"name": "t0",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2806,
																		"src": "1695:2:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2918,
																		"name": "t1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2808,
																		"src": "1698:2:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		},
																		{
																			"typeIdentifier": "t_uint128",
																			"typeString": "uint128"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 2908,
																		"name": "OracleLibrary",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2505,
																		"src": "1645:13:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_OracleLibrary_$2505_$",
																			"typeString": "type(library OracleLibrary)"
																		}
																	},
																	"id": 2909,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "getQuoteAtTick",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2504,
																	"src": "1645:28:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_int24_$_t_uint128_$_t_address_$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (int24,uint128,address,address) pure returns (uint256)"
																	}
																},
																"id": 2919,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1645:56:18",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "1625:76:18"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																},
																"id": 2923,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2921,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2828,
																	"src": "1715:1:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 2922,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1720:1:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "1715:6:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2935,
															"nodeType": "IfStatement",
															"src": "1711:80:18",
															"trueBody": {
																"id": 2934,
																"nodeType": "Block",
																"src": "1722:69:18",
																"statements": [
																	{
																		"expression": {
																			"id": 2926,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 2924,
																				"name": "price",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2811,
																				"src": "1736:5:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 2925,
																				"name": "amountOut",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2907,
																				"src": "1744:9:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "1736:17:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2927,
																		"nodeType": "ExpressionStatement",
																		"src": "1736:17:18"
																	},
																	{
																		"expression": {
																			"id": 2932,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 2928,
																				"name": "fee",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2813,
																				"src": "1767:3:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint24",
																					"typeString": "uint24"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"baseExpression": {
																					"id": 2929,
																					"name": "fees",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2820,
																					"src": "1773:4:18",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint16_$4_memory_ptr",
																						"typeString": "uint16[4] memory"
																					}
																				},
																				"id": 2931,
																				"indexExpression": {
																					"id": 2930,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2828,
																					"src": "1778:1:18",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint8",
																						"typeString": "uint8"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "1773:7:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint16",
																					"typeString": "uint16"
																				}
																			},
																			"src": "1767:13:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint24",
																				"typeString": "uint24"
																			}
																		},
																		"id": 2933,
																		"nodeType": "ExpressionStatement",
																		"src": "1767:13:18"
																	}
																]
															}
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 2947,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	},
																	"id": 2938,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2936,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2828,
																		"src": "1804:1:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 2937,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1808:1:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "1804:5:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2945,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2941,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2939,
																					"name": "price",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2811,
																					"src": "1814:5:18",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"hexValue": "30",
																					"id": 2940,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "1823:1:18",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				},
																				"src": "1814:10:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "||",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2944,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2942,
																					"name": "amountOut",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2907,
																					"src": "1828:9:18",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2943,
																					"name": "price",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2811,
																					"src": "1840:5:18",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "1828:17:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "1814:31:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		}
																	],
																	"id": 2946,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1813:33:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "1804:42:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2959,
															"nodeType": "IfStatement",
															"src": "1800:121:18",
															"trueBody": {
																"id": 2958,
																"nodeType": "Block",
																"src": "1848:73:18",
																"statements": [
																	{
																		"expression": {
																			"id": 2950,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 2948,
																				"name": "price",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2811,
																				"src": "1862:5:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 2949,
																				"name": "amountOut",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2907,
																				"src": "1870:9:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "1862:17:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2951,
																		"nodeType": "ExpressionStatement",
																		"src": "1862:17:18"
																	},
																	{
																		"expression": {
																			"id": 2956,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 2952,
																				"name": "fee",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2813,
																				"src": "1893:3:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint24",
																					"typeString": "uint24"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"baseExpression": {
																					"id": 2953,
																					"name": "fees",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2820,
																					"src": "1899:4:18",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint16_$4_memory_ptr",
																						"typeString": "uint16[4] memory"
																					}
																				},
																				"id": 2955,
																				"indexExpression": {
																					"id": 2954,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2828,
																					"src": "1904:1:18",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint8",
																						"typeString": "uint8"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "1899:7:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint16",
																					"typeString": "uint16"
																				}
																			},
																			"src": "1893:13:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint24",
																				"typeString": "uint24"
																			}
																		},
																		"id": 2957,
																		"nodeType": "ExpressionStatement",
																		"src": "1893:13:18"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 2833,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2831,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2828,
														"src": "1214:1:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"hexValue": "34",
														"id": 2832,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1216:1:18",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_4_by_1",
															"typeString": "int_const 4"
														},
														"value": "4"
													},
													"src": "1214:3:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2961,
												"initializationExpression": {
													"assignments": [
														2828
													],
													"declarations": [
														{
															"constant": false,
															"id": 2828,
															"mutability": "mutable",
															"name": "i",
															"nodeType": "VariableDeclaration",
															"scope": 2961,
															"src": "1204:7:18",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															"typeName": {
																"id": 2827,
																"name": "uint8",
																"nodeType": "ElementaryTypeName",
																"src": "1204:5:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 2830,
													"initialValue": {
														"hexValue": "30",
														"id": 2829,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1212:1:18",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1204:9:18"
												},
												"loopExpression": {
													"expression": {
														"id": 2835,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "1218:3:18",
														"subExpression": {
															"id": 2834,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2828,
															"src": "1218:1:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"id": 2836,
													"nodeType": "ExpressionStatement",
													"src": "1218:3:18"
												},
												"nodeType": "ForStatement",
												"src": "1200:731:18"
											},
											{
												"expression": {
													"components": [
														{
															"id": 2962,
															"name": "price",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2811,
															"src": "1948:5:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2963,
															"name": "fee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2813,
															"src": "1954:3:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint24",
																"typeString": "uint24"
															}
														}
													],
													"id": 2964,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "1947:11:18",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint24_$",
														"typeString": "tuple(uint256,uint24)"
													}
												},
												"functionReturnParameters": 2814,
												"id": 2965,
												"nodeType": "Return",
												"src": "1940:18:18"
											}
										]
									},
									"functionSelector": "c361e0b1",
									"id": 2967,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "Price",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2809,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2804,
												"mutability": "mutable",
												"name": "factory",
												"nodeType": "VariableDeclaration",
												"scope": 2967,
												"src": "1049:15:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2803,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1049:7:18",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2806,
												"mutability": "mutable",
												"name": "t0",
												"nodeType": "VariableDeclaration",
												"scope": 2967,
												"src": "1065:10:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2805,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1065:7:18",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2808,
												"mutability": "mutable",
												"name": "t1",
												"nodeType": "VariableDeclaration",
												"scope": 2967,
												"src": "1076:10:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2807,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1076:7:18",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1048:39:18"
									},
									"returnParameters": {
										"id": 2814,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2811,
												"mutability": "mutable",
												"name": "price",
												"nodeType": "VariableDeclaration",
												"scope": 2967,
												"src": "1111:13:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2810,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1111:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2813,
												"mutability": "mutable",
												"name": "fee",
												"nodeType": "VariableDeclaration",
												"scope": 2967,
												"src": "1125:10:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 2812,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "1125:6:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1110:26:18"
									},
									"scope": 3060,
									"src": "1034:931:18",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 3058,
										"nodeType": "Block",
										"src": "2079:424:18",
										"statements": [
											{
												"assignments": [
													2987
												],
												"declarations": [
													{
														"constant": false,
														"id": 2987,
														"mutability": "mutable",
														"name": "fees",
														"nodeType": "VariableDeclaration",
														"scope": 3058,
														"src": "2089:21:18",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint16_$4_memory_ptr",
															"typeString": "uint16[4]"
														},
														"typeName": {
															"baseType": {
																"id": 2985,
																"name": "uint16",
																"nodeType": "ElementaryTypeName",
																"src": "2089:6:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																}
															},
															"id": 2986,
															"length": {
																"hexValue": "34",
																"id": 2984,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2096:1:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_4_by_1",
																	"typeString": "int_const 4"
																},
																"value": "4"
															},
															"nodeType": "ArrayTypeName",
															"src": "2089:9:18",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint16_$4_storage_ptr",
																"typeString": "uint16[4]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2993,
												"initialValue": {
													"components": [
														{
															"hexValue": "313030",
															"id": 2988,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2114:3:18",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_100_by_1",
																"typeString": "int_const 100"
															},
															"value": "100"
														},
														{
															"hexValue": "353030",
															"id": 2989,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2118:3:18",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_500_by_1",
																"typeString": "int_const 500"
															},
															"value": "500"
														},
														{
															"hexValue": "33303030",
															"id": 2990,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2122:4:18",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_3000_by_1",
																"typeString": "int_const 3000"
															},
															"value": "3000"
														},
														{
															"hexValue": "3130303030",
															"id": 2991,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2127:5:18",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_10000_by_1",
																"typeString": "int_const 10000"
															},
															"value": "10000"
														}
													],
													"id": 2992,
													"isConstant": false,
													"isInlineArray": true,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "2113:20:18",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint16_$4_memory_ptr",
														"typeString": "uint16[4] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2089:44:18"
											},
											{
												"assignments": [
													2999
												],
												"declarations": [
													{
														"constant": false,
														"id": 2999,
														"mutability": "mutable",
														"name": "fs",
														"nodeType": "VariableDeclaration",
														"scope": 3058,
														"src": "2143:19:18",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint16_$4_memory_ptr",
															"typeString": "uint16[4]"
														},
														"typeName": {
															"baseType": {
																"id": 2997,
																"name": "uint16",
																"nodeType": "ElementaryTypeName",
																"src": "2143:6:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																}
															},
															"id": 2998,
															"length": {
																"hexValue": "34",
																"id": 2996,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2150:1:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_4_by_1",
																	"typeString": "int_const 4"
																},
																"value": "4"
															},
															"nodeType": "ArrayTypeName",
															"src": "2143:9:18",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint16_$4_storage_ptr",
																"typeString": "uint16[4]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3000,
												"nodeType": "VariableDeclarationStatement",
												"src": "2143:19:18"
											},
											{
												"body": {
													"id": 3054,
													"nodeType": "Block",
													"src": "2194:281:18",
													"statements": [
														{
															"assignments": [
																3012
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 3012,
																	"mutability": "mutable",
																	"name": "pool",
																	"nodeType": "VariableDeclaration",
																	"scope": 3054,
																	"src": "2207:12:18",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"typeName": {
																		"id": 3011,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2207:7:18",
																		"stateMutability": "nonpayable",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 3023,
															"initialValue": {
																"arguments": [
																	{
																		"id": 3017,
																		"name": "t0",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2971,
																		"src": "2257:2:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 3018,
																		"name": "t1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2973,
																		"src": "2260:2:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"baseExpression": {
																			"id": 3019,
																			"name": "fees",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2987,
																			"src": "2263:4:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint16_$4_memory_ptr",
																				"typeString": "uint16[4] memory"
																			}
																		},
																		"id": 3021,
																		"indexExpression": {
																			"id": 3020,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3002,
																			"src": "2268:1:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2263:7:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint16",
																			"typeString": "uint16"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint16",
																			"typeString": "uint16"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 3014,
																				"name": "factory",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2969,
																				"src": "2240:7:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 3013,
																			"name": "IUniswapV3Factory",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 695,
																			"src": "2222:17:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IUniswapV3Factory_$695_$",
																				"typeString": "type(contract IUniswapV3Factory)"
																			}
																		},
																		"id": 3015,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2222:26:18",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IUniswapV3Factory_$695",
																			"typeString": "contract IUniswapV3Factory"
																		}
																	},
																	"id": 3016,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "getPool",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 668,
																	"src": "2222:34:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$_t_uint24_$returns$_t_address_$",
																		"typeString": "function (address,address,uint24) view external returns (address)"
																	}
																},
																"id": 3022,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2222:49:18",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2207:64:18"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 3029,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3024,
																	"name": "pool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3012,
																	"src": "2288:4:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 3027,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2304:1:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 3026,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2296:7:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 3025,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2296:7:18",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 3028,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2296:10:18",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"src": "2288:18:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 3031,
															"nodeType": "IfStatement",
															"src": "2284:32:18",
															"trueBody": {
																"id": 3030,
																"nodeType": "Continue",
																"src": "2308:8:18"
															}
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3039,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 3036,
																			"name": "pool",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3012,
																			"src": "2355:4:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"expression": {
																			"arguments": [
																				{
																					"id": 3033,
																					"name": "t0",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2971,
																					"src": "2341:2:18",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 3032,
																				"name": "IERC20",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2240,
																				"src": "2334:6:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_IERC20_$2240_$",
																					"typeString": "type(contract IERC20)"
																				}
																			},
																			"id": 3034,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2334:10:18",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$2240",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 3035,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "balanceOf",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2193,
																		"src": "2334:20:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																			"typeString": "function (address) view external returns (uint256)"
																		}
																	},
																	"id": 3037,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2334:26:18",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 3038,
																	"name": "min0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2975,
																	"src": "2363:4:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2334:33:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 3041,
															"nodeType": "IfStatement",
															"src": "2330:47:18",
															"trueBody": {
																"id": 3040,
																"nodeType": "Continue",
																"src": "2369:8:18"
															}
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3049,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 3046,
																			"name": "pool",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3012,
																			"src": "2416:4:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"expression": {
																			"arguments": [
																				{
																					"id": 3043,
																					"name": "t1",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2973,
																					"src": "2402:2:18",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 3042,
																				"name": "IERC20",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2240,
																				"src": "2395:6:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_IERC20_$2240_$",
																					"typeString": "type(contract IERC20)"
																				}
																			},
																			"id": 3044,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2395:10:18",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$2240",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 3045,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "balanceOf",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2193,
																		"src": "2395:20:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																			"typeString": "function (address) view external returns (uint256)"
																		}
																	},
																	"id": 3047,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2395:26:18",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 3048,
																	"name": "min1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2977,
																	"src": "2424:4:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2395:33:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 3051,
															"nodeType": "IfStatement",
															"src": "2391:47:18",
															"trueBody": {
																"id": 3050,
																"nodeType": "Continue",
																"src": "2430:8:18"
															}
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 3052,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2460:4:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 2981,
															"id": 3053,
															"nodeType": "Return",
															"src": "2453:11:18"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 3007,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3005,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3002,
														"src": "2186:1:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"hexValue": "34",
														"id": 3006,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2188:1:18",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_4_by_1",
															"typeString": "int_const 4"
														},
														"value": "4"
													},
													"src": "2186:3:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3055,
												"initializationExpression": {
													"assignments": [
														3002
													],
													"declarations": [
														{
															"constant": false,
															"id": 3002,
															"mutability": "mutable",
															"name": "i",
															"nodeType": "VariableDeclaration",
															"scope": 3055,
															"src": "2176:7:18",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															"typeName": {
																"id": 3001,
																"name": "uint8",
																"nodeType": "ElementaryTypeName",
																"src": "2176:5:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 3004,
													"initialValue": {
														"hexValue": "30",
														"id": 3003,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2184:1:18",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2176:9:18"
												},
												"loopExpression": {
													"expression": {
														"id": 3009,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "2190:3:18",
														"subExpression": {
															"id": 3008,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3002,
															"src": "2190:1:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"id": 3010,
													"nodeType": "ExpressionStatement",
													"src": "2190:3:18"
												},
												"nodeType": "ForStatement",
												"src": "2172:303:18"
											},
											{
												"expression": {
													"hexValue": "66616c7365",
													"id": 3056,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2491:5:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "false"
												},
												"functionReturnParameters": 2981,
												"id": 3057,
												"nodeType": "Return",
												"src": "2484:12:18"
											}
										]
									},
									"functionSelector": "bcbcaa29",
									"id": 3059,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "PoolExists",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2978,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2969,
												"mutability": "mutable",
												"name": "factory",
												"nodeType": "VariableDeclaration",
												"scope": 3059,
												"src": "1992:15:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2968,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1992:7:18",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2971,
												"mutability": "mutable",
												"name": "t0",
												"nodeType": "VariableDeclaration",
												"scope": 3059,
												"src": "2008:10:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2970,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2008:7:18",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2973,
												"mutability": "mutable",
												"name": "t1",
												"nodeType": "VariableDeclaration",
												"scope": 3059,
												"src": "2019:10:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2972,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2019:7:18",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2975,
												"mutability": "mutable",
												"name": "min0",
												"nodeType": "VariableDeclaration",
												"scope": 3059,
												"src": "2030:9:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2974,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2030:4:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2977,
												"mutability": "mutable",
												"name": "min1",
												"nodeType": "VariableDeclaration",
												"scope": 3059,
												"src": "2040:9:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2976,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2040:4:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1991:59:18"
									},
									"returnParameters": {
										"id": 2981,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2980,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 3059,
												"src": "2074:4:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2979,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2074:4:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2073:6:18"
									},
									"scope": 3060,
									"src": "1972:531:18",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 3061,
							"src": "260:2246:18"
						}
					],
					"src": "32:2476:18"
				},
				"id": 18
			}
		}
	}
}
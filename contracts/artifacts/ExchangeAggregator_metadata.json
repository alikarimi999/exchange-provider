{
	"compiler": {
		"version": "0.8.17+commit.8df45f5f"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_WETH",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "_PriceProvider",
						"type": "address"
					}
				],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "previousOwner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "OwnershipTransferred",
				"type": "event"
			},
			{
				"inputs": [],
				"name": "PriceProvider",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "WETH",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "balanceETH",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "token",
						"type": "address"
					}
				],
				"name": "balanceToken",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_PriceProvider",
						"type": "address"
					}
				],
				"name": "changePriceProvider",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "provider",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "tA",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "tB",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amountIn",
						"type": "uint256"
					},
					{
						"internalType": "uint8",
						"name": "version",
						"type": "uint8"
					}
				],
				"name": "estimateAmountOut",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "amountOut",
						"type": "uint256"
					},
					{
						"internalType": "uint24",
						"name": "fee",
						"type": "uint24"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "renounceOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"components": [
							{
								"internalType": "address",
								"name": "input",
								"type": "address"
							},
							{
								"internalType": "uint256",
								"name": "totalAmount",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "feeAmount",
								"type": "uint256"
							},
							{
								"internalType": "address",
								"name": "swapper",
								"type": "address"
							},
							{
								"internalType": "bytes",
								"name": "data",
								"type": "bytes"
							},
							{
								"internalType": "address",
								"name": "sender",
								"type": "address"
							}
						],
						"internalType": "struct IExchangeAggregator.swapData",
						"name": "data",
						"type": "tuple"
					},
					{
						"internalType": "bytes",
						"name": "sig",
						"type": "bytes"
					}
				],
				"name": "swap",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"components": [
							{
								"internalType": "address",
								"name": "input",
								"type": "address"
							},
							{
								"internalType": "uint256",
								"name": "totalAmount",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "feeAmount",
								"type": "uint256"
							},
							{
								"internalType": "address",
								"name": "swapper",
								"type": "address"
							},
							{
								"internalType": "bytes",
								"name": "data",
								"type": "bytes"
							},
							{
								"internalType": "address",
								"name": "sender",
								"type": "address"
							}
						],
						"internalType": "struct IExchangeAggregator.swapData",
						"name": "data",
						"type": "tuple"
					},
					{
						"internalType": "bytes",
						"name": "sig",
						"type": "bytes"
					}
				],
				"name": "swapNativeIn",
				"outputs": [],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "transferOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "to",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "withdrawETH",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "token",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "to",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "withdrawToken",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {
				"owner()": {
					"details": "Returns the address of the current owner."
				},
				"renounceOwnership()": {
					"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
				},
				"transferOwnership(address)": {
					"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
				}
			},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/ExchangeAggregator.sol": "ExchangeAggregator"
		},
		"evmVersion": "london",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"@openzeppelin/contracts/access/Ownable.sol": {
			"keccak256": "0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673",
			"license": "MIT",
			"urls": [
				"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2",
				"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y"
			]
		},
		"@openzeppelin/contracts/utils/Context.sol": {
			"keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
			"license": "MIT",
			"urls": [
				"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
				"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
			]
		},
		"@openzeppelin/contracts/utils/Strings.sol": {
			"keccak256": "0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a",
			"license": "MIT",
			"urls": [
				"bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634",
				"dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb"
			]
		},
		"@openzeppelin/contracts/utils/cryptography/ECDSA.sol": {
			"keccak256": "0x06b89300806c928957832871b00126458e42874127857569a5fff7ff28093b10",
			"license": "MIT",
			"urls": [
				"bzz-raw://7125301cdee2b0f9ec0b6c1796e4d19a7f601a8bab62a087b4e6c0fc9699f140",
				"dweb:/ipfs/QmZPh1JuMBL1eoJ9igYN1nDFZnnr1NAzSkq9FyvkSsKoKT"
			]
		},
		"@openzeppelin/contracts/utils/math/Math.sol": {
			"keccak256": "0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6",
			"license": "MIT",
			"urls": [
				"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b",
				"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz"
			]
		},
		"contracts/ExchangeAggregator.sol": {
			"keccak256": "0xd141713bc777c8cdd030da74b451cebd5434f6d6cb9c87835e5b7a8bd9914215",
			"license": "MIT",
			"urls": [
				"bzz-raw://7fd08dadc2d746156571ba1a46d5cdbd69cea91e627c7833795863fc383b63c1",
				"dweb:/ipfs/QmcuMpodJcZQAnPUwWhVMkP2qqDtRHBiTe9VHFZvhBd6pK"
			]
		},
		"contracts/interfaces/IERC20.sol": {
			"keccak256": "0x7df9d93243a890a6dc175905d65495ae5726330faa50409ab8460c4c00c672e1",
			"license": "MIT",
			"urls": [
				"bzz-raw://3ff91fe9d915b97343e152f1a15a46e5ff9477e90e90a4431dca38f79eb2cdba",
				"dweb:/ipfs/QmcHUAJs2MfcdbAFTzdQE1eGevxCGHNDXECiuGLDaUs34S"
			]
		},
		"contracts/interfaces/IExchangeAggregator.sol": {
			"keccak256": "0x18cf8828c63885315ed8cf8f05172f2877997c335b3fac1cf883bc89defe5680",
			"license": "MIT",
			"urls": [
				"bzz-raw://4554ae11997b92961c54bf6b8c6973c871924c273e935cb4060653c322b2dcb9",
				"dweb:/ipfs/QmeU2QxxJtiiCCec8PpQmUAKwntSJg3dJRaeuxKVJxWgXX"
			]
		},
		"contracts/interfaces/IPriceProvider.sol": {
			"keccak256": "0x10aafa5da81292a00f6ab5771e0ec63a5cd25cad193af3e2094efb369a21f3a6",
			"license": "MIT",
			"urls": [
				"bzz-raw://802646b8916e5eadc44dd30f1966802b4c0dd755df7436455a43e65abde2a7b4",
				"dweb:/ipfs/QmWpALwUNhctou2bAScQpncfF3rCc3GzLQhxAKrDk3gbkf"
			]
		},
		"contracts/interfaces/IWETH.sol": {
			"keccak256": "0xa668cdcacb61abf369391ced013ff54f6f319ae54b878bb249683c9c2ee8bb3a",
			"license": "MIT",
			"urls": [
				"bzz-raw://5f55dd8af9da29d57debce16f52ce92bfad90953abca33097a5b0a4ce1a1f9fd",
				"dweb:/ipfs/QmWs9ghCYqhENcphNGG9ZSdq5g2XeJfDBQR7EMqGsUrYYX"
			]
		},
		"contracts/libraries/safeCaller.sol": {
			"keccak256": "0x34515481fb168f22bb2eb11198251ce23448dd3e04a9680829803e07a2f42a98",
			"license": "MIT",
			"urls": [
				"bzz-raw://8e18be1d579c0ba509f6791a20aa4051980b9858d18fdbd9b39d58344a75e333",
				"dweb:/ipfs/QmWoK1L9w5fjAvVGeLSpwweDN5f1vJGScudAVDZC3pTzqX"
			]
		},
		"contracts/libraries/transferHelper.sol": {
			"keccak256": "0x00b9228224b990628599b5ed3af4b99304ccb144468b64d4e272f0b16cfb0f8b",
			"license": "GPL-3.0-or-later",
			"urls": [
				"bzz-raw://af149dace2650a68bec6a95eac6dfa2a9acf985893903e75d86bfc22adeda710",
				"dweb:/ipfs/QmY8hThNeTnrM8mFVL4P1RwTBYmhbiyXfghBrP5YshSC2u"
			]
		},
		"contracts/libraries/utils.sol": {
			"keccak256": "0x4b2c957e6b6f776435b67e42e079eecd89e92366a92e80e4bb57cc5574d3d38c",
			"license": "MIT",
			"urls": [
				"bzz-raw://f1371c716580a6c4f35d6930974bc4d81c1c48cb626e6c521d37d0b9c5ea922f",
				"dweb:/ipfs/QmUnTmwpVKrUL1ufznoTbZemagRh2D4XjoX4kQ8CpfudNR"
			]
		}
	},
	"version": 1
}